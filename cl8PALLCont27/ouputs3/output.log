scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product03_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gtudzunv/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 50: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 393: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 642: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 771: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 780: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 814: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 823: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 863: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 943: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 956: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1308: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1337: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1371: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1427: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1458: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1472: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2045: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2056: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2065: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2370: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2610: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2921: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3001: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3040: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 230: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            222 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            81 (36%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         141 (64%)
  Times precision was empty:       3 (1%)
  Times precision was {false}:     140 (63%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      79 (36%)
  Times result was 'false':        135 (61%)
Number of strengthen sat checks:   0
Number of coverage checks:         149421
  BDD entailment checks:           641
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       799
Number of predicates discovered:          42
Number of abstraction locations:          2
Max number of predicates per location:    41
Avg number of predicates per location:    21
Total predicates per abstraction:         2792
Max number of predicates per abstraction: 41
Avg number of predicates per abstraction: 12.75
Number of irrelevant predicates:          140 (5%)
Number of preds handled by boolean abs:   2652 (95%)
  Total number of models for allsat:      13378
  Max number of models for allsat:        376
  Avg number of models for allsat:        169.34

Time for post operator:                  5.822s
  Time for path formula creation:        5.525s
Time for strengthen operator:            0.530s
Time for prec operator:                125.249s
  Time for abstraction:                124.752s (Max:     2.868s, Count: 222)
    Boolean abstraction:               119.921s
    Solving time:                       15.146s (Max:     0.332s)
    Model enumeration time:            104.233s
    Time for BDD construction:           1.269s (Max:     0.043s)
Time for merge operator:                 1.733s
Time for coverage check:                 0.047s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):   119.379s

Number of path formula cache hits:   320853 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.003s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               147324
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       22458 (count: 10943, min: 0, max: 1182, avg: 2.05)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.786s
  Time for transition matches:                         0.383s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       356336 (count: 356336, min: 1, max: 1, avg: 1.00) [1 x 356336]

CPA algorithm statistics
------------------------
Number of iterations:            265334
Max size of waitlist:            33
Average size of waitlist:        16
Number of computed successors:   339921
Max successors for one state:    2
Number of times merged:          74390
Number of times stopped:         74397
Number of times breaked:         6

Total time for CPA algorithm:       146.741s (Max:    36.514s)
  Time for choose from waitlist:      0.262s
  Time for precision adjustment:    128.113s
  Time for transfer relation:        11.823s
  Time for merge operator:            3.412s
  Time for stop operator:             0.566s
  Time for adding to reached set:     0.818s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  19 (count: 6, min: 2, max: 5, avg: 3.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.488s
  Counterexample analysis:                             3.420s (Max:     0.976s, Calls: 6)
    Refinement sat check:                              3.044s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.025s
  Precision update:                                    0.002s
  ARG update:                                          0.936s

Length of refined path (in blocks):                      19 (count: 6, min: 2, max: 5, avg: 3.17)
Number of affected states:                               13 (count: 6, min: 1, max: 4, avg: 2.17)
Length (states) of path with itp 'true':                  0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        13 (count: 6, min: 1, max: 4, avg: 2.17)
Length (states) of path with itp 'false':                 0 (count: 6, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           7 (count: 6, min: 0, max: 3, avg: 1.17)
Equal non-trivial interpolants along paths:               0 (count: 6, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 67279
Max. size of reached set after ref.:  3747
Avg. size of reached set before ref.: 36679.67
Avg. size of reached set after ref.:  3747.00

Total time for CEGAR algorithm:     151.807s
Time for refinements:                 5.007s
Average time for refinement:          0.834s
Max time for refinement:              1.322s

Code Coverage
-----------------------------
  Function coverage:      0.589
  Visited lines:          994
  Total lines:            1708
  Line coverage:          0.582
  Visited conditions:     586
  Total conditions:       754
  Condition coverage:     0.777

CPAchecker general statistics
-----------------------------
Number of program locations:     2241
Number of CFA edges:             2732
Number of relevant variables:    296
Number of functions:             73
Number of loops:                 9
Size of reached set:             67794
  Number of reached locations:   1126 (50%)
    Avg states per location:     60
    Max states per location:     565 (at node N1782)
  Number of reached functions:   43 (59%)
  Number of partitions:          67777
    Avg size of partitions:      1
    Max size of partitions:      18 (with key [N2541 (before lines 3187-3215), Function cleanup called from node N400, stack depth 4 [4a8b5227], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          4.598s
  Time for loading CPAs:          0.890s
  Time for loading parser:        0.793s
  Time for CFA construction:      2.649s
    Time for parsing file(s):     0.728s
    Time for AST to CFA:          0.812s
    Time for CFA sanity check:    0.277s
    Time for post-processing:     0.653s
      Time for var class.:        0.364s
Time for Analysis:              151.807s
CPU time for analysis:          151.790s
Time for analyzing result:        0.073s
Total time for CPAchecker:      156.411s
Total CPU time for CPAchecker:  156.390s
Time for statistics:              1.054s

Time for Garbage Collector:       3.373s (in 88 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                195MB (   186 MiB) max;    119MB (   114 MiB) avg;    201MB (   192 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     34MB (    33 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           199MB (   189 MiB) max;    178MB (   169 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8211MB (  7830 MiB) max;   8166MB (  7788 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
