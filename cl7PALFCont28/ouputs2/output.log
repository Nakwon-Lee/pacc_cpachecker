scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gyi7owb7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 602: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 634: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 643: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 706: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1492: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1996: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2043: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2135: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2359: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2585: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2661: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2737: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2774: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2811: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2848: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1119: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            371365 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  361964 (97%)
  Because of loop head:            9278 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         123 (0%)
  Times precision was empty:       4188 (1%)
  Times precision was {false}:     266 (0%)
  Times result was cached:         329452 (89%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      37459 (10%)
  Times result was 'false':        6727 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1555486
  BDD entailment checks:           539042
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          97
Number of abstraction locations:          149
Max number of predicates per location:    32
Avg number of predicates per location:    13
Total predicates per abstraction:         4570906
Max number of predicates per abstraction: 32
Avg number of predicates per abstraction: 121.16
Number of irrelevant predicates:          1520544 (33%)
Number of preds handled by boolean abs:   496567 (11%)
  Total number of models for allsat:      5563715
  Max number of models for allsat:        10696
  Avg number of models for allsat:        148.53

Time for post operator:                 11.648s
  Time for path formula creation:       10.771s
Time for strengthen operator:            2.353s
Time for prec operator:                810.380s
  Time for abstraction:                806.565s (Max:     2.440s, Count: 371365)
    Boolean abstraction:               651.375s
    Solving time:                       72.431s (Max:     0.042s)
    Model enumeration time:            393.362s
    Time for BDD construction:         181.035s (Max:     1.233s)
Time for merge operator:                 2.396s
Time for coverage check:                 2.319s
  Time for BDD entailment checks:        2.159s
Total time for SMT solver (w/o itp):   465.802s

Number of path formula cache hits:   3641034 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.826s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               143115
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      633013 (count: 992913, min: 0, max: 5839, avg: 0.64)
Time for BDD node cleanup:                             0.249s
Time for BDD garbage collection:                       4.947s (in 907 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.021s
  Time for transition matches:                         1.571s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      3284585 (count: 3284585, min: 1, max: 1, avg: 1.00) [1 x 3284585]

CPA algorithm statistics
------------------------
Number of iterations:            2527920
Max size of waitlist:            380
Average size of waitlist:        94
Number of computed successors:   3079364
Max successors for one state:    2
Number of times merged:          508222
Number of times stopped:         545227
Number of times breaked:         123

Total time for CPA algorithm:       877.411s (Max:   120.213s)
  Time for choose from waitlist:      0.590s
  Time for precision adjustment:    824.522s
  Time for transfer relation:        32.878s
  Time for merge operator:            7.104s
  Time for stop operator:             4.705s
  Time for adding to reached set:     2.753s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   123
Avg. length of target path (in blocks):               17378 (count: 123, min: 73, max: 214, avg: 141.28)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  15.599s
  Counterexample analysis:                             9.658s (Max:     0.258s, Calls: 123)
    Refinement sat check:                              3.310s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.026s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.171s
  Precision update:                                    0.175s
  ARG update:                                          5.348s

Length of refined path (in blocks):                    9280 (count: 123, min: 39, max: 180, avg: 75.45)
Number of affected states:                             7189 (count: 123, min: 1, max: 179, avg: 58.45)
Length (states) of path with itp 'true':               1968 (count: 123, min: 0, max: 50, avg: 16.00)
Length (states) of path with itp non-trivial itp:      7189 (count: 123, min: 1, max: 179, avg: 58.45)
Length (states) of path with itp 'false':               123 (count: 123, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         676 (count: 123, min: 0, max: 27, avg: 5.50)
Equal non-trivial interpolants along paths:            6390 (count: 123, min: 0, max: 177, avg: 51.95)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                123
Number of successful refinements:     123
Number of failed refinements:         0
Max. size of reached set before ref.: 119771
Max. size of reached set after ref.:  100338
Avg. size of reached set before ref.: 34817.16
Avg. size of reached set after ref.:  14876.07

Total time for CEGAR algorithm:     897.585s
Time for refinements:                18.761s
Average time for refinement:          0.152s
Max time for refinement:              1.108s

Code Coverage
-----------------------------
  Function coverage:      0.308
  Visited lines:          495
  Total lines:            1397
  Line coverage:          0.354
  Visited conditions:     200
  Total conditions:       488
  Condition coverage:     0.410

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             74655
  Number of reached locations:   481 (25%)
    Avg states per location:     155
    Max states per location:     760 (at node N1523)
  Number of reached functions:   33 (31%)
  Number of partitions:          73905
    Avg size of partitions:      1
    Max size of partitions:      76 (with key [N441 (before lines 772-939), Function test called from node N86, stack depth 2 [1e89d5e8], stack [main, test]])
  Number of target states:       0
  Size of final wait list        161

Time for analysis setup:          2.731s
  Time for loading CPAs:          0.560s
  Time for loading parser:        0.497s
  Time for CFA construction:      1.537s
    Time for parsing file(s):     0.433s
    Time for AST to CFA:          0.456s
    Time for CFA sanity check:    0.131s
    Time for post-processing:     0.384s
      Time for var class.:        0.220s
Time for Analysis:              897.586s
CPU time for analysis:          897.560s
Total time for CPAchecker:      900.320s
Total CPU time for CPAchecker:  900.290s
Time for statistics:              1.008s

Time for Garbage Collector:      35.164s (in 1547 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                491MB (   468 MiB) max;    256MB (   244 MiB) avg;    511MB (   488 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           560MB (   534 MiB) max;    370MB (   352 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   9776MB (  9323 MiB) max;   8833MB (  8424 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
