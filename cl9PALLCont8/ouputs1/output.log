scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-video-arkfb.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_i453nvpo/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7193: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7256: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5369: Function pointer *(info->dac_write_regs) with type void (*)(void *data, u8 *code, int count) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4268: Function pointer *(pv_cpu_ops.io_delay) with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function console_lock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4268: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function svga_set_default_gfx_regs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function svga_set_default_atc_regs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function svga_set_default_seq_regs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function svga_set_default_crt_regs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function svga_wcrt_multi to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function svga_match_format to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5369: Ignoring function call through function pointer *(info->dac_write_regs): (*(info->dac_write_regs))(info->data, code, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function svga_set_textmode_vga_regs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5399: Ignoring function call through function pointer *(info->dacops->dac_set_freq): tmp___7 = (*(info->dacops->dac_set_freq))(info, channel, freq); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function svga_compute_pll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5379: Ignoring function call through function pointer *(info->dac_write_regs): (*(info->dac_write_regs))(info->data, code, count); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function svga_set_timings to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_set_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function console_unlock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_alloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtrr_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_dealloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5409: Ignoring function call through function pointer *(info->dacops->dac_release): (*(info->dacops->dac_release))(info); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfb_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfb_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function svga_check_timings to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function restore_vga to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function save_vga to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function svga_tilecursor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2201 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            2122 (96%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         79 (4%)
  Times precision was empty:       637 (29%)
  Times precision was {false}:     97 (4%)
  Times result was cached:         1311 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      156 (7%)
  Times result was 'false':        55 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         52042
  BDD entailment checks:           1902
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       454
Number of predicates discovered:          3
Number of abstraction locations:          12
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         2943
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 11.63
Number of irrelevant predicates:          1582 (54%)
Number of preds handled by boolean abs:   194 (7%)
  Total number of models for allsat:      156
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                 10.029s
  Time for path formula creation:        9.680s
Time for strengthen operator:            0.624s
Time for prec operator:                 10.040s
  Time for abstraction:                  9.359s (Max:     0.578s, Count: 2201)
    Boolean abstraction:                 3.740s
    Solving time:                        5.765s (Max:     0.484s)
    Model enumeration time:              0.224s
    Time for BDD construction:           0.084s (Max:     0.012s)
Time for merge operator:                 1.760s
Time for coverage check:                 0.045s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     5.989s

Number of path formula cache hits:   530264 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.743s

Total number of created targets for pointer analysis: 12276
   Number of created targets for uf: *(void)* is 12
   Number of created targets for uf: *unsigned_short_int is 13
   Number of created targets for uf: *(struct_dac_ops)* is 12
   Number of created targets for uf: *unsigned_char is 526
   Number of created targets for uf: *unsigned_long_long_int is 45
   Number of created targets for uf: *unsigned_int is 397
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_3,_Parameter_1_type:_[(void)*],_Parameter_2_type:_[(unsigned_char)*],_Parameter_3_type:_[signed_int],_VarArgs:_false)* is 12


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         317 (count: 3976, min: 0, max: 14, avg: 0.08)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.938s
  Time for transition matches:                         0.482s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       642499 (count: 642499, min: 1, max: 1, avg: 1.00) [1 x 642499]

CPA algorithm statistics
------------------------
Number of iterations:            516352
Max size of waitlist:            57
Average size of waitlist:        30
Number of computed successors:   542839
Max successors for one state:    2
Number of times merged:          25070
Number of times stopped:         26381
Number of times breaked:         24

Total time for CPA algorithm:        36.644s (Max:     4.123s)
  Time for choose from waitlist:      0.249s
  Time for precision adjustment:     13.987s
  Time for transfer relation:        17.194s
  Time for merge operator:            2.176s
  Time for stop operator:             0.650s
  Time for adding to reached set:     1.117s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                 102 (count: 24, min: 1, max: 6, avg: 4.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.052s
  Counterexample analysis:                             0.728s (Max:     0.068s, Calls: 24)
    Refinement sat check:                              0.622s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.005s
  Precision update:                                    0.018s
  ARG update:                                          1.254s

Length of refined path (in blocks):                     102 (count: 24, min: 1, max: 6, avg: 4.25)
Number of affected states:                               78 (count: 24, min: 0, max: 5, avg: 3.25)
Length (states) of path with itp 'true':                  0 (count: 24, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        78 (count: 24, min: 0, max: 5, avg: 3.25)
Length (states) of path with itp 'false':                 0 (count: 24, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 24, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              56 (count: 24, min: 0, max: 4, avg: 2.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 29282
Max. size of reached set after ref.:  9759
Avg. size of reached set before ref.: 21954.42
Avg. size of reached set after ref.:  845.08

Total time for CEGAR algorithm:      39.202s
Time for refinements:                 2.515s
Average time for refinement:          0.104s
Max time for refinement:              0.228s

Code Coverage
-----------------------------
  Function coverage:      0.902
  Visited lines:          1799
  Total lines:            1864
  Line coverage:          0.965
  Visited conditions:     286
  Total conditions:       306
  Condition coverage:     0.935

CPAchecker general statistics
-----------------------------
Number of program locations:     2452
Number of CFA edges:             2692
Number of relevant variables:    274
Number of functions:             82
Number of loops:                 12
Size of reached set:             9780
  Number of reached locations:   1087 (44%)
    Avg states per location:     8
    Max states per location:     144 (at node N0)
  Number of reached functions:   74 (90%)
  Number of partitions:          9780
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.527s
  Time for loading CPAs:          0.723s
  Time for loading parser:        0.668s
  Time for CFA construction:      3.001s
    Time for parsing file(s):     0.836s
    Time for AST to CFA:          1.046s
    Time for CFA sanity check:    0.228s
    Time for post-processing:     0.751s
      Time for var class.:        0.335s
Time for Analysis:               39.202s
CPU time for analysis:           39.190s
Time for analyzing result:        0.009s
Total time for CPAchecker:       43.733s
Total CPU time for CPAchecker:   43.710s
Time for statistics:              0.211s

Time for Garbage Collector:       4.378s (in 169 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                137MB (   131 MiB) max;     77MB (    73 MiB) avg;    152MB (   145 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           168MB (   161 MiB) max;    132MB (   126 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8124MB (  7748 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
