scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-usb-pegasus_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_h_i10fpw/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5444: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8918: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8921: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8923: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9520: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9819: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9820: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10228: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10253: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10394: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10772: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10788: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10841: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10168: Ignoring call via function pointer ldv_timer_instance_callback_1_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10168: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10318: Ignoring call via function pointer ldv_usb_instance_pre_3_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10318: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10307: Ignoring call via function pointer ldv_usb_instance_post_3_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10307: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10563: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            24353 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  19804 (81%)
  Because of loop head:            4450 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         99 (0%)
  Times precision was empty:       16647 (68%)
  Times precision was {false}:     386 (2%)
  Times result was cached:         6129 (25%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1191 (5%)
  Times result was 'false':        784 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         15377
  BDD entailment checks:           10323
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          13
Number of abstraction locations:          48
Max number of predicates per location:    8
Avg number of predicates per location:    4
Total predicates per abstraction:         33344
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 21.14
Number of irrelevant predicates:          18440 (55%)
Number of preds handled by boolean abs:   3343 (10%)
  Total number of models for allsat:      1376
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.16

Time for post operator:                  5.083s
  Time for path formula creation:        4.914s
Time for strengthen operator:            0.219s
Time for prec operator:                  6.637s
  Time for abstraction:                  5.924s (Max:     0.026s, Count: 24353)
    Boolean abstraction:                 1.308s
    Solving time:                        1.001s (Max:     0.016s)
    Model enumeration time:              0.109s
    Time for BDD construction:           0.157s (Max:     0.013s)
Time for merge operator:                 0.298s
Time for coverage check:                 0.101s
  Time for BDD entailment checks:        0.092s
Total time for SMT solver (w/o itp):     1.110s

Number of path formula cache hits:   82917 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.428s

Total number of created targets for pointer analysis: 2090
   Number of created targets for uf: *unsigned_short_int is 81
   Number of created targets for uf: *(void)* is 4
   Number of created targets for uf: *(char)* is 85
   Number of created targets for uf: *unsigned_int is 81
   Number of created targets for uf: *(struct_device)* is 4


Number of BDD nodes:                               650
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2731 (count: 36669, min: 0, max: 254, avg: 0.07)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.467s
Automaton transfers with branching:                0
Automaton transfer successors:                        95702 (count: 95702, min: 1, max: 1, avg: 1.00) [1 x 95702]

CPA algorithm statistics
------------------------
Number of iterations:            75563
Max size of waitlist:            50
Average size of waitlist:        18
Number of computed successors:   84497
Max successors for one state:    2
Number of times merged:          2527
Number of times stopped:         7023
Number of times breaked:         99

Total time for CPA algorithm:        18.950s (Max:     1.485s)
  Time for choose from waitlist:      0.177s
  Time for precision adjustment:      8.025s
  Time for transfer relation:         8.395s
  Time for merge operator:            0.508s
  Time for stop operator:             0.550s
  Time for adding to reached set:     0.326s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   99
Avg. length of target path (in blocks):                3371 (count: 99, min: 16, max: 82, avg: 34.05)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.477s
  Counterexample analysis:                             3.845s (Max:     0.067s, Calls: 99)
    Refinement sat check:                              2.903s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.085s
  Precision update:                                    0.085s
  ARG update:                                          0.341s

Length of refined path (in blocks):                    2034 (count: 99, min: 9, max: 64, avg: 20.55)
Number of affected states:                              939 (count: 99, min: 2, max: 59, avg: 9.48)
Length (states) of path with itp 'true':                996 (count: 99, min: 4, max: 24, avg: 10.06)
Length (states) of path with itp non-trivial itp:       939 (count: 99, min: 2, max: 59, avg: 9.48)
Length (states) of path with itp 'false':                99 (count: 99, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          46 (count: 99, min: 0, max: 2, avg: 0.46)
Equal non-trivial interpolants along paths:             794 (count: 99, min: 0, max: 58, avg: 8.02)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                99
Number of successful refinements:     99
Number of failed refinements:         0
Max. size of reached set before ref.: 5539
Max. size of reached set after ref.:  1013
Avg. size of reached set before ref.: 1100.36
Avg. size of reached set after ref.:  335.58

Total time for CEGAR algorithm:      23.741s
Time for refinements:                 4.719s
Average time for refinement:          0.047s
Max time for refinement:              0.103s

Code Coverage
-----------------------------
  Function coverage:      0.074
  Visited lines:          1138
  Total lines:            3740
  Line coverage:          0.304
  Visited conditions:     28
  Total conditions:       794
  Condition coverage:     0.035

CPAchecker general statistics
-----------------------------
Number of program locations:     5323
Number of CFA edges:             5958
Number of relevant variables:    725
Number of functions:             299
Number of loops:                 11
Size of reached set:             976
  Number of reached locations:   155 (3%)
    Avg states per location:     6
    Max states per location:     17 (at node N3018)
  Number of reached functions:   22 (7%)
  Number of partitions:          950
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N2399 (before line 9436), Function main called from node N2387, stack depth 1 [f29353f], stack [main]])
  Number of target states:       0
  Size of final wait list        31

Time for analysis setup:          6.492s
  Time for loading CPAs:          1.021s
  Time for loading parser:        0.699s
  Time for CFA construction:      4.614s
    Time for parsing file(s):     1.118s
    Time for AST to CFA:          1.695s
    Time for CFA sanity check:    0.359s
    Time for post-processing:     1.213s
      Time for var class.:        0.531s
Time for Analysis:               23.741s
CPU time for analysis:           23.740s
Total time for CPAchecker:       30.238s
Total CPU time for CPAchecker:   30.220s
Time for statistics:              0.126s

Time for Garbage Collector:       0.633s (in 45 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 80MB (    76 MiB) max;     53MB (    50 MiB) avg;     83MB (    79 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
