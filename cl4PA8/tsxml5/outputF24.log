scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-usb-pegasus_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pcqlopcx/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5444: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8918: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8921: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8923: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9520: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9819: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9820: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10228: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10253: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10394: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10772: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10788: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10841: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10307: Ignoring call via function pointer ldv_usb_instance_post_3_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10307: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10318: Ignoring call via function pointer ldv_usb_instance_pre_3_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10318: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10168: Ignoring call via function pointer ldv_timer_instance_callback_1_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10168: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10563: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_ethtool_gset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_set_wakeup_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1789111 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1570085 (88%)
  Because of loop head:            218682 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         344 (0%)
  Times precision was empty:       946077 (53%)
  Times precision was {false}:     14558 (1%)
  Times result was cached:         767424 (43%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      61052 (3%)
  Times result was 'false':        94284 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         3566506
  BDD entailment checks:           2685510
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          31
Number of abstraction locations:          144
Max number of predicates per location:    25
Avg number of predicates per location:    7
Total predicates per abstraction:         7712949
Max number of predicates per abstraction: 25
Avg number of predicates per abstraction: 102.01
Number of irrelevant predicates:          4713476 (61%)
Number of preds handled by boolean abs:   387817 (5%)
  Total number of models for allsat:      201927
  Max number of models for allsat:        108
  Avg number of models for allsat:        3.31

Time for post operator:                178.251s
  Time for path formula creation:      173.702s
Time for strengthen operator:            9.699s
Time for prec operator:                427.406s
  Time for abstraction:                405.138s (Max:     4.521s, Count: 1789111)
    Boolean abstraction:                88.830s
    Solving time:                       64.031s (Max:     0.126s)
    Model enumeration time:             19.494s
    Time for BDD construction:           5.701s (Max:     0.141s)
Time for merge operator:                12.537s
Time for coverage check:                 3.164s
  Time for BDD entailment checks:        2.649s
Total time for SMT solver (w/o itp):    83.526s

Number of path formula cache hits:   7541836 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   142.989s

Total number of created targets for pointer analysis: 378965
   Number of created targets for uf: *unsigned_short_int is 385
   Number of created targets for uf: *(char)* is 41
   Number of created targets for uf: *unsigned_char is 895
   Number of created targets for uf: *unsigned_int is 30041
   Number of created targets for uf: *(struct_device)* is 2165


Number of BDD nodes:                               153407
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      186530 (count: 4119046, min: 0, max: 5336, avg: 0.05)
Time for BDD node cleanup:                             0.661s
Time for BDD garbage collection:                       0.036s (in 1 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.566s
  Time for transition matches:                         7.055s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                      9363415 (count: 9363415, min: 1, max: 1, avg: 1.00) [1 x 9363415]

CPA algorithm statistics
------------------------
Number of iterations:            6798114
Max size of waitlist:            1547
Average size of waitlist:        573
Number of computed successors:   7670861
Max successors for one state:    2
Number of times merged:          440498
Number of times stopped:         686470
Number of times breaked:         344

Total time for CPA algorithm:       857.047s (Max:    20.399s)
  Time for choose from waitlist:      3.704s
  Time for precision adjustment:    480.452s
  Time for transfer relation:       292.169s
  Time for merge operator:           21.790s
  Time for stop operator:            19.608s
  Time for adding to reached set:    15.046s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   344
Avg. length of target path (in blocks):               24920 (count: 344, min: 16, max: 240, avg: 72.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  27.821s
  Counterexample analysis:                            13.337s (Max:     0.106s, Calls: 344)
    Refinement sat check:                              9.060s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.024s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.149s
  Precision update:                                    0.175s
  ARG update:                                         13.869s

Length of refined path (in blocks):                   19076 (count: 344, min: 9, max: 191, avg: 55.45)
Number of affected states:                             9201 (count: 344, min: 2, max: 186, avg: 26.75)
Length (states) of path with itp 'true':               9531 (count: 344, min: 0, max: 136, avg: 27.71)
Length (states) of path with itp non-trivial itp:      9201 (count: 344, min: 2, max: 186, avg: 26.75)
Length (states) of path with itp 'false':               344 (count: 344, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         120 (count: 344, min: 0, max: 1, avg: 0.35)
Equal non-trivial interpolants along paths:            8737 (count: 344, min: 0, max: 185, avg: 25.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                344
Number of successful refinements:     344
Number of failed refinements:         0
Max. size of reached set before ref.: 103123
Max. size of reached set after ref.:  29866
Avg. size of reached set before ref.: 28090.77
Avg. size of reached set after ref.:  8124.77

Total time for CEGAR algorithm:     893.513s
Time for refinements:                34.379s
Average time for refinement:          0.099s
Max time for refinement:              0.618s

Code Coverage
-----------------------------
  Function coverage:      0.254
  Visited lines:          1811
  Total lines:            3740
  Line coverage:          0.484
  Visited conditions:     258
  Total conditions:       794
  Condition coverage:     0.325

CPAchecker general statistics
-----------------------------
Number of program locations:     5323
Number of CFA edges:             5958
Number of relevant variables:    725
Number of functions:             299
Number of loops:                 11
Size of reached set:             21802
  Number of reached locations:   875 (16%)
    Avg states per location:     24
    Max states per location:     432 (at node N3529)
  Number of reached functions:   76 (25%)
  Number of partitions:          21608
    Avg size of partitions:      1
    Max size of partitions:      45 (with key [N2399 (before line 9436), Function main called from node N2387, stack depth 1 [f29353f], stack [main]])
  Number of target states:       0
  Size of final wait list        588

Time for analysis setup:          6.757s
  Time for loading CPAs:          1.126s
  Time for loading parser:        0.667s
  Time for CFA construction:      4.846s
    Time for parsing file(s):     1.203s
    Time for AST to CFA:          1.825s
    Time for CFA sanity check:    0.389s
    Time for post-processing:     1.155s
      Time for var class.:        0.616s
Time for Analysis:              893.513s
CPU time for analysis:          893.410s
Total time for CPAchecker:      900.275s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              0.547s

Time for Garbage Collector:      70.562s (in 678 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2117MB (  2019 MiB) max;    865MB (   825 MiB) avg;   2166MB (  2065 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          2173MB (  2072 MiB) max;   1276MB (  1217 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   9437MB (  8999 MiB) max;   8596MB (  8198 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
