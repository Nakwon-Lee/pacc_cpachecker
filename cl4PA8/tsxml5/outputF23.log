scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-usb-pegasus_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qt_mucmo/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5444: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8918: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8921: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8923: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9520: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9819: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9820: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10228: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10253: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10394: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10772: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10788: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10841: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10168: Ignoring call via function pointer ldv_timer_instance_callback_1_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10168: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10318: Ignoring call via function pointer ldv_usb_instance_pre_3_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10318: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10307: Ignoring call via function pointer ldv_usb_instance_post_3_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10307: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10563: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_ethtool_gset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_set_wakeup_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2053582 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1805407 (88%)
  Because of loop head:            247830 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         345 (0%)
  Times precision was empty:       1496152 (73%)
  Times precision was {false}:     19201 (1%)
  Times result was cached:         485613 (24%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      52616 (3%)
  Times result was 'false':        64941 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         3562282
  BDD entailment checks:           2506700
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          30
Number of abstraction locations:          99
Max number of predicates per location:    25
Avg number of predicates per location:    7
Total predicates per abstraction:         6269597
Max number of predicates per abstraction: 26
Avg number of predicates per abstraction: 87.30
Number of irrelevant predicates:          4271015 (68%)
Number of preds handled by boolean abs:   468835 (7%)
  Total number of models for allsat:      262900
  Max number of models for allsat:        210
  Avg number of models for allsat:        5.00

Time for post operator:                170.804s
  Time for path formula creation:      164.091s
Time for strengthen operator:            9.153s
Time for prec operator:                376.394s
  Time for abstraction:                352.688s (Max:     1.085s, Count: 2053582)
    Boolean abstraction:               103.173s
    Solving time:                       70.318s (Max:     0.064s)
    Model enumeration time:             25.892s
    Time for BDD construction:           8.953s (Max:     0.183s)
Time for merge operator:                11.252s
Time for coverage check:                 3.233s
  Time for BDD entailment checks:        2.736s
Total time for SMT solver (w/o itp):    96.214s

Number of path formula cache hits:   9638796 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   132.081s

Total number of created targets for pointer analysis: 316024
   Number of created targets for uf: *unsigned_short_int is 14635
   Number of created targets for uf: *(char)* is 821
   Number of created targets for uf: *unsigned_char is 115
   Number of created targets for uf: *unsigned_int is 31321
   Number of created targets for uf: *(struct_device)* is 735


Number of BDD nodes:                               197854
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      231778 (count: 4478283, min: 0, max: 8598, avg: 0.05)
Time for BDD node cleanup:                             0.698s
Time for BDD garbage collection:                       0.078s (in 4 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 13.389s
  Time for transition matches:                         6.609s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                     10463775 (count: 10463775, min: 1, max: 1, avg: 1.00) [1 x 10463775]

CPA algorithm statistics
------------------------
Number of iterations:            7606370
Max size of waitlist:            2962
Average size of waitlist:        683
Number of computed successors:   8585811
Max successors for one state:    2
Number of times merged:          527791
Number of times stopped:         819560
Number of times breaked:         345

Total time for CPA algorithm:       836.332s (Max:    35.473s)
  Time for choose from waitlist:      3.314s
  Time for precision adjustment:    449.376s
  Time for transfer relation:       297.524s
  Time for merge operator:           26.273s
  Time for stop operator:            22.197s
  Time for adding to reached set:    15.393s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   345
Avg. length of target path (in blocks):               20325 (count: 345, min: 16, max: 112, avg: 58.91)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  29.891s
  Counterexample analysis:                            11.589s (Max:     0.083s, Calls: 345)
    Refinement sat check:                              8.020s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.023s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.085s
  Precision update:                                    0.204s
  ARG update:                                         17.782s

Length of refined path (in blocks):                   15968 (count: 345, min: 9, max: 87, avg: 46.28)
Number of affected states:                             4473 (count: 345, min: 2, max: 83, avg: 12.97)
Length (states) of path with itp 'true':              11150 (count: 345, min: 0, max: 84, avg: 32.32)
Length (states) of path with itp non-trivial itp:      4473 (count: 345, min: 2, max: 83, avg: 12.97)
Length (states) of path with itp 'false':               345 (count: 345, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         170 (count: 345, min: 0, max: 1, avg: 0.49)
Equal non-trivial interpolants along paths:            3958 (count: 345, min: 0, max: 81, avg: 11.47)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                345
Number of successful refinements:     345
Number of failed refinements:         0
Max. size of reached set before ref.: 228821
Max. size of reached set after ref.:  228711
Avg. size of reached set before ref.: 58454.32
Avg. size of reached set after ref.:  36202.85

Total time for CEGAR algorithm:     893.641s
Time for refinements:                46.064s
Average time for refinement:          0.133s
Max time for refinement:              0.959s

Code Coverage
-----------------------------
  Function coverage:      0.294
  Visited lines:          1509
  Total lines:            3740
  Line coverage:          0.403
  Visited conditions:     136
  Total conditions:       794
  Condition coverage:     0.171

CPAchecker general statistics
-----------------------------
Number of program locations:     5323
Number of CFA edges:             5958
Number of relevant variables:    725
Number of functions:             299
Number of loops:                 11
Size of reached set:             24551
  Number of reached locations:   605 (11%)
    Avg states per location:     40
    Max states per location:     549 (at node N3529)
  Number of reached functions:   88 (29%)
  Number of partitions:          24244
    Avg size of partitions:      1
    Max size of partitions:      49 (with key [N2399 (before line 9436), Function main called from node N2387, stack depth 1 [f29353f], stack [main]])
  Number of target states:       0
  Size of final wait list        890

Time for analysis setup:          6.591s
  Time for loading CPAs:          1.132s
  Time for loading parser:        0.679s
  Time for CFA construction:      4.640s
    Time for parsing file(s):     1.176s
    Time for AST to CFA:          1.748s
    Time for CFA sanity check:    0.321s
    Time for post-processing:     1.119s
      Time for var class.:        0.583s
Time for Analysis:              893.641s
CPU time for analysis:          893.590s
Total time for CPAchecker:      900.237s
Total CPU time for CPAchecker:  900.170s
Time for statistics:              0.471s

Time for Garbage Collector:      83.161s (in 646 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2031MB (  1937 MiB) max;    979MB (   933 MiB) avg;   2134MB (  2035 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          2288MB (  2182 MiB) max;   1448MB (  1381 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   9441MB (  9004 MiB) max;   8597MB (  8198 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
