scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-usb-pegasus_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_w__1a254/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5444: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8918: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8921: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8923: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9520: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9819: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9820: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10228: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10253: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10394: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10772: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10788: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10841: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_ethtool_gset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10168: Ignoring call via function pointer ldv_timer_instance_callback_1_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10168: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10307: Ignoring call via function pointer ldv_usb_instance_post_3_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10307: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10318: Ignoring call via function pointer ldv_usb_instance_pre_3_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10318: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            754108 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  646876 (86%)
  Because of loop head:            102899 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4333 (1%)
  Times precision was empty:       241522 (32%)
  Times precision was {false}:     6933 (1%)
  Times result was cached:         484927 (64%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      20726 (3%)
  Times result was 'false':        143919 (19%)
Number of strengthen sat checks:   0
Number of coverage checks:         781993
  BDD entailment checks:           454277
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          60
Number of abstraction locations:          307
Max number of predicates per location:    34
Avg number of predicates per location:    7
Total predicates per abstraction:         5967683
Max number of predicates per abstraction: 34
Avg number of predicates per abstraction: 215.76
Number of irrelevant predicates:          2095437 (35%)
Number of preds handled by boolean abs:   180060 (3%)
  Total number of models for allsat:      41672
  Max number of models for allsat:        64
  Avg number of models for allsat:        2.01

Time for post operator:                 41.248s
  Time for path formula creation:       39.635s
Time for strengthen operator:            3.613s
Time for prec operator:                277.093s
  Time for abstraction:                268.652s (Max:     1.047s, Count: 754108)
    Boolean abstraction:                27.144s
    Solving time:                       20.290s (Max:     0.049s)
    Model enumeration time:              3.958s
    Time for BDD construction:           1.456s (Max:     0.028s)
Time for merge operator:                 2.591s
Time for coverage check:                 0.656s
  Time for BDD entailment checks:        0.513s
Total time for SMT solver (w/o itp):    24.248s

Number of path formula cache hits:   3825337 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    29.416s

Total number of created targets for pointer analysis: 49532
   Number of created targets for uf: *unsigned_short_int is 21
   Number of created targets for uf: *(void)* is 8
   Number of created targets for uf: *(char)* is 3361
   Number of created targets for uf: *signed_int is 43
   Number of created targets for uf: *unsigned_char is 9
   Number of created targets for uf: *unsigned_int is 41
   Number of created targets for uf: *(struct_device)* is 7
   Number of created targets for uf: *unsigned_long_int is 2


Number of BDD nodes:                               105810
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       89303 (count: 902141, min: 0, max: 2744, avg: 0.10)
Time for BDD node cleanup:                             0.160s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.957s
  Time for transition matches:                         2.454s
  Time for transition assertions:                      0.007s
  Time for transition actions:                         0.019s
Automaton transfers with branching:                0
Automaton transfer successors:                      3842081 (count: 3842081, min: 1, max: 1, avg: 1.00) [1 x 3842081]

CPA algorithm statistics
------------------------
Number of iterations:            2965777
Max size of waitlist:            183
Average size of waitlist:        74
Number of computed successors:   3411305
Max successors for one state:    2
Number of times merged:          163858
Number of times stopped:         255037
Number of times breaked:         4333

Total time for CPA algorithm:       409.024s (Max:     2.478s)
  Time for choose from waitlist:      1.599s
  Time for precision adjustment:    297.262s
  Time for transfer relation:        85.901s
  Time for merge operator:            5.394s
  Time for stop operator:             5.896s
  Time for adding to reached set:     5.494s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4333
Avg. length of target path (in blocks):              874557 (count: 4333, min: 39, max: 383, avg: 201.84)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 453.072s
  Counterexample analysis:                           437.010s (Max:     0.302s, Calls: 4333)
    Refinement sat check:                            195.479s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.463s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.558s
  Precision update:                                    6.032s
  ARG update:                                          5.224s

Length of refined path (in blocks):                  811842 (count: 4332, min: 9, max: 326, avg: 187.41)
Number of affected states:                            45089 (count: 4332, min: 1, max: 298, avg: 10.41)
Length (states) of path with itp 'true':             762421 (count: 4332, min: 0, max: 323, avg: 176.00)
Length (states) of path with itp non-trivial itp:     45089 (count: 4332, min: 1, max: 298, avg: 10.41)
Length (states) of path with itp 'false':              4332 (count: 4332, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        4204 (count: 4332, min: 0, max: 7, avg: 0.97)
Equal non-trivial interpolants along paths:           36553 (count: 4332, min: 0, max: 290, avg: 8.44)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4333
Number of successful refinements:     4332
Number of failed refinements:         0
Max. size of reached set before ref.: 7798
Max. size of reached set after ref.:  6304
Avg. size of reached set before ref.: 4461.64
Avg. size of reached set after ref.:  3767.29

Total time for CEGAR algorithm:     893.751s
Time for refinements:               474.857s
Average time for refinement:          0.109s
Max time for refinement:              0.320s

Code Coverage
-----------------------------
  Function coverage:      0.304
  Visited lines:          1995
  Total lines:            3740
  Line coverage:          0.533
  Visited conditions:     328
  Total conditions:       794
  Condition coverage:     0.413

CPAchecker general statistics
-----------------------------
Number of program locations:     5323
Number of CFA edges:             5958
Number of relevant variables:    725
Number of functions:             299
Number of loops:                 11
Size of reached set:             6618
  Number of reached locations:   1128 (21%)
    Avg states per location:     5
    Max states per location:     98 (at node N3529)
  Number of reached functions:   91 (30%)
  Number of partitions:          6533
    Avg size of partitions:      1
    Max size of partitions:      15 (with key [N2399 (before line 9436), Function main called from node N2387, stack depth 1 [f29353f], stack [main]])
  Number of target states:       1
  Size of final wait list        88

Time for analysis setup:          6.501s
  Time for loading CPAs:          0.987s
  Time for loading parser:        0.650s
  Time for CFA construction:      4.771s
    Time for parsing file(s):     1.120s
    Time for AST to CFA:          1.772s
    Time for CFA sanity check:    0.385s
    Time for post-processing:     1.253s
      Time for var class.:        0.578s
Time for Analysis:              893.751s
CPU time for analysis:          893.610s
Total time for CPAchecker:      900.257s
Total CPU time for CPAchecker:  900.100s
Time for statistics:              0.260s

Time for Garbage Collector:      20.071s (in 1150 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                342MB (   326 MiB) max;    229MB (   219 MiB) avg;    349MB (   333 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           399MB (   380 MiB) max;    347MB (   331 MiB) avg
Allocated non-heap memory:        45MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8557MB (  8161 MiB) max;   8406MB (  8016 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
