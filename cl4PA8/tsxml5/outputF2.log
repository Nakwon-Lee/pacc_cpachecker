scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-usb-pegasus_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yyumptnd/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5444: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8918: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8921: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8923: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9520: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9819: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9820: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10228: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10253: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10394: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10772: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10788: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10841: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10318: Ignoring call via function pointer ldv_usb_instance_pre_3_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10318: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10307: Ignoring call via function pointer ldv_usb_instance_post_3_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10307: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10168: Ignoring call via function pointer ldv_timer_instance_callback_1_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10168: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_set_wakeup_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_ethtool_gset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10563: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1873328 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1641019 (88%)
  Because of loop head:            230078 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2231 (0%)
  Times precision was empty:       708134 (38%)
  Times precision was {false}:     11688 (1%)
  Times result was cached:         1114416 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      39090 (2%)
  Times result was 'false':        193986 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         2023298
  BDD entailment checks:           1175192
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          40
Number of abstraction locations:          214
Max number of predicates per location:    25
Avg number of predicates per location:    8
Total predicates per abstraction:         12666913
Max number of predicates per abstraction: 25
Avg number of predicates per abstraction: 249.46
Number of irrelevant predicates:          6206347 (49%)
Number of preds handled by boolean abs:   377010 (3%)
  Total number of models for allsat:      158061
  Max number of models for allsat:        84
  Avg number of models for allsat:        4.04

Time for post operator:                 66.766s
  Time for path formula creation:       62.420s
Time for strengthen operator:            8.727s
Time for prec operator:                495.063s
  Time for abstraction:                476.063s (Max:     0.973s, Count: 1873328)
    Boolean abstraction:                67.570s
    Solving time:                       47.133s (Max:     0.078s)
    Model enumeration time:             14.714s
    Time for BDD construction:           4.847s (Max:     0.094s)
Time for merge operator:                 4.193s
Time for coverage check:                 1.672s
  Time for BDD entailment checks:        1.353s
Total time for SMT solver (w/o itp):    61.848s

Number of path formula cache hits:   10812496 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    36.747s

Total number of created targets for pointer analysis: 83121
   Number of created targets for uf: *unsigned_short_int is 21
   Number of created targets for uf: *(void)* is 7
   Number of created targets for uf: *(char)* is 281
   Number of created targets for uf: *unsigned_char is 31
   Number of created targets for uf: *unsigned_int is 3821
   Number of created targets for uf: *(struct_device)* is 64


Number of BDD nodes:                               143900
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      180590 (count: 2237002, min: 0, max: 3802, avg: 0.08)
Time for BDD node cleanup:                             0.383s
Time for BDD garbage collection:                       0.094s (in 1 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.377s
  Time for transition matches:                         7.159s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                      9978992 (count: 9978992, min: 1, max: 1, avg: 1.00) [1 x 9978992]

CPA algorithm statistics
------------------------
Number of iterations:            7552583
Max size of waitlist:            1239
Average size of waitlist:        319
Number of computed successors:   8669925
Max successors for one state:    2
Number of times merged:          424053
Number of times stopped:         560313
Number of times breaked:         2231

Total time for CPA algorithm:       784.118s (Max:     6.672s)
  Time for choose from waitlist:      3.026s
  Time for precision adjustment:    544.664s
  Time for transfer relation:       180.928s
  Time for merge operator:           11.154s
  Time for stop operator:            14.133s
  Time for adding to reached set:    11.802s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2231
Avg. length of target path (in blocks):              116486 (count: 2231, min: 17, max: 154, avg: 52.21)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  89.282s
  Counterexample analysis:                            74.151s (Max:     0.092s, Calls: 2231)
    Refinement sat check:                             53.249s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.060s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.336s
  Precision update:                                    1.045s
  ARG update:                                         12.867s

Length of refined path (in blocks):                   90697 (count: 2231, min: 9, max: 108, avg: 40.65)
Number of affected states:                            24761 (count: 2231, min: 1, max: 97, avg: 11.10)
Length (states) of path with itp 'true':              63705 (count: 2231, min: 0, max: 73, avg: 28.55)
Length (states) of path with itp non-trivial itp:     24761 (count: 2231, min: 1, max: 97, avg: 11.10)
Length (states) of path with itp 'false':              2231 (count: 2231, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1520 (count: 2231, min: 0, max: 2, avg: 0.68)
Equal non-trivial interpolants along paths:           21010 (count: 2231, min: 0, max: 95, avg: 9.42)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2231
Number of successful refinements:     2231
Number of failed refinements:         0
Max. size of reached set before ref.: 41470
Max. size of reached set after ref.:  19972
Avg. size of reached set before ref.: 8341.58
Avg. size of reached set after ref.:  4799.91

Total time for CEGAR algorithm:     893.518s
Time for refinements:               102.523s
Average time for refinement:          0.045s
Max time for refinement:              0.611s

Code Coverage
-----------------------------
  Function coverage:      0.224
  Visited lines:          1768
  Total lines:            3740
  Line coverage:          0.473
  Visited conditions:     246
  Total conditions:       794
  Condition coverage:     0.310

CPAchecker general statistics
-----------------------------
Number of program locations:     5323
Number of CFA edges:             5958
Number of relevant variables:    725
Number of functions:             299
Number of loops:                 11
Size of reached set:             14152
  Number of reached locations:   872 (16%)
    Avg states per location:     16
    Max states per location:     300 (at node N3528)
  Number of reached functions:   67 (22%)
  Number of partitions:          13961
    Avg size of partitions:      1
    Max size of partitions:      19 (with key [N2399 (before line 9436), Function main called from node N2387, stack depth 1 [f29353f], stack [main]])
  Number of target states:       0
  Size of final wait list        404

Time for analysis setup:          6.747s
  Time for loading CPAs:          0.948s
  Time for loading parser:        0.664s
  Time for CFA construction:      5.013s
    Time for parsing file(s):     1.143s
    Time for AST to CFA:          1.863s
    Time for CFA sanity check:    0.375s
    Time for post-processing:     1.402s
      Time for var class.:        0.623s
Time for Analysis:              893.518s
CPU time for analysis:          893.420s
Total time for CPAchecker:      900.269s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              0.359s

Time for Garbage Collector:      46.051s (in 1878 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                669MB (   638 MiB) max;    304MB (   289 MiB) avg;    689MB (   657 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           704MB (   672 MiB) max;    446MB (   425 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8902MB (  8489 MiB) max;   8422MB (  8032 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
