scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-usb-pegasus_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_20wf_nbp/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5444: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8918: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8921: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8923: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9520: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9819: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9820: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10228: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10253: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10394: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10772: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10788: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10841: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_ethtool_gset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10168: Ignoring call via function pointer ldv_timer_instance_callback_1_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10168: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10307: Ignoring call via function pointer ldv_usb_instance_post_3_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10307: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10318: Ignoring call via function pointer ldv_usb_instance_pre_3_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10318: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            760130 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  652053 (86%)
  Because of loop head:            103695 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4382 (1%)
  Times precision was empty:       243124 (32%)
  Times precision was {false}:     6933 (1%)
  Times result was cached:         489336 (64%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      20737 (3%)
  Times result was 'false':        145218 (19%)
Number of strengthen sat checks:   0
Number of coverage checks:         788505
  BDD entailment checks:           457799
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          60
Number of abstraction locations:          307
Max number of predicates per location:    34
Avg number of predicates per location:    7
Total predicates per abstraction:         6028434
Max number of predicates per abstraction: 34
Avg number of predicates per abstraction: 217.87
Number of irrelevant predicates:          2114341 (35%)
Number of preds handled by boolean abs:   180132 (3%)
  Total number of models for allsat:      41685
  Max number of models for allsat:        64
  Avg number of models for allsat:        2.01

Time for post operator:                 40.590s
  Time for path formula creation:       38.906s
Time for strengthen operator:            3.767s
Time for prec operator:                280.931s
  Time for abstraction:                272.955s (Max:     0.880s, Count: 760130)
    Boolean abstraction:                26.525s
    Solving time:                       20.009s (Max:     0.048s)
    Model enumeration time:              3.772s
    Time for BDD construction:           1.359s (Max:     0.013s)
Time for merge operator:                 2.648s
Time for coverage check:                 0.658s
  Time for BDD entailment checks:        0.517s
Total time for SMT solver (w/o itp):    23.781s

Number of path formula cache hits:   3862168 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    28.914s

Total number of created targets for pointer analysis: 49572
   Number of created targets for uf: *unsigned_short_int is 21
   Number of created targets for uf: *(void)* is 8
   Number of created targets for uf: *(char)* is 3361
   Number of created targets for uf: *signed_int is 43
   Number of created targets for uf: *unsigned_char is 9
   Number of created targets for uf: *unsigned_int is 41
   Number of created targets for uf: *(struct_device)* is 7
   Number of created targets for uf: *unsigned_long_int is 2


Number of BDD nodes:                               105810
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       89358 (count: 907618, min: 0, max: 2481, avg: 0.10)
Time for BDD node cleanup:                             0.148s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.673s
  Time for transition matches:                         3.013s
  Time for transition assertions:                      0.007s
  Time for transition actions:                         0.019s
Automaton transfers with branching:                0
Automaton transfer successors:                      3873302 (count: 3873302, min: 1, max: 1, avg: 1.00) [1 x 3873302]

CPA algorithm statistics
------------------------
Number of iterations:            2989866
Max size of waitlist:            183
Average size of waitlist:        74
Number of computed successors:   3439204
Max successors for one state:    2
Number of times merged:          165353
Number of times stopped:         257248
Number of times breaked:         4382

Total time for CPA algorithm:       413.001s (Max:     2.103s)
  Time for choose from waitlist:      1.503s
  Time for precision adjustment:    300.319s
  Time for transfer relation:        86.007s
  Time for merge operator:            5.733s
  Time for stop operator:             5.821s
  Time for adding to reached set:     5.318s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4382
Avg. length of target path (in blocks):              885560 (count: 4382, min: 39, max: 383, avg: 202.09)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 450.031s
  Counterexample analysis:                           434.025s (Max:     0.295s, Calls: 4382)
    Refinement sat check:                            194.404s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.442s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.545s
  Precision update:                                    5.870s
  ARG update:                                          5.202s

Length of refined path (in blocks):                  822657 (count: 4382, min: 9, max: 326, avg: 187.74)
Number of affected states:                            45559 (count: 4382, min: 1, max: 298, avg: 10.40)
Length (states) of path with itp 'true':             772716 (count: 4382, min: 0, max: 323, avg: 176.34)
Length (states) of path with itp non-trivial itp:     45559 (count: 4382, min: 1, max: 298, avg: 10.40)
Length (states) of path with itp 'false':              4382 (count: 4382, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        4260 (count: 4382, min: 0, max: 7, avg: 0.97)
Equal non-trivial interpolants along paths:           36917 (count: 4382, min: 0, max: 290, avg: 8.42)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4382
Number of successful refinements:     4382
Number of failed refinements:         0
Max. size of reached set before ref.: 7798
Max. size of reached set after ref.:  6304
Avg. size of reached set before ref.: 4464.97
Avg. size of reached set after ref.:  3772.97

Total time for CEGAR algorithm:     893.541s
Time for refinements:               470.908s
Average time for refinement:          0.107s
Max time for refinement:              0.305s

Code Coverage
-----------------------------
  Function coverage:      0.191
  Visited lines:          1570
  Total lines:            3740
  Line coverage:          0.420
  Visited conditions:     164
  Total conditions:       794
  Condition coverage:     0.207

CPAchecker general statistics
-----------------------------
Number of program locations:     5323
Number of CFA edges:             5958
Number of relevant variables:    725
Number of functions:             299
Number of loops:                 11
Size of reached set:             4368
  Number of reached locations:   639 (12%)
    Avg states per location:     6
    Max states per location:     58 (at node N3529)
  Number of reached functions:   57 (19%)
  Number of partitions:          4309
    Avg size of partitions:      1
    Max size of partitions:      14 (with key [N2399 (before line 9436), Function main called from node N2387, stack depth 1 [f29353f], stack [main]])
  Number of target states:       0
  Size of final wait list        70

Time for analysis setup:          6.720s
  Time for loading CPAs:          1.076s
  Time for loading parser:        0.708s
  Time for CFA construction:      4.795s
    Time for parsing file(s):     1.206s
    Time for AST to CFA:          1.785s
    Time for CFA sanity check:    0.356s
    Time for post-processing:     1.213s
      Time for var class.:        0.566s
Time for Analysis:              893.541s
CPU time for analysis:          893.420s
Total time for CPAchecker:      900.278s
Total CPU time for CPAchecker:  900.130s
Time for statistics:              0.178s

Time for Garbage Collector:      19.695s (in 1145 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                347MB (   331 MiB) max;    230MB (   220 MiB) avg;    352MB (   335 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           403MB (   385 MiB) max;    350MB (   334 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8555MB (  8159 MiB) max;   8405MB (  8016 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
