scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-usb-pegasus_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_l6h0fveq/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5444: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8918: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8921: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8923: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9520: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9819: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9820: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10228: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10253: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10394: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10772: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10788: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10841: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10318: Ignoring call via function pointer ldv_usb_instance_pre_3_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10318: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10307: Ignoring call via function pointer ldv_usb_instance_post_3_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10307: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10168: Ignoring call via function pointer ldv_timer_instance_callback_1_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10168: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10563: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_ethtool_gset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_set_wakeup_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1710187 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1501915 (88%)
  Because of loop head:            207628 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         644 (0%)
  Times precision was empty:       1010383 (59%)
  Times precision was {false}:     21411 (1%)
  Times result was cached:         619393 (36%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      59000 (3%)
  Times result was 'false':        101434 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         3315966
  BDD entailment checks:           2479628
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          33
Number of abstraction locations:          115
Max number of predicates per location:    27
Avg number of predicates per location:    10
Total predicates per abstraction:         7534561
Max number of predicates per abstraction: 27
Avg number of predicates per abstraction: 93.70
Number of irrelevant predicates:          4351547 (58%)
Number of preds handled by boolean abs:   607444 (8%)
  Total number of models for allsat:      324437
  Max number of models for allsat:        144
  Avg number of models for allsat:        5.50

Time for post operator:                120.422s
  Time for path formula creation:      116.279s
Time for strengthen operator:            7.967s
Time for prec operator:                471.235s
  Time for abstraction:                451.974s (Max:     3.716s, Count: 1710187)
    Boolean abstraction:               131.327s
    Solving time:                       85.614s (Max:     0.083s)
    Model enumeration time:             32.874s
    Time for BDD construction:          13.129s (Max:     1.757s)
Time for merge operator:                 6.713s
Time for coverage check:                 3.408s
  Time for BDD entailment checks:        2.883s
Total time for SMT solver (w/o itp):   118.488s

Number of path formula cache hits:   8124813 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    94.500s

Total number of created targets for pointer analysis: 266391
   Number of created targets for uf: *unsigned_short_int is 141
   Number of created targets for uf: *(char)* is 741
   Number of created targets for uf: *unsigned_char is 137
   Number of created targets for uf: *unsigned_int is 30281
   Number of created targets for uf: *(struct_device)* is 681


Number of BDD nodes:                               181115
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      319511 (count: 4055273, min: 0, max: 9073, avg: 0.08)
Time for BDD node cleanup:                             0.620s
Time for BDD garbage collection:                       0.168s (in 5 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.835s
  Time for transition matches:                         7.404s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                      8681276 (count: 8681276, min: 1, max: 1, avg: 1.00) [1 x 8681276]

CPA algorithm statistics
------------------------
Number of iterations:            6373146
Max size of waitlist:            1734
Average size of waitlist:        433
Number of computed successors:   7207825
Max successors for one state:    2
Number of times merged:          418169
Number of times stopped:         637506
Number of times breaked:         644

Total time for CPA algorithm:       818.401s (Max:    20.810s)
  Time for choose from waitlist:      3.368s
  Time for precision adjustment:    520.295s
  Time for transfer relation:       225.972s
  Time for merge operator:           15.042s
  Time for stop operator:            20.058s
  Time for adding to reached set:    13.989s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   644
Avg. length of target path (in blocks):               45037 (count: 644, min: 16, max: 134, avg: 69.93)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  36.891s
  Counterexample analysis:                            23.402s (Max:     0.086s, Calls: 644)
    Refinement sat check:                             15.549s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.035s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.159s
  Precision update:                                    0.391s
  ARG update:                                         12.528s

Length of refined path (in blocks):                   38419 (count: 644, min: 9, max: 94, avg: 59.66)
Number of affected states:                             8012 (count: 644, min: 2, max: 83, avg: 12.44)
Length (states) of path with itp 'true':              29763 (count: 644, min: 0, max: 89, avg: 46.22)
Length (states) of path with itp non-trivial itp:      8012 (count: 644, min: 2, max: 83, avg: 12.44)
Length (states) of path with itp 'false':               644 (count: 644, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         414 (count: 644, min: 0, max: 1, avg: 0.64)
Equal non-trivial interpolants along paths:            6954 (count: 644, min: 0, max: 81, avg: 10.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                644
Number of successful refinements:     644
Number of failed refinements:         0
Max. size of reached set before ref.: 100729
Max. size of reached set after ref.:  100639
Avg. size of reached set before ref.: 39493.24
Avg. size of reached set after ref.:  29472.94

Total time for CEGAR algorithm:     893.793s
Time for refinements:                58.730s
Average time for refinement:          0.091s
Max time for refinement:              0.411s

Code Coverage
-----------------------------
  Function coverage:      0.214
  Visited lines:          1570
  Total lines:            3740
  Line coverage:          0.420
  Visited conditions:     184
  Total conditions:       794
  Condition coverage:     0.232

CPAchecker general statistics
-----------------------------
Number of program locations:     5323
Number of CFA edges:             5958
Number of relevant variables:    725
Number of functions:             299
Number of loops:                 11
Size of reached set:             15811
  Number of reached locations:   662 (12%)
    Avg states per location:     23
    Max states per location:     193 (at node N3529)
  Number of reached functions:   64 (21%)
  Number of partitions:          15584
    Avg size of partitions:      1
    Max size of partitions:      38 (with key [N2399 (before line 9436), Function main called from node N2387, stack depth 1 [f29353f], stack [main]])
  Number of target states:       0
  Size of final wait list        229

Time for analysis setup:          6.500s
  Time for loading CPAs:          1.040s
  Time for loading parser:        0.628s
  Time for CFA construction:      4.722s
    Time for parsing file(s):     1.205s
    Time for AST to CFA:          1.763s
    Time for CFA sanity check:    0.332s
    Time for post-processing:     1.171s
      Time for var class.:        0.538s
Time for Analysis:              893.793s
CPU time for analysis:          893.690s
Total time for CPAchecker:      900.297s
Total CPU time for CPAchecker:  900.190s
Time for statistics:              0.347s

Time for Garbage Collector:      60.800s (in 759 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1645MB (  1569 MiB) max;    782MB (   746 MiB) avg;   1671MB (  1593 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1756MB (  1675 MiB) max;   1122MB (  1070 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   9907MB (  9448 MiB) max;   8711MB (  8307 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
