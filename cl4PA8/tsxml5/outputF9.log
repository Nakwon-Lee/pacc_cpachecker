scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-usb-pegasus_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zfuqcf8z/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5444: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8918: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8921: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8923: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9520: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9819: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9820: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10228: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10253: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10394: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10772: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10788: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10841: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10318: Ignoring call via function pointer ldv_usb_instance_pre_3_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10318: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10307: Ignoring call via function pointer ldv_usb_instance_post_3_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10307: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10563: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10168: Ignoring call via function pointer ldv_timer_instance_callback_1_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10168: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_set_wakeup_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_ethtool_gset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_register_netdev to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1468292 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1288678 (88%)
  Because of loop head:            176496 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3118 (0%)
  Times precision was empty:       472580 (32%)
  Times precision was {false}:     7963 (1%)
  Times result was cached:         966655 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      21094 (1%)
  Times result was 'false':        104071 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         1164545
  BDD entailment checks:           512419
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          88
Number of abstraction locations:          300
Max number of predicates per location:    39
Avg number of predicates per location:    11
Total predicates per abstraction:         13199896
Max number of predicates per abstraction: 39
Avg number of predicates per abstraction: 454.28
Number of irrelevant predicates:          7648680 (58%)
Number of preds handled by boolean abs:   232201 (2%)
  Total number of models for allsat:      114941
  Max number of models for allsat:        2048
  Avg number of models for allsat:        5.45

Time for post operator:                 48.879s
  Time for path formula creation:       45.080s
Time for strengthen operator:            6.176s
Time for prec operator:                477.725s
  Time for abstraction:                463.054s (Max:     1.010s, Count: 1468292)
    Boolean abstraction:                46.704s
    Solving time:                       32.818s (Max:     0.052s)
    Model enumeration time:             11.378s
    Time for BDD construction:           3.974s (Max:     0.097s)
Time for merge operator:                 3.620s
Time for coverage check:                 0.760s
  Time for BDD entailment checks:        0.576s
Total time for SMT solver (w/o itp):    44.196s

Number of path formula cache hits:   8482998 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    26.026s

Total number of created targets for pointer analysis: 100978
   Number of created targets for uf: *unsigned_short_int is 381
   Number of created targets for uf: *(void)* is 17
   Number of created targets for uf: *(struct_device_private)* is 188
   Number of created targets for uf: *(char)* is 673
   Number of created targets for uf: *signed_int is 14
   Number of created targets for uf: *unsigned_char is 44
   Number of created targets for uf: *unsigned_int is 161
   Number of created targets for uf: *(struct_device)* is 18


Number of BDD nodes:                               228943
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      125551 (count: 1194819, min: 0, max: 1892, avg: 0.11)
Time for BDD node cleanup:                             0.188s
Time for BDD garbage collection:                       0.096s (in 1 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.632s
  Time for transition matches:                         4.325s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.018s
Automaton transfers with branching:                0
Automaton transfer successors:                      7360998 (count: 7360998, min: 1, max: 1, avg: 1.00) [1 x 7360998]

CPA algorithm statistics
------------------------
Number of iterations:            5310687
Max size of waitlist:            117
Average size of waitlist:        29
Number of computed successors:   5987843
Max successors for one state:    2
Number of times merged:          326063
Number of times stopped:         562539
Number of times breaked:         1750

Total time for CPA algorithm:       685.215s (Max:     5.427s)
  Time for choose from waitlist:      2.263s
  Time for precision adjustment:    514.013s
  Time for transfer relation:       129.080s
  Time for merge operator:            9.063s
  Time for stop operator:             8.759s
  Time for adding to reached set:     8.294s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1750
Avg. length of target path (in blocks):              171348 (count: 1750, min: 17, max: 397, avg: 97.91)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 178.518s
  Counterexample analysis:                           166.072s (Max:     0.692s, Calls: 1750)
    Refinement sat check:                             80.966s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.117s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.061s
  Precision update:                                    1.617s
  ARG update:                                          8.720s

Length of refined path (in blocks):                  129899 (count: 1750, min: 9, max: 358, avg: 74.23)
Number of affected states:                            38647 (count: 1750, min: 1, max: 307, avg: 22.08)
Length (states) of path with itp 'true':              89502 (count: 1750, min: 0, max: 313, avg: 51.14)
Length (states) of path with itp non-trivial itp:     38647 (count: 1750, min: 1, max: 307, avg: 22.08)
Length (states) of path with itp 'false':              1688 (count: 1750, min: 0, max: 1, avg: 0.96)
Different non-trivial interpolants along paths:        2177 (count: 1750, min: 0, max: 4, avg: 1.24)
Equal non-trivial interpolants along paths:           34720 (count: 1750, min: 0, max: 306, avg: 19.84)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1750
Number of successful refinements:     1750
Number of failed refinements:         0
Max. size of reached set before ref.: 46142
Max. size of reached set after ref.:  34478
Avg. size of reached set before ref.: 12270.38
Avg. size of reached set after ref.:  9241.61

Total time for CEGAR algorithm:     893.434s
Time for refinements:               196.389s
Average time for refinement:          0.112s
Max time for refinement:              0.785s

Code Coverage
-----------------------------
  Function coverage:      0.341
  Visited lines:          2221
  Total lines:            3740
  Line coverage:          0.594
  Visited conditions:     380
  Total conditions:       794
  Condition coverage:     0.479

CPAchecker general statistics
-----------------------------
Number of program locations:     5323
Number of CFA edges:             5958
Number of relevant variables:    725
Number of functions:             299
Number of loops:                 11
Size of reached set:             20890
  Number of reached locations:   1341 (25%)
    Avg states per location:     15
    Max states per location:     257 (at node N3528)
  Number of reached functions:   102 (34%)
  Number of partitions:          20615
    Avg size of partitions:      1
    Max size of partitions:      15 (with key [N2399 (before line 9436), Function main called from node N2387, stack depth 1 [f29353f], stack [main]])
  Number of target states:       0
  Size of final wait list        45

Time for analysis setup:          6.827s
  Time for loading CPAs:          1.133s
  Time for loading parser:        0.665s
  Time for CFA construction:      4.856s
    Time for parsing file(s):     1.216s
    Time for AST to CFA:          1.773s
    Time for CFA sanity check:    0.386s
    Time for post-processing:     1.265s
      Time for var class.:        0.580s
Time for Analysis:              893.434s
CPU time for analysis:          893.320s
Total time for CPAchecker:      900.277s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              0.439s

Time for Garbage Collector:      48.845s (in 1893 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                529MB (   504 MiB) max;    264MB (   251 MiB) avg;    545MB (   520 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           547MB (   521 MiB) max;    384MB (   367 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8621MB (  8222 MiB) max;   8419MB (  8029 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
