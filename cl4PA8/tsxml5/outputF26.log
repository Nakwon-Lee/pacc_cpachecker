scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-usb-pegasus_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ww1djsgv/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5444: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8918: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8921: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8923: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9520: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9819: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9820: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10228: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10253: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10394: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10772: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10788: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10841: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10318: Ignoring call via function pointer ldv_usb_instance_pre_3_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10318: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10307: Ignoring call via function pointer ldv_usb_instance_post_3_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10307: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10168: Ignoring call via function pointer ldv_timer_instance_callback_1_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10168: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_ethtool_gset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_set_wakeup_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10563: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1615977 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1395530 (86%)
  Because of loop head:            218282 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2165 (0%)
  Times precision was empty:       629875 (39%)
  Times precision was {false}:     14085 (1%)
  Times result was cached:         925324 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      46693 (3%)
  Times result was 'false':        207908 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         2476330
  BDD entailment checks:           1802630
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          40
Number of abstraction locations:          169
Max number of predicates per location:    26
Avg number of predicates per location:    9
Total predicates per abstraction:         11538979
Max number of predicates per abstraction: 27
Avg number of predicates per abstraction: 189.85
Number of irrelevant predicates:          5199346 (45%)
Number of preds handled by boolean abs:   524582 (5%)
  Total number of models for allsat:      226295
  Max number of models for allsat:        240
  Avg number of models for allsat:        4.85

Time for post operator:                 54.872s
  Time for path formula creation:       51.145s
Time for strengthen operator:            7.201s
Time for prec operator:                515.771s
  Time for abstraction:                499.928s (Max:     1.618s, Count: 1615977)
    Boolean abstraction:                93.181s
    Solving time:                       62.908s (Max:     0.099s)
    Model enumeration time:             22.099s
    Time for BDD construction:           7.656s (Max:     0.046s)
Time for merge operator:                 2.967s
Time for coverage check:                 2.476s
  Time for BDD entailment checks:        2.123s
Total time for SMT solver (w/o itp):    85.007s

Number of path formula cache hits:   9208818 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    32.099s

Total number of created targets for pointer analysis: 64670
   Number of created targets for uf: *unsigned_short_int is 241
   Number of created targets for uf: *(void)* is 7
   Number of created targets for uf: *(char)* is 481
   Number of created targets for uf: *unsigned_char is 37
   Number of created targets for uf: *unsigned_int is 121
   Number of created targets for uf: *(struct_device)* is 19


Number of BDD nodes:                               111298
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      244257 (count: 2870786, min: 0, max: 2995, avg: 0.09)
Time for BDD node cleanup:                             0.418s
Time for BDD garbage collection:                       0.122s (in 3 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.956s
  Time for transition matches:                         6.075s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.017s
Automaton transfers with branching:                0
Automaton transfer successors:                      8627865 (count: 8627865, min: 1, max: 1, avg: 1.00) [1 x 8627865]

CPA algorithm statistics
------------------------
Number of iterations:            6578880
Max size of waitlist:            1436
Average size of waitlist:        493
Number of computed successors:   7570852
Max successors for one state:    2
Number of times merged:          336850
Number of times stopped:         430528
Number of times breaked:         2165

Total time for CPA algorithm:       770.132s (Max:     7.346s)
  Time for choose from waitlist:      3.499s
  Time for precision adjustment:    557.087s
  Time for transfer relation:       156.265s
  Time for merge operator:            9.769s
  Time for stop operator:            15.563s
  Time for adding to reached set:    11.885s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2165
Avg. length of target path (in blocks):              122714 (count: 2165, min: 16, max: 95, avg: 56.68)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  90.625s
  Counterexample analysis:                            76.567s (Max:     0.089s, Calls: 2165)
    Refinement sat check:                             54.079s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.072s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.306s
  Precision update:                                    1.528s
  ARG update:                                         11.309s

Length of refined path (in blocks):                  102669 (count: 2165, min: 9, max: 90, avg: 47.42)
Number of affected states:                            17258 (count: 2165, min: 1, max: 77, avg: 7.97)
Length (states) of path with itp 'true':              83246 (count: 2165, min: 0, max: 87, avg: 38.45)
Length (states) of path with itp non-trivial itp:     17258 (count: 2165, min: 1, max: 77, avg: 7.97)
Length (states) of path with itp 'false':              2165 (count: 2165, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1739 (count: 2165, min: 0, max: 2, avg: 0.80)
Equal non-trivial interpolants along paths:           13354 (count: 2165, min: 0, max: 75, avg: 6.17)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2165
Number of successful refinements:     2165
Number of failed refinements:         0
Max. size of reached set before ref.: 33084
Max. size of reached set after ref.:  26280
Avg. size of reached set before ref.: 11811.18
Avg. size of reached set after ref.:  8615.53

Total time for CEGAR algorithm:     893.709s
Time for refinements:               110.812s
Average time for refinement:          0.051s
Max time for refinement:              0.610s

Code Coverage
-----------------------------
  Function coverage:      0.214
  Visited lines:          1727
  Total lines:            3740
  Line coverage:          0.462
  Visited conditions:     228
  Total conditions:       794
  Condition coverage:     0.287

CPAchecker general statistics
-----------------------------
Number of program locations:     5323
Number of CFA edges:             5958
Number of relevant variables:    725
Number of functions:             299
Number of loops:                 11
Size of reached set:             13835
  Number of reached locations:   810 (15%)
    Avg states per location:     17
    Max states per location:     282 (at node N3528)
  Number of reached functions:   64 (21%)
  Number of partitions:          13630
    Avg size of partitions:      1
    Max size of partitions:      24 (with key [N2399 (before line 9436), Function main called from node N2387, stack depth 1 [f29353f], stack [main]])
  Number of target states:       0
  Size of final wait list        426

Time for analysis setup:          6.529s
  Time for loading CPAs:          1.028s
  Time for loading parser:        0.719s
  Time for CFA construction:      4.671s
    Time for parsing file(s):     1.230s
    Time for AST to CFA:          1.691s
    Time for CFA sanity check:    0.331s
    Time for post-processing:     1.128s
      Time for var class.:        0.578s
Time for Analysis:              893.710s
CPU time for analysis:          893.580s
Total time for CPAchecker:      900.250s
Total CPU time for CPAchecker:  900.110s
Time for statistics:              0.308s

Time for Garbage Collector:      47.444s (in 1520 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                700MB (   667 MiB) max;    346MB (   330 MiB) avg;    744MB (   709 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           830MB (   791 MiB) max;    507MB (   483 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   9165MB (  8740 MiB) max;   8573MB (  8175 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
