scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-atheros-atl1c-atl1c_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_m50de3z8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6267: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6405: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6444: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6449: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6459: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 6463: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12794: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12814: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12817: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12819: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12894: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13466: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13479: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14316: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15241: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15242: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15287: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15901: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16033: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16061: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16104: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16121: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16137: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16191: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 18527: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7053: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7094: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6906: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6827-6828: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6967: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6941: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6866: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14019: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14031: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14325: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14336: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14347: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15840: Ignoring call via function pointer ldv_timer_instance_callback_5_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15840: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13512: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13512: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14733: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_xmalloc(1432UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14336: Ignoring call via function pointer ldv_platform_instance_release_4_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14336: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1115069 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  924570 (83%)
  Because of loop head:            162447 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         28052 (3%)
  Times precision was empty:       129011 (12%)
  Times precision was {false}:     1789 (0%)
  Times result was cached:         906376 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      77893 (7%)
  Times result was 'false':        128116 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         1143557
  BDD entailment checks:           995585
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          48
Number of abstraction locations:          158
Max number of predicates per location:    40
Avg number of predicates per location:    20
Total predicates per abstraction:         17293288
Max number of predicates per abstraction: 40
Avg number of predicates per abstraction: 217.03
Number of irrelevant predicates:          4378056 (25%)
Number of preds handled by boolean abs:   1221793 (7%)
  Total number of models for allsat:      114387
  Max number of models for allsat:        18
  Avg number of models for allsat:        1.47

Time for post operator:                 21.637s
  Time for path formula creation:       19.562s
Time for strengthen operator:            4.097s
Time for prec operator:                677.054s
  Time for abstraction:                665.064s (Max:     0.377s, Count: 1115069)
    Boolean abstraction:               101.005s
    Solving time:                       72.278s (Max:     0.014s)
    Model enumeration time:              9.332s
    Time for BDD construction:           3.989s (Max:     0.015s)
Time for merge operator:                 0.432s
Time for coverage check:                 1.134s
  Time for BDD entailment checks:        0.946s
Total time for SMT solver (w/o itp):    81.610s

Number of path formula cache hits:   5708040 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.056s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               89244
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      207376 (count: 1645280, min: 0, max: 734, avg: 0.13)
Time for BDD node cleanup:                             0.266s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.113s
  Time for transition matches:                         3.851s
  Time for transition assertions:                      0.009s
  Time for transition actions:                         0.033s
Automaton transfers with branching:                0
Automaton transfer successors:                      4759397 (count: 4759397, min: 1, max: 1, avg: 1.00) [1 x 4759397]

CPA algorithm statistics
------------------------
Number of iterations:            3642376
Max size of waitlist:            189
Average size of waitlist:        85
Number of computed successors:   4077609
Max successors for one state:    2
Number of times merged:          73986
Number of times stopped:         261127
Number of times breaked:         917

Total time for CPA algorithm:       854.100s (Max:     5.741s)
  Time for choose from waitlist:      1.549s
  Time for precision adjustment:    703.730s
  Time for transfer relation:       119.693s
  Time for merge operator:            2.955s
  Time for stop operator:            11.122s
  Time for adding to reached set:     5.736s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   917
Avg. length of target path (in blocks):               77788 (count: 917, min: 14, max: 194, avg: 84.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  29.581s
  Counterexample analysis:                            22.259s (Max:     0.108s, Calls: 917)
    Refinement sat check:                             10.743s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.053s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.373s
  Precision update:                                    1.125s
  ARG update:                                          5.207s

Length of refined path (in blocks):                   72243 (count: 917, min: 9, max: 194, avg: 78.78)
Number of affected states:                            47205 (count: 917, min: 1, max: 193, avg: 51.48)
Length (states) of path with itp 'true':              24121 (count: 917, min: 0, max: 110, avg: 26.30)
Length (states) of path with itp non-trivial itp:     47205 (count: 917, min: 1, max: 193, avg: 51.48)
Length (states) of path with itp 'false':               551 (count: 917, min: 0, max: 1, avg: 0.60)
Different non-trivial interpolants along paths:         431 (count: 917, min: 0, max: 1, avg: 0.47)
Equal non-trivial interpolants along paths:           45857 (count: 917, min: 0, max: 191, avg: 50.01)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                917
Number of successful refinements:     917
Number of failed refinements:         0
Max. size of reached set before ref.: 19040
Max. size of reached set after ref.:  18762
Avg. size of reached set before ref.: 8231.08
Avg. size of reached set after ref.:  4218.47

Total time for CEGAR algorithm:     891.694s
Time for refinements:                35.204s
Average time for refinement:          0.038s
Max time for refinement:              0.146s

Code Coverage
-----------------------------
  Function coverage:      0.106
  Visited lines:          1599
  Total lines:            7480
  Line coverage:          0.214
  Visited conditions:     110
  Total conditions:       1802
  Condition coverage:     0.061

CPAchecker general statistics
-----------------------------
Number of program locations:     11319
Number of CFA edges:             13209
Number of relevant variables:    1910
Number of functions:             557
Number of loops:                 35
Size of reached set:             8803
  Number of reached locations:   531 (5%)
    Avg states per location:     16
    Max states per location:     189 (at node N177)
  Number of reached functions:   59 (11%)
  Number of partitions:          8704
    Avg size of partitions:      1
    Max size of partitions:      16 (with key [N4979 (before line 13361), Function main called from node N4964, stack depth 1 [1029cf9], stack [main]])
  Number of target states:       0
  Size of final wait list        66

Time for analysis setup:          8.593s
  Time for loading CPAs:          1.152s
  Time for loading parser:        0.661s
  Time for CFA construction:      6.650s
    Time for parsing file(s):     1.340s
    Time for AST to CFA:          2.529s
    Time for CFA sanity check:    0.795s
    Time for post-processing:     1.823s
      Time for var class.:        0.864s
Time for Analysis:              891.694s
CPU time for analysis:          891.570s
Total time for CPAchecker:      900.292s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              0.327s

Time for Garbage Collector:      44.811s (in 3789 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                231MB (   220 MiB) max;    129MB (   123 MiB) avg;    243MB (   231 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           258MB (   246 MiB) max;    189MB (   180 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8757MB (  8351 MiB) max;   8398MB (  8009 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
