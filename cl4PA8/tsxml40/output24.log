scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-atheros-atl1c-atl1c_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hln1szkp/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6267: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6405: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6444: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6449: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6459: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 6463: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12794: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12814: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12817: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12819: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12894: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13466: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13479: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14316: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15241: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15242: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15287: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15901: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16033: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16061: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16104: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16121: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16137: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16191: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 18527: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7053: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7094: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6906: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6827-6828: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6967: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6941: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6866: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14019: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14031: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14325: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14336: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14347: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15840: Ignoring call via function pointer ldv_timer_instance_callback_5_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15840: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13512: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13512: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            15200 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12618 (83%)
  Because of loop head:            2388 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         194 (1%)
  Times precision was empty:       5082 (33%)
  Times precision was {false}:     240 (2%)
  Times result was cached:         8293 (55%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1585 (10%)
  Times result was 'false':        1181 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         9254
  BDD entailment checks:           7124
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          24
Number of abstraction locations:          97
Max number of predicates per location:    16
Avg number of predicates per location:    4
Total predicates per abstraction:         38346
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 21.01
Number of irrelevant predicates:          13185 (34%)
Number of preds handled by boolean abs:   6247 (16%)
  Total number of models for allsat:      1754
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.11

Time for post operator:                  3.055s
  Time for path formula creation:        2.916s
Time for strengthen operator:            0.167s
Time for prec operator:                  8.048s
  Time for abstraction:                  7.424s (Max:     0.029s, Count: 15200)
    Boolean abstraction:                 1.784s
    Solving time:                        1.288s (Max:     0.039s)
    Model enumeration time:              0.198s
    Time for BDD construction:           0.217s (Max:     0.012s)
Time for merge operator:                 0.138s
Time for coverage check:                 0.071s
  Time for BDD entailment checks:        0.068s
Total time for SMT solver (w/o itp):     1.487s

Number of path formula cache hits:   66691 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.405s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1538
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4185 (count: 23904, min: 0, max: 387, avg: 0.18)
Time for BDD node cleanup:                             0.031s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.497s
Automaton transfers with branching:                0
Automaton transfer successors:                        68880 (count: 68880, min: 1, max: 1, avg: 1.00) [1 x 68880]

CPA algorithm statistics
------------------------
Number of iterations:            52479
Max size of waitlist:            87
Average size of waitlist:        37
Number of computed successors:   59099
Max successors for one state:    2
Number of times merged:          1065
Number of times stopped:         3292
Number of times breaked:         123

Total time for CPA algorithm:        17.402s (Max:     0.961s)
  Time for choose from waitlist:      0.128s
  Time for precision adjustment:      9.104s
  Time for transfer relation:         6.403s
  Time for merge operator:            0.350s
  Time for stop operator:             0.394s
  Time for adding to reached set:     0.248s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   123
Avg. length of target path (in blocks):                5915 (count: 123, min: 14, max: 83, avg: 48.09)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.759s
  Counterexample analysis:                             3.079s (Max:     0.048s, Calls: 123)
    Refinement sat check:                              1.782s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.103s
  Precision update:                                    0.107s
  ARG update:                                          0.335s

Length of refined path (in blocks):                    4737 (count: 123, min: 9, max: 82, avg: 38.51)
Number of affected states:                             1770 (count: 123, min: 1, max: 62, avg: 14.39)
Length (states) of path with itp 'true':               2844 (count: 123, min: 0, max: 52, avg: 23.12)
Length (states) of path with itp non-trivial itp:      1770 (count: 123, min: 1, max: 62, avg: 14.39)
Length (states) of path with itp 'false':                98 (count: 123, min: 0, max: 1, avg: 0.80)
Different non-trivial interpolants along paths:          48 (count: 123, min: 0, max: 1, avg: 0.39)
Equal non-trivial interpolants along paths:            1599 (count: 123, min: 0, max: 61, avg: 13.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                123
Number of successful refinements:     123
Number of failed refinements:         0
Max. size of reached set before ref.: 2546
Max. size of reached set after ref.:  1698
Avg. size of reached set before ref.: 1128.57
Avg. size of reached set after ref.:  691.44

Total time for CEGAR algorithm:      21.682s
Time for refinements:                 4.193s
Average time for refinement:          0.034s
Max time for refinement:              0.066s

Code Coverage
-----------------------------
  Function coverage:      0.039
  Visited lines:          1369
  Total lines:            7480
  Line coverage:          0.183
  Visited conditions:     54
  Total conditions:       1802
  Condition coverage:     0.030

CPAchecker general statistics
-----------------------------
Number of program locations:     11319
Number of CFA edges:             13209
Number of relevant variables:    1910
Number of functions:             557
Number of loops:                 35
Size of reached set:             859
  Number of reached locations:   223 (2%)
    Avg states per location:     3
    Max states per location:     12 (at node N9218)
  Number of reached functions:   22 (4%)
  Number of partitions:          846
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N4979 (before line 13361), Function main called from node N4964, stack depth 1 [27dfd12b], stack [main]])
  Number of target states:       0
  Size of final wait list        32

Time for analysis setup:          8.601s
  Time for loading CPAs:          1.178s
  Time for loading parser:        0.697s
  Time for CFA construction:      6.577s
    Time for parsing file(s):     1.333s
    Time for AST to CFA:          2.573s
    Time for CFA sanity check:    0.700s
    Time for post-processing:     1.818s
      Time for var class.:        0.852s
Time for Analysis:               21.682s
CPU time for analysis:           21.670s
Total time for CPAchecker:       30.291s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.144s

Time for Garbage Collector:       0.622s (in 49 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 85MB (    81 MiB) max;     55MB (    53 MiB) avg;     93MB (    89 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8070MB (  7696 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
