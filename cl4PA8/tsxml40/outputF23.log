scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-atheros-atl1c-atl1c_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nsi8ah0w/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6267: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6405: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6444: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6449: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6459: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 6463: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12794: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12814: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12817: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12819: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12894: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13466: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13479: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14316: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15241: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15242: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15287: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15901: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16033: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16061: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16104: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16121: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16137: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16191: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 18527: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7053: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7094: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6906: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6827-6828: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6967: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6941: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6866: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14019: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14031: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14325: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14336: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14347: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13757: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function enable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_set_wakeup_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msi to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6856: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6866: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6931: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 6941: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, (struct dma_attrs *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6351: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7094: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function put_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_wake_from_d3 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            897811 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  813198 (91%)
  Because of loop head:            53472 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         31141 (3%)
  Times precision was empty:       86706 (10%)
  Times precision was {false}:     1394 (0%)
  Times result was cached:         791807 (88%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      17904 (2%)
  Times result was 'false':        93446 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         453805
  BDD entailment checks:           149323
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       72
Number of predicates discovered:          53
Number of abstraction locations:          333
Max number of predicates per location:    34
Avg number of predicates per location:    17
Total predicates per abstraction:         15078649
Max number of predicates per abstraction: 34
Avg number of predicates per abstraction: 781.36
Number of irrelevant predicates:          7187087 (48%)
Number of preds handled by boolean abs:   214979 (1%)
  Total number of models for allsat:      34703
  Max number of models for allsat:        48
  Avg number of models for allsat:        1.94

Time for post operator:                 28.161s
  Time for path formula creation:       26.490s
Time for strengthen operator:            3.198s
Time for prec operator:                436.018s
  Time for abstraction:                424.916s (Max:     0.229s, Count: 897811)
    Boolean abstraction:                22.246s
    Solving time:                       14.819s (Max:     0.014s)
    Model enumeration time:              3.415s
    Time for BDD construction:           1.106s (Max:     0.012s)
Time for merge operator:                 1.394s
Time for coverage check:                 0.251s
  Time for BDD entailment checks:        0.184s
Total time for SMT solver (w/o itp):    18.234s

Number of path formula cache hits:   5034935 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.769s

Total number of created targets for pointer analysis: 5
   Number of created targets for uf: *unsigned_short_int is 6


Number of BDD nodes:                               72760
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       99892 (count: 382463, min: 0, max: 1310, avg: 0.26)
Time for BDD node cleanup:                             0.106s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.176s
  Time for transition matches:                         3.299s
  Time for transition assertions:                      0.009s
  Time for transition actions:                         0.029s
Automaton transfers with branching:                0
Automaton transfer successors:                      4187112 (count: 4187112, min: 1, max: 1, avg: 1.00) [1 x 4187112]

CPA algorithm statistics
------------------------
Number of iterations:            3156111
Max size of waitlist:            139
Average size of waitlist:        77
Number of computed successors:   3552746
Max successors for one state:    2
Number of times merged:          152241
Number of times stopped:         198081
Number of times breaked:         2872

Total time for CPA algorithm:       577.797s (Max:     1.249s)
  Time for choose from waitlist:      1.373s
  Time for precision adjustment:    455.865s
  Time for transfer relation:        98.593s
  Time for merge operator:            3.880s
  Time for stop operator:             4.988s
  Time for adding to reached set:     5.487s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2872
Avg. length of target path (in blocks):              865620 (count: 2872, min: 27, max: 356, avg: 301.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 294.835s
  Counterexample analysis:                           277.628s (Max:     0.251s, Calls: 2872)
    Refinement sat check:                             77.564s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.365s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.079s
  Precision update:                                    7.929s
  ARG update:                                          4.805s

Length of refined path (in blocks):                  670049 (count: 2872, min: 9, max: 356, avg: 233.30)
Number of affected states:                           153712 (count: 2872, min: 1, max: 355, avg: 53.52)
Length (states) of path with itp 'true':             513465 (count: 2872, min: 0, max: 244, avg: 178.78)
Length (states) of path with itp non-trivial itp:    153712 (count: 2872, min: 1, max: 355, avg: 53.52)
Length (states) of path with itp 'false':              2532 (count: 2872, min: 0, max: 1, avg: 0.88)
Different non-trivial interpolants along paths:         431 (count: 2872, min: 0, max: 6, avg: 0.15)
Equal non-trivial interpolants along paths:          150409 (count: 2872, min: 0, max: 353, avg: 52.37)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2872
Number of successful refinements:     2872
Number of failed refinements:         0
Max. size of reached set before ref.: 4913
Max. size of reached set after ref.:  3751
Avg. size of reached set before ref.: 3199.81
Avg. size of reached set after ref.:  2065.26

Total time for CEGAR algorithm:     891.299s
Time for refinements:               309.998s
Average time for refinement:          0.107s
Max time for refinement:              0.387s

Code Coverage
-----------------------------
  Function coverage:      0.185
  Visited lines:          2087
  Total lines:            7480
  Line coverage:          0.279
  Visited conditions:     288
  Total conditions:       1802
  Condition coverage:     0.160

CPAchecker general statistics
-----------------------------
Number of program locations:     11319
Number of CFA edges:             13209
Number of relevant variables:    1910
Number of functions:             557
Number of loops:                 35
Size of reached set:             2782
  Number of reached locations:   1147 (10%)
    Avg states per location:     2
    Max states per location:     32 (at node N9218)
  Number of reached functions:   103 (18%)
  Number of partitions:          2759
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N4979 (before line 13361), Function main called from node N4964, stack depth 1 [27dfd12b], stack [main]])
  Number of target states:       0
  Size of final wait list        85

Time for analysis setup:          8.967s
  Time for loading CPAs:          1.127s
  Time for loading parser:        0.639s
  Time for CFA construction:      7.032s
    Time for parsing file(s):     1.390s
    Time for AST to CFA:          2.780s
    Time for CFA sanity check:    0.700s
    Time for post-processing:     1.984s
      Time for var class.:        0.898s
Time for Analysis:              891.299s
CPU time for analysis:          891.200s
Total time for CPAchecker:      900.273s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              0.193s

Time for Garbage Collector:      25.469s (in 3850 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                170MB (   162 MiB) max;     99MB (    95 MiB) avg;    174MB (   166 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           175MB (   167 MiB) max;    147MB (   140 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8288MB (  7904 MiB) max;   8207MB (  7827 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
