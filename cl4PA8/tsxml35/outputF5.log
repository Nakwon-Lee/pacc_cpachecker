scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__linux-usb-dev__drivers-net-wireless-airo_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4n9s86jk/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6149: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6203: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6208: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6213: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 6222: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 6317: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6322: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6332: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 6336: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10708: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 10713: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 10718: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 10727: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 19552: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 19576: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 19579: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 19581: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20046: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20099: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20130: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20204: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 20205: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20246: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20277: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20351: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 20352: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20393: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20424: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20498: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 20499: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20540: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20571: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20645: Dead code detected: goto ldv_call_3; (CFACreationUtils.addEdgeToCFA, INFO)

line 20646: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20687: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20718: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20803: Dead code detected: goto ldv_call_4; (CFACreationUtils.addEdgeToCFA, INFO)

line 20804: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20845: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20876: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20961: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 20962: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21003: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21034: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21119: Dead code detected: goto ldv_call_6; (CFACreationUtils.addEdgeToCFA, INFO)

line 21120: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21161: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21192: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21266: Dead code detected: goto ldv_call_7; (CFACreationUtils.addEdgeToCFA, INFO)

line 21267: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21800: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21813: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21888: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21920: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 22021: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 22053: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 22152: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 22267: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 22299: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 22384: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 22424: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 22425: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 22469: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 22482: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 22499: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 22510: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 22524: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 22539: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 22624: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22704: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22720: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22752: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22768: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22834: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7392: Function pointer *(tmp->cit_encrypt_one) with type void (*)(struct crypto_tfm *, u8 *, u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7377: Function pointer *(tmp->cit_setkey) with type int (*)(struct crypto_tfm *, u8 *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6861: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6902: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 18800-18801: Function pointer *writer with type int (*)(struct airo_info *, u16 , const void *, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Extern function make_kuid(&init_user_ns, (uid_t )proc_uid) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Extern function make_kgid(&init_user_ns, (gid_t )proc_gid) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 19770: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19773: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19776: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19779: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19782: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19785: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19788: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19791: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19742: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19728: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 22489: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function PDE_DATA to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_trylock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function proc_mkdir_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function proc_set_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_proc_subtree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_dequeue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_alloc_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6277: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6902: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_register_netdev to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 22263: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crypto_alloc_base to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function proc_create_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function default_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 20179: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20181: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15301: Ignoring function call through function pointer *(data->on_close): (*(data->on_close))(inode, file); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function simple_write_to_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hex_to_bin to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1315283 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1184168 (90%)
  Because of loop head:            128072 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3043 (0%)
  Times precision was empty:       171987 (13%)
  Times precision was {false}:     3606 (0%)
  Times result was cached:         1127896 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      11794 (1%)
  Times result was 'false':        80417 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         565248
  BDD entailment checks:           196872
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          33
Number of abstraction locations:          527
Max number of predicates per location:    9
Avg number of predicates per location:    3
Total predicates per abstraction:         6010074
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 390.26
Number of irrelevant predicates:          2110559 (35%)
Number of preds handled by boolean abs:   40685 (1%)
  Total number of models for allsat:      11455
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.97

Time for post operator:                 60.180s
  Time for path formula creation:       57.535s
Time for strengthen operator:            4.759s
Time for prec operator:                271.827s
  Time for abstraction:                253.741s (Max:     0.675s, Count: 1315283)
    Boolean abstraction:                15.167s
    Solving time:                       18.486s (Max:     0.064s)
    Model enumeration time:              1.156s
    Time for BDD construction:           0.380s (Max:     0.012s)
Time for merge operator:                 2.806s
Time for coverage check:                 0.333s
  Time for BDD entailment checks:        0.271s
Total time for SMT solver (w/o itp):    19.642s

Number of path formula cache hits:   7011562 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    22.839s

Total number of created targets for pointer analysis: 63086
   Number of created targets for uf: *unsigned_short_int is 25
   Number of created targets for uf: *(void)* is 21
   Number of created targets for uf: *signed_int is 816
   Number of created targets for uf: *(char)* is 24
   Number of created targets for uf: *unsigned_char is 415
   Number of created targets for uf: *(struct_list_head)* is 85
   Number of created targets for uf: *(unsigned_char)* is 35
   Number of created targets for uf: *(struct_pci_driver)* is 24
   Number of created targets for uf: *unsigned_int is 119
   Number of created targets for uf: *char is 253
   Number of created targets for uf: *unsigned_long_int is 42


Number of BDD nodes:                               2009
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       26043 (count: 463891, min: 0, max: 585, avg: 0.06)
Time for BDD node cleanup:                             0.086s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.203s
  Time for transition matches:                         4.653s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.032s
Automaton transfers with branching:                0
Automaton transfer successors:                      5999955 (count: 5999955, min: 1, max: 1, avg: 1.00) [1 x 5999955]

CPA algorithm statistics
------------------------
Number of iterations:            3853394
Max size of waitlist:            146
Average size of waitlist:        53
Number of computed successors:   4302768
Max successors for one state:    2
Number of times merged:          184188
Number of times stopped:         289563
Number of times breaked:         2552

Total time for CPA algorithm:       459.088s (Max:     1.976s)
  Time for choose from waitlist:      2.060s
  Time for precision adjustment:    299.271s
  Time for transfer relation:       130.522s
  Time for merge operator:            5.254s
  Time for stop operator:             4.645s
  Time for adding to reached set:     6.934s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2552
Avg. length of target path (in blocks):              735172 (count: 2552, min: 28, max: 671, avg: 288.08)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 406.331s
  Counterexample analysis:                           391.106s (Max:     0.434s, Calls: 2552)
    Refinement sat check:                            158.238s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.392s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.749s
  Precision update:                                    3.585s
  ARG update:                                          6.897s

Length of refined path (in blocks):                  627720 (count: 2552, min: 28, max: 627, avg: 245.97)
Number of affected states:                           232465 (count: 2552, min: 1, max: 626, avg: 91.09)
Length (states) of path with itp 'true':             392703 (count: 2552, min: 0, max: 329, avg: 153.88)
Length (states) of path with itp non-trivial itp:    232465 (count: 2552, min: 1, max: 626, avg: 91.09)
Length (states) of path with itp 'false':              2468 (count: 2552, min: 0, max: 1, avg: 0.97)
Different non-trivial interpolants along paths:         845 (count: 2552, min: 0, max: 3, avg: 0.33)
Equal non-trivial interpolants along paths:          229068 (count: 2552, min: 0, max: 625, avg: 89.76)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2552
Number of successful refinements:     2552
Number of failed refinements:         0
Max. size of reached set before ref.: 11472
Max. size of reached set after ref.:  8503
Avg. size of reached set before ref.: 5585.91
Avg. size of reached set after ref.:  4049.23

Total time for CEGAR algorithm:     890.841s
Time for refinements:               424.907s
Average time for refinement:          0.166s
Max time for refinement:              0.472s

Code Coverage
-----------------------------
  Function coverage:      0.394
  Visited lines:          3396
  Total lines:            8853
  Line coverage:          0.384
  Visited conditions:     532
  Total conditions:       2356
  Condition coverage:     0.226

CPAchecker general statistics
-----------------------------
Number of program locations:     12512
Number of CFA edges:             14568
Number of relevant variables:    2350
Number of functions:             459
Number of loops:                 103
Size of reached set:             11184
  Number of reached locations:   1961 (16%)
    Avg states per location:     5
    Max states per location:     211 (at node N44)
  Number of reached functions:   181 (39%)
  Number of partitions:          11035
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N5401 (before line 13939), Function proc_config_on_close called from node N12420, stack depth 7 [d926cbc], stack [main, ldv_entry_EMGentry_23, ldv_dispatch_register_file_operations_instance_7_23_9, ldv_file_operations_file_operations_instance_0, ldv_file_operations_instance_release_0_2, proc_close, proc_config_on_close]])
  Number of target states:       0
  Size of final wait list        98

Time for analysis setup:          9.396s
  Time for loading CPAs:          1.253s
  Time for loading parser:        0.753s
  Time for CFA construction:      7.229s
    Time for parsing file(s):     1.490s
    Time for AST to CFA:          2.877s
    Time for CFA sanity check:    0.866s
    Time for post-processing:     1.793s
      Time for var class.:        1.013s
Time for Analysis:              890.842s
CPU time for analysis:          890.740s
Total time for CPAchecker:      900.242s
Total CPU time for CPAchecker:  900.120s
Time for statistics:              0.338s

Time for Garbage Collector:      24.825s (in 1535 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                337MB (   321 MiB) max;    186MB (   177 MiB) avg;    344MB (   328 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     42MB (    40 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:           365MB (   348 MiB) max;    266MB (   254 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8289MB (  7905 MiB) max;   8193MB (  7814 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
