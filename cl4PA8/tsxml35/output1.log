scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__linux-usb-dev__drivers-net-wireless-airo_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zo1pp3ki/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6149: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6203: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6208: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6213: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 6222: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 6317: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6322: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6332: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 6336: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10708: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 10713: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 10718: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 10727: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 19552: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 19576: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 19579: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 19581: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20046: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20099: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20130: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20204: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 20205: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20246: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20277: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20351: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 20352: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20393: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20424: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20498: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 20499: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20540: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20571: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20645: Dead code detected: goto ldv_call_3; (CFACreationUtils.addEdgeToCFA, INFO)

line 20646: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20687: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20718: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20803: Dead code detected: goto ldv_call_4; (CFACreationUtils.addEdgeToCFA, INFO)

line 20804: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20845: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20876: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20961: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 20962: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21003: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21034: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21119: Dead code detected: goto ldv_call_6; (CFACreationUtils.addEdgeToCFA, INFO)

line 21120: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21161: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21192: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21266: Dead code detected: goto ldv_call_7; (CFACreationUtils.addEdgeToCFA, INFO)

line 21267: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21800: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21813: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21888: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21920: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 22021: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 22053: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 22152: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 22267: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 22299: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 22384: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 22424: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 22425: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 22469: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 22482: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 22499: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 22510: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 22524: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 22539: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 22624: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22704: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22720: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22752: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22768: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22834: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7392: Function pointer *(tmp->cit_encrypt_one) with type void (*)(struct crypto_tfm *, u8 *, u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7377: Function pointer *(tmp->cit_setkey) with type int (*)(struct crypto_tfm *, u8 *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6861: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6902: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 18800-18801: Function pointer *writer with type int (*)(struct airo_info *, u16 , const void *, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Extern function make_kuid(&init_user_ns, (uid_t )proc_uid) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Extern function make_kgid(&init_user_ns, (gid_t )proc_gid) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_proc_subtree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6277: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6902: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function skb_dequeue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kthread_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            20787 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20485 (99%)
  Because of loop head:            279 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (0%)
  Times precision was empty:       13116 (63%)
  Times precision was {false}:     360 (2%)
  Times result was cached:         7021 (34%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      290 (1%)
  Times result was 'false':        37 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         7055
  BDD entailment checks:           2513
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       54
Number of predicates discovered:          4
Number of abstraction locations:          122
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         12864
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 19.79
Number of irrelevant predicates:          10456 (81%)
Number of preds handled by boolean abs:   352 (3%)
  Total number of models for allsat:      290
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  7.709s
  Time for path formula creation:        7.493s
Time for strengthen operator:            0.233s
Time for prec operator:                  3.852s
  Time for abstraction:                  3.032s (Max:     0.032s, Count: 20787)
    Boolean abstraction:                 0.395s
    Solving time:                        0.332s (Max:     0.013s)
    Model enumeration time:              0.022s
    Time for BDD construction:           0.066s (Max:     0.008s)
Time for merge operator:                 0.315s
Time for coverage check:                 0.045s
  Time for BDD entailment checks:        0.041s
Total time for SMT solver (w/o itp):     0.354s

Number of path formula cache hits:   44056 (46%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.446s

Total number of created targets for pointer analysis: 1089
   Number of created targets for uf: *unsigned_short_int is 693
   Number of created targets for uf: *(struct_list_head)* is 2


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         591 (count: 19179, min: 0, max: 81, avg: 0.03)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.382s
Automaton transfers with branching:                0
Automaton transfer successors:                        84549 (count: 84549, min: 1, max: 1, avg: 1.00) [1 x 84549]

CPA algorithm statistics
------------------------
Number of iterations:            62740
Max size of waitlist:            34
Average size of waitlist:        18
Number of computed successors:   67371
Max successors for one state:    2
Number of times merged:          2271
Number of times stopped:         4459
Number of times breaked:         14

Total time for CPA algorithm:        18.804s (Max:     2.317s)
  Time for choose from waitlist:      0.216s
  Time for precision adjustment:      5.265s
  Time for transfer relation:        11.037s
  Time for merge operator:            0.529s
  Time for stop operator:             0.358s
  Time for adding to reached set:     0.406s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14
Avg. length of target path (in blocks):                1269 (count: 14, min: 28, max: 136, avg: 90.64)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.402s
  Counterexample analysis:                             0.915s (Max:     0.087s, Calls: 14)
    Refinement sat check:                              0.515s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.033s
  Precision update:                                    0.046s
  ARG update:                                          0.371s

Length of refined path (in blocks):                    1129 (count: 14, min: 28, max: 136, avg: 80.64)
Number of affected states:                              946 (count: 14, min: 21, max: 134, avg: 67.57)
Length (states) of path with itp 'true':                169 (count: 14, min: 1, max: 32, avg: 12.07)
Length (states) of path with itp non-trivial itp:       946 (count: 14, min: 21, max: 134, avg: 67.57)
Length (states) of path with itp 'false':                 5 (count: 14, min: 0, max: 1, avg: 0.36)
Different non-trivial interpolants along paths:           9 (count: 14, min: 0, max: 1, avg: 0.64)
Equal non-trivial interpolants along paths:             923 (count: 14, min: 20, max: 132, avg: 65.93)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 5768
Max. size of reached set after ref.:  121
Avg. size of reached set before ref.: 4275.93
Avg. size of reached set after ref.:  47.07

Total time for CEGAR algorithm:      20.447s
Time for refinements:                 1.639s
Average time for refinement:          0.117s
Max time for refinement:              0.146s

Code Coverage
-----------------------------
  Function coverage:      0.142
  Visited lines:          1515
  Total lines:            8853
  Line coverage:          0.171
  Visited conditions:     98
  Total conditions:       2356
  Condition coverage:     0.042

CPAchecker general statistics
-----------------------------
Number of program locations:     12512
Number of CFA edges:             14568
Number of relevant variables:    2350
Number of functions:             459
Number of loops:                 103
Size of reached set:             3671
  Number of reached locations:   489 (4%)
    Avg states per location:     7
    Max states per location:     83 (at node N44)
  Number of reached functions:   65 (14%)
  Number of partitions:          3638
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N6869 (before line 15663), Function airo_cleanup_module called from node N9810, stack depth 4 [13dcb0ef], stack [main, ldv_entry_EMGentry_23, ldv_EMGentry_exit_airo_cleanup_module_23_2, airo_cleanup_module]])
  Number of target states:       0
  Size of final wait list        25

Time for analysis setup:          9.785s
  Time for loading CPAs:          1.328s
  Time for loading parser:        0.785s
  Time for CFA construction:      7.483s
    Time for parsing file(s):     1.562s
    Time for AST to CFA:          2.981s
    Time for CFA sanity check:    0.697s
    Time for post-processing:     2.010s
      Time for var class.:        1.169s
Time for Analysis:               20.447s
CPU time for analysis:           20.440s
Total time for CPAchecker:       30.237s
Total CPU time for CPAchecker:   30.200s
Time for statistics:              0.256s

Time for Garbage Collector:       1.010s (in 44 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 93MB (    89 MiB) max;     59MB (    57 MiB) avg;     96MB (    92 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     34MB (    33 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8069MB (  7695 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
