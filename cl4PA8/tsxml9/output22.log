scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-mutex__drivers-net-can-mcp251x_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_k2yoqp7g/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5368: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8432: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9524: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9560: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9881: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9895: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10262: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10451: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10478: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10506: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5588: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5629: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8630: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8641: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8652: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9646: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8453: Ignoring call via function pointer ldv_interrupt_instance_handler_1_5::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8453: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function open_candev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            21682 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  16837 (78%)
  Because of loop head:            4345 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         500 (2%)
  Times precision was empty:       7223 (33%)
  Times precision was {false}:     368 (2%)
  Times result was cached:         12083 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2008 (9%)
  Times result was 'false':        3065 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         12187
  BDD entailment checks:           8865
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          20
Number of abstraction locations:          87
Max number of predicates per location:    17
Avg number of predicates per location:    7
Total predicates per abstraction:         115282
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 48.52
Number of irrelevant predicates:          26053 (23%)
Number of preds handled by boolean abs:   16144 (14%)
  Total number of models for allsat:      3264
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.63

Time for post operator:                  2.363s
  Time for path formula creation:        2.238s
Time for strengthen operator:            0.115s
Time for prec operator:                 12.966s
  Time for abstraction:                 12.359s (Max:     0.018s, Count: 21682)
    Boolean abstraction:                 2.845s
    Solving time:                        1.969s (Max:     0.013s)
    Model enumeration time:              0.328s
    Time for BDD construction:           0.237s (Max:     0.012s)
Time for merge operator:                 0.061s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     2.297s

Number of path formula cache hits:   93163 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.878s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               8456
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       10596 (count: 33198, min: 0, max: 1136, avg: 0.32)
Time for BDD node cleanup:                             0.049s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.537s
  Time for transition matches:                         0.170s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.015s
Automaton transfers with branching:                0
Automaton transfer successors:                        90021 (count: 90021, min: 1, max: 1, avg: 1.00) [1 x 90021]

CPA algorithm statistics
------------------------
Number of iterations:            72158
Max size of waitlist:            67
Average size of waitlist:        21
Number of computed successors:   81794
Max successors for one state:    2
Number of times merged:          1661
Number of times stopped:         4630
Number of times breaked:         84

Total time for CPA algorithm:        21.134s (Max:     0.957s)
  Time for choose from waitlist:      0.190s
  Time for precision adjustment:     14.081s
  Time for transfer relation:         5.159s
  Time for merge operator:            0.225s
  Time for stop operator:             0.323s
  Time for adding to reached set:     0.311s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   84
Avg. length of target path (in blocks):                5304 (count: 84, min: 20, max: 99, avg: 63.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.621s
  Counterexample analysis:                             1.893s (Max:     0.042s, Calls: 84)
    Refinement sat check:                              0.870s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.020s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.127s
  Precision update:                                    0.098s
  ARG update:                                          0.334s

Length of refined path (in blocks):                    4446 (count: 83, min: 11, max: 97, avg: 53.57)
Number of affected states:                             3597 (count: 83, min: 4, max: 95, avg: 43.34)
Length (states) of path with itp 'true':                766 (count: 83, min: 1, max: 54, avg: 9.23)
Length (states) of path with itp non-trivial itp:      3597 (count: 83, min: 4, max: 95, avg: 43.34)
Length (states) of path with itp 'false':                51 (count: 83, min: 0, max: 1, avg: 0.61)
Different non-trivial interpolants along paths:          41 (count: 83, min: 0, max: 1, avg: 0.49)
Equal non-trivial interpolants along paths:            3473 (count: 83, min: 3, max: 93, avg: 41.84)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                84
Number of successful refinements:     83
Number of failed refinements:         0
Max. size of reached set before ref.: 2485
Max. size of reached set after ref.:  1674
Avg. size of reached set before ref.: 1042.05
Avg. size of reached set after ref.:  161.83

Total time for CEGAR algorithm:      24.017s
Time for refinements:                 2.865s
Average time for refinement:          0.034s
Max time for refinement:              0.093s

Code Coverage
-----------------------------
  Function coverage:      0.161
  Visited lines:          1249
  Total lines:            3399
  Line coverage:          0.367
  Visited conditions:     64
  Total conditions:       732
  Condition coverage:     0.087

CPAchecker general statistics
-----------------------------
Number of program locations:     4844
Number of CFA edges:             5463
Number of relevant variables:    703
Number of functions:             242
Number of loops:                 12
Size of reached set:             2485
  Number of reached locations:   327 (7%)
    Avg states per location:     7
    Max states per location:     36 (at node N3607)
  Number of reached functions:   39 (16%)
  Number of partitions:          2437
    Avg size of partitions:      1
    Max size of partitions:      13 (with key [N1994 (before line 8337), Function main called from node N1979, stack depth 1 [49122b8f], stack [main]])
  Number of target states:       1
  Size of final wait list        62

Time for analysis setup:          6.250s
  Time for loading CPAs:          0.947s
  Time for loading parser:        0.636s
  Time for CFA construction:      4.563s
    Time for parsing file(s):     1.177s
    Time for AST to CFA:          1.744s
    Time for CFA sanity check:    0.327s
    Time for post-processing:     1.121s
      Time for var class.:        0.519s
Time for Analysis:               24.017s
CPU time for analysis:           24.010s
Total time for CPAchecker:       30.271s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.149s

Time for Garbage Collector:       0.547s (in 62 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    69 MiB) max;     48MB (    46 MiB) avg;     76MB (    72 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
