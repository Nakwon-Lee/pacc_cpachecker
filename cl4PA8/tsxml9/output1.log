scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-mutex__drivers-net-can-mcp251x_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_q7w520hq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5368: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8432: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9524: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9560: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9881: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9895: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10262: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10451: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10478: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10506: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5588: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5629: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8630: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8641: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8652: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9646: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8453: Ignoring call via function pointer ldv_interrupt_instance_handler_1_5::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8453: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function open_candev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            22310 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  17336 (78%)
  Because of loop head:            4471 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         503 (2%)
  Times precision was empty:       7383 (33%)
  Times precision was {false}:     392 (2%)
  Times result was cached:         12382 (55%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2153 (10%)
  Times result was 'false':        3213 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         13055
  BDD entailment checks:           9639
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          20
Number of abstraction locations:          87
Max number of predicates per location:    17
Avg number of predicates per location:    7
Total predicates per abstraction:         120076
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 47.18
Number of irrelevant predicates:          27656 (23%)
Number of preds handled by boolean abs:   17493 (15%)
  Total number of models for allsat:      3432
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.59

Time for post operator:                  2.470s
  Time for path formula creation:        2.368s
Time for strengthen operator:            0.191s
Time for prec operator:                 12.875s
  Time for abstraction:                 12.231s (Max:     0.024s, Count: 22310)
    Boolean abstraction:                 3.157s
    Solving time:                        2.041s (Max:     0.014s)
    Model enumeration time:              0.335s
    Time for BDD construction:           0.311s (Max:     0.012s)
Time for merge operator:                 0.066s
Time for coverage check:                 0.037s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     2.376s

Number of path formula cache hits:   95011 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.927s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               8898
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       11148 (count: 35308, min: 0, max: 1190, avg: 0.32)
Time for BDD node cleanup:                             0.029s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.498s
Automaton transfers with branching:                0
Automaton transfer successors:                        92876 (count: 92876, min: 1, max: 1, avg: 1.00) [1 x 92876]

CPA algorithm statistics
------------------------
Number of iterations:            74488
Max size of waitlist:            67
Average size of waitlist:        22
Number of computed successors:   84474
Max successors for one state:    2
Number of times merged:          1708
Number of times stopped:         4759
Number of times breaked:         87

Total time for CPA algorithm:        21.039s (Max:     1.008s)
  Time for choose from waitlist:      0.159s
  Time for precision adjustment:     13.815s
  Time for transfer relation:         5.307s
  Time for merge operator:            0.282s
  Time for stop operator:             0.318s
  Time for adding to reached set:     0.298s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   87
Avg. length of target path (in blocks):                5604 (count: 87, min: 20, max: 102, avg: 64.41)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.586s
  Counterexample analysis:                             1.874s (Max:     0.047s, Calls: 87)
    Refinement sat check:                              0.904s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.025s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.190s
  Precision update:                                    0.098s
  ARG update:                                          0.302s

Length of refined path (in blocks):                    4743 (count: 87, min: 11, max: 102, avg: 54.52)
Number of affected states:                             3727 (count: 87, min: 4, max: 100, avg: 42.84)
Length (states) of path with itp 'true':                929 (count: 87, min: 1, max: 54, avg: 10.68)
Length (states) of path with itp non-trivial itp:      3727 (count: 87, min: 4, max: 100, avg: 42.84)
Length (states) of path with itp 'false':                54 (count: 87, min: 0, max: 1, avg: 0.62)
Different non-trivial interpolants along paths:          42 (count: 87, min: 0, max: 1, avg: 0.48)
Equal non-trivial interpolants along paths:            3598 (count: 87, min: 3, max: 98, avg: 41.36)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                87
Number of successful refinements:     87
Number of failed refinements:         0
Max. size of reached set before ref.: 2485
Max. size of reached set after ref.:  1811
Avg. size of reached set before ref.: 1087.93
Avg. size of reached set after ref.:  212.22

Total time for CEGAR algorithm:      23.915s
Time for refinements:                 2.853s
Average time for refinement:          0.032s
Max time for refinement:              0.110s

Code Coverage
-----------------------------
  Function coverage:      0.074
  Visited lines:          1147
  Total lines:            3399
  Line coverage:          0.337
  Visited conditions:     56
  Total conditions:       732
  Condition coverage:     0.077

CPAchecker general statistics
-----------------------------
Number of program locations:     4844
Number of CFA edges:             5463
Number of relevant variables:    703
Number of functions:             242
Number of loops:                 12
Size of reached set:             315
  Number of reached locations:   193 (4%)
    Avg states per location:     1
    Max states per location:     4 (at node N3608)
  Number of reached functions:   18 (7%)
  Number of partitions:          312
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1994 (before line 8337), Function main called from node N1979, stack depth 1 [49122b8f], stack [main]])
  Number of target states:       0
  Size of final wait list        11

Time for analysis setup:          6.315s
  Time for loading CPAs:          1.003s
  Time for loading parser:        0.706s
  Time for CFA construction:      4.455s
    Time for parsing file(s):     1.111s
    Time for AST to CFA:          1.731s
    Time for CFA sanity check:    0.347s
    Time for post-processing:     1.056s
      Time for var class.:        0.493s
Time for Analysis:               23.917s
CPU time for analysis:           23.910s
Total time for CPAchecker:       30.242s
Total CPU time for CPAchecker:   30.220s
Time for statistics:              0.103s

Time for Garbage Collector:       0.535s (in 63 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    69 MiB) max;     47MB (    45 MiB) avg;     75MB (    72 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
