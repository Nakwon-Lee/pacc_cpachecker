scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-mutex__drivers-net-can-mcp251x_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_65aphm5_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5368: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8432: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9524: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9560: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9881: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9895: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10262: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10451: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10478: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10506: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5588: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5629: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8630: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8641: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8652: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9646: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8453: Ignoring call via function pointer ldv_interrupt_instance_handler_1_5::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8453: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function open_candev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_candev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_candev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function clk_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function clk_unprepare to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5411: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5629: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9038: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_xmalloc(1432UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 8641: Ignoring call via function pointer ldv_platform_instance_release_4_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8641: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1366465 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1086553 (80%)
  Because of loop head:            247974 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         31938 (2%)
  Times precision was empty:       325256 (24%)
  Times precision was {false}:     2634 (0%)
  Times result was cached:         987616 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      50959 (4%)
  Times result was 'false':        172951 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         2261304
  BDD entailment checks:           2073020
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          40
Number of abstraction locations:          154
Max number of predicates per location:    39
Avg number of predicates per location:    12
Total predicates per abstraction:         16965560
Max number of predicates per abstraction: 39
Avg number of predicates per abstraction: 316.56
Number of irrelevant predicates:          3918003 (23%)
Number of preds handled by boolean abs:   853979 (5%)
  Total number of models for allsat:      487606
  Max number of models for allsat:        720
  Avg number of models for allsat:        9.57

Time for post operator:                 23.313s
  Time for path formula creation:       21.134s
Time for strengthen operator:            4.532s
Time for prec operator:                714.575s
  Time for abstraction:                701.126s (Max:     0.583s, Count: 1366465)
    Boolean abstraction:               155.015s
    Solving time:                       73.274s (Max:     0.020s)
    Model enumeration time:             46.822s
    Time for BDD construction:          24.174s (Max:     0.104s)
Time for merge operator:                 0.670s
Time for coverage check:                 3.134s
  Time for BDD entailment checks:        2.798s
Total time for SMT solver (w/o itp):   120.096s

Number of path formula cache hits:   6095093 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.954s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               215254
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      349489 (count: 2843445, min: 0, max: 2749, avg: 0.12)
Time for BDD node cleanup:                             0.476s
Time for BDD garbage collection:                       0.193s (in 14 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.737s
  Time for transition matches:                         3.094s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.042s
Automaton transfers with branching:                0
Automaton transfer successors:                      5138795 (count: 5138795, min: 1, max: 1, avg: 1.00) [1 x 5138795]

CPA algorithm statistics
------------------------
Number of iterations:            4215556
Max size of waitlist:            306
Average size of waitlist:        116
Number of computed successors:   4723292
Max successors for one state:    2
Number of times merged:          94142
Number of times stopped:         293545
Number of times breaked:         927

Total time for CPA algorithm:       858.533s (Max:    10.833s)
  Time for choose from waitlist:      1.698s
  Time for precision adjustment:    744.516s
  Time for transfer relation:        79.513s
  Time for merge operator:            4.194s
  Time for stop operator:            11.570s
  Time for adding to reached set:     6.736s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   927
Avg. length of target path (in blocks):               63598 (count: 927, min: 15, max: 160, avg: 68.61)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  23.883s
  Counterexample analysis:                            14.981s (Max:     0.055s, Calls: 927)
    Refinement sat check:                              8.054s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.051s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.324s
  Precision update:                                    0.988s
  ARG update:                                          7.123s

Length of refined path (in blocks):                   46157 (count: 927, min: 11, max: 118, avg: 49.79)
Number of affected states:                            20500 (count: 927, min: 4, max: 117, avg: 22.11)
Length (states) of path with itp 'true':              24730 (count: 927, min: 0, max: 89, avg: 26.68)
Length (states) of path with itp non-trivial itp:     20500 (count: 927, min: 4, max: 117, avg: 22.11)
Length (states) of path with itp 'false':               851 (count: 927, min: 0, max: 1, avg: 0.92)
Different non-trivial interpolants along paths:         119 (count: 927, min: 0, max: 2, avg: 0.13)
Equal non-trivial interpolants along paths:           19454 (count: 927, min: 3, max: 116, avg: 20.99)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                927
Number of successful refinements:     927
Number of failed refinements:         0
Max. size of reached set before ref.: 33191
Max. size of reached set after ref.:  19597
Avg. size of reached set before ref.: 10479.31
Avg. size of reached set after ref.:  5901.63

Total time for CEGAR algorithm:     893.542s
Time for refinements:                31.272s
Average time for refinement:          0.033s
Max time for refinement:              0.138s

Code Coverage
-----------------------------
  Function coverage:      0.182
  Visited lines:          1319
  Total lines:            3399
  Line coverage:          0.388
  Visited conditions:     86
  Total conditions:       732
  Condition coverage:     0.117

CPAchecker general statistics
-----------------------------
Number of program locations:     4844
Number of CFA edges:             5463
Number of relevant variables:    703
Number of functions:             242
Number of loops:                 12
Size of reached set:             13291
  Number of reached locations:   407 (8%)
    Avg states per location:     32
    Max states per location:     299 (at node N3607)
  Number of reached functions:   44 (18%)
  Number of partitions:          12978
    Avg size of partitions:      1
    Max size of partitions:      39 (with key [N1994 (before line 8337), Function main called from node N1979, stack depth 1 [49122b8f], stack [main]])
  Number of target states:       0
  Size of final wait list        162

Time for analysis setup:          6.683s
  Time for loading CPAs:          1.097s
  Time for loading parser:        0.714s
  Time for CFA construction:      4.705s
    Time for parsing file(s):     1.228s
    Time for AST to CFA:          1.813s
    Time for CFA sanity check:    0.331s
    Time for post-processing:     1.117s
      Time for var class.:        0.542s
Time for Analysis:              893.542s
CPU time for analysis:          893.380s
Total time for CPAchecker:      900.236s
Total CPU time for CPAchecker:  900.060s
Time for statistics:              0.297s

Time for Garbage Collector:      51.427s (in 3158 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                326MB (   311 MiB) max;    164MB (   157 MiB) avg;    334MB (   319 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           345MB (   329 MiB) max;    243MB (   231 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   9170MB (  8745 MiB) max;   8570MB (  8173 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
