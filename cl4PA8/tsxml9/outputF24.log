scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-mutex__drivers-net-can-mcp251x_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_e0k38491/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5368: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8432: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9524: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9560: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9881: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9895: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10262: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10451: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10478: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10506: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5588: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5629: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8630: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8641: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8652: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9646: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8453: Ignoring call via function pointer ldv_interrupt_instance_handler_1_5::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8453: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function open_candev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_candev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_candev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function clk_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function clk_unprepare to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5411: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5629: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9038: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_xmalloc(1432UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 8641: Ignoring call via function pointer ldv_platform_instance_release_4_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8641: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1400949 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1115987 (80%)
  Because of loop head:            257887 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         27075 (2%)
  Times precision was empty:       358126 (26%)
  Times precision was {false}:     2448 (0%)
  Times result was cached:         998291 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      42084 (3%)
  Times result was 'false':        191064 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         2617918
  BDD entailment checks:           2402232
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          39
Number of abstraction locations:          154
Max number of predicates per location:    38
Avg number of predicates per location:    13
Total predicates per abstraction:         17886649
Max number of predicates per abstraction: 38
Avg number of predicates per abstraction: 401.66
Number of irrelevant predicates:          4483096 (25%)
Number of preds handled by boolean abs:   708308 (4%)
  Total number of models for allsat:      373975
  Max number of models for allsat:        384
  Avg number of models for allsat:        8.89

Time for post operator:                 22.729s
  Time for path formula creation:       20.093s
Time for strengthen operator:            5.068s
Time for prec operator:                698.760s
  Time for abstraction:                684.975s (Max:     0.633s, Count: 1400949)
    Boolean abstraction:               119.189s
    Solving time:                       58.351s (Max:     0.019s)
    Model enumeration time:             35.433s
    Time for BDD construction:          16.822s (Max:     0.094s)
Time for merge operator:                 0.760s
Time for coverage check:                 3.394s
  Time for BDD entailment checks:        2.956s
Total time for SMT solver (w/o itp):    93.784s

Number of path formula cache hits:   6514557 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.462s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               135480
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      265279 (count: 3119139, min: 0, max: 2166, avg: 0.09)
Time for BDD node cleanup:                             0.487s
Time for BDD garbage collection:                       0.161s (in 7 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.554s
  Time for transition matches:                         3.541s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.033s
Automaton transfers with branching:                0
Automaton transfer successors:                      5508011 (count: 5508011, min: 1, max: 1, avg: 1.00) [1 x 5508011]

CPA algorithm statistics
------------------------
Number of iterations:            4504389
Max size of waitlist:            275
Average size of waitlist:        112
Number of computed successors:   5065187
Max successors for one state:    2
Number of times merged:          107843
Number of times stopped:         316795
Number of times breaked:         1345

Total time for CPA algorithm:       847.037s (Max:     8.188s)
  Time for choose from waitlist:      2.059s
  Time for precision adjustment:    728.692s
  Time for transfer relation:        81.356s
  Time for merge operator:            4.328s
  Time for stop operator:            12.372s
  Time for adding to reached set:     7.466s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1345
Avg. length of target path (in blocks):               99827 (count: 1345, min: 15, max: 194, avg: 74.22)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  32.044s
  Counterexample analysis:                            21.816s (Max:     0.048s, Calls: 1345)
    Refinement sat check:                             11.479s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.061s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.413s
  Precision update:                                    1.190s
  ARG update:                                          7.930s

Length of refined path (in blocks):                   73227 (count: 1345, min: 11, max: 152, avg: 54.44)
Number of affected states:                            26072 (count: 1345, min: 4, max: 151, avg: 19.38)
Length (states) of path with itp 'true':              45810 (count: 1345, min: 0, max: 119, avg: 34.06)
Length (states) of path with itp non-trivial itp:     26072 (count: 1345, min: 4, max: 151, avg: 19.38)
Length (states) of path with itp 'false':              1269 (count: 1345, min: 0, max: 1, avg: 0.94)
Different non-trivial interpolants along paths:         142 (count: 1345, min: 0, max: 1, avg: 0.11)
Equal non-trivial interpolants along paths:           24585 (count: 1345, min: 3, max: 150, avg: 18.28)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1345
Number of successful refinements:     1345
Number of failed refinements:         0
Max. size of reached set before ref.: 23666
Max. size of reached set after ref.:  20156
Avg. size of reached set before ref.: 9028.46
Avg. size of reached set after ref.:  5650.69

Total time for CEGAR algorithm:     893.858s
Time for refinements:                41.913s
Average time for refinement:          0.031s
Max time for refinement:              0.114s

Code Coverage
-----------------------------
  Function coverage:      0.231
  Visited lines:          1439
  Total lines:            3399
  Line coverage:          0.423
  Visited conditions:     124
  Total conditions:       732
  Condition coverage:     0.169

CPAchecker general statistics
-----------------------------
Number of program locations:     4844
Number of CFA edges:             5463
Number of relevant variables:    703
Number of functions:             242
Number of loops:                 12
Size of reached set:             14227
  Number of reached locations:   555 (11%)
    Avg states per location:     25
    Max states per location:     301 (at node N3607)
  Number of reached functions:   56 (23%)
  Number of partitions:          14022
    Avg size of partitions:      1
    Max size of partitions:      29 (with key [N1994 (before line 8337), Function main called from node N1979, stack depth 1 [49122b8f], stack [main]])
  Number of target states:       0
  Size of final wait list        116

Time for analysis setup:          6.426s
  Time for loading CPAs:          0.938s
  Time for loading parser:        0.680s
  Time for CFA construction:      4.717s
    Time for parsing file(s):     1.167s
    Time for AST to CFA:          1.839s
    Time for CFA sanity check:    0.333s
    Time for post-processing:     1.176s
      Time for var class.:        0.522s
Time for Analysis:              893.858s
CPU time for analysis:          893.710s
Total time for CPAchecker:      900.290s
Total CPU time for CPAchecker:  900.130s
Time for statistics:              0.360s

Time for Garbage Collector:      53.657s (in 3715 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                290MB (   276 MiB) max;    144MB (   137 MiB) avg;    295MB (   281 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           305MB (   291 MiB) max;    214MB (   204 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8898MB (  8486 MiB) max;   8502MB (  8108 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
