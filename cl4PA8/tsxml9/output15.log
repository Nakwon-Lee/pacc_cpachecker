scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-mutex__drivers-net-can-mcp251x_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_r7cl3a7b/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5368: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8432: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9524: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9560: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9881: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9895: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10262: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10451: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10478: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10506: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5588: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5629: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8630: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8641: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8652: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9646: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_candev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_candev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function clk_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function clk_unprepare to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5411: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5629: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            23940 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20323 (85%)
  Because of loop head:            2760 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         857 (4%)
  Times precision was empty:       5209 (22%)
  Times precision was {false}:     275 (1%)
  Times result was cached:         15961 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2495 (10%)
  Times result was 'false':        3821 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         6429
  BDD entailment checks:           4649
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          15
Number of abstraction locations:          114
Max number of predicates per location:    13
Avg number of predicates per location:    6
Total predicates per abstraction:         116876
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 42.19
Number of irrelevant predicates:          24134 (21%)
Number of preds handled by boolean abs:   11866 (10%)
  Total number of models for allsat:      2682
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.07

Time for post operator:                  2.359s
  Time for path formula creation:        2.232s
Time for strengthen operator:            0.176s
Time for prec operator:                 11.926s
  Time for abstraction:                 11.373s (Max:     0.024s, Count: 23940)
    Boolean abstraction:                 2.170s
    Solving time:                        1.385s (Max:     0.013s)
    Model enumeration time:              0.173s
    Time for BDD construction:           0.209s (Max:     0.022s)
Time for merge operator:                 0.076s
Time for coverage check:                 0.068s
  Time for BDD entailment checks:        0.065s
Total time for SMT solver (w/o itp):     1.558s

Number of path formula cache hits:   99469 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.835s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               2674
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6976 (count: 27570, min: 0, max: 730, avg: 0.25)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.529s
  Time for transition matches:                         0.164s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.011s
Automaton transfers with branching:                0
Automaton transfer successors:                        97175 (count: 97175, min: 1, max: 1, avg: 1.00) [1 x 97175]

CPA algorithm statistics
------------------------
Number of iterations:            77091
Max size of waitlist:            131
Average size of waitlist:        41
Number of computed successors:   87011
Max successors for one state:    2
Number of times merged:          890
Number of times stopped:         2352
Number of times breaked:         68

Total time for CPA algorithm:        19.894s (Max:     0.966s)
  Time for choose from waitlist:      0.152s
  Time for precision adjustment:     12.927s
  Time for transfer relation:         5.117s
  Time for merge operator:            0.193s
  Time for stop operator:             0.334s
  Time for adding to reached set:     0.339s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   68
Avg. length of target path (in blocks):                8441 (count: 68, min: 31, max: 254, avg: 124.13)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.511s
  Counterexample analysis:                             2.800s (Max:     0.085s, Calls: 68)
    Refinement sat check:                              1.132s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.137s
  Precision update:                                    0.099s
  ARG update:                                          0.310s

Length of refined path (in blocks):                    7116 (count: 67, min: 11, max: 185, avg: 106.21)
Number of affected states:                             6131 (count: 67, min: 4, max: 184, avg: 91.51)
Length (states) of path with itp 'true':                918 (count: 67, min: 0, max: 113, avg: 13.70)
Length (states) of path with itp non-trivial itp:      6131 (count: 67, min: 4, max: 184, avg: 91.51)
Length (states) of path with itp 'false':                26 (count: 67, min: 0, max: 1, avg: 0.39)
Different non-trivial interpolants along paths:          41 (count: 67, min: 0, max: 1, avg: 0.61)
Equal non-trivial interpolants along paths:            6023 (count: 67, min: 3, max: 183, avg: 89.90)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                68
Number of successful refinements:     67
Number of failed refinements:         0
Max. size of reached set before ref.: 2890
Max. size of reached set after ref.:  1451
Avg. size of reached set before ref.: 1301.12
Avg. size of reached set after ref.:  113.99

Total time for CEGAR algorithm:      23.690s
Time for refinements:                 3.786s
Average time for refinement:          0.055s
Max time for refinement:              0.118s

Code Coverage
-----------------------------
  Function coverage:      0.202
  Visited lines:          1343
  Total lines:            3399
  Line coverage:          0.395
  Visited conditions:     88
  Total conditions:       732
  Condition coverage:     0.120

CPAchecker general statistics
-----------------------------
Number of program locations:     4844
Number of CFA edges:             5463
Number of relevant variables:    703
Number of functions:             242
Number of loops:                 12
Size of reached set:             2229
  Number of reached locations:   422 (9%)
    Avg states per location:     5
    Max states per location:     52 (at node N3608)
  Number of reached functions:   49 (20%)
  Number of partitions:          2204
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N1994 (before line 8337), Function main called from node N1979, stack depth 1 [49122b8f], stack [main]])
  Number of target states:       1
  Size of final wait list        100

Time for analysis setup:          6.583s
  Time for loading CPAs:          1.137s
  Time for loading parser:        0.631s
  Time for CFA construction:      4.640s
    Time for parsing file(s):     1.170s
    Time for AST to CFA:          1.794s
    Time for CFA sanity check:    0.329s
    Time for post-processing:     1.161s
      Time for var class.:        0.441s
Time for Analysis:               23.690s
CPU time for analysis:           23.690s
Total time for CPAchecker:       30.277s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.146s

Time for Garbage Collector:       0.576s (in 62 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     48MB (    46 MiB) avg;     75MB (    72 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    32 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
