scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-media-usb-uvc-uvcvideo_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kxx6dzmf/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5768: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11119: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11271: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11524: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12260: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 12265: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 12275: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 12279: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12316: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 12321: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 12326: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 12335: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12409: Dead code detected: [size == 1U] (CFACreationUtils.addEdgeToCFA, INFO)

line 12409: Dead code detected: [!(size == 1U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12414: Dead code detected: [size == 2U] (CFACreationUtils.addEdgeToCFA, INFO)

line 12414: Dead code detected: [!(size == 2U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12419: Dead code detected: [size == 4U] (CFACreationUtils.addEdgeToCFA, INFO)

line 12419: Dead code detected: [!(size == 4U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12424: Dead code detected: [size == 8U] (CFACreationUtils.addEdgeToCFA, INFO)

line 12424: Dead code detected: [!(size == 8U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12429: Dead code detected: [size == 10U] (CFACreationUtils.addEdgeToCFA, INFO)

line 12429: Dead code detected: [!(size == 10U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12434: Dead code detected: [size == 16U] (CFACreationUtils.addEdgeToCFA, INFO)

line 12434: Dead code detected: [!(size == 16U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12410: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 12415: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 12420: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 12425: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 12430: Dead code detected: Goto: case_10 (CFACreationUtils.addEdgeToCFA, INFO)

line 12435: Dead code detected: Goto: case_16 (CFACreationUtils.addEdgeToCFA, INFO)

line 12439: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_16 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_10 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12528: Dead code detected: [size == 1U] (CFACreationUtils.addEdgeToCFA, INFO)

line 12528: Dead code detected: [!(size == 1U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12533: Dead code detected: [size == 2U] (CFACreationUtils.addEdgeToCFA, INFO)

line 12533: Dead code detected: [!(size == 2U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12538: Dead code detected: [size == 4U] (CFACreationUtils.addEdgeToCFA, INFO)

line 12538: Dead code detected: [!(size == 4U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12543: Dead code detected: [size == 8U] (CFACreationUtils.addEdgeToCFA, INFO)

line 12543: Dead code detected: [!(size == 8U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12548: Dead code detected: [size == 10U] (CFACreationUtils.addEdgeToCFA, INFO)

line 12548: Dead code detected: [!(size == 10U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12553: Dead code detected: [size == 16U] (CFACreationUtils.addEdgeToCFA, INFO)

line 12553: Dead code detected: [!(size == 16U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12529: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 12534: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 12539: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 12544: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 12549: Dead code detected: Goto: case_10 (CFACreationUtils.addEdgeToCFA, INFO)

line 12554: Dead code detected: Goto: case_16 (CFACreationUtils.addEdgeToCFA, INFO)

line 12558: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_16 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_10 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 14649: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 14654: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 14664: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 14668: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 14717: Dead code detected: Goto: case_1___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 14722: Dead code detected: Goto: case_2___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 14732: Dead code detected: Goto: case_8___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 14736: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 14855: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 14860: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 14870: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 14874: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 15001: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 15006: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 15016: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 15020: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 15740: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 19007: Function pointer *(mapping->get) with type __s32 (*)(struct uvc_control_mapping *, __u8 , __u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19194: Function pointer *(mapping->get) with type __s32 (*)(struct uvc_control_mapping *, __u8 , __u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19186: Function pointer *(mapping->get) with type __s32 (*)(struct uvc_control_mapping *, __u8 , __u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19178: Function pointer *(mapping->get) with type __s32 (*)(struct uvc_control_mapping *, __u8 , __u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19114: Function pointer *(mapping->get) with type __s32 (*)(struct uvc_control_mapping *, __u8 , __u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19870: Function pointer *(mapping->get) with type __s32 (*)(struct uvc_control_mapping *, __u8 , __u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19812: Function pointer *(mapping->get) with type __s32 (*)(struct uvc_control_mapping *, __u8 , __u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19814: Function pointer *(mapping->get) with type __s32 (*)(struct uvc_control_mapping *, __u8 , __u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19816: Function pointer *(mapping->get) with type __s32 (*)(struct uvc_control_mapping *, __u8 , __u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19292: Function pointer *(mapping->get) with type __s32 (*)(struct uvc_control_mapping *, __u8 , __u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 22087: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 22089: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10254: Ignoring call via function pointer ldv_file_operations_instance_write_0_4::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2, arg3, arg4); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10254: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2, arg3, arg4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10350: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function mutex_lock_interruptible_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_alloc_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_streamoff to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_streamon to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            875375 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  723615 (83%)
  Because of loop head:            103329 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         48431 (6%)
  Times precision was empty:       146594 (17%)
  Times precision was {false}:     1187 (0%)
  Times result was cached:         679623 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      47971 (5%)
  Times result was 'false':        195888 (22%)
Number of strengthen sat checks:   0
Number of coverage checks:         454982
  BDD entailment checks:           337294
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       74
Number of predicates discovered:          57
Number of abstraction locations:          251
Max number of predicates per location:    44
Avg number of predicates per location:    21
Total predicates per abstraction:         14641035
Max number of predicates per abstraction: 44
Avg number of predicates per abstraction: 297.84
Number of irrelevant predicates:          2249207 (15%)
Number of preds handled by boolean abs:   875573 (6%)
  Total number of models for allsat:      77335
  Max number of models for allsat:        20
  Avg number of models for allsat:        1.61

Time for post operator:                 28.620s
  Time for path formula creation:       26.938s
Time for strengthen operator:            3.115s
Time for prec operator:                559.713s
  Time for abstraction:                549.850s (Max:     0.612s, Count: 875375)
    Boolean abstraction:                79.873s
    Solving time:                       57.318s (Max:     0.330s)
    Model enumeration time:              6.898s
    Time for BDD construction:           3.378s (Max:     0.196s)
Time for merge operator:                 0.728s
Time for coverage check:                 0.497s
  Time for BDD entailment checks:        0.429s
Total time for SMT solver (w/o itp):    64.216s

Number of path formula cache hits:   4196339 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.861s

Total number of created targets for pointer analysis: 8115
   Number of created targets for uf: *unsigned_short_int is 61
   Number of created targets for uf: *(void)* is 80
   Number of created targets for uf: *signed_int is 21
   Number of created targets for uf: *unsigned_char is 1045
   Number of created targets for uf: *(struct_list_head)* is 123
   Number of created targets for uf: *unsigned_int is 164


Number of BDD nodes:                               232337
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      247663 (count: 863105, min: 0, max: 1926, avg: 0.29)
Time for BDD node cleanup:                             0.230s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.033s
  Time for transition matches:                         2.880s
  Time for transition assertions:                      0.009s
  Time for transition actions:                         0.050s
Automaton transfers with branching:                0
Automaton transfer successors:                      3803004 (count: 3803004, min: 1, max: 1, avg: 1.00) [1 x 3803004]

CPA algorithm statistics
------------------------
Number of iterations:            3048569
Max size of waitlist:            246
Average size of waitlist:        94
Number of computed successors:   3466791
Max successors for one state:    2
Number of times merged:          58844
Number of times stopped:         132212
Number of times breaked:         697

Total time for CPA algorithm:       673.060s (Max:     3.372s)
  Time for choose from waitlist:      1.663s
  Time for precision adjustment:    579.129s
  Time for transfer relation:        72.322s
  Time for merge operator:            2.189s
  Time for stop operator:             4.876s
  Time for adding to reached set:     5.668s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   697
Avg. length of target path (in blocks):              119531 (count: 697, min: 29, max: 287, avg: 171.49)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 215.184s
  Counterexample analysis:                           208.658s (Max:     0.694s, Calls: 697)
    Refinement sat check:                            163.743s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.076s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.641s
  Precision update:                                    1.154s
  ARG update:                                          4.006s

Length of refined path (in blocks):                  105822 (count: 697, min: 9, max: 243, avg: 151.82)
Number of affected states:                            95168 (count: 697, min: 4, max: 242, avg: 136.54)
Length (states) of path with itp 'true':               9957 (count: 697, min: 0, max: 192, avg: 14.29)
Length (states) of path with itp non-trivial itp:     95168 (count: 697, min: 4, max: 242, avg: 136.54)
Length (states) of path with itp 'false':               406 (count: 697, min: 0, max: 1, avg: 0.58)
Different non-trivial interpolants along paths:         402 (count: 697, min: 0, max: 5, avg: 0.58)
Equal non-trivial interpolants along paths:           94069 (count: 697, min: 3, max: 240, avg: 134.96)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                697
Number of successful refinements:     697
Number of failed refinements:         0
Max. size of reached set before ref.: 8568
Max. size of reached set after ref.:  6503
Avg. size of reached set before ref.: 4753.17
Avg. size of reached set after ref.:  255.44

Total time for CEGAR algorithm:     890.891s
Time for refinements:               217.701s
Average time for refinement:          0.312s
Max time for refinement:              0.711s

Code Coverage
-----------------------------
  Function coverage:      0.118
  Visited lines:          1786
  Total lines:            9028
  Line coverage:          0.198
  Visited conditions:     212
  Total conditions:       2862
  Condition coverage:     0.074

CPAchecker general statistics
-----------------------------
Number of program locations:     13037
Number of CFA edges:             14970
Number of relevant variables:    2179
Number of functions:             459
Number of loops:                 97
Size of reached set:             3778
  Number of reached locations:   784 (6%)
    Avg states per location:     4
    Max states per location:     63 (at node N13464)
  Number of reached functions:   54 (12%)
  Number of partitions:          3754
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N3194 (before line 10141), Function main called from node N3177, stack depth 1 [726a5e6a], stack [main]])
  Number of target states:       0
  Size of final wait list        107

Time for analysis setup:          9.382s
  Time for loading CPAs:          1.169s
  Time for loading parser:        0.740s
  Time for CFA construction:      7.310s
    Time for parsing file(s):     1.366s
    Time for AST to CFA:          2.772s
    Time for CFA sanity check:    0.789s
    Time for post-processing:     2.231s
      Time for var class.:        1.117s
Time for Analysis:              890.891s
CPU time for analysis:          890.760s
Total time for CPAchecker:      900.277s
Total CPU time for CPAchecker:  900.110s
Time for statistics:              0.202s

Time for Garbage Collector:      25.025s (in 2930 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                234MB (   223 MiB) max;    135MB (   129 MiB) avg;    257MB (   245 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           308MB (   294 MiB) max;    209MB (   200 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   9768MB (  9316 MiB) max;   8942MB (  8527 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
