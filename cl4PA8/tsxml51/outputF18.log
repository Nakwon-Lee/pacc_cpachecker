scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-media-usb-uvc-uvcvideo_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_y6s080vy/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5768: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11119: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11271: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11524: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12260: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 12265: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 12275: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 12279: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12316: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 12321: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 12326: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 12335: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12409: Dead code detected: [size == 1U] (CFACreationUtils.addEdgeToCFA, INFO)

line 12409: Dead code detected: [!(size == 1U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12414: Dead code detected: [size == 2U] (CFACreationUtils.addEdgeToCFA, INFO)

line 12414: Dead code detected: [!(size == 2U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12419: Dead code detected: [size == 4U] (CFACreationUtils.addEdgeToCFA, INFO)

line 12419: Dead code detected: [!(size == 4U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12424: Dead code detected: [size == 8U] (CFACreationUtils.addEdgeToCFA, INFO)

line 12424: Dead code detected: [!(size == 8U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12429: Dead code detected: [size == 10U] (CFACreationUtils.addEdgeToCFA, INFO)

line 12429: Dead code detected: [!(size == 10U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12434: Dead code detected: [size == 16U] (CFACreationUtils.addEdgeToCFA, INFO)

line 12434: Dead code detected: [!(size == 16U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12410: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 12415: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 12420: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 12425: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 12430: Dead code detected: Goto: case_10 (CFACreationUtils.addEdgeToCFA, INFO)

line 12435: Dead code detected: Goto: case_16 (CFACreationUtils.addEdgeToCFA, INFO)

line 12439: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_16 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_10 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12528: Dead code detected: [size == 1U] (CFACreationUtils.addEdgeToCFA, INFO)

line 12528: Dead code detected: [!(size == 1U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12533: Dead code detected: [size == 2U] (CFACreationUtils.addEdgeToCFA, INFO)

line 12533: Dead code detected: [!(size == 2U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12538: Dead code detected: [size == 4U] (CFACreationUtils.addEdgeToCFA, INFO)

line 12538: Dead code detected: [!(size == 4U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12543: Dead code detected: [size == 8U] (CFACreationUtils.addEdgeToCFA, INFO)

line 12543: Dead code detected: [!(size == 8U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12548: Dead code detected: [size == 10U] (CFACreationUtils.addEdgeToCFA, INFO)

line 12548: Dead code detected: [!(size == 10U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12553: Dead code detected: [size == 16U] (CFACreationUtils.addEdgeToCFA, INFO)

line 12553: Dead code detected: [!(size == 16U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12529: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 12534: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 12539: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 12544: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 12549: Dead code detected: Goto: case_10 (CFACreationUtils.addEdgeToCFA, INFO)

line 12554: Dead code detected: Goto: case_16 (CFACreationUtils.addEdgeToCFA, INFO)

line 12558: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_16 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_10 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 14649: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 14654: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 14664: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 14668: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 14717: Dead code detected: Goto: case_1___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 14722: Dead code detected: Goto: case_2___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 14732: Dead code detected: Goto: case_8___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 14736: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 14855: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 14860: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 14870: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 14874: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 15001: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 15006: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 15016: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 15020: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 15740: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 19007: Function pointer *(mapping->get) with type __s32 (*)(struct uvc_control_mapping *, __u8 , __u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19194: Function pointer *(mapping->get) with type __s32 (*)(struct uvc_control_mapping *, __u8 , __u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19186: Function pointer *(mapping->get) with type __s32 (*)(struct uvc_control_mapping *, __u8 , __u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19178: Function pointer *(mapping->get) with type __s32 (*)(struct uvc_control_mapping *, __u8 , __u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19114: Function pointer *(mapping->get) with type __s32 (*)(struct uvc_control_mapping *, __u8 , __u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19870: Function pointer *(mapping->get) with type __s32 (*)(struct uvc_control_mapping *, __u8 , __u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19812: Function pointer *(mapping->get) with type __s32 (*)(struct uvc_control_mapping *, __u8 , __u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19814: Function pointer *(mapping->get) with type __s32 (*)(struct uvc_control_mapping *, __u8 , __u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19816: Function pointer *(mapping->get) with type __s32 (*)(struct uvc_control_mapping *, __u8 , __u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19292: Function pointer *(mapping->get) with type __s32 (*)(struct uvc_control_mapping *, __u8 , __u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l_printk_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_usercopy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function no_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_devdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_alloc_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_fh_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_fh_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function compat_alloc_user_space to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function copy_in_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __clear_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ktime_get_ts to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_streamoff to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_streamon to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15696: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11195: Ignoring call via function pointer ldv_usb_instance_pre_5_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11195: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11184: Ignoring call via function pointer ldv_usb_instance_post_5_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11184: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function video_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_intf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function media_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function media_entity_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_driver_release_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_device_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11440: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function mutex_lock_interruptible_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 19007: Ignoring function call through function pointer *(mapping->get): *value = (*(mapping->get))(mapping, 129, (__u8 *)tmp___0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 19114: Ignoring function call through function pointer *(mapping->get): v4l2_ctrl->default_value = (*(mapping->get))(mapping, 135, (__u8 *)tmp___1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function v4l2_event_queue_fh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10596: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_xmalloc(136UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10586: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(136UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10350: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 22087: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15698: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15656: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_xmalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function v4l2_ctrl_replace to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_merge to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strncasecmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 22089: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15658: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_xmalloc(184UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_intf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_string to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_ifnum_to_if to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_driver_claim_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmemdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function media_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_match_one_id to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memweight to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_prio_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_queue_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_device_alloc to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __video_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function media_entity_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_device_register_subdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function media_entity_create_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_enable_autosuspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10254: Ignoring call via function pointer ldv_file_operations_instance_write_0_4::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2, arg3, arg4); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10254: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2, arg3, arg4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1540820 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1261131 (82%)
  Because of loop head:            276448 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3241 (0%)
  Times precision was empty:       1116384 (72%)
  Times precision was {false}:     1580 (0%)
  Times result was cached:         418019 (27%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4837 (0%)
  Times result was 'false':        17839 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1239144
  BDD entailment checks:           400388
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       74
Number of predicates discovered:          59
Number of abstraction locations:          219
Max number of predicates per location:    49
Avg number of predicates per location:    5
Total predicates per abstraction:         2102933
Max number of predicates per abstraction: 49
Avg number of predicates per abstraction: 327.71
Number of irrelevant predicates:          1587734 (76%)
Number of preds handled by boolean abs:   38568 (2%)
  Total number of models for allsat:      14091
  Max number of models for allsat:        48
  Avg number of models for allsat:        2.91

Time for post operator:                116.243s
  Time for path formula creation:      112.269s
Time for strengthen operator:            7.324s
Time for prec operator:                232.970s
  Time for abstraction:                211.600s (Max:    20.668s, Count: 1540820)
    Boolean abstraction:                12.709s
    Solving time:                       45.449s (Max:    20.605s)
    Model enumeration time:              1.357s
    Time for BDD construction:           0.457s (Max:     0.013s)
Time for merge operator:                 8.068s
Time for coverage check:                 0.481s
  Time for BDD entailment checks:        0.314s
Total time for SMT solver (w/o itp):    46.806s

Number of path formula cache hits:   10217506 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    62.787s

Total number of created targets for pointer analysis: 1085086
   Number of created targets for uf: *(struct_device_private)* is 17
   Number of created targets for uf: *(void)* is 5
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_3,_Parameter_1_type:_[(struct_uvc_control_mapping)*],_Parameter_2_type:_[unsigned_char],_Parameter_3_type:_[(unsigned_char)*],_VarArgs:_false)* is 81
   Number of created targets for uf: *(struct_uvc_entity)* is 5
   Number of created targets for uf: *(unsigned_char)* is 5
   Number of created targets for uf: *(struct_uvc_control_mapping)* is 13
   Number of created targets for uf: *(unsigned_int)* is 5
   Number of created targets for uf: *unsigned_long_int is 505
   Number of created targets for uf: *unsigned_short_int is 6077
   Number of created targets for uf: *(struct_uvc_control)* is 25
   Number of created targets for uf: *signed_int is 81
   Number of created targets for uf: *unsigned_char is 12541
   Number of created targets for uf: *(struct_list_head)* is 3921
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_3,_Parameter_1_type:_[(struct_uvc_control_mapping)*],_Parameter_2_type:_[signed_int],_Parameter_3_type:_[(unsigned_char)*],_VarArgs:_false)* is 81
   Number of created targets for uf: *(struct_uvc_menu_info)* is 988
   Number of created targets for uf: *unsigned_int is 1468
   Number of created targets for uf: *(struct_device)* is 11


Number of BDD nodes:                               60749
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       30986 (count: 1564351, min: 0, max: 1493, avg: 0.02)
Time for BDD node cleanup:                             0.242s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.883s
  Time for transition matches:                         5.943s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                      8519115 (count: 8519115, min: 1, max: 1, avg: 1.00) [1 x 8519115]

CPA algorithm statistics
------------------------
Number of iterations:            5965749
Max size of waitlist:            97
Average size of waitlist:        39
Number of computed successors:   6749466
Max successors for one state:    2
Number of times merged:          419378
Number of times stopped:         757365
Number of times breaked:         831

Total time for CPA algorithm:       537.985s (Max:    31.340s)
  Time for choose from waitlist:      2.509s
  Time for precision adjustment:    276.466s
  Time for transfer relation:       209.947s
  Time for merge operator:           14.238s
  Time for stop operator:             9.474s
  Time for adding to reached set:     9.996s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   831
Avg. length of target path (in blocks):               46906 (count: 831, min: 13, max: 79, avg: 56.45)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 329.637s
  Counterexample analysis:                           317.735s (Max:     2.111s, Calls: 831)
    Refinement sat check:                            290.709s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.034s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.179s
  Precision update:                                    0.453s
  ARG update:                                         10.870s

Length of refined path (in blocks):                   43822 (count: 831, min: 9, max: 78, avg: 52.73)
Number of affected states:                            10036 (count: 831, min: 1, max: 77, avg: 12.08)
Length (states) of path with itp 'true':              32955 (count: 831, min: 0, max: 60, avg: 39.66)
Length (states) of path with itp non-trivial itp:     10036 (count: 831, min: 1, max: 77, avg: 12.08)
Length (states) of path with itp 'false':               137 (count: 831, min: 0, max: 1, avg: 0.16)
Different non-trivial interpolants along paths:         699 (count: 831, min: 0, max: 3, avg: 0.84)
Equal non-trivial interpolants along paths:            8506 (count: 831, min: 0, max: 75, avg: 10.24)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                831
Number of successful refinements:     831
Number of failed refinements:         0
Max. size of reached set before ref.: 40365
Max. size of reached set after ref.:  24702
Avg. size of reached set before ref.: 21641.91
Avg. size of reached set after ref.:  14500.58

Total time for CEGAR algorithm:     890.735s
Time for refinements:               343.905s
Average time for refinement:          0.413s
Max time for refinement:              2.173s

Code Coverage
-----------------------------
  Function coverage:      0.577
  Visited lines:          5828
  Total lines:            9028
  Line coverage:          0.646
  Visited conditions:     1640
  Total conditions:       2862
  Condition coverage:     0.573

CPAchecker general statistics
-----------------------------
Number of program locations:     13037
Number of CFA edges:             14970
Number of relevant variables:    2179
Number of functions:             459
Number of loops:                 97
Size of reached set:             39818
  Number of reached locations:   4993 (38%)
    Avg states per location:     7
    Max states per location:     417 (at node N12510)
  Number of reached functions:   265 (58%)
  Number of partitions:          39614
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N3194 (before line 10141), Function main called from node N3177, stack depth 1 [66046e7c], stack [main]])
  Number of target states:       0
  Size of final wait list        60

Time for analysis setup:          9.545s
  Time for loading CPAs:          1.116s
  Time for loading parser:        0.654s
  Time for CFA construction:      7.659s
    Time for parsing file(s):     1.400s
    Time for AST to CFA:          2.995s
    Time for CFA sanity check:    0.747s
    Time for post-processing:     2.361s
      Time for var class.:        1.101s
Time for Analysis:              890.735s
CPU time for analysis:          890.620s
Total time for CPAchecker:      900.284s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              0.708s

Time for Garbage Collector:      60.959s (in 1724 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                370MB (   353 MiB) max;    183MB (   174 MiB) avg;    380MB (   362 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           377MB (   359 MiB) max;    271MB (   258 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8490MB (  8097 MiB) max;   8281MB (  7898 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
