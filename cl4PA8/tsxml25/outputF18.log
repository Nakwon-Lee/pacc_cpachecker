scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-drivers-clk1__drivers-media-pci-bt8xx-bttv_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_x8fknjmc/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 14242: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15729: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 17267: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 18208: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 24510: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 24552: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 27529: Dead code detected: __ms = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 28087: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 28111: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 28135: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 28159: Dead code detected: __ms___2 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 29923: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 29928: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 29938: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 29942: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 31342: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 31358: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 33929: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 33967: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 33983: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 33999: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 34015: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 34031: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 34584: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 7037-7038: Function pointer *(btv->sd_tvaudio->ops->audio->s_routing) with type int (*)(struct v4l2_subdev *, u32 , u32 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7018-7019: Function pointer *(btv->sd_msp34xx->ops->audio->s_routing) with type int (*)(struct v4l2_subdev *, u32 , u32 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9736: Function pointer *(__sd->ops->tuner->g_tuner) with type int (*)(struct v4l2_subdev *, struct v4l2_tuner *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 26915: Function pointer *(__sd___0->ops->tuner->s_config) with type int (*)(struct v4l2_subdev *, const struct v4l2_priv_tun_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 26888: Function pointer *(__sd->ops->tuner->s_type_addr) with type int (*)(struct v4l2_subdev *, struct tuner_setup *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8190: Function pointer *(__sd->ops->tuner->s_tuner) with type int (*)(struct v4l2_subdev *, const struct v4l2_tuner *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8280: Function pointer *(__sd___0->ops->tuner->g_frequency) with type int (*)(struct v4l2_subdev *, struct v4l2_frequency *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8260: Function pointer *(__sd->ops->tuner->s_frequency) with type int (*)(struct v4l2_subdev *, const struct v4l2_frequency *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 32838: Function pointer *(sub->remove) with type void (*)(struct bttv_sub_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5930: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10804: Function pointer *(__sd->ops->tuner->g_tuner) with type int (*)(struct v4l2_subdev *, struct v4l2_tuner *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10964: Function pointer *(__sd->ops->core->ioctl) with type long int (*)(struct v4l2_subdev *, unsigned int, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10901: Function pointer *(__sd->ops->core->ioctl) with type long int (*)(struct v4l2_subdev *, unsigned int, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10754: Function pointer *(__sd->ops->core->ioctl) with type long int (*)(struct v4l2_subdev *, unsigned int, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10856: Function pointer *(__sd->ops->tuner->s_tuner) with type int (*)(struct v4l2_subdev *, const struct v4l2_tuner *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7172: Function pointer *(__sd->ops->core->s_std) with type int (*)(struct v4l2_subdev *, v4l2_std_id ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bus_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bus_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_handler_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function btcx_riscmem_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_device_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rc_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16991: Ignoring call via function pointer ldv_pci_instance_shutdown_1_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16991: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16980: Ignoring call via function pointer ldv_pci_instance_resume_early_1_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16980: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17015: Ignoring call via function pointer ldv_pci_instance_suspend_late_1_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17015: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17237: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17298: Ignoring call via function pointer ldv_pm_ops_instance_complete_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17298: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17386: Ignoring call via function pointer ldv_pm_ops_instance_restore_2_4::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17386: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 32838: Ignoring function call through function pointer *(sub->remove): (*(sub->remove))(sdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17408: Ignoring call via function pointer ldv_pm_ops_instance_restore_noirq_2_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17408: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17364: Ignoring call via function pointer ldv_pm_ops_instance_poweroff_noirq_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17364: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17397: Ignoring call via function pointer ldv_pm_ops_instance_restore_early_2_7::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17397: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17353: Ignoring call via function pointer ldv_pm_ops_instance_poweroff_late_2_8::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17353: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17342: Ignoring call via function pointer ldv_pm_ops_instance_poweroff_2_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17342: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17518: Ignoring call via function pointer ldv_pm_ops_instance_thaw_2_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17518: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17540: Ignoring call via function pointer ldv_pm_ops_instance_thaw_noirq_2_11::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17540: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17331: Ignoring call via function pointer ldv_pm_ops_instance_freeze_noirq_2_12::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17331: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17529: Ignoring call via function pointer ldv_pm_ops_instance_thaw_early_2_13::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17529: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17320: Ignoring call via function pointer ldv_pm_ops_instance_freeze_late_2_14::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17320: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17309: Ignoring call via function pointer ldv_pm_ops_instance_freeze_2_15::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17309: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17419: Ignoring call via function pointer ldv_pm_ops_instance_resume_2_16::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17419: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17430: Ignoring call via function pointer ldv_pm_ops_instance_resume_early_2_17::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17430: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17496: Ignoring call via function pointer ldv_pm_ops_instance_suspend_late_2_18::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17496: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17441: Ignoring call via function pointer ldv_pm_ops_instance_resume_noirq_2_19::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17441: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17507: Ignoring call via function pointer ldv_pm_ops_instance_suspend_noirq_2_20::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17507: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17485: Ignoring call via function pointer ldv_pm_ops_instance_suspend_2_21::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17485: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17375: Ignoring call via function pointer ldv_pm_ops_instance_prepare_2_22::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17375: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17463: Ignoring call via function pointer ldv_pm_ops_instance_runtime_resume_2_24::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17463: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            764358 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  716584 (94%)
  Because of loop head:            43759 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4015 (1%)
  Times precision was empty:       246861 (32%)
  Times precision was {false}:     661 (0%)
  Times result was cached:         512482 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4354 (1%)
  Times result was 'false':        112684 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         847889
  BDD entailment checks:           143547
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       278
Number of predicates discovered:          15
Number of abstraction locations:          268
Max number of predicates per location:    13
Avg number of predicates per location:    5
Total predicates per abstraction:         3458137
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 689.56
Number of irrelevant predicates:          691813 (20%)
Number of preds handled by boolean abs:   17707 (1%)
  Total number of models for allsat:      5456
  Max number of models for allsat:        9
  Avg number of models for allsat:        1.25

Time for post operator:                 95.022s
  Time for path formula creation:       92.015s
Time for strengthen operator:            4.178s
Time for prec operator:                158.480s
  Time for abstraction:                141.606s (Max:     0.757s, Count: 764358)
    Boolean abstraction:                 6.312s
    Solving time:                        5.782s (Max:     0.562s)
    Model enumeration time:              0.488s
    Time for BDD construction:           0.245s (Max:     0.016s)
Time for merge operator:                11.349s
Time for coverage check:                 0.258s
  Time for BDD entailment checks:        0.170s
Total time for SMT solver (w/o itp):     6.270s

Number of path formula cache hits:   5106538 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    34.420s

Total number of created targets for pointer analysis: 44495
   Number of created targets for uf: *signed_int is 39376
   Number of created targets for uf: *(struct_bttv)* is 5121


Number of BDD nodes:                               2529
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       10157 (count: 435346, min: 0, max: 389, avg: 0.02)
Time for BDD node cleanup:                             0.097s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.863s
  Time for transition matches:                         4.262s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.015s
Automaton transfers with branching:                0
Automaton transfer successors:                      4875152 (count: 4875152, min: 1, max: 1, avg: 1.00) [1 x 4875152]

CPA algorithm statistics
------------------------
Number of iterations:            3538773
Max size of waitlist:            555
Average size of waitlist:        258
Number of computed successors:   4342877
Max successors for one state:    2
Number of times merged:          352171
Number of times stopped:         421800
Number of times breaked:         791

Total time for CPA algorithm:       387.473s (Max:     3.246s)
  Time for choose from waitlist:      2.181s
  Time for precision adjustment:    185.046s
  Time for transfer relation:       149.861s
  Time for merge operator:           19.861s
  Time for stop operator:            13.795s
  Time for adding to reached set:     6.798s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   791
Avg. length of target path (in blocks):               83690 (count: 791, min: 27, max: 162, avg: 105.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 496.590s
  Counterexample analysis:                           489.113s (Max:     1.195s, Calls: 791)
    Refinement sat check:                            441.371s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.042s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.339s
  Precision update:                                    0.717s
  ARG update:                                          5.735s

Length of refined path (in blocks):                   56530 (count: 790, min: 9, max: 127, avg: 71.56)
Number of affected states:                            39200 (count: 790, min: 4, max: 126, avg: 49.62)
Length (states) of path with itp 'true':              16540 (count: 790, min: 0, max: 86, avg: 20.94)
Length (states) of path with itp non-trivial itp:     39200 (count: 790, min: 4, max: 126, avg: 49.62)
Length (states) of path with itp 'false':               667 (count: 790, min: 0, max: 1, avg: 0.84)
Different non-trivial interpolants along paths:         134 (count: 790, min: 0, max: 1, avg: 0.17)
Equal non-trivial interpolants along paths:           38276 (count: 790, min: 3, max: 124, avg: 48.45)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                791
Number of successful refinements:     790
Number of failed refinements:         0
Max. size of reached set before ref.: 8178
Max. size of reached set after ref.:  2354
Avg. size of reached set before ref.: 5505.30
Avg. size of reached set after ref.:  691.51

Total time for CEGAR algorithm:     887.992s
Time for refinements:               500.090s
Average time for refinement:          0.632s
Max time for refinement:              1.225s

Code Coverage
-----------------------------
  Function coverage:      0.138
  Visited lines:          2821
  Total lines:            13936
  Line coverage:          0.202
  Visited conditions:     608
  Total conditions:       4508
  Condition coverage:     0.135

CPAchecker general statistics
-----------------------------
Number of program locations:     20553
Number of CFA edges:             24054
Number of relevant variables:    2755
Number of functions:             726
Number of loops:                 71
Size of reached set:             6339
  Number of reached locations:   1404 (7%)
    Avg states per location:     4
    Max states per location:     76 (at node N61)
  Number of reached functions:   100 (14%)
  Number of partitions:          6319
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N6231 (before line 15324), Function main called from node N6183, stack depth 1 [b632594], stack [main]])
  Number of target states:       1
  Size of final wait list        363

Time for analysis setup:         12.430s
  Time for loading CPAs:          1.122s
  Time for loading parser:        0.751s
  Time for CFA construction:     10.440s
    Time for parsing file(s):     1.738s
    Time for AST to CFA:          3.582s
    Time for CFA sanity check:    1.171s
    Time for post-processing:     3.900s
      Time for var class.:        1.712s
Time for Analysis:              887.992s
CPU time for analysis:          887.870s
Total time for CPAchecker:      900.426s
Total CPU time for CPAchecker:  900.270s
Time for statistics:              0.277s

Time for Garbage Collector:      19.631s (in 1143 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                296MB (   282 MiB) max;    167MB (   159 MiB) avg;    306MB (   291 MiB) peak
Used non-heap memory:             49MB (    46 MiB) max;     42MB (    40 MiB) avg;     49MB (    47 MiB) peak
Allocated heap memory:           377MB (   359 MiB) max;    253MB (   241 MiB) avg
Allocated non-heap memory:        51MB (    49 MiB) max;     51MB (    48 MiB) avg
Total process virtual memory:   8426MB (  8035 MiB) max;   8275MB (  7891 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
