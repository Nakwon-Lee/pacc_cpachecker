scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__linux-kernel-locking-mutex__drivers-media-usb-em28xx-em28xx_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_063zvaqk/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6191: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6196: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6206: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 6210: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9922: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9956: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 10033: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 13093: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13118: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13141: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13224: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13346: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13407: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8799: Function pointer *(dev->em28xx_read_reg_req_len) with type int (*)(struct em28xx *, u8 , u16 , char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8811: Function pointer *(dev->em28xx_read_reg_req) with type int (*)(struct em28xx *, u8 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8747: Function pointer *(dev->em28xx_write_regs_req) with type int (*)(struct em28xx *, u8 , u16 , char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8767: Function pointer *(dev->em28xx_read_reg_req) with type int (*)(struct em28xx *, u8 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8461: Function pointer *(dev->em28xx_write_regs) with type int (*)(struct em28xx *, u16 , char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8526-8527: Function pointer *(dev->em28xx_read_reg_req_len) with type int (*)(struct em28xx *, u8 , u16 , char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8475: Function pointer *(dev->em28xx_read_reg) with type int (*)(struct em28xx *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8376-8377: Function pointer *(dev->em28xx_write_regs) with type int (*)(struct em28xx *, u16 , char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8391: Function pointer *(dev->em28xx_read_reg) with type int (*)(struct em28xx *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8672: Function pointer *(dev->em28xx_read_reg_req_len) with type int (*)(struct em28xx *, u8 , u16 , char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8684: Function pointer *(dev->em28xx_read_reg) with type int (*)(struct em28xx *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8588-8589: Function pointer *(dev->em28xx_write_regs_req) with type int (*)(struct em28xx *, u8 , u16 , char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8611: Function pointer *(dev->em28xx_read_reg) with type int (*)(struct em28xx *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14173: Function pointer *(subdev->ops->video->s_mbus_fmt) with type int (*)(struct v4l2_subdev *, struct v4l2_mbus_framefmt *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7517: Function pointer *(dev->usb_ctl.urb_data_copy) with type int (*)(struct em28xx *, struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6772: Function pointer *(dev->em28xx_read_reg_req_len) with type int (*)(struct em28xx *, u8 , u16 , char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13150: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13161: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13195: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13045: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function rt_mutex_trylock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rt_mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8799: Ignoring function call through function pointer *(dev->em28xx_read_reg_req_len): ret = (*(dev->em28xx_read_reg_req_len))(dev, 6, (int)addr, (char *)buf, (int)len); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8811: Ignoring function call through function pointer *(dev->em28xx_read_reg_req): ret = (*(dev->em28xx_read_reg_req))(dev, 8, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8461: Ignoring function call through function pointer *(dev->em28xx_write_regs): ret = (*(dev->em28xx_write_regs))(dev, 4, (char *)(&buf2), 2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8672: Ignoring function call through function pointer *(dev->em28xx_read_reg_req_len): ret = (*(dev->em28xx_read_reg_req_len))(dev, 2, (int)addr, (char *)buf, (int)len); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8684: Ignoring function call through function pointer *(dev->em28xx_read_reg): ret = (*(dev->em28xx_read_reg))(dev, 5); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8747: Ignoring function call through function pointer *(dev->em28xx_write_regs_req): ret = (*(dev->em28xx_write_regs_req))(dev, 6, (int)addr, (char *)buf, (int)len); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8767: Ignoring function call through function pointer *(dev->em28xx_read_reg_req): ret = (*(dev->em28xx_read_reg_req))(dev, 8, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 8588-8589: Ignoring function call through function pointer *(dev->em28xx_write_regs_req): ret = (*(dev->em28xx_write_regs_req))(dev, __CPAchecker_TMP_0, (int)addr, (char *)buf, (int)len); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8475: Ignoring function call through function pointer *(dev->em28xx_read_reg): ret = (*(dev->em28xx_read_reg))(dev, 5); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 8526-8527: Ignoring function call through function pointer *(dev->em28xx_read_reg_req_len): ret = (*(dev->em28xx_read_reg_req_len))(dev, 0, (int)(4U - ((unsigned int)len)), (char *)(&buf2), (int)len); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8611: Ignoring function call through function pointer *(dev->em28xx_read_reg): ret = (*(dev->em28xx_read_reg))(dev, 5); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8352: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 8376-8377: Ignoring function call through function pointer *(dev->em28xx_write_regs): ret = (*(dev->em28xx_write_regs))(dev, (int)(4U - ((unsigned int)len)), ((char *)(&b2)) + ((unsigned long)(4 - ((int)len))), ((int)len) + 2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8391: Ignoring function call through function pointer *(dev->em28xx_read_reg): ret = (*(dev->em28xx_read_reg))(dev, 5); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_first_zero_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_alloc_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13195: Ignoring call via function pointer ldv_usb_instance_resume_1_7::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13195: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13161: Ignoring call via function pointer ldv_usb_instance_pre_1_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13161: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13150: Ignoring call via function pointer ldv_usb_instance_post_1_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13150: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            485845 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  386635 (80%)
  Because of loop head:            87028 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12182 (3%)
  Times precision was empty:       64721 (13%)
  Times precision was {false}:     631 (0%)
  Times result was cached:         411753 (85%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8740 (2%)
  Times result was 'false':        10742 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1097648
  BDD entailment checks:           346192
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       103
Number of predicates discovered:          13
Number of abstraction locations:          133
Max number of predicates per location:    9
Avg number of predicates per location:    6
Total predicates per abstraction:         2047455
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 218.49
Number of irrelevant predicates:          939522 (46%)
Number of preds handled by boolean abs:   32874 (2%)
  Total number of models for allsat:      8758
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                 51.080s
  Time for path formula creation:       48.778s
Time for strengthen operator:            3.018s
Time for prec operator:                167.641s
  Time for abstraction:                158.046s (Max:     0.440s, Count: 485845)
    Boolean abstraction:                32.937s
    Solving time:                       31.418s (Max:     0.176s)
    Model enumeration time:              1.976s
    Time for BDD construction:           0.280s (Max:     0.012s)
Time for merge operator:                 7.479s
Time for coverage check:                 0.450s
  Time for BDD entailment checks:        0.309s
Total time for SMT solver (w/o itp):    33.394s

Number of path formula cache hits:   4466432 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    19.492s

Total number of created targets for pointer analysis: 158141
   Number of created targets for uf: *(struct_usb_driver)* is 5
   Number of created targets for uf: *signed_int is 629
   Number of created targets for uf: *unsigned_char is 44
   Number of created targets for uf: *(struct_list_head)* is 3
   Number of created targets for uf: *unsigned_int is 77
   Number of created targets for uf: *(struct_device)* is 9


Number of BDD nodes:                               526
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       17953 (count: 466748, min: 0, max: 361, avg: 0.04)
Time for BDD node cleanup:                             0.078s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.326s
  Time for transition matches:                         2.280s
  Time for transition assertions:                      0.014s
  Time for transition actions:                         0.032s
Automaton transfers with branching:                0
Automaton transfer successors:                      3808353 (count: 3808353, min: 1, max: 1, avg: 1.00) [1 x 3808353]

CPA algorithm statistics
------------------------
Number of iterations:            2771465
Max size of waitlist:            167
Average size of waitlist:        69
Number of computed successors:   3306472
Max successors for one state:    2
Number of times merged:          375728
Number of times stopped:         510364
Number of times breaked:         2330

Total time for CPA algorithm:       302.696s (Max:     2.201s)
  Time for choose from waitlist:      1.147s
  Time for precision adjustment:    187.514s
  Time for transfer relation:        86.129s
  Time for merge operator:           11.535s
  Time for stop operator:             4.294s
  Time for adding to reached set:     4.181s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2330
Avg. length of target path (in blocks):              158031 (count: 2330, min: 28, max: 82, avg: 67.82)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 544.329s
  Counterexample analysis:                           537.064s (Max:     0.480s, Calls: 2330)
    Refinement sat check:                            470.873s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.088s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.326s
  Precision update:                                    1.724s
  ARG update:                                          4.354s

Length of refined path (in blocks):                  157867 (count: 2329, min: 28, max: 82, avg: 67.78)
Number of affected states:                            24691 (count: 2329, min: 5, max: 80, avg: 10.60)
Length (states) of path with itp 'true':             130847 (count: 2329, min: 0, max: 76, avg: 56.18)
Length (states) of path with itp non-trivial itp:     24691 (count: 2329, min: 5, max: 80, avg: 10.60)
Length (states) of path with itp 'false':                23 (count: 2329, min: 0, max: 1, avg: 0.01)
Different non-trivial interpolants along paths:        2306 (count: 2329, min: 0, max: 1, avg: 0.99)
Equal non-trivial interpolants along paths:           20056 (count: 2329, min: 3, max: 78, avg: 8.61)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2330
Number of successful refinements:     2329
Number of failed refinements:         0
Max. size of reached set before ref.: 24033
Max. size of reached set after ref.:  23713
Avg. size of reached set before ref.: 13458.23
Avg. size of reached set after ref.:  12268.05

Total time for CEGAR algorithm:     892.558s
Time for refinements:               572.033s
Average time for refinement:          0.245s
Max time for refinement:              0.673s

Code Coverage
-----------------------------
  Function coverage:      0.320
  Visited lines:          1911
  Total lines:            4544
  Line coverage:          0.421
  Visited conditions:     290
  Total conditions:       1278
  Condition coverage:     0.227

CPAchecker general statistics
-----------------------------
Number of program locations:     6343
Number of CFA edges:             7196
Number of relevant variables:    893
Number of functions:             231
Number of loops:                 53
Size of reached set:             9582
  Number of reached locations:   898 (14%)
    Avg states per location:     10
    Max states per location:     79 (at node N1500)
  Number of reached functions:   74 (32%)
  Number of partitions:          9474
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N1960 (before line 9071), Function em28xx_i2c_xfer called from node N2394, stack depth 6 [7b9e7477], stack [main, ldv_entry_EMGentry_5, ldv_dispatch_register_dummy_resourceless_instance_3_5_5, ldv_struct_i2c_algorithm_dummy_resourceless_instance_0, ldv_dummy_resourceless_instance_callback_0_7, em28xx_i2c_xfer]])
  Number of target states:       1
  Size of final wait list        62

Time for analysis setup:          7.756s
  Time for loading CPAs:          1.169s
  Time for loading parser:        0.679s
  Time for CFA construction:      5.784s
    Time for parsing file(s):     1.347s
    Time for AST to CFA:          2.340s
    Time for CFA sanity check:    0.424s
    Time for post-processing:     1.467s
      Time for var class.:        0.902s
Time for Analysis:              892.558s
CPU time for analysis:          892.450s
Total time for CPAchecker:      900.320s
Total CPU time for CPAchecker:  900.180s
Time for statistics:              0.267s

Time for Garbage Collector:      25.458s (in 1218 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                260MB (   248 MiB) max;    154MB (   147 MiB) avg;    267MB (   255 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           269MB (   256 MiB) max;    225MB (   214 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8555MB (  8159 MiB) max;   8303MB (  7918 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
