scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-usb-dev__drivers-net-ethernet-jme_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_srw_njv_/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6192: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8203: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8799: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9128: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12389: Dead code detected: __ms = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13437: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13457: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13460: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13462: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 14231: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14244: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15081: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16000: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16001: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16046: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16544: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16651: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16680: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16696: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16750: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6819: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6860: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6592: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6733: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6667: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6707: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6627: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9352: Function pointer *(jme->jme_rx) with type int (*)(struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14778: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14789: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14812: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14824: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15090: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15101: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15112: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14265: Ignoring call via function pointer ldv_interrupt_instance_handler_0_5::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14265: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_update_features to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6235: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6304: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6270: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function pskb_expand_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            17606 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15065 (86%)
  Because of loop head:            2324 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         217 (1%)
  Times precision was empty:       5126 (29%)
  Times precision was {false}:     378 (2%)
  Times result was cached:         10806 (61%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1296 (7%)
  Times result was 'false':        2657 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         4509
  BDD entailment checks:           3573
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          15
Number of abstraction locations:          98
Max number of predicates per location:    14
Avg number of predicates per location:    4
Total predicates per abstraction:         61662
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 36.84
Number of irrelevant predicates:          16303 (26%)
Number of preds handled by boolean abs:   6962 (11%)
  Total number of models for allsat:      1499
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.16

Time for post operator:                  2.936s
  Time for path formula creation:        2.775s
Time for strengthen operator:            0.176s
Time for prec operator:                  9.435s
  Time for abstraction:                  8.836s (Max:     0.018s, Count: 17606)
    Boolean abstraction:                 1.776s
    Solving time:                        1.327s (Max:     0.014s)
    Model enumeration time:              0.156s
    Time for BDD construction:           0.202s (Max:     0.012s)
Time for merge operator:                 0.089s
Time for coverage check:                 0.060s
  Time for BDD entailment checks:        0.056s
Total time for SMT solver (w/o itp):     1.483s

Number of path formula cache hits:   71409 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.319s

Total number of created targets for pointer analysis: 2
   Number of created targets for uf: *unsigned_char is 3


Number of BDD nodes:                               1741
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4119 (count: 19308, min: 0, max: 680, avg: 0.21)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.524s
  Time for transition matches:                         0.215s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.010s
Automaton transfers with branching:                0
Automaton transfer successors:                        76072 (count: 76072, min: 1, max: 1, avg: 1.00) [1 x 76072]

CPA algorithm statistics
------------------------
Number of iterations:            60881
Max size of waitlist:            114
Average size of waitlist:        34
Number of computed successors:   69168
Max successors for one state:    2
Number of times merged:          468
Number of times stopped:         1687
Number of times breaked:         95

Total time for CPA algorithm:        18.259s (Max:     0.990s)
  Time for choose from waitlist:      0.182s
  Time for precision adjustment:     10.604s
  Time for transfer relation:         5.873s
  Time for merge operator:            0.162s
  Time for stop operator:             0.355s
  Time for adding to reached set:     0.356s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   95
Avg. length of target path (in blocks):                8170 (count: 95, min: 29, max: 158, avg: 86.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.587s
  Counterexample analysis:                             2.777s (Max:     0.045s, Calls: 95)
    Refinement sat check:                              1.403s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.109s
  Precision update:                                    0.141s
  ARG update:                                          0.412s

Length of refined path (in blocks):                    5589 (count: 95, min: 11, max: 85, avg: 58.83)
Number of affected states:                             3197 (count: 95, min: 4, max: 83, avg: 33.65)
Length (states) of path with itp 'true':               2297 (count: 95, min: 1, max: 59, avg: 24.18)
Length (states) of path with itp non-trivial itp:      3197 (count: 95, min: 4, max: 83, avg: 33.65)
Length (states) of path with itp 'false':                87 (count: 95, min: 0, max: 1, avg: 0.92)
Different non-trivial interpolants along paths:          11 (count: 95, min: 0, max: 1, avg: 0.12)
Equal non-trivial interpolants along paths:            3091 (count: 95, min: 3, max: 81, avg: 32.54)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                95
Number of successful refinements:     95
Number of failed refinements:         0
Max. size of reached set before ref.: 1583
Max. size of reached set after ref.:  821
Avg. size of reached set before ref.: 869.59
Avg. size of reached set after ref.:  190.32

Total time for CEGAR algorithm:      22.180s
Time for refinements:                 3.883s
Average time for refinement:          0.040s
Max time for refinement:              0.090s

Code Coverage
-----------------------------
  Function coverage:      0.056
  Visited lines:          1305
  Total lines:            5794
  Line coverage:          0.225
  Visited conditions:     32
  Total conditions:       1322
  Condition coverage:     0.024

CPAchecker general statistics
-----------------------------
Number of program locations:     8421
Number of CFA edges:             9737
Number of relevant variables:    1393
Number of functions:             413
Number of loops:                 41
Size of reached set:             294
  Number of reached locations:   166 (2%)
    Avg states per location:     1
    Max states per location:     10 (at node N7488)
  Number of reached functions:   23 (6%)
  Number of partitions:          292
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N5365 (before line 14146), Function main called from node N5352, stack depth 1 [6da54910], stack [main]])
  Number of target states:       0
  Size of final wait list        18

Time for analysis setup:          8.090s
  Time for loading CPAs:          1.228s
  Time for loading parser:        0.640s
  Time for CFA construction:      6.078s
    Time for parsing file(s):     1.278s
    Time for AST to CFA:          2.266s
    Time for CFA sanity check:    0.579s
    Time for post-processing:     1.762s
      Time for var class.:        0.689s
Time for Analysis:               22.188s
CPU time for analysis:           22.180s
Total time for CPAchecker:       30.283s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.109s

Time for Garbage Collector:       0.590s (in 51 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 77MB (    73 MiB) max;     52MB (    50 MiB) avg;     84MB (    80 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     34MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
