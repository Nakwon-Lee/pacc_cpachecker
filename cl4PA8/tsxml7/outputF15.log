scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-usb-dev__drivers-net-ethernet-jme_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__waehz0x/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6192: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8203: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8799: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9128: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12389: Dead code detected: __ms = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13437: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13457: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13460: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13462: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 14231: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14244: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15081: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16000: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16001: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16046: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16544: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16651: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16680: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16696: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16750: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6819: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6860: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6592: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6733: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6667: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6707: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6627: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9352: Function pointer *(jme->jme_rx) with type int (*)(struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14778: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14789: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14812: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14824: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15090: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15101: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15112: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14265: Ignoring call via function pointer ldv_interrupt_instance_handler_0_5::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14265: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_update_features to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6235: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6304: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6270: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function pskb_expand_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msi to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6860: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6617: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 6627: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, (struct dma_attrs *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_pme_active to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14778: Ignoring call via function pointer ldv_pci_instance_resume_2_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14778: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14789: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14789: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14824: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14824: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14812: Ignoring call via function pointer ldv_pci_instance_suspend_2_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14812: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15112: Ignoring call via function pointer ldv_pm_ops_instance_complete_3_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15112: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_ethtool_sset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15222: Ignoring call via function pointer ldv_pm_ops_instance_restore_noirq_3_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15222: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1159638 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1062934 (92%)
  Because of loop head:            91077 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5627 (0%)
  Times precision was empty:       86796 (7%)
  Times precision was {false}:     1684 (0%)
  Times result was cached:         1058756 (91%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12402 (1%)
  Times result was 'false':        81795 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         345495
  BDD entailment checks:           178527
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          27
Number of abstraction locations:          480
Max number of predicates per location:    19
Avg number of predicates per location:    7
Total predicates per abstraction:         8079169
Max number of predicates per abstraction: 19
Avg number of predicates per abstraction: 573.56
Number of irrelevant predicates:          2043856 (25%)
Number of preds handled by boolean abs:   74408 (1%)
  Total number of models for allsat:      18819
  Max number of models for allsat:        15
  Avg number of models for allsat:        1.52

Time for post operator:                 23.291s
  Time for path formula creation:       21.124s
Time for strengthen operator:            3.806s
Time for prec operator:                302.694s
  Time for abstraction:                288.155s (Max:     0.345s, Count: 1159638)
    Boolean abstraction:                12.126s
    Solving time:                        9.499s (Max:     0.014s)
    Model enumeration time:              1.281s
    Time for BDD construction:           0.570s (Max:     0.012s)
Time for merge operator:                 0.622s
Time for coverage check:                 0.278s
  Time for BDD entailment checks:        0.225s
Total time for SMT solver (w/o itp):    10.780s

Number of path formula cache hits:   5512147 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.927s

Total number of created targets for pointer analysis: 434
   Number of created targets for uf: *unsigned_char is 3
   Number of created targets for uf: *unsigned_int is 37


Number of BDD nodes:                               5549
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       30420 (count: 355970, min: 0, max: 917, avg: 0.09)
Time for BDD node cleanup:                             0.083s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.404s
  Time for transition matches:                         3.453s
  Time for transition assertions:                      0.007s
  Time for transition actions:                         0.022s
Automaton transfers with branching:                0
Automaton transfer successors:                      4569510 (count: 4569510, min: 1, max: 1, avg: 1.00) [1 x 4569510]

CPA algorithm statistics
------------------------
Number of iterations:            3609749
Max size of waitlist:            203
Average size of waitlist:        82
Number of computed successors:   3959610
Max successors for one state:    2
Number of times merged:          83484
Number of times stopped:         144186
Number of times breaked:         2327

Total time for CPA algorithm:       426.847s (Max:     2.449s)
  Time for choose from waitlist:      1.706s
  Time for precision adjustment:    326.982s
  Time for transfer relation:        75.099s
  Time for merge operator:            2.210s
  Time for stop operator:             5.416s
  Time for adding to reached set:     6.496s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2327
Avg. length of target path (in blocks):             1222523 (count: 2327, min: 29, max: 807, avg: 525.36)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 450.103s
  Counterexample analysis:                           434.152s (Max:     0.795s, Calls: 2327)
    Refinement sat check:                             62.727s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.636s
  Error path post-processing:                          0.000s
  Predicate creation:                                  2.036s
  Precision update:                                    3.689s
  ARG update:                                          5.689s

Length of refined path (in blocks):                 1156196 (count: 2327, min: 11, max: 780, avg: 496.86)
Number of affected states:                           274909 (count: 2327, min: 1, max: 773, avg: 118.14)
Length (states) of path with itp 'true':             878960 (count: 2327, min: 0, max: 580, avg: 377.72)
Length (states) of path with itp non-trivial itp:    274909 (count: 2327, min: 1, max: 773, avg: 118.14)
Length (states) of path with itp 'false':              2277 (count: 2327, min: 0, max: 1, avg: 0.98)
Different non-trivial interpolants along paths:          74 (count: 2327, min: 0, max: 5, avg: 0.03)
Equal non-trivial interpolants along paths:          272508 (count: 2327, min: 0, max: 772, avg: 117.11)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2327
Number of successful refinements:     2327
Number of failed refinements:         0
Max. size of reached set before ref.: 14172
Max. size of reached set after ref.:  4065
Avg. size of reached set before ref.: 3502.27
Avg. size of reached set after ref.:  1901.17

Total time for CEGAR algorithm:     891.604s
Time for refinements:               462.008s
Average time for refinement:          0.198s
Max time for refinement:              0.819s

Code Coverage
-----------------------------
  Function coverage:      0.264
  Visited lines:          2108
  Total lines:            5794
  Line coverage:          0.364
  Visited conditions:     350
  Total conditions:       1322
  Condition coverage:     0.265

CPAchecker general statistics
-----------------------------
Number of program locations:     8421
Number of CFA edges:             9737
Number of relevant variables:    1393
Number of functions:             413
Number of loops:                 41
Size of reached set:             7859
  Number of reached locations:   1226 (15%)
    Avg states per location:     6
    Max states per location:     158 (at node N896)
  Number of reached functions:   109 (26%)
  Number of partitions:          7841
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N5365 (before line 14146), Function main called from node N5352, stack depth 1 [6da54910], stack [main]])
  Number of target states:       0
  Size of final wait list        135

Time for analysis setup:          8.627s
  Time for loading CPAs:          1.337s
  Time for loading parser:        0.734s
  Time for CFA construction:      6.400s
    Time for parsing file(s):     1.294s
    Time for AST to CFA:          2.437s
    Time for CFA sanity check:    0.630s
    Time for post-processing:     1.839s
      Time for var class.:        0.789s
Time for Analysis:              891.604s
CPU time for analysis:          891.520s
Total time for CPAchecker:      900.242s
Total CPU time for CPAchecker:  900.140s
Time for statistics:              0.272s

Time for Garbage Collector:      25.738s (in 3017 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                194MB (   185 MiB) max;     92MB (    88 MiB) avg;    201MB (   191 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     42MB (    40 MiB) avg;     48MB (    45 MiB) peak
Allocated heap memory:           201MB (   192 MiB) max;    137MB (   131 MiB) avg
Allocated non-heap memory:        50MB (    48 MiB) max;     50MB (    47 MiB) avg
Total process virtual memory:   8220MB (  7839 MiB) max;   8121MB (  7745 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
