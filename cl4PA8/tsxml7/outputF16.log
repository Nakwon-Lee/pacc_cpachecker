scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-usb-dev__drivers-net-ethernet-jme_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9lwtix8w/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6192: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8203: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8799: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9128: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12389: Dead code detected: __ms = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13437: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13457: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13460: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13462: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 14231: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14244: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15081: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16000: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16001: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16046: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16544: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16651: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16680: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16696: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16750: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6819: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6860: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6592: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6733: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6667: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6707: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6627: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9352: Function pointer *(jme->jme_rx) with type int (*)(struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14778: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14789: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14812: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14824: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15090: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15101: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15112: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15266: Ignoring call via function pointer ldv_pm_ops_instance_runtime_idle_3_27::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15266: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15288: Ignoring call via function pointer ldv_pm_ops_instance_runtime_suspend_3_25::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15288: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15277: Ignoring call via function pointer ldv_pm_ops_instance_runtime_resume_3_24::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15277: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15189: Ignoring call via function pointer ldv_pm_ops_instance_prepare_3_22::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15189: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15321: Ignoring call via function pointer ldv_pm_ops_instance_suspend_noirq_3_20::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15321: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15255: Ignoring call via function pointer ldv_pm_ops_instance_resume_noirq_3_19::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15255: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15310: Ignoring call via function pointer ldv_pm_ops_instance_suspend_late_3_18::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15310: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15244: Ignoring call via function pointer ldv_pm_ops_instance_resume_early_3_17::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15244: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15134: Ignoring call via function pointer ldv_pm_ops_instance_freeze_late_3_14::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15134: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15343: Ignoring call via function pointer ldv_pm_ops_instance_thaw_early_3_13::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15343: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15145: Ignoring call via function pointer ldv_pm_ops_instance_freeze_noirq_3_12::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15145: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15354: Ignoring call via function pointer ldv_pm_ops_instance_thaw_noirq_3_11::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15354: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15167: Ignoring call via function pointer ldv_pm_ops_instance_poweroff_late_3_8::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15167: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15211: Ignoring call via function pointer ldv_pm_ops_instance_restore_early_3_7::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15211: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15178: Ignoring call via function pointer ldv_pm_ops_instance_poweroff_noirq_3_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15178: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15222: Ignoring call via function pointer ldv_pm_ops_instance_restore_noirq_3_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15222: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15112: Ignoring call via function pointer ldv_pm_ops_instance_complete_3_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15112: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14812: Ignoring call via function pointer ldv_pci_instance_suspend_2_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14812: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14824: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14824: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14789: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14789: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14778: Ignoring call via function pointer ldv_pci_instance_resume_2_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14778: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14265: Ignoring call via function pointer ldv_interrupt_instance_handler_0_5::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14265: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14277: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14277: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_disable_link_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_update_features to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6235: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15498: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_xmalloc(1432UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14705: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_ethtool_sset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function generic_mii_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15090: Ignoring call via function pointer ldv_platform_instance_probe_4_14::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15090: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15101: Ignoring call via function pointer ldv_platform_instance_release_4_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15101: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pskb_expand_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6304: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_set_wakeup_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15051: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4003012 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3729676 (93%)
  Because of loop head:            272735 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         601 (0%)
  Times precision was empty:       3139576 (78%)
  Times precision was {false}:     9009 (0%)
  Times result was cached:         838902 (21%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      15525 (0%)
  Times result was 'false':        128906 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         2744182
  BDD entailment checks:           1439058
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          48
Number of abstraction locations:          117
Max number of predicates per location:    47
Avg number of predicates per location:    6
Total predicates per abstraction:         8879681
Max number of predicates per abstraction: 47
Avg number of predicates per abstraction: 361.93
Number of irrelevant predicates:          6219850 (70%)
Number of preds handled by boolean abs:   117866 (1%)
  Total number of models for allsat:      64670
  Max number of models for allsat:        231
  Avg number of models for allsat:        4.17

Time for post operator:                 82.631s
  Time for path formula creation:       73.808s
Time for strengthen operator:           16.302s
Time for prec operator:                354.882s
  Time for abstraction:                318.475s (Max:     1.057s, Count: 4003012)
    Boolean abstraction:                33.966s
    Solving time:                       24.185s (Max:     0.017s)
    Model enumeration time:              8.993s
    Time for BDD construction:           2.461s (Max:     0.075s)
Time for merge operator:                 3.121s
Time for coverage check:                 1.453s
  Time for BDD entailment checks:        1.068s
Total time for SMT solver (w/o itp):    33.178s

Number of path formula cache hits:   22033638 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    33.844s

Total number of created targets for pointer analysis: 90
   Number of created targets for uf: *unsigned_long_long_int is 91


Number of BDD nodes:                               235478
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       76414 (count: 4767218, min: 0, max: 1240, avg: 0.02)
Time for BDD node cleanup:                             0.654s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 21.765s
  Time for transition matches:                        10.860s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                     18568075 (count: 18568075, min: 1, max: 1, avg: 1.00) [1 x 18568075]

CPA algorithm statistics
------------------------
Number of iterations:            13418243
Max size of waitlist:            1827
Average size of waitlist:        839
Number of computed successors:   14871633
Max successors for one state:    2
Number of times merged:          652562
Number of times stopped:         993017
Number of times breaked:         423

Total time for CPA algorithm:       847.850s (Max:     5.544s)
  Time for choose from waitlist:      7.640s
  Time for precision adjustment:    464.406s
  Time for transfer relation:       279.523s
  Time for merge operator:           15.076s
  Time for stop operator:            23.574s
  Time for adding to reached set:    23.395s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   423
Avg. length of target path (in blocks):               12456 (count: 423, min: 15, max: 36, avg: 29.45)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  33.892s
  Counterexample analysis:                             4.915s (Max:     0.057s, Calls: 423)
    Refinement sat check:                              3.307s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.100s
  Precision update:                                    0.413s
  ARG update:                                         28.261s

Length of refined path (in blocks):                    7875 (count: 423, min: 11, max: 34, avg: 18.62)
Number of affected states:                             4628 (count: 423, min: 4, max: 32, avg: 10.94)
Length (states) of path with itp 'true':               2824 (count: 423, min: 1, max: 10, avg: 6.68)
Length (states) of path with itp non-trivial itp:      4628 (count: 423, min: 4, max: 32, avg: 10.94)
Length (states) of path with itp 'false':               421 (count: 423, min: 0, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           7 (count: 423, min: 0, max: 1, avg: 0.02)
Equal non-trivial interpolants along paths:            4198 (count: 423, min: 3, max: 30, avg: 9.92)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                423
Number of successful refinements:     423
Number of failed refinements:         0
Max. size of reached set before ref.: 67074
Max. size of reached set after ref.:  29493
Avg. size of reached set before ref.: 36797.19
Avg. size of reached set after ref.:  4321.63

Total time for CEGAR algorithm:     892.538s
Time for refinements:                43.185s
Average time for refinement:          0.102s
Max time for refinement:              0.370s

Code Coverage
-----------------------------
  Function coverage:      0.242
  Visited lines:          2117
  Total lines:            5794
  Line coverage:          0.365
  Visited conditions:     370
  Total conditions:       1322
  Condition coverage:     0.280

CPAchecker general statistics
-----------------------------
Number of program locations:     8421
Number of CFA edges:             9737
Number of relevant variables:    1393
Number of functions:             413
Number of loops:                 41
Size of reached set:             12548
  Number of reached locations:   1216 (14%)
    Avg states per location:     10
    Max states per location:     172 (at node N769)
  Number of reached functions:   100 (24%)
  Number of partitions:          12494
    Avg size of partitions:      1
    Max size of partitions:      15 (with key [N5365 (before line 14146), Function main called from node N5352, stack depth 1 [6da54910], stack [main]])
  Number of target states:       0
  Size of final wait list        542

Time for analysis setup:          7.734s
  Time for loading CPAs:          1.104s
  Time for loading parser:        0.637s
  Time for CFA construction:      5.837s
    Time for parsing file(s):     1.325s
    Time for AST to CFA:          2.189s
    Time for CFA sanity check:    0.523s
    Time for post-processing:     1.544s
      Time for var class.:        0.710s
Time for Analysis:              892.538s
CPU time for analysis:          892.460s
Total time for CPAchecker:      900.276s
Total CPU time for CPAchecker:  900.190s
Time for statistics:              0.325s

Time for Garbage Collector:     103.066s (in 1241 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                975MB (   929 MiB) max;    500MB (   476 MiB) avg;   1028MB (   980 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1078MB (  1028 MiB) max;    730MB (   696 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8289MB (  7905 MiB) max;   8173MB (  7794 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
