scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-usb-dev__drivers-net-usb-pegasus_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kogjk4z3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5425: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8908: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8911: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8913: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9510: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9809: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9810: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10218: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10243: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10384: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10604: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10620: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10673: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10308: Ignoring call via function pointer ldv_usb_instance_pre_3_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10308: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10297: Ignoring call via function pointer ldv_usb_instance_post_3_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10297: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10158: Ignoring call via function pointer ldv_timer_instance_callback_1_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10158: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_ethtool_gset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10553: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_set_wakeup_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2030912 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1715176 (84%)
  Because of loop head:            312534 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3202 (0%)
  Times precision was empty:       805488 (40%)
  Times precision was {false}:     12182 (1%)
  Times result was cached:         1167566 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      45676 (2%)
  Times result was 'false':        227553 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         3547756
  BDD entailment checks:           2779330
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       37
Number of predicates discovered:          35
Number of abstraction locations:          195
Max number of predicates per location:    27
Avg number of predicates per location:    7
Total predicates per abstraction:         11794926
Max number of predicates per abstraction: 27
Avg number of predicates per abstraction: 203.86
Number of irrelevant predicates:          5276061 (45%)
Number of preds handled by boolean abs:   441753 (4%)
  Total number of models for allsat:      233438
  Max number of models for allsat:        160
  Avg number of models for allsat:        5.11

Time for post operator:                 54.232s
  Time for path formula creation:       49.820s
Time for strengthen operator:            9.918s
Time for prec operator:                567.356s
  Time for abstraction:                546.840s (Max:     1.009s, Count: 2030912)
    Boolean abstraction:               103.079s
    Solving time:                       66.242s (Max:     0.097s)
    Model enumeration time:             27.616s
    Time for BDD construction:           7.675s (Max:     0.101s)
Time for merge operator:                 3.480s
Time for coverage check:                 4.060s
  Time for BDD entailment checks:        3.553s
Total time for SMT solver (w/o itp):    93.858s

Number of path formula cache hits:   11649045 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    25.907s

Total number of created targets for pointer analysis: 60559
   Number of created targets for uf: *unsigned_short_int is 1561
   Number of created targets for uf: *(void)* is 26
   Number of created targets for uf: *(char)* is 81
   Number of created targets for uf: *unsigned_char is 65
   Number of created targets for uf: *unsigned_int is 401
   Number of created targets for uf: *(struct_device)* is 52


Number of BDD nodes:                               233219
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      262267 (count: 4030592, min: 0, max: 2590, avg: 0.07)
Time for BDD node cleanup:                             0.581s
Time for BDD garbage collection:                       0.146s (in 4 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 14.025s
  Time for transition matches:                         7.277s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.010s
Automaton transfers with branching:                0
Automaton transfer successors:                     10058399 (count: 10058399, min: 1, max: 1, avg: 1.00) [1 x 10058399]

CPA algorithm statistics
------------------------
Number of iterations:            7689844
Max size of waitlist:            1100
Average size of waitlist:        339
Number of computed successors:   8710936
Max successors for one state:    2
Number of times merged:          384213
Number of times stopped:         671196
Number of times breaked:         531

Total time for CPA algorithm:       846.613s (Max:    10.664s)
  Time for choose from waitlist:      4.073s
  Time for precision adjustment:    623.732s
  Time for transfer relation:       156.640s
  Time for merge operator:           10.851s
  Time for stop operator:            20.345s
  Time for adding to reached set:    13.343s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   531
Avg. length of target path (in blocks):               25747 (count: 531, min: 15, max: 73, avg: 48.49)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  31.163s
  Counterexample analysis:                            15.528s (Max:     0.105s, Calls: 531)
    Refinement sat check:                             11.403s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.018s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.223s
  Precision update:                                    0.440s
  ARG update:                                         14.701s

Length of refined path (in blocks):                   18701 (count: 531, min: 11, max: 68, avg: 35.22)
Number of affected states:                             9106 (count: 531, min: 1, max: 66, avg: 17.15)
Length (states) of path with itp 'true':               9064 (count: 531, min: 0, max: 43, avg: 17.07)
Length (states) of path with itp non-trivial itp:      9106 (count: 531, min: 1, max: 66, avg: 17.15)
Length (states) of path with itp 'false':               514 (count: 531, min: 0, max: 1, avg: 0.97)
Different non-trivial interpolants along paths:          58 (count: 531, min: 0, max: 1, avg: 0.11)
Equal non-trivial interpolants along paths:            8517 (count: 531, min: 0, max: 64, avg: 16.04)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                531
Number of successful refinements:     531
Number of failed refinements:         0
Max. size of reached set before ref.: 68194
Max. size of reached set after ref.:  46776
Avg. size of reached set before ref.: 27525.31
Avg. size of reached set after ref.:  12882.49

Total time for CEGAR algorithm:     893.660s
Time for refinements:                41.404s
Average time for refinement:          0.077s
Max time for refinement:              0.879s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          1881
  Total lines:            3247
  Line coverage:          0.579
  Visited conditions:     248
  Total conditions:       678
  Condition coverage:     0.366

CPAchecker general statistics
-----------------------------
Number of program locations:     4556
Number of CFA edges:             5072
Number of relevant variables:    659
Number of functions:             212
Number of loops:                 11
Size of reached set:             36852
  Number of reached locations:   980 (22%)
    Avg states per location:     37
    Max states per location:     653 (at node N3531)
  Number of reached functions:   103 (49%)
  Number of partitions:          36294
    Avg size of partitions:      1
    Max size of partitions:      64 (with key [N2398 (before line 9426), Function main called from node N2386, stack depth 1 [61ab89b0], stack [main]])
  Number of target states:       0
  Size of final wait list        317

Time for analysis setup:          6.588s
  Time for loading CPAs:          1.130s
  Time for loading parser:        0.788s
  Time for CFA construction:      4.559s
    Time for parsing file(s):     1.210s
    Time for AST to CFA:          1.654s
    Time for CFA sanity check:    0.301s
    Time for post-processing:     1.163s
      Time for var class.:        0.562s
Time for Analysis:              893.660s
CPU time for analysis:          893.550s
Total time for CPAchecker:      900.253s
Total CPU time for CPAchecker:  900.130s
Time for statistics:              0.607s

Time for Garbage Collector:      77.825s (in 2022 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                516MB (   492 MiB) max;    265MB (   252 MiB) avg;    537MB (   512 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           550MB (   525 MiB) max;    388MB (   370 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   9032MB (  8614 MiB) max;   8490MB (  8097 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
