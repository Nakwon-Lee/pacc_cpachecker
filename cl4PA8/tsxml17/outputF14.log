scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-usb-dev__drivers-net-usb-pegasus_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1a9x3r_o/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5425: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8908: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8911: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8913: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9510: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9809: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9810: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10218: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10243: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10384: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10604: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10620: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10673: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_set_wakeup_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_ethtool_gset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10308: Ignoring call via function pointer ldv_usb_instance_pre_3_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10308: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10297: Ignoring call via function pointer ldv_usb_instance_post_3_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10297: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10553: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_register_netdev to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10158: Ignoring call via function pointer ldv_timer_instance_callback_1_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10158: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2750177 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2541719 (92%)
  Because of loop head:            207764 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         694 (0%)
  Times precision was empty:       1591313 (58%)
  Times precision was {false}:     3439 (0%)
  Times result was cached:         1143073 (42%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12352 (0%)
  Times result was 'false':        62218 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         2266554
  BDD entailment checks:           737744
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       37
Number of predicates discovered:          26
Number of abstraction locations:          157
Max number of predicates per location:    19
Avg number of predicates per location:    8
Total predicates per abstraction:         9641336
Max number of predicates per abstraction: 19
Avg number of predicates per abstraction: 610.56
Number of irrelevant predicates:          4906791 (51%)
Number of preds handled by boolean abs:   87742 (1%)
  Total number of models for allsat:      29103
  Max number of models for allsat:        27
  Avg number of models for allsat:        2.36

Time for post operator:                140.547s
  Time for path formula creation:      133.484s
Time for strengthen operator:           12.444s
Time for prec operator:                355.647s
  Time for abstraction:                327.164s (Max:     0.565s, Count: 2750177)
    Boolean abstraction:                23.248s
    Solving time:                       19.693s (Max:     0.048s)
    Model enumeration time:              3.804s
    Time for BDD construction:           0.712s (Max:     0.008s)
Time for merge operator:                 9.913s
Time for coverage check:                 1.054s
  Time for BDD entailment checks:        0.769s
Total time for SMT solver (w/o itp):    23.497s

Number of path formula cache hits:   16762499 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    97.395s

Total number of created targets for pointer analysis: 373304
   Number of created targets for uf: *unsigned_short_int is 42717
   Number of created targets for uf: *(void)* is 147
   Number of created targets for uf: *(struct_device_private)* is 481
   Number of created targets for uf: *signed_int is 121
   Number of created targets for uf: *(char)* is 3319
   Number of created targets for uf: *unsigned_char is 19033
   Number of created targets for uf: *unsigned_int is 1441
   Number of created targets for uf: *(struct_device)* is 121


Number of BDD nodes:                               33747
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       40086 (count: 2449485, min: 0, max: 642, avg: 0.02)
Time for BDD node cleanup:                             0.415s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 18.356s
  Time for transition matches:                        10.361s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.010s
Automaton transfers with branching:                0
Automaton transfer successors:                     15326555 (count: 15326555, min: 1, max: 1, avg: 1.00) [1 x 15326555]

CPA algorithm statistics
------------------------
Number of iterations:            11097906
Max size of waitlist:            64
Average size of waitlist:        35
Number of computed successors:   12421329
Max successors for one state:    2
Number of times merged:          764405
Number of times stopped:         1243685
Number of times breaked:         694

Total time for CPA algorithm:       826.886s (Max:     6.438s)
  Time for choose from waitlist:      4.240s
  Time for precision adjustment:    437.521s
  Time for transfer relation:       295.669s
  Time for merge operator:           22.213s
  Time for stop operator:            17.694s
  Time for adding to reached set:    19.878s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   694
Avg. length of target path (in blocks):               59699 (count: 694, min: 15, max: 149, avg: 86.02)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  49.417s
  Counterexample analysis:                            27.093s (Max:     0.148s, Calls: 694)
    Refinement sat check:                             17.696s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.041s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.168s
  Precision update:                                    0.586s
  ARG update:                                         21.146s

Length of refined path (in blocks):                   39046 (count: 693, min: 11, max: 112, avg: 56.34)
Number of affected states:                            12782 (count: 693, min: 1, max: 92, avg: 18.44)
Length (states) of path with itp 'true':              25571 (count: 693, min: 0, max: 106, avg: 36.90)
Length (states) of path with itp non-trivial itp:     12782 (count: 693, min: 1, max: 92, avg: 18.44)
Length (states) of path with itp 'false':               693 (count: 693, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          46 (count: 693, min: 0, max: 1, avg: 0.07)
Equal non-trivial interpolants along paths:           12043 (count: 693, min: 0, max: 91, avg: 17.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                694
Number of successful refinements:     693
Number of failed refinements:         0
Max. size of reached set before ref.: 47505
Max. size of reached set after ref.:  29645
Avg. size of reached set before ref.: 27003.48
Avg. size of reached set after ref.:  11002.87

Total time for CEGAR algorithm:     893.642s
Time for refinements:                61.451s
Average time for refinement:          0.088s
Max time for refinement:              2.553s

Code Coverage
-----------------------------
  Function coverage:      0.557
  Visited lines:          2322
  Total lines:            3247
  Line coverage:          0.715
  Visited conditions:     384
  Total conditions:       678
  Condition coverage:     0.566

CPAchecker general statistics
-----------------------------
Number of program locations:     4556
Number of CFA edges:             5072
Number of relevant variables:    659
Number of functions:             212
Number of loops:                 11
Size of reached set:             39109
  Number of reached locations:   1478 (32%)
    Avg states per location:     26
    Max states per location:     421 (at node N3544)
  Number of reached functions:   118 (56%)
  Number of partitions:          39028
    Avg size of partitions:      1
    Max size of partitions:      17 (with key [N2398 (before line 9426), Function main called from node N2386, stack depth 1 [61ab89b0], stack [main]])
  Number of target states:       1
  Size of final wait list        27

Time for analysis setup:          6.617s
  Time for loading CPAs:          1.160s
  Time for loading parser:        0.708s
  Time for CFA construction:      4.588s
    Time for parsing file(s):     1.198s
    Time for AST to CFA:          1.772s
    Time for CFA sanity check:    0.284s
    Time for post-processing:     1.085s
      Time for var class.:        0.575s
Time for Analysis:              893.642s
CPU time for analysis:          893.560s
Total time for CPAchecker:      900.263s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              0.699s

Time for Garbage Collector:      68.484s (in 1049 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1245MB (  1188 MiB) max;    593MB (   565 MiB) avg;   1263MB (  1204 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1364MB (  1301 MiB) max;    874MB (   833 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8287MB (  7903 MiB) max;   8199MB (  7820 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
