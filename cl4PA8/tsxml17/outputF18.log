scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-usb-dev__drivers-net-usb-pegasus_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__lgnj7yk/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5425: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8908: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8911: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8913: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9510: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9809: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9810: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10218: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10243: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10384: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10604: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10620: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10673: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10158: Ignoring call via function pointer ldv_timer_instance_callback_1_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10158: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10297: Ignoring call via function pointer ldv_usb_instance_post_3_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10297: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10308: Ignoring call via function pointer ldv_usb_instance_pre_3_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10308: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10553: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_register_netdev to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_set_wakeup_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1007179 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  874335 (87%)
  Because of loop head:            130342 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2502 (0%)
  Times precision was empty:       164199 (16%)
  Times precision was {false}:     3219 (0%)
  Times result was cached:         769442 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      70319 (7%)
  Times result was 'false':        88272 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         1751522
  BDD entailment checks:           1493490
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       37
Number of predicates discovered:          35
Number of abstraction locations:          287
Max number of predicates per location:    28
Avg number of predicates per location:    9
Total predicates per abstraction:         13027156
Max number of predicates per abstraction: 28
Avg number of predicates per abstraction: 177.15
Number of irrelevant predicates:          3711836 (28%)
Number of preds handled by boolean abs:   916248 (7%)
  Total number of models for allsat:      362621
  Max number of models for allsat:        180
  Avg number of models for allsat:        5.16

Time for post operator:                 64.185s
  Time for path formula creation:       61.993s
Time for strengthen operator:            3.933s
Time for prec operator:                656.214s
  Time for abstraction:                644.948s (Max:     1.497s, Count: 1007179)
    Boolean abstraction:               192.662s
    Solving time:                      114.036s (Max:     0.049s)
    Model enumeration time:             56.473s
    Time for BDD construction:          12.481s (Max:     0.095s)
Time for merge operator:                 4.795s
Time for coverage check:                 1.536s
  Time for BDD entailment checks:        1.236s
Total time for SMT solver (w/o itp):   170.509s

Number of path formula cache hits:   4230813 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    50.562s

Total number of created targets for pointer analysis: 219060
   Number of created targets for uf: *unsigned_short_int is 7646
   Number of created targets for uf: *(void)* is 536
   Number of created targets for uf: *(struct_device_private)* is 200
   Number of created targets for uf: *signed_int is 41
   Number of created targets for uf: *(char)* is 925
   Number of created targets for uf: *unsigned_char is 2974
   Number of created targets for uf: *unsigned_int is 5461
   Number of created targets for uf: *(struct_device)* is 55
   Number of created targets for uf: *unsigned_long_int is 2


Number of BDD nodes:                               248467
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      262096 (count: 2164085, min: 0, max: 2889, avg: 0.12)
Time for BDD node cleanup:                             0.329s
Time for BDD garbage collection:                       0.095s (in 1 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.457s
  Time for transition matches:                         3.631s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.019s
Automaton transfers with branching:                0
Automaton transfer successors:                      4458599 (count: 4458599, min: 1, max: 1, avg: 1.00) [1 x 4458599]

CPA algorithm statistics
------------------------
Number of iterations:            3494595
Max size of waitlist:            172
Average size of waitlist:        50
Number of computed successors:   3899988
Max successors for one state:    2
Number of times merged:          129016
Number of times stopped:         294050
Number of times breaked:         813

Total time for CPA algorithm:       835.035s (Max:    11.374s)
  Time for choose from waitlist:      1.613s
  Time for precision adjustment:    684.465s
  Time for transfer relation:       114.316s
  Time for merge operator:            8.265s
  Time for stop operator:            10.542s
  Time for adding to reached set:     6.122s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   813
Avg. length of target path (in blocks):              117013 (count: 813, min: 20, max: 304, avg: 143.93)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  53.243s
  Counterexample analysis:                            45.683s (Max:     0.222s, Calls: 813)
    Refinement sat check:                             23.902s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.062s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.337s
  Precision update:                                    0.820s
  ARG update:                                          5.805s

Length of refined path (in blocks):                   84707 (count: 813, min: 11, max: 276, avg: 104.19)
Number of affected states:                            31149 (count: 813, min: 1, max: 275, avg: 38.31)
Length (states) of path with itp 'true':              52745 (count: 813, min: 0, max: 200, avg: 64.88)
Length (states) of path with itp non-trivial itp:     31149 (count: 813, min: 1, max: 275, avg: 38.31)
Length (states) of path with itp 'false':               779 (count: 813, min: 0, max: 1, avg: 0.96)
Different non-trivial interpolants along paths:          69 (count: 813, min: 0, max: 1, avg: 0.08)
Equal non-trivial interpolants along paths:           30267 (count: 813, min: 0, max: 274, avg: 37.23)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                813
Number of successful refinements:     813
Number of failed refinements:         0
Max. size of reached set before ref.: 34993
Max. size of reached set after ref.:  29529
Avg. size of reached set before ref.: 6552.92
Avg. size of reached set after ref.:  2240.90

Total time for CEGAR algorithm:     893.596s
Time for refinements:                57.374s
Average time for refinement:          0.070s
Max time for refinement:              0.337s

Code Coverage
-----------------------------
  Function coverage:      0.396
  Visited lines:          1555
  Total lines:            3247
  Line coverage:          0.479
  Visited conditions:     124
  Total conditions:       678
  Condition coverage:     0.183

CPAchecker general statistics
-----------------------------
Number of program locations:     4556
Number of CFA edges:             5072
Number of relevant variables:    659
Number of functions:             212
Number of loops:                 11
Size of reached set:             11993
  Number of reached locations:   671 (15%)
    Avg states per location:     17
    Max states per location:     128 (at node N3530)
  Number of reached functions:   84 (40%)
  Number of partitions:          11819
    Avg size of partitions:      1
    Max size of partitions:      29 (with key [N2398 (before line 9426), Function main called from node N2386, stack depth 1 [61ab89b0], stack [main]])
  Number of target states:       0
  Size of final wait list        57

Time for analysis setup:          6.681s
  Time for loading CPAs:          1.036s
  Time for loading parser:        0.759s
  Time for CFA construction:      4.744s
    Time for parsing file(s):     1.104s
    Time for AST to CFA:          1.749s
    Time for CFA sanity check:    0.340s
    Time for post-processing:     1.313s
      Time for var class.:        0.527s
Time for Analysis:              893.596s
CPU time for analysis:          893.450s
Total time for CPAchecker:      900.290s
Total CPU time for CPAchecker:  900.120s
Time for statistics:              0.312s

Time for Garbage Collector:      39.807s (in 1658 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                750MB (   715 MiB) max;    289MB (   276 MiB) avg;    762MB (   727 MiB) peak
Used non-heap memory:             43MB (    41 MiB) max;     41MB (    39 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:           893MB (   851 MiB) max;    431MB (   411 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:  10781MB ( 10282 MiB) max;   9206MB (  8779 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
