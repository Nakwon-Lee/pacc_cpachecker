scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-usb-dev__drivers-net-usb-pegasus_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_eafjdab0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5425: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8908: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8911: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8913: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9510: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9809: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9810: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10218: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10243: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10384: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10604: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10620: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10673: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10308: Ignoring call via function pointer ldv_usb_instance_pre_3_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10308: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10297: Ignoring call via function pointer ldv_usb_instance_post_3_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10297: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10158: Ignoring call via function pointer ldv_timer_instance_callback_1_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10158: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_set_wakeup_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_ethtool_gset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10553: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_register_netdev to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2041157 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1824396 (89%)
  Because of loop head:            214097 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2664 (0%)
  Times precision was empty:       976597 (48%)
  Times precision was {false}:     12689 (1%)
  Times result was cached:         1009120 (49%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      42751 (2%)
  Times result was 'false':        191156 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         2096143
  BDD entailment checks:           1097795
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       37
Number of predicates discovered:          57
Number of abstraction locations:          209
Max number of predicates per location:    38
Avg number of predicates per location:    9
Total predicates per abstraction:         10942108
Max number of predicates per abstraction: 38
Avg number of predicates per abstraction: 197.37
Number of irrelevant predicates:          4837692 (44%)
Number of preds handled by boolean abs:   487131 (4%)
  Total number of models for allsat:      218174
  Max number of models for allsat:        288
  Avg number of models for allsat:        5.10

Time for post operator:                 81.879s
  Time for path formula creation:       77.417s
Time for strengthen operator:            9.853s
Time for prec operator:                514.158s
  Time for abstraction:                493.768s (Max:     1.078s, Count: 2041157)
    Boolean abstraction:               102.645s
    Solving time:                       67.539s (Max:     0.068s)
    Model enumeration time:             26.800s
    Time for BDD construction:           7.565s (Max:     0.069s)
Time for merge operator:                 6.099s
Time for coverage check:                 1.478s
  Time for BDD entailment checks:        1.194s
Total time for SMT solver (w/o itp):    94.339s

Number of path formula cache hits:   12208082 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    50.030s

Total number of created targets for pointer analysis: 166346
   Number of created targets for uf: *unsigned_short_int is 6195
   Number of created targets for uf: *(void)* is 23
   Number of created targets for uf: *(struct_device_private)* is 91
   Number of created targets for uf: *signed_int is 23
   Number of created targets for uf: *(char)* is 321
   Number of created targets for uf: *unsigned_char is 3167
   Number of created targets for uf: *unsigned_int is 141
   Number of created targets for uf: *(struct_device)* is 21


Number of BDD nodes:                               165967
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      226716 (count: 2477507, min: 0, max: 5007, avg: 0.09)
Time for BDD node cleanup:                             0.438s
Time for BDD garbage collection:                       0.044s (in 3 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 15.749s
  Time for transition matches:                         8.417s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                     11368031 (count: 11368031, min: 1, max: 1, avg: 1.00) [1 x 11368031]

CPA algorithm statistics
------------------------
Number of iterations:            8516550
Max size of waitlist:            890
Average size of waitlist:        299
Number of computed successors:   9726492
Max successors for one state:    2
Number of times merged:          499174
Number of times stopped:         691685
Number of times breaked:         1089

Total time for CPA algorithm:       832.614s (Max:     7.305s)
  Time for choose from waitlist:      3.617s
  Time for precision adjustment:    570.704s
  Time for transfer relation:       195.259s
  Time for merge operator:           14.042s
  Time for stop operator:            14.500s
  Time for adding to reached set:    14.210s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1089
Avg. length of target path (in blocks):               54703 (count: 1089, min: 15, max: 130, avg: 50.23)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  45.736s
  Counterexample analysis:                            30.789s (Max:     0.071s, Calls: 1089)
    Refinement sat check:                             22.139s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.033s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.223s
  Precision update:                                    0.719s
  ARG update:                                         13.596s

Length of refined path (in blocks):                   37667 (count: 1089, min: 11, max: 123, avg: 34.59)
Number of affected states:                            16060 (count: 1089, min: 1, max: 121, avg: 14.75)
Length (states) of path with itp 'true':              20518 (count: 1089, min: 0, max: 95, avg: 18.84)
Length (states) of path with itp non-trivial itp:     16060 (count: 1089, min: 1, max: 121, avg: 14.75)
Length (states) of path with itp 'false':              1061 (count: 1089, min: 0, max: 1, avg: 0.97)
Different non-trivial interpolants along paths:         101 (count: 1089, min: 0, max: 7, avg: 0.09)
Equal non-trivial interpolants along paths:           14870 (count: 1089, min: 0, max: 119, avg: 13.65)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1089
Number of successful refinements:     1089
Number of failed refinements:         0
Max. size of reached set before ref.: 38065
Max. size of reached set after ref.:  24060
Avg. size of reached set before ref.: 14772.01
Avg. size of reached set after ref.:  6679.67

Total time for CEGAR algorithm:     893.644s
Time for refinements:                56.217s
Average time for refinement:          0.051s
Max time for refinement:              0.165s

Code Coverage
-----------------------------
  Function coverage:      0.608
  Visited lines:          2426
  Total lines:            3247
  Line coverage:          0.747
  Visited conditions:     456
  Total conditions:       678
  Condition coverage:     0.673

CPAchecker general statistics
-----------------------------
Number of program locations:     4556
Number of CFA edges:             5072
Number of relevant variables:    659
Number of functions:             212
Number of loops:                 11
Size of reached set:             31089
  Number of reached locations:   1586 (35%)
    Avg states per location:     19
    Max states per location:     306 (at node N242)
  Number of reached functions:   129 (61%)
  Number of partitions:          30835
    Avg size of partitions:      1
    Max size of partitions:      37 (with key [N2398 (before line 9426), Function main called from node N2386, stack depth 1 [61ab89b0], stack [main]])
  Number of target states:       0
  Size of final wait list        515

Time for analysis setup:          6.603s
  Time for loading CPAs:          1.130s
  Time for loading parser:        0.645s
  Time for CFA construction:      4.661s
    Time for parsing file(s):     1.156s
    Time for AST to CFA:          1.710s
    Time for CFA sanity check:    0.311s
    Time for post-processing:     1.245s
      Time for var class.:        0.601s
Time for Analysis:              893.644s
CPU time for analysis:          893.530s
Total time for CPAchecker:      900.254s
Total CPU time for CPAchecker:  900.120s
Time for statistics:              0.576s

Time for Garbage Collector:      55.764s (in 1745 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                744MB (   710 MiB) max;    336MB (   320 MiB) avg;    778MB (   742 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1000MB (   954 MiB) max;    504MB (   481 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   9438MB (  9001 MiB) max;   8444MB (  8052 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
