scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-usb-dev__drivers-net-usb-pegasus_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cpg4c5yn/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5425: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8908: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8911: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8913: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9510: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9809: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9810: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10218: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10243: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10384: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10604: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10620: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10673: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10308: Ignoring call via function pointer ldv_usb_instance_pre_3_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10308: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10297: Ignoring call via function pointer ldv_usb_instance_post_3_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10297: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10158: Ignoring call via function pointer ldv_timer_instance_callback_1_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10158: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10553: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_ethtool_gset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1719506 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1426783 (83%)
  Because of loop head:            291474 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1249 (0%)
  Times precision was empty:       759054 (44%)
  Times precision was {false}:     20752 (1%)
  Times result was cached:         873276 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      66424 (4%)
  Times result was 'false':        192595 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         3694043
  BDD entailment checks:           3148783
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       37
Number of predicates discovered:          31
Number of abstraction locations:          144
Max number of predicates per location:    27
Avg number of predicates per location:    8
Total predicates per abstraction:         10498865
Max number of predicates per abstraction: 27
Avg number of predicates per abstraction: 120.43
Number of irrelevant predicates:          5375901 (51%)
Number of preds handled by boolean abs:   658590 (6%)
  Total number of models for allsat:      412947
  Max number of models for allsat:        144
  Avg number of models for allsat:        6.22

Time for post operator:                 58.007s
  Time for path formula creation:       54.101s
Time for strengthen operator:            6.825s
Time for prec operator:                589.451s
  Time for abstraction:                572.248s (Max:     1.314s, Count: 1719506)
    Boolean abstraction:               172.413s
    Solving time:                      108.263s (Max:     0.049s)
    Model enumeration time:             53.247s
    Time for BDD construction:          12.855s (Max:     0.059s)
Time for merge operator:                 2.853s
Time for coverage check:                 4.140s
  Time for BDD entailment checks:        3.546s
Total time for SMT solver (w/o itp):   161.510s

Number of path formula cache hits:   9191107 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    32.242s

Total number of created targets for pointer analysis: 44055
   Number of created targets for uf: *unsigned_short_int is 541
   Number of created targets for uf: *(char)* is 568
   Number of created targets for uf: *unsigned_int is 541
   Number of created targets for uf: *(struct_device)* is 29


Number of BDD nodes:                               225916
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      279845 (count: 4508725, min: 0, max: 4277, avg: 0.06)
Time for BDD node cleanup:                             0.635s
Time for BDD garbage collection:                       0.139s (in 3 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.477s
  Time for transition matches:                         6.476s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                      8581503 (count: 8581503, min: 1, max: 1, avg: 1.00) [1 x 8581503]

CPA algorithm statistics
------------------------
Number of iterations:            6823881
Max size of waitlist:            1613
Average size of waitlist:        339
Number of computed successors:   7777490
Max successors for one state:    2
Number of times merged:          272630
Number of times stopped:         524708
Number of times breaked:         1008

Total time for CPA algorithm:       834.163s (Max:    10.848s)
  Time for choose from waitlist:      2.888s
  Time for precision adjustment:    634.099s
  Time for transfer relation:       140.977s
  Time for merge operator:            8.988s
  Time for stop operator:            20.552s
  Time for adding to reached set:     9.909s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1008
Avg. length of target path (in blocks):               62834 (count: 1008, min: 15, max: 102, avg: 62.34)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  46.812s
  Counterexample analysis:                            33.545s (Max:     0.073s, Calls: 1008)
    Refinement sat check:                             23.158s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.059s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.204s
  Precision update:                                    0.606s
  ARG update:                                         11.938s

Length of refined path (in blocks):                   49206 (count: 1008, min: 11, max: 98, avg: 48.82)
Number of affected states:                            12047 (count: 1008, min: 1, max: 62, avg: 11.95)
Length (states) of path with itp 'true':              36151 (count: 1008, min: 0, max: 85, avg: 35.86)
Length (states) of path with itp non-trivial itp:     12047 (count: 1008, min: 1, max: 62, avg: 11.95)
Length (states) of path with itp 'false':               998 (count: 1008, min: 0, max: 1, avg: 0.99)
Different non-trivial interpolants along paths:          39 (count: 1008, min: 0, max: 1, avg: 0.04)
Equal non-trivial interpolants along paths:           11000 (count: 1008, min: 0, max: 61, avg: 10.91)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1008
Number of successful refinements:     1008
Number of failed refinements:         0
Max. size of reached set before ref.: 47465
Max. size of reached set after ref.:  18741
Avg. size of reached set before ref.: 13092.08
Avg. size of reached set after ref.:  6107.30

Total time for CEGAR algorithm:     893.588s
Time for refinements:                55.567s
Average time for refinement:          0.055s
Max time for refinement:              0.944s

Code Coverage
-----------------------------
  Function coverage:      0.377
  Visited lines:          1718
  Total lines:            3247
  Line coverage:          0.529
  Visited conditions:     208
  Total conditions:       678
  Condition coverage:     0.307

CPAchecker general statistics
-----------------------------
Number of program locations:     4556
Number of CFA edges:             5072
Number of relevant variables:    659
Number of functions:             212
Number of loops:                 11
Size of reached set:             19531
  Number of reached locations:   819 (18%)
    Avg states per location:     23
    Max states per location:     295 (at node N3531)
  Number of reached functions:   80 (38%)
  Number of partitions:          19309
    Avg size of partitions:      1
    Max size of partitions:      35 (with key [N2398 (before line 9426), Function main called from node N2386, stack depth 1 [61ab89b0], stack [main]])
  Number of target states:       0
  Size of final wait list        312

Time for analysis setup:          6.709s
  Time for loading CPAs:          1.074s
  Time for loading parser:        0.731s
  Time for CFA construction:      4.755s
    Time for parsing file(s):     1.209s
    Time for AST to CFA:          1.708s
    Time for CFA sanity check:    0.327s
    Time for post-processing:     1.237s
      Time for var class.:        0.558s
Time for Analysis:              893.588s
CPU time for analysis:          893.460s
Total time for CPAchecker:      900.305s
Total CPU time for CPAchecker:  900.170s
Time for statistics:              0.404s

Time for Garbage Collector:      39.657s (in 1528 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                619MB (   591 MiB) max;    335MB (   319 MiB) avg;    632MB (   602 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           718MB (   685 MiB) max;    498MB (   475 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  10714MB ( 10218 MiB) max;   9096MB (  8675 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
