scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__linux-kernel-locking-spinlock__drivers-net-fddi-skfp-skfp_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_go87n0oq/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8158: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9779: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9961: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9986: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9999: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10074: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10105: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10193: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10308: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10339: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10434: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10474: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10475: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10519: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10534: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10583: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10638: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10740: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13819: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 13824: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 13829: Dead code detected: Goto: case_3 (CFACreationUtils.addEdgeToCFA, INFO)

line 13833: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6730: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6771: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6605-6606: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6644: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10225: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10236: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10259: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10271: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10304: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10259: Ignoring call via function pointer ldv_pci_instance_suspend_2_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10259: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10247: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10247: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10271: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10271: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10236: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10236: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10225: Ignoring call via function pointer ldv_pci_instance_resume_2_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10225: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_fddidev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_purge to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6345: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6771: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6634: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 6644: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6730: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_register_netdev to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10021: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10021: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fddi_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_tail to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_from_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6598: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 6605-6606: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)0L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1480348 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1221225 (82%)
  Because of loop head:            235132 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23991 (2%)
  Times precision was empty:       219220 (15%)
  Times precision was {false}:     1593 (0%)
  Times result was cached:         1237777 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      21758 (1%)
  Times result was 'false':        43264 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         894764
  BDD entailment checks:           272844
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       43
Number of predicates discovered:          36
Number of abstraction locations:          446
Max number of predicates per location:    18
Avg number of predicates per location:    11
Total predicates per abstraction:         15307587
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 655.54
Number of irrelevant predicates:          4505401 (29%)
Number of preds handled by boolean abs:   139775 (1%)
  Total number of models for allsat:      23852
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.10

Time for post operator:                 45.613s
  Time for path formula creation:       42.884s
Time for strengthen operator:            5.831s
Time for prec operator:                565.955s
  Time for abstraction:                548.201s (Max:     0.362s, Count: 1480348)
    Boolean abstraction:                35.912s
    Solving time:                       33.898s (Max:     0.257s)
    Model enumeration time:              2.283s
    Time for BDD construction:           0.625s (Max:     0.028s)
Time for merge operator:                 3.024s
Time for coverage check:                 0.431s
  Time for BDD entailment checks:        0.309s
Total time for SMT solver (w/o itp):    36.181s

Number of path formula cache hits:   8815812 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    12.690s

Total number of created targets for pointer analysis: 57219
   Number of created targets for uf: *unsigned_short_int is 69
   Number of created targets for uf: *(Return_type:_[enum_irqreturn],_Parameters:_2,_Parameter_1_type:_[signed_int],_Parameter_2_type:_[(void)*],_VarArgs:_false)* is 27
   Number of created targets for uf: *(void)* is 30
   Number of created targets for uf: *(struct_device_private)* is 51
   Number of created targets for uf: *(struct_net_device)* is 27
   Number of created targets for uf: *unsigned_char is 165
   Number of created targets for uf: *(struct_pci_driver)* is 2
   Number of created targets for uf: *char is 3441
   Number of created targets for uf: *unsigned_int is 13


Number of BDD nodes:                               10281
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       54614 (count: 636924, min: 0, max: 704, avg: 0.09)
Time for BDD node cleanup:                             0.137s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.873s
  Time for transition matches:                         5.595s
  Time for transition assertions:                      0.021s
  Time for transition actions:                         0.037s
Automaton transfers with branching:                0
Automaton transfer successors:                      7208596 (count: 7208596, min: 1, max: 1, avg: 1.00) [1 x 7208596]

CPA algorithm statistics
------------------------
Number of iterations:            4751600
Max size of waitlist:            32
Average size of waitlist:        8
Number of computed successors:   5286745
Max successors for one state:    2
Number of times merged:          310960
Number of times stopped:         481970
Number of times breaked:         785

Total time for CPA algorithm:       759.812s (Max:     2.765s)
  Time for choose from waitlist:      1.848s
  Time for precision adjustment:    598.484s
  Time for transfer relation:       126.622s
  Time for merge operator:            6.751s
  Time for stop operator:             5.787s
  Time for adding to reached set:     8.375s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   785
Avg. length of target path (in blocks):              161425 (count: 785, min: 26, max: 319, avg: 205.64)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 124.834s
  Counterexample analysis:                           114.061s (Max:     0.418s, Calls: 785)
    Refinement sat check:                             62.696s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.066s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.072s
  Precision update:                                    1.664s
  ARG update:                                          7.193s

Length of refined path (in blocks):                  159288 (count: 785, min: 26, max: 319, avg: 202.91)
Number of affected states:                           152124 (count: 785, min: 1, max: 318, avg: 193.79)
Length (states) of path with itp 'true':               6379 (count: 785, min: 0, max: 208, avg: 8.13)
Length (states) of path with itp non-trivial itp:    152124 (count: 785, min: 1, max: 318, avg: 193.79)
Length (states) of path with itp 'false':                44 (count: 785, min: 0, max: 1, avg: 0.06)
Different non-trivial interpolants along paths:         767 (count: 785, min: 0, max: 3, avg: 0.98)
Equal non-trivial interpolants along paths:          150572 (count: 785, min: 0, max: 316, avg: 191.81)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                785
Number of successful refinements:     785
Number of failed refinements:         0
Max. size of reached set before ref.: 13237
Max. size of reached set after ref.:  9248
Avg. size of reached set before ref.: 6466.98
Avg. size of reached set after ref.:  401.50

Total time for CEGAR algorithm:     889.448s
Time for refinements:               129.389s
Average time for refinement:          0.164s
Max time for refinement:              0.577s

Code Coverage
-----------------------------
  Function coverage:      0.029
  Visited lines:          1130
  Total lines:            11191
  Line coverage:          0.101
  Visited conditions:     6
  Total conditions:       3778
  Condition coverage:     0.002

CPAchecker general statistics
-----------------------------
Number of program locations:     15941
Number of CFA edges:             18527
Number of relevant variables:    2143
Number of functions:             513
Number of loops:                 118
Size of reached set:             111
  Number of reached locations:   66 (0%)
    Avg states per location:     1
    Max states per location:     7 (at node N15299)
  Number of reached functions:   15 (3%)
  Number of partitions:          111
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        3

Time for analysis setup:         10.780s
  Time for loading CPAs:          1.500s
  Time for loading parser:        0.754s
  Time for CFA construction:      8.344s
    Time for parsing file(s):     1.567s
    Time for AST to CFA:          3.169s
    Time for CFA sanity check:    1.039s
    Time for post-processing:     2.416s
      Time for var class.:        1.346s
Time for Analysis:              889.448s
CPU time for analysis:          889.340s
Total time for CPAchecker:      900.232s
Total CPU time for CPAchecker:  900.090s
Time for statistics:              0.153s

Time for Garbage Collector:      44.160s (in 3882 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                238MB (   227 MiB) max;    123MB (   117 MiB) avg;    250MB (   239 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           253MB (   241 MiB) max;    181MB (   173 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8355MB (  7968 MiB) max;   8206MB (  7826 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
