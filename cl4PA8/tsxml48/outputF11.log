scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__linux-kernel-locking-spinlock__drivers-net-fddi-skfp-skfp_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_epr9p1sn/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8158: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9779: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9961: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9986: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9999: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10074: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10105: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10193: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10308: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10339: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10434: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10474: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10475: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10519: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10534: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10583: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10638: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10740: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13819: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 13824: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 13829: Dead code detected: Goto: case_3 (CFACreationUtils.addEdgeToCFA, INFO)

line 13833: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6730: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6771: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6605-6606: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6644: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10225: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10236: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10259: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10271: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10304: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_fddidev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10247: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10247: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10259: Ignoring call via function pointer ldv_pci_instance_suspend_2_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10259: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10271: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10271: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10236: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10236: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10225: Ignoring call via function pointer ldv_pci_instance_resume_2_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10225: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6730: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_register_netdev to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6345: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6771: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6634: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 6644: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_purge to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1931467 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1647565 (85%)
  Because of loop head:            268035 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15867 (1%)
  Times precision was empty:       319416 (17%)
  Times precision was {false}:     1044 (0%)
  Times result was cached:         1602653 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8354 (0%)
  Times result was 'false':        33546 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1703439
  BDD entailment checks:           707365
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       43
Number of predicates discovered:          30
Number of abstraction locations:          257
Max number of predicates per location:    16
Avg number of predicates per location:    11
Total predicates per abstraction:         16461289
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 1751.57
Number of irrelevant predicates:          10481662 (64%)
Number of preds handled by boolean abs:   47228 (0%)
  Total number of models for allsat:      8797
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.05

Time for post operator:                 77.814s
  Time for path formula creation:       73.213s
Time for strengthen operator:            7.776s
Time for prec operator:                504.773s
  Time for abstraction:                478.370s (Max:     0.735s, Count: 1931467)
    Boolean abstraction:                10.732s
    Solving time:                        9.628s (Max:     0.219s)
    Model enumeration time:              0.742s
    Time for BDD construction:           0.353s (Max:     0.008s)
Time for merge operator:                 5.487s
Time for coverage check:                 0.935s
  Time for BDD entailment checks:        0.692s
Total time for SMT solver (w/o itp):    10.370s

Number of path formula cache hits:   11899464 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    19.546s

Total number of created targets for pointer analysis: 45014
   Number of created targets for uf: *(Return_type:_[enum_irqreturn],_Parameters:_2,_Parameter_1_type:_[signed_int],_Parameter_2_type:_[(void)*],_VarArgs:_false)* is 9
   Number of created targets for uf: *unsigned_short_int is 902
   Number of created targets for uf: *(void)* is 9
   Number of created targets for uf: *(struct_device_private)* is 19
   Number of created targets for uf: *(struct_net_device)* is 9
   Number of created targets for uf: *unsigned_char is 821
   Number of created targets for uf: *(struct_dma_map_ops)* is 23
   Number of created targets for uf: *unsigned_long_long_int is 5
   Number of created targets for uf: *(unsigned_long_long_int)* is 13
   Number of created targets for uf: *(struct_pci_driver)* is 2
   Number of created targets for uf: *char is 3613
   Number of created targets for uf: *unsigned_int is 50


Number of BDD nodes:                               4627
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       21929 (count: 1085571, min: 0, max: 488, avg: 0.02)
Time for BDD node cleanup:                             0.144s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 14.126s
  Time for transition matches:                         8.353s
  Time for transition assertions:                      0.009s
  Time for transition actions:                         0.080s
Automaton transfers with branching:                0
Automaton transfer successors:                      9743430 (count: 9743430, min: 1, max: 1, avg: 1.00) [1 x 9743430]

CPA algorithm statistics
------------------------
Number of iterations:            6507467
Max size of waitlist:            204
Average size of waitlist:        96
Number of computed successors:   7268913
Max successors for one state:    2
Number of times merged:          498037
Number of times stopped:         711959
Number of times breaked:         648

Total time for CPA algorithm:       809.079s (Max:     4.380s)
  Time for choose from waitlist:      3.583s
  Time for precision adjustment:    555.659s
  Time for transfer relation:       198.406s
  Time for merge operator:           12.133s
  Time for stop operator:             9.276s
  Time for adding to reached set:    12.138s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   648
Avg. length of target path (in blocks):               95719 (count: 648, min: 26, max: 198, avg: 147.71)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  68.566s
  Counterexample analysis:                            51.915s (Max:     0.248s, Calls: 648)
    Refinement sat check:                             29.311s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.060s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.618s
  Precision update:                                    1.053s
  ARG update:                                         14.331s

Length of refined path (in blocks):                   81157 (count: 648, min: 26, max: 198, avg: 125.24)
Number of affected states:                            57727 (count: 648, min: 1, max: 197, avg: 89.08)
Length (states) of path with itp 'true':              22782 (count: 648, min: 0, max: 109, avg: 35.16)
Length (states) of path with itp non-trivial itp:     57727 (count: 648, min: 1, max: 197, avg: 89.08)
Length (states) of path with itp 'false':               337 (count: 648, min: 0, max: 1, avg: 0.52)
Different non-trivial interpolants along paths:         609 (count: 648, min: 0, max: 3, avg: 0.94)
Equal non-trivial interpolants along paths:           56470 (count: 648, min: 0, max: 195, avg: 87.15)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                648
Number of successful refinements:     648
Number of failed refinements:         0
Max. size of reached set before ref.: 43209
Max. size of reached set after ref.:  16455
Avg. size of reached set before ref.: 16191.02
Avg. size of reached set after ref.:  6184.36

Total time for CEGAR algorithm:     889.636s
Time for refinements:                77.322s
Average time for refinement:          0.119s
Max time for refinement:              0.504s

Code Coverage
-----------------------------
  Function coverage:      0.185
  Visited lines:          2182
  Total lines:            11191
  Line coverage:          0.195
  Visited conditions:     228
  Total conditions:       3778
  Condition coverage:     0.060

CPAchecker general statistics
-----------------------------
Number of program locations:     15941
Number of CFA edges:             18527
Number of relevant variables:    2143
Number of functions:             513
Number of loops:                 118
Size of reached set:             39094
  Number of reached locations:   984 (6%)
    Avg states per location:     39
    Max states per location:     1191 (at node N15314)
  Number of reached functions:   95 (19%)
  Number of partitions:          37942
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N2630 (before line 10318), Function ldv_pci_pci_instance_2 called from node N2345, stack depth 8 [7656f633], stack [main, ldv_entry_EMGentry_10, ldv_EMGentry_init_skfddi_pci_driver_init_10_7, skfddi_pci_driver_init, ldv___pci_register_driver_77, ldv___pci_register_driver, ldv_dispatch_register_9_2, ldv_pci_pci_instance_2]])
  Number of target states:       0
  Size of final wait list        85

Time for analysis setup:         10.624s
  Time for loading CPAs:          1.508s
  Time for loading parser:        0.730s
  Time for CFA construction:      8.222s
    Time for parsing file(s):     1.518s
    Time for AST to CFA:          3.376s
    Time for CFA sanity check:    0.951s
    Time for post-processing:     2.233s
      Time for var class.:        1.234s
Time for Analysis:              889.636s
CPU time for analysis:          889.570s
Total time for CPAchecker:      900.273s
Total CPU time for CPAchecker:  900.170s
Time for statistics:              0.625s

Time for Garbage Collector:      77.962s (in 2469 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                347MB (   331 MiB) max;    196MB (   186 MiB) avg;    352MB (   336 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     41MB (    39 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:           353MB (   336 MiB) max;    288MB (   275 MiB) avg
Allocated non-heap memory:        49MB (    47 MiB) max;     49MB (    46 MiB) avg
Total process virtual memory:   8153MB (  7775 MiB) max;   8134MB (  7757 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
