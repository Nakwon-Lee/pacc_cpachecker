scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__linux-kernel-locking-spinlock__drivers-net-fddi-skfp-skfp_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7gs65k4p/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8158: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9779: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9961: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9986: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9999: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10074: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10105: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10193: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10308: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10339: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10434: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10474: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10475: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10519: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10534: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10583: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10638: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10740: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13819: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 13824: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 13829: Dead code detected: Goto: case_3 (CFACreationUtils.addEdgeToCFA, INFO)

line 13833: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6730: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6771: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6605-6606: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6644: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10225: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10236: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10259: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10271: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10304: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_fddidev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10247: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10247: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10259: Ignoring call via function pointer ldv_pci_instance_suspend_2_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10259: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10271: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10271: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10236: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10236: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10225: Ignoring call via function pointer ldv_pci_instance_resume_2_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10225: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6730: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_register_netdev to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6345: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            19092 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15073 (79%)
  Because of loop head:            2673 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1346 (7%)
  Times precision was empty:       8734 (46%)
  Times precision was {false}:     192 (1%)
  Times result was cached:         9221 (48%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      945 (5%)
  Times result was 'false':        1296 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         5991
  BDD entailment checks:           3115
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       43
Number of predicates discovered:          14
Number of abstraction locations:          77
Max number of predicates per location:    12
Avg number of predicates per location:    9
Total predicates per abstraction:         85631
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 75.31
Number of irrelevant predicates:          34843 (41%)
Number of preds handled by boolean abs:   5364 (6%)
  Total number of models for allsat:      968
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  2.518s
  Time for path formula creation:        2.377s
Time for strengthen operator:            0.104s
Time for prec operator:                  8.765s
  Time for abstraction:                  8.130s (Max:     0.065s, Count: 19092)
    Boolean abstraction:                 1.226s
    Solving time:                        0.795s (Max:     0.031s)
    Model enumeration time:              0.112s
    Time for BDD construction:           0.105s (Max:     0.012s)
Time for merge operator:                 0.106s
Time for coverage check:                 0.040s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     0.907s

Number of path formula cache hits:   82894 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.816s

Total number of created targets for pointer analysis: 1292
   Number of created targets for uf: *unsigned_short_int is 52
   Number of created targets for uf: *unsigned_char is 185
   Number of created targets for uf: *(struct_pci_driver)* is 2
   Number of created targets for uf: *unsigned_int is 5


Number of BDD nodes:                               484
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2545 (count: 18816, min: 0, max: 472, avg: 0.14)
Time for BDD node cleanup:                             0.029s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.610s
  Time for transition matches:                         0.205s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.027s
Automaton transfers with branching:                0
Automaton transfer successors:                        69915 (count: 69915, min: 1, max: 1, avg: 1.00) [1 x 69915]

CPA algorithm statistics
------------------------
Number of iterations:            48605
Max size of waitlist:            35
Average size of waitlist:        10
Number of computed successors:   53500
Max successors for one state:    2
Number of times merged:          1438
Number of times stopped:         2996
Number of times breaked:         50

Total time for CPA algorithm:        16.632s (Max:     1.188s)
  Time for choose from waitlist:      0.151s
  Time for precision adjustment:      9.650s
  Time for transfer relation:         5.469s
  Time for merge operator:            0.212s
  Time for stop operator:             0.205s
  Time for adding to reached set:     0.311s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   50
Avg. length of target path (in blocks):                2919 (count: 50, min: 26, max: 83, avg: 58.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.216s
  Counterexample analysis:                             1.690s (Max:     0.058s, Calls: 50)
    Refinement sat check:                              0.948s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.097s
  Precision update:                                    0.064s
  ARG update:                                          0.301s

Length of refined path (in blocks):                    2919 (count: 50, min: 26, max: 83, avg: 58.38)
Number of affected states:                             2869 (count: 50, min: 25, max: 82, avg: 57.38)
Length (states) of path with itp 'true':                  0 (count: 50, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      2869 (count: 50, min: 25, max: 82, avg: 57.38)
Length (states) of path with itp 'false':                 0 (count: 50, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:          50 (count: 50, min: 1, max: 1, avg: 1.00)
Equal non-trivial interpolants along paths:            2769 (count: 50, min: 23, max: 80, avg: 55.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                50
Number of successful refinements:     50
Number of failed refinements:         0
Max. size of reached set before ref.: 2607
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 943.84
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      19.014s
Time for refinements:                 2.373s
Average time for refinement:          0.047s
Max time for refinement:              0.117s

Code Coverage
-----------------------------
  Function coverage:      0.146
  Visited lines:          1674
  Total lines:            11191
  Line coverage:          0.150
  Visited conditions:     118
  Total conditions:       3778
  Condition coverage:     0.031

CPAchecker general statistics
-----------------------------
Number of program locations:     15941
Number of CFA edges:             18527
Number of relevant variables:    2143
Number of functions:             513
Number of loops:                 118
Size of reached set:             2167
  Number of reached locations:   560 (4%)
    Avg states per location:     3
    Max states per location:     40 (at node N16488)
  Number of reached functions:   75 (15%)
  Number of partitions:          2112
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N2881 (before line 10739), Function ldv___pci_register_driver_77 called from node N2268, stack depth 5 [3f3ecfd4], stack [main, ldv_entry_EMGentry_10, ldv_EMGentry_init_skfddi_pci_driver_init_10_7, skfddi_pci_driver_init, ldv___pci_register_driver_77]])
  Number of target states:       0
  Size of final wait list        27

Time for analysis setup:         11.221s
  Time for loading CPAs:          1.289s
  Time for loading parser:        0.719s
  Time for CFA construction:      9.020s
    Time for parsing file(s):     1.662s
    Time for AST to CFA:          3.944s
    Time for CFA sanity check:    0.885s
    Time for post-processing:     2.375s
      Time for var class.:        1.272s
Time for Analysis:               19.015s
CPU time for analysis:           19.010s
Total time for CPAchecker:       30.244s
Total CPU time for CPAchecker:   30.210s
Time for statistics:              0.180s

Time for Garbage Collector:       0.843s (in 56 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 84MB (    80 MiB) max;     58MB (    55 MiB) avg;     91MB (    87 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     33MB (    32 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8068MB (  7694 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
