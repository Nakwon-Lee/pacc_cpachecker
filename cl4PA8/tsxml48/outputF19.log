scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__linux-kernel-locking-spinlock__drivers-net-fddi-skfp-skfp_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5ajynrd0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8158: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9779: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9961: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9986: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9999: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10074: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10105: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10193: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10308: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10339: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10434: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10474: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10475: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10519: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10534: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10583: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10638: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10740: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13819: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 13824: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 13829: Dead code detected: Goto: case_3 (CFACreationUtils.addEdgeToCFA, INFO)

line 13833: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6730: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6771: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6605-6606: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6644: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10225: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10236: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10259: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10271: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10304: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_fddidev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10247: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10247: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10259: Ignoring call via function pointer ldv_pci_instance_suspend_2_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10259: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10271: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10271: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10236: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10236: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10225: Ignoring call via function pointer ldv_pci_instance_resume_2_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10225: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6730: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6634: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6644: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_register_netdev to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6345: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6771: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fddi_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_tail to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_dequeue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_from_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6598: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 6605-6606: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)0L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            710046 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  521901 (74%)
  Because of loop head:            173811 (24%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14334 (2%)
  Times precision was empty:       243578 (34%)
  Times precision was {false}:     1373 (0%)
  Times result was cached:         454688 (64%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10407 (1%)
  Times result was 'false':        17004 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         843317
  BDD entailment checks:           130455
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       43
Number of predicates discovered:          30
Number of abstraction locations:          325
Max number of predicates per location:    18
Avg number of predicates per location:    9
Total predicates per abstraction:         3582355
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 304.10
Number of irrelevant predicates:          1949294 (54%)
Number of preds handled by boolean abs:   67002 (2%)
  Total number of models for allsat:      11968
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.15

Time for post operator:                 43.467s
  Time for path formula creation:       40.988s
Time for strengthen operator:            4.353s
Time for prec operator:                181.878s
  Time for abstraction:                171.680s (Max:     0.297s, Count: 710046)
    Boolean abstraction:                23.048s
    Solving time:                       23.264s (Max:     0.275s)
    Model enumeration time:              1.376s
    Time for BDD construction:           0.357s (Max:     0.010s)
Time for merge operator:                 3.929s
Time for coverage check:                 0.239s
  Time for BDD entailment checks:        0.153s
Total time for SMT solver (w/o itp):    24.640s

Number of path formula cache hits:   6657497 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    12.692s

Total number of created targets for pointer analysis: 73700
   Number of created targets for uf: *unsigned_short_int is 345
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *(struct_device_private)* is 3
   Number of created targets for uf: *(struct_net_device)* is 8
   Number of created targets for uf: *unsigned_char is 1213
   Number of created targets for uf: *(struct_dma_map_ops)* is 83
   Number of created targets for uf: *unsigned_long_long_int is 7
   Number of created targets for uf: *(struct_pci_driver)* is 2
   Number of created targets for uf: *(unsigned_long_long_int)* is 83
   Number of created targets for uf: *char is 3269
   Number of created targets for uf: *unsigned_int is 46


Number of BDD nodes:                               5225
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       27020 (count: 446968, min: 0, max: 779, avg: 0.06)
Time for BDD node cleanup:                             0.107s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.976s
  Time for transition matches:                         4.421s
  Time for transition assertions:                      0.010s
  Time for transition actions:                         0.023s
Automaton transfers with branching:                0
Automaton transfer successors:                      5712794 (count: 5712794, min: 1, max: 1, avg: 1.00) [1 x 5712794]

CPA algorithm statistics
------------------------
Number of iterations:            3552962
Max size of waitlist:            150
Average size of waitlist:        82
Number of computed successors:   4091388
Max successors for one state:    2
Number of times merged:          356431
Number of times stopped:         463303
Number of times breaked:         2639

Total time for CPA algorithm:       334.325s (Max:     2.844s)
  Time for choose from waitlist:      1.523s
  Time for precision adjustment:    206.206s
  Time for transfer relation:        99.650s
  Time for merge operator:            7.920s
  Time for stop operator:             4.239s
  Time for adding to reached set:     6.127s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2639
Avg. length of target path (in blocks):              574389 (count: 2639, min: 26, max: 285, avg: 217.65)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 523.629s
  Counterexample analysis:                           509.099s (Max:     0.446s, Calls: 2639)
    Refinement sat check:                            299.964s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.358s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.927s
  Precision update:                                    4.277s
  ARG update:                                          6.597s

Length of refined path (in blocks):                  570495 (count: 2639, min: 26, max: 285, avg: 216.18)
Number of affected states:                           106783 (count: 2639, min: 1, max: 284, avg: 40.46)
Length (states) of path with itp 'true':             461073 (count: 2639, min: 0, max: 222, avg: 174.72)
Length (states) of path with itp non-trivial itp:    106783 (count: 2639, min: 1, max: 284, avg: 40.46)
Length (states) of path with itp 'false':                50 (count: 2639, min: 0, max: 1, avg: 0.02)
Different non-trivial interpolants along paths:        2605 (count: 2639, min: 0, max: 3, avg: 0.99)
Equal non-trivial interpolants along paths:          101539 (count: 2639, min: 0, max: 282, avg: 38.48)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2639
Number of successful refinements:     2639
Number of failed refinements:         0
Max. size of reached set before ref.: 10682
Max. size of reached set after ref.:  9502
Avg. size of reached set before ref.: 6921.48
Avg. size of reached set after ref.:  5555.72

Total time for CEGAR algorithm:     889.734s
Time for refinements:               546.011s
Average time for refinement:          0.206s
Max time for refinement:              0.490s

Code Coverage
-----------------------------
  Function coverage:      0.318
  Visited lines:          3233
  Total lines:            11191
  Line coverage:          0.289
  Visited conditions:     488
  Total conditions:       3778
  Condition coverage:     0.129

CPAchecker general statistics
-----------------------------
Number of program locations:     15941
Number of CFA edges:             18527
Number of relevant variables:    2143
Number of functions:             513
Number of loops:                 118
Size of reached set:             6837
  Number of reached locations:   1878 (12%)
    Avg states per location:     3
    Max states per location:     125 (at node N15314)
  Number of reached functions:   163 (32%)
  Number of partitions:          6833
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N489 (before line 7228), Function skfp_init_one called from node N2560, stack depth 10 [6e00e9af], stack [main, ldv_entry_EMGentry_10, ldv_EMGentry_init_skfddi_pci_driver_init_10_7, skfddi_pci_driver_init, ldv___pci_register_driver_77, ldv___pci_register_driver, ldv_dispatch_register_9_2, ldv_pci_pci_instance_2, ldv_pci_instance_probe_2_17, skfp_init_one]])
  Number of target states:       0
  Size of final wait list        97

Time for analysis setup:         10.482s
  Time for loading CPAs:          1.218s
  Time for loading parser:        0.778s
  Time for CFA construction:      8.319s
    Time for parsing file(s):     1.613s
    Time for AST to CFA:          3.266s
    Time for CFA sanity check:    0.926s
    Time for post-processing:     2.390s
      Time for var class.:        1.368s
Time for Analysis:              889.734s
CPU time for analysis:          889.630s
Total time for CPAchecker:      900.233s
Total CPU time for CPAchecker:  900.100s
Time for statistics:              0.288s

Time for Garbage Collector:      18.846s (in 1892 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                184MB (   175 MiB) max;    110MB (   105 MiB) avg;    189MB (   180 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           190MB (   181 MiB) max;    161MB (   154 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8289MB (  7905 MiB) max;   8187MB (  7808 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
