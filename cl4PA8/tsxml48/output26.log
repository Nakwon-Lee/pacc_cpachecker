scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__linux-kernel-locking-spinlock__drivers-net-fddi-skfp-skfp_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pamih4nz/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8158: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9779: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9961: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9986: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9999: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10074: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10105: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10193: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10308: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10339: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10434: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10474: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10475: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10519: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10534: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10583: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10638: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10740: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13819: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 13824: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 13829: Dead code detected: Goto: case_3 (CFACreationUtils.addEdgeToCFA, INFO)

line 13833: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6730: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6771: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6605-6606: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6644: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10225: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10236: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10259: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10271: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10304: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_fddidev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6730: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6345: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6771: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_register_netdev to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            7478 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6611 (88%)
  Because of loop head:            841 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         26 (0%)
  Times precision was empty:       3564 (48%)
  Times precision was {false}:     318 (4%)
  Times result was cached:         2891 (39%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      705 (9%)
  Times result was 'false':        127 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         4840
  BDD entailment checks:           964
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       43
Number of predicates discovered:          15
Number of abstraction locations:          145
Max number of predicates per location:    7
Avg number of predicates per location:    1
Total predicates per abstraction:         8989
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 8.79
Number of irrelevant predicates:          3386 (38%)
Number of preds handled by boolean abs:   1435 (16%)
  Total number of models for allsat:      1053
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.49

Time for post operator:                  6.155s
  Time for path formula creation:        6.022s
Time for strengthen operator:            0.131s
Time for prec operator:                  4.943s
  Time for abstraction:                  4.563s (Max:     0.226s, Count: 7478)
    Boolean abstraction:                 1.186s
    Solving time:                        1.125s (Max:     0.206s)
    Model enumeration time:              0.145s
    Time for BDD construction:           0.112s (Max:     0.012s)
Time for merge operator:                 0.359s
Time for coverage check:                 0.019s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):     1.270s

Number of path formula cache hits:   30763 (61%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.657s

Total number of created targets for pointer analysis: 16624
   Number of created targets for uf: *(Return_type:_[enum_irqreturn],_Parameters:_2,_Parameter_1_type:_[signed_int],_Parameter_2_type:_[(void)*],_VarArgs:_false)* is 27
   Number of created targets for uf: *unsigned_short_int is 137
   Number of created targets for uf: *(void)* is 27
   Number of created targets for uf: *unsigned_char is 903
   Number of created targets for uf: *(struct_pci_driver)* is 2
   Number of created targets for uf: *char is 1893
   Number of created targets for uf: *unsigned_int is 3


Number of BDD nodes:                               352
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1446 (count: 10479, min: 0, max: 182, avg: 0.14)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.300s
Automaton transfers with branching:                0
Automaton transfer successors:                        45376 (count: 45376, min: 1, max: 1, avg: 1.00) [1 x 45376]

CPA algorithm statistics
------------------------
Number of iterations:            25721
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   28746
Max successors for one state:    2
Number of times merged:          1938
Number of times stopped:         2718
Number of times breaked:         26

Total time for CPA algorithm:        15.593s (Max:     2.856s)
  Time for choose from waitlist:      0.107s
  Time for precision adjustment:      5.709s
  Time for transfer relation:         8.357s
  Time for merge operator:            0.545s
  Time for stop operator:             0.166s
  Time for adding to reached set:     0.186s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   26
Avg. length of target path (in blocks):                4130 (count: 26, min: 108, max: 194, avg: 158.85)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.458s
  Counterexample analysis:                             3.127s (Max:     0.206s, Calls: 26)
    Refinement sat check:                              1.630s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.071s
  Precision update:                                    0.044s
  ARG update:                                          0.167s

Length of refined path (in blocks):                    3140 (count: 26, min: 71, max: 181, avg: 120.77)
Number of affected states:                             1497 (count: 26, min: 1, max: 180, avg: 57.58)
Length (states) of path with itp 'true':               1617 (count: 26, min: 0, max: 110, avg: 62.19)
Length (states) of path with itp non-trivial itp:      1497 (count: 26, min: 1, max: 180, avg: 57.58)
Length (states) of path with itp 'false':                23 (count: 26, min: 0, max: 1, avg: 0.88)
Different non-trivial interpolants along paths:          15 (count: 26, min: 0, max: 3, avg: 0.58)
Equal non-trivial interpolants along paths:            1456 (count: 26, min: 0, max: 178, avg: 56.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                26
Number of successful refinements:     26
Number of failed refinements:         0
Max. size of reached set before ref.: 1542
Max. size of reached set after ref.:  1132
Avg. size of reached set before ref.: 1355.62
Avg. size of reached set after ref.:  401.19

Total time for CEGAR algorithm:      19.343s
Time for refinements:                 3.715s
Average time for refinement:          0.142s
Max time for refinement:              0.211s

Code Coverage
-----------------------------
  Function coverage:      0.092
  Visited lines:          1781
  Total lines:            11191
  Line coverage:          0.159
  Visited conditions:     138
  Total conditions:       3778
  Condition coverage:     0.037

CPAchecker general statistics
-----------------------------
Number of program locations:     15941
Number of CFA edges:             18527
Number of relevant variables:    2143
Number of functions:             513
Number of loops:                 118
Size of reached set:             1087
  Number of reached locations:   532 (3%)
    Avg states per location:     2
    Max states per location:     39 (at node N15313)
  Number of reached functions:   47 (9%)
  Number of partitions:          1083
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N489 (before line 7228), Function skfp_init_one called from node N2560, stack depth 10 [38f38fcf], stack [main, ldv_entry_EMGentry_10, ldv_EMGentry_init_skfddi_pci_driver_init_10_7, skfddi_pci_driver_init, ldv___pci_register_driver_77, ldv___pci_register_driver, ldv_dispatch_register_9_2, ldv_pci_pci_instance_2, ldv_pci_instance_probe_2_17, skfp_init_one]])
  Number of target states:       0
  Size of final wait list        8

Time for analysis setup:         10.414s
  Time for loading CPAs:          1.168s
  Time for loading parser:        0.727s
  Time for CFA construction:      8.390s
    Time for parsing file(s):     1.652s
    Time for AST to CFA:          3.462s
    Time for CFA sanity check:    0.822s
    Time for post-processing:     2.227s
      Time for var class.:        1.267s
Time for Analysis:               19.343s
CPU time for analysis:           19.340s
Total time for CPAchecker:       29.764s
Total CPU time for CPAchecker:   29.730s
Time for statistics:              0.163s

Time for Garbage Collector:       0.753s (in 40 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 88MB (    84 MiB) max;     60MB (    57 MiB) avg;     91MB (    87 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     34MB (    33 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        44MB (    41 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8068MB (  7694 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
