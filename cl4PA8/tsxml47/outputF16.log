scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-mutex__drivers-net-wireless-ipw2x00-ipw2100_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4_rp7wx4/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7257: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 7392: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7397: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7407: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 7411: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 24667: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 25482: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 26041: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 26082: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 26083: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 26128: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 27108: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 27490: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27506: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27682: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7932: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7973: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7726-7727: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7805: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7845: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7765: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 23035: Function pointer *(crypt->ops->set_flags) with type unsigned long int (*)(unsigned long, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27048: Function pointer *arg0 with type void (*)(unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_remove_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_add_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_xmit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_update_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wireless_send_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_txb_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_libipw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7331: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7973: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7755: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 7765: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_uninterruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7719: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7835: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 7845: Ignoring function call through function pointer *(ops->sync_single_for_device): (*(ops->sync_single_for_device))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_for_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_seconds to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            554924 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  500492 (90%)
  Because of loop head:            45932 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8500 (2%)
  Times precision was empty:       63308 (11%)
  Times precision was {false}:     1036 (0%)
  Times result was cached:         479007 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      11573 (2%)
  Times result was 'false':        67259 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         331386
  BDD entailment checks:           106026
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       113
Number of predicates discovered:          34
Number of abstraction locations:          298
Max number of predicates per location:    24
Avg number of predicates per location:    8
Total predicates per abstraction:         5488110
Max number of predicates per abstraction: 24
Avg number of predicates per abstraction: 435.25
Number of irrelevant predicates:          1225104 (22%)
Number of preds handled by boolean abs:   66374 (1%)
  Total number of models for allsat:      16528
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.43

Time for post operator:                 29.784s
  Time for path formula creation:       28.450s
Time for strengthen operator:            2.422s
Time for prec operator:                340.584s
  Time for abstraction:                332.090s (Max:     5.179s, Count: 554924)
    Boolean abstraction:               109.709s
    Solving time:                       65.675s (Max:     1.442s)
    Model enumeration time:             42.819s
    Time for BDD construction:           0.552s (Max:     0.016s)
Time for merge operator:                 1.695s
Time for coverage check:                 0.225s
  Time for BDD entailment checks:        0.176s
Total time for SMT solver (w/o itp):   108.494s

Number of path formula cache hits:   3276694 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.514s

Total number of created targets for pointer analysis: 37023
   Number of created targets for uf: *unsigned_char is 1841
   Number of created targets for uf: *(struct_list_head)* is 9
   Number of created targets for uf: *unsigned_int is 71
   Number of created targets for uf: *char is 15


Number of BDD nodes:                               14397
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       31395 (count: 266625, min: 0, max: 662, avg: 0.12)
Time for BDD node cleanup:                             0.066s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.233s
  Time for transition matches:                         2.240s
  Time for transition assertions:                      0.010s
  Time for transition actions:                         0.026s
Automaton transfers with branching:                0
Automaton transfer successors:                      2819817 (count: 2819817, min: 1, max: 1, avg: 1.00) [1 x 2819817]

CPA algorithm statistics
------------------------
Number of iterations:            2018094
Max size of waitlist:            196
Average size of waitlist:        97
Number of computed successors:   2305573
Max successors for one state:    2
Number of times merged:          112680
Number of times stopped:         148765
Number of times breaked:         1115

Total time for CPA algorithm:       445.202s (Max:     9.608s)
  Time for choose from waitlist:      0.957s
  Time for precision adjustment:    354.773s
  Time for transfer relation:        72.367s
  Time for merge operator:            3.592s
  Time for stop operator:             3.190s
  Time for adding to reached set:     4.307s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1115
Avg. length of target path (in blocks):              242728 (count: 1115, min: 29, max: 320, avg: 217.69)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 437.522s
  Counterexample analysis:                           430.195s (Max:     1.659s, Calls: 1115)
    Refinement sat check:                            339.654s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.149s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.668s
  Precision update:                                    1.820s
  ARG update:                                          3.563s

Length of refined path (in blocks):                  203189 (count: 1114, min: 11, max: 304, avg: 182.40)
Number of affected states:                            85448 (count: 1114, min: 1, max: 302, avg: 76.70)
Length (states) of path with itp 'true':             116627 (count: 1114, min: 1, max: 190, avg: 104.69)
Length (states) of path with itp non-trivial itp:     85448 (count: 1114, min: 1, max: 302, avg: 76.70)
Length (states) of path with itp 'false':               897 (count: 1114, min: 0, max: 1, avg: 0.81)
Different non-trivial interpolants along paths:         237 (count: 1114, min: 0, max: 5, avg: 0.21)
Equal non-trivial interpolants along paths:           84097 (count: 1114, min: 0, max: 300, avg: 75.49)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1115
Number of successful refinements:     1114
Number of failed refinements:         0
Max. size of reached set before ref.: 7127
Max. size of reached set after ref.:  5029
Avg. size of reached set before ref.: 3583.94
Avg. size of reached set after ref.:  1711.44

Total time for CEGAR algorithm:     889.087s
Time for refinements:               442.676s
Average time for refinement:          0.397s
Max time for refinement:              1.669s

Code Coverage
-----------------------------
  Function coverage:      0.230
  Visited lines:          2873
  Total lines:            12193
  Line coverage:          0.236
  Visited conditions:     456
  Total conditions:       3038
  Condition coverage:     0.150

CPAchecker general statistics
-----------------------------
Number of program locations:     17055
Number of CFA edges:             19441
Number of relevant variables:    1982
Number of functions:             522
Number of loops:                 77
Size of reached set:             6588
  Number of reached locations:   1473 (9%)
    Avg states per location:     4
    Max states per location:     96 (at node N16036)
  Number of reached functions:   120 (23%)
  Number of partitions:          6490
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N14107 (before line 25327), Function main called from node N14088, stack depth 1 [201a84e1], stack [main]])
  Number of target states:       1
  Size of final wait list        145

Time for analysis setup:         11.546s
  Time for loading CPAs:          1.324s
  Time for loading parser:        0.797s
  Time for CFA construction:      9.251s
    Time for parsing file(s):     1.529s
    Time for AST to CFA:          3.408s
    Time for CFA sanity check:    1.019s
    Time for post-processing:     3.094s
      Time for var class.:        1.537s
Time for Analysis:              889.087s
CPU time for analysis:          888.950s
Total time for CPAchecker:      900.644s
Total CPU time for CPAchecker:  900.470s
Time for statistics:              0.304s

Time for Garbage Collector:      16.640s (in 1844 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                179MB (   171 MiB) max;    111MB (   106 MiB) avg;    187MB (   179 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           201MB (   191 MiB) max;    162MB (   155 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8555MB (  8159 MiB) max;   8339MB (  7953 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
