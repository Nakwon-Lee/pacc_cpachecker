scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-mutex__drivers-net-wireless-ipw2x00-ipw2100_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_mal7ztgl/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7257: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 7392: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7397: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7407: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 7411: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 24667: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 25482: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 26041: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 26082: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 26083: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 26128: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 27108: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 27490: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27506: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27682: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7932: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7973: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7726-7727: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7805: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7845: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7765: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 23035: Function pointer *(crypt->ops->set_flags) with type unsigned long int (*)(unsigned long, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27048: Function pointer *arg0 with type void (*)(unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 25795: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 25795: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 25515: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 25515: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 25760: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 25760: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 27048: Ignoring call via function pointer ldv_timer_instance_callback_10_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 27048: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function libipw_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_xmit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_add_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            462258 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  403108 (87%)
  Because of loop head:            58854 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         296 (0%)
  Times precision was empty:       270662 (59%)
  Times precision was {false}:     2683 (1%)
  Times result was cached:         174653 (38%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      14260 (3%)
  Times result was 'false':        29916 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         681837
  BDD entailment checks:           518893
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       83
Number of predicates discovered:          40
Number of abstraction locations:          37
Max number of predicates per location:    40
Avg number of predicates per location:    22
Total predicates per abstraction:         2825493
Max number of predicates per abstraction: 40
Avg number of predicates per abstraction: 166.76
Number of irrelevant predicates:          1337593 (47%)
Number of preds handled by boolean abs:   209054 (7%)
  Total number of models for allsat:      3329882
  Max number of models for allsat:        19440
  Avg number of models for allsat:        233.51

Time for post operator:                 47.169s
  Time for path formula creation:       45.476s
Time for strengthen operator:            2.414s
Time for prec operator:                758.698s
  Time for abstraction:                751.544s (Max:     4.421s, Count: 462258)
    Boolean abstraction:               648.454s
    Solving time:                       24.721s (Max:     0.016s)
    Model enumeration time:            378.265s
    Time for BDD construction:         244.069s (Max:     1.655s)
Time for merge operator:                 1.687s
Time for coverage check:                 0.944s
  Time for BDD entailment checks:        0.831s
Total time for SMT solver (w/o itp):   402.996s

Number of path formula cache hits:   1931893 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    33.049s

Total number of created targets for pointer analysis: 24880
   Number of created targets for uf: *unsigned_char is 24881


Number of BDD nodes:                               171637
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      119162 (count: 927550, min: 0, max: 2277, avg: 0.13)
Time for BDD node cleanup:                             0.154s
Time for BDD garbage collection:                       1.727s (in 549 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.910s
  Time for transition matches:                         2.148s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                      2534407 (count: 2534407, min: 1, max: 1, avg: 1.00) [1 x 2534407]

CPA algorithm statistics
------------------------
Number of iterations:            1855888
Max size of waitlist:            701
Average size of waitlist:        234
Number of computed successors:   2119173
Max successors for one state:    2
Number of times merged:          81472
Number of times stopped:         156430
Number of times breaked:         296

Total time for CPA algorithm:       874.695s (Max:   122.033s)
  Time for choose from waitlist:      1.238s
  Time for precision adjustment:    775.160s
  Time for transfer relation:        78.906s
  Time for merge operator:            3.623s
  Time for stop operator:             4.869s
  Time for adding to reached set:     4.703s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   296
Avg. length of target path (in blocks):               11504 (count: 296, min: 15, max: 69, avg: 38.86)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  12.881s
  Counterexample analysis:                             8.514s (Max:     0.078s, Calls: 296)
    Refinement sat check:                              6.217s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.016s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.130s
  Precision update:                                    0.166s
  ARG update:                                          3.852s

Length of refined path (in blocks):                    8118 (count: 296, min: 11, max: 48, avg: 27.43)
Number of affected states:                             5811 (count: 296, min: 4, max: 36, avg: 19.63)
Length (states) of path with itp 'true':               2011 (count: 296, min: 6, max: 37, avg: 6.79)
Length (states) of path with itp non-trivial itp:      5811 (count: 296, min: 4, max: 36, avg: 19.63)
Length (states) of path with itp 'false':               296 (count: 296, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          13 (count: 296, min: 0, max: 1, avg: 0.04)
Equal non-trivial interpolants along paths:            5502 (count: 296, min: 3, max: 35, avg: 18.59)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                296
Number of successful refinements:     296
Number of failed refinements:         0
Max. size of reached set before ref.: 13243
Max. size of reached set after ref.:  6385
Avg. size of reached set before ref.: 6707.75
Avg. size of reached set after ref.:  181.71

Total time for CEGAR algorithm:     889.269s
Time for refinements:                14.516s
Average time for refinement:          0.049s
Max time for refinement:              0.129s

Code Coverage
-----------------------------
  Function coverage:      0.080
  Visited lines:          1799
  Total lines:            12193
  Line coverage:          0.148
  Visited conditions:     226
  Total conditions:       3038
  Condition coverage:     0.074

CPAchecker general statistics
-----------------------------
Number of program locations:     17055
Number of CFA edges:             19441
Number of relevant variables:    1982
Number of functions:             522
Number of loops:                 77
Size of reached set:             1119
  Number of reached locations:   641 (4%)
    Avg states per location:     1
    Max states per location:     16 (at node N14218)
  Number of reached functions:   42 (8%)
  Number of partitions:          1101
    Avg size of partitions:      1
    Max size of partitions:      14 (with key [N14107 (before line 25327), Function main called from node N14088, stack depth 1 [623e578b], stack [main]])
  Number of target states:       0
  Size of final wait list        82

Time for analysis setup:         10.997s
  Time for loading CPAs:          1.386s
  Time for loading parser:        0.689s
  Time for CFA construction:      8.801s
    Time for parsing file(s):     1.628s
    Time for AST to CFA:          3.445s
    Time for CFA sanity check:    0.923s
    Time for post-processing:     2.563s
      Time for var class.:        1.368s
Time for Analysis:              889.269s
CPU time for analysis:          889.120s
Total time for CPAchecker:      900.271s
Total CPU time for CPAchecker:  900.080s
Time for statistics:              0.145s

Time for Garbage Collector:      22.369s (in 941 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                545MB (   520 MiB) max;    312MB (   297 MiB) avg;    557MB (   531 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           788MB (   752 MiB) max;    436MB (   416 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8289MB (  7905 MiB) max;   8208MB (  7828 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
