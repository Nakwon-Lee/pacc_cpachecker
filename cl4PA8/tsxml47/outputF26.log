scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-mutex__drivers-net-wireless-ipw2x00-ipw2100_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_49e3rcaw/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7257: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 7392: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7397: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7407: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 7411: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 24667: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 25482: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 26041: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 26082: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 26083: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 26128: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 27108: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 27490: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27506: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27682: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7932: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7973: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7726-7727: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7805: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7845: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7765: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 23035: Function pointer *(crypt->ops->set_flags) with type unsigned long int (*)(unsigned long, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27048: Function pointer *arg0 with type void (*)(unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_remove_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_add_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_xmit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_update_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wireless_send_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_txb_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_libipw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7331: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7973: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7755: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 7765: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_uninterruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7719: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7835: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 7845: Ignoring function call through function pointer *(ops->sync_single_for_device): (*(ops->sync_single_for_device))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_for_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_seconds to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            564734 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  509422 (90%)
  Because of loop head:            46692 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8620 (2%)
  Times precision was empty:       64160 (11%)
  Times precision was {false}:     1055 (0%)
  Times result was cached:         487859 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      11660 (2%)
  Times result was 'false':        68346 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         337716
  BDD entailment checks:           108054
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       113
Number of predicates discovered:          34
Number of abstraction locations:          299
Max number of predicates per location:    24
Avg number of predicates per location:    8
Total predicates per abstraction:         5591811
Max number of predicates per abstraction: 24
Avg number of predicates per abstraction: 439.78
Number of irrelevant predicates:          1251775 (22%)
Number of preds handled by boolean abs:   66770 (1%)
  Total number of models for allsat:      16760
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.44

Time for post operator:                 29.891s
  Time for path formula creation:       28.615s
Time for strengthen operator:            2.719s
Time for prec operator:                347.133s
  Time for abstraction:                338.819s (Max:     5.332s, Count: 564734)
    Boolean abstraction:               109.138s
    Solving time:                       64.936s (Max:     1.405s)
    Model enumeration time:             43.178s
    Time for BDD construction:           0.540s (Max:     0.012s)
Time for merge operator:                 1.660s
Time for coverage check:                 0.244s
  Time for BDD entailment checks:        0.183s
Total time for SMT solver (w/o itp):   108.114s

Number of path formula cache hits:   3334001 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.345s

Total number of created targets for pointer analysis: 40585
   Number of created targets for uf: *unsigned_char is 2161
   Number of created targets for uf: *(struct_list_head)* is 9
   Number of created targets for uf: *unsigned_int is 71
   Number of created targets for uf: *char is 15


Number of BDD nodes:                               14413
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       31577 (count: 270432, min: 0, max: 719, avg: 0.12)
Time for BDD node cleanup:                             0.075s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.926s
  Time for transition matches:                         1.969s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.042s
Automaton transfers with branching:                0
Automaton transfer successors:                      2871026 (count: 2871026, min: 1, max: 1, avg: 1.00) [1 x 2871026]

CPA algorithm statistics
------------------------
Number of iterations:            2054292
Max size of waitlist:            196
Average size of waitlist:        97
Number of computed successors:   2346711
Max successors for one state:    2
Number of times merged:          114831
Number of times stopped:         151647
Number of times breaked:         1133

Total time for CPA algorithm:       448.653s (Max:     9.791s)
  Time for choose from waitlist:      1.047s
  Time for precision adjustment:    360.108s
  Time for transfer relation:        71.548s
  Time for merge operator:            3.552s
  Time for stop operator:             3.021s
  Time for adding to reached set:     4.039s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1133
Avg. length of target path (in blocks):              246843 (count: 1133, min: 29, max: 320, avg: 217.87)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 434.478s
  Counterexample analysis:                           427.383s (Max:     1.820s, Calls: 1133)
    Refinement sat check:                            338.758s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.138s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.651s
  Precision update:                                    1.834s
  ARG update:                                          3.391s

Length of refined path (in blocks):                  206737 (count: 1133, min: 11, max: 304, avg: 182.47)
Number of affected states:                            86665 (count: 1133, min: 1, max: 302, avg: 76.49)
Length (states) of path with itp 'true':             118939 (count: 1133, min: 1, max: 190, avg: 104.98)
Length (states) of path with itp non-trivial itp:     86665 (count: 1133, min: 1, max: 302, avg: 76.49)
Length (states) of path with itp 'false':               914 (count: 1133, min: 0, max: 1, avg: 0.81)
Different non-trivial interpolants along paths:         239 (count: 1133, min: 0, max: 5, avg: 0.21)
Equal non-trivial interpolants along paths:           85293 (count: 1133, min: 0, max: 300, avg: 75.28)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1133
Number of successful refinements:     1133
Number of failed refinements:         0
Max. size of reached set before ref.: 7145
Max. size of reached set after ref.:  5047
Avg. size of reached set before ref.: 3597.40
Avg. size of reached set after ref.:  1722.39

Total time for CEGAR algorithm:     889.303s
Time for refinements:               439.396s
Average time for refinement:          0.387s
Max time for refinement:              1.829s

Code Coverage
-----------------------------
  Function coverage:      0.199
  Visited lines:          2211
  Total lines:            12193
  Line coverage:          0.181
  Visited conditions:     272
  Total conditions:       3038
  Condition coverage:     0.090

CPAchecker general statistics
-----------------------------
Number of program locations:     17055
Number of CFA edges:             19441
Number of relevant variables:    1982
Number of functions:             522
Number of loops:                 77
Size of reached set:             2332
  Number of reached locations:   972 (6%)
    Avg states per location:     2
    Max states per location:     31 (at node N16023)
  Number of reached functions:   104 (20%)
  Number of partitions:          2314
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N14107 (before line 25327), Function main called from node N14088, stack depth 1 [623e578b], stack [main]])
  Number of target states:       0
  Size of final wait list        92

Time for analysis setup:         10.969s
  Time for loading CPAs:          1.333s
  Time for loading parser:        0.678s
  Time for CFA construction:      8.818s
    Time for parsing file(s):     1.634s
    Time for AST to CFA:          3.444s
    Time for CFA sanity check:    0.922s
    Time for post-processing:     2.544s
      Time for var class.:        1.332s
Time for Analysis:              889.303s
CPU time for analysis:          889.160s
Total time for CPAchecker:      900.279s
Total CPU time for CPAchecker:  900.110s
Time for statistics:              0.181s

Time for Garbage Collector:      15.694s (in 1856 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                183MB (   174 MiB) max;    112MB (   107 MiB) avg;    190MB (   181 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           202MB (   192 MiB) max;    164MB (   156 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8556MB (  8159 MiB) max;   8344MB (  7958 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
