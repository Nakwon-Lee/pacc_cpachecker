scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-mutex__drivers-net-wireless-ipw2x00-ipw2100_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0q1casx9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7257: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 7392: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7397: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7407: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 7411: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 24667: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 25482: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 26041: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 26082: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 26083: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 26128: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 27108: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 27490: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27506: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27682: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7932: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7973: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7726-7727: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7805: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7845: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7765: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 23035: Function pointer *(crypt->ops->set_flags) with type unsigned long int (*)(unsigned long, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27048: Function pointer *arg0 with type void (*)(unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_remove_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_add_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_xmit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_update_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wireless_send_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_txb_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_libipw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7331: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7973: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7755: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 7765: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_uninterruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_seconds to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7719: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7835: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 7845: Ignoring function call through function pointer *(ops->sync_single_for_device): (*(ops->sync_single_for_device))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_for_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            532331 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  480038 (90%)
  Because of loop head:            43916 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8377 (2%)
  Times precision was empty:       61672 (12%)
  Times precision was {false}:     926 (0%)
  Times result was cached:         459927 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9806 (2%)
  Times result was 'false':        64860 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         312076
  BDD entailment checks:           100166
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       113
Number of predicates discovered:          34
Number of abstraction locations:          296
Max number of predicates per location:    23
Avg number of predicates per location:    8
Total predicates per abstraction:         5197204
Max number of predicates per abstraction: 23
Avg number of predicates per abstraction: 484.27
Number of irrelevant predicates:          1137167 (22%)
Number of preds handled by boolean abs:   58292 (1%)
  Total number of models for allsat:      13217
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.35

Time for post operator:                 29.626s
  Time for path formula creation:       28.273s
Time for strengthen operator:            2.345s
Time for prec operator:                299.817s
  Time for abstraction:                290.825s (Max:     5.439s, Count: 532331)
    Boolean abstraction:                81.719s
    Solving time:                       50.643s (Max:     1.473s)
    Model enumeration time:             29.956s
    Time for BDD construction:           0.550s (Max:     0.027s)
Time for merge operator:                 1.753s
Time for coverage check:                 0.231s
  Time for BDD entailment checks:        0.172s
Total time for SMT solver (w/o itp):    80.599s

Number of path formula cache hits:   3119406 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.501s

Total number of created targets for pointer analysis: 22873
   Number of created targets for uf: *unsigned_char is 81
   Number of created targets for uf: *(struct_list_head)* is 25
   Number of created targets for uf: *unsigned_int is 71
   Number of created targets for uf: *char is 15


Number of BDD nodes:                               14045
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       27923 (count: 247316, min: 0, max: 650, avg: 0.11)
Time for BDD node cleanup:                             0.078s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.151s
  Time for transition matches:                         2.158s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.031s
Automaton transfers with branching:                0
Automaton transfer successors:                      2676675 (count: 2676675, min: 1, max: 1, avg: 1.00) [1 x 2676675]

CPA algorithm statistics
------------------------
Number of iterations:            1922918
Max size of waitlist:            195
Average size of waitlist:        97
Number of computed successors:   2197252
Max successors for one state:    2
Number of times merged:          105955
Number of times stopped:         139250
Number of times breaked:         1140

Total time for CPA algorithm:       403.485s (Max:     9.271s)
  Time for choose from waitlist:      0.978s
  Time for precision adjustment:    313.193s
  Time for transfer relation:        73.241s
  Time for merge operator:            3.563s
  Time for stop operator:             3.340s
  Time for adding to reached set:     3.799s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1140
Avg. length of target path (in blocks):              245295 (count: 1140, min: 29, max: 322, avg: 215.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 479.225s
  Counterexample analysis:                           471.387s (Max:     1.385s, Calls: 1140)
    Refinement sat check:                            377.200s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.159s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.716s
  Precision update:                                    2.210s
  ARG update:                                          3.557s

Length of refined path (in blocks):                  202876 (count: 1139, min: 11, max: 298, avg: 178.12)
Number of affected states:                            82175 (count: 1139, min: 1, max: 296, avg: 72.15)
Length (states) of path with itp 'true':             119562 (count: 1139, min: 1, max: 190, avg: 104.97)
Length (states) of path with itp non-trivial itp:     82175 (count: 1139, min: 1, max: 296, avg: 72.15)
Length (states) of path with itp 'false':               926 (count: 1139, min: 0, max: 1, avg: 0.81)
Different non-trivial interpolants along paths:         233 (count: 1139, min: 0, max: 5, avg: 0.20)
Equal non-trivial interpolants along paths:           80803 (count: 1139, min: 0, max: 294, avg: 70.94)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1140
Number of successful refinements:     1139
Number of failed refinements:         0
Max. size of reached set before ref.: 6266
Max. size of reached set after ref.:  5041
Avg. size of reached set before ref.: 3564.42
Avg. size of reached set after ref.:  1817.64

Total time for CEGAR algorithm:     889.489s
Time for refinements:               484.588s
Average time for refinement:          0.425s
Max time for refinement:              1.404s

Code Coverage
-----------------------------
  Function coverage:      0.220
  Visited lines:          2751
  Total lines:            12193
  Line coverage:          0.226
  Visited conditions:     402
  Total conditions:       3038
  Condition coverage:     0.132

CPAchecker general statistics
-----------------------------
Number of program locations:     17055
Number of CFA edges:             19441
Number of relevant variables:    1982
Number of functions:             522
Number of loops:                 77
Size of reached set:             4506
  Number of reached locations:   1311 (8%)
    Avg states per location:     3
    Max states per location:     71 (at node N16037)
  Number of reached functions:   115 (22%)
  Number of partitions:          4447
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N14107 (before line 25327), Function main called from node N14088, stack depth 1 [201a84e1], stack [main]])
  Number of target states:       1
  Size of final wait list        112

Time for analysis setup:         11.434s
  Time for loading CPAs:          1.462s
  Time for loading parser:        0.684s
  Time for CFA construction:      9.120s
    Time for parsing file(s):     1.641s
    Time for AST to CFA:          3.285s
    Time for CFA sanity check:    1.043s
    Time for post-processing:     2.963s
      Time for var class.:        1.435s
Time for Analysis:              889.489s
CPU time for analysis:          889.340s
Total time for CPAchecker:      900.927s
Total CPU time for CPAchecker:  900.750s
Time for statistics:              0.249s

Time for Garbage Collector:      15.639s (in 1716 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                172MB (   164 MiB) max;    111MB (   106 MiB) avg;    179MB (   170 MiB) peak
Used non-heap memory:             48MB (    46 MiB) max;     42MB (    40 MiB) avg;     48MB (    46 MiB) peak
Allocated heap memory:           193MB (   184 MiB) max;    162MB (   155 MiB) avg
Allocated non-heap memory:        51MB (    48 MiB) max;     50MB (    48 MiB) avg
Total process virtual memory:   8493MB (  8100 MiB) max;   8315MB (  7930 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
