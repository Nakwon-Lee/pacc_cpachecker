scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-mutex__drivers-net-wireless-ipw2x00-ipw2100_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ph78rcrq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7257: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 7392: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7397: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7407: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 7411: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 24667: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 25482: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 26041: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 26082: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 26083: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 26128: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 27108: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 27490: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27506: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27682: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7932: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7973: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7726-7727: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7805: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7845: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7765: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 23035: Function pointer *(crypt->ops->set_flags) with type unsigned long int (*)(unsigned long, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27048: Function pointer *arg0 with type void (*)(unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 25795: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 25795: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 25760: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 25760: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 25515: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 25515: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            19381 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  16078 (83%)
  Because of loop head:            3268 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         35 (0%)
  Times precision was empty:       11204 (58%)
  Times precision was {false}:     195 (1%)
  Times result was cached:         7765 (40%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      217 (1%)
  Times result was 'false':        120 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         10454
  BDD entailment checks:           3536
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       83
Number of predicates discovered:          4
Number of abstraction locations:          31
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         14559
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 35.34
Number of irrelevant predicates:          9967 (68%)
Number of preds handled by boolean abs:   368 (3%)
  Total number of models for allsat:      215
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                  5.071s
  Time for path formula creation:        4.883s
Time for strengthen operator:            0.222s
Time for prec operator:                  4.002s
  Time for abstraction:                  3.255s (Max:     0.019s, Count: 19381)
    Boolean abstraction:                 0.377s
    Solving time:                        0.319s (Max:     0.023s)
    Model enumeration time:              0.058s
    Time for BDD construction:           0.052s (Max:     0.012s)
Time for merge operator:                 0.171s
Time for coverage check:                 0.073s
  Time for BDD entailment checks:        0.071s
Total time for SMT solver (w/o itp):     0.378s

Number of path formula cache hits:   89117 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.740s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               213
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         410 (count: 17032, min: 0, max: 54, avg: 0.02)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.558s
  Time for transition matches:                         0.250s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       107283 (count: 107283, min: 1, max: 1, avg: 1.00) [1 x 107283]

CPA algorithm statistics
------------------------
Number of iterations:            83612
Max size of waitlist:            363
Average size of waitlist:        149
Number of computed successors:   97894
Max successors for one state:    2
Number of times merged:          3459
Number of times stopped:         4900
Number of times breaked:         35

Total time for CPA algorithm:        17.111s (Max:     1.843s)
  Time for choose from waitlist:      0.218s
  Time for precision adjustment:      5.705s
  Time for transfer relation:         8.615s
  Time for merge operator:            0.463s
  Time for stop operator:             0.447s
  Time for adding to reached set:     0.617s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   35
Avg. length of target path (in blocks):                 839 (count: 35, min: 15, max: 27, avg: 23.97)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.929s
  Counterexample analysis:                             1.262s (Max:     0.052s, Calls: 35)
    Refinement sat check:                              0.933s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.061s
  Precision update:                                    0.025s
  ARG update:                                          0.507s

Length of refined path (in blocks):                     552 (count: 35, min: 11, max: 23, avg: 15.77)
Number of affected states:                              307 (count: 35, min: 4, max: 16, avg: 8.77)
Length (states) of path with itp 'true':                210 (count: 35, min: 6, max: 6, avg: 6.00)
Length (states) of path with itp non-trivial itp:       307 (count: 35, min: 4, max: 16, avg: 8.77)
Length (states) of path with itp 'false':                35 (count: 35, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 35, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             272 (count: 35, min: 3, max: 15, avg: 7.77)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                35
Number of successful refinements:     35
Number of failed refinements:         0
Max. size of reached set before ref.: 3664
Max. size of reached set after ref.:  16
Avg. size of reached set before ref.: 2630.29
Avg. size of reached set after ref.:  16.00

Total time for CEGAR algorithm:      19.281s
Time for refinements:                 2.165s
Average time for refinement:          0.061s
Max time for refinement:              0.137s

Code Coverage
-----------------------------
  Function coverage:      0.121
  Visited lines:          1869
  Total lines:            12193
  Line coverage:          0.153
  Visited conditions:     230
  Total conditions:       3038
  Condition coverage:     0.076

CPAchecker general statistics
-----------------------------
Number of program locations:     17055
Number of CFA edges:             19441
Number of relevant variables:    1982
Number of functions:             522
Number of loops:                 77
Size of reached set:             1374
  Number of reached locations:   702 (4%)
    Avg states per location:     1
    Max states per location:     38 (at node N16023)
  Number of reached functions:   63 (12%)
  Number of partitions:          1369
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N14107 (before line 25327), Function main called from node N14088, stack depth 1 [623e578b], stack [main]])
  Number of target states:       0
  Size of final wait list        148

Time for analysis setup:         10.979s
  Time for loading CPAs:          1.372s
  Time for loading parser:        0.670s
  Time for CFA construction:      8.776s
    Time for parsing file(s):     1.681s
    Time for AST to CFA:          3.459s
    Time for CFA sanity check:    0.769s
    Time for post-processing:     2.545s
      Time for var class.:        1.558s
Time for Analysis:               19.281s
CPU time for analysis:           19.280s
Total time for CPAchecker:       30.264s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.150s

Time for Garbage Collector:       0.949s (in 56 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                108MB (   103 MiB) max;     64MB (    61 MiB) avg;    112MB (   107 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     33MB (    32 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8068MB (  7695 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
