scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-alloc-spinlock__fs-autofs4-autofs4_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_toibv760/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6314: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6319: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6324: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 6333: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7455: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 9281: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 9286: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 9296: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 9300: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9360: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 9365: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 9370: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 9379: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9425: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 9430: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 9440: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 9444: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9478: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 9483: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 9493: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 9497: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9563: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 9568: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 9578: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 9582: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10474: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 10479: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 10484: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 10493: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10526: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 10531: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 10541: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 10545: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10604: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 10609: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 10619: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 10623: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11021: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 11012: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13377: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14933: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14961: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15018: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 11177: Function pointer *(file->f_op->write) with type ssize_t (*)(struct file *, const char *, size_t , loff_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5412: Function pointer *arg0 with type int (*)(struct file *, struct dir_context *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5453: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5571: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5585: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5599: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_filesystem to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_filesystem to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5557: Ignoring call via function pointer ldv_file_operations_instance_release_0_2::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5557: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dcache_dir_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memdup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fget to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14340: Ignoring call via function pointer _autofs_dev_ioctl::fn for which no suitable target was found in line: err = (*fn)(fp, sbi, param); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14340: Ignoring function call through function pointer *fn: err = (*fn)(fp, sbi, param); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function fput to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_task_pid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_pid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kern_path_mountpoint to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function path_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __task_pid_nr_ns to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function task_tgid_nr_ns to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10309: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10378: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_acquire to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10344: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function debug_lockdep_rcu_enabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rcu_is_watching to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_rcu_suspicious to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strncpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function full_name_hash to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_interruptible_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function recalc_sigpending to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function d_lookup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dput to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11177: Ignoring function call through function pointer *(file->f_op->write): wr = (*(file->f_op->write))(file, data, (size_t )bytes, &(file->f_pos)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            12161 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10593 (87%)
  Because of loop head:            1558 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (0%)
  Times precision was empty:       10608 (87%)
  Times precision was {false}:     367 (3%)
  Times result was cached:         597 (5%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      589 (5%)
  Times result was 'false':        161 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         6101
  BDD entailment checks:           2429
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       74
Number of predicates discovered:          11
Number of abstraction locations:          44
Max number of predicates per location:    10
Avg number of predicates per location:    2
Total predicates per abstraction:         5186
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 5.42
Number of irrelevant predicates:          3407 (66%)
Number of preds handled by boolean abs:   1552 (30%)
  Total number of models for allsat:      750
  Max number of models for allsat:        9
  Avg number of models for allsat:        1.27

Time for post operator:                  8.020s
  Time for path formula creation:        7.869s
Time for strengthen operator:            0.187s
Time for prec operator:                  3.899s
  Time for abstraction:                  3.322s (Max:     0.016s, Count: 12161)
    Boolean abstraction:                 0.959s
    Solving time:                        0.683s (Max:     0.013s)
    Model enumeration time:              0.111s
    Time for BDD construction:           0.126s (Max:     0.012s)
Time for merge operator:                 0.308s
Time for coverage check:                 0.084s
  Time for BDD entailment checks:        0.079s
Total time for SMT solver (w/o itp):     0.794s

Number of path formula cache hits:   8048 (13%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.090s

Total number of created targets for pointer analysis: 2460
   Number of created targets for uf: *signed_int is 11
   Number of created targets for uf: *(struct_list_head)* is 11
   Number of created targets for uf: *(unsigned_char)* is 21
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_3,_Parameter_1_type:_[(struct_file)*],_Parameter_2_type:_[(struct_autofs_sb_info)*],_Parameter_3_type:_[(struct_autofs_dev_ioctl)*],_VarArgs:_false)* is 131
   Number of created targets for uf: *(struct_autofs_wait_queue)* is 11
   Number of created targets for uf: *unsigned_int is 21
   Number of created targets for uf: *unsigned_long_int is 11


Number of BDD nodes:                               929
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1710 (count: 18753, min: 0, max: 467, avg: 0.09)
Time for BDD node cleanup:                             0.026s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.461s
Automaton transfers with branching:                0
Automaton transfer successors:                        60842 (count: 60842, min: 1, max: 1, avg: 1.00) [1 x 60842]

CPA algorithm statistics
------------------------
Number of iterations:            40523
Max size of waitlist:            165
Average size of waitlist:        73
Number of computed successors:   45221
Max successors for one state:    2
Number of times merged:          1836
Number of times stopped:         3691
Number of times breaked:         10

Total time for CPA algorithm:        18.392s (Max:     3.356s)
  Time for choose from waitlist:      0.170s
  Time for precision adjustment:      4.904s
  Time for transfer relation:        11.140s
  Time for merge operator:            0.504s
  Time for stop operator:             0.298s
  Time for adding to reached set:     0.395s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                2103 (count: 10, min: 158, max: 271, avg: 210.30)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.746s
  Counterexample analysis:                             1.439s (Max:     0.220s, Calls: 10)
    Refinement sat check:                              0.658s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.025s
  Precision update:                                    0.021s
  ARG update:                                          0.220s

Length of refined path (in blocks):                     461 (count: 10, min: 9, max: 77, avg: 46.10)
Number of affected states:                              150 (count: 10, min: 4, max: 46, avg: 15.00)
Length (states) of path with itp 'true':                301 (count: 10, min: 4, max: 60, avg: 30.10)
Length (states) of path with itp non-trivial itp:       150 (count: 10, min: 4, max: 46, avg: 15.00)
Length (states) of path with itp 'false':                10 (count: 10, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 10, min: 0, max: 1, avg: 0.10)
Equal non-trivial interpolants along paths:             139 (count: 10, min: 3, max: 45, avg: 13.90)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 5234
Max. size of reached set after ref.:  762
Avg. size of reached set before ref.: 4232.70
Avg. size of reached set after ref.:  282.20

Total time for CEGAR algorithm:      20.355s
Time for refinements:                 1.953s
Average time for refinement:          0.195s
Max time for refinement:              0.277s

Code Coverage
-----------------------------
  Function coverage:      0.144
  Visited lines:          1451
  Total lines:            6220
  Line coverage:          0.233
  Visited conditions:     140
  Total conditions:       1418
  Condition coverage:     0.099

CPAchecker general statistics
-----------------------------
Number of program locations:     8619
Number of CFA edges:             9894
Number of relevant variables:    1380
Number of functions:             402
Number of loops:                 23
Size of reached set:             1864
  Number of reached locations:   499 (6%)
    Avg states per location:     3
    Max states per location:     43 (at node N7575)
  Number of reached functions:   58 (14%)
  Number of partitions:          1840
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N392 (before line 4723), Function main called from node N377, stack depth 1 [6e3dd5ce], stack [main]])
  Number of target states:       0
  Size of final wait list        114

Time for analysis setup:          9.907s
  Time for loading CPAs:          1.100s
  Time for loading parser:        0.733s
  Time for CFA construction:      7.940s
    Time for parsing file(s):     1.260s
    Time for AST to CFA:          3.124s
    Time for CFA sanity check:    0.992s
    Time for post-processing:     2.477s
      Time for var class.:        0.879s
Time for Analysis:               20.355s
CPU time for analysis:           20.350s
Total time for CPAchecker:       30.267s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.151s

Time for Garbage Collector:       0.797s (in 37 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 92MB (    88 MiB) max;     55MB (    52 MiB) avg;     97MB (    92 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     34MB (    33 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8068MB (  7694 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
