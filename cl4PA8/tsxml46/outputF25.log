scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-alloc-spinlock__fs-autofs4-autofs4_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ax5itgth/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6314: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6319: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6324: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 6333: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7455: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 9281: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 9286: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 9296: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 9300: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9360: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 9365: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 9370: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 9379: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9425: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 9430: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 9440: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 9444: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9478: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 9483: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 9493: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 9497: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9563: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 9568: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 9578: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 9582: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10474: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 10479: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 10484: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 10493: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10526: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 10531: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 10541: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 10545: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10604: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 10609: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 10619: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 10623: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11021: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 11012: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13377: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14933: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14961: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15018: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 11177: Function pointer *(file->f_op->write) with type ssize_t (*)(struct file *, const char *, size_t , loff_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5412: Function pointer *arg0 with type int (*)(struct file *, struct dir_context *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5453: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5571: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5585: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5599: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_statfs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dcache_dir_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dcache_readdir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dcache_dir_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dcache_dir_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5493: Ignoring call via function pointer ldv_file_operations_instance_callback_1_35::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2, arg3); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5493: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2, arg3); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5506: Ignoring call via function pointer ldv_file_operations_instance_callback_1_5::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2, arg3); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5506: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2, arg3); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5412: Ignoring call via function pointer ldv_file_operations_instance_callback_0_22::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5412: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5545: Ignoring call via function pointer ldv_file_operations_instance_probe_0_12::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5545: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5557: Ignoring call via function pointer ldv_file_operations_instance_release_0_2::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5557: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function clear_inode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5816: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5799: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5379: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___11 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5365: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(128UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5310: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5080: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___11 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5066: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(128UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5011: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14844: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___11 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14830: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(128UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14770: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memdup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function generic_readlink to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_from_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dput to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function clear_nlink to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9211: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function may_umount to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_pid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kill_litter_super to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __compiletime_assert_68 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_call_rcu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_filesystem to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fput to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5381: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5367: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5312: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5082: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5068: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5013: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14846: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14832: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14772: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function lockref_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function generic_read_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memchr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5453: Ignoring call via function pointer ldv_file_operations_instance_callback_0_32::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2, arg3, arg4); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5453: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2, arg3, arg4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function simple_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_filesystem to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5599: Ignoring call via function pointer ldv_file_operations_instance_write_2_4::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2, arg3, arg4); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5599: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2, arg3, arg4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function fget to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14340: Ignoring call via function pointer _autofs_dev_ioctl::fn for which no suitable target was found in line: err = (*fn)(fp, sbi, param); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14340: Ignoring function call through function pointer *fn: err = (*fn)(fp, sbi, param); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5585: Ignoring call via function pointer ldv_file_operations_instance_write_1_4::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2, arg3, arg4); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5585: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2, arg3, arg4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5571: Ignoring call via function pointer ldv_file_operations_instance_write_0_4::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2, arg3, arg4); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5571: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2, arg3, arg4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8876: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function sys_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function new_inode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function set_nlink to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kern_path_mountpoint to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function follow_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function path_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_task_pid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function d_instantiate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function d_rehash to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_unused_fd_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function d_drop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function path_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function have_submounts to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function follow_down_one to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __task_pid_nr_ns to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_unused_fd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dentry_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function inc_nlink to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function task_tgid_nr_ns to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function may_umount_tree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fd_install to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drop_nlink to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3900495 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3455950 (89%)
  Because of loop head:            444392 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         153 (0%)
  Times precision was empty:       3578051 (92%)
  Times precision was {false}:     2401 (0%)
  Times result was cached:         316771 (8%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3272 (0%)
  Times result was 'false':        33419 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         2150685
  BDD entailment checks:           1011107
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       74
Number of predicates discovered:          20
Number of abstraction locations:          111
Max number of predicates per location:    18
Avg number of predicates per location:    3
Total predicates per abstraction:         1127050
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 198.67
Number of irrelevant predicates:          862657 (77%)
Number of preds handled by boolean abs:   11838 (1%)
  Total number of models for allsat:      3869
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.18

Time for post operator:                204.191s
  Time for path formula creation:      193.978s
Time for strengthen operator:           21.110s
Time for prec operator:                105.511s
  Time for abstraction:                 59.722s (Max:     0.408s, Count: 3900495)
    Boolean abstraction:                 2.413s
    Solving time:                        2.213s (Max:     0.014s)
    Model enumeration time:              0.282s
    Time for BDD construction:           0.173s (Max:     0.012s)
Time for merge operator:                 7.606s
Time for coverage check:                 1.105s
  Time for BDD entailment checks:        0.800s
Total time for SMT solver (w/o itp):     2.495s

Number of path formula cache hits:   21657538 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   121.857s

Total number of created targets for pointer analysis: 92050
   Number of created targets for uf: *(struct_dentry)* is 5139
   Number of created targets for uf: *signed_int is 584
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_3,_Parameter_1_type:_[(struct_file)*],_Parameter_2_type:_[(struct_autofs_sb_info)*],_Parameter_3_type:_[(struct_autofs_dev_ioctl)*],_VarArgs:_false)* is 5006
   Number of created targets for uf: *unsigned_long_long_int is 768
   Number of created targets for uf: *unsigned_int is 3057
   Number of created targets for uf: *(struct_vfsmount)* is 5139


Number of BDD nodes:                               7423
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       11431 (count: 4626467, min: 0, max: 1655, avg: 0.00)
Time for BDD node cleanup:                             1.182s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 27.954s
  Time for transition matches:                        16.019s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                     20155307 (count: 20155307, min: 1, max: 1, avg: 1.00) [1 x 20155307]

CPA algorithm statistics
------------------------
Number of iterations:            13249928
Max size of waitlist:            1819
Average size of waitlist:        767
Number of computed successors:   14744032
Max successors for one state:    2
Number of times merged:          569789
Number of times stopped:         1359966
Number of times breaked:         153

Total time for CPA algorithm:       830.843s (Max:    13.517s)
  Time for choose from waitlist:      5.857s
  Time for precision adjustment:    240.911s
  Time for transfer relation:       473.225s
  Time for merge operator:           18.855s
  Time for stop operator:            24.685s
  Time for adding to reached set:    24.375s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   153
Avg. length of target path (in blocks):                8197 (count: 153, min: 42, max: 59, avg: 53.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  48.601s
  Counterexample analysis:                             2.641s (Max:     0.053s, Calls: 153)
    Refinement sat check:                              1.766s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.037s
  Precision update:                                    0.078s
  ARG update:                                         45.714s

Length of refined path (in blocks):                    2705 (count: 153, min: 9, max: 26, avg: 17.68)
Number of affected states:                             1632 (count: 153, min: 4, max: 21, avg: 10.67)
Length (states) of path with itp 'true':                920 (count: 153, min: 4, max: 18, avg: 6.01)
Length (states) of path with itp non-trivial itp:      1632 (count: 153, min: 4, max: 21, avg: 10.67)
Length (states) of path with itp 'false':               153 (count: 153, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          14 (count: 153, min: 0, max: 1, avg: 0.09)
Equal non-trivial interpolants along paths:            1465 (count: 153, min: 3, max: 20, avg: 9.58)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                153
Number of successful refinements:     153
Number of failed refinements:         0
Max. size of reached set before ref.: 172332
Max. size of reached set after ref.:  147677
Avg. size of reached set before ref.: 103953.90
Avg. size of reached set after ref.:  17222.52

Total time for CEGAR algorithm:     891.938s
Time for refinements:                58.530s
Average time for refinement:          0.382s
Max time for refinement:              5.741s

Code Coverage
-----------------------------
  Function coverage:      0.545
  Visited lines:          3908
  Total lines:            6220
  Line coverage:          0.628
  Visited conditions:     759
  Total conditions:       1418
  Condition coverage:     0.535

CPAchecker general statistics
-----------------------------
Number of program locations:     8619
Number of CFA edges:             9894
Number of relevant variables:    1380
Number of functions:             402
Number of loops:                 23
Size of reached set:             80745
  Number of reached locations:   2863 (33%)
    Avg states per location:     28
    Max states per location:     1050 (at node N7575)
  Number of reached functions:   219 (54%)
  Number of partitions:          80588
    Avg size of partitions:      1
    Max size of partitions:      15 (with key [N392 (before line 4723), Function main called from node N377, stack depth 1 [4ee8051c], stack [main]])
  Number of target states:       0
  Size of final wait list        1171

Time for analysis setup:          8.322s
  Time for loading CPAs:          1.160s
  Time for loading parser:        0.731s
  Time for CFA construction:      6.283s
    Time for parsing file(s):     1.234s
    Time for AST to CFA:          2.320s
    Time for CFA sanity check:    0.713s
    Time for post-processing:     1.813s
      Time for var class.:        0.852s
Time for Analysis:              891.938s
CPU time for analysis:          891.870s
Total time for CPAchecker:      900.264s
Total CPU time for CPAchecker:  900.170s
Time for statistics:              1.258s

Time for Garbage Collector:     131.536s (in 591 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2526MB (  2409 MiB) max;   1104MB (  1053 MiB) avg;   2581MB (  2461 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          2725MB (  2599 MiB) max;   1598MB (  1524 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8083MB (  7708 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
