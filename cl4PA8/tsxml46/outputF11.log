scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-alloc-spinlock__fs-autofs4-autofs4_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1gjhk4rn/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6314: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6319: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6324: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 6333: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7455: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 9281: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 9286: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 9296: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 9300: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9360: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 9365: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 9370: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 9379: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9425: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 9430: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 9440: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 9444: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9478: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 9483: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 9493: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 9497: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9563: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 9568: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 9578: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 9582: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10474: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 10479: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 10484: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 10493: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10526: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 10531: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 10541: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 10545: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10604: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 10609: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 10619: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 10623: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11021: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 11012: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13377: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14933: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14961: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15018: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 11177: Function pointer *(file->f_op->write) with type ssize_t (*)(struct file *, const char *, size_t , loff_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5412: Function pointer *arg0 with type int (*)(struct file *, struct dir_context *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5453: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5571: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5585: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5599: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_statfs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function clear_inode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dput to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function clear_nlink to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function d_drop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drop_nlink to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9211: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function new_inode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function set_nlink to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function d_instantiate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function d_rehash to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockref_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function inc_nlink to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5816: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5799: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __task_pid_nr_ns to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function task_tgid_nr_ns to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function may_umount_tree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function path_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function follow_down_one to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function path_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_set_class to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function d_invalidate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dcache_dir_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dcache_readdir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dcache_dir_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dcache_dir_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5379: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___11 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5365: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(128UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5310: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5493: Ignoring call via function pointer ldv_file_operations_instance_callback_1_35::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2, arg3); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5493: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2, arg3); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_from_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memdup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memchr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fget to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14340: Ignoring call via function pointer _autofs_dev_ioctl::fn for which no suitable target was found in line: err = (*fn)(fp, sbi, param); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14340: Ignoring function call through function pointer *fn: err = (*fn)(fp, sbi, param); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function fput to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function may_umount to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5506: Ignoring call via function pointer ldv_file_operations_instance_callback_1_5::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2, arg3); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5506: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2, arg3); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5080: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___11 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5066: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(128UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5011: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5412: Ignoring call via function pointer ldv_file_operations_instance_callback_0_22::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5412: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5545: Ignoring call via function pointer ldv_file_operations_instance_probe_0_12::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5545: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5557: Ignoring call via function pointer ldv_file_operations_instance_release_0_2::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5557: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14844: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___11 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14830: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(128UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14770: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 8876: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function misc_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_filesystem to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_filesystem to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5082: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5068: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function put_pid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kill_litter_super to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __compiletime_assert_68 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_call_rcu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5013: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function generic_read_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5585: Ignoring call via function pointer ldv_file_operations_instance_write_1_4::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2, arg3, arg4); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5585: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2, arg3, arg4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14846: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14832: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14772: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5453: Ignoring call via function pointer ldv_file_operations_instance_callback_0_32::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2, arg3, arg4); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5453: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2, arg3, arg4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5571: Ignoring call via function pointer ldv_file_operations_instance_write_0_4::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2, arg3, arg4); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5571: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2, arg3, arg4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3171131 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2668428 (84%)
  Because of loop head:            501800 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         903 (0%)
  Times precision was empty:       1262893 (40%)
  Times precision was {false}:     3806 (0%)
  Times result was cached:         1876529 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      27903 (1%)
  Times result was 'false':        239681 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         2080183
  BDD entailment checks:           1401431
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       74
Number of predicates discovered:          34
Number of abstraction locations:          293
Max number of predicates per location:    33
Avg number of predicates per location:    5
Total predicates per abstraction:         10811836
Max number of predicates per abstraction: 33
Avg number of predicates per abstraction: 340.97
Number of irrelevant predicates:          4132764 (38%)
Number of preds handled by boolean abs:   200794 (2%)
  Total number of models for allsat:      54623
  Max number of models for allsat:        140
  Avg number of models for allsat:        1.96

Time for post operator:                 85.916s
  Time for path formula creation:       79.532s
Time for strengthen operator:           10.400s
Time for prec operator:                440.950s
  Time for abstraction:                409.551s (Max:     2.439s, Count: 3171131)
    Boolean abstraction:                26.853s
    Solving time:                       18.371s (Max:     0.014s)
    Model enumeration time:              4.089s
    Time for BDD construction:           1.685s (Max:     0.015s)
Time for merge operator:                 3.833s
Time for coverage check:                 1.561s
  Time for BDD entailment checks:        1.217s
Total time for SMT solver (w/o itp):    22.460s

Number of path formula cache hits:   15216553 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    46.422s

Total number of created targets for pointer analysis: 25482
   Number of created targets for uf: *unsigned_short_int is 3
   Number of created targets for uf: *signed_int is 131
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_3,_Parameter_1_type:_[(struct_file)*],_Parameter_2_type:_[(struct_autofs_sb_info)*],_Parameter_3_type:_[(struct_autofs_dev_ioctl)*],_VarArgs:_false)* is 1691
   Number of created targets for uf: *unsigned_int is 261


Number of BDD nodes:                               239686
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      135434 (count: 2933303, min: 0, max: 2647, avg: 0.05)
Time for BDD node cleanup:                             0.472s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 17.248s
  Time for transition matches:                         9.265s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                     13381943 (count: 13381943, min: 1, max: 1, avg: 1.00) [1 x 13381943]

CPA algorithm statistics
------------------------
Number of iterations:            10053097
Max size of waitlist:            164
Average size of waitlist:        50
Number of computed successors:   11173070
Max successors for one state:    2
Number of times merged:          339376
Number of times stopped:         846522
Number of times breaked:         903

Total time for CPA algorithm:       829.529s (Max:     6.502s)
  Time for choose from waitlist:      3.971s
  Time for precision adjustment:    514.360s
  Time for transfer relation:       242.690s
  Time for merge operator:           10.765s
  Time for stop operator:            19.214s
  Time for adding to reached set:    14.972s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   903
Avg. length of target path (in blocks):               71801 (count: 903, min: 42, max: 126, avg: 79.51)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  44.684s
  Counterexample analysis:                            22.985s (Max:     0.082s, Calls: 903)
    Refinement sat check:                             15.055s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.030s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.202s
  Precision update:                                    0.769s
  ARG update:                                         20.113s

Length of refined path (in blocks):                   32803 (count: 903, min: 9, max: 60, avg: 36.33)
Number of affected states:                            17613 (count: 903, min: 4, max: 55, avg: 19.50)
Length (states) of path with itp 'true':              14287 (count: 903, min: 4, max: 39, avg: 15.82)
Length (states) of path with itp non-trivial itp:     17613 (count: 903, min: 4, max: 55, avg: 19.50)
Length (states) of path with itp 'false':               903 (count: 903, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          41 (count: 903, min: 0, max: 1, avg: 0.05)
Equal non-trivial interpolants along paths:           16669 (count: 903, min: 3, max: 54, avg: 18.46)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                903
Number of successful refinements:     903
Number of failed refinements:         0
Max. size of reached set before ref.: 76700
Max. size of reached set after ref.:  52808
Avg. size of reached set before ref.: 17705.58
Avg. size of reached set after ref.:  6573.26

Total time for CEGAR algorithm:     892.025s
Time for refinements:                57.856s
Average time for refinement:          0.064s
Max time for refinement:              1.461s

Code Coverage
-----------------------------
  Function coverage:      0.244
  Visited lines:          2271
  Total lines:            6220
  Line coverage:          0.365
  Visited conditions:     382
  Total conditions:       1418
  Condition coverage:     0.269

CPAchecker general statistics
-----------------------------
Number of program locations:     8619
Number of CFA edges:             9894
Number of relevant variables:    1380
Number of functions:             402
Number of loops:                 23
Size of reached set:             34385
  Number of reached locations:   1460 (17%)
    Avg states per location:     23
    Max states per location:     621 (at node N7574)
  Number of reached functions:   98 (24%)
  Number of partitions:          33066
    Avg size of partitions:      1
    Max size of partitions:      37 (with key [N425 (before line 4766), Function main called from node N377, stack depth 1 [6e3dd5ce], stack [main]])
  Number of target states:       0
  Size of final wait list        74

Time for analysis setup:          8.166s
  Time for loading CPAs:          1.138s
  Time for loading parser:        0.753s
  Time for CFA construction:      6.113s
    Time for parsing file(s):     1.378s
    Time for AST to CFA:          2.192s
    Time for CFA sanity check:    0.611s
    Time for post-processing:     1.725s
      Time for var class.:        0.780s
Time for Analysis:              892.025s
CPU time for analysis:          891.940s
Total time for CPAchecker:      900.196s
Total CPU time for CPAchecker:  900.080s
Time for statistics:              0.691s

Time for Garbage Collector:      83.634s (in 1352 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1006MB (   959 MiB) max;    465MB (   444 MiB) avg;   1082MB (  1032 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:          1199MB (  1143 MiB) max;    673MB (   642 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8420MB (  8030 MiB) max;   8195MB (  7816 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
