scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-fddi-skfp-skfp_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__hvo7knz/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8140: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9805: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10127: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10140: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10723: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10765: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10766: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10811: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10984: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11033: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11088: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11190: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 14269: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 14274: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 14279: Dead code detected: Goto: case_3 (CFACreationUtils.addEdgeToCFA, INFO)

line 14283: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6712: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6753: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6587-6588: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6626: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10416: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10427: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10450: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10462: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fddi_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_tail to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_purge to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6616: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6626: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6326: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6753: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10438: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10438: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10416: Ignoring call via function pointer ldv_pci_instance_resume_2_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10416: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10427: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10427: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10462: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10462: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10450: Ignoring call via function pointer ldv_pci_instance_suspend_2_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10450: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10693: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_fddidev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_register_netdev to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            969114 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  747347 (77%)
  Because of loop head:            112709 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         109058 (11%)
  Times precision was empty:       131669 (14%)
  Times precision was {false}:     1692 (0%)
  Times result was cached:         813848 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      21905 (2%)
  Times result was 'false':        181848 (19%)
Number of strengthen sat checks:   0
Number of coverage checks:         318186
  BDD entailment checks:           194546
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       58
Number of predicates discovered:          86
Number of abstraction locations:          355
Max number of predicates per location:    45
Avg number of predicates per location:    18
Total predicates per abstraction:         13268703
Max number of predicates per abstraction: 45
Avg number of predicates per abstraction: 562.30
Number of irrelevant predicates:          3227320 (24%)
Number of preds handled by boolean abs:   310427 (2%)
  Total number of models for allsat:      111383
  Max number of models for allsat:        272
  Avg number of models for allsat:        5.08

Time for post operator:                 21.523s
  Time for path formula creation:       20.192s
Time for strengthen operator:            3.000s
Time for prec operator:                576.502s
  Time for abstraction:                566.014s (Max:     0.440s, Count: 969114)
    Boolean abstraction:                74.918s
    Solving time:                       48.231s (Max:     0.406s)
    Model enumeration time:             18.326s
    Time for BDD construction:           4.914s (Max:     0.339s)
Time for merge operator:                 0.685s
Time for coverage check:                 0.413s
  Time for BDD entailment checks:        0.350s
Total time for SMT solver (w/o itp):    66.557s

Number of path formula cache hits:   4303553 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.951s

Total number of created targets for pointer analysis: 11386
   Number of created targets for uf: *unsigned_short_int is 256
   Number of created targets for uf: *unsigned_char is 477
   Number of created targets for uf: *char is 1377
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               85213
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      145328 (count: 515579, min: 0, max: 2203, avg: 0.28)
Time for BDD node cleanup:                             0.143s
Time for BDD garbage collection:                       0.087s (in 1 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.720s
  Time for transition matches:                         2.954s
  Time for transition assertions:                      0.021s
  Time for transition actions:                         0.112s
Automaton transfers with branching:                0
Automaton transfer successors:                      3616781 (count: 3616781, min: 1, max: 1, avg: 1.00) [1 x 3616781]

CPA algorithm statistics
------------------------
Number of iterations:            2872838
Max size of waitlist:            108
Average size of waitlist:        35
Number of computed successors:   3236572
Max successors for one state:    2
Number of times merged:          61820
Number of times stopped:         127318
Number of times breaked:         1760

Total time for CPA algorithm:       680.193s (Max:     3.191s)
  Time for choose from waitlist:      1.452s
  Time for precision adjustment:    594.173s
  Time for transfer relation:        66.901s
  Time for merge operator:            1.885s
  Time for stop operator:             3.818s
  Time for adding to reached set:     5.020s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1760
Avg. length of target path (in blocks):              337991 (count: 1760, min: 29, max: 355, avg: 192.04)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 202.806s
  Counterexample analysis:                           192.717s (Max:     0.304s, Calls: 1760)
    Refinement sat check:                            105.011s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.195s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.038s
  Precision update:                                    3.326s
  ARG update:                                          4.155s

Length of refined path (in blocks):                  284721 (count: 1759, min: 9, max: 353, avg: 161.87)
Number of affected states:                           150420 (count: 1759, min: 1, max: 352, avg: 85.51)
Length (states) of path with itp 'true':             132542 (count: 1759, min: 0, max: 284, avg: 75.35)
Length (states) of path with itp non-trivial itp:    150420 (count: 1759, min: 1, max: 352, avg: 85.51)
Length (states) of path with itp 'false':              1267 (count: 1759, min: 0, max: 1, avg: 0.72)
Different non-trivial interpolants along paths:         993 (count: 1759, min: 0, max: 5, avg: 0.56)
Equal non-trivial interpolants along paths:          147668 (count: 1759, min: 0, max: 350, avg: 83.95)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1760
Number of successful refinements:     1759
Number of failed refinements:         0
Max. size of reached set before ref.: 6229
Max. size of reached set after ref.:  4599
Avg. size of reached set before ref.: 2673.50
Avg. size of reached set after ref.:  1010.77

Total time for CEGAR algorithm:     889.780s
Time for refinements:               208.485s
Average time for refinement:          0.118s
Max time for refinement:              0.330s

Code Coverage
-----------------------------
  Function coverage:      0.170
  Visited lines:          2229
  Total lines:            11422
  Line coverage:          0.195
  Visited conditions:     250
  Total conditions:       3850
  Condition coverage:     0.065

CPAchecker general statistics
-----------------------------
Number of program locations:     16248
Number of CFA edges:             18881
Number of relevant variables:    2151
Number of functions:             523
Number of loops:                 116
Size of reached set:             6014
  Number of reached locations:   1023 (6%)
    Avg states per location:     5
    Max states per location:     252 (at node N16847)
  Number of reached functions:   89 (17%)
  Number of partitions:          5964
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N2454 (before line 10062), Function main called from node N2444, stack depth 1 [722d3ddb], stack [main]])
  Number of target states:       1
  Size of final wait list        90

Time for analysis setup:         10.458s
  Time for loading CPAs:          1.429s
  Time for loading parser:        0.724s
  Time for CFA construction:      8.131s
    Time for parsing file(s):     1.561s
    Time for AST to CFA:          3.275s
    Time for CFA sanity check:    0.779s
    Time for post-processing:     2.296s
      Time for var class.:        1.196s
Time for Analysis:              889.780s
CPU time for analysis:          889.670s
Total time for CPAchecker:      900.248s
Total CPU time for CPAchecker:  900.100s
Time for statistics:              0.255s

Time for Garbage Collector:      23.191s (in 3769 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                185MB (   176 MiB) max;    114MB (   108 MiB) avg;    194MB (   185 MiB) peak
Used non-heap memory:             48MB (    46 MiB) max;     46MB (    44 MiB) avg;     48MB (    46 MiB) peak
Allocated heap memory:           213MB (   203 MiB) max;    165MB (   158 MiB) avg
Allocated non-heap memory:        50MB (    48 MiB) max;     49MB (    47 MiB) avg
Total process virtual memory:   8561MB (  8164 MiB) max;   8302MB (  7917 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
