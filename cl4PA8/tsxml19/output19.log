scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-fddi-skfp-skfp_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_h_20mytt/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8140: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9805: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10127: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10140: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10723: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10765: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10766: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10811: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10984: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11033: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11088: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11190: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 14269: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 14274: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 14279: Dead code detected: Goto: case_3 (CFACreationUtils.addEdgeToCFA, INFO)

line 14283: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6712: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6753: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6587-6588: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6626: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10416: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10427: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10450: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10462: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10173: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10173: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            16994 (29% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12598 (74%)
  Because of loop head:            3382 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1014 (6%)
  Times precision was empty:       4781 (28%)
  Times precision was {false}:     215 (1%)
  Times result was cached:         10313 (61%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1685 (10%)
  Times result was 'false':        1841 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         4514
  BDD entailment checks:           4118
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       58
Number of predicates discovered:          20
Number of abstraction locations:          66
Max number of predicates per location:    18
Avg number of predicates per location:    11
Total predicates per abstraction:         125935
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 66.28
Number of irrelevant predicates:          46545 (37%)
Number of preds handled by boolean abs:   11711 (9%)
  Total number of models for allsat:      1714
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.02

Time for post operator:                  1.599s
  Time for path formula creation:        1.505s
Time for strengthen operator:            0.111s
Time for prec operator:                 11.560s
  Time for abstraction:                 11.134s (Max:     0.040s, Count: 16994)
    Boolean abstraction:                 2.429s
    Solving time:                        1.629s (Max:     0.025s)
    Model enumeration time:              0.174s
    Time for BDD construction:           0.222s (Max:     0.012s)
Time for merge operator:                 0.015s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):     1.803s

Number of path formula cache hits:   68343 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.153s

Total number of created targets for pointer analysis: 20
   Number of created targets for uf: *unsigned_char is 21


Number of BDD nodes:                               1620
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5190 (count: 20997, min: 0, max: 512, avg: 0.25)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.431s
Automaton transfers with branching:                0
Automaton transfer successors:                        57975 (count: 57975, min: 1, max: 1, avg: 1.00) [1 x 57975]

CPA algorithm statistics
------------------------
Number of iterations:            46127
Max size of waitlist:            20
Average size of waitlist:        11
Number of computed successors:   51195
Max successors for one state:    2
Number of times merged:          198
Number of times stopped:         2400
Number of times breaked:         75

Total time for CPA algorithm:        17.574s (Max:     1.094s)
  Time for choose from waitlist:      0.143s
  Time for precision adjustment:     12.375s
  Time for transfer relation:         3.853s
  Time for merge operator:            0.065s
  Time for stop operator:             0.280s
  Time for adding to reached set:     0.265s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   75
Avg. length of target path (in blocks):                3890 (count: 75, min: 13, max: 85, avg: 51.87)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.422s
  Counterexample analysis:                             1.967s (Max:     0.050s, Calls: 75)
    Refinement sat check:                              1.189s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.103s
  Precision update:                                    0.088s
  ARG update:                                          0.222s

Length of refined path (in blocks):                    3600 (count: 75, min: 9, max: 85, avg: 48.00)
Number of affected states:                             3341 (count: 75, min: 4, max: 84, avg: 44.55)
Length (states) of path with itp 'true':                184 (count: 75, min: 0, max: 8, avg: 2.45)
Length (states) of path with itp non-trivial itp:      3341 (count: 75, min: 4, max: 84, avg: 44.55)
Length (states) of path with itp 'false':                29 (count: 75, min: 0, max: 1, avg: 0.39)
Different non-trivial interpolants along paths:          46 (count: 75, min: 0, max: 1, avg: 0.61)
Equal non-trivial interpolants along paths:            3220 (count: 75, min: 3, max: 82, avg: 42.93)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                75
Number of successful refinements:     75
Number of failed refinements:         0
Max. size of reached set before ref.: 1179
Max. size of reached set after ref.:  178
Avg. size of reached set before ref.: 636.15
Avg. size of reached set after ref.:  22.13

Total time for CEGAR algorithm:      20.191s
Time for refinements:                 2.602s
Average time for refinement:          0.034s
Max time for refinement:              0.082s

Code Coverage
-----------------------------
  Function coverage:      0.050
  Visited lines:          1270
  Total lines:            11422
  Line coverage:          0.111
  Visited conditions:     28
  Total conditions:       3850
  Condition coverage:     0.007

CPAchecker general statistics
-----------------------------
Number of program locations:     16248
Number of CFA edges:             18881
Number of relevant variables:    2151
Number of functions:             523
Number of loops:                 116
Size of reached set:             904
  Number of reached locations:   195 (1%)
    Avg states per location:     4
    Max states per location:     24 (at node N16846)
  Number of reached functions:   26 (5%)
  Number of partitions:          891
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N2454 (before line 10062), Function main called from node N2444, stack depth 1 [134ec0f3], stack [main]])
  Number of target states:       0
  Size of final wait list        16

Time for analysis setup:         10.036s
  Time for loading CPAs:          1.231s
  Time for loading parser:        0.737s
  Time for CFA construction:      7.907s
    Time for parsing file(s):     1.601s
    Time for AST to CFA:          3.053s
    Time for CFA sanity check:    0.742s
    Time for post-processing:     2.258s
      Time for var class.:        1.242s
Time for Analysis:               20.191s
CPU time for analysis:           20.180s
Total time for CPAchecker:       30.236s
Total CPU time for CPAchecker:   30.190s
Time for statistics:              0.140s

Time for Garbage Collector:       0.706s (in 66 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 95MB (    90 MiB) max;     59MB (    56 MiB) avg;    104MB (   100 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    32 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8068MB (  7694 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
