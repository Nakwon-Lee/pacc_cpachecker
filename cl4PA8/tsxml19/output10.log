scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-fddi-skfp-skfp_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_v887i957/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8140: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9805: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10127: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10140: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10723: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10765: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10766: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10811: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10984: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11033: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11088: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11190: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 14269: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 14274: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 14279: Dead code detected: Goto: case_3 (CFACreationUtils.addEdgeToCFA, INFO)

line 14283: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6712: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6753: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6587-6588: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6626: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10416: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10427: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10450: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10462: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fddi_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10427: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10427: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10416: Ignoring call via function pointer ldv_pci_instance_resume_2_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10416: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10450: Ignoring call via function pointer ldv_pci_instance_suspend_2_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10450: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10462: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10462: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10438: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10438: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10173: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10173: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            22858 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  18492 (81%)
  Because of loop head:            4337 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29 (0%)
  Times precision was empty:       15264 (67%)
  Times precision was {false}:     374 (2%)
  Times result was cached:         6533 (29%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      687 (3%)
  Times result was 'false':        604 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         19329
  BDD entailment checks:           13359
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       58
Number of predicates discovered:          13
Number of abstraction locations:          18
Max number of predicates per location:    13
Avg number of predicates per location:    5
Total predicates per abstraction:         30287
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 28.55
Number of irrelevant predicates:          18957 (63%)
Number of preds handled by boolean abs:   3743 (12%)
  Total number of models for allsat:      2037
  Max number of models for allsat:        24
  Avg number of models for allsat:        2.97

Time for post operator:                  4.488s
  Time for path formula creation:        4.340s
Time for strengthen operator:            0.229s
Time for prec operator:                  5.988s
  Time for abstraction:                  5.272s (Max:     0.026s, Count: 22858)
    Boolean abstraction:                 1.401s
    Solving time:                        0.840s (Max:     0.013s)
    Model enumeration time:              0.284s
    Time for BDD construction:           0.224s (Max:     0.013s)
Time for merge operator:                 0.190s
Time for coverage check:                 0.098s
  Time for BDD entailment checks:        0.086s
Total time for SMT solver (w/o itp):     1.124s

Number of path formula cache hits:   87606 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.654s

Total number of created targets for pointer analysis: 20
   Number of created targets for uf: *unsigned_char is 21


Number of BDD nodes:                               4139
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3181 (count: 35466, min: 0, max: 592, avg: 0.09)
Time for BDD node cleanup:                             0.026s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.447s
Automaton transfers with branching:                0
Automaton transfer successors:                       107251 (count: 107251, min: 1, max: 1, avg: 1.00) [1 x 107251]

CPA algorithm statistics
------------------------
Number of iterations:            86671
Max size of waitlist:            418
Average size of waitlist:        125
Number of computed successors:   97203
Max successors for one state:    2
Number of times merged:          2985
Number of times stopped:         7409
Number of times breaked:         29

Total time for CPA algorithm:        18.121s (Max:     2.418s)
  Time for choose from waitlist:      0.172s
  Time for precision adjustment:      7.587s
  Time for transfer relation:         7.996s
  Time for merge operator:            0.343s
  Time for stop operator:             0.496s
  Time for adding to reached set:     0.459s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   29
Avg. length of target path (in blocks):                 696 (count: 29, min: 13, max: 37, avg: 24.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.163s
  Counterexample analysis:                             0.639s (Max:     0.046s, Calls: 29)
    Refinement sat check:                              0.439s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.063s
  Precision update:                                    0.055s
  ARG update:                                          0.375s

Length of refined path (in blocks):                     423 (count: 29, min: 9, max: 26, avg: 14.59)
Number of affected states:                              278 (count: 29, min: 4, max: 21, avg: 9.59)
Length (states) of path with itp 'true':                116 (count: 29, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp non-trivial itp:       278 (count: 29, min: 4, max: 21, avg: 9.59)
Length (states) of path with itp 'false':                29 (count: 29, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 29, min: 0, max: 1, avg: 0.07)
Equal non-trivial interpolants along paths:             247 (count: 29, min: 3, max: 20, avg: 8.52)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 9416
Max. size of reached set after ref.:  12
Avg. size of reached set before ref.: 2951.55
Avg. size of reached set after ref.:  12.00

Total time for CEGAR algorithm:      19.473s
Time for refinements:                 1.350s
Average time for refinement:          0.046s
Max time for refinement:              0.117s

Code Coverage
-----------------------------
  Function coverage:      0.078
  Visited lines:          1389
  Total lines:            11422
  Line coverage:          0.122
  Visited conditions:     96
  Total conditions:       3850
  Condition coverage:     0.025

CPAchecker general statistics
-----------------------------
Number of program locations:     16248
Number of CFA edges:             18881
Number of relevant variables:    2151
Number of functions:             523
Number of loops:                 116
Size of reached set:             3944
  Number of reached locations:   363 (2%)
    Avg states per location:     10
    Max states per location:     73 (at node N15659)
  Number of reached functions:   41 (8%)
  Number of partitions:          3912
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N2454 (before line 10062), Function main called from node N2444, stack depth 1 [25b87e1b], stack [main]])
  Number of target states:       0
  Size of final wait list        210

Time for analysis setup:         10.801s
  Time for loading CPAs:          1.377s
  Time for loading parser:        0.683s
  Time for CFA construction:      8.578s
    Time for parsing file(s):     1.607s
    Time for AST to CFA:          3.270s
    Time for CFA sanity check:    0.924s
    Time for post-processing:     2.690s
      Time for var class.:        1.253s
Time for Analysis:               19.473s
CPU time for analysis:           19.470s
Total time for CPAchecker:       30.279s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.182s

Time for Garbage Collector:       0.933s (in 58 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                113MB (   108 MiB) max;     73MB (    70 MiB) avg;    116MB (   110 MiB) peak
Used non-heap memory:             49MB (    46 MiB) max;     39MB (    37 MiB) avg;     49MB (    47 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        50MB (    48 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8070MB (  7696 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
