scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-fddi-skfp-skfp_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_m6t8ouhe/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8140: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9805: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10127: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10140: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10723: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10765: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10766: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10811: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10984: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11033: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11088: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11190: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 14269: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 14274: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 14279: Dead code detected: Goto: case_3 (CFACreationUtils.addEdgeToCFA, INFO)

line 14283: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6712: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6753: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6587-6588: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6626: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10416: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10427: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10450: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10462: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10450: Ignoring call via function pointer ldv_pci_instance_suspend_2_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10450: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10462: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10462: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10427: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10427: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10416: Ignoring call via function pointer ldv_pci_instance_resume_2_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10416: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10438: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10438: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function fddi_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10173: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10173: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10693: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_tail to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_fddidev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_dequeue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1371413 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1156588 (84%)
  Because of loop head:            200310 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14515 (1%)
  Times precision was empty:       454061 (33%)
  Times precision was {false}:     9778 (1%)
  Times result was cached:         842507 (61%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      65067 (5%)
  Times result was 'false':        192967 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         2522734
  BDD entailment checks:           2245376
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       58
Number of predicates discovered:          40
Number of abstraction locations:          103
Max number of predicates per location:    39
Avg number of predicates per location:    18
Total predicates per abstraction:         15962582
Max number of predicates per abstraction: 39
Avg number of predicates per abstraction: 213.28
Number of irrelevant predicates:          4666943 (29%)
Number of preds handled by boolean abs:   1088389 (7%)
  Total number of models for allsat:      388949
  Max number of models for allsat:        288
  Avg number of models for allsat:        5.98

Time for post operator:                 35.273s
  Time for path formula creation:       32.492s
Time for strengthen operator:            5.358s
Time for prec operator:                687.123s
  Time for abstraction:                672.917s (Max:     0.879s, Count: 1371413)
    Boolean abstraction:               164.015s
    Solving time:                       90.501s (Max:     0.019s)
    Model enumeration time:             44.817s
    Time for BDD construction:          17.194s (Max:     0.725s)
Time for merge operator:                 1.261s
Time for coverage check:                 3.067s
  Time for BDD entailment checks:        2.665s
Total time for SMT solver (w/o itp):   135.318s

Number of path formula cache hits:   7275701 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    13.789s

Total number of created targets for pointer analysis: 672
   Number of created targets for uf: *unsigned_short_int is 19
   Number of created targets for uf: *unsigned_char is 21
   Number of created targets for uf: *unsigned_int is 3


Number of BDD nodes:                               234230
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      318507 (count: 3242080, min: 0, max: 1829, avg: 0.10)
Time for BDD node cleanup:                             0.433s
Time for BDD garbage collection:                       0.140s (in 4 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.652s
  Time for transition matches:                         4.676s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.015s
Automaton transfers with branching:                0
Automaton transfer successors:                      6440144 (count: 6440144, min: 1, max: 1, avg: 1.00) [1 x 6440144]

CPA algorithm statistics
------------------------
Number of iterations:            4994656
Max size of waitlist:            460
Average size of waitlist:        168
Number of computed successors:   5616436
Max successors for one state:    2
Number of times merged:          138679
Number of times stopped:         328845
Number of times breaked:         474

Total time for CPA algorithm:       869.841s (Max:     6.437s)
  Time for choose from waitlist:      2.559s
  Time for precision adjustment:    720.419s
  Time for transfer relation:       110.654s
  Time for merge operator:            4.709s
  Time for stop operator:            11.146s
  Time for adding to reached set:     8.186s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   474
Avg. length of target path (in blocks):               22723 (count: 474, min: 13, max: 99, avg: 47.94)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  17.328s
  Counterexample analysis:                             9.389s (Max:     0.055s, Calls: 474)
    Refinement sat check:                              6.057s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.021s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.232s
  Precision update:                                    0.291s
  ARG update:                                          7.142s

Length of refined path (in blocks):                   18900 (count: 474, min: 9, max: 99, avg: 39.87)
Number of affected states:                            16620 (count: 474, min: 4, max: 98, avg: 35.06)
Length (states) of path with itp 'true':               1806 (count: 474, min: 0, max: 30, avg: 3.81)
Length (states) of path with itp non-trivial itp:     16620 (count: 474, min: 4, max: 98, avg: 35.06)
Length (states) of path with itp 'false':               294 (count: 474, min: 0, max: 1, avg: 0.62)
Different non-trivial interpolants along paths:         206 (count: 474, min: 0, max: 1, avg: 0.43)
Equal non-trivial interpolants along paths:           15940 (count: 474, min: 3, max: 96, avg: 33.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                474
Number of successful refinements:     474
Number of failed refinements:         0
Max. size of reached set before ref.: 27984
Max. size of reached set after ref.:  5502
Avg. size of reached set before ref.: 11170.55
Avg. size of reached set after ref.:  423.69

Total time for CEGAR algorithm:     890.048s
Time for refinements:                20.040s
Average time for refinement:          0.042s
Max time for refinement:              0.127s

Code Coverage
-----------------------------
  Function coverage:      0.031
  Visited lines:          1298
  Total lines:            11422
  Line coverage:          0.114
  Visited conditions:     82
  Total conditions:       3850
  Condition coverage:     0.021

CPAchecker general statistics
-----------------------------
Number of program locations:     16248
Number of CFA edges:             18881
Number of relevant variables:    2151
Number of functions:             523
Number of loops:                 116
Size of reached set:             609
  Number of reached locations:   253 (2%)
    Avg states per location:     2
    Max states per location:     5 (at node N15808)
  Number of reached functions:   16 (3%)
  Number of partitions:          603
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N2454 (before line 10062), Function main called from node N2444, stack depth 1 [722d3ddb], stack [main]])
  Number of target states:       0
  Size of final wait list        28

Time for analysis setup:         10.232s
  Time for loading CPAs:          1.154s
  Time for loading parser:        0.630s
  Time for CFA construction:      8.284s
    Time for parsing file(s):     1.432s
    Time for AST to CFA:          3.230s
    Time for CFA sanity check:    0.893s
    Time for post-processing:     2.627s
      Time for var class.:        1.211s
Time for Analysis:              890.048s
CPU time for analysis:          889.920s
Total time for CPAchecker:      900.284s
Total CPU time for CPAchecker:  900.120s
Time for statistics:              0.132s

Time for Garbage Collector:      44.191s (in 1987 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                480MB (   458 MiB) max;    265MB (   253 MiB) avg;    489MB (   466 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           491MB (   468 MiB) max;    384MB (   367 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  10579MB ( 10089 MiB) max;   9081MB (  8661 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
