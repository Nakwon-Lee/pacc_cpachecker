scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-fddi-skfp-skfp_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ywhfs6wv/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8140: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9805: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10127: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10140: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10723: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10765: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10766: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10811: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10984: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11033: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11088: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11190: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 14269: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 14274: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 14279: Dead code detected: Goto: case_3 (CFACreationUtils.addEdgeToCFA, INFO)

line 14283: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6712: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6753: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6587-6588: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6626: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10416: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10427: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10450: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10462: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10438: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10438: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10173: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10173: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10450: Ignoring call via function pointer ldv_pci_instance_suspend_2_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10450: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10462: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10462: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10427: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10427: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10416: Ignoring call via function pointer ldv_pci_instance_resume_2_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10416: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function fddi_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10693: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_fddidev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_tail to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_dequeue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1224612 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1034544 (84%)
  Because of loop head:            171055 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         19013 (2%)
  Times precision was empty:       420289 (34%)
  Times precision was {false}:     10199 (1%)
  Times result was cached:         725312 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      68812 (6%)
  Times result was 'false':        178623 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         1624242
  BDD entailment checks:           1420204
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       58
Number of predicates discovered:          40
Number of abstraction locations:          103
Max number of predicates per location:    39
Avg number of predicates per location:    19
Total predicates per abstraction:         14537058
Max number of predicates per abstraction: 39
Avg number of predicates per abstraction: 183.99
Number of irrelevant predicates:          4057982 (28%)
Number of preds handled by boolean abs:   1149432 (8%)
  Total number of models for allsat:      589938
  Max number of models for allsat:        288
  Avg number of models for allsat:        8.57

Time for post operator:                 33.950s
  Time for path formula creation:       31.435s
Time for strengthen operator:            4.592s
Time for prec operator:                709.781s
  Time for abstraction:                697.112s (Max:     0.958s, Count: 1224612)
    Boolean abstraction:               205.114s
    Solving time:                      101.428s (Max:     0.027s)
    Model enumeration time:             65.019s
    Time for BDD construction:          27.649s (Max:     0.045s)
Time for merge operator:                 1.051s
Time for coverage check:                 2.609s
  Time for BDD entailment checks:        2.323s
Total time for SMT solver (w/o itp):   166.447s

Number of path formula cache hits:   6412119 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    14.486s

Total number of created targets for pointer analysis: 994
   Number of created targets for uf: *unsigned_short_int is 19
   Number of created targets for uf: *unsigned_char is 21
   Number of created targets for uf: *unsigned_int is 3


Number of BDD nodes:                               88567
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      382787 (count: 2441300, min: 0, max: 1589, avg: 0.16)
Time for BDD node cleanup:                             0.369s
Time for BDD garbage collection:                       0.165s (in 10 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.797s
  Time for transition matches:                         4.255s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.011s
Automaton transfers with branching:                0
Automaton transfer successors:                      5717702 (count: 5717702, min: 1, max: 1, avg: 1.00) [1 x 5717702]

CPA algorithm statistics
------------------------
Number of iterations:            4369294
Max size of waitlist:            901
Average size of waitlist:        170
Number of computed successors:   4919756
Max successors for one state:    2
Number of times merged:          102019
Number of times stopped:         256465
Number of times breaked:         471

Total time for CPA algorithm:       868.468s (Max:     9.319s)
  Time for choose from waitlist:      1.937s
  Time for precision adjustment:    738.151s
  Time for transfer relation:        98.556s
  Time for merge operator:            3.693s
  Time for stop operator:             9.068s
  Time for adding to reached set:     6.938s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   471
Avg. length of target path (in blocks):               24263 (count: 471, min: 13, max: 99, avg: 51.51)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  18.302s
  Counterexample analysis:                            10.655s (Max:     0.067s, Calls: 471)
    Refinement sat check:                              6.661s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.017s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.223s
  Precision update:                                    0.349s
  ARG update:                                          6.808s

Length of refined path (in blocks):                   21278 (count: 471, min: 9, max: 99, avg: 45.18)
Number of affected states:                            19678 (count: 471, min: 4, max: 98, avg: 41.78)
Length (states) of path with itp 'true':               1129 (count: 471, min: 0, max: 30, avg: 2.40)
Length (states) of path with itp non-trivial itp:     19678 (count: 471, min: 4, max: 98, avg: 41.78)
Length (states) of path with itp 'false':               245 (count: 471, min: 0, max: 1, avg: 0.52)
Different non-trivial interpolants along paths:         251 (count: 471, min: 0, max: 1, avg: 0.53)
Equal non-trivial interpolants along paths:           18956 (count: 471, min: 3, max: 96, avg: 40.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                471
Number of successful refinements:     471
Number of failed refinements:         0
Max. size of reached set before ref.: 23350
Max. size of reached set after ref.:  5767
Avg. size of reached set before ref.: 9608.88
Avg. size of reached set after ref.:  101.37

Total time for CEGAR algorithm:     889.221s
Time for refinements:                20.697s
Average time for refinement:          0.043s
Max time for refinement:              0.122s

Code Coverage
-----------------------------
  Function coverage:      0.067
  Visited lines:          1472
  Total lines:            11422
  Line coverage:          0.129
  Visited conditions:     114
  Total conditions:       3850
  Condition coverage:     0.030

CPAchecker general statistics
-----------------------------
Number of program locations:     16248
Number of CFA edges:             18881
Number of relevant variables:    2151
Number of functions:             523
Number of loops:                 116
Size of reached set:             6634
  Number of reached locations:   434 (3%)
    Avg states per location:     15
    Max states per location:     99 (at node N2734)
  Number of reached functions:   35 (7%)
  Number of partitions:          6551
    Avg size of partitions:      1
    Max size of partitions:      18 (with key [N2454 (before line 10062), Function main called from node N2444, stack depth 1 [722d3ddb], stack [main]])
  Number of target states:       0
  Size of final wait list        113

Time for analysis setup:         11.021s
  Time for loading CPAs:          1.472s
  Time for loading parser:        0.736s
  Time for CFA construction:      8.642s
    Time for parsing file(s):     1.471s
    Time for AST to CFA:          3.210s
    Time for CFA sanity check:    0.984s
    Time for post-processing:     2.830s
      Time for var class.:        1.421s
Time for Analysis:              889.221s
CPU time for analysis:          889.080s
Total time for CPAchecker:      900.255s
Total CPU time for CPAchecker:  900.090s
Time for statistics:              0.257s

Time for Garbage Collector:      34.198s (in 1873 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                460MB (   438 MiB) max;    247MB (   236 MiB) avg;    464MB (   442 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           468MB (   446 MiB) max;    363MB (   346 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  10583MB ( 10092 MiB) max;   9173MB (  8748 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
