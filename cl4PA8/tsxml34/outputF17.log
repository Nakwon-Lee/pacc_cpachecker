scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-usb-dev__drivers-media-usb-dvb-usb-v2-dvb-usb-mxl111sf_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ouqqy0qm/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13005: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13146: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13341: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 17591: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17610: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13059: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13070: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9026: Function pointer *(fe->ops.tuner_ops.get_rf_strength) with type int (*)(struct dvb_frontend *, u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9029: Function pointer *(fe->ops.tuner_ops.get_rf_strength) with type int (*)(struct dvb_frontend *, u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9032: Function pointer *(fe->ops.tuner_ops.get_rf_strength) with type int (*)(struct dvb_frontend *, u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9035: Function pointer *(fe->ops.tuner_ops.get_rf_strength) with type int (*)(struct dvb_frontend *, u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8965: Function pointer *__a with type struct dvb_frontend *(*)(struct mxl111sf_state *, struct mxl111sf_demod_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9117: Function pointer *__a with type struct dvb_frontend *(*)(struct dvb_frontend *, struct mxl111sf_state *, struct mxl111sf_tuner_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8170-8171: Function pointer *__a with type struct dvb_frontend *(*)(const struct lg2160_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8772-8773: Function pointer *__a with type struct dvb_frontend *(*)(const struct lg2160_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8471-8472: Function pointer *__a with type struct dvb_frontend *(*)(const struct lg2160_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7870-7871: Function pointer *__a with type struct dvb_frontend *(*)(const struct lgdt3305_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_generic_rw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_generic_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9026: Ignoring function call through function pointer *(fe->ops.tuner_ops.get_rf_strength): (*(fe->ops.tuner_ops.get_rf_strength))(fe, &rxPwrA); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9029: Ignoring function call through function pointer *(fe->ops.tuner_ops.get_rf_strength): (*(fe->ops.tuner_ops.get_rf_strength))(fe, &rxPwr0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9032: Ignoring function call through function pointer *(fe->ops.tuner_ops.get_rf_strength): (*(fe->ops.tuner_ops.get_rf_strength))(fe, &rxPwr1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9035: Ignoring function call through function pointer *(fe->ops.tuner_ops.get_rf_strength): (*(fe->ops.tuner_ops.get_rf_strength))(fe, &rxPwr2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __symbol_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_module to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9117: Ignoring call via function pointer mxl111sf_attach_tuner::__a for which no suitable target was found in line: tmp___4 = (*__a)((adap->fe)[i], state, &mxl_tuner_config); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9117: Ignoring function call through function pointer *__a: tmp___4 = (*__a)((adap->fe)[i], state, &mxl_tuner_config); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __symbol_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_interruptible_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tveeprom_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tveeprom_hauppauge_analog to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1480493 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1429327 (97%)
  Because of loop head:            51041 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         125 (0%)
  Times precision was empty:       1421085 (96%)
  Times precision was {false}:     1469 (0%)
  Times result was cached:         57231 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      708 (0%)
  Times result was 'false':        6271 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         3369345
  BDD entailment checks:           315759
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       129
Number of predicates discovered:          16
Number of abstraction locations:          55
Max number of predicates per location:    15
Avg number of predicates per location:    4
Total predicates per abstraction:         269164
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 123.64
Number of irrelevant predicates:          227703 (85%)
Number of preds handled by boolean abs:   3252 (1%)
  Total number of models for allsat:      848
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.20

Time for post operator:                394.648s
  Time for path formula creation:      387.730s
Time for strengthen operator:           13.854s
Time for prec operator:                 39.914s
  Time for abstraction:                 16.447s (Max:     0.173s, Count: 1480493)
    Boolean abstraction:                 0.865s
    Solving time:                        1.069s (Max:     0.010s)
    Model enumeration time:              0.078s
    Time for BDD construction:           0.065s (Max:     0.005s)
Time for merge operator:                47.056s
Time for coverage check:                 0.720s
  Time for BDD entailment checks:        0.383s
Total time for SMT solver (w/o itp):     1.147s

Number of path formula cache hits:   13400726 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   322.668s

Total number of created targets for pointer analysis: 6849677
   Number of created targets for uf: *unsigned_char is 835197


Number of BDD nodes:                               1417
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3209 (count: 1749561, min: 0, max: 112, avg: 0.00)
Time for BDD node cleanup:                             0.307s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 23.405s
  Time for transition matches:                        12.967s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                     15527451 (count: 15527451, min: 1, max: 1, avg: 1.00) [1 x 15527451]

CPA algorithm statistics
------------------------
Number of iterations:            9594346
Max size of waitlist:            268
Average size of waitlist:        116
Number of computed successors:   11433112
Max successors for one state:    2
Number of times merged:          1526793
Number of times stopped:         1816513
Number of times breaked:         125

Total time for CPA algorithm:       862.120s (Max:    22.953s)
  Time for choose from waitlist:      4.251s
  Time for precision adjustment:    136.289s
  Time for transfer relation:       577.338s
  Time for merge operator:           73.513s
  Time for stop operator:            18.616s
  Time for adding to reached set:    20.090s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   125
Avg. length of target path (in blocks):                4976 (count: 125, min: 15, max: 50, avg: 39.81)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  23.661s
  Counterexample analysis:                             1.952s (Max:     0.048s, Calls: 125)
    Refinement sat check:                              1.327s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.040s
  Precision update:                                    0.043s
  ARG update:                                         21.559s

Length of refined path (in blocks):                    1805 (count: 125, min: 11, max: 16, avg: 14.44)
Number of affected states:                              890 (count: 125, min: 4, max: 9, avg: 7.12)
Length (states) of path with itp 'true':                790 (count: 125, min: 6, max: 10, avg: 6.32)
Length (states) of path with itp non-trivial itp:       890 (count: 125, min: 4, max: 9, avg: 7.12)
Length (states) of path with itp 'false':               125 (count: 125, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 125, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             765 (count: 125, min: 3, max: 8, avg: 6.12)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                125
Number of successful refinements:     125
Number of failed refinements:         0
Max. size of reached set before ref.: 148639
Max. size of reached set after ref.:  66499
Avg. size of reached set before ref.: 81150.91
Avg. size of reached set after ref.:  4772.50

Total time for CEGAR algorithm:     892.014s
Time for refinements:                29.381s
Average time for refinement:          0.235s
Max time for refinement:              0.722s

Code Coverage
-----------------------------
  Function coverage:      0.519
  Visited lines:          3131
  Total lines:            5956
  Line coverage:          0.526
  Visited conditions:     626
  Total conditions:       1868
  Condition coverage:     0.335

CPAchecker general statistics
-----------------------------
Number of program locations:     8211
Number of CFA edges:             9464
Number of relevant variables:    1115
Number of functions:             237
Number of loops:                 28
Size of reached set:             63028
  Number of reached locations:   1905 (23%)
    Avg states per location:     33
    Max states per location:     1490 (at node N7252)
  Number of reached functions:   123 (52%)
  Number of partitions:          63002
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N3010 (before line 11722), Function main called from node N2913, stack depth 1 [7c226095], stack [main]])
  Number of target states:       0
  Size of final wait list        119

Time for analysis setup:          8.214s
  Time for loading CPAs:          1.196s
  Time for loading parser:        0.688s
  Time for CFA construction:      6.150s
    Time for parsing file(s):     1.416s
    Time for AST to CFA:          2.120s
    Time for CFA sanity check:    0.583s
    Time for post-processing:     1.816s
      Time for var class.:        0.740s
Time for Analysis:              892.014s
CPU time for analysis:          891.970s
Total time for CPAchecker:      900.232s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              0.975s

Time for Garbage Collector:     108.416s (in 554 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2766MB (  2638 MiB) max;   1133MB (  1081 MiB) avg;   2819MB (  2689 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          3443MB (  3284 MiB) max;   1690MB (  1612 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8083MB (  7708 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
