scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-usb-dev__drivers-media-usb-dvb-usb-v2-dvb-usb-mxl111sf_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lyfn2tsg/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13005: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13146: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13341: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 17591: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17610: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13059: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13070: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9026: Function pointer *(fe->ops.tuner_ops.get_rf_strength) with type int (*)(struct dvb_frontend *, u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9029: Function pointer *(fe->ops.tuner_ops.get_rf_strength) with type int (*)(struct dvb_frontend *, u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9032: Function pointer *(fe->ops.tuner_ops.get_rf_strength) with type int (*)(struct dvb_frontend *, u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9035: Function pointer *(fe->ops.tuner_ops.get_rf_strength) with type int (*)(struct dvb_frontend *, u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8965: Function pointer *__a with type struct dvb_frontend *(*)(struct mxl111sf_state *, struct mxl111sf_demod_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9117: Function pointer *__a with type struct dvb_frontend *(*)(struct dvb_frontend *, struct mxl111sf_state *, struct mxl111sf_tuner_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8170-8171: Function pointer *__a with type struct dvb_frontend *(*)(const struct lg2160_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8772-8773: Function pointer *__a with type struct dvb_frontend *(*)(const struct lg2160_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8471-8472: Function pointer *__a with type struct dvb_frontend *(*)(const struct lg2160_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7870-7871: Function pointer *__a with type struct dvb_frontend *(*)(const struct lgdt3305_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tveeprom_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tveeprom_hauppauge_analog to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_interruptible_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __symbol_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_module to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9117: Ignoring call via function pointer mxl111sf_attach_tuner::__a for which no suitable target was found in line: tmp___4 = (*__a)((adap->fe)[i], state, &mxl_tuner_config); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9117: Ignoring function call through function pointer *__a: tmp___4 = (*__a)((adap->fe)[i], state, &mxl_tuner_config); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __symbol_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9026: Ignoring function call through function pointer *(fe->ops.tuner_ops.get_rf_strength): (*(fe->ops.tuner_ops.get_rf_strength))(fe, &rxPwrA); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            14223 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12462 (88%)
  Because of loop head:            1602 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         159 (1%)
  Times precision was empty:       3425 (24%)
  Times precision was {false}:     424 (3%)
  Times result was cached:         9291 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1083 (8%)
  Times result was 'false':        3197 (22%)
Number of strengthen sat checks:   0
Number of coverage checks:         9208
  BDD entailment checks:           2812
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       129
Number of predicates discovered:          23
Number of abstraction locations:          126
Max number of predicates per location:    21
Avg number of predicates per location:    4
Total predicates per abstraction:         45637
Max number of predicates per abstraction: 21
Avg number of predicates per abstraction: 30.28
Number of irrelevant predicates:          16214 (36%)
Number of preds handled by boolean abs:   6761 (15%)
  Total number of models for allsat:      1083
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.00

Time for post operator:                  4.367s
  Time for path formula creation:        4.216s
Time for strengthen operator:            0.175s
Time for prec operator:                  7.848s
  Time for abstraction:                  7.269s (Max:     0.035s, Count: 14223)
    Boolean abstraction:                 1.233s
    Solving time:                        0.900s (Max:     0.020s)
    Model enumeration time:              0.112s
    Time for BDD construction:           0.149s (Max:     0.012s)
Time for merge operator:                 0.188s
Time for coverage check:                 0.036s
  Time for BDD entailment checks:        0.032s
Total time for SMT solver (w/o itp):     1.012s

Number of path formula cache hits:   57497 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.477s

Total number of created targets for pointer analysis: 15
   Number of created targets for uf: *unsigned_char is 2


Number of BDD nodes:                               2175
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5721 (count: 16617, min: 0, max: 1088, avg: 0.34)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.446s
Automaton transfers with branching:                0
Automaton transfer successors:                        75040 (count: 75040, min: 1, max: 1, avg: 1.00) [1 x 75040]

CPA algorithm statistics
------------------------
Number of iterations:            57346
Max size of waitlist:            95
Average size of waitlist:        42
Number of computed successors:   67475
Max successors for one state:    2
Number of times merged:          3198
Number of times stopped:         4112
Number of times breaked:         69

Total time for CPA algorithm:        18.109s (Max:     1.093s)
  Time for choose from waitlist:      0.195s
  Time for precision adjustment:      8.955s
  Time for transfer relation:         6.971s
  Time for merge operator:            0.454s
  Time for stop operator:             0.300s
  Time for adding to reached set:     0.281s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   69
Avg. length of target path (in blocks):                6582 (count: 69, min: 29, max: 130, avg: 95.39)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.017s
  Counterexample analysis:                             3.382s (Max:     0.083s, Calls: 69)
    Refinement sat check:                              1.899s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.161s
  Precision update:                                    0.076s
  ARG update:                                          0.279s

Length of refined path (in blocks):                    4634 (count: 69, min: 11, max: 94, avg: 67.16)
Number of affected states:                             2095 (count: 69, min: 4, max: 92, avg: 30.36)
Length (states) of path with itp 'true':               2470 (count: 69, min: 1, max: 57, avg: 35.80)
Length (states) of path with itp non-trivial itp:      2095 (count: 69, min: 4, max: 92, avg: 30.36)
Length (states) of path with itp 'false':                58 (count: 69, min: 0, max: 1, avg: 0.84)
Different non-trivial interpolants along paths:          54 (count: 69, min: 0, max: 6, avg: 0.78)
Equal non-trivial interpolants along paths:            1972 (count: 69, min: 3, max: 90, avg: 28.58)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                69
Number of successful refinements:     69
Number of failed refinements:         0
Max. size of reached set before ref.: 1906
Max. size of reached set after ref.:  542
Avg. size of reached set before ref.: 1136.14
Avg. size of reached set after ref.:  278.78

Total time for CEGAR algorithm:      22.429s
Time for refinements:                 4.286s
Average time for refinement:          0.062s
Max time for refinement:              0.100s

Code Coverage
-----------------------------
  Function coverage:      0.169
  Visited lines:          1736
  Total lines:            5956
  Line coverage:          0.291
  Visited conditions:     114
  Total conditions:       1868
  Condition coverage:     0.061

CPAchecker general statistics
-----------------------------
Number of program locations:     8211
Number of CFA edges:             9464
Number of relevant variables:    1115
Number of functions:             237
Number of loops:                 28
Size of reached set:             1008
  Number of reached locations:   399 (5%)
    Avg states per location:     2
    Max states per location:     16 (at node N7239)
  Number of reached functions:   40 (17%)
  Number of partitions:          999
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N2929 (before line 11619), Function main called from node N2913, stack depth 1 [7c226095], stack [main]])
  Number of target states:       0
  Size of final wait list        52

Time for analysis setup:          7.766s
  Time for loading CPAs:          1.202s
  Time for loading parser:        0.781s
  Time for CFA construction:      5.614s
    Time for parsing file(s):     1.292s
    Time for AST to CFA:          2.042s
    Time for CFA sanity check:    0.558s
    Time for post-processing:     1.510s
      Time for var class.:        0.721s
Time for Analysis:               22.430s
CPU time for analysis:           22.420s
Total time for CPAchecker:       30.200s
Total CPU time for CPAchecker:   30.180s
Time for statistics:              0.137s

Time for Garbage Collector:       0.654s (in 48 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 79MB (    75 MiB) max;     53MB (    51 MiB) avg;     81MB (    78 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8069MB (  7695 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
