scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-wan-lmc-lmc_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_c49xnxyx/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5405: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 7618: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10653: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11226: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11239: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11822: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11864: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11865: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11910: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13150: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13369: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13424: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13440: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13518: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 13565: Function pointer *(hdlc->proto->type_trans) with type __be16 (*)(struct sk_buff *, struct net_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11515: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11526: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11549: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11561: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13092: Ignoring call via function pointer ldv_timer_instance_callback_7_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13092: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11272: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11272: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function hdlc_start_xmit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hdlc_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_trans_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9395: Ignoring function call through function pointer *(sc->lmc_media->set_link_status): (*(sc->lmc_media->set_link_status))(sc, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function hdlc_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10339: Ignoring function call through function pointer *(sc->lmc_media->init): (*(sc->lmc_media->init))(sc); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3483906 (29% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2940526 (84%)
  Because of loop head:            543002 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         378 (0%)
  Times precision was empty:       1387209 (40%)
  Times precision was {false}:     4311 (0%)
  Times result was cached:         2085264 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7122 (0%)
  Times result was 'false':        35030 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         837355
  BDD entailment checks:           512603
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       77
Number of predicates discovered:          17
Number of abstraction locations:          378
Max number of predicates per location:    14
Avg number of predicates per location:    2
Total predicates per abstraction:         3767919
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 329.57
Number of irrelevant predicates:          1926848 (51%)
Number of preds handled by boolean abs:   31815 (1%)
  Total number of models for allsat:      12111
  Max number of models for allsat:        27
  Avg number of models for allsat:        1.70

Time for post operator:                223.599s
  Time for path formula creation:      218.191s
Time for strengthen operator:           12.071s
Time for prec operator:                251.372s
  Time for abstraction:                183.978s (Max:     0.285s, Count: 3483906)
    Boolean abstraction:                 5.255s
    Solving time:                        4.455s (Max:     0.014s)
    Model enumeration time:              0.738s
    Time for BDD construction:           0.298s (Max:     0.008s)
Time for merge operator:                 3.719s
Time for coverage check:                 0.610s
  Time for BDD entailment checks:        0.445s
Total time for SMT solver (w/o itp):     5.193s

Number of path formula cache hits:   9578619 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   124.059s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               6493
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       17401 (count: 1970682, min: 0, max: 1540, avg: 0.01)
Time for BDD node cleanup:                             0.324s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 19.548s
  Time for transition matches:                        11.421s
  Time for transition assertions:                      0.017s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                     11866954 (count: 11866954, min: 1, max: 1, avg: 1.00) [1 x 11866954]

CPA algorithm statistics
------------------------
Number of iterations:            9034757
Max size of waitlist:            176
Average size of waitlist:        86
Number of computed successors:   9589091
Max successors for one state:    2
Number of times merged:          162376
Number of times stopped:         497035
Number of times breaked:         378

Total time for CPA algorithm:       850.328s (Max:     8.539s)
  Time for choose from waitlist:      4.965s
  Time for precision adjustment:    320.517s
  Time for transfer relation:       448.074s
  Time for merge operator:            8.783s
  Time for stop operator:            18.627s
  Time for adding to reached set:    19.075s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   378
Avg. length of target path (in blocks):               65874 (count: 378, min: 107, max: 832, avg: 174.27)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  34.431s
  Counterexample analysis:                            17.132s (Max:     0.443s, Calls: 378)
    Refinement sat check:                              6.790s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.054s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.177s
  Precision update:                                    0.232s
  ARG update:                                         16.492s

Length of refined path (in blocks):                   18429 (count: 378, min: 9, max: 723, avg: 48.75)
Number of affected states:                            10918 (count: 378, min: 4, max: 718, avg: 28.88)
Length (states) of path with itp 'true':               7133 (count: 378, min: 4, max: 83, avg: 18.87)
Length (states) of path with itp non-trivial itp:     10918 (count: 378, min: 4, max: 718, avg: 28.88)
Length (states) of path with itp 'false':               378 (count: 378, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 378, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           10540 (count: 378, min: 3, max: 717, avg: 27.88)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                378
Number of successful refinements:     378
Number of failed refinements:         0
Max. size of reached set before ref.: 71453
Max. size of reached set after ref.:  29549
Avg. size of reached set before ref.: 27429.15
Avg. size of reached set after ref.:  3584.84

Total time for CEGAR algorithm:     892.997s
Time for refinements:                41.711s
Average time for refinement:          0.110s
Max time for refinement:              1.161s

Code Coverage
-----------------------------
  Function coverage:      0.278
  Visited lines:          2309
  Total lines:            5273
  Line coverage:          0.438
  Visited conditions:     342
  Total conditions:       2158
  Condition coverage:     0.158

CPAchecker general statistics
-----------------------------
Number of program locations:     8936
Number of CFA edges:             11079
Number of relevant variables:    843
Number of functions:             406
Number of loops:                 35
Size of reached set:             43879
  Number of reached locations:   1454 (16%)
    Avg states per location:     30
    Max states per location:     2284 (at node N27)
  Number of reached functions:   113 (28%)
  Number of partitions:          43684
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N3542 (before line 11101), Function main called from node N3526, stack depth 1 [2d4a3e13], stack [main]])
  Number of target states:       0
  Size of final wait list        106

Time for analysis setup:          7.327s
  Time for loading CPAs:          1.067s
  Time for loading parser:        0.644s
  Time for CFA construction:      5.489s
    Time for parsing file(s):     1.114s
    Time for AST to CFA:          1.983s
    Time for CFA sanity check:    0.550s
    Time for post-processing:     1.693s
      Time for var class.:        0.759s
Time for Analysis:              892.998s
CPU time for analysis:          892.940s
Total time for CPAchecker:      900.328s
Total CPU time for CPAchecker:  900.250s
Time for statistics:              0.771s

Time for Garbage Collector:      66.992s (in 656 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1914MB (  1825 MiB) max;    889MB (   848 MiB) avg;   2138MB (  2039 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          2643MB (  2521 MiB) max;   1310MB (  1249 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8152MB (  7774 MiB) max;   8125MB (  7749 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
