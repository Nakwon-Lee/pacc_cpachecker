scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-wan-lmc-lmc_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_r42ybq4t/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5405: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 7618: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10653: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11226: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11239: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11822: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11864: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11865: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11910: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13150: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13369: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13424: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13440: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13518: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 13565: Function pointer *(hdlc->proto->type_trans) with type __be16 (*)(struct sk_buff *, struct net_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11515: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11526: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11549: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11561: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13092: Ignoring call via function pointer ldv_timer_instance_callback_7_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13092: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8975: Ignoring function call through function pointer *(sc->lmc_media->get_link_status): link_status = (*(sc->lmc_media->get_link_status))(sc); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8996: Ignoring function call through function pointer *(sc->lmc_media->watchdog): (*(sc->lmc_media->watchdog))(sc); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10339: Ignoring function call through function pointer *(sc->lmc_media->init): (*(sc->lmc_media->init))(sc); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5539: Ignoring function call through function pointer *(sc->lmc_media->set_link_status): (*(sc->lmc_media->set_link_status))(sc, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5540: Ignoring function call through function pointer *(sc->lmc_media->set_clock_source): (*(sc->lmc_media->set_clock_source))(sc, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5541: Ignoring function call through function pointer *(sc->lmc_media->set_crc_length): (*(sc->lmc_media->set_crc_length))(sc, 16); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6477: Ignoring function call through function pointer *(sc->lmc_media->set_link_status): (*(sc->lmc_media->set_link_status))(sc, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6478: Ignoring function call through function pointer *(sc->lmc_media->set_circuit_type): (*(sc->lmc_media->set_circuit_type))(sc, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6479: Ignoring function call through function pointer *(sc->lmc_media->set_crc_length): (*(sc->lmc_media->set_crc_length))(sc, 16); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            30376 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  25831 (85%)
  Because of loop head:            4545 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         0 (0%)
  Times precision was empty:       30376 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         6742
  BDD entailment checks:           3260
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       77
Number of predicates discovered:          0

Time for post operator:                 10.550s
  Time for path formula creation:       10.369s
Time for strengthen operator:            0.285s
Time for prec operator:                  1.488s
  Time for abstraction:                  0.350s (Max:     0.012s, Count: 30376)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.367s
Time for coverage check:                 0.060s
  Time for BDD entailment checks:        0.057s
Total time for SMT solver (w/o itp):     0.000s

Number of path formula cache hits:   35356 (29%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.878s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 33637, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.025s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.456s
Automaton transfers with branching:                0
Automaton transfer successors:                       108952 (count: 108952, min: 1, max: 1, avg: 1.00) [1 x 108952]

CPA algorithm statistics
------------------------
Number of iterations:            79281
Max size of waitlist:            84
Average size of waitlist:        60
Number of computed successors:   84348
Max successors for one state:    2
Number of times merged:          1741
Number of times stopped:         5001
Number of times breaked:         0

Total time for CPA algorithm:        22.238s (Max:    22.238s)
  Time for choose from waitlist:      0.226s
  Time for precision adjustment:      3.288s
  Time for transfer relation:        15.831s
  Time for merge operator:            0.618s
  Time for stop operator:             0.506s
  Time for adding to reached set:     0.565s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   0

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.167
  Visited lines:          1797
  Total lines:            5273
  Line coverage:          0.341
  Visited conditions:     368
  Total conditions:       2158
  Condition coverage:     0.171

CPAchecker general statistics
-----------------------------
Number of program locations:     8936
Number of CFA edges:             11079
Number of relevant variables:    843
Number of functions:             406
Number of loops:                 35
Size of reached set:             79346
  Number of reached locations:   1088 (12%)
    Avg states per location:     72
    Max states per location:     4883 (at node N26)
  Number of reached functions:   68 (17%)
  Number of partitions:          79346
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        66

Time for analysis setup:          8.052s
  Time for loading CPAs:          1.141s
  Time for loading parser:        0.709s
  Time for CFA construction:      6.040s
    Time for parsing file(s):     1.223s
    Time for AST to CFA:          2.055s
    Time for CFA sanity check:    0.671s
    Time for post-processing:     1.896s
      Time for var class.:        0.829s
Time for Analysis:               22.238s
CPU time for analysis:           22.240s
Total time for CPAchecker:       30.294s
Total CPU time for CPAchecker:   30.280s
Time for statistics:              1.389s

Time for Garbage Collector:       1.689s (in 48 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                175MB (   167 MiB) max;     78MB (    74 MiB) avg;    186MB (   177 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    32 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           208MB (   199 MiB) max;    144MB (   137 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8070MB (  7696 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
