scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-wan-lmc-lmc_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_p4to_9ad/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5405: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 7618: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10653: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11226: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11239: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11822: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11864: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11865: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11910: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13150: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13369: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13424: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13440: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13518: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 13565: Function pointer *(hdlc->proto->type_trans) with type __be16 (*)(struct sk_buff *, struct net_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11515: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11526: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11549: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11561: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13092: Ignoring call via function pointer ldv_timer_instance_callback_7_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13092: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11272: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11272: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function hdlc_start_xmit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hdlc_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_trans_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9395: Ignoring function call through function pointer *(sc->lmc_media->set_link_status): (*(sc->lmc_media->set_link_status))(sc, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function hdlc_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10339: Ignoring function call through function pointer *(sc->lmc_media->init): (*(sc->lmc_media->init))(sc); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3366207 (29% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2841169 (84%)
  Because of loop head:            524666 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         372 (0%)
  Times precision was empty:       1382185 (41%)
  Times precision was {false}:     4337 (0%)
  Times result was cached:         1972491 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7194 (0%)
  Times result was 'false':        34149 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         812480
  BDD entailment checks:           499358
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       77
Number of predicates discovered:          17
Number of abstraction locations:          371
Max number of predicates per location:    14
Avg number of predicates per location:    2
Total predicates per abstraction:         4118482
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 357.17
Number of irrelevant predicates:          2363400 (57%)
Number of preds handled by boolean abs:   31965 (1%)
  Total number of models for allsat:      12183
  Max number of models for allsat:        27
  Avg number of models for allsat:        1.69

Time for post operator:                241.466s
  Time for path formula creation:      235.266s
Time for strengthen operator:           11.079s
Time for prec operator:                264.646s
  Time for abstraction:                196.687s (Max:     4.387s, Count: 3366207)
    Boolean abstraction:                 5.470s
    Solving time:                        4.524s (Max:     0.013s)
    Model enumeration time:              0.765s
    Time for BDD construction:           0.315s (Max:     0.012s)
Time for merge operator:                 4.087s
Time for coverage check:                 0.567s
  Time for BDD entailment checks:        0.449s
Total time for SMT solver (w/o itp):     5.289s

Number of path formula cache hits:   9055356 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   133.700s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               6487
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       17543 (count: 1952714, min: 0, max: 1510, avg: 0.01)
Time for BDD node cleanup:                             0.470s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 18.750s
  Time for transition matches:                        10.637s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                     11461923 (count: 11461923, min: 1, max: 1, avg: 1.00) [1 x 11461923]

CPA algorithm statistics
------------------------
Number of iterations:            8726134
Max size of waitlist:            176
Average size of waitlist:        85
Number of computed successors:   9261445
Max successors for one state:    2
Number of times merged:          156561
Number of times stopped:         479304
Number of times breaked:         372

Total time for CPA algorithm:       851.523s (Max:     7.192s)
  Time for choose from waitlist:      6.225s
  Time for precision adjustment:    332.796s
  Time for transfer relation:       442.055s
  Time for merge operator:            8.568s
  Time for stop operator:            17.713s
  Time for adding to reached set:    17.165s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   372
Avg. length of target path (in blocks):               64983 (count: 372, min: 107, max: 832, avg: 174.69)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  33.822s
  Counterexample analysis:                            17.188s (Max:     0.576s, Calls: 372)
    Refinement sat check:                              6.752s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.046s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.152s
  Precision update:                                    0.217s
  ARG update:                                         15.877s

Length of refined path (in blocks):                   18167 (count: 372, min: 9, max: 723, avg: 48.84)
Number of affected states:                            10794 (count: 372, min: 4, max: 718, avg: 29.02)
Length (states) of path with itp 'true':               7001 (count: 372, min: 4, max: 83, avg: 18.82)
Length (states) of path with itp non-trivial itp:     10794 (count: 372, min: 4, max: 718, avg: 29.02)
Length (states) of path with itp 'false':               372 (count: 372, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 372, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           10422 (count: 372, min: 3, max: 717, avg: 28.02)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                372
Number of successful refinements:     372
Number of failed refinements:         0
Max. size of reached set before ref.: 71901
Max. size of reached set after ref.:  29773
Avg. size of reached set before ref.: 26874.79
Avg. size of reached set after ref.:  3492.25

Total time for CEGAR algorithm:     892.566s
Time for refinements:                40.049s
Average time for refinement:          0.107s
Max time for refinement:              0.626s

Code Coverage
-----------------------------
  Function coverage:      0.433
  Visited lines:          2740
  Total lines:            5273
  Line coverage:          0.520
  Visited conditions:     452
  Total conditions:       2158
  Condition coverage:     0.209

CPAchecker general statistics
-----------------------------
Number of program locations:     8936
Number of CFA edges:             11079
Number of relevant variables:    843
Number of functions:             406
Number of loops:                 35
Size of reached set:             49689
  Number of reached locations:   2032 (23%)
    Avg states per location:     24
    Max states per location:     2632 (at node N26)
  Number of reached functions:   176 (43%)
  Number of partitions:          49396
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N3595 (before line 11169), Function main called from node N3526, stack depth 1 [2d4a3e13], stack [main]])
  Number of target states:       0
  Size of final wait list        114

Time for analysis setup:          7.680s
  Time for loading CPAs:          1.088s
  Time for loading parser:        0.782s
  Time for CFA construction:      5.651s
    Time for parsing file(s):     1.198s
    Time for AST to CFA:          1.988s
    Time for CFA sanity check:    0.520s
    Time for post-processing:     1.746s
      Time for var class.:        0.769s
Time for Analysis:              892.566s
CPU time for analysis:          892.490s
Total time for CPAchecker:      900.257s
Total CPU time for CPAchecker:  900.170s
Time for statistics:              0.772s

Time for Garbage Collector:      62.411s (in 631 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1889MB (  1801 MiB) max;    882MB (   841 MiB) avg;   1915MB (  1826 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1970MB (  1879 MiB) max;   1303MB (  1243 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8151MB (  7773 MiB) max;   8124MB (  7748 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
