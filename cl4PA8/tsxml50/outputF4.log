scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__linux-kernel-locking-mutex__drivers-media-usb-gspca-gspca_ov519_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tqaosz0m/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12839: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12877: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12954: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 12960: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 12961: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 12968: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 12969: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 12970: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 12980: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 12981: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 12982: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 12983: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 12989: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 12990: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 12991: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 12992: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 12993: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 12999: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13000: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13001: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13002: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13003: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13004: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13010: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13011: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13012: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13013: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13014: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13015: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13016: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13023: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13024: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13025: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13026: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13027: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13028: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13029: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13030: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13036: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13037: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13038: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13039: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13040: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13041: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13042: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13043: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13044: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13051: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13052: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13053: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13054: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13055: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13056: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13057: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13058: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13059: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13060: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 13081: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13113: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 13135: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13158: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13264: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13393: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13410: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13178: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13189: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12628: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12614: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_s_ctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1776516 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1683880 (95%)
  Because of loop head:            91602 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1034 (0%)
  Times precision was empty:       190860 (11%)
  Times precision was {false}:     4137 (0%)
  Times result was cached:         1569101 (88%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12418 (1%)
  Times result was 'false':        10610 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         2298674
  BDD entailment checks:           414194
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       37
Number of predicates discovered:          11
Number of abstraction locations:          213
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         3040520
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 183.66
Number of irrelevant predicates:          1423953 (47%)
Number of preds handled by boolean abs:   19617 (1%)
  Total number of models for allsat:      13861
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.12

Time for post operator:                261.137s
  Time for path formula creation:      255.121s
Time for strengthen operator:           10.259s
Time for prec operator:                247.278s
  Time for abstraction:                222.364s (Max:     2.806s, Count: 1776516)
    Boolean abstraction:                13.836s
    Solving time:                       15.058s (Max:     0.017s)
    Model enumeration time:              1.281s
    Time for BDD construction:           0.265s (Max:     0.006s)
Time for merge operator:                10.573s
Time for coverage check:                 0.664s
  Time for BDD entailment checks:        0.405s
Total time for SMT solver (w/o itp):    16.339s

Number of path formula cache hits:   13882135 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   211.126s

Total number of created targets for pointer analysis: 173604
   Number of created targets for uf: *(struct_usb_driver)* is 2
   Number of created targets for uf: *unsigned_char is 1221


Number of BDD nodes:                               298
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       24901 (count: 701105, min: 0, max: 944, avg: 0.04)
Time for BDD node cleanup:                             0.112s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 15.393s
  Time for transition matches:                         8.065s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                     12915699 (count: 12915699, min: 1, max: 1, avg: 1.00) [1 x 12915699]

CPA algorithm statistics
------------------------
Number of iterations:            9388404
Max size of waitlist:            132
Average size of waitlist:        62
Number of computed successors:   10756438
Max successors for one state:    2
Number of times merged:          942240
Number of times stopped:         1350015
Number of times breaked:         114

Total time for CPA algorithm:       857.674s (Max:    16.751s)
  Time for choose from waitlist:      4.218s
  Time for precision adjustment:    324.694s
  Time for transfer relation:       455.515s
  Time for merge operator:           22.534s
  Time for stop operator:            11.830s
  Time for adding to reached set:    15.869s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   114
Avg. length of target path (in blocks):               11699 (count: 114, min: 28, max: 176, avg: 102.62)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  29.305s
  Counterexample analysis:                             7.703s (Max:     0.119s, Calls: 114)
    Refinement sat check:                              5.060s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.105s
  Precision update:                                    0.111s
  ARG update:                                         21.261s

Length of refined path (in blocks):                   11497 (count: 114, min: 28, max: 176, avg: 100.85)
Number of affected states:                            11052 (count: 114, min: 1, max: 174, avg: 96.95)
Length (states) of path with itp 'true':                331 (count: 114, min: 1, max: 51, avg: 2.90)
Length (states) of path with itp non-trivial itp:     11052 (count: 114, min: 1, max: 174, avg: 96.95)
Length (states) of path with itp 'false':                 5 (count: 114, min: 0, max: 1, avg: 0.04)
Different non-trivial interpolants along paths:         111 (count: 114, min: 0, max: 2, avg: 0.97)
Equal non-trivial interpolants along paths:           10827 (count: 114, min: 0, max: 172, avg: 94.97)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                114
Number of successful refinements:     114
Number of failed refinements:         0
Max. size of reached set before ref.: 95099
Max. size of reached set after ref.:  45976
Avg. size of reached set before ref.: 83713.25
Avg. size of reached set after ref.:  1896.24

Total time for CEGAR algorithm:     892.825s
Time for refinements:                34.969s
Average time for refinement:          0.306s
Max time for refinement:              1.070s

Code Coverage
-----------------------------
  Function coverage:      0.342
  Visited lines:          1591
  Total lines:            5351
  Line coverage:          0.297
  Visited conditions:     244
  Total conditions:       1244
  Condition coverage:     0.196

CPAchecker general statistics
-----------------------------
Number of program locations:     7287
Number of CFA edges:             8371
Number of relevant variables:    951
Number of functions:             196
Number of loops:                 19
Size of reached set:             68673
  Number of reached locations:   873 (12%)
    Avg states per location:     78
    Max states per location:     2361 (at node N0)
  Number of reached functions:   67 (34%)
  Number of partitions:          68625
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N873 (before line 6717), Function ov511_i2c_r called from node N1139, stack depth 8 [3c5633e2], stack [main, ldv_entry_EMGentry_6, ldv_dispatch_register_dummy_resourceless_instance_4_6_7, ldv_struct_v4l2_ctrl_ops_dummy_resourceless_instance_1, ldv_dummy_resourceless_instance_callback_1_3, sd_g_volatile_ctrl, i2c_r, ov511_i2c_r]])
  Number of target states:       0
  Size of final wait list        82

Time for analysis setup:          7.418s
  Time for loading CPAs:          1.208s
  Time for loading parser:        0.730s
  Time for CFA construction:      5.330s
    Time for parsing file(s):     1.195s
    Time for AST to CFA:          2.108s
    Time for CFA sanity check:    0.482s
    Time for post-processing:     1.341s
      Time for var class.:        0.813s
Time for Analysis:              892.825s
CPU time for analysis:          892.760s
Total time for CPAchecker:      900.248s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              0.990s

Time for Garbage Collector:      94.767s (in 990 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1348MB (  1286 MiB) max;    660MB (   629 MiB) avg;   1388MB (  1324 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     39MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1402MB (  1337 MiB) max;    951MB (   907 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8221MB (  7840 MiB) max;   8116MB (  7740 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
