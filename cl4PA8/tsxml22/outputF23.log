scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-media-usb-pwc-pwc_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vl3er23x/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9401: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9530: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10331: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9455: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9466: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9500: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_fh_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_ops_wait_finish to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_ops_wait_prepare to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9500: Ignoring call via function pointer ldv_usb_instance_resume_2_7::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9500: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9455: Ignoring call via function pointer ldv_usb_instance_post_2_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9455: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9466: Ignoring call via function pointer ldv_usb_instance_pre_2_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9466: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function vb2_fop_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_device_release_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_fop_mmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_fop_poll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_ioctl2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_ioctl_dqbuf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_devdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_log_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_ioctl_qbuf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_ioctl_querybuf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_ioctl_reqbufs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_ioctl_streamoff to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_ioctl_streamon to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_subscribe_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_event_unsubscribe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_interruptible_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_ifnum_to_if to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_altnum_to_altsetting to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_buffer_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_plane_vaddr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_device_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            147438 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  126588 (86%)
  Because of loop head:            20585 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         265 (0%)
  Times precision was empty:       111609 (76%)
  Times precision was {false}:     1925 (1%)
  Times result was cached:         30126 (20%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3778 (3%)
  Times result was 'false':        7795 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         80633
  BDD entailment checks:           22911
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       97
Number of predicates discovered:          35
Number of abstraction locations:          80
Max number of predicates per location:    31
Avg number of predicates per location:    5
Total predicates per abstraction:         259603
Max number of predicates per abstraction: 31
Avg number of predicates per abstraction: 45.52
Number of irrelevant predicates:          97198 (37%)
Number of preds handled by boolean abs:   42611 (16%)
  Total number of models for allsat:      51353
  Max number of models for allsat:        400
  Avg number of models for allsat:        13.59

Time for post operator:                490.711s
  Time for path formula creation:      490.257s
Time for strengthen operator:            0.891s
Time for prec operator:                 36.223s
  Time for abstraction:                 34.205s (Max:     2.222s, Count: 147438)
    Boolean abstraction:                17.224s
    Solving time:                       10.573s (Max:     2.021s)
    Model enumeration time:              4.710s
    Time for BDD construction:           2.058s (Max:     0.031s)
Time for merge operator:                 9.417s
Time for coverage check:                 0.100s
  Time for BDD entailment checks:        0.089s
Total time for SMT solver (w/o itp):    15.283s

Number of path formula cache hits:   826076 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   486.288s

Total number of created targets for pointer analysis: 20778862
   Number of created targets for uf: *signed_int is 921
   Number of created targets for uf: *unsigned_char is 881
   Number of created targets for uf: *unsigned_int is 352129
   Number of created targets for uf: *char is 49


Number of BDD nodes:                               219164
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       47887 (count: 184505, min: 0, max: 1157, avg: 0.26)
Time for BDD node cleanup:                             0.034s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.430s
  Time for transition matches:                         0.766s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       840678 (count: 840678, min: 1, max: 1, avg: 1.00) [1 x 840678]

CPA algorithm statistics
------------------------
Number of iterations:            601785
Max size of waitlist:            536
Average size of waitlist:        202
Number of computed successors:   696298
Max successors for one state:    2
Number of times merged:          28861
Number of times stopped:         39714
Number of times breaked:         187

Total time for CPA algorithm:       558.234s (Max:   242.163s)
  Time for choose from waitlist:      0.460s
  Time for precision adjustment:     40.943s
  Time for transfer relation:       501.936s
  Time for merge operator:           10.118s
  Time for stop operator:             1.279s
  Time for adding to reached set:     1.353s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   187
Avg. length of target path (in blocks):                6339 (count: 187, min: 13, max: 65, avg: 33.90)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 332.716s
  Counterexample analysis:                           331.348s (Max:     2.716s, Calls: 187)
    Refinement sat check:                            320.119s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.051s
  Precision update:                                    0.083s
  ARG update:                                          1.120s

Length of refined path (in blocks):                    4412 (count: 187, min: 9, max: 57, avg: 23.59)
Number of affected states:                             2291 (count: 187, min: 4, max: 40, avg: 12.25)
Length (states) of path with itp 'true':               1934 (count: 187, min: 0, max: 48, avg: 10.34)
Length (states) of path with itp non-trivial itp:      2291 (count: 187, min: 4, max: 40, avg: 12.25)
Length (states) of path with itp 'false':               143 (count: 187, min: 0, max: 1, avg: 0.76)
Different non-trivial interpolants along paths:          64 (count: 187, min: 0, max: 1, avg: 0.34)
Equal non-trivial interpolants along paths:            2040 (count: 187, min: 3, max: 38, avg: 10.91)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                187
Number of successful refinements:     187
Number of failed refinements:         0
Max. size of reached set before ref.: 21013
Max. size of reached set after ref.:  11377
Avg. size of reached set before ref.: 5363.87
Avg. size of reached set after ref.:  2000.62

Total time for CEGAR algorithm:     892.125s
Time for refinements:               333.647s
Average time for refinement:          1.784s
Max time for refinement:              2.723s

Code Coverage
-----------------------------
  Function coverage:      0.429
  Visited lines:          2804
  Total lines:            5329
  Line coverage:          0.526
  Visited conditions:     678
  Total conditions:       1410
  Condition coverage:     0.481

CPAchecker general statistics
-----------------------------
Number of program locations:     7350
Number of CFA edges:             8323
Number of relevant variables:    925
Number of functions:             301
Number of loops:                 44
Size of reached set:             19863
  Number of reached locations:   1949 (27%)
    Avg states per location:     10
    Max states per location:     211 (at node N70)
  Number of reached functions:   129 (43%)
  Number of partitions:          19846
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1869 (before line 8500), Function main called from node N1856, stack depth 1 [6173863f], stack [main]])
  Number of target states:       0
  Size of final wait list        268

Time for analysis setup:          8.101s
  Time for loading CPAs:          1.150s
  Time for loading parser:        0.720s
  Time for CFA construction:      6.076s
    Time for parsing file(s):     1.324s
    Time for AST to CFA:          2.200s
    Time for CFA sanity check:    0.566s
    Time for post-processing:     1.749s
      Time for var class.:        0.779s
Time for Analysis:              892.125s
CPU time for analysis:          892.010s
Total time for CPAchecker:      900.245s
Total CPU time for CPAchecker:  900.100s
Time for statistics:              0.478s

Time for Garbage Collector:       8.821s (in 1564 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                197MB (   187 MiB) max;    109MB (   104 MiB) avg;    204MB (   194 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           216MB (   206 MiB) max;    167MB (   159 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8607MB (  8208 MiB) max;   8395MB (  8006 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
