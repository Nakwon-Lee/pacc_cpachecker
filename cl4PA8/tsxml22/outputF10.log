scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-media-usb-pwc-pwc_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_y6njqfh3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9401: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9530: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10331: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9455: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9466: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9500: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_event_unsubscribe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_subscribe_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_ioctl_streamon to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_ioctl_streamoff to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_ioctl_reqbufs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_ioctl_querybuf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_ioctl_qbuf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_log_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_ioctl_dqbuf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_ioctl2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_fop_poll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_fop_mmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_fh_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_device_release_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_fop_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9466: Ignoring call via function pointer ldv_usb_instance_pre_2_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9466: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9455: Ignoring call via function pointer ldv_usb_instance_post_2_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9455: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9500: Ignoring call via function pointer ldv_usb_instance_resume_2_7::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9500: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function vb2_ops_wait_prepare to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_ops_wait_finish to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_devdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_interruptible_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_buffer_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_plane_vaddr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10044: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___18 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10046: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___19 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9992: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function vb2_fop_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9994: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_xmalloc(88UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9681: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_string to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_alloc_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            478280 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  416019 (87%)
  Because of loop head:            61542 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         719 (0%)
  Times precision was empty:       345553 (72%)
  Times precision was {false}:     4745 (1%)
  Times result was cached:         123910 (26%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4072 (1%)
  Times result was 'false':        33711 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         372525
  BDD entailment checks:           144663
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       97
Number of predicates discovered:          35
Number of abstraction locations:          127
Max number of predicates per location:    29
Avg number of predicates per location:    4
Total predicates per abstraction:         696008
Max number of predicates per abstraction: 29
Avg number of predicates per abstraction: 78.94
Number of irrelevant predicates:          477448 (69%)
Number of preds handled by boolean abs:   30019 (4%)
  Total number of models for allsat:      7681
  Max number of models for allsat:        30
  Avg number of models for allsat:        1.89

Time for post operator:                262.742s
  Time for path formula creation:      261.490s
Time for strengthen operator:            2.223s
Time for prec operator:                 59.518s
  Time for abstraction:                 53.840s (Max:     2.303s, Count: 478280)
    Boolean abstraction:                20.017s
    Solving time:                       19.983s (Max:     2.112s)
    Model enumeration time:              1.120s
    Time for BDD construction:           0.260s (Max:     0.009s)
Time for merge operator:                23.103s
Time for coverage check:                 0.220s
  Time for BDD entailment checks:        0.165s
Total time for SMT solver (w/o itp):    21.103s

Number of path formula cache hits:   2705498 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   250.482s

Total number of created targets for pointer analysis: 5541642
   Number of created targets for uf: *signed_int is 1151
   Number of created targets for uf: *unsigned_char is 41
   Number of created targets for uf: *(struct_device)* is 22
   Number of created targets for uf: *unsigned_int is 226369
   Number of created targets for uf: *char is 241


Number of BDD nodes:                               35819
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       27870 (count: 552084, min: 0, max: 1000, avg: 0.05)
Time for BDD node cleanup:                             0.095s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.312s
  Time for transition matches:                         1.587s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.007s
Automaton transfers with branching:                0
Automaton transfer successors:                      2505296 (count: 2505296, min: 1, max: 1, avg: 1.00) [1 x 2505296]

CPA algorithm statistics
------------------------
Number of iterations:            1863779
Max size of waitlist:            710
Average size of waitlist:        217
Number of computed successors:   2118793
Max successors for one state:    2
Number of times merged:          113931
Number of times stopped:         175254
Number of times breaked:         265

Total time for CPA algorithm:       405.027s (Max:    17.441s)
  Time for choose from waitlist:      1.069s
  Time for precision adjustment:     73.974s
  Time for transfer relation:       291.566s
  Time for merge operator:           25.226s
  Time for stop operator:             4.841s
  Time for adding to reached set:     3.245s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   265
Avg. length of target path (in blocks):                8808 (count: 265, min: 13, max: 48, avg: 33.24)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 485.554s
  Counterexample analysis:                           482.081s (Max:     7.057s, Calls: 265)
    Refinement sat check:                            464.679s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.017s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.061s
  Precision update:                                    0.122s
  ARG update:                                          3.152s

Length of refined path (in blocks):                    6969 (count: 264, min: 9, max: 47, avg: 26.40)
Number of affected states:                             2860 (count: 264, min: 4, max: 46, avg: 10.83)
Length (states) of path with itp 'true':               3845 (count: 264, min: 0, max: 36, avg: 14.56)
Length (states) of path with itp non-trivial itp:      2860 (count: 264, min: 4, max: 46, avg: 10.83)
Length (states) of path with itp 'false':               140 (count: 264, min: 0, max: 1, avg: 0.53)
Different non-trivial interpolants along paths:         131 (count: 264, min: 0, max: 1, avg: 0.50)
Equal non-trivial interpolants along paths:            2465 (count: 264, min: 3, max: 44, avg: 9.34)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                265
Number of successful refinements:     264
Number of failed refinements:         0
Max. size of reached set before ref.: 23545
Max. size of reached set after ref.:  16510
Avg. size of reached set before ref.: 10656.54
Avg. size of reached set after ref.:  3462.70

Total time for CEGAR algorithm:     893.362s
Time for refinements:               487.659s
Average time for refinement:          1.840s
Max time for refinement:              7.089s

Code Coverage
-----------------------------
  Function coverage:      0.498
  Visited lines:          2616
  Total lines:            5329
  Line coverage:          0.491
  Visited conditions:     488
  Total conditions:       1410
  Condition coverage:     0.346

CPAchecker general statistics
-----------------------------
Number of program locations:     7350
Number of CFA edges:             8323
Number of relevant variables:    925
Number of functions:             301
Number of loops:                 44
Size of reached set:             9525
  Number of reached locations:   1721 (23%)
    Avg states per location:     5
    Max states per location:     126 (at node N6110)
  Number of reached functions:   150 (50%)
  Number of partitions:          9455
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N1869 (before line 8500), Function main called from node N1856, stack depth 1 [6173863f], stack [main]])
  Number of target states:       1
  Size of final wait list        242

Time for analysis setup:          7.944s
  Time for loading CPAs:          1.060s
  Time for loading parser:        0.717s
  Time for CFA construction:      6.040s
    Time for parsing file(s):     1.325s
    Time for AST to CFA:          2.162s
    Time for CFA sanity check:    0.513s
    Time for post-processing:     1.758s
      Time for var class.:        0.827s
Time for Analysis:              893.362s
CPU time for analysis:          893.260s
Total time for CPAchecker:      901.310s
Total CPU time for CPAchecker:  901.180s
Time for statistics:              0.461s

Time for Garbage Collector:      21.011s (in 944 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                329MB (   313 MiB) max;    178MB (   169 MiB) avg;    339MB (   323 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           343MB (   327 MiB) max;    257MB (   245 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   9338MB (  8906 MiB) max;   8473MB (  8080 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
