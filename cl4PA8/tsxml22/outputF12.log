scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-media-usb-pwc-pwc_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xq50rnk8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9401: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9530: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10331: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9455: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9466: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9500: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_event_unsubscribe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_subscribe_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_ioctl_streamon to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_ioctl_streamoff to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_ioctl_reqbufs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_ioctl_querybuf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_ioctl_qbuf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_log_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_ioctl_dqbuf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_ioctl2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_fop_poll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_fop_mmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_fh_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_device_release_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_fop_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9466: Ignoring call via function pointer ldv_usb_instance_pre_2_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9466: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9455: Ignoring call via function pointer ldv_usb_instance_post_2_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9455: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9500: Ignoring call via function pointer ldv_usb_instance_resume_2_7::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9500: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function vb2_ops_wait_prepare to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_ops_wait_finish to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_devdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_interruptible_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_buffer_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_plane_vaddr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10044: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___18 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10046: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___19 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9992: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function vb2_fop_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9994: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_xmalloc(88UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9681: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_string to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_alloc_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            474503 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  412749 (87%)
  Because of loop head:            61058 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         696 (0%)
  Times precision was empty:       343398 (72%)
  Times precision was {false}:     4588 (1%)
  Times result was cached:         122573 (26%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3944 (1%)
  Times result was 'false':        33270 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         369405
  BDD entailment checks:           143061
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       97
Number of predicates discovered:          34
Number of abstraction locations:          126
Max number of predicates per location:    28
Avg number of predicates per location:    4
Total predicates per abstraction:         682825
Max number of predicates per abstraction: 28
Avg number of predicates per abstraction: 80.03
Number of irrelevant predicates:          469225 (69%)
Number of preds handled by boolean abs:   28191 (4%)
  Total number of models for allsat:      7331
  Max number of models for allsat:        30
  Avg number of models for allsat:        1.86

Time for post operator:                280.842s
  Time for path formula creation:      279.649s
Time for strengthen operator:            2.257s
Time for prec operator:                 62.891s
  Time for abstraction:                 57.115s (Max:     2.666s, Count: 474503)
    Boolean abstraction:                20.055s
    Solving time:                       19.889s (Max:     2.422s)
    Model enumeration time:              1.132s
    Time for BDD construction:           0.294s (Max:     0.026s)
Time for merge operator:                23.265s
Time for coverage check:                 0.194s
  Time for BDD entailment checks:        0.146s
Total time for SMT solver (w/o itp):    21.021s

Number of path formula cache hits:   2683952 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   268.702s

Total number of created targets for pointer analysis: 5540490
   Number of created targets for uf: *signed_int is 1151
   Number of created targets for uf: *unsigned_char is 41
   Number of created targets for uf: *unsigned_int is 226369
   Number of created targets for uf: *(struct_device)* is 22
   Number of created targets for uf: *char is 241


Number of BDD nodes:                               33706
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       26326 (count: 546072, min: 0, max: 663, avg: 0.05)
Time for BDD node cleanup:                             0.110s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.342s
  Time for transition matches:                         1.837s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                      2485609 (count: 2485609, min: 1, max: 1, avg: 1.00) [1 x 2485609]

CPA algorithm statistics
------------------------
Number of iterations:            1848997
Max size of waitlist:            710
Average size of waitlist:        217
Number of computed successors:   2101978
Max successors for one state:    2
Number of times merged:          113172
Number of times stopped:         174036
Number of times breaked:         259

Total time for CPA algorithm:       423.682s (Max:    18.016s)
  Time for choose from waitlist:      1.065s
  Time for precision adjustment:     76.577s
  Time for transfer relation:       308.478s
  Time for merge operator:           25.391s
  Time for stop operator:             3.531s
  Time for adding to reached set:     3.184s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   259
Avg. length of target path (in blocks):                8552 (count: 259, min: 13, max: 47, avg: 33.02)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 467.040s
  Counterexample analysis:                           463.895s (Max:     7.159s, Calls: 259)
    Refinement sat check:                            447.917s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.064s
  Precision update:                                    0.135s
  ARG update:                                          2.827s

Length of refined path (in blocks):                    6752 (count: 258, min: 9, max: 47, avg: 26.17)
Number of affected states:                             2816 (count: 258, min: 4, max: 46, avg: 10.91)
Length (states) of path with itp 'true':               3678 (count: 258, min: 0, max: 36, avg: 14.26)
Length (states) of path with itp non-trivial itp:      2816 (count: 258, min: 4, max: 46, avg: 10.91)
Length (states) of path with itp 'false':               139 (count: 258, min: 0, max: 1, avg: 0.54)
Different non-trivial interpolants along paths:         126 (count: 258, min: 0, max: 1, avg: 0.49)
Equal non-trivial interpolants along paths:            2432 (count: 258, min: 3, max: 44, avg: 9.43)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                259
Number of successful refinements:     258
Number of failed refinements:         0
Max. size of reached set before ref.: 23545
Max. size of reached set after ref.:  16510
Avg. size of reached set before ref.: 10706.23
Avg. size of reached set after ref.:  3404.03

Total time for CEGAR algorithm:     893.223s
Time for refinements:               468.929s
Average time for refinement:          1.810s
Max time for refinement:              7.190s

Code Coverage
-----------------------------
  Function coverage:      0.498
  Visited lines:          2632
  Total lines:            5329
  Line coverage:          0.494
  Visited conditions:     488
  Total conditions:       1410
  Condition coverage:     0.346

CPAchecker general statistics
-----------------------------
Number of program locations:     7350
Number of CFA edges:             8323
Number of relevant variables:    925
Number of functions:             301
Number of loops:                 44
Size of reached set:             10480
  Number of reached locations:   1736 (24%)
    Avg states per location:     6
    Max states per location:     143 (at node N6110)
  Number of reached functions:   150 (50%)
  Number of partitions:          10407
    Avg size of partitions:      1
    Max size of partitions:      11 (with key [N1869 (before line 8500), Function main called from node N1856, stack depth 1 [e08d871], stack [main]])
  Number of target states:       1
  Size of final wait list        299

Time for analysis setup:          8.072s
  Time for loading CPAs:          1.081s
  Time for loading parser:        0.655s
  Time for CFA construction:      6.199s
    Time for parsing file(s):     1.332s
    Time for AST to CFA:          2.209s
    Time for CFA sanity check:    0.537s
    Time for post-processing:     1.887s
      Time for var class.:        0.923s
Time for Analysis:              893.223s
CPU time for analysis:          893.100s
Total time for CPAchecker:      901.300s
Total CPU time for CPAchecker:  901.150s
Time for statistics:              0.277s

Time for Garbage Collector:      19.276s (in 939 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                317MB (   302 MiB) max;    172MB (   164 MiB) avg;    335MB (   319 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           356MB (   340 MiB) max;    251MB (   239 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   9277MB (  8847 MiB) max;   8458MB (  8066 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
