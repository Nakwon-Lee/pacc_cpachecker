scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-media-platform-soc_camera-sh_mobile_ceu_camera_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1s89fkoa/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6875: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9375: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10711: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12624: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 11348: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11634: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6242: Function pointer *(csi2_sd->ops->core->s_power) with type int (*)(struct v4l2_subdev *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7222: Function pointer *(__sd->ops->video->s_mbus_fmt) with type int (*)(struct v4l2_subdev *, struct v4l2_mbus_framefmt *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7183: Function pointer *(sd->ops->video->g_mbus_fmt) with type int (*)(struct v4l2_subdev *, struct v4l2_mbus_framefmt *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7118: Function pointer *(sd->ops->video->enum_mbus_fmt) with type int (*)(struct v4l2_subdev *, unsigned int, enum v4l2_mbus_pixelcode *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6292: Function pointer *(csi2_sd->ops->core->s_power) with type int (*)(struct v4l2_subdev *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6719: Function pointer *(sd->ops->video->s_mbus_config) with type int (*)(struct v4l2_subdev *, const struct v4l2_mbus_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6669: Function pointer *(sd->ops->video->g_mbus_config) with type int (*)(struct v4l2_subdev *, struct v4l2_mbus_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7635: Function pointer *(__sd->ops->video->s_mbus_fmt) with type int (*)(struct v4l2_subdev *, struct v4l2_mbus_framefmt *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7570: Function pointer *(sd->ops->video->g_mbus_fmt) with type int (*)(struct v4l2_subdev *, struct v4l2_mbus_framefmt *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8455: Function pointer *(sd->ops->video->s_stream) with type int (*)(struct v4l2_subdev *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8378: Function pointer *(sd->ops->video->s_stream) with type int (*)(struct v4l2_subdev *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6947: Function pointer *(sd->ops->video->g_mbus_config) with type int (*)(struct v4l2_subdev *, struct v4l2_mbus_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8257: Function pointer *(__sd___0->ops->video->try_mbus_fmt) with type int (*)(struct v4l2_subdev *, struct v4l2_mbus_framefmt *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8171: Function pointer *(__sd->ops->video->try_mbus_fmt) with type int (*)(struct v4l2_subdev *, struct v4l2_mbus_framefmt *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_module to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6292: Ignoring function call through function pointer *(csi2_sd->ops->core->s_power): (*(csi2_sd->ops->core->s_power))(csi2_sd, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6242: Ignoring function call through function pointer *(csi2_sd->ops->core->s_power): tmp___1 = (*(csi2_sd->ops->core->s_power))(csi2_sd, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9659: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_xmalloc(520UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7118: Ignoring function call through function pointer *(sd->ops->video->enum_mbus_fmt): tmp___1 = (*(sd->ops->video->enum_mbus_fmt))(sd, idx, &code); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function soc_mbus_get_fmtdesc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_new_std to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function soc_camera_client_g_rect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7183: Ignoring function call through function pointer *(sd->ops->video->g_mbus_fmt): tmp___4 = (*(sd->ops->video->g_mbus_fmt))(sd, &mf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6947: Ignoring function call through function pointer *(sd->ops->video->g_mbus_config): tmp___1 = (*(sd->ops->video->g_mbus_config))(sd, &cfg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function soc_mbus_config_compatible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7222: Ignoring function call through function pointer *(__sd->ops->video->s_mbus_fmt): tmp___6 = (*(__sd->ops->video->s_mbus_fmt))(__sd, &mf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_check_alloc_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6669: Ignoring function call through function pointer *(sd->ops->video->g_mbus_config): tmp___2 = (*(sd->ops->video->g_mbus_config))(sd, &cfg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6719: Ignoring function call through function pointer *(sd->ops->video->s_mbus_config): tmp___5 = (*(sd->ops->video->s_mbus_config))(sd, (const struct v4l2_mbus_config *)(&cfg)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6810: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function soc_camera_client_s_crop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7570: Ignoring function call through function pointer *(sd->ops->video->g_mbus_fmt): tmp___4 = (*(sd->ops->video->g_mbus_fmt))(sd, &mf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7635: Ignoring function call through function pointer *(__sd->ops->video->s_mbus_fmt): tmp___8 = (*(__sd->ops->video->s_mbus_fmt))(__sd, &mf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function soc_camera_xlate_by_fourcc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function soc_camera_calc_client_output to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function soc_camera_client_scale to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8378: Ignoring function call through function pointer *(sd->ops->video->s_stream): tmp___1 = (*(sd->ops->video->s_stream))(sd, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function v4l_bound_align_image to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8171: Ignoring function call through function pointer *(__sd->ops->video->try_mbus_fmt): tmp___3 = (*(__sd->ops->video->try_mbus_fmt))(__sd, &mf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8257: Ignoring function call through function pointer *(__sd___0->ops->video->try_mbus_fmt): tmp___6 = (*(__sd___0->ops->video->try_mbus_fmt))(__sd___0, &mf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9661: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9669: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_xmalloc(104UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9675: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_xmalloc(648UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function soc_camera_host_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pm_runtime_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_dma_contig_cleanup_ctx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function module_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_ioremap_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_runtime_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vb2_dma_contig_init_ctx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bus_register_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function try_module_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bus_unregister_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function soc_camera_host_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_device_register_subdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11348: Ignoring call via function pointer ldv_pm_ops_instance_complete_4_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11348: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11436: Ignoring call via function pointer ldv_pm_ops_instance_restore_4_4::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11436: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11458: Ignoring call via function pointer ldv_pm_ops_instance_restore_noirq_4_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11458: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11414: Ignoring call via function pointer ldv_pm_ops_instance_poweroff_noirq_4_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11414: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11447: Ignoring call via function pointer ldv_pm_ops_instance_restore_early_4_7::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11447: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11403: Ignoring call via function pointer ldv_pm_ops_instance_poweroff_late_4_8::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11403: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11392: Ignoring call via function pointer ldv_pm_ops_instance_poweroff_4_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11392: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11568: Ignoring call via function pointer ldv_pm_ops_instance_thaw_4_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11568: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11590: Ignoring call via function pointer ldv_pm_ops_instance_thaw_noirq_4_11::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11590: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11381: Ignoring call via function pointer ldv_pm_ops_instance_freeze_noirq_4_12::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11381: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11579: Ignoring call via function pointer ldv_pm_ops_instance_thaw_early_4_13::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11579: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11370: Ignoring call via function pointer ldv_pm_ops_instance_freeze_late_4_14::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11370: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11359: Ignoring call via function pointer ldv_pm_ops_instance_freeze_4_15::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11359: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11469: Ignoring call via function pointer ldv_pm_ops_instance_resume_4_16::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11469: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11480: Ignoring call via function pointer ldv_pm_ops_instance_resume_early_4_17::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11480: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11546: Ignoring call via function pointer ldv_pm_ops_instance_suspend_late_4_18::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11546: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11491: Ignoring call via function pointer ldv_pm_ops_instance_resume_noirq_4_19::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11491: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11557: Ignoring call via function pointer ldv_pm_ops_instance_suspend_noirq_4_20::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11557: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11535: Ignoring call via function pointer ldv_pm_ops_instance_suspend_4_21::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11535: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11425: Ignoring call via function pointer ldv_pm_ops_instance_prepare_4_22::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11425: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11502: Ignoring call via function pointer ldv_pm_ops_instance_runtime_idle_4_27::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11502: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11634: Ignoring call via function pointer ldv_rtc_class_instance_release_5_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11634: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11623: Ignoring call via function pointer ldv_rtc_class_instance_probe_5_10::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11623: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function soc_camera_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function soc_camera_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function soc_mbus_bytes_per_line to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function soc_mbus_image_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3837323 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3393263 (88%)
  Because of loop head:            443236 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         824 (0%)
  Times precision was empty:       3319427 (87%)
  Times precision was {false}:     5217 (0%)
  Times result was cached:         506409 (13%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6270 (0%)
  Times result was 'false':        171167 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         3986093
  BDD entailment checks:           907343
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          54
Number of abstraction locations:          117
Max number of predicates per location:    54
Avg number of predicates per location:    12
Total predicates per abstraction:         7668367
Max number of predicates per abstraction: 54
Avg number of predicates per abstraction: 667.57
Number of irrelevant predicates:          4070908 (53%)
Number of preds handled by boolean abs:   115717 (2%)
  Total number of models for allsat:      27220
  Max number of models for allsat:        108
  Avg number of models for allsat:        4.34

Time for post operator:                 80.475s
  Time for path formula creation:       69.930s
Time for strengthen operator:           17.977s
Time for prec operator:                290.267s
  Time for abstraction:                256.071s (Max:     1.355s, Count: 3837323)
    Boolean abstraction:                19.319s
    Solving time:                       12.861s (Max:     0.017s)
    Model enumeration time:              4.503s
    Time for BDD construction:           2.086s (Max:     0.034s)
Time for merge operator:                 6.562s
Time for coverage check:                 1.090s
  Time for BDD entailment checks:        0.601s
Total time for SMT solver (w/o itp):    17.364s

Number of path formula cache hits:   29686597 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    25.134s

Total number of created targets for pointer analysis: 61015
   Number of created targets for uf: *signed_int is 113
   Number of created targets for uf: *unsigned_int is 457
   Number of created targets for uf: *char is 1569


Number of BDD nodes:                               168837
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       58794 (count: 4359476, min: 0, max: 504, avg: 0.01)
Time for BDD node cleanup:                             0.593s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 28.618s
  Time for transition matches:                        15.078s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                     25138623 (count: 25138623, min: 1, max: 1, avg: 1.00) [1 x 25138623]

CPA algorithm statistics
------------------------
Number of iterations:            17123764
Max size of waitlist:            51
Average size of waitlist:        28
Number of computed successors:   19659501
Max successors for one state:    2
Number of times merged:          1539375
Number of times stopped:         2344741
Number of times breaked:         824

Total time for CPA algorithm:       839.877s (Max:     2.629s)
  Time for choose from waitlist:      6.795s
  Time for precision adjustment:    408.956s
  Time for transfer relation:       309.280s
  Time for merge operator:           26.108s
  Time for stop operator:            25.082s
  Time for adding to reached set:    24.630s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   824
Avg. length of target path (in blocks):               29097 (count: 824, min: 13, max: 53, avg: 35.31)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  42.575s
  Counterexample analysis:                            11.937s (Max:     0.046s, Calls: 824)
    Refinement sat check:                              7.899s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.025s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.274s
  Precision update:                                    0.550s
  ARG update:                                         29.433s

Length of refined path (in blocks):                   19229 (count: 824, min: 9, max: 32, avg: 23.34)
Number of affected states:                            15013 (count: 824, min: 4, max: 27, avg: 18.22)
Length (states) of path with itp 'true':               3392 (count: 824, min: 4, max: 8, avg: 4.12)
Length (states) of path with itp non-trivial itp:     15013 (count: 824, min: 4, max: 27, avg: 18.22)
Length (states) of path with itp 'false':               824 (count: 824, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          27 (count: 824, min: 0, max: 1, avg: 0.03)
Equal non-trivial interpolants along paths:           14162 (count: 824, min: 3, max: 26, avg: 17.19)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                824
Number of successful refinements:     824
Number of failed refinements:         0
Max. size of reached set before ref.: 28516
Max. size of reached set after ref.:  11416
Avg. size of reached set before ref.: 21086.16
Avg. size of reached set after ref.:  280.85

Total time for CEGAR algorithm:     892.808s
Time for refinements:                52.766s
Average time for refinement:          0.064s
Max time for refinement:              0.981s

Code Coverage
-----------------------------
  Function coverage:      0.010
  Visited lines:          1036
  Total lines:            4925
  Line coverage:          0.210
  Visited conditions:     0
  Total conditions:       1232
  Condition coverage:     0.000

CPAchecker general statistics
-----------------------------
Number of program locations:     7008
Number of CFA edges:             7970
Number of relevant variables:    1030
Number of functions:             300
Number of loops:                 19
Size of reached set:             12
  Number of reached locations:   12 (0%)
    Avg states per location:     1
    Max states per location:     1 (at node N3215)
  Number of reached functions:   3 (1%)
  Number of partitions:          12
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          7.479s
  Time for loading CPAs:          1.020s
  Time for loading parser:        0.721s
  Time for CFA construction:      5.598s
    Time for parsing file(s):     1.168s
    Time for AST to CFA:          2.122s
    Time for CFA sanity check:    0.581s
    Time for post-processing:     1.549s
      Time for var class.:        0.670s
Time for Analysis:              892.808s
CPU time for analysis:          892.730s
Total time for CPAchecker:      900.291s
Total CPU time for CPAchecker:  900.190s
Time for statistics:              0.089s

Time for Garbage Collector:     109.674s (in 3079 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                551MB (   525 MiB) max;    242MB (   231 MiB) avg;    561MB (   535 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           620MB (   592 MiB) max;    357MB (   341 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8151MB (  7773 MiB) max;   8137MB (  7760 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
