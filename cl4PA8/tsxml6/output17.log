scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-media-platform-soc_camera-sh_mobile_ceu_camera_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dhgb9qrh/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6875: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9375: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10711: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12624: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 11348: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11634: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6242: Function pointer *(csi2_sd->ops->core->s_power) with type int (*)(struct v4l2_subdev *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7222: Function pointer *(__sd->ops->video->s_mbus_fmt) with type int (*)(struct v4l2_subdev *, struct v4l2_mbus_framefmt *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7183: Function pointer *(sd->ops->video->g_mbus_fmt) with type int (*)(struct v4l2_subdev *, struct v4l2_mbus_framefmt *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7118: Function pointer *(sd->ops->video->enum_mbus_fmt) with type int (*)(struct v4l2_subdev *, unsigned int, enum v4l2_mbus_pixelcode *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6292: Function pointer *(csi2_sd->ops->core->s_power) with type int (*)(struct v4l2_subdev *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6719: Function pointer *(sd->ops->video->s_mbus_config) with type int (*)(struct v4l2_subdev *, const struct v4l2_mbus_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6669: Function pointer *(sd->ops->video->g_mbus_config) with type int (*)(struct v4l2_subdev *, struct v4l2_mbus_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7635: Function pointer *(__sd->ops->video->s_mbus_fmt) with type int (*)(struct v4l2_subdev *, struct v4l2_mbus_framefmt *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7570: Function pointer *(sd->ops->video->g_mbus_fmt) with type int (*)(struct v4l2_subdev *, struct v4l2_mbus_framefmt *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8455: Function pointer *(sd->ops->video->s_stream) with type int (*)(struct v4l2_subdev *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8378: Function pointer *(sd->ops->video->s_stream) with type int (*)(struct v4l2_subdev *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6947: Function pointer *(sd->ops->video->g_mbus_config) with type int (*)(struct v4l2_subdev *, struct v4l2_mbus_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8257: Function pointer *(__sd___0->ops->video->try_mbus_fmt) with type int (*)(struct v4l2_subdev *, struct v4l2_mbus_framefmt *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8171: Function pointer *(__sd->ops->video->try_mbus_fmt) with type int (*)(struct v4l2_subdev *, struct v4l2_mbus_framefmt *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function soc_camera_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function soc_camera_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11623: Ignoring call via function pointer ldv_rtc_class_instance_probe_5_10::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11623: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11634: Ignoring call via function pointer ldv_rtc_class_instance_release_5_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11634: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11502: Ignoring call via function pointer ldv_pm_ops_instance_runtime_idle_4_27::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11502: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11425: Ignoring call via function pointer ldv_pm_ops_instance_prepare_4_22::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11425: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11535: Ignoring call via function pointer ldv_pm_ops_instance_suspend_4_21::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11535: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11557: Ignoring call via function pointer ldv_pm_ops_instance_suspend_noirq_4_20::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11557: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11491: Ignoring call via function pointer ldv_pm_ops_instance_resume_noirq_4_19::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11491: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11546: Ignoring call via function pointer ldv_pm_ops_instance_suspend_late_4_18::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11546: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11480: Ignoring call via function pointer ldv_pm_ops_instance_resume_early_4_17::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11480: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11469: Ignoring call via function pointer ldv_pm_ops_instance_resume_4_16::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11469: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11359: Ignoring call via function pointer ldv_pm_ops_instance_freeze_4_15::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11359: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11370: Ignoring call via function pointer ldv_pm_ops_instance_freeze_late_4_14::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11370: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11579: Ignoring call via function pointer ldv_pm_ops_instance_thaw_early_4_13::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11579: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11381: Ignoring call via function pointer ldv_pm_ops_instance_freeze_noirq_4_12::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11381: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11590: Ignoring call via function pointer ldv_pm_ops_instance_thaw_noirq_4_11::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11590: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11568: Ignoring call via function pointer ldv_pm_ops_instance_thaw_4_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11568: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11392: Ignoring call via function pointer ldv_pm_ops_instance_poweroff_4_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11392: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11403: Ignoring call via function pointer ldv_pm_ops_instance_poweroff_late_4_8::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11403: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11447: Ignoring call via function pointer ldv_pm_ops_instance_restore_early_4_7::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11447: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11414: Ignoring call via function pointer ldv_pm_ops_instance_poweroff_noirq_4_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11414: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11458: Ignoring call via function pointer ldv_pm_ops_instance_restore_noirq_4_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11458: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11436: Ignoring call via function pointer ldv_pm_ops_instance_restore_4_4::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11436: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11348: Ignoring call via function pointer ldv_pm_ops_instance_complete_4_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11348: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_module to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            29277 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  26434 (90%)
  Because of loop head:            2822 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         21 (0%)
  Times precision was empty:       22541 (77%)
  Times precision was {false}:     248 (1%)
  Times result was cached:         6350 (22%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      138 (0%)
  Times result was 'false':        189 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         20426
  BDD entailment checks:           9742
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          5
Number of abstraction locations:          24
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         9659
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 25.02
Number of irrelevant predicates:          8155 (84%)
Number of preds handled by boolean abs:   240 (2%)
  Total number of models for allsat:      169
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.22

Time for post operator:                  6.932s
  Time for path formula creation:        6.730s
Time for strengthen operator:            0.408s
Time for prec operator:                  3.606s
  Time for abstraction:                  2.821s (Max:     0.017s, Count: 29277)
    Boolean abstraction:                 0.272s
    Solving time:                        0.303s (Max:     0.041s)
    Model enumeration time:              0.008s
    Time for BDD construction:           0.067s (Max:     0.012s)
Time for merge operator:                 0.341s
Time for coverage check:                 0.122s
  Time for BDD entailment checks:        0.114s
Total time for SMT solver (w/o itp):     0.311s

Number of path formula cache hits:   125282 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.855s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               214
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         288 (count: 34388, min: 0, max: 72, avg: 0.01)
Time for BDD node cleanup:                             0.034s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.689s
  Time for transition matches:                         0.344s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       164044 (count: 164044, min: 1, max: 1, avg: 1.00) [1 x 164044]

CPA algorithm statistics
------------------------
Number of iterations:            119495
Max size of waitlist:            328
Average size of waitlist:        185
Number of computed successors:   133670
Max successors for one state:    2
Number of times merged:          5342
Number of times stopped:         11417
Number of times breaked:         21

Total time for CPA algorithm:        22.119s (Max:     2.428s)
  Time for choose from waitlist:      0.273s
  Time for precision adjustment:      5.810s
  Time for transfer relation:        12.472s
  Time for merge operator:            0.681s
  Time for stop operator:             0.769s
  Time for adding to reached set:     0.674s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   21
Avg. length of target path (in blocks):                 419 (count: 21, min: 13, max: 23, avg: 19.95)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.005s
  Counterexample analysis:                             0.390s (Max:     0.032s, Calls: 21)
    Refinement sat check:                              0.232s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.030s
  Precision update:                                    0.029s
  ARG update:                                          0.541s

Length of refined path (in blocks):                     269 (count: 21, min: 9, max: 14, avg: 12.81)
Number of affected states:                              164 (count: 21, min: 4, max: 9, avg: 7.81)
Length (states) of path with itp 'true':                 84 (count: 21, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp non-trivial itp:       164 (count: 21, min: 4, max: 9, avg: 7.81)
Length (states) of path with itp 'false':                21 (count: 21, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 21, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             143 (count: 21, min: 3, max: 8, avg: 6.81)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                21
Number of successful refinements:     21
Number of failed refinements:         0
Max. size of reached set before ref.: 7164
Max. size of reached set after ref.:  12
Avg. size of reached set before ref.: 5821.95
Avg. size of reached set after ref.:  12.00

Total time for CEGAR algorithm:      23.368s
Time for refinements:                 1.249s
Average time for refinement:          0.059s
Max time for refinement:              0.125s

Code Coverage
-----------------------------
  Function coverage:      0.023
  Visited lines:          1062
  Total lines:            4925
  Line coverage:          0.216
  Visited conditions:     18
  Total conditions:       1232
  Condition coverage:     0.015

CPAchecker general statistics
-----------------------------
Number of program locations:     7008
Number of CFA edges:             7970
Number of relevant variables:    1030
Number of functions:             300
Number of loops:                 19
Size of reached set:             55
  Number of reached locations:   55 (1%)
    Avg states per location:     1
    Max states per location:     1 (at node N3215)
  Number of reached functions:   7 (2%)
  Number of partitions:          55
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        10

Time for analysis setup:          6.930s
  Time for loading CPAs:          1.079s
  Time for loading parser:        0.679s
  Time for CFA construction:      5.071s
    Time for parsing file(s):     1.157s
    Time for AST to CFA:          1.917s
    Time for CFA sanity check:    0.471s
    Time for post-processing:     1.329s
      Time for var class.:        0.631s
Time for Analysis:               23.369s
CPU time for analysis:           23.380s
Total time for CPAchecker:       30.302s
Total CPU time for CPAchecker:   30.290s
Time for statistics:              0.118s

Time for Garbage Collector:       1.163s (in 57 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                113MB (   107 MiB) max;     61MB (    58 MiB) avg;    116MB (   111 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
