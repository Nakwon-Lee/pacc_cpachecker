scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-usb-asix_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xq35sdw6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5899: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9798: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9939: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10145: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9852: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9863: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_get_drvinfo to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13121: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usbnet_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_get_msglevel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_get_settings to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_read_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_write_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_unlink_rx_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_update_max_qlen to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function phy_print_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_start_xmit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_tx_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13230: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usbnet_set_msglevel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13434: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usbnet_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_write_cmd_async to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_nway_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13543: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usbnet_set_settings to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function phy_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function phy_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8455: Ignoring call via function pointer ldv_io_instance_callback_2_4::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8455: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_nway_restart to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_check_media to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_ethtool_gset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function phy_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function genphy_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function phy_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_get_endpoints to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_skb_return to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mdiobus_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mdiobus_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8689: Ignoring call via function pointer ldv_io_instance_release_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8689: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_link_change to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8700: Ignoring call via function pointer ldv_io_instance_release_4_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8700: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8536: Ignoring call via function pointer ldv_io_instance_callback_4_18::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8536: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8561: Ignoring call via function pointer ldv_io_instance_callback_4_20::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2, arg3); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8561: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2, arg3); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8573: Ignoring call via function pointer ldv_io_instance_callback_4_23::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8573: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8711: Ignoring call via function pointer ldv_io_instance_release_5_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8711: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usbnet_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9852: Ignoring call via function pointer ldv_usb_instance_post_6_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9852: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9863: Ignoring call via function pointer ldv_usb_instance_pre_6_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9863: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10105: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usbnet_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10081: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(1992UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9343: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_xmalloc(1528UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4015929 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3931985 (98%)
  Because of loop head:            83693 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         251 (0%)
  Times precision was empty:       2227452 (55%)
  Times precision was {false}:     2640 (0%)
  Times result was cached:         1778984 (44%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6853 (0%)
  Times result was 'false':        42093 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         2751598
  BDD entailment checks:           328952
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       81
Number of predicates discovered:          28
Number of abstraction locations:          278
Max number of predicates per location:    26
Avg number of predicates per location:    3
Total predicates per abstraction:         3483990
Max number of predicates per abstraction: 26
Avg number of predicates per abstraction: 367.01
Number of irrelevant predicates:          2909824 (84%)
Number of preds handled by boolean abs:   45127 (1%)
  Total number of models for allsat:      10020
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.46

Time for post operator:                132.361s
  Time for path formula creation:      123.722s
Time for strengthen operator:           18.950s
Time for prec operator:                210.276s
  Time for abstraction:                165.077s (Max:     2.667s, Count: 4015929)
    Boolean abstraction:                 6.762s
    Solving time:                        5.416s (Max:     0.013s)
    Model enumeration time:              0.865s
    Time for BDD construction:           0.470s (Max:     0.096s)
Time for merge operator:                 9.572s
Time for coverage check:                 0.639s
  Time for BDD entailment checks:        0.339s
Total time for SMT solver (w/o itp):     6.281s

Number of path formula cache hits:   26065244 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    52.498s

Total number of created targets for pointer analysis: 12620
   Number of created targets for uf: *unsigned_short_int is 4262
   Number of created targets for uf: *unsigned_char is 283
   Number of created targets for uf: *unsigned_int is 3
   Number of created targets for uf: *unsigned_long_int is 2


Number of BDD nodes:                               29260
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       33313 (count: 2630904, min: 0, max: 584, avg: 0.01)
Time for BDD node cleanup:                             0.468s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 29.445s
  Time for transition matches:                        14.495s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                     22489235 (count: 22489235, min: 1, max: 1, avg: 1.00) [1 x 22489235]

CPA algorithm statistics
------------------------
Number of iterations:            14399744
Max size of waitlist:            72
Average size of waitlist:        27
Number of computed successors:   15967882
Max successors for one state:    2
Number of times merged:          1211323
Number of times stopped:         1517265
Number of times breaked:         251

Total time for CPA algorithm:       841.251s (Max:    16.137s)
  Time for choose from waitlist:      6.187s
  Time for precision adjustment:    321.261s
  Time for transfer relation:       388.265s
  Time for merge operator:           36.580s
  Time for stop operator:            29.023s
  Time for adding to reached set:    24.268s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   251
Avg. length of target path (in blocks):               16469 (count: 251, min: 17, max: 293, avg: 65.61)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  41.596s
  Counterexample analysis:                             6.409s (Max:     0.208s, Calls: 251)
    Refinement sat check:                              3.803s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.147s
  Precision update:                                    0.156s
  ARG update:                                         34.664s

Length of refined path (in blocks):                   11565 (count: 251, min: 9, max: 274, avg: 46.08)
Number of affected states:                            10240 (count: 251, min: 4, max: 269, avg: 40.80)
Length (states) of path with itp 'true':               1074 (count: 251, min: 0, max: 19, avg: 4.28)
Length (states) of path with itp non-trivial itp:     10240 (count: 251, min: 4, max: 269, avg: 40.80)
Length (states) of path with itp 'false':               251 (count: 251, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          44 (count: 251, min: 0, max: 1, avg: 0.18)
Equal non-trivial interpolants along paths:            9945 (count: 251, min: 3, max: 268, avg: 39.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                251
Number of successful refinements:     251
Number of failed refinements:         0
Max. size of reached set before ref.: 179425
Max. size of reached set after ref.:  34770
Avg. size of reached set before ref.: 58619.81
Avg. size of reached set after ref.:  1266.58

Total time for CEGAR algorithm:     892.553s
Time for refinements:                51.069s
Average time for refinement:          0.203s
Max time for refinement:              2.239s

Code Coverage
-----------------------------
  Function coverage:      0.443
  Visited lines:          3346
  Total lines:            5250
  Line coverage:          0.637
  Visited conditions:     622
  Total conditions:       1124
  Condition coverage:     0.553

CPAchecker general statistics
-----------------------------
Number of program locations:     7342
Number of CFA edges:             8287
Number of relevant variables:    925
Number of functions:             357
Number of loops:                 13
Size of reached set:             12863
  Number of reached locations:   2203 (30%)
    Avg states per location:     5
    Max states per location:     432 (at node N3187)
  Number of reached functions:   158 (44%)
  Number of partitions:          12863
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        25

Time for analysis setup:          7.726s
  Time for loading CPAs:          1.264s
  Time for loading parser:        0.633s
  Time for CFA construction:      5.672s
    Time for parsing file(s):     1.302s
    Time for AST to CFA:          1.970s
    Time for CFA sanity check:    0.547s
    Time for post-processing:     1.677s
      Time for var class.:        0.657s
Time for Analysis:              892.553s
CPU time for analysis:          892.470s
Total time for CPAchecker:      900.283s
Total CPU time for CPAchecker:  900.180s
Time for statistics:              0.343s

Time for Garbage Collector:     134.833s (in 1284 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1287MB (  1227 MiB) max;    546MB (   520 MiB) avg;   1311MB (  1251 MiB) peak
Used non-heap memory:             44MB (    42 MiB) max;     40MB (    38 MiB) avg;     44MB (    42 MiB) peak
Allocated heap memory:          1450MB (  1383 MiB) max;    789MB (   753 MiB) avg
Allocated non-heap memory:        47MB (    45 MiB) max;     46MB (    44 MiB) avg
Total process virtual memory:   8153MB (  7775 MiB) max;   8106MB (  7730 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
