scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-usb-asix_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gely47fs/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5899: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9798: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9939: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10145: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9852: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9863: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_get_drvinfo to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13121: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_read_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_get_msglevel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_get_settings to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_start_xmit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_tx_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_set_msglevel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_write_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13434: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usbnet_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_write_cmd_async to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_nway_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_set_settings to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function phy_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function phy_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8455: Ignoring call via function pointer ldv_io_instance_callback_2_4::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8455: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_nway_restart to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_check_media to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_ethtool_gset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function phy_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function genphy_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function phy_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_get_endpoints to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mdiobus_alloc_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mdiobus_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mdiobus_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13751: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(192UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13753: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_xmalloc(1528UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usbnet_skb_return to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mdiobus_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8689: Ignoring call via function pointer ldv_io_instance_release_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8689: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8883: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_xmalloc(1528UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 8700: Ignoring call via function pointer ldv_io_instance_release_4_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8700: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            770664 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  708805 (92%)
  Because of loop head:            61220 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         639 (0%)
  Times precision was empty:       183885 (24%)
  Times precision was {false}:     25016 (3%)
  Times result was cached:         483823 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      77940 (10%)
  Times result was 'false':        181020 (23%)
Number of strengthen sat checks:   0
Number of coverage checks:         799892
  BDD entailment checks:           374402
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       81
Number of predicates discovered:          83
Number of abstraction locations:          479
Max number of predicates per location:    63
Avg number of predicates per location:    9
Total predicates per abstraction:         7161872
Max number of predicates per abstraction: 63
Avg number of predicates per abstraction: 69.56
Number of irrelevant predicates:          2819918 (39%)
Number of preds handled by boolean abs:   870099 (12%)
  Total number of models for allsat:      927611
  Max number of models for allsat:        30000
  Avg number of models for allsat:        11.90

Time for post operator:                 88.669s
  Time for path formula creation:       86.513s
Time for strengthen operator:            4.244s
Time for prec operator:                607.232s
  Time for abstraction:                596.595s (Max:     7.737s, Count: 770664)
    Boolean abstraction:               268.931s
    Solving time:                       83.681s (Max:     0.071s)
    Model enumeration time:            111.579s
    Time for BDD construction:          71.722s (Max:     3.079s)
Time for merge operator:                 6.214s
Time for coverage check:                 0.775s
  Time for BDD entailment checks:        0.661s
Total time for SMT solver (w/o itp):   195.260s

Number of path formula cache hits:   2621849 (54%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    71.838s

Total number of created targets for pointer analysis: 14051
   Number of created targets for uf: *unsigned_short_int is 1172
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *unsigned_char is 446
   Number of created targets for uf: *(struct_mii_bus)* is 2


Number of BDD nodes:                               267577
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      460755 (count: 1311049, min: 0, max: 7189, avg: 0.35)
Time for BDD node cleanup:                             0.306s
Time for BDD garbage collection:                       0.926s (in 196 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.472s
  Time for transition matches:                         4.332s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                      4506667 (count: 4506667, min: 1, max: 1, avg: 1.00) [1 x 4506667]

CPA algorithm statistics
------------------------
Number of iterations:            3347890
Max size of waitlist:            700
Average size of waitlist:        212
Number of computed successors:   3883809
Max successors for one state:    2
Number of times merged:          212745
Number of times stopped:         269421
Number of times breaked:         639

Total time for CPA algorithm:       825.678s (Max:    66.961s)
  Time for choose from waitlist:      2.044s
  Time for precision adjustment:    637.477s
  Time for transfer relation:       145.910s
  Time for merge operator:           11.974s
  Time for stop operator:            10.525s
  Time for adding to reached set:     7.503s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   639
Avg. length of target path (in blocks):              130644 (count: 639, min: 26, max: 562, avg: 204.45)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  61.480s
  Counterexample analysis:                            53.190s (Max:     0.299s, Calls: 639)
    Refinement sat check:                             20.342s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.090s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.413s
  Precision update:                                    1.161s
  ARG update:                                          5.758s

Length of refined path (in blocks):                   97981 (count: 639, min: 9, max: 354, avg: 153.33)
Number of affected states:                            37662 (count: 639, min: 3, max: 278, avg: 58.94)
Length (states) of path with itp 'true':              59680 (count: 639, min: 0, max: 242, avg: 93.40)
Length (states) of path with itp non-trivial itp:     37662 (count: 639, min: 3, max: 278, avg: 58.94)
Length (states) of path with itp 'false':               637 (count: 639, min: 0, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         329 (count: 639, min: 0, max: 4, avg: 0.51)
Equal non-trivial interpolants along paths:           36694 (count: 639, min: 0, max: 274, avg: 57.42)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                639
Number of successful refinements:     639
Number of failed refinements:         0
Max. size of reached set before ref.: 20962
Max. size of reached set after ref.:  9168
Avg. size of reached set before ref.: 7518.73
Avg. size of reached set after ref.:  2148.65

Total time for CEGAR algorithm:     892.776s
Time for refinements:                66.304s
Average time for refinement:          0.103s
Max time for refinement:              0.331s

Code Coverage
-----------------------------
  Function coverage:      0.171
  Visited lines:          1713
  Total lines:            5250
  Line coverage:          0.326
  Visited conditions:     166
  Total conditions:       1124
  Condition coverage:     0.148

CPAchecker general statistics
-----------------------------
Number of program locations:     7342
Number of CFA edges:             8287
Number of relevant variables:    925
Number of functions:             357
Number of loops:                 13
Size of reached set:             1884
  Number of reached locations:   564 (8%)
    Avg states per location:     3
    Max states per location:     15 (at node N5526)
  Number of reached functions:   61 (17%)
  Number of partitions:          1866
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N1682 (before line 8334), Function main called from node N1663, stack depth 1 [12192604], stack [main]])
  Number of target states:       0
  Size of final wait list        88

Time for analysis setup:          7.466s
  Time for loading CPAs:          1.189s
  Time for loading parser:        0.684s
  Time for CFA construction:      5.433s
    Time for parsing file(s):     1.239s
    Time for AST to CFA:          1.909s
    Time for CFA sanity check:    0.528s
    Time for post-processing:     1.557s
      Time for var class.:        0.654s
Time for Analysis:              892.776s
CPU time for analysis:          892.670s
Total time for CPAchecker:      900.252s
Total CPU time for CPAchecker:  900.130s
Time for statistics:              0.145s

Time for Garbage Collector:      41.734s (in 819 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1095MB (  1044 MiB) max;    554MB (   528 MiB) avg;   1108MB (  1057 MiB) peak
Used non-heap memory:             48MB (    46 MiB) max;     41MB (    39 MiB) avg;     48MB (    46 MiB) peak
Allocated heap memory:          1391MB (  1327 MiB) max;    864MB (   824 MiB) avg
Allocated non-heap memory:        50MB (    47 MiB) max;     49MB (    47 MiB) avg
Total process virtual memory:  11872MB ( 11322 MiB) max;   9759MB (  9307 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
