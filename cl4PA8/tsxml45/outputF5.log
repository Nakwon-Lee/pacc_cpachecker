scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-usb-asix_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8m7hi3gi/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5899: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9798: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9939: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10145: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9852: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9863: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_get_drvinfo to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13121: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_read_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_get_msglevel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_get_settings to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_start_xmit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_tx_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_set_msglevel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_write_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13434: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usbnet_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_write_cmd_async to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_nway_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_set_settings to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function phy_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function phy_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8455: Ignoring call via function pointer ldv_io_instance_callback_2_4::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8455: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_nway_restart to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_check_media to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_ethtool_gset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function phy_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function genphy_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function phy_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_get_endpoints to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mdiobus_alloc_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mdiobus_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mdiobus_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13751: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(192UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13753: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_xmalloc(1528UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usbnet_skb_return to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mdiobus_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8689: Ignoring call via function pointer ldv_io_instance_release_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8689: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8883: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_xmalloc(1528UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 8700: Ignoring call via function pointer ldv_io_instance_release_4_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8700: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            762406 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  701353 (92%)
  Because of loop head:            60425 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         628 (0%)
  Times precision was empty:       181679 (24%)
  Times precision was {false}:     24935 (3%)
  Times result was cached:         479125 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      76667 (10%)
  Times result was 'false':        178382 (23%)
Number of strengthen sat checks:   0
Number of coverage checks:         789153
  BDD entailment checks:           369315
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       81
Number of predicates discovered:          83
Number of abstraction locations:          479
Max number of predicates per location:    63
Avg number of predicates per location:    9
Total predicates per abstraction:         7003768
Max number of predicates per abstraction: 63
Avg number of predicates per abstraction: 68.93
Number of irrelevant predicates:          2755990 (39%)
Number of preds handled by boolean abs:   863903 (12%)
  Total number of models for allsat:      1049673
  Max number of models for allsat:        30000
  Avg number of models for allsat:        13.69

Time for post operator:                 90.307s
  Time for path formula creation:       87.448s
Time for strengthen operator:            4.191s
Time for prec operator:                617.485s
  Time for abstraction:                606.895s (Max:     7.589s, Count: 762406)
    Boolean abstraction:               294.700s
    Solving time:                       81.858s (Max:     0.087s)
    Model enumeration time:            128.058s
    Time for BDD construction:          83.243s (Max:     2.908s)
Time for merge operator:                 6.004s
Time for coverage check:                 0.760s
  Time for BDD entailment checks:        0.631s
Total time for SMT solver (w/o itp):   209.916s

Number of path formula cache hits:   2578527 (53%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    71.057s

Total number of created targets for pointer analysis: 14033
   Number of created targets for uf: *unsigned_short_int is 1167
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *unsigned_char is 446
   Number of created targets for uf: *(struct_mii_bus)* is 2


Number of BDD nodes:                               183435
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      458028 (count: 1295577, min: 0, max: 6546, avg: 0.35)
Time for BDD node cleanup:                             0.315s
Time for BDD garbage collection:                       1.188s (in 228 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.898s
  Time for transition matches:                         3.821s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                      4454663 (count: 4454663, min: 1, max: 1, avg: 1.00) [1 x 4454663]

CPA algorithm statistics
------------------------
Number of iterations:            3307897
Max size of waitlist:            701
Average size of waitlist:        211
Number of computed successors:   3836596
Max successors for one state:    2
Number of times merged:          209919
Number of times stopped:         265990
Number of times breaked:         628

Total time for CPA algorithm:       827.742s (Max:    66.560s)
  Time for choose from waitlist:      2.048s
  Time for precision adjustment:    643.577s
  Time for transfer relation:       143.733s
  Time for merge operator:           11.693s
  Time for stop operator:             9.846s
  Time for adding to reached set:     7.068s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   628
Avg. length of target path (in blocks):              126117 (count: 628, min: 26, max: 562, avg: 200.82)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  59.721s
  Counterexample analysis:                            51.339s (Max:     0.262s, Calls: 628)
    Refinement sat check:                             19.748s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.063s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.371s
  Precision update:                                    1.307s
  ARG update:                                          5.807s

Length of refined path (in blocks):                   94029 (count: 628, min: 9, max: 322, avg: 149.73)
Number of affected states:                            35713 (count: 628, min: 3, max: 278, avg: 56.87)
Length (states) of path with itp 'true':              57688 (count: 628, min: 0, max: 242, avg: 91.86)
Length (states) of path with itp non-trivial itp:     35713 (count: 628, min: 3, max: 278, avg: 56.87)
Length (states) of path with itp 'false':               626 (count: 628, min: 0, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         318 (count: 628, min: 0, max: 4, avg: 0.51)
Equal non-trivial interpolants along paths:           34767 (count: 628, min: 0, max: 274, avg: 55.36)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                628
Number of successful refinements:     628
Number of failed refinements:         0
Max. size of reached set before ref.: 20962
Max. size of reached set after ref.:  9168
Avg. size of reached set before ref.: 7503.32
Avg. size of reached set after ref.:  2110.45

Total time for CEGAR algorithm:     892.911s
Time for refinements:                64.388s
Average time for refinement:          0.102s
Max time for refinement:              0.306s

Code Coverage
-----------------------------
  Function coverage:      0.218
  Visited lines:          2041
  Total lines:            5250
  Line coverage:          0.389
  Visited conditions:     294
  Total conditions:       1124
  Condition coverage:     0.262

CPAchecker general statistics
-----------------------------
Number of program locations:     7342
Number of CFA edges:             8287
Number of relevant variables:    925
Number of functions:             357
Number of loops:                 13
Size of reached set:             5502
  Number of reached locations:   994 (14%)
    Avg states per location:     5
    Max states per location:     29 (at node N5526)
  Number of reached functions:   78 (22%)
  Number of partitions:          5459
    Avg size of partitions:      1
    Max size of partitions:      15 (with key [N1682 (before line 8334), Function main called from node N1663, stack depth 1 [12192604], stack [main]])
  Number of target states:       0
  Size of final wait list        214

Time for analysis setup:          7.352s
  Time for loading CPAs:          1.103s
  Time for loading parser:        0.714s
  Time for CFA construction:      5.376s
    Time for parsing file(s):     1.232s
    Time for AST to CFA:          1.925s
    Time for CFA sanity check:    0.552s
    Time for post-processing:     1.493s
      Time for var class.:        0.730s
Time for Analysis:              892.911s
CPU time for analysis:          892.830s
Total time for CPAchecker:      900.268s
Total CPU time for CPAchecker:  900.170s
Time for statistics:              0.209s

Time for Garbage Collector:      41.556s (in 827 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1120MB (  1068 MiB) max;    562MB (   536 MiB) avg;   1141MB (  1088 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1486MB (  1417 MiB) max;    879MB (   838 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  11802MB ( 11255 MiB) max;   9771MB (  9318 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
