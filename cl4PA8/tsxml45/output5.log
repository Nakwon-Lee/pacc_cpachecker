scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-usb-asix_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fdc3owd3/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5899: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9798: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9939: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10145: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9852: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9863: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_get_drvinfo to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13121: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_read_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_get_msglevel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_get_settings to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_start_xmit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_tx_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_set_msglevel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_write_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13434: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usbnet_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            24486 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20373 (83%)
  Because of loop head:            4066 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         47 (0%)
  Times precision was empty:       16958 (69%)
  Times precision was {false}:     296 (1%)
  Times result was cached:         7059 (29%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      173 (1%)
  Times result was 'false':        1331 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         17808
  BDD entailment checks:           5162
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       81
Number of predicates discovered:          6
Number of abstraction locations:          53
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         14845
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 31.65
Number of irrelevant predicates:          10167 (68%)
Number of preds handled by boolean abs:   321 (2%)
  Total number of models for allsat:      184
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.06

Time for post operator:                  6.879s
  Time for path formula creation:        6.714s
Time for strengthen operator:            0.320s
Time for prec operator:                  4.120s
  Time for abstraction:                  3.345s (Max:     0.024s, Count: 24486)
    Boolean abstraction:                 0.225s
    Solving time:                        0.241s (Max:     0.009s)
    Model enumeration time:              0.021s
    Time for BDD construction:           0.053s (Max:     0.011s)
Time for merge operator:                 0.433s
Time for coverage check:                 0.043s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     0.262s

Number of path formula cache hits:   55692 (41%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.122s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               272
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         438 (count: 24768, min: 0, max: 74, avg: 0.02)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.540s
  Time for transition matches:                         0.235s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       124737 (count: 124737, min: 1, max: 1, avg: 1.00) [1 x 124737]

CPA algorithm statistics
------------------------
Number of iterations:            97264
Max size of waitlist:            151
Average size of waitlist:        77
Number of computed successors:   112196
Max successors for one state:    2
Number of times merged:          6323
Number of times stopped:         9422
Number of times breaked:         47

Total time for CPA algorithm:        20.232s (Max:     1.951s)
  Time for choose from waitlist:      0.239s
  Time for precision adjustment:      5.749s
  Time for transfer relation:        11.171s
  Time for merge operator:            0.911s
  Time for stop operator:             0.617s
  Time for adding to reached set:     0.448s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   47
Avg. length of target path (in blocks):                2703 (count: 47, min: 26, max: 66, avg: 57.51)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.977s
  Counterexample analysis:                             1.300s (Max:     0.039s, Calls: 47)
    Refinement sat check:                              0.797s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.017s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.062s
  Precision update:                                    0.028s
  ARG update:                                          0.501s

Length of refined path (in blocks):                    1101 (count: 47, min: 9, max: 31, avg: 23.43)
Number of affected states:                              452 (count: 47, min: 4, max: 18, avg: 9.62)
Length (states) of path with itp 'true':                602 (count: 47, min: 4, max: 16, avg: 12.81)
Length (states) of path with itp non-trivial itp:       452 (count: 47, min: 4, max: 18, avg: 9.62)
Length (states) of path with itp 'false':                47 (count: 47, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 47, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             405 (count: 47, min: 3, max: 17, avg: 8.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                47
Number of successful refinements:     47
Number of failed refinements:         0
Max. size of reached set before ref.: 2914
Max. size of reached set after ref.:  268
Avg. size of reached set before ref.: 2352.36
Avg. size of reached set after ref.:  250.17

Total time for CEGAR algorithm:      22.506s
Time for refinements:                 2.262s
Average time for refinement:          0.048s
Max time for refinement:              0.144s

Code Coverage
-----------------------------
  Function coverage:      0.255
  Visited lines:          1959
  Total lines:            5250
  Line coverage:          0.373
  Visited conditions:     260
  Total conditions:       1124
  Condition coverage:     0.231

CPAchecker general statistics
-----------------------------
Number of program locations:     7342
Number of CFA edges:             8287
Number of relevant variables:    925
Number of functions:             357
Number of loops:                 13
Size of reached set:             2640
  Number of reached locations:   877 (12%)
    Avg states per location:     3
    Max states per location:     54 (at node N5526)
  Number of reached functions:   91 (25%)
  Number of partitions:          2628
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1682 (before line 8334), Function main called from node N1663, stack depth 1 [12192604], stack [main]])
  Number of target states:       0
  Size of final wait list        112

Time for analysis setup:          7.742s
  Time for loading CPAs:          1.139s
  Time for loading parser:        0.714s
  Time for CFA construction:      5.727s
    Time for parsing file(s):     1.320s
    Time for AST to CFA:          2.067s
    Time for CFA sanity check:    0.532s
    Time for post-processing:     1.632s
      Time for var class.:        0.646s
Time for Analysis:               22.506s
CPU time for analysis:           22.500s
Total time for CPAchecker:       30.253s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.180s

Time for Garbage Collector:       0.746s (in 53 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 87MB (    83 MiB) max;     56MB (    53 MiB) avg;     91MB (    87 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    33 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
