scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-usb-dev__drivers-net-wireless-airo_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vc44b4wy/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6128: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6182: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6187: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6192: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 6201: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 6296: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6301: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6311: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 6315: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10687: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 10692: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 10697: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 10706: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 19746: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 19770: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 19773: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 19775: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 23019: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 23032: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 23770: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 23812: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 23813: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 23858: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 24430: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 24515: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 24595: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 24611: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 24643: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 24659: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 24725: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7371: Function pointer *(tmp->cit_encrypt_one) with type void (*)(struct crypto_tfm *, u8 *, u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7356: Function pointer *(tmp->cit_setkey) with type int (*)(struct crypto_tfm *, u8 *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6840: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6881: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 18779-18780: Function pointer *writer with type int (*)(struct airo_info *, u16 , const void *, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 23519: Ignoring call via function pointer ldv_pci_instance_suspend_late_11_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 23519: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 23484: Ignoring call via function pointer ldv_pci_instance_resume_early_11_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 23484: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 23495: Ignoring call via function pointer ldv_pci_instance_shutdown_11_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 23495: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function default_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function set_freezable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function PDE_DATA to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15280: Ignoring function call through function pointer *(data->on_close): (*(data->on_close))(inode, file); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 23065: Ignoring call via function pointer ldv_interrupt_instance_thread_8_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 23065: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_trylock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_alloc_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function make_kuid(&init_user_ns, (uid_t )proc_uid) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Extern function make_kgid(&init_user_ns, (gid_t )proc_gid) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hex_to_bin to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_check_no_locks_held to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_tail to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 23921: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_from_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 22469: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 22253: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 22026: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21799: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21572: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21356: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21140: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20924: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            19326 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  16262 (84%)
  Because of loop head:            3059 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (0%)
  Times precision was empty:       17511 (91%)
  Times precision was {false}:     117 (1%)
  Times result was cached:         1662 (9%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      36 (0%)
  Times result was 'false':        9 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         10895
  BDD entailment checks:           3303
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       140
Number of predicates discovered:          5
Number of abstraction locations:          11
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         2979
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 19.47
Number of irrelevant predicates:          2837 (95%)
Number of preds handled by boolean abs:   56 (2%)
  Total number of models for allsat:      36
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  9.083s
  Time for path formula creation:        8.857s
Time for strengthen operator:            0.301s
Time for prec operator:                  2.127s
  Time for abstraction:                  1.296s (Max:     0.028s, Count: 19326)
    Boolean abstraction:                 0.062s
    Solving time:                        0.110s (Max:     0.010s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.010s (Max:     0.008s)
Time for merge operator:                 0.362s
Time for coverage check:                 0.102s
  Time for BDD entailment checks:        0.098s
Total time for SMT solver (w/o itp):     0.113s

Number of path formula cache hits:   96620 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.454s

Total number of created targets for pointer analysis: 7431
   Number of created targets for uf: *unsigned_short_int is 9
   Number of created targets for uf: *signed_int is 17
   Number of created targets for uf: *unsigned_char is 9
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *char is 1601
   Number of created targets for uf: *unsigned_int is 5


Number of BDD nodes:                               209
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         105 (count: 21636, min: 0, max: 56, avg: 0.00)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.608s
  Time for transition matches:                         0.277s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       118655 (count: 118655, min: 1, max: 1, avg: 1.00) [1 x 118655]

CPA algorithm statistics
------------------------
Number of iterations:            72328
Max size of waitlist:            905
Average size of waitlist:        379
Number of computed successors:   82870
Max successors for one state:    2
Number of times merged:          3796
Number of times stopped:         6917
Number of times breaked:         5

Total time for CPA algorithm:        19.703s (Max:     6.104s)
  Time for choose from waitlist:      0.202s
  Time for precision adjustment:      3.447s
  Time for transfer relation:        13.457s
  Time for merge operator:            0.638s
  Time for stop operator:             0.506s
  Time for adding to reached set:     0.407s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  95 (count: 5, min: 15, max: 20, avg: 19.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.673s
  Counterexample analysis:                             0.252s (Max:     0.068s, Calls: 5)
    Refinement sat check:                              0.155s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.029s
  Precision update:                                    0.001s
  ARG update:                                          0.383s

Length of refined path (in blocks):                      70 (count: 5, min: 11, max: 16, avg: 14.00)
Number of affected states:                               35 (count: 5, min: 4, max: 9, avg: 7.00)
Length (states) of path with itp 'true':                 30 (count: 5, min: 6, max: 6, avg: 6.00)
Length (states) of path with itp non-trivial itp:        35 (count: 5, min: 4, max: 9, avg: 7.00)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              30 (count: 5, min: 3, max: 8, avg: 6.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 18489
Max. size of reached set after ref.:  16
Avg. size of reached set before ref.: 12846.80
Avg. size of reached set after ref.:  16.00

Total time for CEGAR algorithm:      20.566s
Time for refinements:                 0.863s
Average time for refinement:          0.172s
Max time for refinement:              0.196s

Code Coverage
-----------------------------
  Function coverage:      0.360
  Visited lines:          3920
  Total lines:            9962
  Line coverage:          0.393
  Visited conditions:     740
  Total conditions:       2774
  Condition coverage:     0.267

CPAchecker general statistics
-----------------------------
Number of program locations:     14009
Number of CFA edges:             16323
Number of relevant variables:    2423
Number of functions:             492
Number of loops:                 82
Size of reached set:             11790
  Number of reached locations:   2425 (17%)
    Avg states per location:     4
    Max states per location:     204 (at node N13657)
  Number of reached functions:   177 (36%)
  Number of partitions:          11783
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N10433 (before line 20563), Function main called from node N10404, stack depth 1 [4b9dc62f], stack [main]])
  Number of target states:       0
  Size of final wait list        588

Time for analysis setup:          9.668s
  Time for loading CPAs:          1.284s
  Time for loading parser:        0.704s
  Time for CFA construction:      7.515s
    Time for parsing file(s):     1.526s
    Time for AST to CFA:          2.972s
    Time for CFA sanity check:    0.638s
    Time for post-processing:     2.148s
      Time for var class.:        1.019s
Time for Analysis:               20.566s
CPU time for analysis:           20.560s
Total time for CPAchecker:       30.238s
Total CPU time for CPAchecker:   30.210s
Time for statistics:              0.356s

Time for Garbage Collector:       1.456s (in 48 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                147MB (   141 MiB) max;     81MB (    77 MiB) avg;    162MB (   154 MiB) peak
Used non-heap memory:             48MB (    46 MiB) max;     39MB (    37 MiB) avg;     49MB (    47 MiB) peak
Allocated heap memory:           185MB (   176 MiB) max;    141MB (   134 MiB) avg
Allocated non-heap memory:        50MB (    47 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
