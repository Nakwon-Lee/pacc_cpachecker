scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-usb-dev__drivers-net-wireless-airo_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lm_7ky3q/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6128: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6182: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6187: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6192: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 6201: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 6296: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6301: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6311: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 6315: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10687: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 10692: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 10697: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 10706: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 19746: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 19770: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 19773: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 19775: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 23019: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 23032: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 23770: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 23812: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 23813: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 23858: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 24430: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 24515: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 24595: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 24611: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 24643: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 24659: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 24725: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7371: Function pointer *(tmp->cit_encrypt_one) with type void (*)(struct crypto_tfm *, u8 *, u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7356: Function pointer *(tmp->cit_setkey) with type int (*)(struct crypto_tfm *, u8 *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6840: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6881: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 18779-18780: Function pointer *writer with type int (*)(struct airo_info *, u16 , const void *, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_proc_subtree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6256: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6881: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function skb_dequeue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kthread_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function make_kuid(&init_user_ns, (uid_t )proc_uid) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Extern function make_kgid(&init_user_ns, (gid_t )proc_gid) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function proc_mkdir_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function proc_set_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15280: Ignoring function call through function pointer *(data->on_close): (*(data->on_close))(inode, file); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function default_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function PDE_DATA to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_alloc_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_write_to_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1552621 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1499664 (97%)
  Because of loop head:            52057 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         900 (0%)
  Times precision was empty:       137528 (9%)
  Times precision was {false}:     5264 (0%)
  Times result was cached:         1388770 (89%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      21059 (1%)
  Times result was 'false':        138794 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         745211
  BDD entailment checks:           268533
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       140
Number of predicates discovered:          77
Number of abstraction locations:          283
Max number of predicates per location:    61
Avg number of predicates per location:    8
Total predicates per abstraction:         7228322
Max number of predicates per abstraction: 61
Avg number of predicates per abstraction: 274.60
Number of irrelevant predicates:          3269676 (45%)
Number of preds handled by boolean abs:   286459 (4%)
  Total number of models for allsat:      840985
  Max number of models for allsat:        73205
  Avg number of models for allsat:        39.93

Time for post operator:                118.788s
  Time for path formula creation:      115.340s
Time for strengthen operator:            6.056s
Time for prec operator:                544.260s
  Time for abstraction:                520.802s (Max:    26.381s, Count: 1552621)
    Boolean abstraction:               241.074s
    Solving time:                       16.558s (Max:     0.043s)
    Model enumeration time:            152.218s
    Time for BDD construction:          69.756s (Max:     6.909s)
Time for merge operator:                 4.399s
Time for coverage check:                 0.461s
  Time for BDD entailment checks:        0.353s
Total time for SMT solver (w/o itp):   168.777s

Number of path formula cache hits:   5203267 (69%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    79.608s

Total number of created targets for pointer analysis: 32470
   Number of created targets for uf: *unsigned_short_int is 6
   Number of created targets for uf: *signed_int is 225
   Number of created targets for uf: *unsigned_char is 41
   Number of created targets for uf: *(struct_list_head)* is 2


Number of BDD nodes:                               147101
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       95663 (count: 593149, min: 0, max: 1201, avg: 0.16)
Time for BDD node cleanup:                             0.148s
Time for BDD garbage collection:                       0.729s (in 233 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.166s
  Time for transition matches:                         6.127s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                      6435692 (count: 6435692, min: 1, max: 1, avg: 1.00) [1 x 6435692]

CPA algorithm statistics
------------------------
Number of iterations:            4916771
Max size of waitlist:            261
Average size of waitlist:        155
Number of computed successors:   5439753
Max successors for one state:    2
Number of times merged:          238339
Number of times stopped:         354440
Number of times breaked:         312

Total time for CPA algorithm:       852.314s (Max:    54.678s)
  Time for choose from waitlist:      2.918s
  Time for precision adjustment:    586.680s
  Time for transfer relation:       216.890s
  Time for merge operator:            9.850s
  Time for stop operator:             9.758s
  Time for adding to reached set:    11.065s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   312
Avg. length of target path (in blocks):               60140 (count: 312, min: 32, max: 486, avg: 192.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  33.149s
  Counterexample analysis:                            23.123s (Max:     0.296s, Calls: 312)
    Refinement sat check:                             10.034s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.043s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.236s
  Precision update:                                    0.455s
  ARG update:                                          8.918s

Length of refined path (in blocks):                   47087 (count: 312, min: 11, max: 486, avg: 150.92)
Number of affected states:                            21181 (count: 312, min: 4, max: 484, avg: 67.89)
Length (states) of path with itp 'true':              25594 (count: 312, min: 0, max: 240, avg: 82.03)
Length (states) of path with itp non-trivial itp:     21181 (count: 312, min: 4, max: 484, avg: 67.89)
Length (states) of path with itp 'false':               279 (count: 312, min: 0, max: 1, avg: 0.89)
Different non-trivial interpolants along paths:         147 (count: 312, min: 0, max: 13, avg: 0.47)
Equal non-trivial interpolants along paths:           20722 (count: 312, min: 3, max: 482, avg: 66.42)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                312
Number of successful refinements:     312
Number of failed refinements:         0
Max. size of reached set before ref.: 25193
Max. size of reached set after ref.:  5244
Avg. size of reached set before ref.: 19454.45
Avg. size of reached set after ref.:  3642.43

Total time for CEGAR algorithm:     890.434s
Time for refinements:                37.439s
Average time for refinement:          0.119s
Max time for refinement:              0.365s

Code Coverage
-----------------------------
  Function coverage:      0.230
  Visited lines:          2435
  Total lines:            9962
  Line coverage:          0.244
  Visited conditions:     340
  Total conditions:       2774
  Condition coverage:     0.123

CPAchecker general statistics
-----------------------------
Number of program locations:     14009
Number of CFA edges:             16323
Number of relevant variables:    2423
Number of functions:             492
Number of loops:                 82
Size of reached set:             13169
  Number of reached locations:   1214 (9%)
    Avg states per location:     10
    Max states per location:     309 (at node N43)
  Number of reached functions:   113 (23%)
  Number of partitions:          13073
    Avg size of partitions:      1
    Max size of partitions:      11 (with key [N10433 (before line 20563), Function main called from node N10404, stack depth 1 [4b9dc62f], stack [main]])
  Number of target states:       0
  Size of final wait list        179

Time for analysis setup:          9.851s
  Time for loading CPAs:          1.322s
  Time for loading parser:        0.700s
  Time for CFA construction:      7.652s
    Time for parsing file(s):     1.561s
    Time for AST to CFA:          3.021s
    Time for CFA sanity check:    0.694s
    Time for post-processing:     2.153s
      Time for var class.:        1.065s
Time for Analysis:              890.434s
CPU time for analysis:          890.340s
Total time for CPAchecker:      900.290s
Total CPU time for CPAchecker:  900.170s
Time for statistics:              0.369s

Time for Garbage Collector:      47.856s (in 800 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1130MB (  1078 MiB) max;    589MB (   561 MiB) avg;   1144MB (  1091 MiB) peak
Used non-heap memory:             49MB (    47 MiB) max;     41MB (    39 MiB) avg;     49MB (    47 MiB) peak
Allocated heap memory:          1459MB (  1391 MiB) max;    898MB (   856 MiB) avg
Allocated non-heap memory:        51MB (    48 MiB) max;     50MB (    48 MiB) avg
Total process virtual memory:   8424MB (  8034 MiB) max;   8287MB (  7903 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
