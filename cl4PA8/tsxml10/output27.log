scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-usb-dev__drivers-net-wireless-airo_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1nsx0ga3/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6128: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6182: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6187: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6192: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 6201: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 6296: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6301: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6311: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 6315: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10687: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 10692: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 10697: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 10706: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 19746: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 19770: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 19773: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 19775: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 23019: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 23032: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 23770: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 23812: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 23813: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 23858: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 24430: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 24515: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 24595: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 24611: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 24643: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 24659: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 24725: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7371: Function pointer *(tmp->cit_encrypt_one) with type void (*)(struct crypto_tfm *, u8 *, u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7356: Function pointer *(tmp->cit_setkey) with type int (*)(struct crypto_tfm *, u8 *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6840: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6881: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 18779-18780: Function pointer *writer with type int (*)(struct airo_info *, u16 , const void *, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_proc_subtree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6256: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6881: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function skb_dequeue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kthread_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function make_kuid(&init_user_ns, (uid_t )proc_uid) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Extern function make_kgid(&init_user_ns, (gid_t )proc_gid) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            18671 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  18175 (97%)
  Because of loop head:            484 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (0%)
  Times precision was empty:       13052 (70%)
  Times precision was {false}:     329 (2%)
  Times result was cached:         5048 (27%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      242 (1%)
  Times result was 'false':        98 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         7174
  BDD entailment checks:           2236
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       140
Number of predicates discovered:          5
Number of abstraction locations:          129
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         8950
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 15.67
Number of irrelevant predicates:          7276 (81%)
Number of preds handled by boolean abs:   271 (3%)
  Total number of models for allsat:      232
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.96

Time for post operator:                  7.310s
  Time for path formula creation:        7.104s
Time for strengthen operator:            0.215s
Time for prec operator:                  3.602s
  Time for abstraction:                  2.744s (Max:     0.027s, Count: 18671)
    Boolean abstraction:                 0.257s
    Solving time:                        0.295s (Max:     0.013s)
    Model enumeration time:              0.020s
    Time for BDD construction:           0.027s (Max:     0.007s)
Time for merge operator:                 0.239s
Time for coverage check:                 0.064s
  Time for BDD entailment checks:        0.052s
Total time for SMT solver (w/o itp):     0.315s

Number of path formula cache hits:   40340 (45%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.210s

Total number of created targets for pointer analysis: 976
   Number of created targets for uf: *unsigned_short_int is 313
   Number of created targets for uf: *(struct_list_head)* is 2


Number of BDD nodes:                               206
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         490 (count: 18405, min: 0, max: 81, avg: 0.03)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.571s
  Time for transition matches:                         0.305s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                        79613 (count: 79613, min: 1, max: 1, avg: 1.00) [1 x 79613]

CPA algorithm statistics
------------------------
Number of iterations:            57768
Max size of waitlist:            73
Average size of waitlist:        54
Number of computed successors:   62805
Max successors for one state:    2
Number of times merged:          2469
Number of times stopped:         4487
Number of times breaked:         12

Total time for CPA algorithm:        18.579s (Max:     3.247s)
  Time for choose from waitlist:      0.187s
  Time for precision adjustment:      5.022s
  Time for transfer relation:        11.104s
  Time for merge operator:            0.448s
  Time for stop operator:             0.369s
  Time for adding to reached set:     0.441s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                1098 (count: 12, min: 32, max: 128, avg: 91.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.391s
  Counterexample analysis:                             0.937s (Max:     0.110s, Calls: 12)
    Refinement sat check:                              0.538s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.062s
  Precision update:                                    0.028s
  ARG update:                                          0.343s

Length of refined path (in blocks):                     944 (count: 12, min: 11, max: 120, avg: 78.67)
Number of affected states:                              743 (count: 12, min: 4, max: 118, avg: 61.92)
Length (states) of path with itp 'true':                189 (count: 12, min: 1, max: 44, avg: 15.75)
Length (states) of path with itp non-trivial itp:       743 (count: 12, min: 4, max: 118, avg: 61.92)
Length (states) of path with itp 'false':                 5 (count: 12, min: 0, max: 1, avg: 0.42)
Different non-trivial interpolants along paths:           7 (count: 12, min: 0, max: 1, avg: 0.58)
Equal non-trivial interpolants along paths:             724 (count: 12, min: 3, max: 116, avg: 60.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 5227
Max. size of reached set after ref.:  515
Avg. size of reached set before ref.: 4594.75
Avg. size of reached set after ref.:  176.50

Total time for CEGAR algorithm:      20.207s
Time for refinements:                 1.621s
Average time for refinement:          0.135s
Max time for refinement:              0.186s

Code Coverage
-----------------------------
  Function coverage:      0.165
  Visited lines:          2016
  Total lines:            9962
  Line coverage:          0.202
  Visited conditions:     206
  Total conditions:       2774
  Condition coverage:     0.074

CPAchecker general statistics
-----------------------------
Number of program locations:     14009
Number of CFA edges:             16323
Number of relevant variables:    2423
Number of functions:             492
Number of loops:                 82
Size of reached set:             5202
  Number of reached locations:   700 (5%)
    Avg states per location:     7
    Max states per location:     109 (at node N44)
  Number of reached functions:   81 (16%)
  Number of partitions:          5174
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N10433 (before line 20563), Function main called from node N10404, stack depth 1 [4b9dc62f], stack [main]])
  Number of target states:       0
  Size of final wait list        66

Time for analysis setup:         10.087s
  Time for loading CPAs:          1.294s
  Time for loading parser:        0.665s
  Time for CFA construction:      7.962s
    Time for parsing file(s):     1.508s
    Time for AST to CFA:          3.105s
    Time for CFA sanity check:    0.741s
    Time for post-processing:     2.448s
      Time for var class.:        1.009s
Time for Analysis:               20.208s
CPU time for analysis:           20.200s
Total time for CPAchecker:       30.299s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.225s

Time for Garbage Collector:       0.979s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                113MB (   108 MiB) max;     74MB (    70 MiB) avg;    116MB (   111 MiB) peak
Used non-heap memory:             49MB (    47 MiB) max;     39MB (    37 MiB) avg;     49MB (    47 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        50MB (    48 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8070MB (  7696 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
