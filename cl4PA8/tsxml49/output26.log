scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-natsemi-ns83820_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wsieumpf/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5289: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8625: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8645: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8648: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8650: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8695: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9100: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9113: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9244: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9771: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9797: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9831: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10124: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10437: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10465: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10481: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10498: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10517: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10533: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10611: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5886: Function pointer *(ops___0->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5927: Function pointer *(ops___0->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5763: Function pointer *(ops___0->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5683-5684: Function pointer *(ops___0->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5799: Function pointer *(ops___0->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5723: Function pointer *(ops___0->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9464: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9475: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9498: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9510: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10063: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10063: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9486: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9486: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9146: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9146: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9498: Ignoring call via function pointer ldv_pci_instance_suspend_2_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9498: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9510: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9510: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            25253 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  22410 (89%)
  Because of loop head:            2798 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         45 (0%)
  Times precision was empty:       15665 (62%)
  Times precision was {false}:     465 (2%)
  Times result was cached:         8361 (33%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      762 (3%)
  Times result was 'false':        950 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         15711
  BDD entailment checks:           6673
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       43
Number of predicates discovered:          17
Number of abstraction locations:          23
Max number of predicates per location:    17
Avg number of predicates per location:    6
Total predicates per abstraction:         44059
Max number of predicates per abstraction: 17
Avg number of predicates per abstraction: 35.91
Number of irrelevant predicates:          29856 (68%)
Number of preds handled by boolean abs:   3780 (9%)
  Total number of models for allsat:      1739
  Max number of models for allsat:        35
  Avg number of models for allsat:        2.28

Time for post operator:                  4.307s
  Time for path formula creation:        4.073s
Time for strengthen operator:            0.248s
Time for prec operator:                  7.962s
  Time for abstraction:                  7.305s (Max:     0.035s, Count: 25253)
    Boolean abstraction:                 1.726s
    Solving time:                        1.462s (Max:     0.020s)
    Model enumeration time:              0.261s
    Time for BDD construction:           0.179s (Max:     0.012s)
Time for merge operator:                 0.205s
Time for coverage check:                 0.050s
  Time for BDD entailment checks:        0.042s
Total time for SMT solver (w/o itp):     1.723s

Number of path formula cache hits:   145857 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.351s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               5731
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4473 (count: 30600, min: 0, max: 650, avg: 0.15)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.684s
  Time for transition matches:                         0.263s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       143776 (count: 143776, min: 1, max: 1, avg: 1.00) [1 x 143776]

CPA algorithm statistics
------------------------
Number of iterations:            107832
Max size of waitlist:            397
Average size of waitlist:        137
Number of computed successors:   125049
Max successors for one state:    2
Number of times merged:          4519
Number of times stopped:         6310
Number of times breaked:         45

Total time for CPA algorithm:        21.757s (Max:     1.204s)
  Time for choose from waitlist:      0.270s
  Time for precision adjustment:      9.676s
  Time for transfer relation:         9.029s
  Time for merge operator:            0.567s
  Time for stop operator:             0.443s
  Time for adding to reached set:     0.568s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   45
Avg. length of target path (in blocks):                1109 (count: 45, min: 13, max: 32, avg: 24.64)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.475s
  Counterexample analysis:                             0.748s (Max:     0.026s, Calls: 45)
    Refinement sat check:                              0.406s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.091s
  Precision update:                                    0.068s
  ARG update:                                          0.521s

Length of refined path (in blocks):                     628 (count: 45, min: 9, max: 23, avg: 13.96)
Number of affected states:                              399 (count: 45, min: 4, max: 18, avg: 8.87)
Length (states) of path with itp 'true':                184 (count: 45, min: 4, max: 8, avg: 4.09)
Length (states) of path with itp non-trivial itp:       399 (count: 45, min: 4, max: 18, avg: 8.87)
Length (states) of path with itp 'false':                45 (count: 45, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 45, min: 0, max: 1, avg: 0.07)
Equal non-trivial interpolants along paths:             351 (count: 45, min: 3, max: 17, avg: 7.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                45
Number of successful refinements:     45
Number of failed refinements:         0
Max. size of reached set before ref.: 4793
Max. size of reached set after ref.:  1896
Avg. size of reached set before ref.: 2634.89
Avg. size of reached set after ref.:  53.87

Total time for CEGAR algorithm:      23.453s
Time for refinements:                 1.678s
Average time for refinement:          0.037s
Max time for refinement:              0.095s

Code Coverage
-----------------------------
  Function coverage:      0.139
  Visited lines:          1320
  Total lines:            3928
  Line coverage:          0.336
  Visited conditions:     116
  Total conditions:       756
  Condition coverage:     0.153

CPAchecker general statistics
-----------------------------
Number of program locations:     5808
Number of CFA edges:             6633
Number of relevant variables:    786
Number of functions:             361
Number of loops:                 16
Size of reached set:             1643
  Number of reached locations:   389 (7%)
    Avg states per location:     4
    Max states per location:     29 (at node N3746)
  Number of reached functions:   50 (14%)
  Number of partitions:          1629
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N2561 (before line 9025), Function main called from node N2550, stack depth 1 [590adb41], stack [main]])
  Number of target states:       0
  Size of final wait list        155

Time for analysis setup:          6.817s
  Time for loading CPAs:          1.124s
  Time for loading parser:        0.651s
  Time for CFA construction:      4.895s
    Time for parsing file(s):     1.169s
    Time for AST to CFA:          1.852s
    Time for CFA sanity check:    0.435s
    Time for post-processing:     1.193s
      Time for var class.:        0.612s
Time for Analysis:               23.453s
CPU time for analysis:           23.450s
Total time for CPAchecker:       30.285s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.133s

Time for Garbage Collector:       0.756s (in 56 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 75MB (    72 MiB) max;     50MB (    48 MiB) avg;     79MB (    75 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
