scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-natsemi-ns83820_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rd0ypp_z/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5289: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8625: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8645: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8648: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8650: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8695: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9100: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9113: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9244: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9771: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9797: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9831: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10124: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10437: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10465: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10481: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10498: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10517: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10533: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10611: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5886: Function pointer *(ops___0->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5927: Function pointer *(ops___0->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5763: Function pointer *(ops___0->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5683-5684: Function pointer *(ops___0->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5799: Function pointer *(ops___0->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5723: Function pointer *(ops___0->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9464: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9475: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9498: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9510: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10063: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10063: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9146: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9146: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9486: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9486: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9510: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9510: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9498: Ignoring call via function pointer ldv_pci_instance_suspend_2_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9498: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            18729 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  16311 (87%)
  Because of loop head:            2374 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         44 (0%)
  Times precision was empty:       11341 (61%)
  Times precision was {false}:     430 (2%)
  Times result was cached:         5826 (31%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1132 (6%)
  Times result was 'false':        632 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         11532
  BDD entailment checks:           6836
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       43
Number of predicates discovered:          17
Number of abstraction locations:          27
Max number of predicates per location:    17
Avg number of predicates per location:    7
Total predicates per abstraction:         39366
Max number of predicates per abstraction: 17
Avg number of predicates per abstraction: 25.20
Number of irrelevant predicates:          19511 (50%)
Number of preds handled by boolean abs:   5899 (15%)
  Total number of models for allsat:      2975
  Max number of models for allsat:        21
  Avg number of models for allsat:        2.63

Time for post operator:                  4.368s
  Time for path formula creation:        4.256s
Time for strengthen operator:            0.266s
Time for prec operator:                  9.287s
  Time for abstraction:                  8.785s (Max:     0.028s, Count: 18729)
    Boolean abstraction:                 2.777s
    Solving time:                        2.119s (Max:     0.039s)
    Model enumeration time:              0.530s
    Time for BDD construction:           0.302s (Max:     0.012s)
Time for merge operator:                 0.266s
Time for coverage check:                 0.053s
  Time for BDD entailment checks:        0.043s
Total time for SMT solver (w/o itp):     2.649s

Number of path formula cache hits:   80412 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.798s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               6574
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4456 (count: 28314, min: 0, max: 514, avg: 0.16)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.449s
Automaton transfers with branching:                0
Automaton transfer successors:                       100648 (count: 100648, min: 1, max: 1, avg: 1.00) [1 x 100648]

CPA algorithm statistics
------------------------
Number of iterations:            75452
Max size of waitlist:            363
Average size of waitlist:        121
Number of computed successors:   87749
Max successors for one state:    2
Number of times merged:          2348
Number of times stopped:         3430
Number of times breaked:         44

Total time for CPA algorithm:        21.403s (Max:     1.191s)
  Time for choose from waitlist:      0.270s
  Time for precision adjustment:     10.685s
  Time for transfer relation:         8.185s
  Time for merge operator:            0.421s
  Time for stop operator:             0.387s
  Time for adding to reached set:     0.438s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   44
Avg. length of target path (in blocks):                1459 (count: 44, min: 13, max: 55, avg: 33.16)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.456s
  Counterexample analysis:                             0.826s (Max:     0.031s, Calls: 44)
    Refinement sat check:                              0.430s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.105s
  Precision update:                                    0.063s
  ARG update:                                          0.382s

Length of refined path (in blocks):                    1024 (count: 44, min: 9, max: 44, avg: 23.27)
Number of affected states:                              781 (count: 44, min: 4, max: 39, avg: 17.75)
Length (states) of path with itp 'true':                199 (count: 44, min: 4, max: 15, avg: 4.52)
Length (states) of path with itp non-trivial itp:       781 (count: 44, min: 4, max: 39, avg: 17.75)
Length (states) of path with itp 'false':                44 (count: 44, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 44, min: 0, max: 1, avg: 0.11)
Equal non-trivial interpolants along paths:             732 (count: 44, min: 3, max: 38, avg: 16.64)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                44
Number of successful refinements:     44
Number of failed refinements:         0
Max. size of reached set before ref.: 4249
Max. size of reached set after ref.:  858
Avg. size of reached set before ref.: 1952.89
Avg. size of reached set after ref.:  59.57

Total time for CEGAR algorithm:      23.090s
Time for refinements:                 1.676s
Average time for refinement:          0.038s
Max time for refinement:              0.077s

Code Coverage
-----------------------------
  Function coverage:      0.091
  Visited lines:          1235
  Total lines:            3928
  Line coverage:          0.314
  Visited conditions:     110
  Total conditions:       756
  Condition coverage:     0.146

CPAchecker general statistics
-----------------------------
Number of program locations:     5808
Number of CFA edges:             6633
Number of relevant variables:    786
Number of functions:             361
Number of loops:                 16
Size of reached set:             381
  Number of reached locations:   335 (6%)
    Avg states per location:     1
    Max states per location:     6 (at node N3746)
  Number of reached functions:   33 (9%)
  Number of partitions:          377
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N2561 (before line 9025), Function main called from node N2550, stack depth 1 [68ed3f30], stack [main]])
  Number of target states:       0
  Size of final wait list        36

Time for analysis setup:          7.158s
  Time for loading CPAs:          1.020s
  Time for loading parser:        0.800s
  Time for CFA construction:      5.220s
    Time for parsing file(s):     1.184s
    Time for AST to CFA:          1.969s
    Time for CFA sanity check:    0.417s
    Time for post-processing:     1.408s
      Time for var class.:        0.547s
Time for Analysis:               23.090s
CPU time for analysis:           23.100s
Total time for CPAchecker:       30.254s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.110s

Time for Garbage Collector:       0.616s (in 50 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 78MB (    75 MiB) max;     52MB (    49 MiB) avg;     82MB (    78 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    33 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8069MB (  7696 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
