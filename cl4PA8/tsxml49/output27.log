scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-natsemi-ns83820_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ml31fjep/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5289: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8625: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8645: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8648: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8650: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8695: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9100: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9113: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9244: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9771: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9797: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9831: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10124: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10437: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10465: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10481: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10498: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10517: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10533: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10611: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5886: Function pointer *(ops___0->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5927: Function pointer *(ops___0->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5763: Function pointer *(ops___0->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5683-5684: Function pointer *(ops___0->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5799: Function pointer *(ops___0->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5723: Function pointer *(ops___0->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9464: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9475: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9498: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9510: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10063: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10063: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_trans_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9146: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9146: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            15106 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11784 (78%)
  Because of loop head:            2553 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         769 (5%)
  Times precision was empty:       5407 (36%)
  Times precision was {false}:     272 (2%)
  Times result was cached:         6577 (44%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2850 (19%)
  Times result was 'false':        1509 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         3521
  BDD entailment checks:           2873
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       43
Number of predicates discovered:          25
Number of abstraction locations:          87
Max number of predicates per location:    22
Avg number of predicates per location:    12
Total predicates per abstraction:         91235
Max number of predicates per abstraction: 22
Avg number of predicates per abstraction: 29.22
Number of irrelevant predicates:          14960 (16%)
Number of preds handled by boolean abs:   26700 (29%)
  Total number of models for allsat:      2730
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.96

Time for post operator:                  2.073s
  Time for path formula creation:        1.997s
Time for strengthen operator:            0.156s
Time for prec operator:                 13.704s
  Time for abstraction:                 13.288s (Max:     0.017s, Count: 15106)
    Boolean abstraction:                 3.971s
    Solving time:                        2.870s (Max:     0.023s)
    Model enumeration time:              0.270s
    Time for BDD construction:           0.220s (Max:     0.012s)
Time for merge operator:                 0.055s
Time for coverage check:                 0.045s
  Time for BDD entailment checks:        0.044s
Total time for SMT solver (w/o itp):     3.141s

Number of path formula cache hits:   58780 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.737s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1486
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7138 (count: 27661, min: 0, max: 348, avg: 0.26)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.413s
Automaton transfers with branching:                0
Automaton transfer successors:                        55857 (count: 55857, min: 1, max: 1, avg: 1.00) [1 x 55857]

CPA algorithm statistics
------------------------
Number of iterations:            42103
Max size of waitlist:            24
Average size of waitlist:        10
Number of computed successors:   46560
Max successors for one state:    2
Number of times merged:          324
Number of times stopped:         1923
Number of times breaked:         81

Total time for CPA algorithm:        20.463s (Max:     0.976s)
  Time for choose from waitlist:      0.159s
  Time for precision adjustment:     14.490s
  Time for transfer relation:         4.536s
  Time for merge operator:            0.155s
  Time for stop operator:             0.292s
  Time for adding to reached set:     0.277s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   81
Avg. length of target path (in blocks):                4822 (count: 81, min: 18, max: 88, avg: 59.53)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.499s
  Counterexample analysis:                             1.936s (Max:     0.044s, Calls: 81)
    Refinement sat check:                              0.943s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.016s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.124s
  Precision update:                                    0.099s
  ARG update:                                          0.239s

Length of refined path (in blocks):                    4372 (count: 81, min: 9, max: 88, avg: 53.98)
Number of affected states:                             4141 (count: 81, min: 4, max: 87, avg: 51.12)
Length (states) of path with itp 'true':                150 (count: 81, min: 0, max: 15, avg: 1.85)
Length (states) of path with itp non-trivial itp:      4141 (count: 81, min: 4, max: 87, avg: 51.12)
Length (states) of path with itp 'false':                25 (count: 81, min: 0, max: 1, avg: 0.31)
Different non-trivial interpolants along paths:          56 (count: 81, min: 0, max: 1, avg: 0.69)
Equal non-trivial interpolants along paths:            4004 (count: 81, min: 3, max: 85, avg: 49.43)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                81
Number of successful refinements:     81
Number of failed refinements:         0
Max. size of reached set before ref.: 931
Max. size of reached set after ref.:  254
Avg. size of reached set before ref.: 552.28
Avg. size of reached set after ref.:  20.96

Total time for CEGAR algorithm:      23.225s
Time for refinements:                 2.757s
Average time for refinement:          0.034s
Max time for refinement:              0.078s

Code Coverage
-----------------------------
  Function coverage:      0.028
  Visited lines:          1046
  Total lines:            3928
  Line coverage:          0.266
  Visited conditions:     14
  Total conditions:       756
  Condition coverage:     0.019

CPAchecker general statistics
-----------------------------
Number of program locations:     5808
Number of CFA edges:             6633
Number of relevant variables:    786
Number of functions:             361
Number of loops:                 16
Size of reached set:             91
  Number of reached locations:   66 (1%)
    Avg states per location:     1
    Max states per location:     2 (at node N2561)
  Number of reached functions:   10 (3%)
  Number of partitions:          89
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2561 (before line 9025), Function main called from node N2550, stack depth 1 [590adb41], stack [main]])
  Number of target states:       0
  Size of final wait list        10

Time for analysis setup:          7.035s
  Time for loading CPAs:          1.083s
  Time for loading parser:        0.623s
  Time for CFA construction:      5.157s
    Time for parsing file(s):     1.141s
    Time for AST to CFA:          1.910s
    Time for CFA sanity check:    0.428s
    Time for post-processing:     1.455s
      Time for var class.:        0.544s
Time for Analysis:               23.225s
CPU time for analysis:           23.220s
Total time for CPAchecker:       30.264s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.087s

Time for Garbage Collector:       0.493s (in 52 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    70 MiB) max;     49MB (    47 MiB) avg;     76MB (    73 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
