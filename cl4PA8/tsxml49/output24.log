scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-natsemi-ns83820_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hnnhqdpb/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5289: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8625: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8645: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8648: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8650: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8695: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9100: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9113: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9244: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9771: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9797: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9831: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10124: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10437: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10465: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10481: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10498: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10517: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10533: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10611: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5886: Function pointer *(ops___0->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5927: Function pointer *(ops___0->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5763: Function pointer *(ops___0->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5683-5684: Function pointer *(ops___0->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5799: Function pointer *(ops___0->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5723: Function pointer *(ops___0->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9464: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9475: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9498: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9510: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10063: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10063: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9146: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9146: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9486: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9486: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9510: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9510: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9498: Ignoring call via function pointer ldv_pci_instance_suspend_2_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9498: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            23699 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20840 (88%)
  Because of loop head:            2801 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         58 (0%)
  Times precision was empty:       15012 (63%)
  Times precision was {false}:     522 (2%)
  Times result was cached:         7287 (31%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      878 (4%)
  Times result was 'false':        979 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         14616
  BDD entailment checks:           6904
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       43
Number of predicates discovered:          17
Number of abstraction locations:          27
Max number of predicates per location:    17
Avg number of predicates per location:    6
Total predicates per abstraction:         51752
Max number of predicates per abstraction: 17
Avg number of predicates per abstraction: 36.97
Number of irrelevant predicates:          31107 (60%)
Number of preds handled by boolean abs:   4762 (9%)
  Total number of models for allsat:      2898
  Max number of models for allsat:        40
  Avg number of models for allsat:        3.30

Time for post operator:                  4.334s
  Time for path formula creation:        4.145s
Time for strengthen operator:            0.254s
Time for prec operator:                  8.953s
  Time for abstraction:                  8.376s (Max:     0.024s, Count: 23699)
    Boolean abstraction:                 2.371s
    Solving time:                        1.687s (Max:     0.017s)
    Model enumeration time:              0.538s
    Time for BDD construction:           0.311s (Max:     0.011s)
Time for merge operator:                 0.240s
Time for coverage check:                 0.057s
  Time for BDD entailment checks:        0.051s
Total time for SMT solver (w/o itp):     2.225s

Number of path formula cache hits:   121567 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.668s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               10256
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5696 (count: 31683, min: 0, max: 463, avg: 0.18)
Time for BDD node cleanup:                             0.033s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.449s
Automaton transfers with branching:                0
Automaton transfer successors:                       130789 (count: 130789, min: 1, max: 1, avg: 1.00) [1 x 130789]

CPA algorithm statistics
------------------------
Number of iterations:            96136
Max size of waitlist:            299
Average size of waitlist:        96
Number of computed successors:   111101
Max successors for one state:    2
Number of times merged:          3856
Number of times stopped:         4995
Number of times breaked:         58

Total time for CPA algorithm:        21.584s (Max:     1.107s)
  Time for choose from waitlist:      0.200s
  Time for precision adjustment:     10.464s
  Time for transfer relation:         8.376s
  Time for merge operator:            0.588s
  Time for stop operator:             0.423s
  Time for adding to reached set:     0.480s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   58
Avg. length of target path (in blocks):                1639 (count: 58, min: 13, max: 46, avg: 28.26)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.511s
  Counterexample analysis:                             0.867s (Max:     0.032s, Calls: 58)
    Refinement sat check:                              0.485s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.068s
  Precision update:                                    0.055s
  ARG update:                                          0.446s

Length of refined path (in blocks):                     987 (count: 57, min: 9, max: 39, avg: 17.32)
Number of affected states:                              682 (count: 57, min: 4, max: 34, avg: 11.96)
Length (states) of path with itp 'true':                248 (count: 57, min: 4, max: 8, avg: 4.35)
Length (states) of path with itp non-trivial itp:       682 (count: 57, min: 4, max: 34, avg: 11.96)
Length (states) of path with itp 'false':                57 (count: 57, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 57, min: 0, max: 1, avg: 0.07)
Equal non-trivial interpolants along paths:             621 (count: 57, min: 3, max: 33, avg: 10.89)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                58
Number of successful refinements:     57
Number of failed refinements:         0
Max. size of reached set before ref.: 3627
Max. size of reached set after ref.:  526
Avg. size of reached set before ref.: 1867.86
Avg. size of reached set after ref.:  56.28

Total time for CEGAR algorithm:      23.356s
Time for refinements:                 1.759s
Average time for refinement:          0.030s
Max time for refinement:              0.078s

Code Coverage
-----------------------------
  Function coverage:      0.163
  Visited lines:          1443
  Total lines:            3928
  Line coverage:          0.367
  Visited conditions:     164
  Total conditions:       756
  Condition coverage:     0.217

CPAchecker general statistics
-----------------------------
Number of program locations:     5808
Number of CFA edges:             6633
Number of relevant variables:    786
Number of functions:             361
Number of loops:                 16
Size of reached set:             2265
  Number of reached locations:   542 (9%)
    Avg states per location:     4
    Max states per location:     50 (at node N3747)
  Number of reached functions:   59 (16%)
  Number of partitions:          2235
    Avg size of partitions:      1
    Max size of partitions:      13 (with key [N2561 (before line 9025), Function main called from node N2550, stack depth 1 [68ed3f30], stack [main]])
  Number of target states:       1
  Size of final wait list        195

Time for analysis setup:          6.905s
  Time for loading CPAs:          1.051s
  Time for loading parser:        0.656s
  Time for CFA construction:      5.021s
    Time for parsing file(s):     1.169s
    Time for AST to CFA:          2.020s
    Time for CFA sanity check:    0.411s
    Time for post-processing:     1.173s
      Time for var class.:        0.561s
Time for Analysis:               23.356s
CPU time for analysis:           23.350s
Total time for CPAchecker:       30.276s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.168s

Time for Garbage Collector:       0.637s (in 58 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 78MB (    74 MiB) max;     51MB (    49 MiB) avg;     80MB (    76 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
