scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-natsemi-ns83820_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_r7l2xkag/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5289: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8625: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8645: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8648: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8650: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8695: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9100: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9113: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9244: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9771: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9797: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9831: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10124: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10437: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10465: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10481: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10498: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10517: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10533: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10611: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5886: Function pointer *(ops___0->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5927: Function pointer *(ops___0->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5763: Function pointer *(ops___0->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5683-5684: Function pointer *(ops___0->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5799: Function pointer *(ops___0->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5723: Function pointer *(ops___0->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9464: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9475: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9498: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9510: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10063: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10063: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_trans_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9146: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9146: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9475: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9475: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9464: Ignoring call via function pointer ldv_pci_instance_resume_2_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9464: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9498: Ignoring call via function pointer ldv_pci_instance_suspend_2_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9498: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9510: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9510: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9486: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9486: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5712: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5723: Ignoring function call through function pointer *(ops___0->unmap_page): (*(ops___0->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5337: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5927: Ignoring function call through function pointer *(ops___0->free): (*(ops___0->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9741: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1255642 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  972424 (77%)
  Because of loop head:            186478 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         96740 (8%)
  Times precision was empty:       224531 (18%)
  Times precision was {false}:     4985 (0%)
  Times result was cached:         989813 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      36313 (3%)
  Times result was 'false':        228017 (18%)
Number of strengthen sat checks:   0
Number of coverage checks:         820981
  BDD entailment checks:           677385
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       43
Number of predicates discovered:          50
Number of abstraction locations:          266
Max number of predicates per location:    42
Avg number of predicates per location:    18
Total predicates per abstraction:         18984316
Max number of predicates per abstraction: 42
Avg number of predicates per abstraction: 459.69
Number of irrelevant predicates:          3486487 (18%)
Number of preds handled by boolean abs:   676501 (4%)
  Total number of models for allsat:      123974
  Max number of models for allsat:        60
  Avg number of models for allsat:        3.41

Time for post operator:                 17.399s
  Time for path formula creation:       15.374s
Time for strengthen operator:            3.862s
Time for prec operator:                703.901s
  Time for abstraction:                693.393s (Max:     0.443s, Count: 1255642)
    Boolean abstraction:                75.566s
    Solving time:                       48.828s (Max:     0.021s)
    Model enumeration time:             13.717s
    Time for BDD construction:           5.901s (Max:     0.087s)
Time for merge operator:                 0.480s
Time for coverage check:                 0.989s
  Time for BDD entailment checks:        0.834s
Total time for SMT solver (w/o itp):    62.545s

Number of path formula cache hits:   5406936 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.222s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               148823
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      202283 (count: 1224356, min: 0, max: 2042, avg: 0.17)
Time for BDD node cleanup:                             0.244s
Time for BDD garbage collection:                       0.121s (in 3 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.378s
  Time for transition matches:                         3.574s
  Time for transition assertions:                      0.015s
  Time for transition actions:                         0.074s
Automaton transfers with branching:                0
Automaton transfer successors:                      4568737 (count: 4568737, min: 1, max: 1, avg: 1.00) [1 x 4568737]

CPA algorithm statistics
------------------------
Number of iterations:            3691220
Max size of waitlist:            69
Average size of waitlist:        22
Number of computed successors:   4141568
Max successors for one state:    2
Number of times merged:          71798
Number of times stopped:         195068
Number of times breaked:         1227

Total time for CPA algorithm:       833.053s (Max:     6.289s)
  Time for choose from waitlist:      1.844s
  Time for precision adjustment:    728.057s
  Time for transfer relation:        78.857s
  Time for merge operator:            2.377s
  Time for stop operator:             6.772s
  Time for adding to reached set:     6.006s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1227
Avg. length of target path (in blocks):              164506 (count: 1227, min: 13, max: 283, avg: 134.07)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  51.493s
  Counterexample analysis:                            42.136s (Max:     0.138s, Calls: 1227)
    Refinement sat check:                             15.457s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.086s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.659s
  Precision update:                                    2.596s
  ARG update:                                          5.279s

Length of refined path (in blocks):                  144343 (count: 1227, min: 9, max: 283, avg: 117.64)
Number of affected states:                            74246 (count: 1227, min: 4, max: 282, avg: 60.51)
Length (states) of path with itp 'true':              68870 (count: 1227, min: 0, max: 173, avg: 56.13)
Length (states) of path with itp non-trivial itp:     74246 (count: 1227, min: 4, max: 282, avg: 60.51)
Length (states) of path with itp 'false':               863 (count: 1227, min: 0, max: 1, avg: 0.70)
Different non-trivial interpolants along paths:         437 (count: 1227, min: 0, max: 5, avg: 0.36)
Equal non-trivial interpolants along paths:           72582 (count: 1227, min: 3, max: 280, avg: 59.15)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1227
Number of successful refinements:     1227
Number of failed refinements:         0
Max. size of reached set before ref.: 23450
Max. size of reached set after ref.:  20051
Avg. size of reached set before ref.: 6500.34
Avg. size of reached set after ref.:  3479.35

Total time for CEGAR algorithm:     893.697s
Time for refinements:                57.992s
Average time for refinement:          0.047s
Max time for refinement:              0.170s

Code Coverage
-----------------------------
  Function coverage:      0.102
  Visited lines:          1365
  Total lines:            3928
  Line coverage:          0.348
  Visited conditions:     126
  Total conditions:       756
  Condition coverage:     0.167

CPAchecker general statistics
-----------------------------
Number of program locations:     5808
Number of CFA edges:             6633
Number of relevant variables:    786
Number of functions:             361
Number of loops:                 16
Size of reached set:             11738
  Number of reached locations:   488 (8%)
    Avg states per location:     24
    Max states per location:     420 (at node N5090)
  Number of reached functions:   37 (10%)
  Number of partitions:          11594
    Avg size of partitions:      1
    Max size of partitions:      25 (with key [N2561 (before line 9025), Function main called from node N2550, stack depth 1 [68ed3f30], stack [main]])
  Number of target states:       0
  Size of final wait list        30

Time for analysis setup:          6.559s
  Time for loading CPAs:          1.040s
  Time for loading parser:        0.661s
  Time for CFA construction:      4.750s
    Time for parsing file(s):     1.041s
    Time for AST to CFA:          1.920s
    Time for CFA sanity check:    0.395s
    Time for post-processing:     1.178s
      Time for var class.:        0.567s
Time for Analysis:              893.697s
CPU time for analysis:          893.570s
Total time for CPAchecker:      900.261s
Total CPU time for CPAchecker:  900.120s
Time for statistics:              0.291s

Time for Garbage Collector:      42.008s (in 4469 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                275MB (   263 MiB) max;    122MB (   117 MiB) avg;    279MB (   266 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           282MB (   269 MiB) max;    184MB (   175 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8695MB (  8292 MiB) max;   8362MB (  7974 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
