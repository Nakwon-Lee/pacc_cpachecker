scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-natsemi-ns83820_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_llrohqr8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5289: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8625: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8645: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8648: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8650: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8695: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9100: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9113: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9244: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9771: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9797: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9831: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10124: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10437: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10465: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10481: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10498: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10517: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10533: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10611: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5886: Function pointer *(ops___0->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5927: Function pointer *(ops___0->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5763: Function pointer *(ops___0->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5683-5684: Function pointer *(ops___0->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5799: Function pointer *(ops___0->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5723: Function pointer *(ops___0->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9464: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9475: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9498: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9510: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10063: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10063: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9498: Ignoring call via function pointer ldv_pci_instance_suspend_2_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9498: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9510: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9510: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9475: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9475: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9464: Ignoring call via function pointer ldv_pci_instance_resume_2_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9464: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9486: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9486: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9146: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9146: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9741: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_trans_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2024158 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1777234 (88%)
  Because of loop head:            245341 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1583 (0%)
  Times precision was empty:       780070 (39%)
  Times precision was {false}:     8445 (0%)
  Times result was cached:         1193297 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      42346 (2%)
  Times result was 'false':        182347 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         6194478
  BDD entailment checks:           5581974
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       43
Number of predicates discovered:          31
Number of abstraction locations:          122
Max number of predicates per location:    30
Avg number of predicates per location:    8
Total predicates per abstraction:         14266651
Max number of predicates per abstraction: 30
Avg number of predicates per abstraction: 280.89
Number of irrelevant predicates:          6869292 (48%)
Number of preds handled by boolean abs:   421101 (3%)
  Total number of models for allsat:      239337
  Max number of models for allsat:        144
  Avg number of models for allsat:        5.65

Time for post operator:                 49.039s
  Time for path formula creation:       44.791s
Time for strengthen operator:            7.762s
Time for prec operator:                569.819s
  Time for abstraction:                549.767s (Max:     1.540s, Count: 2024158)
    Boolean abstraction:                92.547s
    Solving time:                       54.680s (Max:     0.050s)
    Model enumeration time:             26.023s
    Time for BDD construction:           8.787s (Max:     0.101s)
Time for merge operator:                 1.901s
Time for coverage check:                 5.482s
  Time for BDD entailment checks:        4.562s
Total time for SMT solver (w/o itp):    80.703s

Number of path formula cache hits:   11284226 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    25.230s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               133671
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      178130 (count: 6744614, min: 0, max: 1818, avg: 0.03)
Time for BDD node cleanup:                             0.816s
Time for BDD garbage collection:                       0.048s (in 2 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.145s
  Time for transition matches:                         6.825s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.007s
Automaton transfers with branching:                0
Automaton transfer successors:                     10145962 (count: 10145962, min: 1, max: 1, avg: 1.00) [1 x 10145962]

CPA algorithm statistics
------------------------
Number of iterations:            7627504
Max size of waitlist:            1224
Average size of waitlist:        543
Number of computed successors:   8643853
Max successors for one state:    2
Number of times merged:          306252
Number of times stopped:         572156
Number of times breaked:         683

Total time for CPA algorithm:       848.792s (Max:     6.812s)
  Time for choose from waitlist:      3.064s
  Time for precision adjustment:    620.872s
  Time for transfer relation:       161.091s
  Time for merge operator:            9.342s
  Time for stop operator:            25.307s
  Time for adding to reached set:    11.416s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   683
Avg. length of target path (in blocks):               41061 (count: 683, min: 13, max: 109, avg: 60.12)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  24.213s
  Counterexample analysis:                            10.254s (Max:     0.057s, Calls: 683)
    Refinement sat check:                              6.112s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.024s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.148s
  Precision update:                                    0.445s
  ARG update:                                         13.009s

Length of refined path (in blocks):                   23135 (count: 683, min: 9, max: 74, avg: 33.87)
Number of affected states:                             8104 (count: 683, min: 4, max: 66, avg: 11.87)
Length (states) of path with itp 'true':              14348 (count: 683, min: 0, max: 68, avg: 21.01)
Length (states) of path with itp non-trivial itp:      8104 (count: 683, min: 4, max: 66, avg: 11.87)
Length (states) of path with itp 'false':               642 (count: 683, min: 0, max: 1, avg: 0.94)
Different non-trivial interpolants along paths:          61 (count: 683, min: 0, max: 1, avg: 0.09)
Equal non-trivial interpolants along paths:            7360 (count: 683, min: 3, max: 64, avg: 10.78)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                683
Number of successful refinements:     683
Number of failed refinements:         0
Max. size of reached set before ref.: 49943
Max. size of reached set after ref.:  38327
Avg. size of reached set before ref.: 25067.70
Avg. size of reached set after ref.:  13538.94

Total time for CEGAR algorithm:     893.354s
Time for refinements:                37.432s
Average time for refinement:          0.054s
Max time for refinement:              1.361s

Code Coverage
-----------------------------
  Function coverage:      0.108
  Visited lines:          1379
  Total lines:            3928
  Line coverage:          0.351
  Visited conditions:     128
  Total conditions:       756
  Condition coverage:     0.169

CPAchecker general statistics
-----------------------------
Number of program locations:     5808
Number of CFA edges:             6633
Number of relevant variables:    786
Number of functions:             361
Number of loops:                 16
Size of reached set:             15204
  Number of reached locations:   441 (8%)
    Avg states per location:     34
    Max states per location:     176 (at node N3747)
  Number of reached functions:   39 (11%)
  Number of partitions:          15033
    Avg size of partitions:      1
    Max size of partitions:      36 (with key [N2561 (before line 9025), Function main called from node N2550, stack depth 1 [68ed3f30], stack [main]])
  Number of target states:       0
  Size of final wait list        313

Time for analysis setup:          6.918s
  Time for loading CPAs:          1.006s
  Time for loading parser:        0.653s
  Time for CFA construction:      5.140s
    Time for parsing file(s):     1.202s
    Time for AST to CFA:          1.933s
    Time for CFA sanity check:    0.413s
    Time for post-processing:     1.339s
      Time for var class.:        0.558s
Time for Analysis:              893.354s
CPU time for analysis:          893.200s
Total time for CPAchecker:      900.276s
Total CPU time for CPAchecker:  900.110s
Time for statistics:              0.380s

Time for Garbage Collector:      53.925s (in 1516 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                793MB (   756 MiB) max;    381MB (   364 MiB) avg;    823MB (   785 MiB) peak
Used non-heap memory:             41MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           835MB (   796 MiB) max;    561MB (   535 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    41 MiB) avg
Total process virtual memory:   9095MB (  8673 MiB) max;   8623MB (  8224 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
