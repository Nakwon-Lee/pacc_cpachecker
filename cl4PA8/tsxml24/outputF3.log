scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-usb-dev__drivers-net-ethernet-oki-semi-pch_gbe-pch_gbe_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_d5n7bz92/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6511: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9151: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 15466: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15486: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15489: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15491: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16087: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16100: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16982: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 17907: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 17908: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 17953: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 18781: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 18864: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18880: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18899: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18915: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18931: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18972: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18988: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 19018: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9814: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9855: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 9663-9664: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9728: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9702: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16673: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16685: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16991: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17002: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17013: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8847: Function pointer *(hw->func->write_phy_reg) with type s32 (*)(struct pch_gbe_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pch_ch_control_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pch_set_station_address to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pch_ch_event_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function enable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9217: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9286: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_trylock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msi to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9692: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 9702: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9855: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8869: Ignoring function call through function pointer *(hw->func->reset_phy): (*(hw->func->reset_phy))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8941: Ignoring function call through function pointer *(hw->func->power_down_phy): (*(hw->func->power_down_phy))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8811: Ignoring function call through function pointer *(hw->func->init_hw): tmp = (*(hw->func->init_hw))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mii_ethtool_gset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_ethtool_sset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_wake_from_d3 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1486841 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1227390 (83%)
  Because of loop head:            253694 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5757 (0%)
  Times precision was empty:       101592 (7%)
  Times precision was {false}:     1512 (0%)
  Times result was cached:         1373697 (92%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10040 (1%)
  Times result was 'false':        85913 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         1059921
  BDD entailment checks:           408371
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       69
Number of predicates discovered:          23
Number of abstraction locations:          357
Max number of predicates per location:    14
Avg number of predicates per location:    7
Total predicates per abstraction:         11001119
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 952.31
Number of irrelevant predicates:          2580052 (23%)
Number of preds handled by boolean abs:   50767 (0%)
  Total number of models for allsat:      14893
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.48

Time for post operator:                 44.312s
  Time for path formula creation:       41.065s
Time for strengthen operator:            7.103s
Time for prec operator:                392.089s
  Time for abstraction:                374.144s (Max:     0.291s, Count: 1486841)
    Boolean abstraction:                10.264s
    Solving time:                        8.226s (Max:     0.015s)
    Model enumeration time:              1.132s
    Time for BDD construction:           0.444s (Max:     0.014s)
Time for merge operator:                 2.511s
Time for coverage check:                 0.572s
  Time for BDD entailment checks:        0.417s
Total time for SMT solver (w/o itp):     9.358s

Number of path formula cache hits:   9854342 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.596s

Total number of created targets for pointer analysis: 2348
   Number of created targets for uf: *unsigned_short_int is 405
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *unsigned_char is 6
   Number of created targets for uf: *unsigned_long_long_int is 33


Number of BDD nodes:                               4016
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       23686 (count: 587463, min: 0, max: 743, avg: 0.04)
Time for BDD node cleanup:                             0.148s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.334s
  Time for transition matches:                         6.790s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.038s
Automaton transfers with branching:                0
Automaton transfer successors:                      8315943 (count: 8315943, min: 1, max: 1, avg: 1.00) [1 x 8315943]

CPA algorithm statistics
------------------------
Number of iterations:            5518439
Max size of waitlist:            146
Average size of waitlist:        83
Number of computed successors:   6297320
Max successors for one state:    2
Number of times merged:          325775
Number of times stopped:         547374
Number of times breaked:         2687

Total time for CPA algorithm:       609.166s (Max:     1.223s)
  Time for choose from waitlist:      2.509s
  Time for precision adjustment:    427.827s
  Time for transfer relation:       135.047s
  Time for merge operator:            8.845s
  Time for stop operator:            11.986s
  Time for adding to reached set:     9.282s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2687
Avg. length of target path (in blocks):              704045 (count: 2687, min: 29, max: 386, avg: 262.02)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 267.195s
  Counterexample analysis:                           250.227s (Max:     0.346s, Calls: 2687)
    Refinement sat check:                             84.085s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.324s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.235s
  Precision update:                                    3.807s
  ARG update:                                          8.986s

Length of refined path (in blocks):                  617344 (count: 2687, min: 11, max: 367, avg: 229.75)
Number of affected states:                           147366 (count: 2687, min: 1, max: 365, avg: 54.84)
Length (states) of path with itp 'true':             467291 (count: 2687, min: 1, max: 220, avg: 173.91)
Length (states) of path with itp non-trivial itp:    147366 (count: 2687, min: 1, max: 365, avg: 54.84)
Length (states) of path with itp 'false':              2639 (count: 2687, min: 0, max: 1, avg: 0.98)
Different non-trivial interpolants along paths:          66 (count: 2687, min: 0, max: 1, avg: 0.02)
Equal non-trivial interpolants along paths:          144613 (count: 2687, min: 0, max: 363, avg: 53.82)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2687
Number of successful refinements:     2687
Number of failed refinements:         0
Max. size of reached set before ref.: 9130
Max. size of reached set after ref.:  7856
Avg. size of reached set before ref.: 3961.41
Avg. size of reached set after ref.:  1854.10

Total time for CEGAR algorithm:     891.575s
Time for refinements:               279.402s
Average time for refinement:          0.103s
Max time for refinement:              0.425s

Code Coverage
-----------------------------
  Function coverage:      0.195
  Visited lines:          1893
  Total lines:            7139
  Line coverage:          0.265
  Visited conditions:     242
  Total conditions:       1630
  Condition coverage:     0.148

CPAchecker general statistics
-----------------------------
Number of program locations:     10169
Number of CFA edges:             11510
Number of relevant variables:    1592
Number of functions:             415
Number of loops:                 29
Size of reached set:             1673
  Number of reached locations:   807 (8%)
    Avg states per location:     2
    Max states per location:     32 (at node N9041)
  Number of reached functions:   81 (20%)
  Number of partitions:          1664
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N6512 (before line 15982), Function main called from node N6497, stack depth 1 [7f53fc38], stack [main]])
  Number of target states:       0
  Size of final wait list        75

Time for analysis setup:          8.652s
  Time for loading CPAs:          1.168s
  Time for loading parser:        0.683s
  Time for CFA construction:      6.640s
    Time for parsing file(s):     1.432s
    Time for AST to CFA:          2.403s
    Time for CFA sanity check:    0.609s
    Time for post-processing:     1.983s
      Time for var class.:        0.854s
Time for Analysis:              891.576s
CPU time for analysis:          891.490s
Total time for CPAchecker:      900.234s
Total CPU time for CPAchecker:  900.130s
Time for statistics:              0.142s

Time for Garbage Collector:      28.755s (in 3586 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                197MB (   188 MiB) max;    117MB (   112 MiB) avg;    204MB (   195 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           209MB (   199 MiB) max;    173MB (   165 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    41 MiB) avg
Total process virtual memory:   8155MB (  7777 MiB) max;   8141MB (  7764 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
