scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-usb-dev__drivers-net-ethernet-oki-semi-pch_gbe-pch_gbe_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xsnejjkh/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6511: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9151: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 15466: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15486: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15489: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15491: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16087: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16100: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16982: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 17907: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 17908: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 17953: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 18781: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 18864: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18880: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18899: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18915: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18931: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18972: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18988: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 19018: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9814: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9855: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 9663-9664: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9728: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9702: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16673: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16685: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16991: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17002: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17013: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8847: Function pointer *(hw->func->write_phy_reg) with type s32 (*)(struct pch_gbe_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pch_ch_control_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pch_set_station_address to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pch_ch_event_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function enable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9217: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9286: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_trylock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            14429 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12437 (86%)
  Because of loop head:            1818 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         174 (1%)
  Times precision was empty:       4326 (30%)
  Times precision was {false}:     317 (2%)
  Times result was cached:         8568 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1218 (8%)
  Times result was 'false':        2109 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         5210
  BDD entailment checks:           2836
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       69
Number of predicates discovered:          14
Number of abstraction locations:          89
Max number of predicates per location:    12
Avg number of predicates per location:    4
Total predicates per abstraction:         48507
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 31.60
Number of irrelevant predicates:          13424 (28%)
Number of preds handled by boolean abs:   5706 (12%)
  Total number of models for allsat:      1466
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.20

Time for post operator:                  3.101s
  Time for path formula creation:        2.913s
Time for strengthen operator:            0.180s
Time for prec operator:                  8.672s
  Time for abstraction:                  8.174s (Max:     0.023s, Count: 14429)
    Boolean abstraction:                 2.012s
    Solving time:                        1.587s (Max:     0.029s)
    Model enumeration time:              0.194s
    Time for BDD construction:           0.114s (Max:     0.009s)
Time for merge operator:                 0.075s
Time for coverage check:                 0.072s
  Time for BDD entailment checks:        0.070s
Total time for SMT solver (w/o itp):     1.782s

Number of path formula cache hits:   62751 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.403s

Total number of created targets for pointer analysis: 61
   Number of created targets for uf: *unsigned_short_int is 43
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *unsigned_long_long_int is 2


Number of BDD nodes:                               1574
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3564 (count: 16830, min: 0, max: 698, avg: 0.21)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.517s
  Time for transition matches:                         0.188s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.020s
Automaton transfers with branching:                0
Automaton transfer successors:                        66973 (count: 66973, min: 1, max: 1, avg: 1.00) [1 x 66973]

CPA algorithm statistics
------------------------
Number of iterations:            52541
Max size of waitlist:            114
Average size of waitlist:        41
Number of computed successors:   60547
Max successors for one state:    2
Number of times merged:          1187
Number of times stopped:         2138
Number of times breaked:         77

Total time for CPA algorithm:        17.641s (Max:     1.201s)
  Time for choose from waitlist:      0.194s
  Time for precision adjustment:      9.782s
  Time for transfer relation:         5.839s
  Time for merge operator:            0.207s
  Time for stop operator:             0.372s
  Time for adding to reached set:     0.412s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   77
Avg. length of target path (in blocks):                6548 (count: 77, min: 29, max: 102, avg: 85.04)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.558s
  Counterexample analysis:                             2.861s (Max:     0.054s, Calls: 77)
    Refinement sat check:                              1.625s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.115s
  Precision update:                                    0.106s
  ARG update:                                          0.348s

Length of refined path (in blocks):                    4527 (count: 77, min: 11, max: 84, avg: 58.79)
Number of affected states:                             2497 (count: 77, min: 4, max: 82, avg: 32.43)
Length (states) of path with itp 'true':               1953 (count: 77, min: 1, max: 59, avg: 25.36)
Length (states) of path with itp non-trivial itp:      2497 (count: 77, min: 4, max: 82, avg: 32.43)
Length (states) of path with itp 'false':                70 (count: 77, min: 0, max: 1, avg: 0.91)
Different non-trivial interpolants along paths:          10 (count: 77, min: 0, max: 1, avg: 0.13)
Equal non-trivial interpolants along paths:            2410 (count: 77, min: 3, max: 80, avg: 31.30)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                77
Number of successful refinements:     77
Number of failed refinements:         0
Max. size of reached set before ref.: 1598
Max. size of reached set after ref.:  916
Avg. size of reached set before ref.: 965.27
Avg. size of reached set after ref.:  234.91

Total time for CEGAR algorithm:      21.540s
Time for refinements:                 3.873s
Average time for refinement:          0.050s
Max time for refinement:              0.096s

Code Coverage
-----------------------------
  Function coverage:      0.024
  Visited lines:          1297
  Total lines:            7139
  Line coverage:          0.182
  Visited conditions:     16
  Total conditions:       1630
  Condition coverage:     0.010

CPAchecker general statistics
-----------------------------
Number of program locations:     10169
Number of CFA edges:             11510
Number of relevant variables:    1592
Number of functions:             415
Number of loops:                 29
Size of reached set:             62
  Number of reached locations:   62 (1%)
    Avg states per location:     1
    Max states per location:     1 (at node N6198)
  Number of reached functions:   10 (2%)
  Number of partitions:          62
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        9

Time for analysis setup:          8.708s
  Time for loading CPAs:          1.169s
  Time for loading parser:        0.712s
  Time for CFA construction:      6.669s
    Time for parsing file(s):     1.343s
    Time for AST to CFA:          2.694s
    Time for CFA sanity check:    0.747s
    Time for post-processing:     1.702s
      Time for var class.:        0.817s
Time for Analysis:               21.541s
CPU time for analysis:           21.540s
Total time for CPAchecker:       30.256s
Total CPU time for CPAchecker:   30.220s
Time for statistics:              0.108s

Time for Garbage Collector:       0.647s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 81MB (    77 MiB) max;     54MB (    51 MiB) avg;     89MB (    85 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     34MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8070MB (  7696 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
