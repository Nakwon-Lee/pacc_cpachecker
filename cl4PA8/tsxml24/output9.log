scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-usb-dev__drivers-net-ethernet-oki-semi-pch_gbe-pch_gbe_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6gps7w0f/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6511: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9151: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 15466: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15486: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15489: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15491: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16087: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16100: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16982: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 17907: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 17908: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 17953: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 18781: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 18864: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18880: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18899: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18915: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18931: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18972: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18988: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 19018: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9814: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9855: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 9663-9664: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9728: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9702: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16673: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16685: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16991: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17002: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17013: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8847: Function pointer *(hw->func->write_phy_reg) with type s32 (*)(struct pch_gbe_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pch_ch_control_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pch_set_station_address to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pch_ch_event_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function enable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9217: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9286: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_trylock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            15055 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12983 (86%)
  Because of loop head:            1893 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         179 (1%)
  Times precision was empty:       4475 (30%)
  Times precision was {false}:     345 (2%)
  Times result was cached:         8852 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1383 (9%)
  Times result was 'false':        2229 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         5481
  BDD entailment checks:           2945
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       69
Number of predicates discovered:          15
Number of abstraction locations:          89
Max number of predicates per location:    14
Avg number of predicates per location:    4
Total predicates per abstraction:         51726
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 29.93
Number of irrelevant predicates:          14023 (27%)
Number of preds handled by boolean abs:   7099 (14%)
  Total number of models for allsat:      1630
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.18

Time for post operator:                  3.010s
  Time for path formula creation:        2.904s
Time for strengthen operator:            0.146s
Time for prec operator:                  8.960s
  Time for abstraction:                  8.349s (Max:     0.020s, Count: 15055)
    Boolean abstraction:                 2.229s
    Solving time:                        1.749s (Max:     0.026s)
    Model enumeration time:              0.191s
    Time for BDD construction:           0.165s (Max:     0.016s)
Time for merge operator:                 0.100s
Time for coverage check:                 0.068s
  Time for BDD entailment checks:        0.062s
Total time for SMT solver (w/o itp):     1.941s

Number of path formula cache hits:   65797 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.403s

Total number of created targets for pointer analysis: 62
   Number of created targets for uf: *unsigned_short_int is 43
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *unsigned_long_long_int is 3


Number of BDD nodes:                               1662
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4039 (count: 18339, min: 0, max: 748, avg: 0.22)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.433s
Automaton transfers with branching:                0
Automaton transfer successors:                        70000 (count: 70000, min: 1, max: 1, avg: 1.00) [1 x 70000]

CPA algorithm statistics
------------------------
Number of iterations:            54977
Max size of waitlist:            114
Average size of waitlist:        41
Number of computed successors:   63389
Max successors for one state:    2
Number of times merged:          1268
Number of times stopped:         2259
Number of times breaked:         79

Total time for CPA algorithm:        17.367s (Max:     1.096s)
  Time for choose from waitlist:      0.105s
  Time for precision adjustment:      9.935s
  Time for transfer relation:         5.686s
  Time for merge operator:            0.193s
  Time for stop operator:             0.313s
  Time for adding to reached set:     0.327s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   79
Avg. length of target path (in blocks):                6730 (count: 79, min: 29, max: 102, avg: 85.19)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.526s
  Counterexample analysis:                             2.846s (Max:     0.058s, Calls: 79)
    Refinement sat check:                              1.600s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.167s
  Precision update:                                    0.106s
  ARG update:                                          0.270s

Length of refined path (in blocks):                    4642 (count: 79, min: 11, max: 84, avg: 58.76)
Number of affected states:                             2580 (count: 79, min: 4, max: 82, avg: 32.66)
Length (states) of path with itp 'true':               1983 (count: 79, min: 1, max: 59, avg: 25.10)
Length (states) of path with itp non-trivial itp:      2580 (count: 79, min: 4, max: 82, avg: 32.66)
Length (states) of path with itp 'false':                72 (count: 79, min: 0, max: 1, avg: 0.91)
Different non-trivial interpolants along paths:          10 (count: 79, min: 0, max: 1, avg: 0.13)
Equal non-trivial interpolants along paths:            2491 (count: 79, min: 3, max: 80, avg: 31.53)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                79
Number of successful refinements:     79
Number of failed refinements:         0
Max. size of reached set before ref.: 1598
Max. size of reached set after ref.:  916
Avg. size of reached set before ref.: 972.44
Avg. size of reached set after ref.:  231.29

Total time for CEGAR algorithm:      21.178s
Time for refinements:                 3.790s
Average time for refinement:          0.047s
Max time for refinement:              0.111s

Code Coverage
-----------------------------
  Function coverage:      0.060
  Visited lines:          1405
  Total lines:            7139
  Line coverage:          0.197
  Visited conditions:     44
  Total conditions:       1630
  Condition coverage:     0.027

CPAchecker general statistics
-----------------------------
Number of program locations:     10169
Number of CFA edges:             11510
Number of relevant variables:    1592
Number of functions:             415
Number of loops:                 29
Size of reached set:             350
  Number of reached locations:   196 (2%)
    Avg states per location:     1
    Max states per location:     12 (at node N9041)
  Number of reached functions:   25 (6%)
  Number of partitions:          347
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N6512 (before line 15982), Function main called from node N6497, stack depth 1 [9bf63d2], stack [main]])
  Number of target states:       0
  Size of final wait list        24

Time for analysis setup:          9.041s
  Time for loading CPAs:          1.255s
  Time for loading parser:        0.765s
  Time for CFA construction:      6.888s
    Time for parsing file(s):     1.400s
    Time for AST to CFA:          2.554s
    Time for CFA sanity check:    0.768s
    Time for post-processing:     1.998s
      Time for var class.:        0.810s
Time for Analysis:               21.179s
CPU time for analysis:           21.170s
Total time for CPAchecker:       30.235s
Total CPU time for CPAchecker:   30.200s
Time for statistics:              0.134s

Time for Garbage Collector:       0.700s (in 49 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 85MB (    81 MiB) max;     54MB (    51 MiB) avg;     89MB (    84 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    32 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8069MB (  7695 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
