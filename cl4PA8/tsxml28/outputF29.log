scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__linux-usb-dev__drivers-net-wireless-ipw2x00-ipw2100_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_479p62o6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7253: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 7360: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7365: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7375: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 7379: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 24538: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 24984: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 25009: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 25084: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 25114: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 25172: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 25179: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 25180: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 25187: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 25188: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 25189: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 25196: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 25197: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 25198: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 25199: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 25205: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 25206: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 25207: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 25208: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 25209: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 25216: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 25217: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 25218: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 25219: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 25220: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 25221: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 25345: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 25376: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 25454: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 25494: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 25495: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 25539: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 25557: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 25589: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 25601: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 25615: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 25627: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 25641: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 25653: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 25667: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 25679: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 25693: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 25705: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 25719: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 25730: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 25744: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 25757: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 25800: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 25815: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 26054: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 26070: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 26136: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7900: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7941: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7694-7695: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7773: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7813: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7733: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 23003: Function pointer *(crypt->ops->set_flags) with type unsigned long int (*)(unsigned long, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 25766: Function pointer *arg0 with type void (*)(unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function pm_qos_add_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 24738: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 24712: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 24715: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 24718: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 24721: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 24724: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 24690: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 24676: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 25564: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function pm_qos_remove_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtouint to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 25766: Ignoring call via function pointer ldv_timer_instance_callback_10_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 25766: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 25341: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_libipw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_txb_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_update_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wireless_send_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_seconds to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 25308: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 25308: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 25273: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 25273: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_networks_age to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_libipw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_uninterruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            638567 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  584587 (92%)
  Because of loop head:            53409 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         571 (0%)
  Times precision was empty:       123140 (19%)
  Times precision was {false}:     1931 (0%)
  Times result was cached:         507543 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5953 (1%)
  Times result was 'false':        33210 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         401192
  BDD entailment checks:           143008
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       113
Number of predicates discovered:          20
Number of abstraction locations:          383
Max number of predicates per location:    6
Avg number of predicates per location:    1
Total predicates per abstraction:         1488607
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 188.81
Number of irrelevant predicates:          687743 (46%)
Number of preds handled by boolean abs:   12775 (1%)
  Total number of models for allsat:      9993
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.68

Time for post operator:                128.000s
  Time for path formula creation:      125.951s
Time for strengthen operator:            3.709s
Time for prec operator:                501.317s
  Time for abstraction:                490.166s (Max:     4.297s, Count: 638567)
    Boolean abstraction:               269.357s
    Solving time:                      179.882s (Max:     1.911s)
    Model enumeration time:            104.853s
    Time for BDD construction:           0.304s (Max:     0.026s)
Time for merge operator:                 3.427s
Time for coverage check:                 0.270s
  Time for BDD entailment checks:        0.209s
Total time for SMT solver (w/o itp):   284.735s

Number of path formula cache hits:   4057525 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    98.118s

Total number of created targets for pointer analysis: 1409311
   Number of created targets for uf: *(void)* is 4
   Number of created targets for uf: *(struct_device_private)* is 7
   Number of created targets for uf: *signed_int is 12
   Number of created targets for uf: *unsigned_char is 5405
   Number of created targets for uf: *(struct_list_head)* is 583
   Number of created targets for uf: *(struct_firmware)* is 14
   Number of created targets for uf: *(struct_timer_list)* is 124
   Number of created targets for uf: *(struct_pci_driver)* is 2
   Number of created targets for uf: *unsigned_int is 404
   Number of created targets for uf: *char is 127
   Number of created targets for uf: *unsigned_long_int is 73


Number of BDD nodes:                               532
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       11877 (count: 319503, min: 0, max: 182, avg: 0.04)
Time for BDD node cleanup:                             0.107s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.666s
  Time for transition matches:                         3.109s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      4050293 (count: 4050293, min: 1, max: 1, avg: 1.00) [1 x 4050293]

CPA algorithm statistics
------------------------
Number of iterations:            2407968
Max size of waitlist:            1065
Average size of waitlist:        346
Number of computed successors:   2692386
Max successors for one state:    2
Number of times merged:          129092
Number of times stopped:         216008
Number of times breaked:         347

Total time for CPA algorithm:       747.842s (Max:    41.649s)
  Time for choose from waitlist:      1.421s
  Time for precision adjustment:    519.794s
  Time for transfer relation:       205.665s
  Time for merge operator:            5.470s
  Time for stop operator:             3.187s
  Time for adding to reached set:     4.608s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   347
Avg. length of target path (in blocks):               59423 (count: 347, min: 28, max: 247, avg: 171.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 129.784s
  Counterexample analysis:                           124.138s (Max:     1.351s, Calls: 347)
    Refinement sat check:                            104.549s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.037s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.295s
  Precision update:                                    0.392s
  ARG update:                                          4.554s

Length of refined path (in blocks):                   40133 (count: 346, min: 28, max: 247, avg: 115.99)
Number of affected states:                            24392 (count: 346, min: 1, max: 245, avg: 70.50)
Length (states) of path with itp 'true':              15395 (count: 346, min: 1, max: 118, avg: 44.49)
Length (states) of path with itp non-trivial itp:     24392 (count: 346, min: 1, max: 245, avg: 70.50)
Length (states) of path with itp 'false':               256 (count: 346, min: 0, max: 1, avg: 0.74)
Different non-trivial interpolants along paths:          97 (count: 346, min: 0, max: 5, avg: 0.28)
Equal non-trivial interpolants along paths:           23949 (count: 346, min: 0, max: 243, avg: 69.22)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                347
Number of successful refinements:     346
Number of failed refinements:         0
Max. size of reached set before ref.: 77878
Max. size of reached set after ref.:  74344
Avg. size of reached set before ref.: 25871.18
Avg. size of reached set after ref.:  18884.77

Total time for CEGAR algorithm:     890.809s
Time for refinements:               137.848s
Average time for refinement:          0.397s
Max time for refinement:              1.551s

Code Coverage
-----------------------------
  Function coverage:      0.397
  Visited lines:          3749
  Total lines:            11337
  Line coverage:          0.331
  Visited conditions:     686
  Total conditions:       2774
  Condition coverage:     0.247

CPAchecker general statistics
-----------------------------
Number of program locations:     15757
Number of CFA edges:             17913
Number of relevant variables:    1943
Number of functions:             421
Number of loops:                 86
Size of reached set:             43927
  Number of reached locations:   2230 (14%)
    Avg states per location:     19
    Max states per location:     925 (at node N77)
  Number of reached functions:   167 (40%)
  Number of partitions:          43428
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N10771 (before line 20764), Function ipw2100_pci_init_one called from node N14108, stack depth 10 [53bd8fd7], stack [main, ldv_entry_EMGentry_18, ldv_EMGentry_init_ipw2100_init_18_15, ipw2100_init, ldv___pci_register_driver_41, ldv___pci_register_driver, ldv_dispatch_register_17_2, ldv_pci_pci_instance_2, ldv_pci_instance_probe_2_17, ipw2100_pci_init_one]])
  Number of target states:       1
  Size of final wait list        558

Time for analysis setup:          9.946s
  Time for loading CPAs:          1.207s
  Time for loading parser:        0.772s
  Time for CFA construction:      7.811s
    Time for parsing file(s):     1.524s
    Time for AST to CFA:          3.206s
    Time for CFA sanity check:    0.740s
    Time for post-processing:     2.051s
      Time for var class.:        1.321s
Time for Analysis:              890.809s
CPU time for analysis:          890.710s
Total time for CPAchecker:      900.760s
Total CPU time for CPAchecker:  900.630s
Time for statistics:              0.833s

Time for Garbage Collector:      35.679s (in 992 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                585MB (   558 MiB) max;    307MB (   292 MiB) avg;    622MB (   593 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:           667MB (   636 MiB) max;    435MB (   414 MiB) avg
Allocated non-heap memory:        46MB (    43 MiB) max;     45MB (    43 MiB) avg
Total process virtual memory:   8487MB (  8094 MiB) max;   8302MB (  7917 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
