scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-drivers-clk1__drivers-media-usb-gspca-gspca_ov519_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_t_p7ksxj/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13638: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13790: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13988: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13703: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13714: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_handler_init_class to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_new_std to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_new_std_menu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_auto_cluster to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_cluster to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_s_ctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_g_ctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_grab to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_ifnum_to_if to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_altnum_to_altsetting to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gspca_frame_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gspca_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gspca_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13703: Ignoring call via function pointer ldv_usb_instance_post_2_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13703: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13714: Ignoring call via function pointer ldv_usb_instance_pre_2_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13714: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13959: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13935: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(1992UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gspca_dev_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gspca_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1488923 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1422594 (96%)
  Because of loop head:            66321 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8 (0%)
  Times precision was empty:       1488354 (100%)
  Times precision was {false}:     124 (0%)
  Times result was cached:         377 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      68 (0%)
  Times result was 'false':        52 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         2328524
  BDD entailment checks:           350948
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       470
Number of predicates discovered:          8
Number of abstraction locations:          53
Max number of predicates per location:    6
Avg number of predicates per location:    1
Total predicates per abstraction:         1142
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 5.95
Number of irrelevant predicates:          846 (74%)
Number of preds handled by boolean abs:   131 (11%)
  Total number of models for allsat:      63
  Max number of models for allsat:        4
  Avg number of models for allsat:        0.93

Time for post operator:                441.839s
  Time for path formula creation:      427.611s
Time for strengthen operator:           10.532s
Time for prec operator:                 28.488s
  Time for abstraction:                  5.750s (Max:     0.054s, Count: 1488923)
    Boolean abstraction:                 0.269s
    Solving time:                        0.322s (Max:     0.034s)
    Model enumeration time:              0.007s
    Time for BDD construction:           0.007s (Max:     0.001s)
Time for merge operator:                18.381s
Time for coverage check:                 0.544s
  Time for BDD entailment checks:        0.252s
Total time for SMT solver (w/o itp):     0.329s

Number of path formula cache hits:   12026759 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   364.822s

Total number of created targets for pointer analysis: 4661327
   Number of created targets for uf: *unsigned_char is 621
   Number of created targets for uf: *unsigned_int is 33


Number of BDD nodes:                               249
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         241 (count: 1840399, min: 0, max: 43, avg: 0.00)
Time for BDD node cleanup:                             0.373s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 15.638s
  Time for transition matches:                         9.118s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     12228577 (count: 12228577, min: 1, max: 1, avg: 1.00) [1 x 12228577]

CPA algorithm statistics
------------------------
Number of iterations:            8703056
Max size of waitlist:            49
Average size of waitlist:        34
Number of computed successors:   10042917
Max successors for one state:    2
Number of times merged:          988788
Number of times stopped:         1339680
Number of times breaked:         8

Total time for CPA algorithm:       864.543s (Max:   367.298s)
  Time for choose from waitlist:      4.258s
  Time for precision adjustment:    113.362s
  Time for transfer relation:       660.134s
  Time for merge operator:           31.322s
  Time for stop operator:            12.354s
  Time for adding to reached set:    18.380s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                 281 (count: 8, min: 13, max: 60, avg: 35.13)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  24.270s
  Counterexample analysis:                             0.445s (Max:     0.066s, Calls: 8)
    Refinement sat check:                              0.352s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.007s
  ARG update:                                         23.785s

Length of refined path (in blocks):                     173 (count: 8, min: 9, max: 60, avg: 21.63)
Number of affected states:                              141 (count: 8, min: 4, max: 59, avg: 17.63)
Length (states) of path with itp 'true':                 24 (count: 8, min: 0, max: 4, avg: 3.00)
Length (states) of path with itp non-trivial itp:       141 (count: 8, min: 4, max: 59, avg: 17.63)
Length (states) of path with itp 'false':                 6 (count: 8, min: 0, max: 1, avg: 0.75)
Different non-trivial interpolants along paths:           2 (count: 8, min: 0, max: 1, avg: 0.25)
Equal non-trivial interpolants along paths:             131 (count: 8, min: 3, max: 57, avg: 16.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 1483021
Max. size of reached set after ref.:  12
Avg. size of reached set before ref.: 952945.25
Avg. size of reached set after ref.:  9.75

Total time for CEGAR algorithm:     892.946s
Time for refinements:                28.403s
Average time for refinement:          3.550s
Max time for refinement:              5.655s

Code Coverage
-----------------------------
  Function coverage:      0.623
  Visited lines:          4886
  Total lines:            5538
  Line coverage:          0.882
  Visited conditions:     1100
  Total conditions:       1294
  Condition coverage:     0.850

CPAchecker general statistics
-----------------------------
Number of program locations:     7483
Number of CFA edges:             8595
Number of relevant variables:    939
Number of functions:             183
Number of loops:                 18
Size of reached set:             1079702
  Size of final wait list        37

Time for analysis setup:          7.317s
  Time for loading CPAs:          1.246s
  Time for loading parser:        0.716s
  Time for CFA construction:      5.202s
    Time for parsing file(s):     1.179s
    Time for AST to CFA:          1.872s
    Time for CFA sanity check:    0.432s
    Time for post-processing:     1.487s
      Time for var class.:        0.841s
Time for Analysis:              892.946s
CPU time for analysis:          892.900s
Total time for CPAchecker:      900.267s
Total CPU time for CPAchecker:  900.200s
Time for statistics:              5.780s

Time for Garbage Collector:     131.741s (in 511 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               3088MB (  2945 MiB) max;   1635MB (  1559 MiB) avg;   3197MB (  3049 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          3158MB (  3012 MiB) max;   2371MB (  2261 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8214MB (  7834 MiB) max;   8183MB (  7804 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
