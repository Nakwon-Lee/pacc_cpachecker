scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-drivers-clk1__drivers-media-usb-gspca-gspca_ov519_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fqdfo3md/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13638: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13790: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13988: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13703: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13714: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_grab to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_g_ctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_ifnum_to_if to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_altnum_to_altsetting to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_s_ctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_handler_init_class to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_new_std to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_new_std_menu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_auto_cluster to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_cluster to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gspca_frame_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13714: Ignoring call via function pointer ldv_usb_instance_pre_2_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13714: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13703: Ignoring call via function pointer ldv_usb_instance_post_2_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13703: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function gspca_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gspca_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13959: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13935: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(1992UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gspca_dev_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gspca_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1367087 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1306193 (96%)
  Because of loop head:            60881 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (0%)
  Times precision was empty:       1366436 (100%)
  Times precision was {false}:     118 (0%)
  Times result was cached:         430 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      103 (0%)
  Times result was 'false':        48 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         2138864
  BDD entailment checks:           322264
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       470
Number of predicates discovered:          7
Number of abstraction locations:          52
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         1233
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 5.58
Number of irrelevant predicates:          841 (68%)
Number of preds handled by boolean abs:   143 (12%)
  Total number of models for allsat:      95
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.92

Time for post operator:                450.860s
  Time for path formula creation:      445.368s
Time for strengthen operator:           10.095s
Time for prec operator:                 34.201s
  Time for abstraction:                  6.065s (Max:     0.544s, Count: 1367087)
    Boolean abstraction:                 0.322s
    Solving time:                        0.394s (Max:     0.036s)
    Model enumeration time:              0.009s
    Time for BDD construction:           0.020s (Max:     0.013s)
Time for merge operator:                19.107s
Time for coverage check:                 0.559s
  Time for BDD entailment checks:        0.297s
Total time for SMT solver (w/o itp):     0.403s

Number of path formula cache hits:   10419681 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   389.313s

Total number of created targets for pointer analysis: 3121441
   Number of created targets for uf: *unsigned_char is 805
   Number of created targets for uf: *unsigned_int is 33


Number of BDD nodes:                               216
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         263 (count: 1689957, min: 0, max: 61, avg: 0.00)
Time for BDD node cleanup:                             0.288s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 15.607s
  Time for transition matches:                         8.648s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     11230511 (count: 11230511, min: 1, max: 1, avg: 1.00) [1 x 11230511]

CPA algorithm statistics
------------------------
Number of iterations:            7992779
Max size of waitlist:            50
Average size of waitlist:        35
Number of computed successors:   9223406
Max successors for one state:    2
Number of times merged:          908300
Number of times stopped:         1230478
Number of times breaked:         7

Total time for CPA algorithm:       866.525s (Max:   371.089s)
  Time for choose from waitlist:      3.744s
  Time for precision adjustment:    108.372s
  Time for transfer relation:       655.598s
  Time for merge operator:           42.262s
  Time for stop operator:            14.164s
  Time for adding to reached set:    17.492s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                 265 (count: 7, min: 13, max: 60, avg: 37.86)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  22.413s
  Counterexample analysis:                             0.466s (Max:     0.085s, Calls: 7)
    Refinement sat check:                              0.366s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.005s
  ARG update:                                         21.919s

Length of refined path (in blocks):                     202 (count: 7, min: 9, max: 60, avg: 28.86)
Number of affected states:                              179 (count: 7, min: 4, max: 59, avg: 25.57)
Length (states) of path with itp 'true':                 16 (count: 7, min: 0, max: 4, avg: 2.29)
Length (states) of path with itp non-trivial itp:       179 (count: 7, min: 4, max: 59, avg: 25.57)
Length (states) of path with itp 'false':                 4 (count: 7, min: 0, max: 1, avg: 0.57)
Different non-trivial interpolants along paths:           3 (count: 7, min: 0, max: 1, avg: 0.43)
Equal non-trivial interpolants along paths:             169 (count: 7, min: 3, max: 57, avg: 24.14)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 1483078
Max. size of reached set after ref.:  12
Avg. size of reached set before ref.: 877266.14
Avg. size of reached set after ref.:  8.14

Total time for CEGAR algorithm:     892.894s
Time for refinements:                26.364s
Average time for refinement:          3.766s
Max time for refinement:              7.062s

Code Coverage
-----------------------------
  Function coverage:      0.847
  Visited lines:          5379
  Total lines:            5538
  Line coverage:          0.971
  Visited conditions:     1256
  Total conditions:       1294
  Condition coverage:     0.971

CPAchecker general statistics
-----------------------------
Number of program locations:     7483
Number of CFA edges:             8595
Number of relevant variables:    939
Number of functions:             183
Number of loops:                 18
Size of reached set:             1852074
  Size of final wait list        30

Time for analysis setup:          7.392s
  Time for loading CPAs:          1.092s
  Time for loading parser:        0.689s
  Time for CFA construction:      5.446s
    Time for parsing file(s):     1.236s
    Time for AST to CFA:          1.984s
    Time for CFA sanity check:    0.463s
    Time for post-processing:     1.508s
      Time for var class.:        0.839s
Time for Analysis:              892.894s
CPU time for analysis:          892.850s
Total time for CPAchecker:      900.290s
Total CPU time for CPAchecker:  900.230s
Time for statistics:              9.052s

Time for Garbage Collector:     143.890s (in 476 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               3854MB (  3676 MiB) max;   1689MB (  1611 MiB) avg;   3939MB (  3757 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     38MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          5306MB (  5060 MiB) max;   2469MB (  2354 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8282MB (  7898 MiB) max;   8190MB (  7810 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
