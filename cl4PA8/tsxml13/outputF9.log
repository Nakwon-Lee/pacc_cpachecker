scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-drivers-clk1__drivers-net-ethernet-broadcom-tg3_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2p6hxzob/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6794: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8636: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 8659: Dead code detected: Goto: case_1___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 8664: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 8674: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 8678: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 8641: Dead code detected: Goto: case_2___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 8703: Dead code detected: Goto: case_1___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 8708: Dead code detected: Goto: case_2___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 8718: Dead code detected: Goto: case_8___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 8722: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 8747: Dead code detected: Goto: case_1___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 8752: Dead code detected: Goto: case_2___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 8762: Dead code detected: Goto: case_8___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 8766: Dead code detected: Goto: switch_default___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 8651: Dead code detected: Goto: case_8___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 8791: Dead code detected: Goto: case_1___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 8796: Dead code detected: Goto: case_2___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 8806: Dead code detected: Goto: case_8___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 8810: Dead code detected: Goto: switch_default___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 8655: Dead code detected: Goto: switch_default___3 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_4___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 19945: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 19968: Dead code detected: Goto: case_1___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 19973: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 19983: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 19987: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 19950: Dead code detected: Goto: case_2___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 20012: Dead code detected: Goto: case_1___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 20017: Dead code detected: Goto: case_2___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 20027: Dead code detected: Goto: case_8___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 20031: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 20056: Dead code detected: Goto: case_1___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 20061: Dead code detected: Goto: case_2___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 20071: Dead code detected: Goto: case_8___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 20075: Dead code detected: Goto: switch_default___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 19960: Dead code detected: Goto: case_8___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 20100: Dead code detected: Goto: case_1___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 20105: Dead code detected: Goto: case_2___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 20115: Dead code detected: Goto: case_8___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 20119: Dead code detected: Goto: switch_default___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 19964: Dead code detected: Goto: switch_default___3 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_4___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 32385: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 41314: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 41334: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 41337: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 41339: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 41487: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 42718: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 42731: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 43868: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 44766: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 44808: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 44809: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 44854: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 45963: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 46056: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 46075: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 46106: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 46195: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 46212: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 46228: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 46282: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7809: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7850: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7582: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7503-7504: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7723: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7657: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7697: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7617: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7542: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 42391: Function pointer *arg0 with type long int (*)(struct device *, struct device_attribute *, char *, unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43571: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43583: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43877: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43888: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43899: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 21616: Ignoring function call through function pointer *(tp->read32): tmp = (*(tp->read32))(tp, 112U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_get_num_default_rss_queues to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 43147: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12830: Ignoring function call through function pointer *(tp->write32): (*(tp->write32))(tp, 1104U, 1U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12826: Ignoring function call through function pointer *(tp->write32): (*(tp->write32))(tp, 1104U, 3U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12842: Ignoring function call through function pointer *(tp->write32): (*(tp->write32))(tp, 1124U, 9760U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12838: Ignoring function call through function pointer *(tp->write32): (*(tp->write32))(tp, 1124U, 9983U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 30698: Ignoring function call through function pointer *(tp->write32): (*(tp->write32))(tp, 1036U, tp->led_ctrl); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 30693: Ignoring function call through function pointer *(tp->write32): (*(tp->write32))(tp, 1036U, 17U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 30688: Ignoring function call through function pointer *(tp->write32): (*(tp->write32))(tp, 1036U, 127U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function device_set_wakeup_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ptp_clock_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __local_bh_disable_ip to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __local_bh_enable_ip to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function phy_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10955: Ignoring function call through function pointer *(tp->write32): (*(tp->write32))(tp, 104U, (tp->misc_host_ctrl) | 2U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10197: Ignoring function call through function pointer *(tp->write32_mbox): (*(tp->write32_mbox))(tp, off, val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10202: Ignoring function call through function pointer *(tp->read32_mbox): (*(tp->read32_mbox))(tp, off); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10214: Ignoring function call through function pointer *(tp->read32_mbox): (*(tp->read32_mbox))(tp, off); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10153: Ignoring function call through function pointer *(tp->write32): (*(tp->write32))(tp, off, val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 10153: Unsupported feature (recursion): tg3_write_mem(tp, off, val); (line was originally pointer call(tg3_write_mem) (*(tp->write32))(tp, off, val);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            31807 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  28304 (89%)
  Because of loop head:            3212 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         291 (1%)
  Times precision was empty:       9335 (29%)
  Times precision was {false}:     566 (2%)
  Times result was cached:         19837 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2069 (7%)
  Times result was 'false':        7170 (23%)
Number of strengthen sat checks:   0
Number of coverage checks:         8140
  BDD entailment checks:           5286
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       85
Number of predicates discovered:          15
Number of abstraction locations:          116
Max number of predicates per location:    14
Avg number of predicates per location:    4
Total predicates per abstraction:         121139
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 45.97
Number of irrelevant predicates:          32241 (27%)
Number of preds handled by boolean abs:   11066 (9%)
  Total number of models for allsat:      2273
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.10

Time for post operator:                  4.683s
  Time for path formula creation:        4.467s
Time for strengthen operator:            0.389s
Time for prec operator:                 14.725s
  Time for abstraction:                 13.785s (Max:     0.057s, Count: 31807)
    Boolean abstraction:                 2.638s
    Solving time:                        2.089s (Max:     0.029s)
    Model enumeration time:              0.239s
    Time for BDD construction:           0.194s (Max:     0.012s)
Time for merge operator:                 0.155s
Time for coverage check:                 0.091s
  Time for BDD entailment checks:        0.080s
Total time for SMT solver (w/o itp):     2.328s

Number of path formula cache hits:   145541 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.449s

Total number of created targets for pointer analysis: 1260
   Number of created targets for uf: *unsigned_short_int is 81
   Number of created targets for uf: *unsigned_int is 21


Number of BDD nodes:                               1997
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5625 (count: 31438, min: 0, max: 862, avg: 0.18)
Time for BDD node cleanup:                             0.039s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.723s
  Time for transition matches:                         0.293s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.016s
Automaton transfers with branching:                0
Automaton transfer successors:                       154785 (count: 154785, min: 1, max: 1, avg: 1.00) [1 x 154785]

CPA algorithm statistics
------------------------
Number of iterations:            123890
Max size of waitlist:            189
Average size of waitlist:        62
Number of computed successors:   143541
Max successors for one state:    2
Number of times merged:          1427
Number of times stopped:         3166
Number of times breaked:         115

Total time for CPA algorithm:        28.526s (Max:     1.143s)
  Time for choose from waitlist:      0.202s
  Time for precision adjustment:     16.345s
  Time for transfer relation:         9.380s
  Time for merge operator:            0.287s
  Time for stop operator:             0.567s
  Time for adding to reached set:     0.608s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   115
Avg. length of target path (in blocks):                9806 (count: 115, min: 27, max: 115, avg: 85.27)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.730s
  Counterexample analysis:                             4.762s (Max:     0.062s, Calls: 115)
    Refinement sat check:                              2.882s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.133s
  Precision update:                                    0.157s
  ARG update:                                          0.527s

Length of refined path (in blocks):                    6744 (count: 115, min: 9, max: 93, avg: 58.64)
Number of affected states:                             4539 (count: 115, min: 4, max: 92, avg: 39.47)
Length (states) of path with itp 'true':               2090 (count: 115, min: 0, max: 57, avg: 18.17)
Length (states) of path with itp non-trivial itp:      4539 (count: 115, min: 4, max: 92, avg: 39.47)
Length (states) of path with itp 'false':               106 (count: 115, min: 0, max: 1, avg: 0.92)
Different non-trivial interpolants along paths:          12 (count: 115, min: 0, max: 1, avg: 0.10)
Equal non-trivial interpolants along paths:            4412 (count: 115, min: 3, max: 90, avg: 38.37)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                115
Number of successful refinements:     115
Number of failed refinements:         0
Max. size of reached set before ref.: 2611
Max. size of reached set after ref.:  1122
Avg. size of reached set before ref.: 1330.37
Avg. size of reached set after ref.:  193.24

Total time for CEGAR algorithm:      34.714s
Time for refinements:                 6.150s
Average time for refinement:          0.053s
Max time for refinement:              0.107s

Code Coverage
-----------------------------
  Function coverage:      0.139
  Visited lines:          2199
  Total lines:            19856
  Line coverage:          0.111
  Visited conditions:     332
  Total conditions:       14250
  Condition coverage:     0.023

CPAchecker general statistics
-----------------------------
Number of program locations:     38656
Number of CFA edges:             51649
Number of relevant variables:    4333
Number of functions:             768
Number of loops:                 192
Size of reached set:             2436
  Number of reached locations:   1130 (3%)
    Avg states per location:     2
    Max states per location:     33 (at node N29435)
  Number of reached functions:   107 (14%)
  Number of partitions:          2427
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N26576 (before line 42593), Function main called from node N26559, stack depth 1 [4134db1e], stack [main]])
  Number of target states:       0
  Size of final wait list        99

Time for analysis setup:         15.509s
  Time for loading CPAs:          1.387s
  Time for loading parser:        0.687s
  Time for CFA construction:     13.259s
    Time for parsing file(s):     1.968s
    Time for AST to CFA:          4.366s
    Time for CFA sanity check:    1.197s
    Time for post-processing:     5.588s
      Time for var class.:        2.670s
Time for Analysis:               34.714s
CPU time for analysis:           34.720s
Total time for CPAchecker:       50.235s
Total CPU time for CPAchecker:   50.200s
Time for statistics:              0.238s

Time for Garbage Collector:       1.700s (in 88 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                168MB (   160 MiB) max;    117MB (   112 MiB) avg;    220MB (   210 MiB) peak
Used non-heap memory:             49MB (    47 MiB) max;     41MB (    39 MiB) avg;     50MB (    47 MiB) peak
Allocated heap memory:           205MB (   195 MiB) max;    190MB (   181 MiB) avg
Allocated non-heap memory:        51MB (    49 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
