scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-ethernet-cisco-enic-enic_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yi07030j/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6542: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6635: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6640: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6650: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 6654: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7772: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7795: Dead code detected: Goto: case_1___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7800: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7810: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 7814: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 7777: Dead code detected: Goto: case_2___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7839: Dead code detected: Goto: case_1___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7844: Dead code detected: Goto: case_2___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7854: Dead code detected: Goto: case_8___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7858: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7883: Dead code detected: Goto: case_1___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7888: Dead code detected: Goto: case_2___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7898: Dead code detected: Goto: case_8___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7902: Dead code detected: Goto: switch_default___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7787: Dead code detected: Goto: case_8___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7927: Dead code detected: Goto: case_1___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 7932: Dead code detected: Goto: case_2___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 7942: Dead code detected: Goto: case_8___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 7946: Dead code detected: Goto: switch_default___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7791: Dead code detected: Goto: switch_default___3 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_4___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13428: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13448: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13451: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13453: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13523: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 14011: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14024: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14249: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 14923: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14965: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 14966: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15011: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15399: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15570: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15625: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15644: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15663: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15679: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15695: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15711: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15752: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15768: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15822: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7142: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7183: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7019: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6940-6941: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7054: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6979: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14616: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14627: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14650: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14662: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8589-8590: Function pointer *q_service with type int (*)(struct vnic_dev *, struct cq_desc *, u8 , u16 , u16 , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14069: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14069: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __napi_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 8589-8590: Function pointer vnic_cq_service::q_service points to enic_wq_service, but no corresponding call edge was created during preprocessing. Ignoring function pointer call: tmp = (*q_service)(cq->vdev, cq_desc, (int)type, (int)q_number, (int)completed_index, opaque); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 8589-8590: Ignoring function call through function pointer *q_service: tmp = (*q_service)(cq->vdev, cq_desc, (int)type, (int)q_number, (int)completed_index, opaque); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14081: Ignoring call via function pointer ldv_interrupt_instance_thread_1_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14081: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7142: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14463: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6593: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7183: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6933: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __local_bh_disable_ip to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __local_bh_enable_ip to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_napi_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msi to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msix to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_sriov to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6969: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 6979: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7044: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 7054: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, (struct dma_attrs *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1374763 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1135499 (83%)
  Because of loop head:            238699 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         565 (0%)
  Times precision was empty:       505706 (37%)
  Times precision was {false}:     5450 (0%)
  Times result was cached:         850098 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      13509 (1%)
  Times result was 'false':        31432 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1078176
  BDD entailment checks:           417674
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       72
Number of predicates discovered:          20
Number of abstraction locations:          433
Max number of predicates per location:    19
Avg number of predicates per location:    6
Total predicates per abstraction:         5839397
Max number of predicates per abstraction: 19
Avg number of predicates per abstraction: 308.00
Number of irrelevant predicates:          3260803 (56%)
Number of preds handled by boolean abs:   88533 (2%)
  Total number of models for allsat:      43446
  Max number of models for allsat:        100
  Avg number of models for allsat:        3.22

Time for post operator:                238.657s
  Time for path formula creation:      234.468s
Time for strengthen operator:            6.428s
Time for prec operator:                258.163s
  Time for abstraction:                234.992s (Max:     3.955s, Count: 1374763)
    Boolean abstraction:                17.788s
    Solving time:                       14.280s (Max:     0.037s)
    Model enumeration time:              3.464s
    Time for BDD construction:           1.100s (Max:     0.012s)
Time for merge operator:                14.263s
Time for coverage check:                 0.637s
  Time for BDD entailment checks:        0.434s
Total time for SMT solver (w/o itp):    17.744s

Number of path formula cache hits:   3954764 (51%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   198.292s

Total number of created targets for pointer analysis: 244736
   Number of created targets for uf: *unsigned_short_int is 3999
   Number of created targets for uf: *signed_int is 5
   Number of created targets for uf: *unsigned_char is 21
   Number of created targets for uf: *(struct_vnic_stats)* is 564
   Number of created targets for uf: *unsigned_long_long_int is 1814
   Number of created targets for uf: *(struct_vnic_devcmd_fw_info)* is 281
   Number of created targets for uf: *char is 114
   Number of created targets for uf: *unsigned_int is 3


Number of BDD nodes:                               32571
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       38555 (count: 1038988, min: 0, max: 1190, avg: 0.04)
Time for BDD node cleanup:                             0.181s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.324s
  Time for transition matches:                         6.807s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                      6952924 (count: 6952924, min: 1, max: 1, avg: 1.00) [1 x 6952924]

CPA algorithm statistics
------------------------
Number of iterations:            4859508
Max size of waitlist:            266
Average size of waitlist:        132
Number of computed successors:   5521190
Max successors for one state:    2
Number of times merged:          330251
Number of times stopped:         582118
Number of times breaked:         565

Total time for CPA algorithm:       706.038s (Max:     8.570s)
  Time for choose from waitlist:      2.653s
  Time for precision adjustment:    299.001s
  Time for transfer relation:       344.792s
  Time for merge operator:           21.662s
  Time for stop operator:            11.012s
  Time for adding to reached set:    11.572s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   565
Avg. length of target path (in blocks):              269511 (count: 565, min: 69, max: 648, avg: 477.01)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 174.727s
  Counterexample analysis:                           162.393s (Max:     0.582s, Calls: 565)
    Refinement sat check:                             43.357s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.125s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.600s
  Precision update:                                    1.047s
  ARG update:                                          9.490s

Length of refined path (in blocks):                  209467 (count: 564, min: 9, max: 543, avg: 371.40)
Number of affected states:                            67134 (count: 564, min: 0, max: 489, avg: 119.03)
Length (states) of path with itp 'true':             141769 (count: 564, min: 4, max: 542, avg: 251.36)
Length (states) of path with itp non-trivial itp:     67134 (count: 564, min: 0, max: 489, avg: 119.03)
Length (states) of path with itp 'false':               564 (count: 564, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           9 (count: 564, min: 0, max: 1, avg: 0.02)
Equal non-trivial interpolants along paths:           66735 (count: 564, min: 0, max: 488, avg: 118.32)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                565
Number of successful refinements:     564
Number of failed refinements:         0
Max. size of reached set before ref.: 18452
Max. size of reached set after ref.:  13632
Avg. size of reached set before ref.: 13705.88
Avg. size of reached set after ref.:  5028.69

Total time for CEGAR algorithm:     890.667s
Time for refinements:               182.550s
Average time for refinement:          0.323s
Max time for refinement:              0.672s

Code Coverage
-----------------------------
  Function coverage:      0.366
  Visited lines:          3284
  Total lines:            8243
  Line coverage:          0.398
  Visited conditions:     599
  Total conditions:       2030
  Condition coverage:     0.295

CPAchecker general statistics
-----------------------------
Number of program locations:     12003
Number of CFA edges:             13725
Number of relevant variables:    2231
Number of functions:             645
Number of loops:                 100
Size of reached set:             14556
  Number of reached locations:   2351 (20%)
    Avg states per location:     6
    Max states per location:     122 (at node N8402)
  Number of reached functions:   236 (37%)
  Number of partitions:          14473
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N4961 (before line 13926), Function main called from node N4949, stack depth 1 [103478b8], stack [main]])
  Number of target states:       1
  Size of final wait list        196

Time for analysis setup:          9.611s
  Time for loading CPAs:          1.293s
  Time for loading parser:        0.652s
  Time for CFA construction:      7.499s
    Time for parsing file(s):     1.475s
    Time for AST to CFA:          2.771s
    Time for CFA sanity check:    0.691s
    Time for post-processing:     2.326s
      Time for var class.:        0.962s
Time for Analysis:              890.667s
CPU time for analysis:          890.630s
Total time for CPAchecker:      900.282s
Total CPU time for CPAchecker:  900.220s
Time for statistics:              0.442s

Time for Garbage Collector:      58.709s (in 407 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2286MB (  2180 MiB) max;   1171MB (  1117 MiB) avg;   2321MB (  2214 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     42MB (    40 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:          3158MB (  3012 MiB) max;   1768MB (  1686 MiB) avg
Allocated non-heap memory:        49MB (    47 MiB) max;     49MB (    46 MiB) avg
Total process virtual memory:   8358MB (  7970 MiB) max;   8244MB (  7862 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
