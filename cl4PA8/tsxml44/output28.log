scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-ethernet-cisco-enic-enic_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bjoscnm7/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6542: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6635: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6640: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6650: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 6654: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7772: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7795: Dead code detected: Goto: case_1___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7800: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7810: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 7814: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 7777: Dead code detected: Goto: case_2___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7839: Dead code detected: Goto: case_1___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7844: Dead code detected: Goto: case_2___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7854: Dead code detected: Goto: case_8___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7858: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7883: Dead code detected: Goto: case_1___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7888: Dead code detected: Goto: case_2___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7898: Dead code detected: Goto: case_8___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7902: Dead code detected: Goto: switch_default___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7787: Dead code detected: Goto: case_8___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7927: Dead code detected: Goto: case_1___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 7932: Dead code detected: Goto: case_2___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 7942: Dead code detected: Goto: case_8___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 7946: Dead code detected: Goto: switch_default___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7791: Dead code detected: Goto: switch_default___3 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_4___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13428: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13448: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13451: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13453: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13523: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 14011: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14024: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14249: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 14923: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14965: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 14966: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15011: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15399: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15570: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15625: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15644: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15663: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15679: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15695: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15711: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15752: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15768: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15822: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7142: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7183: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7019: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6940-6941: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7054: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6979: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14616: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14627: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14650: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14662: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8589-8590: Function pointer *q_service with type int (*)(struct vnic_dev *, struct cq_desc *, u8 , u16 , u16 , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14069: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14069: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __napi_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 8589-8590: Function pointer vnic_cq_service::q_service points to enic_wq_service, but no corresponding call edge was created during preprocessing. Ignoring function pointer call: tmp = (*q_service)(cq->vdev, cq_desc, (int)type, (int)q_number, (int)completed_index, opaque); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 8589-8590: Ignoring function call through function pointer *q_service: tmp = (*q_service)(cq->vdev, cq_desc, (int)type, (int)q_number, (int)completed_index, opaque); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14081: Ignoring call via function pointer ldv_interrupt_instance_thread_1_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14081: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7142: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14463: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6593: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7183: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6933: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            12929 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10524 (81%)
  Because of loop head:            2399 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6 (0%)
  Times precision was empty:       12104 (94%)
  Times precision was {false}:     161 (1%)
  Times result was cached:         442 (3%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      222 (2%)
  Times result was 'false':        25 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         9917
  BDD entailment checks:           3013
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       72
Number of predicates discovered:          8
Number of abstraction locations:          31
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         3754
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 9.80
Number of irrelevant predicates:          2609 (69%)
Number of preds handled by boolean abs:   634 (17%)
  Total number of models for allsat:      269
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.21

Time for post operator:                 10.530s
  Time for path formula creation:       10.370s
Time for strengthen operator:            0.234s
Time for prec operator:                  2.371s
  Time for abstraction:                  1.689s (Max:     0.027s, Count: 12929)
    Boolean abstraction:                 0.325s
    Solving time:                        0.220s (Max:     0.013s)
    Model enumeration time:              0.014s
    Time for BDD construction:           0.069s (Max:     0.008s)
Time for merge operator:                 0.610s
Time for coverage check:                 0.044s
  Time for BDD entailment checks:        0.037s
Total time for SMT solver (w/o itp):     0.234s

Number of path formula cache hits:   9810 (14%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.711s

Total number of created targets for pointer analysis: 2235
   Number of created targets for uf: *unsigned_short_int is 57
   Number of created targets for uf: *unsigned_char is 57
   Number of created targets for uf: *(struct_vnic_stats)* is 7
   Number of created targets for uf: *unsigned_long_long_int is 101
   Number of created targets for uf: *(struct_vnic_devcmd_fw_info)* is 8


Number of BDD nodes:                               409
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         592 (count: 17330, min: 0, max: 181, avg: 0.03)
Time for BDD node cleanup:                             0.026s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.486s
Automaton transfers with branching:                0
Automaton transfer successors:                        69318 (count: 69318, min: 1, max: 1, avg: 1.00) [1 x 69318]

CPA algorithm statistics
------------------------
Number of iterations:            46559
Max size of waitlist:            88
Average size of waitlist:        34
Number of computed successors:   53108
Max successors for one state:    2
Number of times merged:          3452
Number of times stopped:         6246
Number of times breaked:         6

Total time for CPA algorithm:        20.323s (Max:     5.652s)
  Time for choose from waitlist:      0.222s
  Time for precision adjustment:      3.824s
  Time for transfer relation:        13.715s
  Time for merge operator:            0.936s
  Time for stop operator:             0.391s
  Time for adding to reached set:     0.342s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                 620 (count: 6, min: 69, max: 139, avg: 103.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.698s
  Counterexample analysis:                             0.344s (Max:     0.067s, Calls: 6)
    Refinement sat check:                              0.178s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.050s
  Precision update:                                    0.006s
  ARG update:                                          0.278s

Length of refined path (in blocks):                     196 (count: 6, min: 9, max: 47, avg: 32.67)
Number of affected states:                              102 (count: 6, min: 4, max: 42, avg: 17.00)
Length (states) of path with itp 'true':                 88 (count: 6, min: 4, max: 36, avg: 14.67)
Length (states) of path with itp non-trivial itp:       102 (count: 6, min: 4, max: 42, avg: 17.00)
Length (states) of path with itp 'false':                 6 (count: 6, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              96 (count: 6, min: 3, max: 41, avg: 16.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 7402
Max. size of reached set after ref.:  160
Avg. size of reached set before ref.: 6952.67
Avg. size of reached set after ref.:  61.33

Total time for CEGAR algorithm:      21.190s
Time for refinements:                 0.867s
Average time for refinement:          0.144s
Max time for refinement:              0.221s

Code Coverage
-----------------------------
  Function coverage:      0.188
  Visited lines:          2209
  Total lines:            8243
  Line coverage:          0.268
  Visited conditions:     330
  Total conditions:       2030
  Condition coverage:     0.163

CPAchecker general statistics
-----------------------------
Number of program locations:     12003
Number of CFA edges:             13725
Number of relevant variables:    2231
Number of functions:             645
Number of loops:                 100
Size of reached set:             5489
  Number of reached locations:   1176 (10%)
    Avg states per location:     4
    Max states per location:     53 (at node N10227)
  Number of reached functions:   121 (19%)
  Number of partitions:          5458
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N4961 (before line 13926), Function main called from node N4949, stack depth 1 [56b704ea], stack [main]])
  Number of target states:       0
  Size of final wait list        66

Time for analysis setup:          9.071s
  Time for loading CPAs:          1.217s
  Time for loading parser:        0.694s
  Time for CFA construction:      7.025s
    Time for parsing file(s):     1.464s
    Time for AST to CFA:          2.854s
    Time for CFA sanity check:    0.549s
    Time for post-processing:     1.890s
      Time for var class.:        0.949s
Time for Analysis:               21.190s
CPU time for analysis:           21.190s
Total time for CPAchecker:       30.267s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.520s

Time for Garbage Collector:       1.295s (in 46 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                121MB (   116 MiB) max;     69MB (    66 MiB) avg;    130MB (   124 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8069MB (  7696 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
