scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-ethernet-sun-cassini_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3356wlt3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6028: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6215: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6220: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6230: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 6234: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 6293: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6298: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6308: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 6312: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12711: Dead code detected: __ms = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 15152: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15172: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15175: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15177: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15237: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15761: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15774: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15906: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16541: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16583: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16584: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16629: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16985: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 17144: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17160: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17212: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17276: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17328: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17359: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17508: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17524: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17602: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7009: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7050: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6806: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6881: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6921: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6841: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15807: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15807: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6831: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6841: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, (struct dma_attrs *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __free_pages to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6800: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14224: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16116: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function flush_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6106: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7050: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_write_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            996990 (29% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  840065 (84%)
  Because of loop head:            155239 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1686 (0%)
  Times precision was empty:       229517 (23%)
  Times precision was {false}:     3080 (0%)
  Times result was cached:         746622 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      17771 (2%)
  Times result was 'false':        21576 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         352859
  BDD entailment checks:           182893
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          51
Number of abstraction locations:          562
Max number of predicates per location:    24
Avg number of predicates per location:    5
Total predicates per abstraction:         6416521
Max number of predicates per abstraction: 23
Avg number of predicates per abstraction: 307.73
Number of irrelevant predicates:          4260868 (66%)
Number of preds handled by boolean abs:   58948 (1%)
  Total number of models for allsat:      60215
  Max number of models for allsat:        40
  Avg number of models for allsat:        3.39

Time for post operator:                 68.294s
  Time for path formula creation:       66.542s
Time for strengthen operator:            3.409s
Time for prec operator:                247.168s
  Time for abstraction:                233.621s (Max:     1.346s, Count: 996990)
    Boolean abstraction:                20.258s
    Solving time:                       14.078s (Max:     0.017s)
    Model enumeration time:              4.763s
    Time for BDD construction:           1.123s (Max:     0.053s)
Time for merge operator:                 3.326s
Time for coverage check:                 0.290s
  Time for BDD entailment checks:        0.246s
Total time for SMT solver (w/o itp):    18.841s

Number of path formula cache hits:   3144036 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    52.076s

Total number of created targets for pointer analysis: 116613
   Number of created targets for uf: *unsigned_short_int is 637
   Number of created targets for uf: *signed_int is 9001
   Number of created targets for uf: *(struct_list_head)* is 4511
   Number of created targets for uf: *unsigned_long_long_int is 100


Number of BDD nodes:                               9242
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       39220 (count: 538169, min: 0, max: 793, avg: 0.07)
Time for BDD node cleanup:                             0.126s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.272s
  Time for transition matches:                         2.862s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                      3469344 (count: 3469344, min: 1, max: 1, avg: 1.00) [1 x 3469344]

CPA algorithm statistics
------------------------
Number of iterations:            2660706
Max size of waitlist:            136
Average size of waitlist:        61
Number of computed successors:   2905124
Max successors for one state:    2
Number of times merged:          84983
Number of times stopped:         199319
Number of times breaked:         1686

Total time for CPA algorithm:       421.802s (Max:     2.547s)
  Time for choose from waitlist:      1.360s
  Time for precision adjustment:    266.526s
  Time for transfer relation:       131.042s
  Time for merge operator:            5.383s
  Time for stop operator:             4.247s
  Time for adding to reached set:     5.372s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1686
Avg. length of target path (in blocks):              780226 (count: 1686, min: 118, max: 783, avg: 462.77)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 451.844s
  Counterexample analysis:                           440.063s (Max:     1.066s, Calls: 1686)
    Refinement sat check:                             94.108s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.410s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.018s
  Precision update:                                    2.520s
  ARG update:                                          4.748s

Length of refined path (in blocks):                  689801 (count: 1685, min: 9, max: 757, avg: 409.38)
Number of affected states:                           126614 (count: 1685, min: 1, max: 491, avg: 75.14)
Length (states) of path with itp 'true':             561502 (count: 1685, min: 4, max: 531, avg: 333.24)
Length (states) of path with itp non-trivial itp:    126614 (count: 1685, min: 1, max: 491, avg: 75.14)
Length (states) of path with itp 'false':              1685 (count: 1685, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        2578 (count: 1685, min: 0, max: 10, avg: 1.53)
Equal non-trivial interpolants along paths:          122351 (count: 1685, min: 0, max: 490, avg: 72.61)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1686
Number of successful refinements:     1685
Number of failed refinements:         0
Max. size of reached set before ref.: 12987
Max. size of reached set after ref.:  9515
Avg. size of reached set before ref.: 4702.96
Avg. size of reached set after ref.:  3112.74

Total time for CEGAR algorithm:     891.401s
Time for refinements:               465.936s
Average time for refinement:          0.276s
Max time for refinement:              1.086s

Code Coverage
-----------------------------
  Function coverage:      0.363
  Visited lines:          3011
  Total lines:            7167
  Line coverage:          0.420
  Visited conditions:     488
  Total conditions:       1674
  Condition coverage:     0.292

CPAchecker general statistics
-----------------------------
Number of program locations:     10564
Number of CFA edges:             12229
Number of relevant variables:    1451
Number of functions:             545
Number of loops:                 72
Size of reached set:             9195
  Number of reached locations:   2047 (19%)
    Avg states per location:     4
    Max states per location:     197 (at node N8468)
  Number of reached functions:   198 (36%)
  Number of partitions:          9082
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N7013 (before line 15686), Function main called from node N7002, stack depth 1 [6ea3a513], stack [main]])
  Number of target states:       1
  Size of final wait list        97

Time for analysis setup:          8.863s
  Time for loading CPAs:          1.154s
  Time for loading parser:        0.764s
  Time for CFA construction:      6.766s
    Time for parsing file(s):     1.524s
    Time for AST to CFA:          2.615s
    Time for CFA sanity check:    0.599s
    Time for post-processing:     1.766s
      Time for var class.:        0.874s
Time for Analysis:              891.402s
CPU time for analysis:          891.280s
Total time for CPAchecker:      900.276s
Total CPU time for CPAchecker:  900.130s
Time for statistics:              0.320s

Time for Garbage Collector:      25.161s (in 828 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                576MB (   549 MiB) max;    292MB (   278 MiB) avg;    588MB (   561 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:           626MB (   597 MiB) max;    412MB (   393 MiB) avg
Allocated non-heap memory:        45MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8355MB (  7968 MiB) max;   8215MB (  7835 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
