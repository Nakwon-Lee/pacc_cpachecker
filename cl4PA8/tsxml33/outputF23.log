scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-ethernet-sun-cassini_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fookuney/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6028: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6215: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6220: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6230: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 6234: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 6293: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6298: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6308: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 6312: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12711: Dead code detected: __ms = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 15152: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15172: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15175: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15177: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15237: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15761: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15774: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15906: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16541: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16583: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16584: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16629: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16985: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 17144: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17160: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17212: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17276: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17328: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17359: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17508: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17524: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17602: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7009: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7050: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6806: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6881: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6921: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6841: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16289: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16289: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16254: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16254: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16265: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16265: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16924: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16924: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15807: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15807: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6800: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6831: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 6841: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, (struct dma_attrs *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __free_pages to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __compiletime_assert_2843 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_try_set_mwi to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_write_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1299265 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1172160 (90%)
  Because of loop head:            123696 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3409 (0%)
  Times precision was empty:       785162 (60%)
  Times precision was {false}:     923 (0%)
  Times result was cached:         509924 (39%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3256 (0%)
  Times result was 'false':        14460 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         709460
  BDD entailment checks:           153806
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       61
Number of predicates discovered:          39
Number of abstraction locations:          201
Max number of predicates per location:    20
Avg number of predicates per location:    2
Total predicates per abstraction:         1368074
Max number of predicates per abstraction: 20
Avg number of predicates per abstraction: 327.37
Number of irrelevant predicates:          888028 (65%)
Number of preds handled by boolean abs:   12498 (1%)
  Total number of models for allsat:      6014
  Max number of models for allsat:        20
  Avg number of models for allsat:        1.85

Time for post operator:                121.905s
  Time for path formula creation:      118.525s
Time for strengthen operator:            5.622s
Time for prec operator:                 77.799s
  Time for abstraction:                 61.777s (Max:     0.175s, Count: 1299265)
    Boolean abstraction:                 3.738s
    Solving time:                        3.034s (Max:     0.041s)
    Model enumeration time:              0.598s
    Time for BDD construction:           0.223s (Max:     0.013s)
Time for merge operator:                 9.193s
Time for coverage check:                 0.350s
  Time for BDD entailment checks:        0.271s
Total time for SMT solver (w/o itp):     3.632s

Number of path formula cache hits:   5708917 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    97.431s

Total number of created targets for pointer analysis: 617688
   Number of created targets for uf: *unsigned_short_int is 241
   Number of created targets for uf: *signed_int is 1261
   Number of created targets for uf: *(struct_list_head)* is 897
   Number of created targets for uf: *unsigned_long_long_int is 475


Number of BDD nodes:                               8517
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       11216 (count: 967656, min: 0, max: 966, avg: 0.01)
Time for BDD node cleanup:                             0.149s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.726s
  Time for transition matches:                         5.281s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.020s
Automaton transfers with branching:                0
Automaton transfer successors:                      6138205 (count: 6138205, min: 1, max: 1, avg: 1.00) [1 x 6138205]

CPA algorithm statistics
------------------------
Number of iterations:            4380529
Max size of waitlist:            2275
Average size of waitlist:        850
Number of computed successors:   4913100
Max successors for one state:    2
Number of times merged:          277827
Number of times stopped:         381982
Number of times breaked:         3409

Total time for CPA algorithm:       403.021s (Max:     9.021s)
  Time for choose from waitlist:      2.756s
  Time for precision adjustment:    117.645s
  Time for transfer relation:       235.286s
  Time for merge operator:           14.395s
  Time for stop operator:             7.106s
  Time for adding to reached set:    12.106s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3409
Avg. length of target path (in blocks):              485308 (count: 3409, min: 32, max: 180, avg: 142.36)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 185.571s
  Counterexample analysis:                           172.229s (Max:     0.244s, Calls: 3409)
    Refinement sat check:                             76.073s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.236s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.717s
  Precision update:                                    1.525s
  ARG update:                                          8.802s

Length of refined path (in blocks):                  450157 (count: 3409, min: 9, max: 177, avg: 132.05)
Number of affected states:                           110954 (count: 3409, min: 1, max: 99, avg: 32.55)
Length (states) of path with itp 'true':             335794 (count: 3409, min: 0, max: 147, avg: 98.50)
Length (states) of path with itp non-trivial itp:    110954 (count: 3409, min: 1, max: 99, avg: 32.55)
Length (states) of path with itp 'false':              3409 (count: 3409, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        5819 (count: 3409, min: 0, max: 6, avg: 1.71)
Equal non-trivial interpolants along paths:          101726 (count: 3409, min: 0, max: 95, avg: 29.84)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3409
Number of successful refinements:     3409
Number of failed refinements:         0
Max. size of reached set before ref.: 104546
Max. size of reached set after ref.:  69703
Avg. size of reached set before ref.: 51493.69
Avg. size of reached set after ref.:  50188.90

Total time for CEGAR algorithm:     891.927s
Time for refinements:               343.990s
Average time for refinement:          0.100s
Max time for refinement:              2.626s

Code Coverage
-----------------------------
  Function coverage:      0.345
  Visited lines:          2994
  Total lines:            7167
  Line coverage:          0.418
  Visited conditions:     522
  Total conditions:       1674
  Condition coverage:     0.312

CPAchecker general statistics
-----------------------------
Number of program locations:     10564
Number of CFA edges:             12229
Number of relevant variables:    1451
Number of functions:             545
Number of loops:                 72
Size of reached set:             68631
  Number of reached locations:   2129 (20%)
    Avg states per location:     32
    Max states per location:     1384 (at node N348)
  Number of reached functions:   188 (34%)
  Number of partitions:          68405
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N7013 (before line 15686), Function main called from node N7002, stack depth 1 [2c56eba5], stack [main]])
  Number of target states:       0
  Size of final wait list        1479

Time for analysis setup:          8.376s
  Time for loading CPAs:          1.086s
  Time for loading parser:        0.670s
  Time for CFA construction:      6.472s
    Time for parsing file(s):     1.393s
    Time for AST to CFA:          2.577s
    Time for CFA sanity check:    0.587s
    Time for post-processing:     1.736s
      Time for var class.:        0.849s
Time for Analysis:              891.927s
CPU time for analysis:          891.860s
Total time for CPAchecker:      900.318s
Total CPU time for CPAchecker:  900.230s
Time for statistics:              1.031s

Time for Garbage Collector:      41.525s (in 541 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1259MB (  1200 MiB) max;    753MB (   718 MiB) avg;   1369MB (  1306 MiB) peak
Used non-heap memory:             43MB (    41 MiB) max;     41MB (    39 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:          1531MB (  1460 MiB) max;   1124MB (  1072 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8152MB (  7774 MiB) max;   8107MB (  7732 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
