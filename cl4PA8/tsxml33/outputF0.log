scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-ethernet-sun-cassini_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6d33_l1r/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6028: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6215: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6220: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6230: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 6234: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 6293: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6298: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6308: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 6312: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12711: Dead code detected: __ms = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 15152: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15172: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15175: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15177: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15237: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15761: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15774: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15906: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16541: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16583: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16584: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16629: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16985: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 17144: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17160: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17212: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17276: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17328: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17359: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17508: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17524: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17602: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7009: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7050: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6806: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6881: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6921: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6841: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16924: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16924: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15807: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15807: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6831: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6841: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, (struct dma_attrs *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __free_pages to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6800: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16254: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16254: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16265: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16265: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16289: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16289: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2226563 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1896257 (85%)
  Because of loop head:            327456 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2850 (0%)
  Times precision was empty:       762227 (34%)
  Times precision was {false}:     2285 (0%)
  Times result was cached:         1457702 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4349 (0%)
  Times result was 'false':        23185 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         999694
  BDD entailment checks:           505722
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       61
Number of predicates discovered:          36
Number of abstraction locations:          269
Max number of predicates per location:    14
Avg number of predicates per location:    3
Total predicates per abstraction:         6008403
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 905.70
Number of irrelevant predicates:          5104642 (85%)
Number of preds handled by boolean abs:   8959 (0%)
  Total number of models for allsat:      6851
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.58

Time for post operator:                165.919s
  Time for path formula creation:      161.415s
Time for strengthen operator:            7.909s
Time for prec operator:                226.968s
  Time for abstraction:                198.869s (Max:     4.063s, Count: 2226563)
    Boolean abstraction:                 4.550s
    Solving time:                        4.766s (Max:     0.023s)
    Model enumeration time:              0.678s
    Time for BDD construction:           0.197s (Max:     0.010s)
Time for merge operator:                 7.031s
Time for coverage check:                 0.678s
  Time for BDD entailment checks:        0.511s
Total time for SMT solver (w/o itp):     5.444s

Number of path formula cache hits:   8022075 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   124.864s

Total number of created targets for pointer analysis: 498002
   Number of created targets for uf: *signed_int is 1051
   Number of created targets for uf: *(struct_list_head)* is 4377
   Number of created targets for uf: *unsigned_long_long_int is 13


Number of BDD nodes:                               1100
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        9425 (count: 1308894, min: 0, max: 712, avg: 0.01)
Time for BDD node cleanup:                             0.203s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.802s
  Time for transition matches:                         7.603s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.012s
Automaton transfers with branching:                0
Automaton transfer successors:                      8437073 (count: 8437073, min: 1, max: 1, avg: 1.00) [1 x 8437073]

CPA algorithm statistics
------------------------
Number of iterations:            6286048
Max size of waitlist:            134
Average size of waitlist:        37
Number of computed successors:   6907861
Max successors for one state:    2
Number of times merged:          246986
Number of times stopped:         584628
Number of times breaked:         2850

Total time for CPA algorithm:       659.294s (Max:    22.568s)
  Time for choose from waitlist:      2.720s
  Time for precision adjustment:    280.116s
  Time for transfer relation:       320.944s
  Time for merge operator:           12.280s
  Time for stop operator:            11.765s
  Time for adding to reached set:    11.853s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2850
Avg. length of target path (in blocks):              476098 (count: 2850, min: 108, max: 275, avg: 167.05)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 197.270s
  Counterexample analysis:                           178.746s (Max:     0.197s, Calls: 2850)
    Refinement sat check:                             72.104s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.271s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.910s
  Precision update:                                    2.148s
  ARG update:                                         13.342s

Length of refined path (in blocks):                  440639 (count: 2850, min: 9, max: 272, avg: 154.61)
Number of affected states:                           152563 (count: 2850, min: 1, max: 140, avg: 53.53)
Length (states) of path with itp 'true':             285226 (count: 2850, min: 0, max: 240, avg: 100.08)
Length (states) of path with itp non-trivial itp:    152563 (count: 2850, min: 1, max: 140, avg: 53.53)
Length (states) of path with itp 'false':              2850 (count: 2850, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        6679 (count: 2850, min: 0, max: 8, avg: 2.34)
Equal non-trivial interpolants along paths:          143034 (count: 2850, min: 0, max: 139, avg: 50.19)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2850
Number of successful refinements:     2850
Number of failed refinements:         0
Max. size of reached set before ref.: 174183
Max. size of reached set after ref.:  123096
Avg. size of reached set before ref.: 8123.96
Avg. size of reached set after ref.:  5963.24

Total time for CEGAR algorithm:     891.290s
Time for refinements:               220.188s
Average time for refinement:          0.077s
Max time for refinement:              0.852s

Code Coverage
-----------------------------
  Function coverage:      0.261
  Visited lines:          2722
  Total lines:            7167
  Line coverage:          0.380
  Visited conditions:     540
  Total conditions:       1674
  Condition coverage:     0.323

CPAchecker general statistics
-----------------------------
Number of program locations:     10564
Number of CFA edges:             12229
Number of relevant variables:    1451
Number of functions:             545
Number of loops:                 72
Size of reached set:             141991
  Number of reached locations:   1918 (18%)
    Avg states per location:     74
    Max states per location:     2859 (at node N8467)
  Number of reached functions:   142 (26%)
  Number of partitions:          140353
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N5436 (before line 13297), Function cas_link_timer called from node N10241, stack depth 4 [57c311c6], stack [main, ldv_timer_timer_instance_3, ldv_timer_instance_callback_3_2, cas_link_timer]])
  Number of target states:       0
  Size of final wait list        51

Time for analysis setup:          8.922s
  Time for loading CPAs:          1.222s
  Time for loading parser:        0.737s
  Time for CFA construction:      6.858s
    Time for parsing file(s):     1.414s
    Time for AST to CFA:          2.735s
    Time for CFA sanity check:    0.538s
    Time for post-processing:     1.893s
      Time for var class.:        0.941s
Time for Analysis:              891.291s
CPU time for analysis:          891.210s
Total time for CPAchecker:      900.216s
Total CPU time for CPAchecker:  900.110s
Time for statistics:              2.008s

Time for Garbage Collector:      51.076s (in 560 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1725MB (  1645 MiB) max;    833MB (   795 MiB) avg;   1754MB (  1672 MiB) peak
Used non-heap memory:             43MB (    41 MiB) max;     41MB (    39 MiB) avg;     44MB (    42 MiB) peak
Allocated heap memory:          1886MB (  1798 MiB) max;   1175MB (  1120 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8153MB (  7775 MiB) max;   8109MB (  7733 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
