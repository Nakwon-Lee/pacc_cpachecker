scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-ethernet-sun-cassini_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_soqj66wk/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6028: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6215: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6220: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6230: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 6234: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 6293: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6298: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6308: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 6312: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12711: Dead code detected: __ms = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 15152: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15172: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15175: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15177: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15237: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15761: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15774: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15906: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16541: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16583: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16584: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16629: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16985: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 17144: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17160: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17212: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17276: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17328: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17359: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17508: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17524: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17602: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7009: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7050: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6806: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6881: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6921: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6841: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16924: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16924: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15807: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15807: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6831: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6841: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, (struct dma_attrs *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __free_pages to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6800: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16265: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16265: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16254: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16254: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16289: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16289: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6106: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7050: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_write_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bitmap_weight to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16511: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16116: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14224: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __compiletime_assert_2843 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1777068 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1516507 (85%)
  Because of loop head:            260204 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         357 (0%)
  Times precision was empty:       616541 (35%)
  Times precision was {false}:     4371 (0%)
  Times result was cached:         1151071 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5085 (0%)
  Times result was 'false':        10974 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         765602
  BDD entailment checks:           305848
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          22
Number of abstraction locations:          310
Max number of predicates per location:    10
Avg number of predicates per location:    2
Total predicates per abstraction:         4111845
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 434.84
Number of irrelevant predicates:          3388103 (82%)
Number of preds handled by boolean abs:   8447 (0%)
  Total number of models for allsat:      5697
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.12

Time for post operator:                309.689s
  Time for path formula creation:      305.157s
Time for strengthen operator:            7.673s
Time for prec operator:                214.959s
  Time for abstraction:                185.477s (Max:     8.852s, Count: 1777068)
    Boolean abstraction:                 3.656s
    Solving time:                        6.091s (Max:     0.028s)
    Model enumeration time:              0.376s
    Time for BDD construction:           0.187s (Max:     0.006s)
Time for merge operator:                19.709s
Time for coverage check:                 0.468s
  Time for BDD entailment checks:        0.346s
Total time for SMT solver (w/o itp):     6.467s

Number of path formula cache hits:   2900872 (36%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   266.037s

Total number of created targets for pointer analysis: 1228456
   Number of created targets for uf: *unsigned_short_int is 571
   Number of created targets for uf: *signed_int is 23201
   Number of created targets for uf: *(struct_list_head)* is 15065
   Number of created targets for uf: *unsigned_long_long_int is 343


Number of BDD nodes:                               462
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       10461 (count: 975666, min: 0, max: 706, avg: 0.01)
Time for BDD node cleanup:                             0.256s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 13.227s
  Time for transition matches:                         6.386s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                      7342941 (count: 7342941, min: 1, max: 1, avg: 1.00) [1 x 7342941]

CPA algorithm statistics
------------------------
Number of iterations:            5305597
Max size of waitlist:            121
Average size of waitlist:        54
Number of computed successors:   5836052
Max successors for one state:    2
Number of times merged:          229877
Number of times stopped:         512407
Number of times breaked:         357

Total time for CPA algorithm:       836.694s (Max:    36.870s)
  Time for choose from waitlist:      3.212s
  Time for precision adjustment:    263.756s
  Time for transfer relation:       495.624s
  Time for merge operator:           25.232s
  Time for stop operator:            12.566s
  Time for adding to reached set:    14.987s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   357
Avg. length of target path (in blocks):               79230 (count: 357, min: 120, max: 397, avg: 221.93)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  49.181s
  Counterexample analysis:                            31.956s (Max:     0.211s, Calls: 357)
    Refinement sat check:                             11.921s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.075s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.254s
  Precision update:                                    0.253s
  ARG update:                                         16.181s

Length of refined path (in blocks):                   65625 (count: 357, min: 9, max: 371, avg: 183.82)
Number of affected states:                            28493 (count: 357, min: 1, max: 366, avg: 79.81)
Length (states) of path with itp 'true':              36775 (count: 357, min: 4, max: 235, avg: 103.01)
Length (states) of path with itp non-trivial itp:     28493 (count: 357, min: 1, max: 366, avg: 79.81)
Length (states) of path with itp 'false':               357 (count: 357, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         622 (count: 357, min: 0, max: 3, avg: 1.74)
Equal non-trivial interpolants along paths:           27514 (count: 357, min: 0, max: 365, avg: 77.07)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                357
Number of successful refinements:     357
Number of failed refinements:         0
Max. size of reached set before ref.: 192533
Max. size of reached set after ref.:  5273
Avg. size of reached set before ref.: 17356.12
Avg. size of reached set after ref.:  2547.62

Total time for CEGAR algorithm:     891.283s
Time for refinements:                53.751s
Average time for refinement:          0.150s
Max time for refinement:              1.474s

Code Coverage
-----------------------------
  Function coverage:      0.244
  Visited lines:          2405
  Total lines:            7167
  Line coverage:          0.336
  Visited conditions:     422
  Total conditions:       1674
  Condition coverage:     0.252

CPAchecker general statistics
-----------------------------
Number of program locations:     10564
Number of CFA edges:             12229
Number of relevant variables:    1451
Number of functions:             545
Number of loops:                 72
Size of reached set:             26035
  Number of reached locations:   1541 (15%)
    Avg states per location:     16
    Max states per location:     407 (at node N8467)
  Number of reached functions:   133 (24%)
  Number of partitions:          25933
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N7013 (before line 15686), Function main called from node N7002, stack depth 1 [2c56eba5], stack [main]])
  Number of target states:       0
  Size of final wait list        67

Time for analysis setup:          9.493s
  Time for loading CPAs:          1.340s
  Time for loading parser:        0.744s
  Time for CFA construction:      7.244s
    Time for parsing file(s):     1.469s
    Time for AST to CFA:          2.680s
    Time for CFA sanity check:    0.718s
    Time for post-processing:     2.167s
      Time for var class.:        0.941s
Time for Analysis:              891.284s
CPU time for analysis:          891.230s
Total time for CPAchecker:      900.793s
Total CPU time for CPAchecker:  900.720s
Time for statistics:              0.558s

Time for Garbage Collector:     105.993s (in 443 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               3265MB (  3114 MiB) max;   1274MB (  1215 MiB) avg;   3293MB (  3140 MiB) peak
Used non-heap memory:             43MB (    41 MiB) max;     41MB (    39 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:          3982MB (  3798 MiB) max;   1832MB (  1747 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8154MB (  7777 MiB) max;   8112MB (  7737 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
