scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-media-common-saa7146-saa7146_vv_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vg4bneks/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5143: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 5148: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 5158: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 5162: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7957: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10531: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 14425: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 16031: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 16036: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 16041: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 16050: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 17351: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 17391: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17419: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17435: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17451: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5361: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5402: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8604: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5445: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12849: Function pointer *(dev->ext_vv_data->std_callback) with type int (*)(struct saa7146_dev *, struct saa7146_standard *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8604: Ignoring call via function pointer ldv_file_operations_instance_probe_0_12::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8604: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function video_devdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6955: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_interruptible_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 6942: Unsupported feature (recursion): tmp___1 = fops_write(file, data, count, ppos); (line was originally pointer call(fops_write) tmp___1 = (*(((fh->dev)->ext_vv_data)->vbi_fops.write))(file, data, count, ppos);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            279 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  214 (77%)
  Because of loop head:            65 (23%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         0 (0%)
  Times precision was empty:       279 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         89
  BDD entailment checks:           53
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       108
Number of predicates discovered:          0

Time for post operator:                  1.124s
  Time for path formula creation:        1.088s
Time for strengthen operator:            0.045s
Time for prec operator:                  0.065s
  Time for abstraction:                  0.041s (Max:     0.010s, Count: 279)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.041s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     0.000s

Number of path formula cache hits:   213 (8%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.068s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 333, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.088s
Automaton transfers with branching:                0
Automaton transfer successors:                         2685 (count: 2685, min: 1, max: 1, avg: 1.00) [1 x 2685]

CPA algorithm statistics
------------------------
Number of iterations:            823
Max size of waitlist:            25
Average size of waitlist:        14
Number of computed successors:   907
Max successors for one state:    2
Number of times merged:          18
Number of times stopped:         71
Number of times breaked:         0

Total time for CPA algorithm:         1.909s (Max:     1.909s)
  Time for choose from waitlist:      0.014s
  Time for precision adjustment:      0.223s
  Time for transfer relation:         1.530s
  Time for merge operator:            0.047s
  Time for stop operator:             0.023s
  Time for adding to reached set:     0.021s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   0

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.141
  Visited lines:          1596
  Total lines:            7490
  Line coverage:          0.213
  Visited conditions:     114
  Total conditions:       1876
  Condition coverage:     0.061

CPAchecker general statistics
-----------------------------
Number of program locations:     10432
Number of CFA edges:             11905
Number of relevant variables:    1524
Number of functions:             370
Number of loops:                 28
Size of reached set:             837
  Number of reached locations:   506 (5%)
    Avg states per location:     1
    Max states per location:     26 (at node N8960)
  Number of reached functions:   52 (14%)
  Number of partitions:          837
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        15

Time for analysis setup:          8.486s
  Time for loading CPAs:          1.149s
  Time for loading parser:        0.670s
  Time for CFA construction:      6.502s
    Time for parsing file(s):     1.300s
    Time for AST to CFA:          2.518s
    Time for CFA sanity check:    0.605s
    Time for post-processing:     1.916s
      Time for var class.:        0.991s
Time for Analysis:                1.909s
CPU time for analysis:            1.900s
Total time for CPAchecker:       10.404s
Total CPU time for CPAchecker:   10.380s
Time for statistics:              0.124s

Time for Garbage Collector:       0.403s (in 18 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 82MB (    78 MiB) max;     45MB (    43 MiB) avg;     89MB (    85 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    25 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8044MB (  7672 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
