scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-media-common-saa7146-saa7146_vv_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xt5633qq/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5143: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 5148: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 5158: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 5162: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7957: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10531: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 14425: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 16031: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 16036: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 16041: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 16050: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 17351: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 17391: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17419: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17435: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17451: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5361: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5402: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8604: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5445: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12849: Function pointer *(dev->ext_vv_data->std_callback) with type int (*)(struct saa7146_dev *, struct saa7146_standard *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_devdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_interruptible_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_ioctl2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5445: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6617: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6515: Ignoring function call through function pointer *(saa7146_video_uops.release): (*(saa7146_video_uops.release))(dev, file); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6501: Ignoring function call through function pointer *(saa7146_vbi_uops.release): (*(saa7146_vbi_uops.release))(dev, file); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6508: Ignoring function call through function pointer *(dev->ext_vv_data->vbi_fops.release): (*(dev->ext_vv_data->vbi_fops.release))(file); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 6508: Unsupported feature (recursion): fops_release(file); (line was originally pointer call(fops_release) (*((dev->ext_vv_data)->vbi_fops.release))(file);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            145 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  135 (93%)
  Because of loop head:            9 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1 (1%)
  Times precision was empty:       140 (97%)
  Times precision was {false}:     1 (1%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4 (3%)
  Times result was 'false':        1 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         95
  BDD entailment checks:           13
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       108
Number of predicates discovered:          2
Number of abstraction locations:          5
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         5
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          1 (20%)
Number of preds handled by boolean abs:   4 (80%)
  Total number of models for allsat:      4
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.230s
  Time for path formula creation:        1.208s
Time for strengthen operator:            0.025s
Time for prec operator:                  0.079s
  Time for abstraction:                  0.060s (Max:     0.029s, Count: 145)
    Boolean abstraction:                 0.019s
    Solving time:                        0.003s (Max:     0.002s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.015s (Max:     0.015s)
Time for merge operator:                 0.036s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.003s

Number of path formula cache hits:   236 (9%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.160s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 187, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.048s
Automaton transfers with branching:                0
Automaton transfer successors:                         2668 (count: 2668, min: 1, max: 1, avg: 1.00) [1 x 2668]

CPA algorithm statistics
------------------------
Number of iterations:            682
Max size of waitlist:            40
Average size of waitlist:        23
Number of computed successors:   801
Max successors for one state:    2
Number of times merged:          41
Number of times stopped:         54
Number of times breaked:         1

Total time for CPA algorithm:         1.961s (Max:     1.447s)
  Time for choose from waitlist:      0.005s
  Time for precision adjustment:      0.207s
  Time for transfer relation:         1.600s
  Time for merge operator:            0.054s
  Time for stop operator:             0.019s
  Time for adding to reached set:     0.020s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1
Avg. length of target path (in blocks):                  25 (count: 1, min: 25, max: 25, avg: 25.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.083s
  Counterexample analysis:                             0.050s (Max:     0.050s, Calls: 1)
    Refinement sat check:                              0.031s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.005s
  Precision update:                                    0.002s
  ARG update:                                          0.019s

Length of refined path (in blocks):                       9 (count: 1, min: 9, max: 9, avg: 9.00)
Number of affected states:                                4 (count: 1, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp 'true':                  4 (count: 1, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp non-trivial itp:         4 (count: 1, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp 'false':                 1 (count: 1, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               3 (count: 1, min: 3, max: 3, avg: 3.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 297
Max. size of reached set after ref.:  12
Avg. size of reached set before ref.: 297.00
Avg. size of reached set after ref.:  12.00

Total time for CEGAR algorithm:       2.094s
Time for refinements:                 0.133s
Average time for refinement:          0.133s
Max time for refinement:              0.133s

Code Coverage
-----------------------------
  Function coverage:      0.095
  Visited lines:          1537
  Total lines:            7490
  Line coverage:          0.205
  Visited conditions:     128
  Total conditions:       1876
  Condition coverage:     0.068

CPAchecker general statistics
-----------------------------
Number of program locations:     10432
Number of CFA edges:             11905
Number of relevant variables:    1524
Number of functions:             370
Number of loops:                 28
Size of reached set:             462
  Number of reached locations:   366 (4%)
    Avg states per location:     1
    Max states per location:     9 (at node N8975)
  Number of reached functions:   35 (9%)
  Number of partitions:          462
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        35

Time for analysis setup:          8.179s
  Time for loading CPAs:          1.133s
  Time for loading parser:        0.716s
  Time for CFA construction:      6.212s
    Time for parsing file(s):     1.319s
    Time for AST to CFA:          2.298s
    Time for CFA sanity check:    0.560s
    Time for post-processing:     1.850s
      Time for var class.:        0.819s
Time for Analysis:                2.094s
CPU time for analysis:            2.090s
Total time for CPAchecker:       10.278s
Total CPU time for CPAchecker:   10.260s
Time for statistics:              0.126s

Time for Garbage Collector:       0.379s (in 18 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 83MB (    79 MiB) max;     45MB (    43 MiB) avg;     89MB (    85 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    26 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8043MB (  7671 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
