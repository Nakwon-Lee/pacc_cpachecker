scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-mutex__drivers-media-usb-au0828-au0828_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rutfajmq/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 10021: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10049: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10187: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13858: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 13863: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 13873: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 13877: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 17681: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 18252: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 18290: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18306: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18344: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18360: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18420: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18436: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18485: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18523: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18539: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18555: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18571: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18581: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 18586: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 18596: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 18600: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 12260: Function pointer *(__sd->ops->tuner->s_type_addr) with type int (*)(struct v4l2_subdev *, struct tuner_setup *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13677: Function pointer *(dvb->frontend->ops.release) with type void (*)(struct dvb_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13635: Function pointer *__a___7 with type struct dvb_frontend *(*)(struct dvb_frontend *, struct i2c_adapter *, const struct xc5000_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 13594-13595: Function pointer *__a___6 with type struct dvb_frontend *(*)(const struct au8522_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13554: Function pointer *__a___5 with type struct dvb_frontend *(*)(struct dvb_frontend *, u8 , struct i2c_adapter *, struct tda18271_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 13510-13511: Function pointer *__a___4 with type struct dvb_frontend *(*)(const struct au8522_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13470: Function pointer *__a___3 with type struct dvb_frontend *(*)(struct dvb_frontend *, struct i2c_adapter *, u8 , struct mxl5007t_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 13426-13427: Function pointer *__a___2 with type struct dvb_frontend *(*)(const struct au8522_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13342: Function pointer *__a___0 with type struct dvb_frontend *(*)(struct dvb_frontend *, struct i2c_adapter *, const struct xc5000_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13382: Function pointer *__a___1 with type struct dvb_frontend *(*)(struct dvb_frontend *, struct i2c_adapter *, const struct xc5000_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 13287-13288: Function pointer *__a with type struct dvb_frontend *(*)(const struct au8522_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13135: Function pointer *(dvb->demux.dmx.remove_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13136: Function pointer *(dvb->demux.dmx.remove_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15936: Function pointer *(__sd___0->ops->tuner->s_frequency) with type int (*)(struct v4l2_subdev *, const struct v4l2_frequency *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15916: Function pointer *(__sd->ops->core->s_std) with type int (*)(struct v4l2_subdev *, v4l2_std_id ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15837: Function pointer *(__sd->ops->core->s_power) with type int (*)(struct v4l2_subdev *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13026: Function pointer *(dvb->demux.dmx.add_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13039: Function pointer *(dvb->demux.dmx.add_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13051: Function pointer *(dvb->demux.dmx.connect_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13069: Function pointer *(dvb->demux.dmx.remove_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13073: Function pointer *(dvb->demux.dmx.remove_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14110: Function pointer *(dev->dvb.frontend->ops.analog_ops.i2c_gate_ctrl) with type int (*)(struct dvb_frontend *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8749: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16716: Function pointer *(__sd->ops->tuner->g_tuner) with type int (*)(struct v4l2_subdev *, struct v4l2_tuner *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17203: Function pointer *(__sd->ops->core->log_status) with type int (*)(struct v4l2_subdev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16857: Function pointer *(__sd___0->ops->tuner->g_frequency) with type int (*)(struct v4l2_subdev *, struct v4l2_frequency *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16837: Function pointer *(__sd->ops->tuner->s_frequency) with type int (*)(struct v4l2_subdev *, const struct v4l2_frequency *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16371: Function pointer *(__sd->ops->core->s_std) with type int (*)(struct v4l2_subdev *, v4l2_std_id ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16762: Function pointer *(__sd->ops->tuner->s_tuner) with type int (*)(struct v4l2_subdev *, const struct v4l2_tuner *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17078: Function pointer *(__sd->ops->video->s_stream) with type int (*)(struct v4l2_subdev *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16989: Function pointer *(__sd->ops->video->s_stream) with type int (*)(struct v4l2_subdev *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9963: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9963: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function video_devdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_event_unsubscribe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_subscribe_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14110: Ignoring function call through function pointer *(dev->dvb.frontend->ops.analog_ops.i2c_gate_ctrl): (*(dev->dvb.frontend->ops.analog_ops.i2c_gate_ctrl))(dev->dvb.frontend, val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15916: Ignoring function call through function pointer *(__sd->ops->core->s_std): (*(__sd->ops->core->s_std))(__sd, dev->std); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15936: Ignoring function call through function pointer *(__sd___0->ops->tuner->s_frequency): (*(__sd___0->ops->tuner->s_frequency))(__sd___0, (const struct v4l2_frequency *)(&f)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16762: Ignoring function call through function pointer *(__sd->ops->tuner->s_tuner): (*(__sd->ops->tuner->s_tuner))(__sd, t); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16371: Ignoring function call through function pointer *(__sd->ops->core->s_std): (*(__sd->ops->core->s_std))(__sd, norm); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16519: Ignoring function call through function pointer *(__sd->ops->video->s_routing): (*(__sd->ops->video->s_routing))(__sd, ((dev->board.input)[index]).vmux, 0U, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16554: Ignoring function call through function pointer *(((dev->board.input)[i]).audio_setup): (*(((dev->board.input)[i]).audio_setup))((void *)dev, enable); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16549: Ignoring function call through function pointer *(((dev->board.input)[i]).audio_setup): (*(((dev->board.input)[i]).audio_setup))((void *)dev, enable); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 16576-16577: Ignoring function call through function pointer *(__sd___0->ops->audio->s_routing): (*(__sd___0->ops->audio->s_routing))(__sd___0, ((dev->board.input)[index]).amux, 0U, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16837: Ignoring function call through function pointer *(__sd->ops->tuner->s_frequency): (*(__sd->ops->tuner->s_frequency))(__sd, freq); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16857: Ignoring function call through function pointer *(__sd___0->ops->tuner->g_frequency): (*(__sd___0->ops->tuner->g_frequency))(__sd___0, &new_freq); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function videobuf_queue_is_busy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function videobuf_reqbufs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function videobuf_querybuf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function videobuf_qbuf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_log_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 17203: Ignoring function call through function pointer *(__sd->ops->core->log_status): (*(__sd->ops->core->log_status))(__sd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16716: Ignoring function call through function pointer *(__sd->ops->tuner->g_tuner): (*(__sd->ops->tuner->g_tuner))(__sd, t); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function videobuf_dqbuf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_ioctl2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function videobuf_mmap_mapper to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_device_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 18643: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function videobuf_iolock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15184: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function ldv_check_alloc_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13830: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function videobuf_vmalloc_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_get_timestamp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_fh_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11619: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___22 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function dvb_net_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13135: Ignoring function call through function pointer *(dvb->demux.dmx.remove_frontend): (*(dvb->demux.dmx.remove_frontend))(&(dvb->demux.dmx), &(dvb->fe_mem)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13136: Ignoring function call through function pointer *(dvb->demux.dmx.remove_frontend): (*(dvb->demux.dmx.remove_frontend))(&(dvb->demux.dmx), &(dvb->fe_hw)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dvb_dmxdev_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_dmx_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_frontend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_frontend_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1519867 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1346521 (89%)
  Because of loop head:            161371 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11975 (1%)
  Times precision was empty:       793587 (52%)
  Times precision was {false}:     16084 (1%)
  Times result was cached:         677256 (45%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      32940 (2%)
  Times result was 'false':        193433 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         914852
  BDD entailment checks:           296530
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       89
Number of predicates discovered:          52
Number of abstraction locations:          187
Max number of predicates per location:    51
Avg number of predicates per location:    16
Total predicates per abstraction:         12007503
Max number of predicates per abstraction: 51
Avg number of predicates per abstraction: 244.93
Number of irrelevant predicates:          4570637 (38%)
Number of preds handled by boolean abs:   599435 (5%)
  Total number of models for allsat:      747115
  Max number of models for allsat:        1760
  Avg number of models for allsat:        22.68

Time for post operator:                 73.285s
  Time for path formula creation:       69.733s
Time for strengthen operator:            7.399s
Time for prec operator:                589.754s
  Time for abstraction:                570.382s (Max:     0.784s, Count: 1519867)
    Boolean abstraction:               173.467s
    Solving time:                       58.650s (Max:     0.018s)
    Model enumeration time:             68.957s
    Time for BDD construction:          47.609s (Max:     0.183s)
Time for merge operator:                 3.564s
Time for coverage check:                 0.686s
  Time for BDD entailment checks:        0.578s
Total time for SMT solver (w/o itp):   127.607s

Number of path formula cache hits:   9616090 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    27.929s

Total number of created targets for pointer analysis: 13842
   Number of created targets for uf: *(void)* is 25
   Number of created targets for uf: *(struct_device_private)* is 5
   Number of created targets for uf: *signed_int is 358
   Number of created targets for uf: *(char)* is 6397
   Number of created targets for uf: *unsigned_char is 16
   Number of created targets for uf: *(struct_au0828_buffer)* is 179
   Number of created targets for uf: *unsigned_long_long_int is 2
   Number of created targets for uf: *unsigned_int is 97
   Number of created targets for uf: *unsigned_long_int is 1123


Number of BDD nodes:                               265834
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      295813 (count: 1487264, min: 0, max: 2871, avg: 0.20)
Time for BDD node cleanup:                             0.288s
Time for BDD garbage collection:                       0.645s (in 174 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.099s
  Time for transition matches:                         6.052s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.023s
Automaton transfers with branching:                0
Automaton transfer successors:                      8651842 (count: 8651842, min: 1, max: 1, avg: 1.00) [1 x 8651842]

CPA algorithm statistics
------------------------
Number of iterations:            6208201
Max size of waitlist:            680
Average size of waitlist:        242
Number of computed successors:   7128102
Max successors for one state:    2
Number of times merged:          309161
Number of times stopped:         418984
Number of times breaked:         779

Total time for CPA algorithm:       847.674s (Max:     9.317s)
  Time for choose from waitlist:      3.262s
  Time for precision adjustment:    632.391s
  Time for transfer relation:       160.193s
  Time for merge operator:            9.835s
  Time for stop operator:            12.571s
  Time for adding to reached set:    12.962s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   779
Avg. length of target path (in blocks):               38680 (count: 779, min: 15, max: 96, avg: 49.65)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  39.352s
  Counterexample analysis:                            28.204s (Max:     0.083s, Calls: 779)
    Refinement sat check:                             21.108s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.024s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.280s
  Precision update:                                    0.750s
  ARG update:                                          9.692s

Length of refined path (in blocks):                   32015 (count: 778, min: 11, max: 96, avg: 41.15)
Number of affected states:                            25378 (count: 778, min: 4, max: 94, avg: 32.62)
Length (states) of path with itp 'true':               5859 (count: 778, min: 1, max: 55, avg: 7.53)
Length (states) of path with itp non-trivial itp:     25378 (count: 778, min: 4, max: 94, avg: 32.62)
Length (states) of path with itp 'false':               528 (count: 778, min: 0, max: 1, avg: 0.68)
Different non-trivial interpolants along paths:         267 (count: 778, min: 0, max: 1, avg: 0.34)
Equal non-trivial interpolants along paths:           24333 (count: 778, min: 3, max: 92, avg: 31.28)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                779
Number of successful refinements:     778
Number of failed refinements:         0
Max. size of reached set before ref.: 19460
Max. size of reached set after ref.:  8722
Avg. size of reached set before ref.: 8782.98
Avg. size of reached set after ref.:  419.35

Total time for CEGAR algorithm:     891.097s
Time for refinements:                43.165s
Average time for refinement:          0.055s
Max time for refinement:              0.171s

Code Coverage
-----------------------------
  Function coverage:      0.273
  Visited lines:          2563
  Total lines:            6405
  Line coverage:          0.400
  Visited conditions:     356
  Total conditions:       1554
  Condition coverage:     0.229

CPAchecker general statistics
-----------------------------
Number of program locations:     8891
Number of CFA edges:             10023
Number of relevant variables:    1325
Number of functions:             377
Number of loops:                 46
Size of reached set:             8412
  Number of reached locations:   1204 (14%)
    Avg states per location:     6
    Max states per location:     125 (at node N7254)
  Number of reached functions:   103 (27%)
  Number of partitions:          8333
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N596 (before line 9019), Function main called from node N554, stack depth 1 [121ddca4], stack [main]])
  Number of target states:       1
  Size of final wait list        287

Time for analysis setup:          9.153s
  Time for loading CPAs:          1.322s
  Time for loading parser:        0.738s
  Time for CFA construction:      6.909s
    Time for parsing file(s):     1.501s
    Time for AST to CFA:          2.639s
    Time for CFA sanity check:    0.613s
    Time for post-processing:     1.930s
      Time for var class.:        0.808s
Time for Analysis:              891.097s
CPU time for analysis:          890.960s
Total time for CPAchecker:      900.256s
Total CPU time for CPAchecker:  900.100s
Time for statistics:              0.262s

Time for Garbage Collector:      41.366s (in 2366 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                382MB (   364 MiB) max;    200MB (   191 MiB) avg;    388MB (   370 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           433MB (   413 MiB) max;    312MB (   297 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   9304MB (  8873 MiB) max;   8451MB (  8059 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
