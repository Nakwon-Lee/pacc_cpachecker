scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-8390-axnet_cs_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4e1829gx/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5489: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: __ms = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8563: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8566: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8568: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8657: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9100: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9113: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9406: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9420: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9462: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9463: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9508: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10022: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10050: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10090: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10109: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10137: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10153: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9961: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9961: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5515: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pcmcia_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_loop_config to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_write_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_register_netdev to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_dev_present to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc32_le to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bitrev32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9146: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9146: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pcmcia_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7931: Ignoring function call through function pointer *(ei_local->get_8390_hdr): (*(ei_local->get_8390_hdr))(dev, &rx_frame, (int)this_frame); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7967: Ignoring function call through function pointer *(ei_local->block_input): (*(ei_local->block_input))(dev, pkt_len, skb, (int)(((unsigned int)current_offset) + 4U)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4239199 (29% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3939412 (93%)
  Because of loop head:            298238 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1549 (0%)
  Times precision was empty:       590863 (14%)
  Times precision was {false}:     836 (0%)
  Times result was cached:         3643755 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3745 (0%)
  Times result was 'false':        160435 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         1336679
  BDD entailment checks:           497819
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       37
Number of predicates discovered:          17
Number of abstraction locations:          141
Max number of predicates per location:    10
Avg number of predicates per location:    2
Total predicates per abstraction:         10837535
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 2365.76
Number of irrelevant predicates:          6836738 (63%)
Number of preds handled by boolean abs:   6496 (0%)
  Total number of models for allsat:      3814
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.02

Time for post operator:                102.305s
  Time for path formula creation:       96.840s
Time for strengthen operator:           11.130s
Time for prec operator:                393.879s
  Time for abstraction:                340.865s (Max:     1.485s, Count: 4239199)
    Boolean abstraction:                 3.365s
    Solving time:                        3.082s (Max:     0.015s)
    Model enumeration time:              0.317s
    Time for BDD construction:           0.223s (Max:     0.013s)
Time for merge operator:                 4.020s
Time for coverage check:                 0.666s
  Time for BDD entailment checks:        0.483s
Total time for SMT solver (w/o itp):     3.399s

Number of path formula cache hits:   16932464 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    48.850s

Total number of created targets for pointer analysis: 3806
   Number of created targets for uf: *unsigned_short_int is 1183
   Number of created targets for uf: *unsigned_char is 2625


Number of BDD nodes:                               499
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7978 (count: 1144210, min: 0, max: 208, avg: 0.01)
Time for BDD node cleanup:                             0.248s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 18.874s
  Time for transition matches:                        10.189s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.010s
Automaton transfers with branching:                0
Automaton transfer successors:                     14477069 (count: 14477069, min: 1, max: 1, avg: 1.00) [1 x 14477069]

CPA algorithm statistics
------------------------
Number of iterations:            11277162
Max size of waitlist:            43
Average size of waitlist:        27
Number of computed successors:   12218057
Max successors for one state:    2
Number of times merged:          419430
Number of times stopped:         775974
Number of times breaked:         661

Total time for CPA algorithm:       827.923s (Max:     3.141s)
  Time for choose from waitlist:      4.504s
  Time for precision adjustment:    471.516s
  Time for transfer relation:       279.940s
  Time for merge operator:            9.870s
  Time for stop operator:            13.375s
  Time for adding to reached set:    19.438s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   661
Avg. length of target path (in blocks):              115455 (count: 661, min: 13, max: 414, avg: 174.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  46.519s
  Counterexample analysis:                            24.842s (Max:     0.198s, Calls: 661)
    Refinement sat check:                              8.079s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.080s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.636s
  Precision update:                                    0.368s
  ARG update:                                         20.090s

Length of refined path (in blocks):                  102136 (count: 661, min: 9, max: 379, avg: 154.52)
Number of affected states:                            71834 (count: 661, min: 4, max: 315, avg: 108.67)
Length (states) of path with itp 'true':              29641 (count: 661, min: 0, max: 124, avg: 44.84)
Length (states) of path with itp non-trivial itp:     71834 (count: 661, min: 4, max: 315, avg: 108.67)
Length (states) of path with itp 'false':               448 (count: 661, min: 0, max: 1, avg: 0.68)
Different non-trivial interpolants along paths:         213 (count: 661, min: 0, max: 1, avg: 0.32)
Equal non-trivial interpolants along paths:           70960 (count: 661, min: 3, max: 314, avg: 107.35)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                661
Number of successful refinements:     661
Number of failed refinements:         0
Max. size of reached set before ref.: 44955
Max. size of reached set after ref.:  27070
Avg. size of reached set before ref.: 29364.97
Avg. size of reached set after ref.:  12312.57

Total time for CEGAR algorithm:     893.540s
Time for refinements:                60.083s
Average time for refinement:          0.090s
Max time for refinement:              0.302s

Code Coverage
-----------------------------
  Function coverage:      0.304
  Visited lines:          2038
  Total lines:            3719
  Line coverage:          0.548
  Visited conditions:     302
  Total conditions:       724
  Condition coverage:     0.417

CPAchecker general statistics
-----------------------------
Number of program locations:     5241
Number of CFA edges:             5973
Number of relevant variables:    606
Number of functions:             283
Number of loops:                 22
Size of reached set:             10008
  Number of reached locations:   1181 (23%)
    Avg states per location:     8
    Max states per location:     318 (at node N20)
  Number of reached functions:   86 (30%)
  Number of partitions:          9988
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N2351 (before line 9015), Function main called from node N2339, stack depth 1 [54d1608f], stack [main]])
  Number of target states:       0
  Size of final wait list        26

Time for analysis setup:          6.732s
  Time for loading CPAs:          1.080s
  Time for loading parser:        0.705s
  Time for CFA construction:      4.831s
    Time for parsing file(s):     1.182s
    Time for AST to CFA:          1.833s
    Time for CFA sanity check:    0.342s
    Time for post-processing:     1.204s
      Time for var class.:        0.571s
Time for Analysis:              893.540s
CPU time for analysis:          893.450s
Total time for CPAchecker:      900.277s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              0.261s

Time for Garbage Collector:      58.230s (in 1292 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                762MB (   726 MiB) max;    480MB (   457 MiB) avg;    831MB (   793 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           942MB (   899 MiB) max;    670MB (   639 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8083MB (  7708 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
