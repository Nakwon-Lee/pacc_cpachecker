scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-8390-axnet_cs_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_mm9cxoic/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5489: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: __ms = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8563: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8566: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8568: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8657: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9100: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9113: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9406: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9420: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9462: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9463: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9508: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10022: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10050: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10090: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10109: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10137: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10153: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9961: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9961: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9146: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9146: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_write_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5515: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1702530 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1400101 (82%)
  Because of loop head:            296607 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5822 (0%)
  Times precision was empty:       547045 (32%)
  Times precision was {false}:     6704 (0%)
  Times result was cached:         1094702 (64%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      54079 (3%)
  Times result was 'false':        180039 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         4965742
  BDD entailment checks:           4638490
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       37
Number of predicates discovered:          35
Number of abstraction locations:          151
Max number of predicates per location:    33
Avg number of predicates per location:    10
Total predicates per abstraction:         15600833
Max number of predicates per abstraction: 33
Avg number of predicates per abstraction: 256.66
Number of irrelevant predicates:          6971039 (45%)
Number of preds handled by boolean abs:   636303 (4%)
  Total number of models for allsat:      240636
  Max number of models for allsat:        65
  Avg number of models for allsat:        4.45

Time for post operator:                 37.057s
  Time for path formula creation:       33.728s
Time for strengthen operator:            6.509s
Time for prec operator:                628.134s
  Time for abstraction:                611.836s (Max:     1.155s, Count: 1702530)
    Boolean abstraction:               111.884s
    Solving time:                       68.169s (Max:     0.016s)
    Model enumeration time:             27.884s
    Time for BDD construction:           8.719s (Max:     0.092s)
Time for merge operator:                 1.099s
Time for coverage check:                 5.182s
  Time for BDD entailment checks:        4.358s
Total time for SMT solver (w/o itp):    96.053s

Number of path formula cache hits:   9073149 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    17.129s

Total number of created targets for pointer analysis: 2
   Number of created targets for uf: *(void)* is 3


Number of BDD nodes:                               157116
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      223419 (count: 5616586, min: 0, max: 2479, avg: 0.04)
Time for BDD node cleanup:                             0.635s
Time for BDD garbage collection:                       0.092s (in 2 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.113s
  Time for transition matches:                         5.924s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.022s
Automaton transfers with branching:                0
Automaton transfer successors:                      8129058 (count: 8129058, min: 1, max: 1, avg: 1.00) [1 x 8129058]

CPA algorithm statistics
------------------------
Number of iterations:            6067262
Max size of waitlist:            1130
Average size of waitlist:        408
Number of computed successors:   6822744
Max successors for one state:    2
Number of times merged:          163626
Number of times stopped:         430577
Number of times breaked:         667

Total time for CPA algorithm:       854.342s (Max:     8.469s)
  Time for choose from waitlist:      2.654s
  Time for precision adjustment:    668.052s
  Time for transfer relation:       132.813s
  Time for merge operator:            6.904s
  Time for stop operator:            19.964s
  Time for adding to reached set:     9.087s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   667
Avg. length of target path (in blocks):               38242 (count: 667, min: 13, max: 79, avg: 57.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  20.626s
  Counterexample analysis:                             9.171s (Max:     0.040s, Calls: 667)
    Refinement sat check:                              5.268s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.044s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.210s
  Precision update:                                    0.498s
  ARG update:                                         10.351s

Length of refined path (in blocks):                   34156 (count: 667, min: 9, max: 75, avg: 51.21)
Number of affected states:                            15964 (count: 667, min: 4, max: 74, avg: 23.93)
Length (states) of path with itp 'true':              17525 (count: 667, min: 0, max: 53, avg: 26.27)
Length (states) of path with itp non-trivial itp:     15964 (count: 667, min: 4, max: 74, avg: 23.93)
Length (states) of path with itp 'false':               554 (count: 667, min: 0, max: 1, avg: 0.83)
Different non-trivial interpolants along paths:         126 (count: 667, min: 0, max: 1, avg: 0.19)
Equal non-trivial interpolants along paths:           15171 (count: 667, min: 3, max: 72, avg: 22.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                667
Number of successful refinements:     667
Number of failed refinements:         0
Max. size of reached set before ref.: 48747
Max. size of reached set after ref.:  41348
Avg. size of reached set before ref.: 22416.84
Avg. size of reached set after ref.:  13147.40

Total time for CEGAR algorithm:     893.130s
Time for refinements:                31.751s
Average time for refinement:          0.047s
Max time for refinement:              0.152s

Code Coverage
-----------------------------
  Function coverage:      0.272
  Visited lines:          1732
  Total lines:            3719
  Line coverage:          0.466
  Visited conditions:     186
  Total conditions:       724
  Condition coverage:     0.257

CPAchecker general statistics
-----------------------------
Number of program locations:     5241
Number of CFA edges:             5973
Number of relevant variables:    606
Number of functions:             283
Number of loops:                 22
Size of reached set:             29415
  Number of reached locations:   765 (15%)
    Avg states per location:     38
    Max states per location:     439 (at node N3343)
  Number of reached functions:   77 (27%)
  Number of partitions:          29105
    Avg size of partitions:      1
    Max size of partitions:      49 (with key [N2351 (before line 9015), Function main called from node N2339, stack depth 1 [4fb392c4], stack [main]])
  Number of target states:       0
  Size of final wait list        718

Time for analysis setup:          7.162s
  Time for loading CPAs:          1.101s
  Time for loading parser:        0.743s
  Time for CFA construction:      5.161s
    Time for parsing file(s):     1.261s
    Time for AST to CFA:          1.831s
    Time for CFA sanity check:    0.415s
    Time for post-processing:     1.455s
      Time for var class.:        0.567s
Time for Analysis:              893.130s
CPU time for analysis:          893.000s
Total time for CPAchecker:      900.305s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              0.556s

Time for Garbage Collector:      60.288s (in 1859 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                585MB (   558 MiB) max;    299MB (   285 MiB) avg;    601MB (   573 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           605MB (   577 MiB) max;    432MB (   412 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   9504MB (  9064 MiB) max;   8750MB (  8344 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
