scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-8390-axnet_cs_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_75copvgx/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5489: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: __ms = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8563: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8566: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8568: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8657: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9100: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9113: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9406: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9420: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9462: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9463: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9508: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10022: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10050: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10090: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10109: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10137: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10153: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9961: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9961: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9146: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9146: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_write_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5515: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_loop_config to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_register_netdev to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_dev_present to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_notice to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2904940 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2601428 (90%)
  Because of loop head:            298138 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5374 (0%)
  Times precision was empty:       1712604 (59%)
  Times precision was {false}:     4916 (0%)
  Times result was cached:         1154934 (40%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      32486 (1%)
  Times result was 'false':        99630 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         694689
  BDD entailment checks:           448657
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       37
Number of predicates discovered:          42
Number of abstraction locations:          159
Max number of predicates per location:    36
Avg number of predicates per location:    12
Total predicates per abstraction:         16619989
Max number of predicates per abstraction: 36
Avg number of predicates per abstraction: 444.36
Number of irrelevant predicates:          10686155 (64%)
Number of preds handled by boolean abs:   419593 (3%)
  Total number of models for allsat:      175329
  Max number of models for allsat:        210
  Avg number of models for allsat:        5.40

Time for post operator:                 39.039s
  Time for path formula creation:       34.557s
Time for strengthen operator:            8.790s
Time for prec operator:                526.011s
  Time for abstraction:                501.009s (Max:     0.623s, Count: 2904940)
    Boolean abstraction:                67.878s
    Solving time:                       40.068s (Max:     0.015s)
    Model enumeration time:             16.626s
    Time for BDD construction:           6.636s (Max:     0.086s)
Time for merge operator:                 0.682s
Time for coverage check:                 0.658s
  Time for BDD entailment checks:        0.521s
Total time for SMT solver (w/o itp):    56.694s

Number of path formula cache hits:   13403995 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.860s

Total number of created targets for pointer analysis: 70
   Number of created targets for uf: *signed_int is 8


Number of BDD nodes:                               135756
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      171954 (count: 2447791, min: 0, max: 1283, avg: 0.07)
Time for BDD node cleanup:                             0.452s
Time for BDD garbage collection:                       0.072s (in 2 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 15.349s
  Time for transition matches:                         8.083s
  Time for transition assertions:                      0.010s
  Time for transition actions:                         0.016s
Automaton transfers with branching:                0
Automaton transfer successors:                     10881070 (count: 10881070, min: 1, max: 1, avg: 1.00) [1 x 10881070]

CPA algorithm statistics
------------------------
Number of iterations:            8040285
Max size of waitlist:            1790
Average size of waitlist:        608
Number of computed successors:   8795907
Max successors for one state:    2
Number of times merged:          123016
Number of times stopped:         213183
Number of times breaked:         1419

Total time for CPA algorithm:       815.705s (Max:     3.578s)
  Time for choose from waitlist:      3.747s
  Time for precision adjustment:    581.404s
  Time for transfer relation:       184.134s
  Time for merge operator:            2.837s
  Time for stop operator:             9.512s
  Time for adding to reached set:    15.015s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1419
Avg. length of target path (in blocks):              107328 (count: 1419, min: 13, max: 124, avg: 75.64)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  45.919s
  Counterexample analysis:                            29.360s (Max:     0.071s, Calls: 1419)
    Refinement sat check:                             14.168s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.080s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.312s
  Precision update:                                    1.225s
  ARG update:                                         14.338s

Length of refined path (in blocks):                   63023 (count: 1419, min: 9, max: 95, avg: 44.41)
Number of affected states:                            21437 (count: 1419, min: 2, max: 94, avg: 15.11)
Length (states) of path with itp 'true':              40167 (count: 1419, min: 0, max: 57, avg: 28.31)
Length (states) of path with itp non-trivial itp:     21437 (count: 1419, min: 2, max: 94, avg: 15.11)
Length (states) of path with itp 'false':               871 (count: 1419, min: 0, max: 1, avg: 0.61)
Different non-trivial interpolants along paths:        1020 (count: 1419, min: 0, max: 1, avg: 0.72)
Equal non-trivial interpolants along paths:           18998 (count: 1419, min: 0, max: 92, avg: 13.39)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1419
Number of successful refinements:     1419
Number of failed refinements:         0
Max. size of reached set before ref.: 36985
Max. size of reached set after ref.:  28706
Avg. size of reached set before ref.: 18423.10
Avg. size of reached set after ref.:  12454.89

Total time for CEGAR algorithm:     893.449s
Time for refinements:                65.456s
Average time for refinement:          0.046s
Max time for refinement:              0.185s

Code Coverage
-----------------------------
  Function coverage:      0.261
  Visited lines:          1818
  Total lines:            3719
  Line coverage:          0.489
  Visited conditions:     214
  Total conditions:       724
  Condition coverage:     0.296

CPAchecker general statistics
-----------------------------
Number of program locations:     5241
Number of CFA edges:             5973
Number of relevant variables:    606
Number of functions:             283
Number of loops:                 22
Size of reached set:             14211
  Number of reached locations:   836 (16%)
    Avg states per location:     16
    Max states per location:     309 (at node N3342)
  Number of reached functions:   74 (26%)
  Number of partitions:          14152
    Avg size of partitions:      1
    Max size of partitions:      11 (with key [N2351 (before line 9015), Function main called from node N2339, stack depth 1 [4fb392c4], stack [main]])
  Number of target states:       0
  Size of final wait list        685

Time for analysis setup:          6.817s
  Time for loading CPAs:          1.045s
  Time for loading parser:        0.692s
  Time for CFA construction:      4.914s
    Time for parsing file(s):     1.155s
    Time for AST to CFA:          1.847s
    Time for CFA sanity check:    0.365s
    Time for post-processing:     1.316s
      Time for var class.:        0.562s
Time for Analysis:              893.449s
CPU time for analysis:          893.340s
Total time for CPAchecker:      900.274s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              0.380s

Time for Garbage Collector:      81.114s (in 2892 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                342MB (   326 MiB) max;    183MB (   175 MiB) avg;    348MB (   332 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           349MB (   332 MiB) max;    271MB (   259 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8691MB (  8288 MiB) max;   8332MB (  7946 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
