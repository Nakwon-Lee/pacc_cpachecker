scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-8390-axnet_cs_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_olnzcj7n/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5489: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: __ms = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8563: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8566: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8568: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8657: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9100: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9113: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9406: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9420: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9462: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9463: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9508: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10022: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10050: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10090: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10109: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10137: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10153: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9961: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9961: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9146: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9146: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_write_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5515: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_loop_config to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_register_netdev to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_dev_present to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_notice to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2827200 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2531536 (90%)
  Because of loop head:            290540 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5124 (0%)
  Times precision was empty:       1671269 (59%)
  Times precision was {false}:     4824 (0%)
  Times result was cached:         1119393 (40%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      31714 (1%)
  Times result was 'false':        97284 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         679542
  BDD entailment checks:           439080
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       37
Number of predicates discovered:          42
Number of abstraction locations:          159
Max number of predicates per location:    36
Avg number of predicates per location:    12
Total predicates per abstraction:         16001130
Max number of predicates per abstraction: 36
Avg number of predicates per abstraction: 437.93
Number of irrelevant predicates:          10269281 (64%)
Number of preds handled by boolean abs:   405752 (3%)
  Total number of models for allsat:      172105
  Max number of models for allsat:        210
  Avg number of models for allsat:        5.43

Time for post operator:                 38.735s
  Time for path formula creation:       33.852s
Time for strengthen operator:            8.244s
Time for prec operator:                522.995s
  Time for abstraction:                498.490s (Max:     0.685s, Count: 2827200)
    Boolean abstraction:                67.763s
    Solving time:                       39.989s (Max:     0.015s)
    Model enumeration time:             16.624s
    Time for BDD construction:           7.124s (Max:     0.410s)
Time for merge operator:                 0.749s
Time for coverage check:                 0.637s
  Time for BDD entailment checks:        0.532s
Total time for SMT solver (w/o itp):    56.613s

Number of path formula cache hits:   13074157 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.856s

Total number of created targets for pointer analysis: 40
   Number of created targets for uf: *signed_int is 5


Number of BDD nodes:                               126435
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      166834 (count: 2390126, min: 0, max: 1505, avg: 0.07)
Time for BDD node cleanup:                             0.452s
Time for BDD garbage collection:                       0.088s (in 2 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 14.591s
  Time for transition matches:                         7.901s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.016s
Automaton transfers with branching:                0
Automaton transfer successors:                     10603397 (count: 10603397, min: 1, max: 1, avg: 1.00) [1 x 10603397]

CPA algorithm statistics
------------------------
Number of iterations:            7834899
Max size of waitlist:            1790
Average size of waitlist:        606
Number of computed successors:   8572639
Max successors for one state:    2
Number of times merged:          120231
Number of times stopped:         208277
Number of times breaked:         1368

Total time for CPA algorithm:       813.131s (Max:     3.580s)
  Time for choose from waitlist:      3.702s
  Time for precision adjustment:    578.880s
  Time for transfer relation:       183.425s
  Time for merge operator:            3.127s
  Time for stop operator:             9.622s
  Time for adding to reached set:    14.725s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1368
Avg. length of target path (in blocks):              102568 (count: 1368, min: 13, max: 118, avg: 74.98)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  47.204s
  Counterexample analysis:                            29.686s (Max:     0.636s, Calls: 1368)
    Refinement sat check:                             13.872s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.076s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.291s
  Precision update:                                    1.201s
  ARG update:                                         15.279s

Length of refined path (in blocks):                   60432 (count: 1368, min: 9, max: 95, avg: 44.18)
Number of affected states:                            20844 (count: 1368, min: 2, max: 94, avg: 15.24)
Length (states) of path with itp 'true':              38220 (count: 1368, min: 0, max: 57, avg: 27.94)
Length (states) of path with itp non-trivial itp:     20844 (count: 1368, min: 2, max: 94, avg: 15.24)
Length (states) of path with itp 'false':               842 (count: 1368, min: 0, max: 1, avg: 0.62)
Different non-trivial interpolants along paths:         972 (count: 1368, min: 0, max: 1, avg: 0.71)
Equal non-trivial interpolants along paths:           18504 (count: 1368, min: 0, max: 92, avg: 13.53)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1368
Number of successful refinements:     1368
Number of failed refinements:         0
Max. size of reached set before ref.: 36985
Max. size of reached set after ref.:  26354
Avg. size of reached set before ref.: 18300.49
Avg. size of reached set after ref.:  12257.34

Total time for CEGAR algorithm:     893.605s
Time for refinements:                67.800s
Average time for refinement:          0.049s
Max time for refinement:              0.655s

Code Coverage
-----------------------------
  Function coverage:      0.035
  Visited lines:          1042
  Total lines:            3719
  Line coverage:          0.280
  Visited conditions:     12
  Total conditions:       724
  Condition coverage:     0.017

CPAchecker general statistics
-----------------------------
Number of program locations:     5241
Number of CFA edges:             5973
Number of relevant variables:    606
Number of functions:             283
Number of loops:                 22
Size of reached set:             53
  Number of reached locations:   53 (1%)
    Avg states per location:     1
    Max states per location:     1 (at node N2084)
  Number of reached functions:   10 (4%)
  Number of partitions:          53
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        7

Time for analysis setup:          6.675s
  Time for loading CPAs:          1.173s
  Time for loading parser:        0.742s
  Time for CFA construction:      4.650s
    Time for parsing file(s):     1.126s
    Time for AST to CFA:          1.685s
    Time for CFA sanity check:    0.318s
    Time for post-processing:     1.305s
      Time for var class.:        0.613s
Time for Analysis:              893.605s
CPU time for analysis:          893.480s
Total time for CPAchecker:      900.287s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              0.083s

Time for Garbage Collector:      83.343s (in 2841 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                339MB (   323 MiB) max;    182MB (   173 MiB) avg;    345MB (   329 MiB) peak
Used non-heap memory:             41MB (    40 MiB) max;     40MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           342MB (   326 MiB) max;    269MB (   257 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8693MB (  8291 MiB) max;   8321MB (  7936 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
