scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-8390-axnet_cs_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_am1_o5_2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5489: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: __ms = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8563: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8566: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8568: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8657: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9100: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9113: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9406: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9420: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9462: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9463: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9508: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10022: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10050: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10090: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10109: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10137: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10153: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9961: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9961: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9146: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9146: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_write_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5515: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_loop_config to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1051036 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  843164 (80%)
  Because of loop head:            205772 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2100 (0%)
  Times precision was empty:       403364 (38%)
  Times precision was {false}:     16675 (2%)
  Times result was cached:         541635 (52%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      89362 (9%)
  Times result was 'false':        107179 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         2332949
  BDD entailment checks:           2168769
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       37
Number of predicates discovered:          42
Number of abstraction locations:          155
Max number of predicates per location:    39
Avg number of predicates per location:    12
Total predicates per abstraction:         10934569
Max number of predicates per abstraction: 39
Avg number of predicates per abstraction: 103.12
Number of irrelevant predicates:          5379709 (49%)
Number of preds handled by boolean abs:   1172134 (11%)
  Total number of models for allsat:      842999
  Max number of models for allsat:        300
  Avg number of models for allsat:        9.43

Time for post operator:                 39.518s
  Time for path formula creation:       37.157s
Time for strengthen operator:            3.981s
Time for prec operator:                706.126s
  Time for abstraction:                694.951s (Max:     1.119s, Count: 1051036)
    Boolean abstraction:               277.971s
    Solving time:                      144.137s (Max:     0.031s)
    Model enumeration time:             93.457s
    Time for BDD construction:          33.403s (Max:     0.098s)
Time for merge operator:                 1.138s
Time for coverage check:                 3.346s
  Time for BDD entailment checks:        2.966s
Total time for SMT solver (w/o itp):   237.594s

Number of path formula cache hits:   4336006 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    27.121s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               262375
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      419522 (count: 3314177, min: 0, max: 5210, avg: 0.13)
Time for BDD node cleanup:                             0.566s
Time for BDD garbage collection:                       0.191s (in 17 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.573s
  Time for transition matches:                         3.564s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      4714386 (count: 4714386, min: 1, max: 1, avg: 1.00) [1 x 4714386]

CPA algorithm statistics
------------------------
Number of iterations:            3677942
Max size of waitlist:            1593
Average size of waitlist:        373
Number of computed successors:   4145834
Max successors for one state:    2
Number of times merged:          82090
Number of times stopped:         258809
Number of times breaked:         438

Total time for CPA algorithm:       871.407s (Max:    22.068s)
  Time for choose from waitlist:      2.034s
  Time for precision adjustment:    731.727s
  Time for transfer relation:       104.783s
  Time for merge operator:            4.136s
  Time for stop operator:            11.595s
  Time for adding to reached set:     7.294s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   438
Avg. length of target path (in blocks):               31839 (count: 438, min: 13, max: 148, avg: 72.69)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  17.274s
  Counterexample analysis:                             9.109s (Max:     0.085s, Calls: 438)
    Refinement sat check:                              4.613s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.234s
  Precision update:                                    0.378s
  ARG update:                                          7.245s

Length of refined path (in blocks):                   24917 (count: 438, min: 9, max: 138, avg: 56.89)
Number of affected states:                            15510 (count: 438, min: 2, max: 137, avg: 35.41)
Length (states) of path with itp 'true':               8969 (count: 438, min: 0, max: 94, avg: 20.48)
Length (states) of path with itp non-trivial itp:     15510 (count: 438, min: 2, max: 137, avg: 35.41)
Length (states) of path with itp 'false':               376 (count: 438, min: 0, max: 1, avg: 0.86)
Different non-trivial interpolants along paths:         161 (count: 438, min: 0, max: 1, avg: 0.37)
Equal non-trivial interpolants along paths:           14911 (count: 438, min: 0, max: 135, avg: 34.04)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                438
Number of successful refinements:     438
Number of failed refinements:         0
Max. size of reached set before ref.: 52292
Max. size of reached set after ref.:  22052
Avg. size of reached set before ref.: 11663.19
Avg. size of reached set after ref.:  3096.46

Total time for CEGAR algorithm:     893.127s
Time for refinements:                20.755s
Average time for refinement:          0.047s
Max time for refinement:              0.606s

Code Coverage
-----------------------------
  Function coverage:      0.251
  Visited lines:          1663
  Total lines:            3719
  Line coverage:          0.447
  Visited conditions:     182
  Total conditions:       724
  Condition coverage:     0.251

CPAchecker general statistics
-----------------------------
Number of program locations:     5241
Number of CFA edges:             5973
Number of relevant variables:    606
Number of functions:             283
Number of loops:                 22
Size of reached set:             27616
  Number of reached locations:   739 (14%)
    Avg states per location:     37
    Max states per location:     642 (at node N3343)
  Number of reached functions:   71 (25%)
  Number of partitions:          27247
    Avg size of partitions:      1
    Max size of partitions:      68 (with key [N2351 (before line 9015), Function main called from node N2339, stack depth 1 [4fb392c4], stack [main]])
  Number of target states:       0
  Size of final wait list        850

Time for analysis setup:          7.153s
  Time for loading CPAs:          1.336s
  Time for loading parser:        0.639s
  Time for CFA construction:      4.990s
    Time for parsing file(s):     1.186s
    Time for AST to CFA:          1.845s
    Time for CFA sanity check:    0.375s
    Time for post-processing:     1.377s
      Time for var class.:        0.632s
Time for Analysis:              893.127s
CPU time for analysis:          892.990s
Total time for CPAchecker:      900.285s
Total CPU time for CPAchecker:  900.130s
Time for statistics:              0.452s

Time for Garbage Collector:      38.503s (in 1441 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                663MB (   633 MiB) max;    319MB (   304 MiB) avg;    672MB (   641 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           766MB (   730 MiB) max;    478MB (   456 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  12937MB ( 12338 MiB) max;   9877MB (  9420 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
