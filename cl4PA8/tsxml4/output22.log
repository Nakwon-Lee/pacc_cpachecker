scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-8390-axnet_cs_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qly49y0_/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5489: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: __ms = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8563: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8566: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8568: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8657: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9100: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9113: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9406: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9420: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9462: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9463: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9508: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10022: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10050: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10090: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10109: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10137: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10153: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9961: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9961: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5515: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pcmcia_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_loop_config to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_write_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_register_netdev to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_dev_present to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc32_le to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bitrev32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9146: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9146: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pcmcia_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7931: Ignoring function call through function pointer *(ei_local->get_8390_hdr): (*(ei_local->get_8390_hdr))(dev, &rx_frame, (int)this_frame); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7967: Ignoring function call through function pointer *(ei_local->block_input): (*(ei_local->block_input))(dev, pkt_len, skb, (int)(((unsigned int)current_offset) + 4U)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            61352 (32% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  54373 (89%)
  Because of loop head:            6930 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         49 (0%)
  Times precision was empty:       41050 (67%)
  Times precision was {false}:     275 (0%)
  Times result was cached:         19693 (32%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      334 (1%)
  Times result was 'false':        390 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         13159
  BDD entailment checks:           7613
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       37
Number of predicates discovered:          15
Number of abstraction locations:          74
Max number of predicates per location:    10
Avg number of predicates per location:    2
Total predicates per abstraction:         40514
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 66.53
Number of irrelevant predicates:          31622 (78%)
Number of preds handled by boolean abs:   850 (2%)
  Total number of models for allsat:      373
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.12

Time for post operator:                  4.548s
  Time for path formula creation:        4.281s
Time for strengthen operator:            0.352s
Time for prec operator:                  5.905s
  Time for abstraction:                  4.647s (Max:     0.046s, Count: 61352)
    Boolean abstraction:                 0.471s
    Solving time:                        0.334s (Max:     0.013s)
    Model enumeration time:              0.056s
    Time for BDD construction:           0.105s (Max:     0.012s)
Time for merge operator:                 0.231s
Time for coverage check:                 0.073s
  Time for BDD entailment checks:        0.065s
Total time for SMT solver (w/o itp):     0.390s

Number of path formula cache hits:   217201 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.595s

Total number of created targets for pointer analysis: 24
   Number of created targets for uf: *unsigned_short_int is 9
   Number of created targets for uf: *unsigned_char is 17


Number of BDD nodes:                               387
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1041 (count: 52229, min: 0, max: 109, avg: 0.02)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.691s
  Time for transition matches:                         0.335s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       193597 (count: 193597, min: 1, max: 1, avg: 1.00) [1 x 193597]

CPA algorithm statistics
------------------------
Number of iterations:            153460
Max size of waitlist:            43
Average size of waitlist:        25
Number of computed successors:   164278
Max successors for one state:    2
Number of times merged:          2773
Number of times stopped:         9899
Number of times breaked:         33

Total time for CPA algorithm:        21.851s (Max:     2.416s)
  Time for choose from waitlist:      0.170s
  Time for precision adjustment:      8.146s
  Time for transfer relation:        10.547s
  Time for merge operator:            0.439s
  Time for stop operator:             0.588s
  Time for adding to reached set:     0.647s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   33
Avg. length of target path (in blocks):                1537 (count: 33, min: 13, max: 104, avg: 46.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.421s
  Counterexample analysis:                             0.715s (Max:     0.064s, Calls: 33)
    Refinement sat check:                              0.425s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.047s
  Precision update:                                    0.017s
  ARG update:                                          0.596s

Length of refined path (in blocks):                    1001 (count: 33, min: 9, max: 97, avg: 30.33)
Number of affected states:                              522 (count: 33, min: 4, max: 52, avg: 15.82)
Length (states) of path with itp 'true':                446 (count: 33, min: 0, max: 55, avg: 13.52)
Length (states) of path with itp non-trivial itp:       522 (count: 33, min: 4, max: 52, avg: 15.82)
Length (states) of path with itp 'false':                26 (count: 33, min: 0, max: 1, avg: 0.79)
Different non-trivial interpolants along paths:           7 (count: 33, min: 0, max: 1, avg: 0.21)
Equal non-trivial interpolants along paths:             482 (count: 33, min: 3, max: 51, avg: 14.61)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                33
Number of successful refinements:     33
Number of failed refinements:         0
Max. size of reached set before ref.: 20945
Max. size of reached set after ref.:  9372
Avg. size of reached set before ref.: 6505.30
Avg. size of reached set after ref.:  2431.94

Total time for CEGAR algorithm:      23.782s
Time for refinements:                 1.846s
Average time for refinement:          0.055s
Max time for refinement:              0.128s

Code Coverage
-----------------------------
  Function coverage:      0.329
  Visited lines:          2212
  Total lines:            3719
  Line coverage:          0.595
  Visited conditions:     364
  Total conditions:       724
  Condition coverage:     0.503

CPAchecker general statistics
-----------------------------
Number of program locations:     5241
Number of CFA edges:             5973
Number of relevant variables:    606
Number of functions:             283
Number of loops:                 22
Size of reached set:             19568
  Number of reached locations:   1382 (26%)
    Avg states per location:     14
    Max states per location:     626 (at node N20)
  Number of reached functions:   93 (33%)
  Number of partitions:          19520
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N2351 (before line 9015), Function main called from node N2339, stack depth 1 [54d1608f], stack [main]])
  Number of target states:       0
  Size of final wait list        25

Time for analysis setup:          6.427s
  Time for loading CPAs:          1.034s
  Time for loading parser:        0.705s
  Time for CFA construction:      4.577s
    Time for parsing file(s):     1.151s
    Time for AST to CFA:          1.795s
    Time for CFA sanity check:    0.309s
    Time for post-processing:     1.059s
      Time for var class.:        0.501s
Time for Analysis:               23.782s
CPU time for analysis:           23.780s
Total time for CPAchecker:       30.219s
Total CPU time for CPAchecker:   30.200s
Time for statistics:              0.526s

Time for Garbage Collector:       1.313s (in 67 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                115MB (   109 MiB) max;     59MB (    56 MiB) avg;    122MB (   116 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    40 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8089MB (  7714 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
