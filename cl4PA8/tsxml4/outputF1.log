scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-8390-axnet_cs_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_g1tsx6lh/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5489: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: __ms = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8563: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8566: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8568: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8657: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9100: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9113: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9406: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9420: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9462: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9463: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9508: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10022: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10050: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10090: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10109: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10137: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10153: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9961: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9961: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9146: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9146: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pcmcia_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_write_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5515: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc32_le to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bitrev32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_loop_config to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2498802 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2141784 (86%)
  Because of loop head:            352991 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4027 (0%)
  Times precision was empty:       691623 (28%)
  Times precision was {false}:     4886 (0%)
  Times result was cached:         1773267 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      29026 (1%)
  Times result was 'false':        133946 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         1815115
  BDD entailment checks:           1568957
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       37
Number of predicates discovered:          40
Number of abstraction locations:          249
Max number of predicates per location:    34
Avg number of predicates per location:    8
Total predicates per abstraction:         15981050
Max number of predicates per abstraction: 34
Avg number of predicates per abstraction: 471.25
Number of irrelevant predicates:          7730496 (48%)
Number of preds handled by boolean abs:   285396 (2%)
  Total number of models for allsat:      134435
  Max number of models for allsat:        70
  Avg number of models for allsat:        4.63

Time for post operator:                 30.153s
  Time for path formula creation:       26.389s
Time for strengthen operator:            7.120s
Time for prec operator:                578.456s
  Time for abstraction:                557.880s (Max:     0.672s, Count: 2498802)
    Boolean abstraction:                54.720s
    Solving time:                       33.265s (Max:     0.024s)
    Model enumeration time:             14.072s
    Time for BDD construction:           4.644s (Max:     0.028s)
Time for merge operator:                 0.762s
Time for coverage check:                 1.885s
  Time for BDD entailment checks:        1.608s
Total time for SMT solver (w/o itp):    47.337s

Number of path formula cache hits:   11119213 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.103s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               248478
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      153624 (count: 2528422, min: 0, max: 2007, avg: 0.06)
Time for BDD node cleanup:                             0.389s
Time for BDD garbage collection:                       0.088s (in 1 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.191s
  Time for transition matches:                         6.446s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.022s
Automaton transfers with branching:                0
Automaton transfer successors:                      9008067 (count: 9008067, min: 1, max: 1, avg: 1.00) [1 x 9008067]

CPA algorithm statistics
------------------------
Number of iterations:            7016488
Max size of waitlist:            665
Average size of waitlist:        191
Number of computed successors:   7660776
Max successors for one state:    2
Number of times merged:          123079
Number of times stopped:         420093
Number of times breaked:         1059

Total time for CPA algorithm:       825.656s (Max:     9.560s)
  Time for choose from waitlist:      3.058s
  Time for precision adjustment:    628.314s
  Time for transfer relation:       151.520s
  Time for merge operator:            4.002s
  Time for stop operator:            12.521s
  Time for adding to reached set:    10.246s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1059
Avg. length of target path (in blocks):              165295 (count: 1059, min: 13, max: 447, avg: 156.09)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  43.007s
  Counterexample analysis:                            28.311s (Max:     0.099s, Calls: 1059)
    Refinement sat check:                              8.971s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.104s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.645s
  Precision update:                                    0.979s
  ARG update:                                         12.307s

Length of refined path (in blocks):                  140734 (count: 1059, min: 9, max: 377, avg: 132.89)
Number of affected states:                            77028 (count: 1059, min: 4, max: 346, avg: 72.74)
Length (states) of path with itp 'true':              62647 (count: 1059, min: 0, max: 202, avg: 59.16)
Length (states) of path with itp non-trivial itp:     77028 (count: 1059, min: 4, max: 346, avg: 72.74)
Length (states) of path with itp 'false':              1006 (count: 1059, min: 0, max: 1, avg: 0.95)
Different non-trivial interpolants along paths:          68 (count: 1059, min: 0, max: 1, avg: 0.06)
Equal non-trivial interpolants along paths:           75901 (count: 1059, min: 3, max: 345, avg: 71.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1059
Number of successful refinements:     1059
Number of failed refinements:         0
Max. size of reached set before ref.: 50524
Max. size of reached set after ref.:  46253
Avg. size of reached set before ref.: 19060.90
Avg. size of reached set after ref.:  12355.56

Total time for CEGAR algorithm:     893.722s
Time for refinements:                58.897s
Average time for refinement:          0.055s
Max time for refinement:              0.407s

Code Coverage
-----------------------------
  Function coverage:      0.219
  Visited lines:          1567
  Total lines:            3719
  Line coverage:          0.421
  Visited conditions:     148
  Total conditions:       724
  Condition coverage:     0.204

CPAchecker general statistics
-----------------------------
Number of program locations:     5241
Number of CFA edges:             5973
Number of relevant variables:    606
Number of functions:             283
Number of loops:                 22
Size of reached set:             5787
  Number of reached locations:   634 (12%)
    Avg states per location:     9
    Max states per location:     87 (at node N3343)
  Number of reached functions:   62 (22%)
  Number of partitions:          5716
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N2351 (before line 9015), Function main called from node N2339, stack depth 1 [4fb392c4], stack [main]])
  Number of target states:       0
  Size of final wait list        64

Time for analysis setup:          6.537s
  Time for loading CPAs:          1.039s
  Time for loading parser:        0.679s
  Time for CFA construction:      4.661s
    Time for parsing file(s):     1.084s
    Time for AST to CFA:          1.663s
    Time for CFA sanity check:    0.316s
    Time for post-processing:     1.352s
      Time for var class.:        0.587s
Time for Analysis:              893.722s
CPU time for analysis:          893.610s
Total time for CPAchecker:      900.272s
Total CPU time for CPAchecker:  900.140s
Time for statistics:              0.186s

Time for Garbage Collector:      69.748s (in 2885 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                383MB (   365 MiB) max;    185MB (   177 MiB) avg;    392MB (   374 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           395MB (   376 MiB) max;    272MB (   259 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8494MB (  8100 MiB) max;   8258MB (  7876 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
