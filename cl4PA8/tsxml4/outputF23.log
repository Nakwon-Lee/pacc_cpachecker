scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-8390-axnet_cs_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_a2ekxdyv/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5489: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: __ms = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8563: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8566: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8568: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8657: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9100: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9113: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9406: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9420: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9462: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9463: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9508: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10022: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10050: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10090: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10109: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10137: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10153: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9961: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9961: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9146: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9146: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_write_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5515: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1677836 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1379759 (82%)
  Because of loop head:            292378 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5699 (0%)
  Times precision was empty:       540186 (32%)
  Times precision was {false}:     6648 (0%)
  Times result was cached:         1077401 (64%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      53601 (3%)
  Times result was 'false':        176946 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         4878060
  BDD entailment checks:           4555506
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       37
Number of predicates discovered:          35
Number of abstraction locations:          151
Max number of predicates per location:    33
Avg number of predicates per location:    10
Total predicates per abstraction:         15303838
Max number of predicates per abstraction: 33
Avg number of predicates per abstraction: 254.01
Number of irrelevant predicates:          6846924 (45%)
Number of preds handled by boolean abs:   626753 (4%)
  Total number of models for allsat:      237997
  Max number of models for allsat:        65
  Avg number of models for allsat:        4.44

Time for post operator:                 40.142s
  Time for path formula creation:       36.279s
Time for strengthen operator:            6.800s
Time for prec operator:                623.966s
  Time for abstraction:                607.696s (Max:     1.052s, Count: 1677836)
    Boolean abstraction:               110.460s
    Solving time:                       66.250s (Max:     0.018s)
    Model enumeration time:             27.317s
    Time for BDD construction:           9.450s (Max:     0.678s)
Time for merge operator:                 1.045s
Time for coverage check:                 4.984s
  Time for BDD entailment checks:        4.211s
Total time for SMT solver (w/o itp):    93.567s

Number of path formula cache hits:   8931179 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    17.958s

Total number of created targets for pointer analysis: 2
   Number of created targets for uf: *(void)* is 3


Number of BDD nodes:                               146972
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      221338 (count: 5523039, min: 0, max: 2378, avg: 0.04)
Time for BDD node cleanup:                             0.737s
Time for BDD garbage collection:                       0.101s (in 2 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.561s
  Time for transition matches:                         5.579s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.016s
Automaton transfers with branching:                0
Automaton transfer successors:                      8011011 (count: 8011011, min: 1, max: 1, avg: 1.00) [1 x 8011011]

CPA algorithm statistics
------------------------
Number of iterations:            5979187
Max size of waitlist:            1130
Average size of waitlist:        408
Number of computed successors:   6723606
Max successors for one state:    2
Number of times merged:          161277
Number of times stopped:         424579
Number of times breaked:         661

Total time for CPA algorithm:       855.220s (Max:     8.935s)
  Time for choose from waitlist:      3.105s
  Time for precision adjustment:    664.277s
  Time for transfer relation:       136.633s
  Time for merge operator:            6.666s
  Time for stop operator:            19.497s
  Time for adding to reached set:    10.848s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   661
Avg. length of target path (in blocks):               37822 (count: 661, min: 13, max: 79, avg: 57.22)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  20.500s
  Counterexample analysis:                             8.924s (Max:     0.038s, Calls: 661)
    Refinement sat check:                              5.056s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.020s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.229s
  Precision update:                                    0.581s
  ARG update:                                         10.447s

Length of refined path (in blocks):                   33752 (count: 661, min: 9, max: 75, avg: 51.06)
Number of affected states:                            15766 (count: 661, min: 4, max: 74, avg: 23.85)
Length (states) of path with itp 'true':              17325 (count: 661, min: 0, max: 53, avg: 26.21)
Length (states) of path with itp non-trivial itp:     15766 (count: 661, min: 4, max: 74, avg: 23.85)
Length (states) of path with itp 'false':               550 (count: 661, min: 0, max: 1, avg: 0.83)
Different non-trivial interpolants along paths:         124 (count: 661, min: 0, max: 1, avg: 0.19)
Equal non-trivial interpolants along paths:           14981 (count: 661, min: 3, max: 72, avg: 22.66)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                661
Number of successful refinements:     661
Number of failed refinements:         0
Max. size of reached set before ref.: 48747
Max. size of reached set after ref.:  41348
Avg. size of reached set before ref.: 22302.07
Avg. size of reached set after ref.:  13088.89

Total time for CEGAR algorithm:     893.145s
Time for refinements:                31.261s
Average time for refinement:          0.047s
Max time for refinement:              0.179s

Code Coverage
-----------------------------
  Function coverage:      0.272
  Visited lines:          1738
  Total lines:            3719
  Line coverage:          0.467
  Visited conditions:     186
  Total conditions:       724
  Condition coverage:     0.257

CPAchecker general statistics
-----------------------------
Number of program locations:     5241
Number of CFA edges:             5973
Number of relevant variables:    606
Number of functions:             283
Number of loops:                 22
Size of reached set:             32167
  Number of reached locations:   771 (15%)
    Avg states per location:     41
    Max states per location:     497 (at node N3343)
  Number of reached functions:   77 (27%)
  Number of partitions:          31846
    Avg size of partitions:      1
    Max size of partitions:      50 (with key [N2351 (before line 9015), Function main called from node N2339, stack depth 1 [4fb392c4], stack [main]])
  Number of target states:       0
  Size of final wait list        641

Time for analysis setup:          7.127s
  Time for loading CPAs:          1.053s
  Time for loading parser:        0.787s
  Time for CFA construction:      5.122s
    Time for parsing file(s):     1.300s
    Time for AST to CFA:          1.993s
    Time for CFA sanity check:    0.349s
    Time for post-processing:     1.180s
      Time for var class.:        0.588s
Time for Analysis:              893.145s
CPU time for analysis:          892.990s
Total time for CPAchecker:      900.278s
Total CPU time for CPAchecker:  900.100s
Time for statistics:              0.586s

Time for Garbage Collector:      57.395s (in 1841 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                577MB (   550 MiB) max;    295MB (   281 MiB) avg;    595MB (   568 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           612MB (   584 MiB) max;    430MB (   410 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   9435MB (  8998 MiB) max;   8742MB (  8337 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
