scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-8390-axnet_cs_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__ycisuwf/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5489: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: __ms = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8563: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8566: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8568: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8657: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9100: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9113: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9406: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9420: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9462: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9463: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9508: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10022: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10050: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10090: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10109: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10137: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10153: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9961: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9961: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5515: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pcmcia_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_loop_config to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_write_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_register_netdev to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_dev_present to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc32_le to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bitrev32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9146: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9146: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pcmcia_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7931: Ignoring function call through function pointer *(ei_local->get_8390_hdr): (*(ei_local->get_8390_hdr))(dev, &rx_frame, (int)this_frame); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7967: Ignoring function call through function pointer *(ei_local->block_input): (*(ei_local->block_input))(dev, pkt_len, skb, (int)(((unsigned int)current_offset) + 4U)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4408761 (29% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4094160 (93%)
  Because of loop head:            312827 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1774 (0%)
  Times precision was empty:       576365 (13%)
  Times precision was {false}:     785 (0%)
  Times result was cached:         3828144 (87%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3467 (0%)
  Times result was 'false':        172129 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         1393527
  BDD entailment checks:           503309
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       37
Number of predicates discovered:          17
Number of abstraction locations:          82
Max number of predicates per location:    10
Avg number of predicates per location:    2
Total predicates per abstraction:         11473545
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 2698.39
Number of irrelevant predicates:          7266623 (63%)
Number of preds handled by boolean abs:   6061 (0%)
  Total number of models for allsat:      3545
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.02

Time for post operator:                 86.361s
  Time for path formula creation:       80.213s
Time for strengthen operator:           12.013s
Time for prec operator:                406.854s
  Time for abstraction:                359.292s (Max:     1.523s, Count: 4408761)
    Boolean abstraction:                 2.939s
    Solving time:                        2.651s (Max:     0.014s)
    Model enumeration time:              0.247s
    Time for BDD construction:           0.191s (Max:     0.010s)
Time for merge operator:                 3.353s
Time for coverage check:                 0.682s
  Time for BDD entailment checks:        0.466s
Total time for SMT solver (w/o itp):     2.898s

Number of path formula cache hits:   18269038 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    37.631s

Total number of created targets for pointer analysis: 2632
   Number of created targets for uf: *unsigned_short_int is 783
   Number of created targets for uf: *unsigned_char is 1851


Number of BDD nodes:                               516
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7452 (count: 1132833, min: 0, max: 215, avg: 0.01)
Time for BDD node cleanup:                             0.197s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 19.077s
  Time for transition matches:                        11.083s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.014s
Automaton transfers with branching:                0
Automaton transfer successors:                     15088760 (count: 15088760, min: 1, max: 1, avg: 1.00) [1 x 15088760]

CPA algorithm statistics
------------------------
Number of iterations:            11758506
Max size of waitlist:            59
Average size of waitlist:        34
Number of computed successors:   12743662
Max successors for one state:    2
Number of times merged:          445109
Number of times stopped:         803379
Number of times breaked:         720

Total time for CPA algorithm:       824.622s (Max:     4.208s)
  Time for choose from waitlist:      5.274s
  Time for precision adjustment:    483.274s
  Time for transfer relation:       265.234s
  Time for merge operator:            9.048s
  Time for stop operator:            13.587s
  Time for adding to reached set:    17.315s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   720
Avg. length of target path (in blocks):              131502 (count: 720, min: 13, max: 424, avg: 182.64)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  49.901s
  Counterexample analysis:                            28.100s (Max:     0.171s, Calls: 720)
    Refinement sat check:                              8.951s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.064s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.552s
  Precision update:                                    0.373s
  ARG update:                                         19.440s

Length of refined path (in blocks):                  112251 (count: 720, min: 9, max: 379, avg: 155.90)
Number of affected states:                            81396 (count: 720, min: 4, max: 301, avg: 113.05)
Length (states) of path with itp 'true':              30135 (count: 720, min: 0, max: 124, avg: 41.85)
Length (states) of path with itp non-trivial itp:     81396 (count: 720, min: 4, max: 301, avg: 113.05)
Length (states) of path with itp 'false':               475 (count: 720, min: 0, max: 1, avg: 0.66)
Different non-trivial interpolants along paths:         245 (count: 720, min: 0, max: 1, avg: 0.34)
Equal non-trivial interpolants along paths:           80431 (count: 720, min: 3, max: 299, avg: 111.71)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                720
Number of successful refinements:     720
Number of failed refinements:         0
Max. size of reached set before ref.: 53168
Max. size of reached set after ref.:  37469
Avg. size of reached set before ref.: 28390.58
Avg. size of reached set after ref.:  12069.83

Total time for CEGAR algorithm:     893.781s
Time for refinements:                63.735s
Average time for refinement:          0.088s
Max time for refinement:              0.850s

Code Coverage
-----------------------------
  Function coverage:      0.329
  Visited lines:          2209
  Total lines:            3719
  Line coverage:          0.594
  Visited conditions:     364
  Total conditions:       724
  Condition coverage:     0.503

CPAchecker general statistics
-----------------------------
Number of program locations:     5241
Number of CFA edges:             5973
Number of relevant variables:    606
Number of functions:             283
Number of loops:                 22
Size of reached set:             17211
  Number of reached locations:   1379 (26%)
    Avg states per location:     12
    Max states per location:     537 (at node N20)
  Number of reached functions:   93 (33%)
  Number of partitions:          17074
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1482 (before line 7690), Function ax_interrupt called from node N868, stack depth 6 [7b42fef4], stack [main, ldv_timer_timer_instance_3, ldv_timer_instance_callback_3_2, ei_watchdog, ei_irq_wrapper, ax_interrupt]])
  Number of target states:       0
  Size of final wait list        35

Time for analysis setup:          6.460s
  Time for loading CPAs:          0.996s
  Time for loading parser:        0.710s
  Time for CFA construction:      4.573s
    Time for parsing file(s):     1.106s
    Time for AST to CFA:          1.638s
    Time for CFA sanity check:    0.364s
    Time for post-processing:     1.287s
      Time for var class.:        0.535s
Time for Analysis:              893.781s
CPU time for analysis:          893.710s
Total time for CPAchecker:      900.246s
Total CPU time for CPAchecker:  900.170s
Time for statistics:              0.386s

Time for Garbage Collector:      53.925s (in 1385 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                668MB (   637 MiB) max;    410MB (   391 MiB) avg;    682MB (   650 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           770MB (   735 MiB) max;    615MB (   586 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8084MB (  7709 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
