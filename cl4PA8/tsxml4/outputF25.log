scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-8390-axnet_cs_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_w6ocem4s/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5489: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: __ms = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8563: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8566: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8568: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8657: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9100: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9113: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9406: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9420: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9462: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9463: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9508: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10022: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10050: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10090: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10109: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10137: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10153: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5515: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pcmcia_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_loop_config to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_write_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_register_netdev to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_dev_present to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc32_le to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bitrev32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9961: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9961: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9146: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9146: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7931: Ignoring function call through function pointer *(ei_local->get_8390_hdr): (*(ei_local->get_8390_hdr))(dev, &rx_frame, (int)this_frame); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7967: Ignoring function call through function pointer *(ei_local->block_input): (*(ei_local->block_input))(dev, pkt_len, skb, (int)(((unsigned int)current_offset) + 4U)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4440319 (29% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4120878 (93%)
  Because of loop head:            318075 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1366 (0%)
  Times precision was empty:       810888 (18%)
  Times precision was {false}:     754 (0%)
  Times result was cached:         3624630 (82%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4047 (0%)
  Times result was 'false':        140801 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1396654
  BDD entailment checks:           531268
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       37
Number of predicates discovered:          18
Number of abstraction locations:          163
Max number of predicates per location:    13
Avg number of predicates per location:    2
Total predicates per abstraction:         11617849
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 2419.88
Number of irrelevant predicates:          7288541 (63%)
Number of preds handled by boolean abs:   8178 (0%)
  Total number of models for allsat:      4808
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.19

Time for post operator:                 95.825s
  Time for path formula creation:       88.857s
Time for strengthen operator:           12.502s
Time for prec operator:                383.242s
  Time for abstraction:                334.964s (Max:     1.656s, Count: 4440319)
    Boolean abstraction:                 3.469s
    Solving time:                        3.051s (Max:     0.015s)
    Model enumeration time:              0.363s
    Time for BDD construction:           0.215s (Max:     0.012s)
Time for merge operator:                 3.701s
Time for coverage check:                 0.672s
  Time for BDD entailment checks:        0.464s
Total time for SMT solver (w/o itp):     3.414s

Number of path formula cache hits:   18069521 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    46.355s

Total number of created targets for pointer analysis: 2984
   Number of created targets for uf: *unsigned_short_int is 919
   Number of created targets for uf: *unsigned_char is 2067


Number of BDD nodes:                               1221
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8989 (count: 1401879, min: 0, max: 199, avg: 0.01)
Time for BDD node cleanup:                             0.235s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 21.690s
  Time for transition matches:                        13.070s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                     15108650 (count: 15108650, min: 1, max: 1, avg: 1.00) [1 x 15108650]

CPA algorithm statistics
------------------------
Number of iterations:            11776707
Max size of waitlist:            62
Average size of waitlist:        39
Number of computed successors:   12751368
Max successors for one state:    2
Number of times merged:          432693
Number of times stopped:         821782
Number of times breaked:         817

Total time for CPA algorithm:       814.886s (Max:     3.649s)
  Time for choose from waitlist:      5.046s
  Time for precision adjustment:    458.679s
  Time for transfer relation:       279.463s
  Time for merge operator:            9.039s
  Time for stop operator:            14.772s
  Time for adding to reached set:    19.693s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   817
Avg. length of target path (in blocks):              156956 (count: 817, min: 13, max: 435, avg: 192.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  56.892s
  Counterexample analysis:                            33.925s (Max:     0.184s, Calls: 817)
    Refinement sat check:                             10.745s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.070s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.696s
  Precision update:                                    0.414s
  ARG update:                                         21.100s

Length of refined path (in blocks):                  134085 (count: 817, min: 9, max: 390, avg: 164.12)
Number of affected states:                            90977 (count: 817, min: 4, max: 301, avg: 111.35)
Length (states) of path with itp 'true':              42291 (count: 817, min: 0, max: 135, avg: 51.76)
Length (states) of path with itp non-trivial itp:     90977 (count: 817, min: 4, max: 301, avg: 111.35)
Length (states) of path with itp 'false':               547 (count: 817, min: 0, max: 1, avg: 0.67)
Different non-trivial interpolants along paths:         270 (count: 817, min: 0, max: 1, avg: 0.33)
Equal non-trivial interpolants along paths:           89890 (count: 817, min: 3, max: 299, avg: 110.02)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                817
Number of successful refinements:     817
Number of failed refinements:         0
Max. size of reached set before ref.: 40031
Max. size of reached set after ref.:  18697
Avg. size of reached set before ref.: 26713.82
Avg. size of reached set after ref.:  12313.64

Total time for CEGAR algorithm:     893.430s
Time for refinements:                72.253s
Average time for refinement:          0.088s
Max time for refinement:              0.505s

Code Coverage
-----------------------------
  Function coverage:      0.314
  Visited lines:          2169
  Total lines:            3719
  Line coverage:          0.583
  Visited conditions:     346
  Total conditions:       724
  Condition coverage:     0.478

CPAchecker general statistics
-----------------------------
Number of program locations:     5241
Number of CFA edges:             5973
Number of relevant variables:    606
Number of functions:             283
Number of loops:                 22
Size of reached set:             23838
  Number of reached locations:   1317 (25%)
    Avg states per location:     18
    Max states per location:     735 (at node N20)
  Number of reached functions:   89 (31%)
  Number of partitions:          23682
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2351 (before line 9015), Function main called from node N2339, stack depth 1 [4fb392c4], stack [main]])
  Number of target states:       0
  Size of final wait list        44

Time for analysis setup:          6.849s
  Time for loading CPAs:          1.019s
  Time for loading parser:        0.697s
  Time for CFA construction:      4.973s
    Time for parsing file(s):     1.247s
    Time for AST to CFA:          1.816s
    Time for CFA sanity check:    0.359s
    Time for post-processing:     1.334s
      Time for var class.:        0.595s
Time for Analysis:              893.434s
CPU time for analysis:          893.360s
Total time for CPAchecker:      900.289s
Total CPU time for CPAchecker:  900.200s
Time for statistics:              0.515s

Time for Garbage Collector:      45.418s (in 1289 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                680MB (   649 MiB) max;    437MB (   417 MiB) avg;    688MB (   656 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           853MB (   814 MiB) max;    696MB (   664 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8083MB (  7708 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
