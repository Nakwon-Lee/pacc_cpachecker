scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-8390-axnet_cs_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6w98q1lh/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5489: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: __ms = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8563: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8566: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8568: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8657: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9100: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9113: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9406: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9420: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9462: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9463: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9508: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10022: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10050: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10090: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10109: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10137: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10153: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9961: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9961: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9146: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9146: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pcmcia_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_write_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5515: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            39657 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  32294 (81%)
  Because of loop head:            7317 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         46 (0%)
  Times precision was empty:       28296 (71%)
  Times precision was {false}:     439 (1%)
  Times result was cached:         10468 (26%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      454 (1%)
  Times result was 'false':        1609 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         17550
  BDD entailment checks:           9888
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       37
Number of predicates discovered:          17
Number of abstraction locations:          28
Max number of predicates per location:    17
Avg number of predicates per location:    4
Total predicates per abstraction:         43553
Max number of predicates per abstraction: 17
Avg number of predicates per abstraction: 48.77
Number of irrelevant predicates:          34971 (80%)
Number of preds handled by boolean abs:   2062 (5%)
  Total number of models for allsat:      770
  Max number of models for allsat:        18
  Avg number of models for allsat:        1.70

Time for post operator:                  4.777s
  Time for path formula creation:        4.483s
Time for strengthen operator:            0.327s
Time for prec operator:                  6.579s
  Time for abstraction:                  5.673s (Max:     0.023s, Count: 39657)
    Boolean abstraction:                 0.877s
    Solving time:                        0.737s (Max:     0.013s)
    Model enumeration time:              0.089s
    Time for BDD construction:           0.158s (Max:     0.012s)
Time for merge operator:                 0.194s
Time for coverage check:                 0.100s
  Time for BDD entailment checks:        0.090s
Total time for SMT solver (w/o itp):     0.826s

Number of path formula cache hits:   184250 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.748s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               2590
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2568 (count: 43880, min: 0, max: 207, avg: 0.06)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.650s
  Time for transition matches:                         0.283s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       181854 (count: 181854, min: 1, max: 1, avg: 1.00) [1 x 181854]

CPA algorithm statistics
------------------------
Number of iterations:            132616
Max size of waitlist:            163
Average size of waitlist:        60
Number of computed successors:   147384
Max successors for one state:    2
Number of times merged:          3831
Number of times stopped:         9990
Number of times breaked:         46

Total time for CPA algorithm:        22.087s (Max:     1.521s)
  Time for choose from waitlist:      0.344s
  Time for precision adjustment:      8.507s
  Time for transfer relation:        10.255s
  Time for merge operator:            0.506s
  Time for stop operator:             0.590s
  Time for adding to reached set:     0.579s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   46
Avg. length of target path (in blocks):                 984 (count: 46, min: 13, max: 25, avg: 21.39)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.205s
  Counterexample analysis:                             0.515s (Max:     0.020s, Calls: 46)
    Refinement sat check:                              0.322s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.030s
  Precision update:                                    0.072s
  ARG update:                                          0.519s

Length of refined path (in blocks):                     546 (count: 46, min: 9, max: 21, avg: 11.87)
Number of affected states:                              316 (count: 46, min: 4, max: 16, avg: 6.87)
Length (states) of path with itp 'true':                184 (count: 46, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp non-trivial itp:       316 (count: 46, min: 4, max: 16, avg: 6.87)
Length (states) of path with itp 'false':                46 (count: 46, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 46, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             270 (count: 46, min: 3, max: 15, avg: 5.87)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                46
Number of successful refinements:     46
Number of failed refinements:         0
Max. size of reached set before ref.: 4986
Max. size of reached set after ref.:  12
Avg. size of reached set before ref.: 2914.02
Avg. size of reached set after ref.:  12.00

Total time for CEGAR algorithm:      23.556s
Time for refinements:                 1.467s
Average time for refinement:          0.031s
Max time for refinement:              0.084s

Code Coverage
-----------------------------
  Function coverage:      0.198
  Visited lines:          1505
  Total lines:            3719
  Line coverage:          0.405
  Visited conditions:     132
  Total conditions:       724
  Condition coverage:     0.182

CPAchecker general statistics
-----------------------------
Number of program locations:     5241
Number of CFA edges:             5973
Number of relevant variables:    606
Number of functions:             283
Number of loops:                 22
Size of reached set:             2292
  Number of reached locations:   541 (10%)
    Avg states per location:     4
    Max states per location:     41 (at node N3343)
  Number of reached functions:   56 (20%)
  Number of partitions:          2277
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N2351 (before line 9015), Function main called from node N2339, stack depth 1 [4fb392c4], stack [main]])
  Number of target states:       0
  Size of final wait list        62

Time for analysis setup:          6.717s
  Time for loading CPAs:          1.016s
  Time for loading parser:        0.686s
  Time for CFA construction:      4.864s
    Time for parsing file(s):     1.151s
    Time for AST to CFA:          1.856s
    Time for CFA sanity check:    0.352s
    Time for post-processing:     1.300s
      Time for var class.:        0.540s
Time for Analysis:               23.556s
CPU time for analysis:           23.560s
Total time for CPAchecker:       30.278s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.136s

Time for Garbage Collector:       0.802s (in 64 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 77MB (    74 MiB) max;     51MB (    48 MiB) avg;     82MB (    78 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
