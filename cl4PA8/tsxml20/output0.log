scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-usb-dev__drivers-net-ethernet-dec-tulip-tulip_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ly3axbrw/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5858: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 7315: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7331: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8456: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9296: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9312: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9328: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13132: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13152: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13155: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13157: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13848: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13861: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14488: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14530: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 14531: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 14576: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15358: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15410: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15426: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15442: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15487: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15530: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15572: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16149: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16199: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16215: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16231: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16247: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16761: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17185: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17201: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17217: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17233: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9602: Function pointer *(ops___0->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9643: Function pointer *(ops___0->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5975-5976: Function pointer *(ops___0->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6121: Function pointer *(ops___0->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6055: Function pointer *(ops___0->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6095: Function pointer *(ops___0->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6015: Function pointer *(ops___0->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5968: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5975-5976: Ignoring function call through function pointer *(ops___0->map_page): addr = (*(ops___0->map_page))(dev, ((struct page *)0L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_set_wakeup_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            14403 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12367 (86%)
  Because of loop head:            1855 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         181 (1%)
  Times precision was empty:       4564 (32%)
  Times precision was {false}:     253 (2%)
  Times result was cached:         8194 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1392 (10%)
  Times result was 'false':        1676 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         8696
  BDD entailment checks:           2932
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          15
Number of abstraction locations:          97
Max number of predicates per location:    14
Avg number of predicates per location:    5
Total predicates per abstraction:         48211
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 29.31
Number of irrelevant predicates:          12911 (27%)
Number of preds handled by boolean abs:   7366 (15%)
  Total number of models for allsat:      1629
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.17

Time for post operator:                  2.978s
  Time for path formula creation:        2.819s
Time for strengthen operator:            0.164s
Time for prec operator:                  9.162s
  Time for abstraction:                  8.545s (Max:     0.028s, Count: 14403)
    Boolean abstraction:                 2.052s
    Solving time:                        1.528s (Max:     0.014s)
    Model enumeration time:              0.150s
    Time for BDD construction:           0.213s (Max:     0.018s)
Time for merge operator:                 0.179s
Time for coverage check:                 0.068s
  Time for BDD entailment checks:        0.061s
Total time for SMT solver (w/o itp):     1.678s

Number of path formula cache hits:   66689 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.326s

Total number of created targets for pointer analysis: 62
   Number of created targets for uf: *(char)* is 9
   Number of created targets for uf: *unsigned_char is 45
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               1779
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4379 (count: 18044, min: 0, max: 671, avg: 0.24)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.436s
Automaton transfers with branching:                0
Automaton transfer successors:                        68835 (count: 68835, min: 1, max: 1, avg: 1.00) [1 x 68835]

CPA algorithm statistics
------------------------
Number of iterations:            53044
Max size of waitlist:            98
Average size of waitlist:        42
Number of computed successors:   62311
Max successors for one state:    2
Number of times merged:          2882
Number of times stopped:         3854
Number of times breaked:         76

Total time for CPA algorithm:        17.416s (Max:     1.115s)
  Time for choose from waitlist:      0.186s
  Time for precision adjustment:      9.947s
  Time for transfer relation:         5.493s
  Time for merge operator:            0.422s
  Time for stop operator:             0.377s
  Time for adding to reached set:     0.289s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   76
Avg. length of target path (in blocks):                7004 (count: 76, min: 29, max: 114, avg: 92.16)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.491s
  Counterexample analysis:                             3.791s (Max:     0.098s, Calls: 76)
    Refinement sat check:                              2.395s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.123s
  Precision update:                                    0.125s
  ARG update:                                          0.323s

Length of refined path (in blocks):                    5125 (count: 76, min: 11, max: 100, avg: 67.43)
Number of affected states:                             2746 (count: 76, min: 4, max: 98, avg: 36.13)
Length (states) of path with itp 'true':               2303 (count: 76, min: 1, max: 67, avg: 30.30)
Length (states) of path with itp non-trivial itp:      2746 (count: 76, min: 4, max: 98, avg: 36.13)
Length (states) of path with itp 'false':                68 (count: 76, min: 0, max: 1, avg: 0.89)
Different non-trivial interpolants along paths:          11 (count: 76, min: 0, max: 1, avg: 0.14)
Equal non-trivial interpolants along paths:            2659 (count: 76, min: 3, max: 96, avg: 34.99)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                76
Number of successful refinements:     76
Number of failed refinements:         0
Max. size of reached set before ref.: 1691
Max. size of reached set after ref.:  884
Avg. size of reached set before ref.: 1012.49
Avg. size of reached set after ref.:  267.87

Total time for CEGAR algorithm:      22.273s
Time for refinements:                 4.809s
Average time for refinement:          0.063s
Max time for refinement:              0.105s

Code Coverage
-----------------------------
  Function coverage:      0.072
  Visited lines:          1194
  Total lines:            6788
  Line coverage:          0.176
  Visited conditions:     58
  Total conditions:       1948
  Condition coverage:     0.030

CPAchecker general statistics
-----------------------------
Number of program locations:     9702
Number of CFA edges:             11054
Number of relevant variables:    1430
Number of functions:             318
Number of loops:                 64
Size of reached set:             191
  Number of reached locations:   173 (2%)
    Avg states per location:     1
    Max states per location:     4 (at node N8958)
  Number of reached functions:   23 (7%)
  Number of partitions:          191
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        12

Time for analysis setup:          7.987s
  Time for loading CPAs:          1.134s
  Time for loading parser:        0.685s
  Time for CFA construction:      6.053s
    Time for parsing file(s):     1.304s
    Time for AST to CFA:          2.311s
    Time for CFA sanity check:    0.481s
    Time for post-processing:     1.730s
      Time for var class.:        0.756s
Time for Analysis:               22.273s
CPU time for analysis:           22.260s
Total time for CPAchecker:       30.270s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.082s

Time for Garbage Collector:       0.551s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 77MB (    73 MiB) max;     53MB (    50 MiB) avg;     81MB (    77 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
