scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-usb-dev__drivers-net-ethernet-dec-tulip-tulip_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_iojv8gw5/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5858: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 7315: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7331: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8456: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9296: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9312: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9328: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13132: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13152: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13155: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13157: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13848: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13861: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14488: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14530: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 14531: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 14576: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15358: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15410: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15426: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15442: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15487: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15530: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15572: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16149: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16199: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16215: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16231: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16247: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16761: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17185: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17201: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17217: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17233: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9602: Function pointer *(ops___0->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9643: Function pointer *(ops___0->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5975-5976: Function pointer *(ops___0->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6121: Function pointer *(ops___0->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6055: Function pointer *(ops___0->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6095: Function pointer *(ops___0->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6015: Function pointer *(ops___0->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15297: Ignoring call via function pointer ldv_timer_instance_callback_8_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15297: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14236: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14236: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14201: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14201: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14212: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14212: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13894: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13894: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_dev_present to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1263501 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1103943 (87%)
  Because of loop head:            159259 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         299 (0%)
  Times precision was empty:       904275 (72%)
  Times precision was {false}:     4743 (0%)
  Times result was cached:         343248 (27%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      11235 (1%)
  Times result was 'false':        45267 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         1158465
  BDD entailment checks:           413019
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          43
Number of abstraction locations:          40
Max number of predicates per location:    43
Avg number of predicates per location:    18
Total predicates per abstraction:         4235887
Max number of predicates per abstraction: 43
Avg number of predicates per abstraction: 265.11
Number of irrelevant predicates:          2803534 (66%)
Number of preds handled by boolean abs:   117020 (3%)
  Total number of models for allsat:      2466713
  Max number of models for allsat:        40960
  Avg number of models for allsat:        219.56

Time for post operator:                 40.342s
  Time for path formula creation:       36.369s
Time for strengthen operator:            7.577s
Time for prec operator:                659.159s
  Time for abstraction:                645.471s (Max:     9.747s, Count: 1263501)
    Boolean abstraction:               510.186s
    Solving time:                       20.532s (Max:     0.015s)
    Model enumeration time:            306.449s
    Time for BDD construction:         184.410s (Max:     3.302s)
Time for merge operator:                 2.702s
Time for coverage check:                 0.976s
  Time for BDD entailment checks:        0.853s
Total time for SMT solver (w/o itp):   326.981s

Number of path formula cache hits:   9911813 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.691s

Total number of created targets for pointer analysis: 48804
   Number of created targets for uf: *(char)* is 9
   Number of created targets for uf: *signed_int is 811
   Number of created targets for uf: *unsigned_char is 661


Number of BDD nodes:                               136107
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      132934 (count: 1460639, min: 0, max: 2395, avg: 0.09)
Time for BDD node cleanup:                             0.231s
Time for BDD garbage collection:                       2.443s (in 881 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.774s
  Time for transition matches:                         5.804s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      8599006 (count: 8599006, min: 1, max: 1, avg: 1.00) [1 x 8599006]

CPA algorithm statistics
------------------------
Number of iterations:            5312350
Max size of waitlist:            2401
Average size of waitlist:        751
Number of computed successors:   6169021
Max successors for one state:    2
Number of times merged:          372723
Number of times stopped:         472821
Number of times breaked:         299

Total time for CPA algorithm:       872.739s (Max:    95.258s)
  Time for choose from waitlist:      2.598s
  Time for precision adjustment:    698.438s
  Time for transfer relation:       129.178s
  Time for merge operator:            8.195s
  Time for stop operator:             8.980s
  Time for adding to reached set:    10.515s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   299
Avg. length of target path (in blocks):                9341 (count: 299, min: 15, max: 49, avg: 31.24)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  16.180s
  Counterexample analysis:                             6.182s (Max:     0.054s, Calls: 299)
    Refinement sat check:                              4.513s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.098s
  Precision update:                                    0.119s
  ARG update:                                          9.647s

Length of refined path (in blocks):                    5684 (count: 299, min: 11, max: 36, avg: 19.01)
Number of affected states:                             3587 (count: 299, min: 4, max: 29, avg: 12.00)
Length (states) of path with itp 'true':               1798 (count: 299, min: 6, max: 10, avg: 6.01)
Length (states) of path with itp non-trivial itp:      3587 (count: 299, min: 4, max: 29, avg: 12.00)
Length (states) of path with itp 'false':               299 (count: 299, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           8 (count: 299, min: 0, max: 1, avg: 0.03)
Equal non-trivial interpolants along paths:            3280 (count: 299, min: 3, max: 28, avg: 10.97)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                299
Number of successful refinements:     299
Number of failed refinements:         0
Max. size of reached set before ref.: 40161
Max. size of reached set after ref.:  8504
Avg. size of reached set before ref.: 18826.01
Avg. size of reached set after ref.:  44.39

Total time for CEGAR algorithm:     892.221s
Time for refinements:                19.455s
Average time for refinement:          0.065s
Max time for refinement:              0.517s

Code Coverage
-----------------------------
  Function coverage:      0.340
  Visited lines:          2376
  Total lines:            6788
  Line coverage:          0.350
  Visited conditions:     378
  Total conditions:       1948
  Condition coverage:     0.194

CPAchecker general statistics
-----------------------------
Number of program locations:     9702
Number of CFA edges:             11054
Number of relevant variables:    1430
Number of functions:             318
Number of loops:                 64
Size of reached set:             35230
  Number of reached locations:   1179 (12%)
    Avg states per location:     29
    Max states per location:     750 (at node N8958)
  Number of reached functions:   108 (34%)
  Number of partitions:          35137
    Avg size of partitions:      1
    Max size of partitions:      21 (with key [N6090 (before line 13723), Function main called from node N6074, stack depth 1 [50b4364], stack [main]])
  Number of target states:       0
  Size of final wait list        2183

Time for analysis setup:          8.040s
  Time for loading CPAs:          1.048s
  Time for loading parser:        0.713s
  Time for CFA construction:      6.114s
    Time for parsing file(s):     1.324s
    Time for AST to CFA:          2.367s
    Time for CFA sanity check:    0.493s
    Time for post-processing:     1.729s
      Time for var class.:        0.736s
Time for Analysis:              892.221s
CPU time for analysis:          892.130s
Total time for CPAchecker:      900.266s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              0.578s

Time for Garbage Collector:      45.187s (in 2200 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                336MB (   321 MiB) max;    164MB (   157 MiB) avg;    350MB (   333 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           347MB (   331 MiB) max;    243MB (   231 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8222MB (  7841 MiB) max;   8143MB (  7766 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
