scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-usb-dev__drivers-net-ethernet-dec-tulip-tulip_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sszvoxbe/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5858: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 7315: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7331: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8456: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9296: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9312: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9328: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13132: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13152: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13155: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13157: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13848: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13861: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14488: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14530: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 14531: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 14576: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15358: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15410: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15426: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15442: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15487: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15530: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15572: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16149: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16199: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16215: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16231: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16247: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16761: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17185: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17201: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17217: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17233: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9602: Function pointer *(ops___0->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9643: Function pointer *(ops___0->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5975-5976: Function pointer *(ops___0->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6121: Function pointer *(ops___0->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6055: Function pointer *(ops___0->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6095: Function pointer *(ops___0->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6015: Function pointer *(ops___0->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15297: Ignoring call via function pointer ldv_timer_instance_callback_8_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15297: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14236: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14236: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13894: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13894: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14212: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14212: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14201: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14201: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_present to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            24981 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  22076 (88%)
  Because of loop head:            2876 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29 (0%)
  Times precision was empty:       17442 (70%)
  Times precision was {false}:     349 (1%)
  Times result was cached:         6970 (28%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      220 (1%)
  Times result was 'false':        125 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         21156
  BDD entailment checks:           6044
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          7
Number of abstraction locations:          29
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         16050
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 28.21
Number of irrelevant predicates:          13765 (86%)
Number of preds handled by boolean abs:   386 (2%)
  Total number of models for allsat:      219
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  6.183s
  Time for path formula creation:        5.925s
Time for strengthen operator:            0.389s
Time for prec operator:                  4.083s
  Time for abstraction:                  3.206s (Max:     0.023s, Count: 24981)
    Boolean abstraction:                 0.324s
    Solving time:                        0.404s (Max:     0.014s)
    Model enumeration time:              0.021s
    Time for BDD construction:           0.055s (Max:     0.009s)
Time for merge operator:                 0.293s
Time for coverage check:                 0.048s
  Time for BDD entailment checks:        0.038s
Total time for SMT solver (w/o itp):     0.425s

Number of path formula cache hits:   145177 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.802s

Total number of created targets for pointer analysis: 7444
   Number of created targets for uf: *(char)* is 9
   Number of created targets for uf: *unsigned_char is 1079


Number of BDD nodes:                               265
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         554 (count: 26617, min: 0, max: 78, avg: 0.02)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.539s
  Time for transition matches:                         0.238s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       156970 (count: 156970, min: 1, max: 1, avg: 1.00) [1 x 156970]

CPA algorithm statistics
------------------------
Number of iterations:            114222
Max size of waitlist:            373
Average size of waitlist:        184
Number of computed successors:   131516
Max successors for one state:    2
Number of times merged:          7556
Number of times stopped:         10061
Number of times breaked:         29

Total time for CPA algorithm:        20.315s (Max:     2.201s)
  Time for choose from waitlist:      0.220s
  Time for precision adjustment:      6.159s
  Time for transfer relation:        10.715s
  Time for merge operator:            0.696s
  Time for stop operator:             0.572s
  Time for adding to reached set:     0.591s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   29
Avg. length of target path (in blocks):                 685 (count: 29, min: 15, max: 27, avg: 23.62)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.546s
  Counterexample analysis:                             0.918s (Max:     0.047s, Calls: 29)
    Refinement sat check:                              0.655s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.041s
  Precision update:                                    0.026s
  ARG update:                                          0.511s

Length of refined path (in blocks):                     448 (count: 29, min: 11, max: 23, avg: 15.45)
Number of affected states:                              241 (count: 29, min: 4, max: 16, avg: 8.31)
Length (states) of path with itp 'true':                178 (count: 29, min: 6, max: 10, avg: 6.14)
Length (states) of path with itp non-trivial itp:       241 (count: 29, min: 4, max: 16, avg: 8.31)
Length (states) of path with itp 'false':                29 (count: 29, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 29, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             212 (count: 29, min: 3, max: 15, avg: 7.31)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 6295
Max. size of reached set after ref.:  1512
Avg. size of reached set before ref.: 4036.45
Avg. size of reached set after ref.:  67.59

Total time for CEGAR algorithm:      22.106s
Time for refinements:                 1.790s
Average time for refinement:          0.061s
Max time for refinement:              0.146s

Code Coverage
-----------------------------
  Function coverage:      0.264
  Visited lines:          1913
  Total lines:            6788
  Line coverage:          0.282
  Visited conditions:     296
  Total conditions:       1948
  Condition coverage:     0.152

CPAchecker general statistics
-----------------------------
Number of program locations:     9702
Number of CFA edges:             11054
Number of relevant variables:    1430
Number of functions:             318
Number of loops:                 64
Size of reached set:             6234
  Number of reached locations:   924 (10%)
    Avg states per location:     6
    Max states per location:     119 (at node N8957)
  Number of reached functions:   84 (26%)
  Number of partitions:          6208
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N6090 (before line 13723), Function main called from node N6074, stack depth 1 [38054d01], stack [main]])
  Number of target states:       0
  Size of final wait list        364

Time for analysis setup:          8.167s
  Time for loading CPAs:          1.225s
  Time for loading parser:        0.636s
  Time for CFA construction:      6.142s
    Time for parsing file(s):     1.540s
    Time for AST to CFA:          2.290s
    Time for CFA sanity check:    0.527s
    Time for post-processing:     1.591s
      Time for var class.:        0.793s
Time for Analysis:               22.106s
CPU time for analysis:           22.100s
Total time for CPAchecker:       30.289s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.272s

Time for Garbage Collector:       0.962s (in 59 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 87MB (    83 MiB) max;     55MB (    53 MiB) avg;     92MB (    88 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     34MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8070MB (  7696 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
