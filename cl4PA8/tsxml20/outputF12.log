scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-usb-dev__drivers-net-ethernet-dec-tulip-tulip_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_487o3ejq/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5858: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 7315: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7331: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8456: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9296: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9312: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9328: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13132: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13152: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13155: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13157: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13848: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13861: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14488: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14530: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 14531: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 14576: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15358: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15410: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15426: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15442: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15487: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15530: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15572: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16149: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16199: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16215: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16231: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16247: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16761: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17185: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17201: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17217: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17233: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9602: Function pointer *(ops___0->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9643: Function pointer *(ops___0->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5975-5976: Function pointer *(ops___0->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6121: Function pointer *(ops___0->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6055: Function pointer *(ops___0->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6095: Function pointer *(ops___0->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6015: Function pointer *(ops___0->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15297: Ignoring call via function pointer ldv_timer_instance_callback_8_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15297: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14236: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14236: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13894: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13894: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14212: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14212: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14201: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14201: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_present to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            388646 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  336553 (87%)
  Because of loop head:            51854 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         239 (0%)
  Times precision was empty:       233489 (60%)
  Times precision was {false}:     5136 (1%)
  Times result was cached:         129858 (33%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      20163 (5%)
  Times result was 'false':        18838 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         589792
  BDD entailment checks:           374684
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          43
Number of abstraction locations:          39
Max number of predicates per location:    43
Avg number of predicates per location:    21
Total predicates per abstraction:         2316670
Max number of predicates per abstraction: 43
Avg number of predicates per abstraction: 91.57
Number of irrelevant predicates:          1338090 (58%)
Number of preds handled by boolean abs:   237003 (10%)
  Total number of models for allsat:      3512277
  Max number of models for allsat:        40960
  Avg number of models for allsat:        174.19

Time for post operator:                 30.039s
  Time for path formula creation:       28.439s
Time for strengthen operator:            2.089s
Time for prec operator:                790.151s
  Time for abstraction:                784.416s (Max:    10.107s, Count: 388646)
    Boolean abstraction:               694.686s
    Solving time:                       31.147s (Max:     0.016s)
    Model enumeration time:            419.999s
    Time for BDD construction:         242.571s (Max:     3.387s)
Time for merge operator:                 1.711s
Time for coverage check:                 1.033s
  Time for BDD entailment checks:        0.932s
Total time for SMT solver (w/o itp):   451.147s

Number of path formula cache hits:   2363138 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    18.040s

Total number of created targets for pointer analysis: 82142
   Number of created targets for uf: *(char)* is 9
   Number of created targets for uf: *unsigned_char is 11908


Number of BDD nodes:                               212500
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      170371 (count: 810595, min: 0, max: 2882, avg: 0.21)
Time for BDD node cleanup:                             0.139s
Time for BDD garbage collection:                       3.080s (in 997 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.628s
  Time for transition matches:                         1.899s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      2359172 (count: 2359172, min: 1, max: 1, avg: 1.00) [1 x 2359172]

CPA algorithm statistics
------------------------
Number of iterations:            1722130
Max size of waitlist:            1542
Average size of waitlist:        390
Number of computed successors:   1993490
Max successors for one state:    2
Number of times merged:          107554
Number of times stopped:         138404
Number of times breaked:         239

Total time for CPA algorithm:       881.288s (Max:   164.139s)
  Time for choose from waitlist:      1.145s
  Time for precision adjustment:    803.446s
  Time for transfer relation:        58.718s
  Time for merge operator:            3.893s
  Time for stop operator:             4.627s
  Time for adding to reached set:     3.973s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   239
Avg. length of target path (in blocks):               11128 (count: 239, min: 15, max: 114, avg: 46.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   9.369s
  Counterexample analysis:                             6.079s (Max:     0.063s, Calls: 239)
    Refinement sat check:                              4.315s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.108s
  Precision update:                                    0.118s
  ARG update:                                          2.917s

Length of refined path (in blocks):                    7663 (count: 239, min: 11, max: 69, avg: 32.06)
Number of affected states:                             5803 (count: 239, min: 4, max: 62, avg: 24.28)
Length (states) of path with itp 'true':               1621 (count: 239, min: 6, max: 27, avg: 6.78)
Length (states) of path with itp non-trivial itp:      5803 (count: 239, min: 4, max: 62, avg: 24.28)
Length (states) of path with itp 'false':               239 (count: 239, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          21 (count: 239, min: 0, max: 1, avg: 0.09)
Equal non-trivial interpolants along paths:            5543 (count: 239, min: 3, max: 61, avg: 23.19)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                239
Number of successful refinements:     239
Number of failed refinements:         0
Max. size of reached set before ref.: 24144
Max. size of reached set after ref.:  4219
Avg. size of reached set before ref.: 7838.85
Avg. size of reached set after ref.:  172.83

Total time for CEGAR algorithm:     891.892s
Time for refinements:                10.574s
Average time for refinement:          0.044s
Max time for refinement:              0.142s

Code Coverage
-----------------------------
  Function coverage:      0.252
  Visited lines:          1777
  Total lines:            6788
  Line coverage:          0.262
  Visited conditions:     250
  Total conditions:       1948
  Condition coverage:     0.128

CPAchecker general statistics
-----------------------------
Number of program locations:     9702
Number of CFA edges:             11054
Number of relevant variables:    1430
Number of functions:             318
Number of loops:                 64
Size of reached set:             4070
  Number of reached locations:   769 (8%)
    Avg states per location:     5
    Max states per location:     104 (at node N8958)
  Number of reached functions:   80 (25%)
  Number of partitions:          4008
    Avg size of partitions:      1
    Max size of partitions:      25 (with key [N6090 (before line 13723), Function main called from node N6074, stack depth 1 [50b4364], stack [main]])
  Number of target states:       0
  Size of final wait list        309

Time for analysis setup:          8.373s
  Time for loading CPAs:          1.267s
  Time for loading parser:        0.664s
  Time for CFA construction:      6.275s
    Time for parsing file(s):     1.357s
    Time for AST to CFA:          2.532s
    Time for CFA sanity check:    0.619s
    Time for post-processing:     1.592s
      Time for var class.:        0.740s
Time for Analysis:              891.892s
CPU time for analysis:          891.740s
Total time for CPAchecker:      900.269s
Total CPU time for CPAchecker:  900.100s
Time for statistics:              0.169s

Time for Garbage Collector:      16.530s (in 1209 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                358MB (   341 MiB) max;    233MB (   222 MiB) avg;    389MB (   371 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           451MB (   430 MiB) max;    346MB (   329 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8492MB (  8098 MiB) max;   8372MB (  7984 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
