scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-usb-dev__drivers-net-ethernet-dec-tulip-tulip_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vye6_v8t/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5858: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 7315: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7331: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8456: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9296: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9312: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9328: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13132: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13152: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13155: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13157: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13848: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13861: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14488: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14530: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 14531: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 14576: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15358: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15410: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15426: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15442: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15487: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15530: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15572: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16149: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16199: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16215: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16231: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16247: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16761: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17185: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17201: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17217: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17233: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9602: Function pointer *(ops___0->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9643: Function pointer *(ops___0->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5975-5976: Function pointer *(ops___0->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6121: Function pointer *(ops___0->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6055: Function pointer *(ops___0->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6095: Function pointer *(ops___0->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6015: Function pointer *(ops___0->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15297: Ignoring call via function pointer ldv_timer_instance_callback_8_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15297: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __napi_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13894: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13894: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1062895 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  846197 (80%)
  Because of loop head:            214734 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1964 (0%)
  Times precision was empty:       365377 (34%)
  Times precision was {false}:     3705 (0%)
  Times result was cached:         623318 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      70495 (7%)
  Times result was 'false':        44652 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         1227901
  BDD entailment checks:           996659
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          37
Number of abstraction locations:          206
Max number of predicates per location:    35
Avg number of predicates per location:    14
Total predicates per abstraction:         11701243
Max number of predicates per abstraction: 35
Avg number of predicates per abstraction: 157.70
Number of irrelevant predicates:          6531941 (56%)
Number of preds handled by boolean abs:   750128 (6%)
  Total number of models for allsat:      1763838
  Max number of models for allsat:        12500
  Avg number of models for allsat:        25.02

Time for post operator:                 62.206s
  Time for path formula creation:       60.312s
Time for strengthen operator:            3.809s
Time for prec operator:                682.290s
  Time for abstraction:                667.331s (Max:     2.254s, Count: 1062895)
    Boolean abstraction:               320.462s
    Solving time:                       88.236s (Max:     0.083s)
    Model enumeration time:            151.360s
    Time for BDD construction:          73.232s (Max:     0.790s)
Time for merge operator:                 1.633s
Time for coverage check:                 2.136s
  Time for BDD entailment checks:        1.922s
Total time for SMT solver (w/o itp):   239.596s

Number of path formula cache hits:   3916469 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    39.826s

Total number of created targets for pointer analysis: 8
   Number of created targets for uf: *(char)* is 9


Number of BDD nodes:                               143011
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      338082 (count: 1896109, min: 0, max: 5883, avg: 0.18)
Time for BDD node cleanup:                             0.404s
Time for BDD garbage collection:                       0.480s (in 114 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.036s
  Time for transition matches:                         2.860s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.014s
Automaton transfers with branching:                0
Automaton transfer successors:                      4491939 (count: 4491939, min: 1, max: 1, avg: 1.00) [1 x 4491939]

CPA algorithm statistics
------------------------
Number of iterations:            3447529
Max size of waitlist:            276
Average size of waitlist:        110
Number of computed successors:   3840605
Max successors for one state:    2
Number of times merged:          115621
Number of times stopped:         296920
Number of times breaked:         647

Total time for CPA algorithm:       853.810s (Max:    19.813s)
  Time for choose from waitlist:      1.913s
  Time for precision adjustment:    705.058s
  Time for transfer relation:       116.095s
  Time for merge operator:            4.622s
  Time for stop operator:             9.891s
  Time for adding to reached set:     6.554s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   647
Avg. length of target path (in blocks):               71422 (count: 647, min: 20, max: 295, avg: 110.39)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  34.440s
  Counterexample analysis:                            27.662s (Max:     0.183s, Calls: 647)
    Refinement sat check:                             15.210s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.047s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.280s
  Precision update:                                    0.638s
  ARG update:                                          5.326s

Length of refined path (in blocks):                   47112 (count: 647, min: 11, max: 222, avg: 72.82)
Number of affected states:                            26374 (count: 647, min: 4, max: 196, avg: 40.76)
Length (states) of path with itp 'true':              20091 (count: 647, min: 1, max: 163, avg: 31.05)
Length (states) of path with itp non-trivial itp:     26374 (count: 647, min: 4, max: 196, avg: 40.76)
Length (states) of path with itp 'false':               611 (count: 647, min: 0, max: 1, avg: 0.94)
Different non-trivial interpolants along paths:          49 (count: 647, min: 0, max: 1, avg: 0.08)
Equal non-trivial interpolants along paths:           25678 (count: 647, min: 3, max: 194, avg: 39.69)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                647
Number of successful refinements:     647
Number of failed refinements:         0
Max. size of reached set before ref.: 20997
Max. size of reached set after ref.:  10797
Avg. size of reached set before ref.: 7593.81
Avg. size of reached set after ref.:  2204.07

Total time for CEGAR algorithm:     892.668s
Time for refinements:                38.034s
Average time for refinement:          0.058s
Max time for refinement:              0.234s

Code Coverage
-----------------------------
  Function coverage:      0.292
  Visited lines:          1892
  Total lines:            6788
  Line coverage:          0.279
  Visited conditions:     242
  Total conditions:       1948
  Condition coverage:     0.124

CPAchecker general statistics
-----------------------------
Number of program locations:     9702
Number of CFA edges:             11054
Number of relevant variables:    1430
Number of functions:             318
Number of loops:                 64
Size of reached set:             11871
  Number of reached locations:   950 (10%)
    Avg states per location:     12
    Max states per location:     203 (at node N8958)
  Number of reached functions:   93 (29%)
  Number of partitions:          11743
    Avg size of partitions:      1
    Max size of partitions:      26 (with key [N6090 (before line 13723), Function main called from node N6074, stack depth 1 [a0d875d], stack [main]])
  Number of target states:       0
  Size of final wait list        166

Time for analysis setup:          7.596s
  Time for loading CPAs:          1.020s
  Time for loading parser:        0.623s
  Time for CFA construction:      5.804s
    Time for parsing file(s):     1.371s
    Time for AST to CFA:          2.247s
    Time for CFA sanity check:    0.477s
    Time for post-processing:     1.465s
      Time for var class.:        0.738s
Time for Analysis:              892.668s
CPU time for analysis:          892.540s
Total time for CPAchecker:      900.268s
Total CPU time for CPAchecker:  900.120s
Time for statistics:              0.328s

Time for Garbage Collector:      34.332s (in 1547 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                726MB (   692 MiB) max;    307MB (   293 MiB) avg;    738MB (   704 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           963MB (   918 MiB) max;    471MB (   449 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  10242MB (  9767 MiB) max;   8838MB (  8428 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
