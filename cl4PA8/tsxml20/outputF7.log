scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14__complex_emg__linux-usb-dev__drivers-net-ethernet-dec-tulip-tulip_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_syhsofak/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5858: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 7315: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7331: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8456: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9296: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9312: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9328: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13132: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13152: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13155: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13157: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13848: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13861: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14488: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14530: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 14531: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 14576: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 15358: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15410: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15426: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15442: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15487: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15530: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15572: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16149: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16199: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16215: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16231: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16247: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16761: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17185: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17201: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17217: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17233: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9602: Function pointer *(ops___0->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9643: Function pointer *(ops___0->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5975-5976: Function pointer *(ops___0->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6121: Function pointer *(ops___0->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6055: Function pointer *(ops___0->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6095: Function pointer *(ops___0->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6015: Function pointer *(ops___0->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5968: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5975-5976: Ignoring function call through function pointer *(ops___0->map_page): addr = (*(ops___0->map_page))(dev, ((struct page *)0L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_set_wakeup_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6004: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 6015: Ignoring function call through function pointer *(ops___0->unmap_page): (*(ops___0->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9429: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9643: Ignoring function call through function pointer *(ops___0->free): (*(ops___0->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_mapping_error to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6121: Ignoring function call through function pointer *(ops___0->mapping_error): tmp___0 = (*(ops___0->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14212: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14212: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13894: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13894: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14201: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14201: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9694: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __pci_enable_wake to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1176026 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  909821 (77%)
  Because of loop head:            259595 (22%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6610 (1%)
  Times precision was empty:       144665 (12%)
  Times precision was {false}:     1613 (0%)
  Times result was cached:         1016970 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12778 (1%)
  Times result was 'false':        160876 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         1171650
  BDD entailment checks:           469562
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          37
Number of abstraction locations:          389
Max number of predicates per location:    26
Avg number of predicates per location:    7
Total predicates per abstraction:         11597356
Max number of predicates per abstraction: 26
Avg number of predicates per abstraction: 805.88
Number of irrelevant predicates:          2247697 (19%)
Number of preds handled by boolean abs:   96437 (1%)
  Total number of models for allsat:      26935
  Max number of models for allsat:        189
  Avg number of models for allsat:        2.11

Time for post operator:                 43.442s
  Time for path formula creation:       39.722s
Time for strengthen operator:            6.314s
Time for prec operator:                520.582s
  Time for abstraction:                505.635s (Max:     0.557s, Count: 1176026)
    Boolean abstraction:                36.170s
    Solving time:                       29.737s (Max:     0.080s)
    Model enumeration time:              5.635s
    Time for BDD construction:           0.788s (Max:     0.012s)
Time for merge operator:                 3.151s
Time for coverage check:                 0.622s
  Time for BDD entailment checks:        0.420s
Total time for SMT solver (w/o itp):    35.372s

Number of path formula cache hits:   8711536 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    12.238s

Total number of created targets for pointer analysis: 13026
   Number of created targets for uf: *unsigned_short_int is 141
   Number of created targets for uf: *signed_int is 163
   Number of created targets for uf: *(char)* is 9
   Number of created targets for uf: *unsigned_char is 309
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_1,_Parameter_1_type:_[unsigned_long_int],_VarArgs:_false)* is 1741
   Number of created targets for uf: *unsigned_int is 2
   Number of created targets for uf: *unsigned_long_int is 2669


Number of BDD nodes:                               57431
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       48142 (count: 758823, min: 0, max: 1324, avg: 0.06)
Time for BDD node cleanup:                             0.143s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.330s
  Time for transition matches:                         5.924s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.037s
Automaton transfers with branching:                0
Automaton transfer successors:                      7776954 (count: 7776954, min: 1, max: 1, avg: 1.00) [1 x 7776954]

CPA algorithm statistics
------------------------
Number of iterations:            4996291
Max size of waitlist:            296
Average size of waitlist:        172
Number of computed successors:   5827964
Max successors for one state:    2
Number of times merged:          351044
Number of times stopped:         546929
Number of times breaked:         1155

Total time for CPA algorithm:       710.718s (Max:     2.589s)
  Time for choose from waitlist:      2.516s
  Time for precision adjustment:    553.291s
  Time for transfer relation:       115.622s
  Time for merge operator:            8.636s
  Time for stop operator:             8.740s
  Time for adding to reached set:     9.268s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1155
Avg. length of target path (in blocks):              331970 (count: 1155, min: 29, max: 390, avg: 287.42)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 170.281s
  Counterexample analysis:                           158.276s (Max:     0.373s, Calls: 1155)
    Refinement sat check:                             61.647s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.175s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.084s
  Precision update:                                    2.136s
  ARG update:                                          7.238s

Length of refined path (in blocks):                  292580 (count: 1155, min: 11, max: 362, avg: 253.32)
Number of affected states:                           138897 (count: 1155, min: 2, max: 361, avg: 120.26)
Length (states) of path with itp 'true':             152528 (count: 1155, min: 0, max: 294, avg: 132.06)
Length (states) of path with itp non-trivial itp:    138897 (count: 1155, min: 2, max: 361, avg: 120.26)
Length (states) of path with itp 'false':              1084 (count: 1155, min: 0, max: 1, avg: 0.94)
Different non-trivial interpolants along paths:         359 (count: 1155, min: 0, max: 5, avg: 0.31)
Equal non-trivial interpolants along paths:          137383 (count: 1155, min: 1, max: 355, avg: 118.95)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1155
Number of successful refinements:     1155
Number of failed refinements:         0
Max. size of reached set before ref.: 21982
Max. size of reached set after ref.:  19110
Avg. size of reached set before ref.: 7756.76
Avg. size of reached set after ref.:  3335.07

Total time for CEGAR algorithm:     892.146s
Time for refinements:               179.064s
Average time for refinement:          0.155s
Max time for refinement:              0.608s

Code Coverage
-----------------------------
  Function coverage:      0.270
  Visited lines:          2624
  Total lines:            6788
  Line coverage:          0.387
  Visited conditions:     494
  Total conditions:       1948
  Condition coverage:     0.254

CPAchecker general statistics
-----------------------------
Number of program locations:     9702
Number of CFA edges:             11054
Number of relevant variables:    1430
Number of functions:             318
Number of loops:                 64
Size of reached set:             13108
  Number of reached locations:   1444 (15%)
    Avg states per location:     9
    Max states per location:     102 (at node N1522)
  Number of reached functions:   86 (27%)
  Number of partitions:          13037
    Avg size of partitions:      1
    Max size of partitions:      13 (with key [N6090 (before line 13723), Function main called from node N6074, stack depth 1 [38054d01], stack [main]])
  Number of target states:       0
  Size of final wait list        201

Time for analysis setup:          8.122s
  Time for loading CPAs:          1.047s
  Time for loading parser:        0.688s
  Time for CFA construction:      6.220s
    Time for parsing file(s):     1.259s
    Time for AST to CFA:          2.330s
    Time for CFA sanity check:    0.564s
    Time for post-processing:     1.858s
      Time for var class.:        0.841s
Time for Analysis:              892.146s
CPU time for analysis:          892.030s
Total time for CPAchecker:      900.271s
Total CPU time for CPAchecker:  900.140s
Time for statistics:              0.369s

Time for Garbage Collector:      45.587s (in 3024 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                303MB (   289 MiB) max;    154MB (   147 MiB) avg;    308MB (   294 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           311MB (   297 MiB) max;    226MB (   216 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8355MB (  7968 MiB) max;   8240MB (  7858 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
