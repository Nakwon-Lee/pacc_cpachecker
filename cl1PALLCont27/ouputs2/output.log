scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lfzgrgn2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 547: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 625: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1954: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1997: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2046: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2126: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2139: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2491: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3316: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 201: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2138 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1663 (78%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         475 (22%)
  Times precision was empty:       355 (17%)
  Times precision was {false}:     391 (18%)
  Times result was cached:         191 (9%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1201 (56%)
  Times result was 'false':        1145 (54%)
Number of strengthen sat checks:   0
Number of coverage checks:         137611
  BDD entailment checks:           1101
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3858
Number of predicates discovered:          140
Number of abstraction locations:          5
Max number of predicates per location:    102
Avg number of predicates per location:    40
Total predicates per abstraction:         26269
Max number of predicates per abstraction: 102
Avg number of predicates per abstraction: 16.50
Number of irrelevant predicates:          2645 (10%)
Number of preds handled by boolean abs:   22090 (84%)
  Total number of models for allsat:      9616
  Max number of models for allsat:        864
  Avg number of models for allsat:        8.01

Time for post operator:                  9.771s
  Time for path formula creation:        9.420s
Time for strengthen operator:            0.618s
Time for prec operator:                795.684s
  Time for abstraction:                795.178s (Max:   701.313s, Count: 2138)
    Boolean abstraction:               774.232s
    Solving time:                       43.190s (Max:     2.296s)
    Model enumeration time:            729.662s
    Time for BDD construction:           4.485s (Max:     0.214s)
Time for merge operator:                 3.408s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.012s
Total time for SMT solver (w/o itp):   772.853s

Number of path formula cache hits:   137374 (37%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.804s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               23031
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       25455 (count: 20695, min: 0, max: 1960, avg: 1.23)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.184s (in 20 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.689s
  Time for transition matches:                         0.310s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                       352766 (count: 352766, min: 1, max: 1, avg: 1.00) [1 x 352766]

CPA algorithm statistics
------------------------
Number of iterations:            260688
Max size of waitlist:            144
Average size of waitlist:        28
Number of computed successors:   331277
Max successors for one state:    2
Number of times merged:          68255
Number of times stopped:         68539
Number of times breaked:         91

Total time for CPA algorithm:       822.625s (Max:   720.777s)
  Time for choose from waitlist:      0.265s
  Time for precision adjustment:    798.757s
  Time for transfer relation:        15.550s
  Time for merge operator:            4.882s
  Time for stop operator:             0.673s
  Time for adding to reached set:     0.833s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   91
Avg. length of target path (in blocks):                 369 (count: 91, min: 1, max: 17, avg: 4.05)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  64.143s
  Counterexample analysis:                            62.431s (Max:    15.057s, Calls: 91)
    Refinement sat check:                             55.412s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.047s
  Precision update:                                    0.020s
  ARG update:                                          0.547s

Length of refined path (in blocks):                     261 (count: 91, min: 1, max: 12, avg: 2.87)
Number of affected states:                              102 (count: 91, min: 0, max: 11, avg: 1.12)
Length (states) of path with itp 'true':                 68 (count: 91, min: 0, max: 4, avg: 0.75)
Length (states) of path with itp non-trivial itp:       102 (count: 91, min: 0, max: 11, avg: 1.12)
Length (states) of path with itp 'false':                53 (count: 91, min: 0, max: 1, avg: 0.58)
Different non-trivial interpolants along paths:          67 (count: 91, min: 0, max: 7, avg: 0.74)
Equal non-trivial interpolants along paths:              12 (count: 91, min: 0, max: 5, avg: 0.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                91
Number of successful refinements:     91
Number of failed refinements:         0
Max. size of reached set before ref.: 101691
Max. size of reached set after ref.:  64325
Avg. size of reached set before ref.: 31757.00
Avg. size of reached set after ref.:  29985.53

Total time for CEGAR algorithm:     896.575s
Time for refinements:                71.631s
Average time for refinement:          0.787s
Max time for refinement:             15.620s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          1148
  Total lines:            1712
  Line coverage:          0.671
  Visited conditions:     646
  Total conditions:       730
  Condition coverage:     0.885

CPAchecker general statistics
-----------------------------
Number of program locations:     2241
Number of CFA edges:             2728
Number of relevant variables:    323
Number of functions:             76
Number of loops:                 9
Size of reached set:             100389
  Number of reached locations:   1283 (57%)
    Avg states per location:     78
    Max states per location:     1150 (at node N510)
  Number of reached functions:   52 (68%)
  Number of partitions:          100357
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N1155 (before lines 1444-1472), Function cleanup called from node N1297, stack depth 4 [34218a7c], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        40

Time for analysis setup:          4.360s
  Time for loading CPAs:          0.778s
  Time for loading parser:        0.774s
  Time for CFA construction:      2.595s
    Time for parsing file(s):     0.714s
    Time for AST to CFA:          0.816s
    Time for CFA sanity check:    0.257s
    Time for post-processing:     0.630s
      Time for var class.:        0.346s
Time for Analysis:              896.575s
CPU time for analysis:          896.530s
Total time for CPAchecker:      900.940s
Total CPU time for CPAchecker:  900.890s
Time for statistics:              1.232s

Time for Garbage Collector:       6.313s (in 187 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                368MB (   351 MiB) max;    216MB (   206 MiB) avg;    384MB (   367 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     35MB (    34 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           399MB (   380 MiB) max;    367MB (   350 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   9048MB (  8629 MiB) max;   8717MB (  8313 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
