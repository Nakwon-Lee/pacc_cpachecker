scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec9_product09_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3i6htbj7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 717: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1079: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1158: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1312: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1321: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1404: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1497: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1849: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1883: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1953: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2526: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2892: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3093: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3171: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3274: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3297: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2683: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            244 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            91 (37%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         153 (63%)
  Times precision was empty:       3 (1%)
  Times precision was {false}:     152 (62%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      89 (36%)
  Times result was 'false':        142 (58%)
Number of strengthen sat checks:   0
Number of coverage checks:         163940
  BDD entailment checks:           392
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       874
Number of predicates discovered:          93
Number of abstraction locations:          2
Max number of predicates per location:    93
Avg number of predicates per location:    47
Total predicates per abstraction:         4864
Max number of predicates per abstraction: 93
Avg number of predicates per abstraction: 20.18
Number of irrelevant predicates:          158 (3%)
Number of preds handled by boolean abs:   4706 (97%)
  Total number of models for allsat:      61545
  Max number of models for allsat:        7020
  Avg number of models for allsat:        691.52

Time for post operator:                  4.795s
  Time for path formula creation:        4.500s
Time for strengthen operator:            0.501s
Time for prec operator:                430.720s
  Time for abstraction:                430.231s (Max:    45.593s, Count: 244)
    Boolean abstraction:               425.471s
    Solving time:                       17.516s (Max:     0.407s)
    Model enumeration time:            401.306s
    Time for BDD construction:           6.871s (Max:     0.574s)
Time for merge operator:                 1.295s
Time for coverage check:                 0.096s
  Time for BDD entailment checks:        0.080s
Total time for SMT solver (w/o itp):   418.822s

Number of path formula cache hits:   376845 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.077s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               258164
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       68013 (count: 29259, min: 0, max: 4070, avg: 2.32)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.154s (in 16 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.789s
  Time for transition matches:                         0.332s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       390896 (count: 390896, min: 1, max: 1, avg: 1.00) [1 x 390896]

CPA algorithm statistics
------------------------
Number of iterations:            291070
Max size of waitlist:            30
Average size of waitlist:        12
Number of computed successors:   373070
Max successors for one state:    2
Number of times merged:          81774
Number of times stopped:         81786
Number of times breaked:         12

Total time for CPA algorithm:       450.240s (Max:   249.529s)
  Time for choose from waitlist:      0.229s
  Time for precision adjustment:    433.841s
  Time for transfer relation:        10.399s
  Time for merge operator:            2.757s
  Time for stop operator:             0.695s
  Time for adding to reached set:     0.839s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                  43 (count: 12, min: 2, max: 8, avg: 3.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  13.613s
  Counterexample analysis:                            12.681s (Max:     4.585s, Calls: 12)
    Refinement sat check:                             11.587s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.032s
  Precision update:                                    0.010s
  ARG update:                                          0.746s

Length of refined path (in blocks):                      41 (count: 12, min: 2, max: 6, avg: 3.42)
Number of affected states:                               29 (count: 12, min: 1, max: 5, avg: 2.42)
Length (states) of path with itp 'true':                  0 (count: 12, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        29 (count: 12, min: 1, max: 5, avg: 2.42)
Length (states) of path with itp 'false':                 1 (count: 12, min: 0, max: 1, avg: 0.08)
Different non-trivial interpolants along paths:          17 (count: 12, min: 0, max: 4, avg: 1.42)
Equal non-trivial interpolants along paths:               0 (count: 12, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 58988
Max. size of reached set after ref.:  3700
Avg. size of reached set before ref.: 26108.33
Avg. size of reached set after ref.:  3700.00

Total time for CEGAR algorithm:     464.995s
Time for refinements:                14.681s
Average time for refinement:          1.223s
Max time for refinement:              4.957s

Code Coverage
-----------------------------
  Function coverage:      0.586
  Visited lines:          981
  Total lines:            1675
  Line coverage:          0.586
  Visited conditions:     588
  Total conditions:       744
  Condition coverage:     0.790

CPAchecker general statistics
-----------------------------
Number of program locations:     2198
Number of CFA edges:             2677
Number of relevant variables:    281
Number of functions:             70
Number of loops:                 9
Size of reached set:             22243
  Number of reached locations:   1118 (51%)
    Avg states per location:     19
    Max states per location:     151 (at node N45)
  Number of reached functions:   41 (59%)
  Number of partitions:          22239
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N690 (before lines 869-897), Function cleanup called from node N3, stack depth 4 [29539e36], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          4.193s
  Time for loading CPAs:          0.897s
  Time for loading parser:        0.705s
  Time for CFA construction:      2.363s
    Time for parsing file(s):     0.647s
    Time for AST to CFA:          0.686s
    Time for CFA sanity check:    0.242s
    Time for post-processing:     0.574s
      Time for var class.:        0.322s
Time for Analysis:              464.997s
CPU time for analysis:          464.990s
Time for analyzing result:        0.021s
Total time for CPAchecker:      469.195s
Total CPU time for CPAchecker:  469.180s
Time for statistics:              0.435s

Time for Garbage Collector:       3.340s (in 137 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                159MB (   152 MiB) max;     92MB (    88 MiB) avg;    171MB (   163 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     34MB (    33 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           167MB (   160 MiB) max;    132MB (   126 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8273MB (  7890 MiB) max;   8154MB (  7776 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
