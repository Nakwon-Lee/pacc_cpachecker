scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product30_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1_bpr9m8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 78: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 117: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 513: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 824: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1619: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1628: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1662: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1671: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1711: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1791: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1804: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2195: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2229: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2327: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3326: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3372: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3163: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1543 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1209 (78%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         334 (22%)
  Times precision was empty:       358 (23%)
  Times precision was {false}:     252 (16%)
  Times result was cached:         204 (13%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      729 (47%)
  Times result was 'false':        746 (48%)
Number of strengthen sat checks:   0
Number of coverage checks:         166663
  BDD entailment checks:           831
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3794
Number of predicates discovered:          157
Number of abstraction locations:          5
Max number of predicates per location:    115
Avg number of predicates per location:    50
Total predicates per abstraction:         23984
Max number of predicates per abstraction: 115
Avg number of predicates per abstraction: 24.45
Number of irrelevant predicates:          4060 (17%)
Number of preds handled by boolean abs:   17525 (73%)
  Total number of models for allsat:      15293
  Max number of models for allsat:        10240
  Avg number of models for allsat:        20.98

Time for post operator:                 13.233s
  Time for path formula creation:       12.799s
Time for strengthen operator:            0.642s
Time for prec operator:                760.415s
  Time for abstraction:                759.776s (Max:   534.957s, Count: 1543)
    Boolean abstraction:               739.000s
    Solving time:                       53.966s (Max:     5.658s)
    Model enumeration time:            682.246s
    Time for BDD construction:           6.846s (Max:     4.901s)
Time for merge operator:                 3.454s
Time for coverage check:                 0.054s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):   736.215s

Number of path formula cache hits:   99551 (23%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    12.184s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               49663
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       34509 (count: 20694, min: 0, max: 3481, avg: 1.67)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.234s (in 37 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.025s
  Time for transition matches:                         0.500s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       411906 (count: 411906, min: 1, max: 1, avg: 1.00) [1 x 411906]

CPA algorithm statistics
------------------------
Number of iterations:            304939
Max size of waitlist:            142
Average size of waitlist:        25
Number of computed successors:   389554
Max successors for one state:    2
Number of times merged:          82916
Number of times stopped:         83162
Number of times breaked:         90

Total time for CPA algorithm:       794.489s (Max:   710.021s)
  Time for choose from waitlist:      0.305s
  Time for precision adjustment:    764.173s
  Time for transfer relation:        20.663s
  Time for merge operator:            5.638s
  Time for stop operator:             0.822s
  Time for adding to reached set:     1.210s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   90
Avg. length of target path (in blocks):                 338 (count: 90, min: 1, max: 13, avg: 3.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  87.294s
  Counterexample analysis:                            84.978s (Max:    21.476s, Calls: 90)
    Refinement sat check:                             73.399s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.051s
  Precision update:                                    0.032s
  ARG update:                                          0.512s

Length of refined path (in blocks):                     241 (count: 90, min: 1, max: 12, avg: 2.68)
Number of affected states:                               84 (count: 90, min: 0, max: 11, avg: 0.93)
Length (states) of path with itp 'true':                 67 (count: 90, min: 0, max: 4, avg: 0.74)
Length (states) of path with itp non-trivial itp:        84 (count: 90, min: 0, max: 11, avg: 0.93)
Length (states) of path with itp 'false':                52 (count: 90, min: 0, max: 1, avg: 0.58)
Different non-trivial interpolants along paths:          54 (count: 90, min: 0, max: 9, avg: 0.60)
Equal non-trivial interpolants along paths:              10 (count: 90, min: 0, max: 5, avg: 0.11)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                90
Number of successful refinements:     90
Number of failed refinements:         0
Max. size of reached set before ref.: 132039
Max. size of reached set after ref.:  98393
Avg. size of reached set before ref.: 55993.09
Avg. size of reached set after ref.:  54809.68

Total time for CEGAR algorithm:     896.212s
Time for refinements:                97.265s
Average time for refinement:          1.080s
Max time for refinement:             23.101s

Code Coverage
-----------------------------
  Function coverage:      0.689
  Visited lines:          1131
  Total lines:            1697
  Line coverage:          0.666
  Visited conditions:     644
  Total conditions:       730
  Condition coverage:     0.882

CPAchecker general statistics
-----------------------------
Number of program locations:     2226
Number of CFA edges:             2712
Number of relevant variables:    312
Number of functions:             74
Number of loops:                 9
Size of reached set:             199139
  Number of reached locations:   1276 (57%)
    Avg states per location:     156
    Max states per location:     2246 (at node N150)
  Number of reached functions:   51 (69%)
  Number of partitions:          199097
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N849 (before lines 1070-1098), Function cleanup called from node N2344, stack depth 4 [22c6f0e9], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        55

Time for analysis setup:          4.276s
  Time for loading CPAs:          0.861s
  Time for loading parser:        0.759s
  Time for CFA construction:      2.424s
    Time for parsing file(s):     0.669s
    Time for AST to CFA:          0.726s
    Time for CFA sanity check:    0.272s
    Time for post-processing:     0.572s
      Time for var class.:        0.311s
Time for Analysis:              896.212s
CPU time for analysis:          896.170s
Total time for CPAchecker:      900.493s
Total CPU time for CPAchecker:  900.440s
Time for statistics:              1.875s

Time for Garbage Collector:       6.908s (in 188 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                476MB (   454 MiB) max;    339MB (   323 MiB) avg;    494MB (   471 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           517MB (   493 MiB) max;    467MB (   446 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8793MB (  8385 MiB) max;   8626MB (  8226 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
