scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product23_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_byt3obam/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 590: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 683: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1035: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1075: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1104: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1253: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1267: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1840: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1978: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2329: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2649: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2695: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2730: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3080: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3391: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1780 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1390 (78%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         390 (22%)
  Times precision was empty:       360 (20%)
  Times precision was {false}:     304 (17%)
  Times result was cached:         170 (10%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      946 (53%)
  Times result was 'false':        881 (49%)
Number of strengthen sat checks:   0
Number of coverage checks:         99360
  BDD entailment checks:           1082
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3426
Number of predicates discovered:          140
Number of abstraction locations:          5
Max number of predicates per location:    101
Avg number of predicates per location:    38
Total predicates per abstraction:         19765
Max number of predicates per abstraction: 101
Avg number of predicates per abstraction: 15.81
Number of irrelevant predicates:          2511 (13%)
Number of preds handled by boolean abs:   15842 (80%)
  Total number of models for allsat:      10351
  Max number of models for allsat:        1152
  Avg number of models for allsat:        10.94

Time for post operator:                  8.556s
  Time for path formula creation:        8.223s
Time for strengthen operator:            0.398s
Time for prec operator:                807.460s
  Time for abstraction:                807.088s (Max:   741.763s, Count: 1780)
    Boolean abstraction:               791.724s
    Solving time:                       31.908s (Max:     2.280s)
    Model enumeration time:            757.688s
    Time for BDD construction:           4.827s (Max:     0.338s)
Time for merge operator:                 1.991s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):   789.597s

Number of path formula cache hits:   87502 (33%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.826s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               268172
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       18104 (count: 15798, min: 0, max: 1332, avg: 1.15)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.170s (in 22 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.843s
  Time for transition matches:                         0.353s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                       253681 (count: 253681, min: 1, max: 1, avg: 1.00) [1 x 253681]

CPA algorithm statistics
------------------------
Number of iterations:            187919
Max size of waitlist:            144
Average size of waitlist:        22
Number of computed successors:   239028
Max successors for one state:    2
Number of times merged:          49139
Number of times stopped:         49407
Number of times breaked:         97

Total time for CPA algorithm:       829.185s (Max:   758.741s)
  Time for choose from waitlist:      0.207s
  Time for precision adjustment:    809.861s
  Time for transfer relation:        13.529s
  Time for merge operator:            3.042s
  Time for stop operator:             0.448s
  Time for adding to reached set:     0.738s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   97
Avg. length of target path (in blocks):                 393 (count: 97, min: 1, max: 13, avg: 4.05)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  58.242s
  Counterexample analysis:                            56.790s (Max:    13.746s, Calls: 97)
    Refinement sat check:                             50.797s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.053s
  Precision update:                                    0.029s
  ARG update:                                          0.394s

Length of refined path (in blocks):                     284 (count: 97, min: 1, max: 12, avg: 2.93)
Number of affected states:                              111 (count: 97, min: 0, max: 11, avg: 1.14)
Length (states) of path with itp 'true':                 76 (count: 97, min: 0, max: 4, avg: 0.78)
Length (states) of path with itp non-trivial itp:       111 (count: 97, min: 0, max: 11, avg: 1.14)
Length (states) of path with itp 'false':                59 (count: 97, min: 0, max: 1, avg: 0.61)
Different non-trivial interpolants along paths:          72 (count: 97, min: 0, max: 7, avg: 0.74)
Equal non-trivial interpolants along paths:              14 (count: 97, min: 0, max: 5, avg: 0.14)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                97
Number of successful refinements:     97
Number of failed refinements:         0
Max. size of reached set before ref.: 74359
Max. size of reached set after ref.:  50828
Avg. size of reached set before ref.: 29310.70
Avg. size of reached set after ref.:  28307.82

Total time for CEGAR algorithm:     896.786s
Time for refinements:                65.460s
Average time for refinement:          0.674s
Max time for refinement:             14.165s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          1117
  Total lines:            1702
  Line coverage:          0.656
  Visited conditions:     632
  Total conditions:       728
  Condition coverage:     0.868

CPAchecker general statistics
-----------------------------
Number of program locations:     2226
Number of CFA edges:             2711
Number of relevant variables:    319
Number of functions:             75
Number of loops:                 9
Size of reached set:             91461
  Number of reached locations:   1252 (56%)
    Avg states per location:     73
    Max states per location:     1080 (at node N2118)
  Number of reached functions:   50 (67%)
  Number of partitions:          91432
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N1619 (before lines 2125-2153), Function cleanup called from node N6, stack depth 4 [6baac161], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        35

Time for analysis setup:          4.135s
  Time for loading CPAs:          0.793s
  Time for loading parser:        0.789s
  Time for CFA construction:      2.366s
    Time for parsing file(s):     0.685s
    Time for AST to CFA:          0.711s
    Time for CFA sanity check:    0.232s
    Time for post-processing:     0.549s
      Time for var class.:        0.302s
Time for Analysis:              896.786s
CPU time for analysis:          896.740s
Total time for CPAchecker:      900.928s
Total CPU time for CPAchecker:  900.870s
Time for statistics:              1.153s

Time for Garbage Collector:       4.852s (in 174 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                242MB (   231 MiB) max;    174MB (   166 MiB) avg;    272MB (   259 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     36MB (    34 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           324MB (   309 MiB) max;    304MB (   290 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8983MB (  8567 MiB) max;   8661MB (  8260 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
