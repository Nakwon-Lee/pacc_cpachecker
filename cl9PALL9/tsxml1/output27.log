scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--mtd--devices--docg3.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ijftb1cc/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4692: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 4697: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 4707: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 4711: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 4742: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 4747: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 4757: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 4761: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 4820: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 4825: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 4835: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 4839: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 4898: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9222: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9275: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9306: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9391: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 9392: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9433: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9464: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9549: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 9550: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9591: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9622: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9707: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 9708: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9749: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9780: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9865: Dead code detected: goto ldv_call_3; (CFACreationUtils.addEdgeToCFA, INFO)

line 9866: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10139: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10252: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10282: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10320: Dead code detected: goto ldv_call_4; (CFACreationUtils.addEdgeToCFA, INFO)

line 10327: Dead code detected: goto ldv_call_4; (CFACreationUtils.addEdgeToCFA, INFO)

line 10328: Dead code detected: goto ldv_call_4; (CFACreationUtils.addEdgeToCFA, INFO)

line 10364: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10394: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10432: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 10439: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 10440: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 10468: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11005: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11039: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11059: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11093: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11111: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11155: Dead code detected: goto ldv_call_9; (CFACreationUtils.addEdgeToCFA, INFO)

line 11161: Dead code detected: goto ldv_call_9; (CFACreationUtils.addEdgeToCFA, INFO)

line 11162: Dead code detected: goto ldv_call_9; (CFACreationUtils.addEdgeToCFA, INFO)

line 11168: Dead code detected: goto ldv_call_9; (CFACreationUtils.addEdgeToCFA, INFO)

line 11169: Dead code detected: goto ldv_call_9; (CFACreationUtils.addEdgeToCFA, INFO)

line 11170: Dead code detected: goto ldv_call_9; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 10082: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10096: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10110: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10124: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10741: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10752: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10763: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10774: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10785: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10796: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10807: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10818: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10829: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10840: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10851: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10862: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10873: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10884: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10895: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10906: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10917: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10928: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10939: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10950: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10961: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10972: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10983: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13897: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13916: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5201-5202: Function pointer *((void (*)(void *, int, int, u16 , int))it_func) with type void (*)(void *, int, int, u16 , int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function __platform_driver_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9057: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_bch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9060: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 8965: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_lockdep_rcu_enabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rcu_is_watching to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rcu_lockdep_current_cpu_online to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4616: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_rcu_suspicious to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_bch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5201-5202: Ignoring call via function pointer trace_docg3_io::it_func for which no suitable target was found in line: (*((void (*)(void *, int, int, u16 , int))it_func))(__data, op, width, (int)reg, val); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 5201-5202: Ignoring function call through function pointer *((void (*)(void *, int, int, u16 , int))it_func): (*((void (*)(void *, int, int, u16 , int))it_func))(__data, op, width, (int)reg, val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9032: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 8979: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_device_parse_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4105 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            3733 (91%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         372 (9%)
  Times precision was empty:       3243 (79%)
  Times precision was {false}:     218 (5%)
  Times result was cached:         560 (14%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      84 (2%)
  Times result was 'false':        310 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         62995
  BDD entailment checks:           1949
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1171
Number of predicates discovered:          9
Number of abstraction locations:          36
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         1630
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 5.40
Number of irrelevant predicates:          989 (61%)
Number of preds handled by boolean abs:   165 (10%)
  Total number of models for allsat:      110
  Max number of models for allsat:        5
  Avg number of models for allsat:        1.31

Time for post operator:                  6.299s
  Time for path formula creation:        6.037s
Time for strengthen operator:            0.364s
Time for prec operator:                  3.942s
  Time for abstraction:                  3.558s (Max:     0.119s, Count: 4105)
    Boolean abstraction:                 1.241s
    Solving time:                        2.121s (Max:     0.091s)
    Model enumeration time:              0.077s
    Time for BDD construction:           0.016s (Max:     0.008s)
Time for merge operator:                 1.064s
Time for coverage check:                 0.031s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     2.198s

Number of path formula cache hits:   355319 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.740s

Total number of created targets for pointer analysis: 34
   Number of created targets for uf: *(void)* is 3
   Number of created targets for uf: *signed_int is 3
   Number of created targets for uf: *(struct_docg3_cascade)* is 3
   Number of created targets for uf: *(struct_nand_ecclayout)* is 3
   Number of created targets for uf: *(unsigned_char)* is 3
   Number of created targets for uf: *unsigned_long_long_int is 3
   Number of created targets for uf: *unsigned_char_:_2 is 3
   Number of created targets for uf: *unsigned_int is 7


Number of BDD nodes:                               283
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         286 (count: 6974, min: 0, max: 125, avg: 0.04)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.617s
  Time for transition matches:                         0.299s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                       438530 (count: 438530, min: 1, max: 1, avg: 1.00) [1 x 438530]

CPA algorithm statistics
------------------------
Number of iterations:            269242
Max size of waitlist:            265
Average size of waitlist:        45
Number of computed successors:   302610
Max successors for one state:    2
Number of times merged:          30523
Number of times stopped:         32236
Number of times breaked:         138

Total time for CPA algorithm:        20.211s (Max:     3.555s)
  Time for choose from waitlist:      0.130s
  Time for precision adjustment:      5.914s
  Time for transfer relation:        10.717s
  Time for merge operator:            1.591s
  Time for stop operator:             0.316s
  Time for adding to reached set:     0.493s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   138
Avg. length of target path (in blocks):                 626 (count: 138, min: 1, max: 11, avg: 4.54)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.768s
  Counterexample analysis:                             2.774s (Max:     0.241s, Calls: 138)
    Refinement sat check:                              2.259s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.018s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.064s
  ARG update:                                          0.749s

Length of refined path (in blocks):                     606 (count: 138, min: 1, max: 11, avg: 4.39)
Number of affected states:                              134 (count: 138, min: 0, max: 10, avg: 0.97)
Length (states) of path with itp 'true':                334 (count: 138, min: 0, max: 10, avg: 2.42)
Length (states) of path with itp non-trivial itp:       134 (count: 138, min: 0, max: 10, avg: 0.97)
Length (states) of path with itp 'false':                20 (count: 138, min: 0, max: 1, avg: 0.14)
Different non-trivial interpolants along paths:          30 (count: 138, min: 0, max: 3, avg: 0.22)
Equal non-trivial interpolants along paths:              60 (count: 138, min: 0, max: 9, avg: 0.43)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                138
Number of successful refinements:     138
Number of failed refinements:         0
Max. size of reached set before ref.: 30748
Max. size of reached set after ref.:  29470
Avg. size of reached set before ref.: 3611.25
Avg. size of reached set after ref.:  2035.99

Total time for CEGAR algorithm:      25.009s
Time for refinements:                 4.502s
Average time for refinement:          0.032s
Max time for refinement:              0.284s

Code Coverage
-----------------------------
  Function coverage:      0.257
  Visited lines:          1921
  Total lines:            5154
  Line coverage:          0.373
  Visited conditions:     230
  Total conditions:       1118
  Condition coverage:     0.206

CPAchecker general statistics
-----------------------------
Number of program locations:     7830
Number of CFA edges:             8823
Number of relevant variables:    1029
Number of functions:             572
Number of loops:                 51
Size of reached set:             52678
  Number of reached locations:   1166 (15%)
    Avg states per location:     45
    Max states per location:     485 (at node N5826)
  Number of reached functions:   147 (26%)
  Number of partitions:          52675
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N3888 (before lines 10253-10256), Function ldv_platform_platform_instance_4 called from node N3169, stack depth 4 [626b639e], stack [main, ldv_entry_EMGentry_11, ldv_dispatch_register_platform_instance_3_11_10, ldv_platform_platform_instance_4]])
  Number of target states:       0
  Size of final wait list        263

Time for analysis setup:          5.264s
  Time for loading CPAs:          0.696s
  Time for loading parser:        0.619s
  Time for CFA construction:      3.839s
    Time for parsing file(s):     0.827s
    Time for AST to CFA:          1.560s
    Time for CFA sanity check:    0.423s
    Time for post-processing:     0.797s
      Time for var class.:        0.394s
Time for Analysis:               25.009s
CPU time for analysis:           25.010s
Total time for CPAchecker:       30.276s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.733s

Time for Garbage Collector:       2.039s (in 101 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                140MB (   133 MiB) max;     73MB (    70 MiB) avg;    145MB (   138 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           145MB (   138 MiB) max;    135MB (   129 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8121MB (  7745 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
