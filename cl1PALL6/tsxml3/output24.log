scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-media-video-cx88-cx8802-ko--32_7a--d47b389.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4nki_33h/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5292: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

line 6362: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_sram_channel_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function btcx_riscmem_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_core_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_core_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_risc_stopper to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_sram_channel_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5315: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)(buf->vb.queue.next)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_prefetch, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6187: Ignoring function call through function pointer *(drv->remove): err = (*(drv->remove))(drv); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5921: Ignoring function call through function pointer *(drv->advise_release): (*(drv->advise_release))(drv); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 5921: Unsupported feature (recursion): cx8802_request_release(drv); (line was originally pointer call(cx8802_request_release) (*(drv->advise_release))(drv);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            66 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            34 (52%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         32 (48%)
  Times precision was empty:       27 (41%)
  Times precision was {false}:     30 (45%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9 (14%)
  Times result was 'false':        23 (35%)
Number of strengthen sat checks:   0
Number of coverage checks:         296
  BDD entailment checks:           12
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       91
Number of predicates discovered:          6
Number of abstraction locations:          3
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         60
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 1.54
Number of irrelevant predicates:          39 (65%)
Number of preds handled by boolean abs:   21 (35%)
  Total number of models for allsat:      9
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.184s
  Time for path formula creation:        1.140s
Time for strengthen operator:            0.063s
Time for prec operator:                  0.802s
  Time for abstraction:                  0.780s (Max:     0.084s, Count: 66)
    Boolean abstraction:                 0.230s
    Solving time:                        0.350s (Max:     0.060s)
    Model enumeration time:              0.016s
    Time for BDD construction:           0.008s (Max:     0.006s)
Time for merge operator:                 0.135s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.366s

Number of path formula cache hits:   1951 (45%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.039s

Total number of created targets for pointer analysis: 75
   Number of created targets for uf: *(struct_pci_dev)* is 2
   Number of created targets for uf: *(struct_list_head)* is 37
   Number of created targets for uf: *(struct_cx88_core)* is 2


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           7 (count: 290, min: 0, max: 7, avg: 0.02)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.151s
Automaton transfers with branching:                0
Automaton transfer successors:                         4248 (count: 4248, min: 1, max: 1, avg: 1.00) [1 x 4248]

CPA algorithm statistics
------------------------
Number of iterations:            2291
Max size of waitlist:            18
Average size of waitlist:        8
Number of computed successors:   2494
Max successors for one state:    2
Number of times merged:          142
Number of times stopped:         151
Number of times breaked:         9

Total time for CPA algorithm:         3.330s (Max:     0.826s)
  Time for choose from waitlist:      0.016s
  Time for precision adjustment:      1.038s
  Time for transfer relation:         1.895s
  Time for merge operator:            0.177s
  Time for stop operator:             0.024s
  Time for adding to reached set:     0.056s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                  15 (count: 9, min: 1, max: 3, avg: 1.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.189s
  Counterexample analysis:                             0.116s (Max:     0.031s, Calls: 9)
    Refinement sat check:                              0.074s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.010s
  Precision update:                                    0.012s
  ARG update:                                          0.025s

Length of refined path (in blocks):                      15 (count: 9, min: 1, max: 3, avg: 1.67)
Number of affected states:                                5 (count: 9, min: 0, max: 1, avg: 0.56)
Length (states) of path with itp 'true':                  1 (count: 9, min: 0, max: 1, avg: 0.11)
Length (states) of path with itp non-trivial itp:         5 (count: 9, min: 0, max: 1, avg: 0.56)
Length (states) of path with itp 'false':                 0 (count: 9, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 9, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 979
Max. size of reached set after ref.:  964
Avg. size of reached set before ref.: 278.89
Avg. size of reached set after ref.:  141.78

Total time for CEGAR algorithm:       3.563s
Time for refinements:                 0.232s
Average time for refinement:          0.025s
Max time for refinement:              0.078s

Code Coverage
-----------------------------
  Function coverage:      0.446
  Visited lines:          1269
  Total lines:            1844
  Line coverage:          0.688
  Visited conditions:     148
  Total conditions:       392
  Condition coverage:     0.378

CPAchecker general statistics
-----------------------------
Number of program locations:     2568
Number of CFA edges:             2852
Number of relevant variables:    222
Number of functions:             92
Number of loops:                 11
Size of reached set:             1087
  Number of reached locations:   533 (21%)
    Avg states per location:     2
    Max states per location:     65 (at node N70)
  Number of reached functions:   41 (45%)
  Number of partitions:          1086
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1305 (before line 6326), Function main called from node N1238, stack depth 1 [4d6f197e], stack [main]])
  Number of target states:       0
  Size of final wait list        10

Time for analysis setup:          6.244s
  Time for loading CPAs:          1.186s
  Time for loading parser:        0.796s
  Time for CFA construction:      4.120s
    Time for parsing file(s):     1.215s
    Time for AST to CFA:          1.400s
    Time for CFA sanity check:    0.248s
    Time for post-processing:     0.997s
      Time for var class.:        0.472s
Time for Analysis:                3.563s
CPU time for analysis:            3.570s
Total time for CPAchecker:        9.813s
Total CPU time for CPAchecker:    9.800s
Time for statistics:              0.152s

Time for Garbage Collector:       0.241s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     35MB (    33 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     27MB (    26 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8133MB (  7757 MiB) max;   8090MB (  7715 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
