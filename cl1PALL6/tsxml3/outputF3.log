scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-media-video-cx88-cx8802-ko--32_7a--d47b389.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gvnipon9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5292: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

line 6362: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_sram_channel_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function btcx_riscmem_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_core_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_core_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_risc_stopper to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_core_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_print_irqbits to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_wakeup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_sram_channel_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5315: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)(buf->vb.queue.next)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_prefetch, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6187: Ignoring function call through function pointer *(drv->remove): err = (*(drv->remove))(drv); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5921: Ignoring function call through function pointer *(drv->advise_release): (*(drv->advise_release))(drv); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 5921: Unsupported feature (recursion): cx8802_request_release(drv); (line was originally pointer call(cx8802_request_release) (*(drv->advise_release))(drv);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            610 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            458 (75%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         152 (25%)
  Times precision was empty:       152 (25%)
  Times precision was {false}:     98 (16%)
  Times result was cached:         187 (31%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      173 (28%)
  Times result was 'false':        131 (21%)
Number of strengthen sat checks:   0
Number of coverage checks:         5302
  BDD entailment checks:           278
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       109
Number of predicates discovered:          6
Number of abstraction locations:          6
Max number of predicates per location:    4
Avg number of predicates per location:    3
Total predicates per abstraction:         1220
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 4.50
Number of irrelevant predicates:          443 (36%)
Number of preds handled by boolean abs:   401 (33%)
  Total number of models for allsat:      173
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  2.577s
  Time for path formula creation:        2.324s
Time for strengthen operator:            0.154s
Time for prec operator:                  3.907s
  Time for abstraction:                  3.670s (Max:     0.070s, Count: 610)
    Boolean abstraction:                 1.518s
    Solving time:                        1.789s (Max:     0.049s)
    Model enumeration time:              0.104s
    Time for BDD construction:           0.057s (Max:     0.012s)
Time for merge operator:                 0.303s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     1.893s

Number of path formula cache hits:   42383 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.980s

Total number of created targets for pointer analysis: 301
   Number of created targets for uf: *(struct_pci_dev)* is 5
   Number of created targets for uf: *(struct_list_head)* is 147
   Number of created targets for uf: *(struct_cx88_core)* is 5


Number of BDD nodes:                               214
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         356 (count: 2041, min: 0, max: 42, avg: 0.17)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.448s
Automaton transfers with branching:                0
Automaton transfer successors:                        48626 (count: 48626, min: 1, max: 1, avg: 1.00) [1 x 48626]

CPA algorithm statistics
------------------------
Number of iterations:            33986
Max size of waitlist:            24
Average size of waitlist:        11
Number of computed successors:   36997
Max successors for one state:    2
Number of times merged:          2512
Number of times stopped:         2708
Number of times breaked:         21

Total time for CPA algorithm:        11.475s (Max:     0.962s)
  Time for choose from waitlist:      0.099s
  Time for precision adjustment:      4.625s
  Time for transfer relation:         4.885s
  Time for merge operator:            0.502s
  Time for stop operator:             0.220s
  Time for adding to reached set:     0.403s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   21
Avg. length of target path (in blocks):                  79 (count: 21, min: 1, max: 6, avg: 3.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.620s
  Counterexample analysis:                             0.398s (Max:     0.043s, Calls: 21)
    Refinement sat check:                              0.301s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.020s
  ARG update:                                          0.146s

Length of refined path (in blocks):                      79 (count: 21, min: 1, max: 6, avg: 3.76)
Number of affected states:                               57 (count: 21, min: 0, max: 5, avg: 2.71)
Length (states) of path with itp 'true':                  1 (count: 21, min: 0, max: 1, avg: 0.05)
Length (states) of path with itp non-trivial itp:        57 (count: 21, min: 0, max: 5, avg: 2.71)
Length (states) of path with itp 'false':                 0 (count: 21, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 21, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              40 (count: 21, min: 0, max: 4, avg: 1.90)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                21
Number of successful refinements:     21
Number of failed refinements:         0
Max. size of reached set before ref.: 3321
Max. size of reached set after ref.:  2734
Avg. size of reached set before ref.: 1661.33
Avg. size of reached set after ref.:  170.76

Total time for CEGAR algorithm:      12.314s
Time for refinements:                 0.837s
Average time for refinement:          0.039s
Max time for refinement:              0.077s

Code Coverage
-----------------------------
  Function coverage:      0.467
  Visited lines:          1318
  Total lines:            1844
  Line coverage:          0.715
  Visited conditions:     174
  Total conditions:       392
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     2568
Number of CFA edges:             2852
Number of relevant variables:    222
Number of functions:             92
Number of loops:                 11
Size of reached set:             2857
  Number of reached locations:   610 (24%)
    Avg states per location:     4
    Max states per location:     237 (at node N70)
  Number of reached functions:   43 (47%)
  Number of partitions:          2857
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        9

Time for analysis setup:          5.501s
  Time for loading CPAs:          0.956s
  Time for loading parser:        0.762s
  Time for CFA construction:      3.638s
    Time for parsing file(s):     1.046s
    Time for AST to CFA:          1.263s
    Time for CFA sanity check:    0.238s
    Time for post-processing:     0.900s
      Time for var class.:        0.389s
Time for Analysis:               12.314s
CPU time for analysis:           12.320s
Total time for CPAchecker:       17.819s
Total CPU time for CPAchecker:   17.810s
Time for statistics:              0.163s

Time for Garbage Collector:       0.310s (in 22 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     43MB (    41 MiB) avg;     70MB (    67 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     32MB (    30 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     33MB (    32 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8111MB (  7735 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
