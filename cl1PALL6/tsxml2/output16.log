scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_sound-oss-opl3-ko--111_1a--42f9f8d.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9u9maifh/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sound_alloc_synthdev to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sequencer_init to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function compute_finetune to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2526: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function note_to_freq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sound_unload_synthdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function conf_printf2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            6136 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            6122 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (0%)
  Times precision was empty:       6129 (100%)
  Times precision was {false}:     7 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        7 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         12186
  BDD entailment checks:           3092
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       239
Number of predicates discovered:          1
Number of abstraction locations:          1
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         7
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          7 (100%)

Time for post operator:                 12.184s
  Time for path formula creation:       11.978s
Time for strengthen operator:            0.237s
Time for prec operator:                  0.659s
  Time for abstraction:                  0.268s (Max:     0.042s, Count: 6136)
    Solving time:                        0.047s (Max:     0.016s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 3.271s
Time for coverage check:                 0.067s
  Time for BDD entailment checks:        0.045s
Total time for SMT solver (w/o itp):     0.047s

Number of path formula cache hits:   87820 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.374s

Total number of created targets for pointer analysis: 136040
   Number of created targets for uf: *unsigned_short_int is 39
   Number of created targets for uf: *signed_int is 51
   Number of created targets for uf: *unsigned_char is 19
   Number of created targets for uf: *(struct_channel_info)* is 3
   Number of created targets for uf: *(struct_voice_alloc_info)* is 3
   Number of created targets for uf: *(struct_sbi_instrument)* is 37
   Number of created targets for uf: *(struct_synth_operations)* is 23


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 9265, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.383s
Automaton transfers with branching:                0
Automaton transfer successors:                       105569 (count: 105569, min: 1, max: 1, avg: 1.00) [1 x 105569]

CPA algorithm statistics
------------------------
Number of iterations:            82643
Max size of waitlist:            1977
Average size of waitlist:        1025
Number of computed successors:   92263
Max successors for one state:    2
Number of times merged:          4547
Number of times stopped:         7639
Number of times breaked:         7

Total time for CPA algorithm:        22.867s (Max:    16.968s)
  Time for choose from waitlist:      0.232s
  Time for precision adjustment:      2.005s
  Time for transfer relation:        15.262s
  Time for merge operator:            3.572s
  Time for stop operator:             0.337s
  Time for adding to reached set:     0.451s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                  14 (count: 7, min: 2, max: 2, avg: 2.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.372s
  Counterexample analysis:                             1.348s (Max:     0.232s, Calls: 7)
    Refinement sat check:                              1.274s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.002s
  ARG update:                                          0.001s

Length of refined path (in blocks):                      14 (count: 7, min: 2, max: 2, avg: 2.00)
Number of affected states:                                0 (count: 7, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  7 (count: 7, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:         0 (count: 7, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 7, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 7, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 2819
Max. size of reached set after ref.:  2818
Avg. size of reached set before ref.: 1999.14
Avg. size of reached set after ref.:  1998.14

Total time for CEGAR algorithm:      24.365s
Time for refinements:                 1.481s
Average time for refinement:          0.211s
Max time for refinement:              0.286s

Code Coverage
-----------------------------
  Function coverage:      0.870
  Visited lines:          1413
  Total lines:            1450
  Line coverage:          0.974
  Visited conditions:     378
  Total conditions:       384
  Condition coverage:     0.984

CPAchecker general statistics
-----------------------------
Number of program locations:     1936
Number of CFA edges:             2218
Number of relevant variables:    231
Number of functions:             46
Number of loops:                 21
Size of reached set:             84611
  Number of reached locations:   1006 (52%)
    Avg states per location:     84
    Max states per location:     3856 (at node N12)
  Number of reached functions:   40 (87%)
  Number of partitions:          84611
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1976

Time for analysis setup:          6.048s
  Time for loading CPAs:          1.159s
  Time for loading parser:        0.750s
  Time for CFA construction:      3.959s
    Time for parsing file(s):     0.934s
    Time for AST to CFA:          1.495s
    Time for CFA sanity check:    0.291s
    Time for post-processing:     1.049s
      Time for var class.:        0.563s
Time for Analysis:               24.365s
CPU time for analysis:           24.370s
Total time for CPAchecker:       30.420s
Total CPU time for CPAchecker:   30.410s
Time for statistics:              1.093s

Time for Garbage Collector:       1.534s (in 55 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                125MB (   119 MiB) max;     57MB (    54 MiB) avg;    150MB (   143 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    32 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           205MB (   195 MiB) max;    128MB (   122 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8135MB (  7758 MiB) max;   8119MB (  7743 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
