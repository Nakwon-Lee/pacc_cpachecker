scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_sound-oss-opl3-ko--111_1a--42f9f8d.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9f5dlvha/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sound_alloc_synthdev to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sequencer_init to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function conf_printf2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function compute_finetune to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2526: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function note_to_freq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sound_unload_synthdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2133 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1648 (77%)
  Because of loop head:            480 (23%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (0%)
  Times precision was empty:       2085 (98%)
  Times precision was {false}:     6 (0%)
  Times result was cached:         24 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      18 (1%)
  Times result was 'false':        9 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1074
  BDD entailment checks:           530
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          8
Number of abstraction locations:          11
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         54
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 2.25
Number of irrelevant predicates:          17 (31%)
Number of preds handled by boolean abs:   19 (35%)
  Total number of models for allsat:      19
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.06

Time for post operator:                  4.586s
  Time for path formula creation:        4.521s
Time for strengthen operator:            0.053s
Time for prec operator:                  0.523s
  Time for abstraction:                  0.312s (Max:     0.064s, Count: 2133)
    Boolean abstraction:                 0.100s
    Solving time:                        0.102s (Max:     0.029s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.011s (Max:     0.008s)
Time for merge operator:                 0.125s
Time for coverage check:                 0.028s
  Time for BDD entailment checks:        0.013s
Total time for SMT solver (w/o itp):     0.105s

Number of path formula cache hits:   1267 (12%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.324s

Total number of created targets for pointer analysis: 3290
   Number of created targets for uf: *unsigned_short_int is 39
   Number of created targets for uf: *signed_int is 26
   Number of created targets for uf: *unsigned_char is 19
   Number of created targets for uf: *(struct_channel_info)* is 2
   Number of created targets for uf: *(struct_voice_alloc_info)* is 2
   Number of created targets for uf: *(struct_synth_operations)* is 12


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          60 (count: 2774, min: 0, max: 43, avg: 0.02)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.230s
Automaton transfers with branching:                0
Automaton transfer successors:                        10013 (count: 10013, min: 1, max: 1, avg: 1.00) [1 x 10013]

CPA algorithm statistics
------------------------
Number of iterations:            7245
Max size of waitlist:            35
Average size of waitlist:        25
Number of computed successors:   8064
Max successors for one state:    2
Number of times merged:          272
Number of times stopped:         802
Number of times breaked:         5

Total time for CPA algorithm:         7.443s (Max:     4.393s)
  Time for choose from waitlist:      0.057s
  Time for precision adjustment:      1.002s
  Time for transfer relation:         5.637s
  Time for merge operator:            0.211s
  Time for stop operator:             0.123s
  Time for adding to reached set:     0.146s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  57 (count: 5, min: 8, max: 16, avg: 11.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.145s
  Counterexample analysis:                             1.110s (Max:     0.261s, Calls: 5)
    Refinement sat check:                              1.010s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.003s
  ARG update:                                          0.003s

Length of refined path (in blocks):                      52 (count: 5, min: 7, max: 15, avg: 10.40)
Number of affected states:                               27 (count: 5, min: 2, max: 10, avg: 5.40)
Length (states) of path with itp 'true':                 20 (count: 5, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp non-trivial itp:        27 (count: 5, min: 2, max: 10, avg: 5.40)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          10 (count: 5, min: 1, max: 3, avg: 2.00)
Equal non-trivial interpolants along paths:              12 (count: 5, min: 0, max: 6, avg: 2.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 6571
Max. size of reached set after ref.:  6522
Avg. size of reached set before ref.: 4673.00
Avg. size of reached set after ref.:  4647.00

Total time for CEGAR algorithm:       8.776s
Time for refinements:                 1.295s
Average time for refinement:          0.259s
Max time for refinement:              0.303s

Code Coverage
-----------------------------
  Function coverage:      0.848
  Visited lines:          1423
  Total lines:            1450
  Line coverage:          0.981
  Visited conditions:     382
  Total conditions:       384
  Condition coverage:     0.995

CPAchecker general statistics
-----------------------------
Number of program locations:     1936
Number of CFA edges:             2218
Number of relevant variables:    231
Number of functions:             46
Number of loops:                 21
Size of reached set:             7124
  Number of reached locations:   1014 (52%)
    Avg states per location:     7
    Max states per location:     312 (at node N12)
  Number of reached functions:   39 (85%)
  Number of partitions:          7124
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          6.029s
  Time for loading CPAs:          1.218s
  Time for loading parser:        0.821s
  Time for CFA construction:      3.797s
    Time for parsing file(s):     1.060s
    Time for AST to CFA:          1.394s
    Time for CFA sanity check:    0.226s
    Time for post-processing:     0.890s
      Time for var class.:        0.482s
Time for Analysis:                8.777s
CPU time for analysis:            8.770s
Time for analyzing result:        0.016s
Total time for CPAchecker:       14.811s
Total CPU time for CPAchecker:   14.790s
Time for statistics:              0.254s

Time for Garbage Collector:       0.379s (in 14 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    68 MiB) max;     42MB (    40 MiB) avg;     78MB (    74 MiB) peak
Used non-heap memory:             43MB (    41 MiB) max;     33MB (    32 MiB) avg;     44MB (    42 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        45MB (    42 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8105MB (  7729 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
