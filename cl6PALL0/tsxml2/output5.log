scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product63_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gixb35f1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 245: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 291: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 300: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 536: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 610: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 637: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 660: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 980: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1026: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 817: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            43 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            22 (51%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         21 (49%)
  Times precision was empty:       5 (12%)
  Times precision was {false}:     16 (37%)
  Times result was cached:         7 (16%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      15 (35%)
  Times result was 'false':        17 (40%)
Number of strengthen sat checks:   0
Number of coverage checks:         1481
  BDD entailment checks:           13
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       85
Number of predicates discovered:          5
Number of abstraction locations:          3
Max number of predicates per location:    4
Avg number of predicates per location:    3
Total predicates per abstraction:         74
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 2.39
Number of irrelevant predicates:          20 (27%)
Number of preds handled by boolean abs:   42 (57%)
  Total number of models for allsat:      39
  Max number of models for allsat:        5
  Avg number of models for allsat:        2.60

Time for post operator:                  0.717s
  Time for path formula creation:        0.686s
Time for strengthen operator:            0.070s
Time for prec operator:                  0.613s
  Time for abstraction:                  0.519s (Max:     0.043s, Count: 43)
    Boolean abstraction:                 0.177s
    Solving time:                        0.153s (Max:     0.018s)
    Model enumeration time:              0.018s
    Time for BDD construction:           0.041s (Max:     0.010s)
Time for merge operator:                 0.126s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.171s

Number of path formula cache hits:   7512 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.620s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               245
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          77 (count: 231, min: 0, max: 45, avg: 0.33)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.163s
Automaton transfers with branching:                0
Automaton transfer successors:                         9899 (count: 9899, min: 1, max: 1, avg: 1.00) [1 x 9899]

CPA algorithm statistics
------------------------
Number of iterations:            7658
Max size of waitlist:            11
Average size of waitlist:        6
Number of computed successors:   8432
Max successors for one state:    2
Number of times merged:          734
Number of times stopped:         740
Number of times breaked:         4

Total time for CPA algorithm:         3.162s (Max:     0.760s)
  Time for choose from waitlist:      0.033s
  Time for precision adjustment:      0.933s
  Time for transfer relation:         1.563s
  Time for merge operator:            0.244s
  Time for stop operator:             0.082s
  Time for adding to reached set:     0.130s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  12 (count: 4, min: 2, max: 4, avg: 3.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.225s
  Counterexample analysis:                             0.122s (Max:     0.045s, Calls: 4)
    Refinement sat check:                              0.081s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.030s
  Precision update:                                    0.003s
  ARG update:                                          0.052s

Length of refined path (in blocks):                      12 (count: 4, min: 2, max: 4, avg: 3.00)
Number of affected states:                                8 (count: 4, min: 1, max: 3, avg: 2.00)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         8 (count: 4, min: 1, max: 3, avg: 2.00)
Length (states) of path with itp 'false':                 0 (count: 4, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           3 (count: 4, min: 0, max: 2, avg: 0.75)
Equal non-trivial interpolants along paths:               1 (count: 4, min: 0, max: 1, avg: 0.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 2219
Max. size of reached set after ref.:  32
Avg. size of reached set before ref.: 1392.00
Avg. size of reached set after ref.:  32.00

Total time for CEGAR algorithm:       3.457s
Time for refinements:                 0.292s
Average time for refinement:          0.073s
Max time for refinement:              0.093s

Code Coverage
-----------------------------
  Function coverage:      0.732
  Visited lines:          174
  Total lines:            464
  Line coverage:          0.375
  Visited conditions:     52
  Total conditions:       82
  Condition coverage:     0.634

CPAchecker general statistics
-----------------------------
Number of program locations:     674
Number of CFA edges:             731
Number of relevant variables:    121
Number of functions:             41
Number of loops:                 5
Size of reached set:             2236
  Number of reached locations:   237 (35%)
    Avg states per location:     9
    Max states per location:     48 (at node N222)
  Number of reached functions:   30 (73%)
  Number of partitions:          2235
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N177 (before lines 315-362), Function test called from node N47, stack depth 3 [3b8f0a79], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.628s
  Time for loading CPAs:          0.846s
  Time for loading parser:        0.826s
  Time for CFA construction:      1.700s
    Time for parsing file(s):     0.679s
    Time for AST to CFA:          0.349s
    Time for CFA sanity check:    0.118s
    Time for post-processing:     0.339s
      Time for var class.:        0.147s
Time for Analysis:                3.457s
CPU time for analysis:            3.460s
Time for analyzing result:        0.004s
Total time for CPAchecker:        7.098s
Total CPU time for CPAchecker:    7.090s
Time for statistics:              0.180s

Time for Garbage Collector:       0.160s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     33MB (    32 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     26MB (    25 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8082MB (  7708 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
