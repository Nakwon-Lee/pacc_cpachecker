scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product62_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2jpv2ocb/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 273: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 741: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 787: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 867: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 881: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 890: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 990: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1011: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1034: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 578: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            33 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            17 (52%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (48%)
  Times precision was empty:       7 (21%)
  Times precision was {false}:     13 (39%)
  Times result was cached:         7 (21%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6 (18%)
  Times result was 'false':        14 (42%)
Number of strengthen sat checks:   0
Number of coverage checks:         1131
  BDD entailment checks:           7
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       85
Number of predicates discovered:          8
Number of abstraction locations:          3
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         72
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 3.79
Number of irrelevant predicates:          17 (24%)
Number of preds handled by boolean abs:   34 (47%)
  Total number of models for allsat:      15
  Max number of models for allsat:        4
  Avg number of models for allsat:        2.50

Time for post operator:                  0.607s
  Time for path formula creation:        0.580s
Time for strengthen operator:            0.043s
Time for prec operator:                  0.529s
  Time for abstraction:                  0.452s (Max:     0.059s, Count: 33)
    Boolean abstraction:                 0.079s
    Solving time:                        0.122s (Max:     0.016s)
    Model enumeration time:              0.012s
    Time for BDD construction:           0.017s (Max:     0.008s)
Time for merge operator:                 0.102s
Time for coverage check:                 0.004s
  Time for BDD entailment checks:        0.004s
Total time for SMT solver (w/o itp):     0.134s

Number of path formula cache hits:   5612 (69%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.532s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               303
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         146 (count: 187, min: 0, max: 79, avg: 0.78)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.188s
Automaton transfers with branching:                0
Automaton transfer successors:                         7680 (count: 7680, min: 1, max: 1, avg: 1.00) [1 x 7680]

CPA algorithm statistics
------------------------
Number of iterations:            5912
Max size of waitlist:            11
Average size of waitlist:        6
Number of computed successors:   6507
Max successors for one state:    2
Number of times merged:          562
Number of times stopped:         564
Number of times breaked:         4

Total time for CPA algorithm:         2.839s (Max:     0.738s)
  Time for choose from waitlist:      0.020s
  Time for precision adjustment:      0.805s
  Time for transfer relation:         1.435s
  Time for merge operator:            0.236s
  Time for stop operator:             0.080s
  Time for adding to reached set:     0.103s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  10 (count: 4, min: 2, max: 3, avg: 2.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.177s
  Counterexample analysis:                             0.090s (Max:     0.030s, Calls: 4)
    Refinement sat check:                              0.059s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.004s
  ARG update:                                          0.052s

Length of refined path (in blocks):                       9 (count: 4, min: 2, max: 3, avg: 2.25)
Number of affected states:                                5 (count: 4, min: 1, max: 2, avg: 1.25)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         5 (count: 4, min: 1, max: 2, avg: 1.25)
Length (states) of path with itp 'false':                 1 (count: 4, min: 0, max: 1, avg: 0.25)
Different non-trivial interpolants along paths:           1 (count: 4, min: 0, max: 1, avg: 0.25)
Equal non-trivial interpolants along paths:               0 (count: 4, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 1872
Max. size of reached set after ref.:  32
Avg. size of reached set before ref.: 1135.50
Avg. size of reached set after ref.:  32.00

Total time for CEGAR algorithm:       3.059s
Time for refinements:                 0.220s
Average time for refinement:          0.055s
Max time for refinement:              0.072s

Code Coverage
-----------------------------
  Function coverage:      0.762
  Visited lines:          164
  Total lines:            462
  Line coverage:          0.355
  Visited conditions:     48
  Total conditions:       80
  Condition coverage:     0.600

CPAchecker general statistics
-----------------------------
Number of program locations:     673
Number of CFA edges:             729
Number of relevant variables:    123
Number of functions:             42
Number of loops:                 5
Size of reached set:             1516
  Number of reached locations:   220 (33%)
    Avg states per location:     6
    Max states per location:     32 (at node N14)
  Number of reached functions:   32 (76%)
  Number of partitions:          1515
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N188 (before lines 368-415), Function test called from node N637, stack depth 3 [4f6f416f], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.501s
  Time for loading CPAs:          0.893s
  Time for loading parser:        0.841s
  Time for CFA construction:      1.563s
    Time for parsing file(s):     0.563s
    Time for AST to CFA:          0.393s
    Time for CFA sanity check:    0.121s
    Time for post-processing:     0.318s
      Time for var class.:        0.125s
Time for Analysis:                3.059s
CPU time for analysis:            3.060s
Time for analyzing result:        0.001s
Total time for CPAchecker:        6.567s
Total CPU time for CPAchecker:    6.560s
Time for statistics:              0.160s

Time for Garbage Collector:       0.150s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    55 MiB) max;     32MB (    31 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     26MB (    25 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    34 MiB) max;     28MB (    26 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8078MB (  7704 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
