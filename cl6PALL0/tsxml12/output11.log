scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product37_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_s7kpi5tk/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 169: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 224: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 381: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 413: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 427: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 756: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 802: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 902: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 914: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 937: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 593: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            49 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            25 (51%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24 (49%)
  Times precision was empty:       3 (6%)
  Times precision was {false}:     16 (33%)
  Times result was cached:         13 (27%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      17 (35%)
  Times result was 'false':        19 (39%)
Number of strengthen sat checks:   0
Number of coverage checks:         798
  BDD entailment checks:           14
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       58
Number of predicates discovered:          5
Number of abstraction locations:          3
Max number of predicates per location:    4
Avg number of predicates per location:    3
Total predicates per abstraction:         85
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 2.58
Number of irrelevant predicates:          23 (27%)
Number of preds handled by boolean abs:   44 (52%)
  Total number of models for allsat:      37
  Max number of models for allsat:        4
  Avg number of models for allsat:        2.18

Time for post operator:                  0.396s
  Time for path formula creation:        0.369s
Time for strengthen operator:            0.070s
Time for prec operator:                  0.493s
  Time for abstraction:                  0.458s (Max:     0.029s, Count: 49)
    Boolean abstraction:                 0.165s
    Solving time:                        0.138s (Max:     0.018s)
    Model enumeration time:              0.011s
    Time for BDD construction:           0.029s (Max:     0.007s)
Time for merge operator:                 0.043s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.149s

Number of path formula cache hits:   3771 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.350s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               239
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          84 (count: 244, min: 0, max: 84, avg: 0.34)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.124s
Automaton transfers with branching:                0
Automaton transfer successors:                         5015 (count: 5015, min: 1, max: 1, avg: 1.00) [1 x 5015]

CPA algorithm statistics
------------------------
Number of iterations:            3935
Max size of waitlist:            8
Average size of waitlist:        4
Number of computed successors:   4373
Max successors for one state:    2
Number of times merged:          392
Number of times stopped:         398
Number of times breaked:         5

Total time for CPA algorithm:         2.179s (Max:     0.491s)
  Time for choose from waitlist:      0.026s
  Time for precision adjustment:      0.739s
  Time for transfer relation:         1.045s
  Time for merge operator:            0.113s
  Time for stop operator:             0.043s
  Time for adding to reached set:     0.062s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  16 (count: 5, min: 2, max: 4, avg: 3.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.144s
  Counterexample analysis:                             0.070s (Max:     0.019s, Calls: 5)
    Refinement sat check:                              0.039s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.006s
  ARG update:                                          0.038s

Length of refined path (in blocks):                      16 (count: 5, min: 2, max: 4, avg: 3.20)
Number of affected states:                               11 (count: 5, min: 1, max: 3, avg: 2.20)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        11 (count: 5, min: 1, max: 3, avg: 2.20)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           4 (count: 5, min: 0, max: 1, avg: 0.80)
Equal non-trivial interpolants along paths:               2 (count: 5, min: 0, max: 1, avg: 0.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 1019
Max. size of reached set after ref.:  32
Avg. size of reached set before ref.: 616.20
Avg. size of reached set after ref.:  32.00

Total time for CEGAR algorithm:       2.356s
Time for refinements:                 0.176s
Average time for refinement:          0.035s
Max time for refinement:              0.047s

Code Coverage
-----------------------------
  Function coverage:      0.694
  Visited lines:          144
  Total lines:            434
  Line coverage:          0.332
  Visited conditions:     42
  Total conditions:       72
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     619
Number of CFA edges:             667
Number of relevant variables:    113
Number of functions:             36
Number of loops:                 5
Size of reached set:             1036
  Number of reached locations:   194 (31%)
    Avg states per location:     5
    Max states per location:     24 (at node N13)
  Number of reached functions:   25 (69%)
  Number of partitions:          1035
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N114 (before lines 241-286), Function test called from node N587, stack depth 3 [7e19ebf0], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.466s
  Time for loading CPAs:          0.783s
  Time for loading parser:        0.899s
  Time for CFA construction:      1.573s
    Time for parsing file(s):     0.547s
    Time for AST to CFA:          0.390s
    Time for CFA sanity check:    0.111s
    Time for post-processing:     0.360s
      Time for var class.:        0.175s
Time for Analysis:                2.356s
CPU time for analysis:            2.370s
Time for analyzing result:        0.009s
Total time for CPAchecker:        5.827s
Total CPU time for CPAchecker:    5.830s
Time for statistics:              0.117s

Time for Garbage Collector:       0.121s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     31MB (    30 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     25MB (    24 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8069MB (  7695 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
