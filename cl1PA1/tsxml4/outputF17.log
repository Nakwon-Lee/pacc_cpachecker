scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-hwmon-s3c-hwmon-ko--130_7a--af3071a.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ld0qf_pu/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function s3c_adc_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function s3c_adc_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4880 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4291 (88%)
  Because of loop head:            558 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         31 (1%)
  Times precision was empty:       782 (16%)
  Times precision was {false}:     138 (3%)
  Times result was cached:         3305 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      655 (13%)
  Times result was 'false':        306 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         3648
  BDD entailment checks:           2228
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       16
Number of predicates discovered:          13
Number of abstraction locations:          51
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         10532
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 13.28
Number of irrelevant predicates:          4709 (45%)
Number of preds handled by boolean abs:   1183 (11%)
  Total number of models for allsat:      777
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.19

Time for post operator:                  2.308s
  Time for path formula creation:        2.240s
Time for strengthen operator:            0.104s
Time for prec operator:                  4.424s
  Time for abstraction:                  4.133s (Max:     0.027s, Count: 4880)
    Boolean abstraction:                 1.064s
    Solving time:                        0.915s (Max:     0.019s)
    Model enumeration time:              0.076s
    Time for BDD construction:           0.078s (Max:     0.014s)
Time for merge operator:                 0.099s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):     0.991s

Number of path formula cache hits:   20419 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.099s

Total number of created targets for pointer analysis: 894
   Number of created targets for uf: *signed_int is 473
   Number of created targets for uf: *(struct_s3c_adc_client)* is 44
   Number of created targets for uf: *(struct_device)* is 44


Number of BDD nodes:                               469
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1537 (count: 7796, min: 0, max: 306, avg: 0.20)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.287s
Automaton transfers with branching:                0
Automaton transfer successors:                        23958 (count: 23958, min: 1, max: 1, avg: 1.00) [1 x 23958]

CPA algorithm statistics
------------------------
Number of iterations:            17388
Max size of waitlist:            11
Average size of waitlist:        5
Number of computed successors:   19242
Max successors for one state:    2
Number of times merged:          710
Number of times stopped:         1475
Number of times breaked:         31

Total time for CPA algorithm:         9.693s (Max:     0.716s)
  Time for choose from waitlist:      0.127s
  Time for precision adjustment:      4.879s
  Time for transfer relation:         3.695s
  Time for merge operator:            0.218s
  Time for stop operator:             0.129s
  Time for adding to reached set:     0.138s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   31
Avg. length of target path (in blocks):                1946 (count: 31, min: 30, max: 101, avg: 62.77)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.497s
  Counterexample analysis:                             1.172s (Max:     0.066s, Calls: 31)
    Refinement sat check:                              0.650s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.066s
  Precision update:                                    0.094s
  ARG update:                                          0.124s

Length of refined path (in blocks):                    1427 (count: 31, min: 6, max: 100, avg: 46.03)
Number of affected states:                              801 (count: 31, min: 1, max: 99, avg: 25.84)
Length (states) of path with itp 'true':                595 (count: 31, min: 0, max: 60, avg: 19.19)
Length (states) of path with itp non-trivial itp:       801 (count: 31, min: 1, max: 99, avg: 25.84)
Length (states) of path with itp 'false':                31 (count: 31, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          33 (count: 31, min: 0, max: 3, avg: 1.06)
Equal non-trivial interpolants along paths:             737 (count: 31, min: 0, max: 97, avg: 23.77)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 1844
Max. size of reached set after ref.:  1583
Avg. size of reached set before ref.: 1015.48
Avg. size of reached set after ref.:  484.52

Total time for CEGAR algorithm:      11.377s
Time for refinements:                 1.670s
Average time for refinement:          0.053s
Max time for refinement:              0.093s

Code Coverage
-----------------------------
  Function coverage:      0.759
  Visited lines:          394
  Total lines:            451
  Line coverage:          0.874
  Visited conditions:     50
  Total conditions:       58
  Condition coverage:     0.862

CPAchecker general statistics
-----------------------------
Number of program locations:     609
Number of CFA edges:             640
Number of relevant variables:    90
Number of functions:             29
Number of loops:                 4
Size of reached set:             1002
  Number of reached locations:   219 (36%)
    Avg states per location:     4
    Max states per location:     18 (at node N132)
  Number of reached functions:   22 (76%)
  Number of partitions:          979
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N306 (before line 1217), Function main called from node N277, stack depth 1 [436c81a3], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.564s
  Time for loading CPAs:          0.881s
  Time for loading parser:        0.693s
  Time for CFA construction:      1.772s
    Time for parsing file(s):     0.601s
    Time for AST to CFA:          0.512s
    Time for CFA sanity check:    0.101s
    Time for post-processing:     0.393s
      Time for var class.:        0.170s
Time for Analysis:               11.377s
CPU time for analysis:           11.370s
Time for analyzing result:        0.001s
Total time for CPAchecker:       14.946s
Total CPU time for CPAchecker:   14.930s
Time for statistics:              0.107s

Time for Garbage Collector:       0.178s (in 14 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     38MB (    36 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     32MB (    31 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8065MB (  7691 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
