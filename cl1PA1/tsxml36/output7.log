scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-hwmon-ibmpex-ko--130_7a--d631323.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_csrbf69j/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_smi_watcher_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_destroy_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_free_recv_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_create_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_request_settime to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5374 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4016 (75%)
  Because of loop head:            1327 (25%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         31 (1%)
  Times precision was empty:       520 (10%)
  Times precision was {false}:     376 (7%)
  Times result was cached:         2866 (53%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1612 (30%)
  Times result was 'false':        422 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         5263
  BDD entailment checks:           2165
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       20
Number of predicates discovered:          27
Number of abstraction locations:          74
Max number of predicates per location:    9
Avg number of predicates per location:    4
Total predicates per abstraction:         13424
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 6.75
Number of irrelevant predicates:          5284 (39%)
Number of preds handled by boolean abs:   4918 (37%)
  Total number of models for allsat:      4413
  Max number of models for allsat:        18
  Avg number of models for allsat:        2.74

Time for post operator:                  4.427s
  Time for path formula creation:        4.321s
Time for strengthen operator:            0.109s
Time for prec operator:                 13.306s
  Time for abstraction:                 13.058s (Max:     0.486s, Count: 5374)
    Boolean abstraction:                 6.960s
    Solving time:                        5.702s (Max:     0.218s)
    Model enumeration time:              2.148s
    Time for BDD construction:           0.252s (Max:     0.012s)
Time for merge operator:                 0.310s
Time for coverage check:                 0.022s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     7.851s

Number of path formula cache hits:   16550 (45%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.115s

Total number of created targets for pointer analysis: 15154
   Number of created targets for uf: *unsigned_short_int is 38
   Number of created targets for uf: *signed_int is 103
   Number of created targets for uf: *(char)* is 127
   Number of created targets for uf: *unsigned_char is 2801
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *signed_long_int is 38
   Number of created targets for uf: *(unsigned_char)* is 38
   Number of created targets for uf: *(struct_ibmpex_sensor_data)* is 39
   Number of created targets for uf: *(struct_device)* is 65
   Number of created targets for uf: *unsigned_long_int is 17


Number of BDD nodes:                               1695
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3932 (count: 14692, min: 0, max: 480, avg: 0.27)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.262s
Automaton transfers with branching:                0
Automaton transfer successors:                        34415 (count: 34415, min: 1, max: 1, avg: 1.00) [1 x 34415]

CPA algorithm statistics
------------------------
Number of iterations:            22101
Max size of waitlist:            19
Average size of waitlist:        7
Number of computed successors:   25118
Max successors for one state:    2
Number of times merged:          1549
Number of times stopped:         2383
Number of times breaked:         31

Total time for CPA algorithm:        21.251s (Max:     3.767s)
  Time for choose from waitlist:      0.126s
  Time for precision adjustment:     13.889s
  Time for transfer relation:         5.977s
  Time for merge operator:            0.478s
  Time for stop operator:             0.142s
  Time for adding to reached set:     0.154s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   31
Avg. length of target path (in blocks):                3124 (count: 31, min: 50, max: 170, avg: 100.77)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.385s
  Counterexample analysis:                             4.027s (Max:     0.271s, Calls: 31)
    Refinement sat check:                              2.637s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.072s
  Precision update:                                    0.030s
  ARG update:                                          0.144s

Length of refined path (in blocks):                    2517 (count: 31, min: 13, max: 143, avg: 81.19)
Number of affected states:                             1703 (count: 31, min: 1, max: 142, avg: 54.94)
Length (states) of path with itp 'true':                783 (count: 31, min: 0, max: 108, avg: 25.26)
Length (states) of path with itp non-trivial itp:      1703 (count: 31, min: 1, max: 142, avg: 54.94)
Length (states) of path with itp 'false':                31 (count: 31, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          54 (count: 31, min: 0, max: 6, avg: 1.74)
Equal non-trivial interpolants along paths:            1618 (count: 31, min: 0, max: 140, avg: 52.19)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 2208
Max. size of reached set after ref.:  836
Avg. size of reached set before ref.: 901.03
Avg. size of reached set after ref.:  205.29

Total time for CEGAR algorithm:      25.835s
Time for refinements:                 4.579s
Average time for refinement:          0.147s
Max time for refinement:              0.285s

Code Coverage
-----------------------------
  Function coverage:      0.689
  Visited lines:          697
  Total lines:            826
  Line coverage:          0.844
  Visited conditions:     100
  Total conditions:       130
  Condition coverage:     0.769

CPAchecker general statistics
-----------------------------
Number of program locations:     1098
Number of CFA edges:             1168
Number of relevant variables:    149
Number of functions:             45
Number of loops:                 10
Size of reached set:             745
  Number of reached locations:   351 (32%)
    Avg states per location:     2
    Max states per location:     10 (at node N474)
  Number of reached functions:   31 (69%)
  Number of partitions:          726
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N562 (before line 2265), Function ibmpex_bmc_delete called from node N589, stack depth 3 [22bf4d9d], stack [main, ibmpex_bmc_gone, ibmpex_bmc_delete]])
  Number of target states:       0
  Size of final wait list        6

Time for analysis setup:          3.962s
  Time for loading CPAs:          0.841s
  Time for loading parser:        0.688s
  Time for CFA construction:      2.287s
    Time for parsing file(s):     0.782s
    Time for AST to CFA:          0.696s
    Time for CFA sanity check:    0.140s
    Time for post-processing:     0.530s
      Time for var class.:        0.260s
Time for Analysis:               25.835s
CPU time for analysis:           25.840s
Total time for CPAchecker:       29.801s
Total CPU time for CPAchecker:   29.800s
Time for statistics:              0.139s

Time for Garbage Collector:       0.303s (in 24 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     44MB (    42 MiB) avg;     71MB (    67 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
