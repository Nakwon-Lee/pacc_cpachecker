scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-hwmon-ibmpex-ko--130_7a--d631323.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9uo4edgj/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_smi_watcher_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_free_recv_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_destroy_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_create_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_request_settime to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5388 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4075 (76%)
  Because of loop head:            1269 (24%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         44 (1%)
  Times precision was empty:       789 (15%)
  Times precision was {false}:     406 (8%)
  Times result was cached:         3243 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      950 (18%)
  Times result was 'false':        224 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         5045
  BDD entailment checks:           1923
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       20
Number of predicates discovered:          19
Number of abstraction locations:          72
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         11393
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 8.40
Number of irrelevant predicates:          5380 (47%)
Number of preds handled by boolean abs:   2180 (19%)
  Total number of models for allsat:      1654
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.74

Time for post operator:                  5.269s
  Time for path formula creation:        5.140s
Time for strengthen operator:            0.087s
Time for prec operator:                 12.493s
  Time for abstraction:                 12.181s (Max:     0.427s, Count: 5388)
    Boolean abstraction:                 6.351s
    Solving time:                        5.825s (Max:     0.186s)
    Model enumeration time:              2.232s
    Time for BDD construction:           0.155s (Max:     0.013s)
Time for merge operator:                 0.251s
Time for coverage check:                 0.033s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     8.058s

Number of path formula cache hits:   13923 (38%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.928s

Total number of created targets for pointer analysis: 17966
   Number of created targets for uf: *unsigned_short_int is 36
   Number of created targets for uf: *signed_int is 180
   Number of created targets for uf: *(char)* is 113
   Number of created targets for uf: *unsigned_char is 3442
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *signed_long_int is 36
   Number of created targets for uf: *(unsigned_char)* is 36
   Number of created targets for uf: *(struct_ibmpex_sensor_data)* is 58
   Number of created targets for uf: *(struct_device)* is 61
   Number of created targets for uf: *unsigned_long_int is 17


Number of BDD nodes:                               628
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2184 (count: 10648, min: 0, max: 421, avg: 0.21)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.356s
Automaton transfers with branching:                0
Automaton transfer successors:                        34664 (count: 34664, min: 1, max: 1, avg: 1.00) [1 x 34664]

CPA algorithm statistics
------------------------
Number of iterations:            22145
Max size of waitlist:            21
Average size of waitlist:        8
Number of computed successors:   25158
Max successors for one state:    2
Number of times merged:          1561
Number of times stopped:         2515
Number of times breaked:         44

Total time for CPA algorithm:        21.430s (Max:     1.741s)
  Time for choose from waitlist:      0.069s
  Time for precision adjustment:     13.180s
  Time for transfer relation:         6.870s
  Time for merge operator:            0.394s
  Time for stop operator:             0.182s
  Time for adding to reached set:     0.175s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   44
Avg. length of target path (in blocks):                3700 (count: 44, min: 50, max: 144, avg: 84.09)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.595s
  Counterexample analysis:                             4.266s (Max:     0.194s, Calls: 44)
    Refinement sat check:                              2.947s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.048s
  Precision update:                                    0.061s
  ARG update:                                          0.122s

Length of refined path (in blocks):                    2317 (count: 44, min: 13, max: 143, avg: 52.66)
Number of affected states:                             1274 (count: 44, min: 1, max: 142, avg: 28.95)
Length (states) of path with itp 'true':                999 (count: 44, min: 0, max: 101, avg: 22.70)
Length (states) of path with itp non-trivial itp:      1274 (count: 44, min: 1, max: 142, avg: 28.95)
Length (states) of path with itp 'false':                44 (count: 44, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          38 (count: 44, min: 0, max: 8, avg: 0.86)
Equal non-trivial interpolants along paths:            1192 (count: 44, min: 0, max: 140, avg: 27.09)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                44
Number of successful refinements:     44
Number of failed refinements:         0
Max. size of reached set before ref.: 1272
Max. size of reached set after ref.:  1025
Avg. size of reached set before ref.: 721.14
Avg. size of reached set after ref.:  242.61

Total time for CEGAR algorithm:      26.222s
Time for refinements:                 4.773s
Average time for refinement:          0.108s
Max time for refinement:              0.210s

Code Coverage
-----------------------------
  Function coverage:      0.756
  Visited lines:          708
  Total lines:            826
  Line coverage:          0.857
  Visited conditions:     108
  Total conditions:       130
  Condition coverage:     0.831

CPAchecker general statistics
-----------------------------
Number of program locations:     1098
Number of CFA edges:             1168
Number of relevant variables:    149
Number of functions:             45
Number of loops:                 10
Size of reached set:             1364
  Number of reached locations:   362 (33%)
    Avg states per location:     3
    Max states per location:     14 (at node N474)
  Number of reached functions:   34 (76%)
  Number of partitions:          1335
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N562 (before line 2265), Function ibmpex_bmc_delete called from node N589, stack depth 3 [2c62f56f], stack [main, ibmpex_bmc_gone, ibmpex_bmc_delete]])
  Number of target states:       0
  Size of final wait list        14

Time for analysis setup:          4.046s
  Time for loading CPAs:          0.868s
  Time for loading parser:        0.732s
  Time for CFA construction:      2.282s
    Time for parsing file(s):     0.734s
    Time for AST to CFA:          0.696s
    Time for CFA sanity check:    0.159s
    Time for post-processing:     0.525s
      Time for var class.:        0.255s
Time for Analysis:               26.222s
CPU time for analysis:           26.220s
Total time for CPAchecker:       30.278s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.120s

Time for Garbage Collector:       0.305s (in 23 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     44MB (    42 MiB) avg;     71MB (    68 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8089MB (  7714 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
