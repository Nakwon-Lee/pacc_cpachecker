scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-hwmon-ibmpex-ko--130_7a--d631323.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_46aaa6xf/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_smi_watcher_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_free_recv_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_destroy_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_create_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_request_settime to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_smi_watcher_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            6619 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5049 (76%)
  Because of loop head:            1536 (23%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         34 (1%)
  Times precision was empty:       785 (12%)
  Times precision was {false}:     371 (6%)
  Times result was cached:         3837 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1626 (25%)
  Times result was 'false':        542 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         7388
  BDD entailment checks:           3478
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       20
Number of predicates discovered:          30
Number of abstraction locations:          76
Max number of predicates per location:    13
Avg number of predicates per location:    6
Total predicates per abstraction:         24131
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 12.08
Number of irrelevant predicates:          6278 (26%)
Number of preds handled by boolean abs:   6521 (27%)
  Total number of models for allsat:      3935
  Max number of models for allsat:        24
  Avg number of models for allsat:        2.42

Time for post operator:                  3.908s
  Time for path formula creation:        3.804s
Time for strengthen operator:            0.144s
Time for prec operator:                 13.832s
  Time for abstraction:                 13.488s (Max:     0.159s, Count: 6619)
    Boolean abstraction:                 6.022s
    Solving time:                        5.977s (Max:     0.098s)
    Model enumeration time:              0.888s
    Time for BDD construction:           0.335s (Max:     0.029s)
Time for merge operator:                 0.316s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     6.874s

Number of path formula cache hits:   30376 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.607s

Total number of created targets for pointer analysis: 10910
   Number of created targets for uf: *unsigned_short_int is 23
   Number of created targets for uf: *signed_int is 105
   Number of created targets for uf: *(char)* is 101
   Number of created targets for uf: *unsigned_char is 2677
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *signed_long_int is 23
   Number of created targets for uf: *(unsigned_char)* is 23
   Number of created targets for uf: *(struct_ibmpex_sensor_data)* is 24
   Number of created targets for uf: *(struct_device)* is 35
   Number of created targets for uf: *unsigned_long_int is 8


Number of BDD nodes:                               5750
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6302 (count: 17493, min: 0, max: 1054, avg: 0.36)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.375s
Automaton transfers with branching:                0
Automaton transfer successors:                        41721 (count: 41721, min: 1, max: 1, avg: 1.00) [1 x 41721]

CPA algorithm statistics
------------------------
Number of iterations:            26840
Max size of waitlist:            16
Average size of waitlist:        8
Number of computed successors:   30651
Max successors for one state:    2
Number of times merged:          1955
Number of times stopped:         3014
Number of times breaked:         34

Total time for CPA algorithm:        21.773s (Max:     2.705s)
  Time for choose from waitlist:      0.121s
  Time for precision adjustment:     14.414s
  Time for transfer relation:         5.757s
  Time for merge operator:            0.530s
  Time for stop operator:             0.209s
  Time for adding to reached set:     0.232s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   34
Avg. length of target path (in blocks):                2908 (count: 34, min: 50, max: 181, avg: 85.53)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.937s
  Counterexample analysis:                             3.571s (Max:     0.251s, Calls: 34)
    Refinement sat check:                              2.243s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.089s
  Precision update:                                    0.051s
  ARG update:                                          0.164s

Length of refined path (in blocks):                    2343 (count: 34, min: 10, max: 180, avg: 68.91)
Number of affected states:                             1931 (count: 34, min: 1, max: 179, avg: 56.79)
Length (states) of path with itp 'true':                378 (count: 34, min: 0, max: 62, avg: 11.12)
Length (states) of path with itp non-trivial itp:      1931 (count: 34, min: 1, max: 179, avg: 56.79)
Length (states) of path with itp 'false':                34 (count: 34, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          74 (count: 34, min: 0, max: 7, avg: 2.18)
Equal non-trivial interpolants along paths:            1823 (count: 34, min: 0, max: 176, avg: 53.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                34
Number of successful refinements:     34
Number of failed refinements:         0
Max. size of reached set before ref.: 2391
Max. size of reached set after ref.:  756
Avg. size of reached set before ref.: 885.53
Avg. size of reached set after ref.:  100.74

Total time for CEGAR algorithm:      25.835s
Time for refinements:                 4.049s
Average time for refinement:          0.119s
Max time for refinement:              0.265s

Code Coverage
-----------------------------
  Function coverage:      0.711
  Visited lines:          645
  Total lines:            826
  Line coverage:          0.781
  Visited conditions:     90
  Total conditions:       130
  Condition coverage:     0.692

CPAchecker general statistics
-----------------------------
Number of program locations:     1098
Number of CFA edges:             1168
Number of relevant variables:    149
Number of functions:             45
Number of loops:                 10
Size of reached set:             412
  Number of reached locations:   320 (29%)
    Avg states per location:     1
    Max states per location:     4 (at node N46)
  Number of reached functions:   32 (71%)
  Number of partitions:          408
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N507 (before line 2207), Function ibmpex_register_bmc called from node N687, stack depth 2 [7c3e94b2], stack [main, ibmpex_register_bmc]])
  Number of target states:       0
  Size of final wait list        9

Time for analysis setup:          3.918s
  Time for loading CPAs:          0.860s
  Time for loading parser:        0.742s
  Time for CFA construction:      2.216s
    Time for parsing file(s):     0.756s
    Time for AST to CFA:          0.668s
    Time for CFA sanity check:    0.147s
    Time for post-processing:     0.470s
      Time for var class.:        0.210s
Time for Analysis:               25.836s
CPU time for analysis:           25.840s
Total time for CPAchecker:       29.757s
Total CPU time for CPAchecker:   29.750s
Time for statistics:              0.105s

Time for Garbage Collector:       0.324s (in 28 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     44MB (    42 MiB) avg;     70MB (    67 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
