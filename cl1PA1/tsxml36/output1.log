scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-hwmon-ibmpex-ko--130_7a--d631323.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_x3g6cu4_/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_smi_watcher_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_free_recv_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_destroy_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_create_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_request_settime to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_smi_watcher_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8130 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6188 (76%)
  Because of loop head:            1909 (23%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         33 (0%)
  Times precision was empty:       927 (11%)
  Times precision was {false}:     396 (5%)
  Times result was cached:         5438 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1369 (17%)
  Times result was 'false':        744 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         8999
  BDD entailment checks:           4035
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       20
Number of predicates discovered:          21
Number of abstraction locations:          78
Max number of predicates per location:    11
Avg number of predicates per location:    4
Total predicates per abstraction:         29526
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 16.73
Number of irrelevant predicates:          8039 (27%)
Number of preds handled by boolean abs:   5345 (18%)
  Total number of models for allsat:      3618
  Max number of models for allsat:        30
  Avg number of models for allsat:        2.64

Time for post operator:                  4.201s
  Time for path formula creation:        4.116s
Time for strengthen operator:            0.134s
Time for prec operator:                 13.110s
  Time for abstraction:                 12.753s (Max:     0.101s, Count: 8130)
    Boolean abstraction:                 4.362s
    Solving time:                        5.342s (Max:     0.097s)
    Model enumeration time:              0.534s
    Time for BDD construction:           0.194s (Max:     0.012s)
Time for merge operator:                 0.221s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     5.876s

Number of path formula cache hits:   45597 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.828s

Total number of created targets for pointer analysis: 11289
   Number of created targets for uf: *unsigned_short_int is 61
   Number of created targets for uf: *signed_int is 43
   Number of created targets for uf: *(char)* is 49
   Number of created targets for uf: *unsigned_char is 2932
   Number of created targets for uf: *signed_long_int is 106
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *(unsigned_char)* is 23
   Number of created targets for uf: *(struct_ibmpex_sensor_data)* is 24
   Number of created targets for uf: *(struct_device)* is 89
   Number of created targets for uf: *unsigned_long_int is 8


Number of BDD nodes:                               4540
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5073 (count: 16237, min: 0, max: 934, avg: 0.31)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.422s
Automaton transfers with branching:                0
Automaton transfer successors:                        51712 (count: 51712, min: 1, max: 1, avg: 1.00) [1 x 51712]

CPA algorithm statistics
------------------------
Number of iterations:            33284
Max size of waitlist:            17
Average size of waitlist:        8
Number of computed successors:   38025
Max successors for one state:    2
Number of times merged:          2482
Number of times stopped:         3800
Number of times breaked:         33

Total time for CPA algorithm:        21.509s (Max:     2.586s)
  Time for choose from waitlist:      0.102s
  Time for precision adjustment:     13.780s
  Time for transfer relation:         6.162s
  Time for merge operator:            0.454s
  Time for stop operator:             0.236s
  Time for adding to reached set:     0.219s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   33
Avg. length of target path (in blocks):                2661 (count: 33, min: 36, max: 181, avg: 80.64)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.890s
  Counterexample analysis:                             3.457s (Max:     0.270s, Calls: 33)
    Refinement sat check:                              2.264s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.056s
  Precision update:                                    0.113s
  ARG update:                                          0.193s

Length of refined path (in blocks):                    2311 (count: 33, min: 13, max: 180, avg: 70.03)
Number of affected states:                             1541 (count: 33, min: 1, max: 179, avg: 46.70)
Length (states) of path with itp 'true':                737 (count: 33, min: 0, max: 129, avg: 22.33)
Length (states) of path with itp non-trivial itp:      1541 (count: 33, min: 1, max: 179, avg: 46.70)
Length (states) of path with itp 'false':                33 (count: 33, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          52 (count: 33, min: 0, max: 7, avg: 1.58)
Equal non-trivial interpolants along paths:            1456 (count: 33, min: 0, max: 176, avg: 44.12)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                33
Number of successful refinements:     33
Number of failed refinements:         0
Max. size of reached set before ref.: 3153
Max. size of reached set after ref.:  2702
Avg. size of reached set before ref.: 1428.45
Avg. size of reached set after ref.:  457.88

Total time for CEGAR algorithm:      25.599s
Time for refinements:                 4.074s
Average time for refinement:          0.123s
Max time for refinement:              0.305s

Code Coverage
-----------------------------
  Function coverage:      0.756
  Visited lines:          740
  Total lines:            826
  Line coverage:          0.896
  Visited conditions:     112
  Total conditions:       130
  Condition coverage:     0.862

CPAchecker general statistics
-----------------------------
Number of program locations:     1098
Number of CFA edges:             1168
Number of relevant variables:    149
Number of functions:             45
Number of loops:                 10
Size of reached set:             1453
  Number of reached locations:   391 (36%)
    Avg states per location:     3
    Max states per location:     12 (at node N420)
  Number of reached functions:   34 (76%)
  Number of partitions:          1417
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N704 (before line 2424), Function main called from node N660, stack depth 1 [3bcbb589], stack [main]])
  Number of target states:       0
  Size of final wait list        11

Time for analysis setup:          4.173s
  Time for loading CPAs:          0.854s
  Time for loading parser:        0.747s
  Time for CFA construction:      2.448s
    Time for parsing file(s):     0.815s
    Time for AST to CFA:          0.763s
    Time for CFA sanity check:    0.174s
    Time for post-processing:     0.539s
      Time for var class.:        0.264s
Time for Analysis:               25.599s
CPU time for analysis:           25.600s
Total time for CPAchecker:       29.777s
Total CPU time for CPAchecker:   29.780s
Time for statistics:              0.098s

Time for Garbage Collector:       0.339s (in 32 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     45MB (    43 MiB) avg;     70MB (    66 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
