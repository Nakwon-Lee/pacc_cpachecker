scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-hwmon-ibmpex-ko--130_7a--d631323.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5p9y515i/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_smi_watcher_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_free_recv_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_destroy_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_create_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_request_settime to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_smi_watcher_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            43614 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  33092 (76%)
  Because of loop head:            10431 (24%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         91 (0%)
  Times precision was empty:       1370 (3%)
  Times precision was {false}:     957 (2%)
  Times result was cached:         27764 (64%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      13523 (31%)
  Times result was 'false':        5509 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         51414
  BDD entailment checks:           24588
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       20
Number of predicates discovered:          56
Number of abstraction locations:          79
Max number of predicates per location:    18
Avg number of predicates per location:    8
Total predicates per abstraction:         385617
Max number of predicates per abstraction: 20
Avg number of predicates per abstraction: 26.63
Number of irrelevant predicates:          93370 (24%)
Number of preds handled by boolean abs:   111515 (29%)
  Total number of models for allsat:      476206
  Max number of models for allsat:        660
  Avg number of models for allsat:        35.21

Time for post operator:                 12.420s
  Time for path formula creation:       12.190s
Time for strengthen operator:            0.284s
Time for prec operator:                565.014s
  Time for abstraction:                564.067s (Max:    25.117s, Count: 43614)
    Boolean abstraction:               523.648s
    Solving time:                       53.243s (Max:     0.168s)
    Model enumeration time:            456.972s
    Time for BDD construction:          12.151s (Max:     0.037s)
Time for merge operator:                 0.805s
Time for coverage check:                 0.077s
  Time for BDD entailment checks:        0.063s
Total time for SMT solver (w/o itp):   510.215s

Number of path formula cache hits:   184286 (61%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.150s

Total number of created targets for pointer analysis: 148386
   Number of created targets for uf: *unsigned_short_int is 284
   Number of created targets for uf: *signed_int is 1445
   Number of created targets for uf: *(char)* is 799
   Number of created targets for uf: *unsigned_char is 33368
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *signed_long_int is 284
   Number of created targets for uf: *(unsigned_char)* is 284
   Number of created targets for uf: *(struct_ibmpex_sensor_data)* is 285
   Number of created targets for uf: *(struct_device)* is 556
   Number of created targets for uf: *unsigned_long_int is 225


Number of BDD nodes:                               84285
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       80863 (count: 134808, min: 0, max: 1728, avg: 0.60)
Time for BDD node cleanup:                             0.059s
Time for BDD garbage collection:                       0.056s (in 4 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.606s
  Time for transition matches:                         0.357s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       273184 (count: 273184, min: 1, max: 1, avg: 1.00) [1 x 273184]

CPA algorithm statistics
------------------------
Number of iterations:            179598
Max size of waitlist:            33
Average size of waitlist:        14
Number of computed successors:   205480
Max successors for one state:    2
Number of times merged:          13413
Number of times stopped:         19470
Number of times breaked:         91

Total time for CPA algorithm:       586.665s (Max:    62.368s)
  Time for choose from waitlist:      0.212s
  Time for precision adjustment:    566.753s
  Time for transfer relation:        16.408s
  Time for merge operator:            1.249s
  Time for stop operator:             0.460s
  Time for adding to reached set:     0.484s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   91
Avg. length of target path (in blocks):               16234 (count: 91, min: 50, max: 391, avg: 178.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  25.026s
  Counterexample analysis:                            24.223s (Max:     0.971s, Calls: 91)
    Refinement sat check:                             14.137s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.092s
  Precision update:                                    0.107s
  ARG update:                                          0.435s

Length of refined path (in blocks):                   11862 (count: 91, min: 10, max: 329, avg: 130.35)
Number of affected states:                             5501 (count: 91, min: 1, max: 219, avg: 60.45)
Length (states) of path with itp 'true':               6270 (count: 91, min: 0, max: 323, avg: 68.90)
Length (states) of path with itp non-trivial itp:      5501 (count: 91, min: 1, max: 219, avg: 60.45)
Length (states) of path with itp 'false':                91 (count: 91, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         264 (count: 91, min: 0, max: 8, avg: 2.90)
Equal non-trivial interpolants along paths:            5146 (count: 91, min: 0, max: 216, avg: 56.55)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                91
Number of successful refinements:     91
Number of failed refinements:         0
Max. size of reached set before ref.: 8268
Max. size of reached set after ref.:  3646
Avg. size of reached set before ref.: 2581.90
Avg. size of reached set after ref.:  702.55

Total time for CEGAR algorithm:     612.399s
Time for refinements:                25.670s
Average time for refinement:          0.282s
Max time for refinement:              1.005s

Code Coverage
-----------------------------
  Function coverage:      0.756
  Visited lines:          742
  Total lines:            826
  Line coverage:          0.898
  Visited conditions:     112
  Total conditions:       130
  Condition coverage:     0.862

CPAchecker general statistics
-----------------------------
Number of program locations:     1098
Number of CFA edges:             1168
Number of relevant variables:    149
Number of functions:             45
Number of loops:                 10
Size of reached set:             9481
  Number of reached locations:   391 (36%)
    Avg states per location:     24
    Max states per location:     140 (at node N312)
  Number of reached functions:   34 (76%)
  Number of partitions:          9198
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N415 (before line 2107), Function ibmpex_find_sensors called from node N522, stack depth 3 [23bc5f77], stack [main, ibmpex_register_bmc, ibmpex_find_sensors]])
  Number of target states:       0

Time for analysis setup:          3.899s
  Time for loading CPAs:          0.890s
  Time for loading parser:        0.682s
  Time for CFA construction:      2.223s
    Time for parsing file(s):     0.707s
    Time for AST to CFA:          0.723s
    Time for CFA sanity check:    0.163s
    Time for post-processing:     0.475s
      Time for var class.:        0.225s
Time for Analysis:              612.399s
CPU time for analysis:          612.270s
Time for analyzing result:        0.008s
Total time for CPAchecker:      616.305s
Total CPU time for CPAchecker:  616.170s
Time for statistics:              0.226s

Time for Garbage Collector:       3.184s (in 326 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                123MB (   117 MiB) max;     83MB (    80 MiB) avg;    135MB (   128 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           152MB (   145 MiB) max;    128MB (   122 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8837MB (  8427 MiB) max;   8427MB (  8036 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
