scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-usb-gadget-g_printer-ko--106_1a--2b9ec6c.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_incfk72n/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 2790: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2793: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2796: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_1962;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1962;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1962;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1962;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3225: Dead code detected: [size > 8192UL] (CFACreationUtils.addEdgeToCFA, INFO)

line 3225: Dead code detected: [!(size > 8192UL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3226: Dead code detected: tmp = kmalloc_large(size, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 3231: Dead code detected: [(flags & 1U) == 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 3231: Dead code detected: [!((flags & 1U) == 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3232: Dead code detected: tmp___0 = kmalloc_slab(size); (CFACreationUtils.addEdgeToCFA, INFO)

line 3234: Dead code detected: [!(((unsigned long)s) == ((unsigned long)((struct kmem_cache *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 3235: Dead code detected: return (16); (CFACreationUtils.addEdgeToCFA, INFO)

line 3239: Dead code detected: ret = kmem_cache_alloc_notrace(s, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 5820: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5844: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3333: Function pointer *(p->qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 3035-3037: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3376: Function pointer *(ep->ops->alloc_request) with type struct usb_request *(*)(struct usb_ep *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3367: Function pointer *(ep->ops->disable) with type int (*)(struct usb_ep *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3358: Function pointer *(ep->ops->enable) with type int (*)(struct usb_ep *, const struct usb_endpoint_descriptor *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3394: Function pointer *(ep->ops->queue) with type int (*)(struct usb_ep *, struct usb_request *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3427: Function pointer *(gadget->ops->set_selfpowered) with type int (*)(struct usb_gadget *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3442: Function pointer *(gadget->ops->vbus_draw) with type int (*)(struct usb_gadget *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_undef_ptr to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_gadget_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdev_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3394: Ignoring function call through function pointer *(ep->ops->queue): tmp = (*(ep->ops->queue))(ep, req, gfp_flags); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3367: Ignoring function call through function pointer *(ep->ops->disable): tmp = (*(ep->ops->disable))(ep); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3358: Ignoring function call through function pointer *(ep->ops->enable): tmp = (*(ep->ops->enable))(ep, desc); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3333: Ignoring function call through function pointer *(p->qproc): (*(p->qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3385: Ignoring function call through function pointer *(ep->ops->free_request): (*(ep->ops->free_request))(ep, req); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3265: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_chrdev_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdev_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdev_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3953: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)(ep->ep_list.next)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3928: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)(ep->ep_list.next)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3376: Ignoring function call through function pointer *(ep->ops->alloc_request): tmp = (*(ep->ops->alloc_request))(ep, gfp_flags); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1239091 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1169775 (94%)
  Because of loop head:            68403 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         913 (0%)
  Times precision was empty:       44043 (4%)
  Times precision was {false}:     3483 (0%)
  Times result was cached:         1148985 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      42580 (3%)
  Times result was 'false':        41233 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1119658
  BDD entailment checks:           498282
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       62
Number of predicates discovered:          68
Number of abstraction locations:          329
Max number of predicates per location:    18
Avg number of predicates per location:    5
Total predicates per abstraction:         7101865
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 154.18
Number of irrelevant predicates:          4342456 (61%)
Number of preds handled by boolean abs:   140264 (2%)
  Total number of models for allsat:      55699
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.31

Time for post operator:                160.938s
  Time for path formula creation:      157.970s
Time for strengthen operator:            5.850s
Time for prec operator:                478.491s
  Time for abstraction:                459.792s (Max:     3.581s, Count: 1239091)
    Boolean abstraction:               116.730s
    Solving time:                      109.603s (Max:     0.196s)
    Model enumeration time:             18.206s
    Time for BDD construction:           1.092s (Max:     0.012s)
Time for merge operator:                15.206s
Time for coverage check:                 0.626s
  Time for BDD entailment checks:        0.470s
Total time for SMT solver (w/o itp):   127.809s

Number of path formula cache hits:   5998675 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   124.420s

Total number of created targets for pointer analysis: 1003036
   Number of created targets for uf: *unsigned_short_int is 3281
   Number of created targets for uf: *signed_char is 36
   Number of created targets for uf: *unsigned_char is 27997
   Number of created targets for uf: *(struct_list_head)* is 295
   Number of created targets for uf: *(struct_usb_gadget)* is 40
   Number of created targets for uf: *(unsigned_char)* is 482
   Number of created targets for uf: *(struct_usb_ep)* is 71
   Number of created targets for uf: *(struct_usb_request)* is 71
   Number of created targets for uf: *(struct_usb_endpoint_descriptor)* is 1771
   Number of created targets for uf: *(struct_device)* is 778
   Number of created targets for uf: *char is 3775
   Number of created targets for uf: *unsigned_long_int is 36


Number of BDD nodes:                               16073
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       94420 (count: 824450, min: 0, max: 2025, avg: 0.11)
Time for BDD node cleanup:                             0.187s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.640s
  Time for transition matches:                         5.549s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      6891762 (count: 6891762, min: 1, max: 1, avg: 1.00) [1 x 6891762]

CPA algorithm statistics
------------------------
Number of iterations:            4532333
Max size of waitlist:            968
Average size of waitlist:        230
Number of computed successors:   5116830
Max successors for one state:    2
Number of times merged:          310688
Number of times stopped:         481452
Number of times breaked:         913

Total time for CPA algorithm:       786.639s (Max:    17.089s)
  Time for choose from waitlist:      2.380s
  Time for precision adjustment:    510.839s
  Time for transfer relation:       226.053s
  Time for merge operator:           19.948s
  Time for stop operator:             6.091s
  Time for adding to reached set:     8.883s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   913
Avg. length of target path (in blocks):               87123 (count: 913, min: 4, max: 212, avg: 95.42)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  89.989s
  Counterexample analysis:                            80.130s (Max:     0.327s, Calls: 913)
    Refinement sat check:                             57.114s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.055s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.317s
  Precision update:                                    0.877s
  ARG update:                                          7.972s

Length of refined path (in blocks):                   73718 (count: 913, min: 3, max: 195, avg: 80.74)
Number of affected states:                            34742 (count: 913, min: 0, max: 183, avg: 38.05)
Length (states) of path with itp 'true':              38063 (count: 913, min: 0, max: 147, avg: 41.69)
Length (states) of path with itp non-trivial itp:     34742 (count: 913, min: 0, max: 183, avg: 38.05)
Length (states) of path with itp 'false':               913 (count: 913, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         758 (count: 913, min: 0, max: 8, avg: 0.83)
Equal non-trivial interpolants along paths:           33076 (count: 913, min: 0, max: 180, avg: 36.23)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                913
Number of successful refinements:     913
Number of failed refinements:         0
Max. size of reached set before ref.: 72458
Max. size of reached set after ref.:  65232
Avg. size of reached set before ref.: 14749.57
Avg. size of reached set after ref.:  9756.42

Total time for CEGAR algorithm:     894.635s
Time for refinements:               101.372s
Average time for refinement:          0.111s
Max time for refinement:              0.383s

Code Coverage
-----------------------------
  Function coverage:      0.700
  Visited lines:          1717
  Total lines:            2347
  Line coverage:          0.732
  Visited conditions:     374
  Total conditions:       614
  Condition coverage:     0.609

CPAchecker general statistics
-----------------------------
Number of program locations:     3194
Number of CFA edges:             3667
Number of relevant variables:    520
Number of functions:             100
Number of loops:                 28
Size of reached set:             35396
  Number of reached locations:   1081 (34%)
    Avg states per location:     32
    Max states per location:     385 (at node N2729)
  Number of reached functions:   70 (70%)
  Number of partitions:          34955
    Avg size of partitions:      1
    Max size of partitions:      18 (with key [N2619 (before line 5775), Function main called from node N2484, stack depth 1 [213860b8], stack [main]])
  Number of target states:       0
  Size of final wait list        471

Time for analysis setup:          5.635s
  Time for loading CPAs:          0.861s
  Time for loading parser:        0.659s
  Time for CFA construction:      3.975s
    Time for parsing file(s):     1.012s
    Time for AST to CFA:          1.548s
    Time for CFA sanity check:    0.229s
    Time for post-processing:     1.012s
      Time for var class.:        0.499s
Time for Analysis:              894.635s
CPU time for analysis:          894.570s
Total time for CPAchecker:      900.274s
Total CPU time for CPAchecker:  900.200s
Time for statistics:              0.672s

Time for Garbage Collector:      50.977s (in 876 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1524MB (  1453 MiB) max;    605MB (   577 MiB) avg;   1546MB (  1475 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1711MB (  1632 MiB) max;    902MB (   860 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   9572MB (  9128 MiB) max;   8621MB (  8222 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
