scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-usb-gadget-g_printer-ko--106_1a--2b9ec6c.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_23i8wn0n/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 2790: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2793: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2796: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_1962;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1962;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1962;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1962;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3225: Dead code detected: [size > 8192UL] (CFACreationUtils.addEdgeToCFA, INFO)

line 3225: Dead code detected: [!(size > 8192UL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3226: Dead code detected: tmp = kmalloc_large(size, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 3231: Dead code detected: [(flags & 1U) == 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 3231: Dead code detected: [!((flags & 1U) == 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3232: Dead code detected: tmp___0 = kmalloc_slab(size); (CFACreationUtils.addEdgeToCFA, INFO)

line 3234: Dead code detected: [!(((unsigned long)s) == ((unsigned long)((struct kmem_cache *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 3235: Dead code detected: return (16); (CFACreationUtils.addEdgeToCFA, INFO)

line 3239: Dead code detected: ret = kmem_cache_alloc_notrace(s, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 5820: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5844: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3333: Function pointer *(p->qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 3035-3037: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3376: Function pointer *(ep->ops->alloc_request) with type struct usb_request *(*)(struct usb_ep *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3367: Function pointer *(ep->ops->disable) with type int (*)(struct usb_ep *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3358: Function pointer *(ep->ops->enable) with type int (*)(struct usb_ep *, const struct usb_endpoint_descriptor *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3394: Function pointer *(ep->ops->queue) with type int (*)(struct usb_ep *, struct usb_request *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3427: Function pointer *(gadget->ops->set_selfpowered) with type int (*)(struct usb_gadget *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3442: Function pointer *(gadget->ops->vbus_draw) with type int (*)(struct usb_gadget *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_undef_ptr to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_chrdev_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_gadget_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3367: Ignoring function call through function pointer *(ep->ops->disable): tmp = (*(ep->ops->disable))(ep); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3358: Ignoring function call through function pointer *(ep->ops->enable): tmp = (*(ep->ops->enable))(ep, desc); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3394: Ignoring function call through function pointer *(ep->ops->queue): tmp = (*(ep->ops->queue))(ep, req, gfp_flags); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdev_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdev_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdev_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3385: Ignoring function call through function pointer *(ep->ops->free_request): (*(ep->ops->free_request))(ep, req); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3333: Ignoring function call through function pointer *(p->qproc): (*(p->qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3953: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)(ep->ep_list.next)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_prefetch, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3928: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)(ep->ep_list.next)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3265: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3376: Ignoring function call through function pointer *(ep->ops->alloc_request): tmp = (*(ep->ops->alloc_request))(ep, gfp_flags); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2389429 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2302980 (96%)
  Because of loop head:            84594 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1855 (0%)
  Times precision was empty:       255624 (11%)
  Times precision was {false}:     1785 (0%)
  Times result was cached:         2115159 (89%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      16861 (1%)
  Times result was 'false':        41718 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1148585
  BDD entailment checks:           454855
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       62
Number of predicates discovered:          65
Number of abstraction locations:          283
Max number of predicates per location:    17
Avg number of predicates per location:    5
Total predicates per abstraction:         8454024
Max number of predicates per abstraction: 17
Avg number of predicates per abstraction: 453.40
Number of irrelevant predicates:          2715242 (32%)
Number of preds handled by boolean abs:   73384 (1%)
  Total number of models for allsat:      37051
  Max number of models for allsat:        96
  Avg number of models for allsat:        2.20

Time for post operator:                136.846s
  Time for path formula creation:      131.925s
Time for strengthen operator:            8.513s
Time for prec operator:                431.925s
  Time for abstraction:                399.698s (Max:     1.639s, Count: 2389429)
    Boolean abstraction:                39.214s
    Solving time:                       33.302s (Max:     0.129s)
    Model enumeration time:              5.113s
    Time for BDD construction:           0.865s (Max:     0.066s)
Time for merge operator:                 7.839s
Time for coverage check:                 0.589s
  Time for BDD entailment checks:        0.396s
Total time for SMT solver (w/o itp):    38.415s

Number of path formula cache hits:   11681768 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    79.979s

Total number of created targets for pointer analysis: 625486
   Number of created targets for uf: *unsigned_short_int is 903
   Number of created targets for uf: *signed_char is 1343
   Number of created targets for uf: *unsigned_char is 5378
   Number of created targets for uf: *(struct_list_head)* is 1569
   Number of created targets for uf: *(struct_usb_gadget)* is 140
   Number of created targets for uf: *(unsigned_char)* is 113
   Number of created targets for uf: *(struct_usb_ep)* is 225
   Number of created targets for uf: *(struct_usb_request)* is 225
   Number of created targets for uf: *(struct_usb_endpoint_descriptor)* is 577
   Number of created targets for uf: *(struct_device)* is 160
   Number of created targets for uf: *char is 10813
   Number of created targets for uf: *unsigned_long_int is 140


Number of BDD nodes:                               34630
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       53309 (count: 832325, min: 0, max: 1752, avg: 0.06)
Time for BDD node cleanup:                             0.155s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 14.344s
  Time for transition matches:                         8.339s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.020s
Automaton transfers with branching:                0
Automaton transfer successors:                     10448445 (count: 10448445, min: 1, max: 1, avg: 1.00) [1 x 10448445]

CPA algorithm statistics
------------------------
Number of iterations:            7434354
Max size of waitlist:            52
Average size of waitlist:        21
Number of computed successors:   8180368
Max successors for one state:    2
Number of times merged:          346865
Number of times stopped:         695758
Number of times breaked:         1855

Total time for CPA algorithm:       776.668s (Max:     2.975s)
  Time for choose from waitlist:      2.665s
  Time for precision adjustment:    487.169s
  Time for transfer relation:       234.844s
  Time for merge operator:           12.714s
  Time for stop operator:             8.734s
  Time for adding to reached set:    10.968s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1855
Avg. length of target path (in blocks):               94430 (count: 1855, min: 4, max: 264, avg: 50.91)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  80.840s
  Counterexample analysis:                            66.562s (Max:     0.279s, Calls: 1855)
    Refinement sat check:                             49.767s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.049s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.276s
  Precision update:                                    1.612s
  ARG update:                                         11.689s

Length of refined path (in blocks):                   80639 (count: 1855, min: 3, max: 263, avg: 43.47)
Number of affected states:                            27326 (count: 1855, min: 0, max: 260, avg: 14.73)
Length (states) of path with itp 'true':              51458 (count: 1855, min: 0, max: 70, avg: 27.74)
Length (states) of path with itp non-trivial itp:     27326 (count: 1855, min: 0, max: 260, avg: 14.73)
Length (states) of path with itp 'false':              1855 (count: 1855, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1283 (count: 1855, min: 0, max: 10, avg: 0.69)
Equal non-trivial interpolants along paths:           24189 (count: 1855, min: 0, max: 254, avg: 13.04)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1855
Number of successful refinements:     1855
Number of failed refinements:         0
Max. size of reached set before ref.: 35976
Max. size of reached set after ref.:  33802
Avg. size of reached set before ref.: 15536.14
Avg. size of reached set after ref.:  11529.80

Total time for CEGAR algorithm:     894.715s
Time for refinements:               103.601s
Average time for refinement:          0.055s
Max time for refinement:              0.338s

Code Coverage
-----------------------------
  Function coverage:      0.810
  Visited lines:          1857
  Total lines:            2347
  Line coverage:          0.791
  Visited conditions:     456
  Total conditions:       614
  Condition coverage:     0.743

CPAchecker general statistics
-----------------------------
Number of program locations:     3194
Number of CFA edges:             3667
Number of relevant variables:    520
Number of functions:             100
Number of loops:                 28
Size of reached set:             11132
  Number of reached locations:   1318 (41%)
    Avg states per location:     8
    Max states per location:     215 (at node N53)
  Number of reached functions:   81 (81%)
  Number of partitions:          11027
    Avg size of partitions:      1
    Max size of partitions:      20 (with key [N2372 (before line 5502), Function printer_bind called from node N2602, stack depth 2 [27f7a60a], stack [main, printer_bind]])
  Number of target states:       0
  Size of final wait list        16

Time for analysis setup:          5.564s
  Time for loading CPAs:          1.036s
  Time for loading parser:        0.638s
  Time for CFA construction:      3.770s
    Time for parsing file(s):     1.001s
    Time for AST to CFA:          1.370s
    Time for CFA sanity check:    0.249s
    Time for post-processing:     0.971s
      Time for var class.:        0.513s
Time for Analysis:              894.715s
CPU time for analysis:          894.640s
Total time for CPAchecker:      900.283s
Total CPU time for CPAchecker:  900.180s
Time for statistics:              0.266s

Time for Garbage Collector:      67.357s (in 1537 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                828MB (   790 MiB) max;    377MB (   360 MiB) avg;    889MB (   848 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1015MB (   968 MiB) max;    565MB (   539 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8493MB (  8100 MiB) max;   8198MB (  7818 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
