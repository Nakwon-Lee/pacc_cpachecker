scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-usb-gadget-g_printer-ko--106_1a--2b9ec6c.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_p3iuu4vo/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 2790: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2793: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2796: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_1962;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1962;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1962;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1962;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3225: Dead code detected: [size > 8192UL] (CFACreationUtils.addEdgeToCFA, INFO)

line 3225: Dead code detected: [!(size > 8192UL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3226: Dead code detected: tmp = kmalloc_large(size, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 3231: Dead code detected: [(flags & 1U) == 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 3231: Dead code detected: [!((flags & 1U) == 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3232: Dead code detected: tmp___0 = kmalloc_slab(size); (CFACreationUtils.addEdgeToCFA, INFO)

line 3234: Dead code detected: [!(((unsigned long)s) == ((unsigned long)((struct kmem_cache *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 3235: Dead code detected: return (16); (CFACreationUtils.addEdgeToCFA, INFO)

line 3239: Dead code detected: ret = kmem_cache_alloc_notrace(s, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 5820: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5844: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3333: Function pointer *(p->qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 3035-3037: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3376: Function pointer *(ep->ops->alloc_request) with type struct usb_request *(*)(struct usb_ep *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3367: Function pointer *(ep->ops->disable) with type int (*)(struct usb_ep *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3358: Function pointer *(ep->ops->enable) with type int (*)(struct usb_ep *, const struct usb_endpoint_descriptor *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3394: Function pointer *(ep->ops->queue) with type int (*)(struct usb_ep *, struct usb_request *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3427: Function pointer *(gadget->ops->set_selfpowered) with type int (*)(struct usb_gadget *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3442: Function pointer *(gadget->ops->vbus_draw) with type int (*)(struct usb_gadget *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_undef_ptr to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_chrdev_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3367: Ignoring function call through function pointer *(ep->ops->disable): tmp = (*(ep->ops->disable))(ep); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_gadget_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3394: Ignoring function call through function pointer *(ep->ops->queue): tmp = (*(ep->ops->queue))(ep, req, gfp_flags); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3333: Ignoring function call through function pointer *(p->qproc): (*(p->qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdev_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3385: Ignoring function call through function pointer *(ep->ops->free_request): (*(ep->ops->free_request))(ep, req); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            21270 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20272 (95%)
  Because of loop head:            839 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         159 (1%)
  Times precision was empty:       12293 (58%)
  Times precision was {false}:     250 (1%)
  Times result was cached:         8051 (38%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      676 (3%)
  Times result was 'false':        1091 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         6865
  BDD entailment checks:           3159
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       62
Number of predicates discovered:          32
Number of abstraction locations:          90
Max number of predicates per location:    9
Avg number of predicates per location:    3
Total predicates per abstraction:         29713
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 32.09
Number of irrelevant predicates:          19333 (65%)
Number of preds handled by boolean abs:   1691 (6%)
  Total number of models for allsat:      727
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.08

Time for post operator:                  3.347s
  Time for path formula creation:        3.206s
Time for strengthen operator:            0.208s
Time for prec operator:                  7.372s
  Time for abstraction:                  6.667s (Max:     0.210s, Count: 21270)
    Boolean abstraction:                 1.857s
    Solving time:                        1.582s (Max:     0.177s)
    Model enumeration time:              0.118s
    Time for BDD construction:           0.133s (Max:     0.016s)
Time for merge operator:                 0.160s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):     1.700s

Number of path formula cache hits:   97394 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.418s

Total number of created targets for pointer analysis: 2651
   Number of created targets for uf: *signed_char is 16
   Number of created targets for uf: *unsigned_char is 73
   Number of created targets for uf: *(struct_list_head)* is 421
   Number of created targets for uf: *(unsigned_char)* is 4
   Number of created targets for uf: *(struct_usb_request)* is 7
   Number of created targets for uf: *unsigned_long_int is 14


Number of BDD nodes:                               1006
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3023 (count: 21577, min: 0, max: 776, avg: 0.14)
Time for BDD node cleanup:                             0.036s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.471s
Automaton transfers with branching:                0
Automaton transfer successors:                        84432 (count: 84432, min: 1, max: 1, avg: 1.00) [1 x 84432]

CPA algorithm statistics
------------------------
Number of iterations:            61313
Max size of waitlist:            22
Average size of waitlist:        11
Number of computed successors:   67360
Max successors for one state:    2
Number of times merged:          1853
Number of times stopped:         4345
Number of times breaked:         159

Total time for CPA algorithm:        16.169s (Max:     1.058s)
  Time for choose from waitlist:      0.126s
  Time for precision adjustment:      8.364s
  Time for transfer relation:         6.097s
  Time for merge operator:            0.310s
  Time for stop operator:             0.248s
  Time for adding to reached set:     0.302s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   159
Avg. length of target path (in blocks):                6637 (count: 159, min: 4, max: 90, avg: 41.74)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.456s
  Counterexample analysis:                             6.662s (Max:     0.114s, Calls: 159)
    Refinement sat check:                              5.079s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.024s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.087s
  Precision update:                                    0.121s
  ARG update:                                          0.370s

Length of refined path (in blocks):                    6214 (count: 159, min: 3, max: 89, avg: 39.08)
Number of affected states:                             2058 (count: 159, min: 1, max: 77, avg: 12.94)
Length (states) of path with itp 'true':               3997 (count: 159, min: 0, max: 47, avg: 25.14)
Length (states) of path with itp non-trivial itp:      2058 (count: 159, min: 1, max: 77, avg: 12.94)
Length (states) of path with itp 'false':               159 (count: 159, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          98 (count: 159, min: 0, max: 8, avg: 0.62)
Equal non-trivial interpolants along paths:            1801 (count: 159, min: 0, max: 74, avg: 11.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                159
Number of successful refinements:     159
Number of failed refinements:         0
Max. size of reached set before ref.: 3232
Max. size of reached set after ref.:  3008
Avg. size of reached set before ref.: 1242.21
Avg. size of reached set after ref.:  859.96

Total time for CEGAR algorithm:      24.239s
Time for refinements:                 7.919s
Average time for refinement:          0.049s
Max time for refinement:              0.133s

Code Coverage
-----------------------------
  Function coverage:      0.600
  Visited lines:          1106
  Total lines:            2347
  Line coverage:          0.471
  Visited conditions:     158
  Total conditions:       614
  Condition coverage:     0.257

CPAchecker general statistics
-----------------------------
Number of program locations:     3194
Number of CFA edges:             3667
Number of relevant variables:    520
Number of functions:             100
Number of loops:                 28
Size of reached set:             1146
  Number of reached locations:   590 (18%)
    Avg states per location:     1
    Max states per location:     17 (at node N100)
  Number of reached functions:   60 (60%)
  Number of partitions:          1142
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2513 (before line 5672), Function main called from node N2484, stack depth 1 [51b1a8f6], stack [main]])
  Number of target states:       0
  Size of final wait list        15

Time for analysis setup:          6.006s
  Time for loading CPAs:          1.234s
  Time for loading parser:        0.655s
  Time for CFA construction:      3.934s
    Time for parsing file(s):     1.017s
    Time for AST to CFA:          1.431s
    Time for CFA sanity check:    0.258s
    Time for post-processing:     1.032s
      Time for var class.:        0.553s
Time for Analysis:               24.239s
CPU time for analysis:           24.240s
Total time for CPAchecker:       30.257s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.130s

Time for Garbage Collector:       0.447s (in 36 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    67 MiB) max;     45MB (    43 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
