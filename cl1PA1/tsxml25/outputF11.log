scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/main3_true-unreach-call_drivers-staging-usbip-vhci-hcd-ko--132_1a--927c3fa-1.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_khakvmsu/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4714: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4717: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4720: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_1971;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1971;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1971;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1971;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4741: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4744: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4747: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5530;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5530;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5530;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5530;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5344: Dead code detected: priv = tmp; (CFACreationUtils.addEdgeToCFA, INFO)

line 5496: Dead code detected: unlink = tmp; (CFACreationUtils.addEdgeToCFA, INFO)

line 6490: Dead code detected: [size > 8192UL] (CFACreationUtils.addEdgeToCFA, INFO)

line 6490: Dead code detected: [!(size > 8192UL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6491: Dead code detected: tmp = kmalloc_large(size, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 6496: Dead code detected: [(flags & 1U) == 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 6496: Dead code detected: [!((flags & 1U) == 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6497: Dead code detected: tmp___0 = kmalloc_slab(size); (CFACreationUtils.addEdgeToCFA, INFO)

line 6499: Dead code detected: [!(((unsigned long)s) == ((unsigned long)((struct kmem_cache *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 6500: Dead code detected: return (16); (CFACreationUtils.addEdgeToCFA, INFO)

line 6504: Dead code detected: ret = kmem_cache_alloc_notrace(s, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 7845: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 6300-6305: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbip_task_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbip_start_eh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbip_event_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbip_stop_eh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_link_urb_to_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_giveback_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_unlink_urb_from_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_check_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_resume_root_hub to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_create_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_add_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1296020 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1163919 (90%)
  Because of loop head:            131073 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1028 (0%)
  Times precision was empty:       139982 (11%)
  Times precision was {false}:     1997 (0%)
  Times result was cached:         1105338 (85%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      48703 (4%)
  Times result was 'false':        138160 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         1148135
  BDD entailment checks:           727083
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          28
Number of abstraction locations:          169
Max number of predicates per location:    16
Avg number of predicates per location:    5
Total predicates per abstraction:         5225882
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 103.07
Number of irrelevant predicates:          2324071 (44%)
Number of preds handled by boolean abs:   215537 (4%)
  Total number of models for allsat:      192832
  Max number of models for allsat:        320
  Avg number of models for allsat:        3.96

Time for post operator:                170.746s
  Time for path formula creation:      167.486s
Time for strengthen operator:            6.704s
Time for prec operator:                488.078s
  Time for abstraction:                468.433s (Max:     2.797s, Count: 1296020)
    Boolean abstraction:               112.140s
    Solving time:                       80.589s (Max:     0.083s)
    Model enumeration time:             22.621s
    Time for BDD construction:           3.943s (Max:     0.080s)
Time for merge operator:                13.172s
Time for coverage check:                 0.820s
  Time for BDD entailment checks:        0.664s
Total time for SMT solver (w/o itp):   103.211s

Number of path formula cache hits:   5087835 (64%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   131.872s

Total number of created targets for pointer analysis: 756523
   Number of created targets for uf: *(struct_urb)* is 7941
   Number of created targets for uf: *(struct_list_head)* is 130129
   Number of created targets for uf: *unsigned_int is 34121
   Number of created targets for uf: *unsigned_long_int is 721
   Number of created targets for uf: *(struct_vhci_device)* is 7941


Number of BDD nodes:                               34302
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       96127 (count: 1235192, min: 0, max: 1694, avg: 0.08)
Time for BDD node cleanup:                             0.238s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.252s
  Time for transition matches:                         6.025s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                      7108322 (count: 7108322, min: 1, max: 1, avg: 1.00) [1 x 7108322]

CPA algorithm statistics
------------------------
Number of iterations:            4806977
Max size of waitlist:            443
Average size of waitlist:        114
Number of computed successors:   5420819
Max successors for one state:    2
Number of times merged:          210526
Number of times stopped:         426060
Number of times breaked:         1028

Total time for CPA algorithm:       815.518s (Max:     9.878s)
  Time for choose from waitlist:      2.408s
  Time for precision adjustment:    521.766s
  Time for transfer relation:       243.996s
  Time for merge operator:           16.713s
  Time for stop operator:             7.026s
  Time for adding to reached set:     9.474s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1028
Avg. length of target path (in blocks):              103723 (count: 1028, min: 5, max: 650, avg: 100.90)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  74.827s
  Counterexample analysis:                            66.076s (Max:     0.617s, Calls: 1028)
    Refinement sat check:                             23.606s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.048s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.228s
  Precision update:                                    0.359s
  ARG update:                                          7.587s

Length of refined path (in blocks):                   48465 (count: 1028, min: 4, max: 449, avg: 47.14)
Number of affected states:                            19469 (count: 1028, min: 1, max: 196, avg: 18.94)
Length (states) of path with itp 'true':              27968 (count: 1028, min: 0, max: 447, avg: 27.21)
Length (states) of path with itp non-trivial itp:     19469 (count: 1028, min: 1, max: 196, avg: 18.94)
Length (states) of path with itp 'false':              1028 (count: 1028, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         213 (count: 1028, min: 0, max: 6, avg: 0.21)
Equal non-trivial interpolants along paths:           18228 (count: 1028, min: 0, max: 193, avg: 17.73)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1028
Number of successful refinements:     1028
Number of failed refinements:         0
Max. size of reached set before ref.: 21338
Max. size of reached set after ref.:  12040
Avg. size of reached set before ref.: 5261.27
Avg. size of reached set after ref.:  551.96

Total time for CEGAR algorithm:     894.394s
Time for refinements:                78.514s
Average time for refinement:          0.076s
Max time for refinement:              0.667s

Code Coverage
-----------------------------
  Function coverage:      0.474
  Visited lines:          1678
  Total lines:            2864
  Line coverage:          0.586
  Visited conditions:     292
  Total conditions:       626
  Condition coverage:     0.466

CPAchecker general statistics
-----------------------------
Number of program locations:     3777
Number of CFA edges:             4313
Number of relevant variables:    466
Number of functions:             95
Number of loops:                 23
Size of reached set:             15424
  Number of reached locations:   886 (23%)
    Avg states per location:     17
    Max states per location:     264 (at node N1254)
  Number of reached functions:   45 (47%)
  Number of partitions:          15061
    Avg size of partitions:      1
    Max size of partitions:      30 (with key [N2987 (before line 8261), Function main called from node N2936, stack depth 1 [295bf2a], stack [main]])
  Number of target states:       0
  Size of final wait list        303

Time for analysis setup:          5.865s
  Time for loading CPAs:          1.034s
  Time for loading parser:        0.629s
  Time for CFA construction:      4.106s
    Time for parsing file(s):     1.124s
    Time for AST to CFA:          1.426s
    Time for CFA sanity check:    0.268s
    Time for post-processing:     1.063s
      Time for var class.:        0.542s
Time for Analysis:              894.394s
CPU time for analysis:          894.290s
Total time for CPAchecker:      900.268s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              0.327s

Time for Garbage Collector:      48.340s (in 1194 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1198MB (  1143 MiB) max;    506MB (   483 MiB) avg;   1207MB (  1151 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    40 MiB) peak
Allocated heap memory:          1417MB (  1352 MiB) max;    761MB (   726 MiB) avg
Allocated non-heap memory:        44MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   9910MB (  9451 MiB) max;   8766MB (  8359 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
