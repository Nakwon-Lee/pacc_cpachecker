scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/main3_true-unreach-call_drivers-staging-usbip-vhci-hcd-ko--132_1a--927c3fa-1.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vguu684w/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4714: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4717: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4720: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_1971;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1971;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1971;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1971;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4741: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4744: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4747: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5530;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5530;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5530;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5530;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5344: Dead code detected: priv = tmp; (CFACreationUtils.addEdgeToCFA, INFO)

line 5496: Dead code detected: unlink = tmp; (CFACreationUtils.addEdgeToCFA, INFO)

line 6490: Dead code detected: [size > 8192UL] (CFACreationUtils.addEdgeToCFA, INFO)

line 6490: Dead code detected: [!(size > 8192UL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6491: Dead code detected: tmp = kmalloc_large(size, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 6496: Dead code detected: [(flags & 1U) == 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 6496: Dead code detected: [!((flags & 1U) == 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6497: Dead code detected: tmp___0 = kmalloc_slab(size); (CFACreationUtils.addEdgeToCFA, INFO)

line 6499: Dead code detected: [!(((unsigned long)s) == ((unsigned long)((struct kmem_cache *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 6500: Dead code detected: return (16); (CFACreationUtils.addEdgeToCFA, INFO)

line 6504: Dead code detected: ret = kmem_cache_alloc_notrace(s, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 7845: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 6300-6305: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_poll_rh_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_create_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_check_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbip_task_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_add_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_resume_root_hub to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_link_urb_to_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_unlink_urb_from_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_giveback_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1395623 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1228985 (88%)
  Because of loop head:            165451 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1187 (0%)
  Times precision was empty:       208770 (15%)
  Times precision was {false}:     1787 (0%)
  Times result was cached:         1159209 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      25857 (2%)
  Times result was 'false':        273769 (20%)
Number of strengthen sat checks:   0
Number of coverage checks:         1645277
  BDD entailment checks:           826717
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          43
Number of abstraction locations:          130
Max number of predicates per location:    12
Avg number of predicates per location:    5
Total predicates per abstraction:         7450516
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 269.52
Number of irrelevant predicates:          4201275 (56%)
Number of preds handled by boolean abs:   101243 (1%)
  Total number of models for allsat:      54253
  Max number of models for allsat:        15
  Avg number of models for allsat:        2.10

Time for post operator:                167.356s
  Time for path formula creation:      163.498s
Time for strengthen operator:            7.762s
Time for prec operator:                465.430s
  Time for abstraction:                446.332s (Max:     4.010s, Count: 1395623)
    Boolean abstraction:                57.083s
    Solving time:                       46.622s (Max:     0.040s)
    Model enumeration time:              7.743s
    Time for BDD construction:           0.957s (Max:     0.012s)
Time for merge operator:                25.788s
Time for coverage check:                 0.897s
  Time for BDD entailment checks:        0.684s
Total time for SMT solver (w/o itp):    54.365s

Number of path formula cache hits:   8082581 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   121.933s

Total number of created targets for pointer analysis: 1148608
   Number of created targets for uf: *unsigned_int is 109457


Number of BDD nodes:                               8104
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       49989 (count: 1289114, min: 0, max: 1012, avg: 0.04)
Time for BDD node cleanup:                             0.180s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.670s
  Time for transition matches:                         7.207s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.011s
Automaton transfers with branching:                0
Automaton transfer successors:                      9587606 (count: 9587606, min: 1, max: 1, avg: 1.00) [1 x 9587606]

CPA algorithm statistics
------------------------
Number of iterations:            6299593
Max size of waitlist:            416
Average size of waitlist:        227
Number of computed successors:   7320984
Max successors for one state:    2
Number of times merged:          409280
Number of times stopped:         637639
Number of times breaked:         1187

Total time for CPA algorithm:       836.694s (Max:     5.527s)
  Time for choose from waitlist:      2.591s
  Time for precision adjustment:    506.134s
  Time for transfer relation:       260.020s
  Time for merge operator:           31.690s
  Time for stop operator:             8.848s
  Time for adding to reached set:    10.769s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1187
Avg. length of target path (in blocks):               76823 (count: 1187, min: 8, max: 127, avg: 64.72)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  48.710s
  Counterexample analysis:                            36.193s (Max:     0.101s, Calls: 1187)
    Refinement sat check:                             22.491s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.061s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.299s
  Precision update:                                    0.695s
  ARG update:                                         10.745s

Length of refined path (in blocks):                   62356 (count: 1187, min: 4, max: 110, avg: 52.53)
Number of affected states:                            25268 (count: 1187, min: 1, max: 92, avg: 21.29)
Length (states) of path with itp 'true':              35901 (count: 1187, min: 0, max: 78, avg: 30.25)
Length (states) of path with itp non-trivial itp:     25268 (count: 1187, min: 1, max: 92, avg: 21.29)
Length (states) of path with itp 'false':              1187 (count: 1187, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1110 (count: 1187, min: 0, max: 3, avg: 0.94)
Equal non-trivial interpolants along paths:           22971 (count: 1187, min: 0, max: 90, avg: 19.35)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1187
Number of successful refinements:     1187
Number of failed refinements:         0
Max. size of reached set before ref.: 23175
Max. size of reached set after ref.:  6811
Avg. size of reached set before ref.: 7540.34
Avg. size of reached set after ref.:  2146.66

Total time for CEGAR algorithm:     893.984s
Time for refinements:                55.623s
Average time for refinement:          0.046s
Max time for refinement:              0.182s

Code Coverage
-----------------------------
  Function coverage:      0.474
  Visited lines:          1618
  Total lines:            2864
  Line coverage:          0.565
  Visited conditions:     280
  Total conditions:       626
  Condition coverage:     0.447

CPAchecker general statistics
-----------------------------
Number of program locations:     3777
Number of CFA edges:             4313
Number of relevant variables:    466
Number of functions:             95
Number of loops:                 23
Size of reached set:             7276
  Number of reached locations:   824 (22%)
    Avg states per location:     8
    Max states per location:     103 (at node N28)
  Number of reached functions:   45 (47%)
  Number of partitions:          7188
    Avg size of partitions:      1
    Max size of partitions:      11 (with key [N3073 (before line 8343), Function main called from node N2936, stack depth 1 [295bf2a], stack [main]])
  Number of target states:       0
  Size of final wait list        205

Time for analysis setup:          6.283s
  Time for loading CPAs:          1.135s
  Time for loading parser:        0.710s
  Time for CFA construction:      4.287s
    Time for parsing file(s):     1.145s
    Time for AST to CFA:          1.558s
    Time for CFA sanity check:    0.252s
    Time for post-processing:     1.100s
      Time for var class.:        0.541s
Time for Analysis:              893.984s
CPU time for analysis:          893.880s
Total time for CPAchecker:      900.272s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              0.229s

Time for Garbage Collector:      55.801s (in 1295 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1204MB (  1149 MiB) max;    479MB (   457 MiB) avg;   1218MB (  1162 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1665MB (  1588 MiB) max;    709MB (   676 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8489MB (  8096 MiB) max;   8282MB (  7899 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
