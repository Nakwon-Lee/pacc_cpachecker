scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-media-video-cx88-cx8802-ko--32_7a--d47b389.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_g2_10yxy/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5292: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

line 6362: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_core_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_print_irqbits to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_sram_channel_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_wakeup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_sram_channel_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5315: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)(buf->vb.queue.next)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_prefetch, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_core_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_core_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6187: Ignoring function call through function pointer *(drv->remove): err = (*(drv->remove))(drv); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5894: Ignoring function call through function pointer *(drv->advise_acquire): (*(drv->advise_acquire))(drv); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 5894: Unsupported feature (recursion): cx8802_request_acquire(drv); (line was originally pointer call(cx8802_request_acquire) (*(drv->advise_acquire))(drv);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            930 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  885 (95%)
  Because of loop head:            39 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6 (1%)
  Times precision was empty:       870 (94%)
  Times precision was {false}:     19 (2%)
  Times result was cached:         14 (2%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      27 (3%)
  Times result was 'false':        16 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         409
  BDD entailment checks:           105
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       18
Number of predicates discovered:          6
Number of abstraction locations:          19
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         96
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 2.09
Number of irrelevant predicates:          25 (26%)
Number of preds handled by boolean abs:   51 (53%)
  Total number of models for allsat:      27
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.025s
  Time for path formula creation:        1.003s
Time for strengthen operator:            0.052s
Time for prec operator:                  0.332s
  Time for abstraction:                  0.225s (Max:     0.034s, Count: 930)
    Boolean abstraction:                 0.053s
    Solving time:                        0.039s (Max:     0.013s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.012s (Max:     0.012s)
Time for merge operator:                 0.059s
Time for coverage check:                 0.010s
  Time for BDD entailment checks:        0.010s
Total time for SMT solver (w/o itp):     0.041s

Number of path formula cache hits:   3318 (55%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.945s

Total number of created targets for pointer analysis: 1
   Number of created targets for uf: *(struct_list_head)* is 2


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          74 (count: 1266, min: 0, max: 74, avg: 0.06)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.115s
Automaton transfers with branching:                0
Automaton transfer successors:                         5242 (count: 5242, min: 1, max: 1, avg: 1.00) [1 x 5242]

CPA algorithm statistics
------------------------
Number of iterations:            3094
Max size of waitlist:            22
Average size of waitlist:        12
Number of computed successors:   3403
Max successors for one state:    2
Number of times merged:          152
Number of times stopped:         257
Number of times breaked:         6

Total time for CPA algorithm:         2.669s (Max:     1.265s)
  Time for choose from waitlist:      0.010s
  Time for precision adjustment:      0.680s
  Time for transfer relation:         1.627s
  Time for merge operator:            0.095s
  Time for stop operator:             0.047s
  Time for adding to reached set:     0.073s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  62 (count: 6, min: 7, max: 20, avg: 10.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.142s
  Counterexample analysis:                             0.068s (Max:     0.022s, Calls: 6)
    Refinement sat check:                              0.038s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.009s
  ARG update:                                          0.041s

Length of refined path (in blocks):                      56 (count: 6, min: 6, max: 19, avg: 9.33)
Number of affected states:                               33 (count: 6, min: 4, max: 11, avg: 5.50)
Length (states) of path with itp 'true':                 17 (count: 6, min: 1, max: 12, avg: 2.83)
Length (states) of path with itp non-trivial itp:        33 (count: 6, min: 4, max: 11, avg: 5.50)
Length (states) of path with itp 'false':                 6 (count: 6, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              27 (count: 6, min: 3, max: 10, avg: 4.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 1486
Max. size of reached set after ref.:  1459
Avg. size of reached set before ref.: 513.67
Avg. size of reached set after ref.:  248.17

Total time for CEGAR algorithm:       2.850s
Time for refinements:                 0.180s
Average time for refinement:          0.030s
Max time for refinement:              0.061s

Code Coverage
-----------------------------
  Function coverage:      0.315
  Visited lines:          1196
  Total lines:            1844
  Line coverage:          0.649
  Visited conditions:     158
  Total conditions:       392
  Condition coverage:     0.403

CPAchecker general statistics
-----------------------------
Number of program locations:     2568
Number of CFA edges:             2852
Number of relevant variables:    222
Number of functions:             92
Number of loops:                 11
Size of reached set:             1538
  Number of reached locations:   497 (19%)
    Avg states per location:     3
    Max states per location:     136 (at node N70)
  Number of reached functions:   29 (32%)
  Number of partitions:          1538
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        15

Time for analysis setup:          5.442s
  Time for loading CPAs:          0.931s
  Time for loading parser:        0.743s
  Time for CFA construction:      3.598s
    Time for parsing file(s):     1.039s
    Time for AST to CFA:          1.267s
    Time for CFA sanity check:    0.224s
    Time for post-processing:     0.866s
      Time for var class.:        0.409s
Time for Analysis:                2.850s
CPU time for analysis:            2.850s
Total time for CPAchecker:        8.297s
Total CPU time for CPAchecker:    8.290s
Time for statistics:              0.143s

Time for Garbage Collector:       0.162s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     34MB (    32 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     26MB (    25 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8040MB (  7668 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
