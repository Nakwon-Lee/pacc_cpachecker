scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-media-video-cx88-cx8802-ko--32_7a--d47b389.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dlwyqk1i/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5292: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

line 6362: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_core_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_core_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_risc_stopper to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function btcx_riscmem_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6187: Ignoring function call through function pointer *(drv->remove): err = (*(drv->remove))(drv); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5921: Ignoring function call through function pointer *(drv->advise_release): (*(drv->advise_release))(drv); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 5921: Unsupported feature (recursion): cx8802_request_release(drv); (line was originally pointer call(cx8802_request_release) (*(drv->advise_release))(drv);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            2745 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2533 (92%)
  Because of loop head:            166 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         46 (2%)
  Times precision was empty:       428 (16%)
  Times precision was {false}:     69 (3%)
  Times result was cached:         1967 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      281 (10%)
  Times result was 'false':        374 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         868
  BDD entailment checks:           448
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       18
Number of predicates discovered:          6
Number of abstraction locations:          74
Max number of predicates per location:    4
Avg number of predicates per location:    3
Total predicates per abstraction:         7323
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 20.92
Number of irrelevant predicates:          1257 (17%)
Number of preds handled by boolean abs:   691 (9%)
  Total number of models for allsat:      281
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.958s
  Time for path formula creation:        0.910s
Time for strengthen operator:            0.050s
Time for prec operator:                  2.283s
  Time for abstraction:                  2.104s (Max:     0.028s, Count: 2745)
    Boolean abstraction:                 0.446s
    Solving time:                        0.260s (Max:     0.014s)
    Model enumeration time:              0.053s
    Time for BDD construction:           0.061s (Max:     0.012s)
Time for merge operator:                 0.044s
Time for coverage check:                 0.019s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     0.313s

Number of path formula cache hits:   13846 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.781s

Total number of created targets for pointer analysis: 87
   Number of created targets for uf: *(struct_list_head)* is 43
   Number of created targets for uf: *(struct_pci_dev)* is 2
   Number of created targets for uf: *(struct_cx88_core)* is 2


Number of BDD nodes:                               217
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         498 (count: 2954, min: 0, max: 134, avg: 0.17)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.164s
Automaton transfers with branching:                0
Automaton transfer successors:                        13440 (count: 13440, min: 1, max: 1, avg: 1.00) [1 x 13440]

CPA algorithm statistics
------------------------
Number of iterations:            8885
Max size of waitlist:            14
Average size of waitlist:        5
Number of computed successors:   10084
Max successors for one state:    2
Number of times merged:          210
Number of times stopped:         511
Number of times breaked:         46

Total time for CPA algorithm:         5.269s (Max:     0.661s)
  Time for choose from waitlist:      0.060s
  Time for precision adjustment:      2.655s
  Time for transfer relation:         1.943s
  Time for merge operator:            0.083s
  Time for stop operator:             0.117s
  Time for adding to reached set:     0.129s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   46
Avg. length of target path (in blocks):                1155 (count: 46, min: 7, max: 47, avg: 25.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.825s
  Counterexample analysis:                             0.538s (Max:     0.028s, Calls: 46)
    Refinement sat check:                              0.322s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.102s
  Precision update:                                    0.064s
  ARG update:                                          0.080s

Length of refined path (in blocks):                    1109 (count: 46, min: 6, max: 46, avg: 24.11)
Number of affected states:                              972 (count: 46, min: 4, max: 44, avg: 21.13)
Length (states) of path with itp 'true':                 91 (count: 46, min: 1, max: 18, avg: 1.98)
Length (states) of path with itp non-trivial itp:       972 (count: 46, min: 4, max: 44, avg: 21.13)
Length (states) of path with itp 'false':                46 (count: 46, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 46, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             926 (count: 46, min: 3, max: 43, avg: 20.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                46
Number of successful refinements:     46
Number of failed refinements:         0
Max. size of reached set before ref.: 412
Max. size of reached set after ref.:  282
Avg. size of reached set before ref.: 215.13
Avg. size of reached set after ref.:  23.48

Total time for CEGAR algorithm:       6.194s
Time for refinements:                 0.923s
Average time for refinement:          0.020s
Max time for refinement:              0.066s

Code Coverage
-----------------------------
  Function coverage:      0.402
  Visited lines:          1062
  Total lines:            1844
  Line coverage:          0.576
  Visited conditions:     74
  Total conditions:       392
  Condition coverage:     0.189

CPAchecker general statistics
-----------------------------
Number of program locations:     2568
Number of CFA edges:             2852
Number of relevant variables:    222
Number of functions:             92
Number of loops:                 11
Size of reached set:             384
  Number of reached locations:   307 (12%)
    Avg states per location:     1
    Max states per location:     5 (at node N70)
  Number of reached functions:   37 (40%)
  Number of partitions:          384
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        10

Time for analysis setup:          5.364s
  Time for loading CPAs:          0.960s
  Time for loading parser:        0.701s
  Time for CFA construction:      3.555s
    Time for parsing file(s):     1.024s
    Time for AST to CFA:          1.234s
    Time for CFA sanity check:    0.236s
    Time for post-processing:     0.833s
      Time for var class.:        0.365s
Time for Analysis:                6.194s
CPU time for analysis:            6.190s
Total time for CPAchecker:       11.563s
Total CPU time for CPAchecker:   11.540s
Time for statistics:              0.113s

Time for Garbage Collector:       0.198s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     38MB (    36 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     29MB (    28 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8054MB (  7681 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
