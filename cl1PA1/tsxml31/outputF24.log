scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-media-video-cx88-cx8802-ko--32_7a--d47b389.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_shwxwiz_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5292: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

line 6362: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_core_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_core_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_sram_channel_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_core_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_print_irqbits to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_sram_channel_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5315: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)(buf->vb.queue.next)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_prefetch, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_wakeup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6187: Ignoring function call through function pointer *(drv->remove): err = (*(drv->remove))(drv); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5894: Ignoring function call through function pointer *(drv->advise_acquire): (*(drv->advise_acquire))(drv); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 5894: Unsupported feature (recursion): cx8802_request_acquire(drv); (line was originally pointer call(cx8802_request_acquire) (*(drv->advise_acquire))(drv);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            65208 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  62845 (96%)
  Because of loop head:            2304 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         59 (0%)
  Times precision was empty:       24286 (37%)
  Times precision was {false}:     302 (0%)
  Times result was cached:         39122 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1498 (2%)
  Times result was 'false':        695 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         34681
  BDD entailment checks:           10513
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       18
Number of predicates discovered:          7
Number of abstraction locations:          54
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         130975
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 72.76
Number of irrelevant predicates:          82770 (63%)
Number of preds handled by boolean abs:   3950 (3%)
  Total number of models for allsat:      2113
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.41

Time for post operator:                  4.798s
  Time for path formula creation:        4.508s
Time for strengthen operator:            0.523s
Time for prec operator:                 12.639s
  Time for abstraction:                 11.381s (Max:     0.030s, Count: 65208)
    Boolean abstraction:                 1.606s
    Solving time:                        1.399s (Max:     0.013s)
    Model enumeration time:              0.153s
    Time for BDD construction:           0.168s (Max:     0.010s)
Time for merge operator:                 0.268s
Time for coverage check:                 0.057s
  Time for BDD entailment checks:        0.052s
Total time for SMT solver (w/o itp):     1.552s

Number of path formula cache hits:   358388 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.595s

Total number of created targets for pointer analysis: 1
   Number of created targets for uf: *(struct_list_head)* is 2


Number of BDD nodes:                               325
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3121 (count: 45505, min: 0, max: 217, avg: 0.07)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.951s
  Time for transition matches:                         0.479s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       311436 (count: 311436, min: 1, max: 1, avg: 1.00) [1 x 311436]

CPA algorithm statistics
------------------------
Number of iterations:            222560
Max size of waitlist:            56
Average size of waitlist:        32
Number of computed successors:   244804
Max successors for one state:    2
Number of times merged:          12084
Number of times stopped:         19936
Number of times breaked:         59

Total time for CPA algorithm:        30.439s (Max:     1.235s)
  Time for choose from waitlist:      0.256s
  Time for precision adjustment:     15.147s
  Time for transfer relation:        11.166s
  Time for merge operator:            0.753s
  Time for stop operator:             0.654s
  Time for adding to reached set:     0.861s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   59
Avg. length of target path (in blocks):                1846 (count: 59, min: 7, max: 60, avg: 31.29)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.575s
  Counterexample analysis:                             0.703s (Max:     0.034s, Calls: 59)
    Refinement sat check:                              0.468s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.084s
  Precision update:                                    0.045s
  ARG update:                                          0.689s

Length of refined path (in blocks):                    1768 (count: 59, min: 6, max: 59, avg: 29.97)
Number of affected states:                             1651 (count: 59, min: 4, max: 57, avg: 27.98)
Length (states) of path with itp 'true':                 58 (count: 59, min: 0, max: 1, avg: 0.98)
Length (states) of path with itp non-trivial itp:      1651 (count: 59, min: 4, max: 57, avg: 27.98)
Length (states) of path with itp 'false':                59 (count: 59, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 59, min: 0, max: 1, avg: 0.02)
Equal non-trivial interpolants along paths:            1591 (count: 59, min: 3, max: 56, avg: 26.97)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                59
Number of successful refinements:     59
Number of failed refinements:         0
Max. size of reached set before ref.: 6232
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 3748.41
Avg. size of reached set after ref.:  5.95

Total time for CEGAR algorithm:      32.364s
Time for refinements:                 1.909s
Average time for refinement:          0.032s
Max time for refinement:              0.075s

Code Coverage
-----------------------------
  Function coverage:      0.304
  Visited lines:          1202
  Total lines:            1844
  Line coverage:          0.652
  Visited conditions:     162
  Total conditions:       392
  Condition coverage:     0.413

CPAchecker general statistics
-----------------------------
Number of program locations:     2568
Number of CFA edges:             2852
Number of relevant variables:    222
Number of functions:             92
Number of loops:                 11
Size of reached set:             3369
  Number of reached locations:   496 (19%)
    Avg states per location:     6
    Max states per location:     288 (at node N70)
  Number of reached functions:   28 (30%)
  Number of partitions:          3356
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1305 (before line 6326), Function main called from node N1238, stack depth 1 [3eb631b8], stack [main]])
  Number of target states:       0
  Size of final wait list        26

Time for analysis setup:          5.782s
  Time for loading CPAs:          1.043s
  Time for loading parser:        0.783s
  Time for CFA construction:      3.837s
    Time for parsing file(s):     1.102s
    Time for AST to CFA:          1.350s
    Time for CFA sanity check:    0.221s
    Time for post-processing:     0.949s
      Time for var class.:        0.512s
Time for Analysis:               32.365s
CPU time for analysis:           32.360s
Total time for CPAchecker:       38.155s
Total CPU time for CPAchecker:   38.140s
Time for statistics:              0.139s

Time for Garbage Collector:       1.041s (in 102 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 75MB (    71 MiB) max;     49MB (    47 MiB) avg;     79MB (    75 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8010MB (  7639 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
