scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-media-video-cx88-cx8802-ko--32_7a--d47b389.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ol6nqj31/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5292: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

line 6362: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_core_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_core_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_sram_channel_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_core_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6187: Ignoring function call through function pointer *(drv->remove): err = (*(drv->remove))(drv); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5894: Ignoring function call through function pointer *(drv->advise_acquire): (*(drv->advise_acquire))(drv); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 5894: Unsupported feature (recursion): cx8802_request_acquire(drv); (line was originally pointer call(cx8802_request_acquire) (*(drv->advise_acquire))(drv);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            2200 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1922 (87%)
  Because of loop head:            250 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         28 (1%)
  Times precision was empty:       945 (43%)
  Times precision was {false}:     59 (3%)
  Times result was cached:         1016 (46%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      180 (8%)
  Times result was 'false':        226 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         1895
  BDD entailment checks:           591
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       18
Number of predicates discovered:          5
Number of abstraction locations:          18
Max number of predicates per location:    4
Avg number of predicates per location:    3
Total predicates per abstraction:         3721
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 15.57
Number of irrelevant predicates:          1561 (42%)
Number of preds handled by boolean abs:   402 (11%)
  Total number of models for allsat:      180
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.040s
  Time for path formula creation:        0.973s
Time for strengthen operator:            0.062s
Time for prec operator:                  1.698s
  Time for abstraction:                  1.457s (Max:     0.020s, Count: 2200)
    Boolean abstraction:                 0.252s
    Solving time:                        0.203s (Max:     0.013s)
    Model enumeration time:              0.011s
    Time for BDD construction:           0.017s (Max:     0.004s)
Time for merge operator:                 0.049s
Time for coverage check:                 0.028s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):     0.214s

Number of path formula cache hits:   14856 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.889s

Total number of created targets for pointer analysis: 1
   Number of created targets for uf: *(struct_list_head)* is 2


Number of BDD nodes:                               214
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         344 (count: 2943, min: 0, max: 88, avg: 0.12)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.244s
Automaton transfers with branching:                0
Automaton transfer successors:                        15029 (count: 15029, min: 1, max: 1, avg: 1.00) [1 x 15029]

CPA algorithm statistics
------------------------
Number of iterations:            9406
Max size of waitlist:            24
Average size of waitlist:        11
Number of computed successors:   10996
Max successors for one state:    2
Number of times merged:          652
Number of times stopped:         975
Number of times breaked:         28

Total time for CPA algorithm:         4.827s (Max:     0.911s)
  Time for choose from waitlist:      0.068s
  Time for precision adjustment:      2.082s
  Time for transfer relation:         2.055s
  Time for merge operator:            0.142s
  Time for stop operator:             0.092s
  Time for adding to reached set:     0.134s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   28
Avg. length of target path (in blocks):                 376 (count: 28, min: 7, max: 19, avg: 13.43)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.410s
  Counterexample analysis:                             0.232s (Max:     0.022s, Calls: 28)
    Refinement sat check:                              0.147s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.054s
  Precision update:                                    0.030s
  ARG update:                                          0.076s

Length of refined path (in blocks):                     348 (count: 28, min: 6, max: 18, avg: 12.43)
Number of affected states:                              292 (count: 28, min: 4, max: 16, avg: 10.43)
Length (states) of path with itp 'true':                 28 (count: 28, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:       292 (count: 28, min: 4, max: 16, avg: 10.43)
Length (states) of path with itp 'false':                28 (count: 28, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 28, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             264 (count: 28, min: 3, max: 15, avg: 9.43)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 463
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 345.29
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:       5.302s
Time for refinements:                 0.468s
Average time for refinement:          0.016s
Max time for refinement:              0.070s

Code Coverage
-----------------------------
  Function coverage:      0.261
  Visited lines:          1014
  Total lines:            1844
  Line coverage:          0.550
  Visited conditions:     86
  Total conditions:       392
  Condition coverage:     0.219

CPAchecker general statistics
-----------------------------
Number of program locations:     2568
Number of CFA edges:             2852
Number of relevant variables:    222
Number of functions:             92
Number of loops:                 11
Size of reached set:             296
  Number of reached locations:   251 (10%)
    Avg states per location:     1
    Max states per location:     3 (at node N65)
  Number of reached functions:   24 (26%)
  Number of partitions:          296
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        12

Time for analysis setup:          5.188s
  Time for loading CPAs:          0.952s
  Time for loading parser:        0.696s
  Time for CFA construction:      3.402s
    Time for parsing file(s):     0.995s
    Time for AST to CFA:          1.146s
    Time for CFA sanity check:    0.209s
    Time for post-processing:     0.863s
      Time for var class.:        0.380s
Time for Analysis:                5.302s
CPU time for analysis:            5.300s
Total time for CPAchecker:       10.497s
Total CPU time for CPAchecker:   10.480s
Time for statistics:              0.102s

Time for Garbage Collector:       0.172s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     37MB (    35 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7991MB (  7621 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
