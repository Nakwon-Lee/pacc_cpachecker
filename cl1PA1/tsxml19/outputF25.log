scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/main0_true-unreach-call_drivers-net-wireless-ath-carl9170-carl9170-ko--32_7a--8a9f335.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_v_xkotch/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 9635: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11775: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12032: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14102: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15487: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 16589: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 16715: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17010: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17721: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20178: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20861: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 21545: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23784: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23828: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_sta_block_awake to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_lockdep_rcu_enabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_sched to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_first_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_dequeue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_acquire to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bitmap_find_free_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bitmap_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function net_ratelimit to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_rcu_dereference to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_tx_ba_cb_irqsafe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_start_tx_ba_cb_irqsafe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            242878 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  203816 (84%)
  Because of loop head:            36289 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2773 (1%)
  Times precision was empty:       26829 (11%)
  Times precision was {false}:     629 (0%)
  Times result was cached:         214231 (88%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1189 (0%)
  Times result was 'false':        4479 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         157946
  BDD entailment checks:           86734
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          5
Number of abstraction locations:          266
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         397923
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 218.88
Number of irrelevant predicates:          169688 (43%)
Number of preds handled by boolean abs:   1702 (0%)
  Total number of models for allsat:      1183
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                 19.139s
  Time for path formula creation:       18.414s
Time for strengthen operator:            1.212s
Time for prec operator:                 76.957s
  Time for abstraction:                 73.635s (Max:     0.487s, Count: 242878)
    Boolean abstraction:                16.192s
    Solving time:                       23.971s (Max:     0.456s)
    Model enumeration time:              0.516s
    Time for BDD construction:           0.061s (Max:     0.010s)
Time for merge operator:                 0.717s
Time for coverage check:                 0.131s
  Time for BDD entailment checks:        0.108s
Total time for SMT solver (w/o itp):    24.487s

Number of path formula cache hits:   1755065 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.823s

Total number of created targets for pointer analysis: 50482
   Number of created targets for uf: *unsigned_short_int is 193
   Number of created targets for uf: *(struct_sk_buff)* is 3
   Number of created targets for uf: *unsigned_char is 67
   Number of created targets for uf: *(struct_list_head)* is 10
   Number of created targets for uf: *enum_carl9170_tid_state is 3
   Number of created targets for uf: *_Bool is 71
   Number of created targets for uf: *unsigned_int is 323


Number of BDD nodes:                               228
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2481 (count: 124904, min: 0, max: 133, avg: 0.02)
Time for BDD node cleanup:                             0.043s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.249s
  Time for transition matches:                         1.174s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.016s
Automaton transfers with branching:                0
Automaton transfer successors:                      1549355 (count: 1549355, min: 1, max: 1, avg: 1.00) [1 x 1549355]

CPA algorithm statistics
------------------------
Number of iterations:            787703
Max size of waitlist:            106
Average size of waitlist:        69
Number of computed successors:   917522
Max successors for one state:    2
Number of times merged:          35606
Number of times stopped:         73801
Number of times breaked:         2773

Total time for CPA algorithm:       124.303s (Max:     2.040s)
  Time for choose from waitlist:      0.395s
  Time for precision adjustment:     82.590s
  Time for transfer relation:        35.005s
  Time for merge operator:            1.324s
  Time for stop operator:             1.157s
  Time for adding to reached set:     1.429s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2773
Avg. length of target path (in blocks):               80047 (count: 2773, min: 6, max: 49, avg: 28.87)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 756.597s
  Counterexample analysis:                           752.793s (Max:     0.893s, Calls: 2773)
    Refinement sat check:                            701.148s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.064s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.283s
  Precision update:                                    1.196s
  ARG update:                                          1.656s

Length of refined path (in blocks):                   77235 (count: 2773, min: 5, max: 48, avg: 27.85)
Number of affected states:                            19402 (count: 2773, min: 3, max: 45, avg: 7.00)
Length (states) of path with itp 'true':              55060 (count: 2773, min: 1, max: 42, avg: 19.86)
Length (states) of path with itp non-trivial itp:     19402 (count: 2773, min: 3, max: 45, avg: 7.00)
Length (states) of path with itp 'false':              2773 (count: 2773, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2773, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           16629 (count: 2773, min: 2, max: 44, avg: 6.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2773
Number of successful refinements:     2773
Number of failed refinements:         0
Max. size of reached set before ref.: 3411
Max. size of reached set after ref.:  3189
Avg. size of reached set before ref.: 2494.00
Avg. size of reached set after ref.:  2192.38

Total time for CEGAR algorithm:     890.088s
Time for refinements:               762.212s
Average time for refinement:          0.274s
Max time for refinement:              0.901s

Code Coverage
-----------------------------
  Function coverage:      0.228
  Visited lines:          2432
  Total lines:            10392
  Line coverage:          0.234
  Visited conditions:     428
  Total conditions:       3378
  Condition coverage:     0.127

CPAchecker general statistics
-----------------------------
Number of program locations:     14816
Number of CFA edges:             17417
Number of relevant variables:    3043
Number of functions:             465
Number of loops:                 125
Size of reached set:             2863
  Number of reached locations:   1323 (9%)
    Avg states per location:     2
    Max states per location:     47 (at node N14474)
  Number of reached functions:   106 (23%)
  Number of partitions:          2861
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N410 (before line 6762), Function carl9170_get_main_vif called from node N1597, stack depth 3 [1faabd47], stack [main, carl9170_op_bss_info_changed, carl9170_get_main_vif]])
  Number of target states:       0
  Size of final wait list        45

Time for analysis setup:         10.199s
  Time for loading CPAs:          1.225s
  Time for loading parser:        0.678s
  Time for CFA construction:      8.132s
    Time for parsing file(s):     1.427s
    Time for AST to CFA:          2.932s
    Time for CFA sanity check:    1.165s
    Time for post-processing:     2.515s
      Time for var class.:        1.165s
Time for Analysis:              890.088s
CPU time for analysis:          889.920s
Total time for CPAchecker:      900.292s
Total CPU time for CPAchecker:  900.090s
Time for statistics:              0.167s

Time for Garbage Collector:       5.122s (in 774 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                130MB (   124 MiB) max;     91MB (    87 MiB) avg;    138MB (   132 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           167MB (   159 MiB) max;    141MB (   134 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8488MB (  8094 MiB) max;   8287MB (  7904 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
