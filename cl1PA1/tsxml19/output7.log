scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/main0_true-unreach-call_drivers-net-wireless-ath-carl9170-carl9170-ko--32_7a--8a9f335.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ff5u7uc7/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 9635: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11775: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12032: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14102: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15487: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 16589: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 16715: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17010: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17721: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20178: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20861: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 21545: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23784: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23828: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_acquire to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_lockdep_rcu_enabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_sched to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_sta_block_awake to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_find_sta to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_rcu_dereference to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bitmap_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_first_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bitmap_shift_right to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_queue_stopped to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_wake_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kref_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bitmap_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unpoison_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4432 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4213 (95%)
  Because of loop head:            214 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (0%)
  Times precision was empty:       3405 (77%)
  Times precision was {false}:     145 (3%)
  Times result was cached:         860 (19%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      22 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         2242
  BDD entailment checks:           538
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          2
Number of abstraction locations:          74
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1027
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 6.15
Number of irrelevant predicates:          946 (92%)
Number of preds handled by boolean abs:   22 (2%)
  Total number of models for allsat:      22
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  8.891s
  Time for path formula creation:        8.811s
Time for strengthen operator:            0.070s
Time for prec operator:                  4.735s
  Time for abstraction:                  4.458s (Max:     0.326s, Count: 4432)
    Boolean abstraction:                 0.145s
    Solving time:                        3.332s (Max:     0.298s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.004s (Max:     0.002s)
Time for merge operator:                 0.635s
Time for coverage check:                 0.046s
  Time for BDD entailment checks:        0.045s
Total time for SMT solver (w/o itp):     3.335s

Number of path formula cache hits:   2501 (11%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.529s

Total number of created targets for pointer analysis: 32932
   Number of created targets for uf: *unsigned_short_int is 461
   Number of created targets for uf: *(struct_sk_buff)* is 11
   Number of created targets for uf: *unsigned_char is 161
   Number of created targets for uf: *(struct_list_head)* is 18
   Number of created targets for uf: *_Bool is 57
   Number of created targets for uf: *unsigned_int is 806
   Number of created targets for uf: *unsigned_long_int is 101


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          47 (count: 4804, min: 0, max: 19, avg: 0.01)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.195s
Automaton transfers with branching:                0
Automaton transfer successors:                        21981 (count: 21981, min: 1, max: 1, avg: 1.00) [1 x 21981]

CPA algorithm statistics
------------------------
Number of iterations:            13992
Max size of waitlist:            42
Average size of waitlist:        30
Number of computed successors:   15437
Max successors for one state:    2
Number of times merged:          852
Number of times stopped:         1377
Number of times breaked:         5

Total time for CPA algorithm:        17.319s (Max:     5.335s)
  Time for choose from waitlist:      0.083s
  Time for precision adjustment:      5.188s
  Time for transfer relation:        10.736s
  Time for merge operator:            0.741s
  Time for stop operator:             0.150s
  Time for adding to reached set:     0.137s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                 480 (count: 5, min: 89, max: 101, avg: 96.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.221s
  Counterexample analysis:                             3.047s (Max:     0.764s, Calls: 5)
    Refinement sat check:                              2.839s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.011s
  ARG update:                                          0.120s

Length of refined path (in blocks):                     375 (count: 4, min: 88, max: 99, avg: 93.75)
Number of affected states:                              347 (count: 4, min: 81, max: 92, avg: 86.75)
Length (states) of path with itp 'true':                 24 (count: 4, min: 6, max: 6, avg: 6.00)
Length (states) of path with itp non-trivial itp:       347 (count: 4, min: 81, max: 92, avg: 86.75)
Length (states) of path with itp 'false':                 4 (count: 4, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             343 (count: 4, min: 80, max: 91, avg: 85.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 2916
Max. size of reached set after ref.:  101
Avg. size of reached set before ref.: 2893.00
Avg. size of reached set after ref.:  101.00

Total time for CEGAR algorithm:      20.626s
Time for refinements:                 3.307s
Average time for refinement:          0.661s
Max time for refinement:              0.802s

Code Coverage
-----------------------------
  Function coverage:      0.196
  Visited lines:          1926
  Total lines:            10392
  Line coverage:          0.185
  Visited conditions:     234
  Total conditions:       3378
  Condition coverage:     0.069

CPAchecker general statistics
-----------------------------
Number of program locations:     14816
Number of CFA edges:             17417
Number of relevant variables:    3043
Number of functions:             465
Number of loops:                 125
Size of reached set:             2888
  Number of reached locations:   865 (6%)
    Avg states per location:     3
    Max states per location:     134 (at node N14474)
  Number of reached functions:   91 (20%)
  Number of partitions:          2885
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N520 (before line 6961), Function carl9170_ampdu_gc called from node N672, stack depth 4 [296c6cc1], stack [main, carl9170_op_start, carl9170_zap_queues, carl9170_ampdu_gc]])
  Number of target states:       1
  Size of final wait list        30

Time for analysis setup:          9.864s
  Time for loading CPAs:          1.259s
  Time for loading parser:        0.653s
  Time for CFA construction:      7.803s
    Time for parsing file(s):     1.546s
    Time for AST to CFA:          3.068s
    Time for CFA sanity check:    0.730s
    Time for post-processing:     2.258s
      Time for var class.:        1.276s
Time for Analysis:               20.626s
CPU time for analysis:           20.620s
Total time for CPAchecker:       30.494s
Total CPU time for CPAchecker:   30.460s
Time for statistics:              0.191s

Time for Garbage Collector:       0.785s (in 42 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 94MB (    89 MiB) max;     62MB (    59 MiB) avg;    105MB (   100 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    32 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8089MB (  7714 MiB) max;   8070MB (  7696 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
