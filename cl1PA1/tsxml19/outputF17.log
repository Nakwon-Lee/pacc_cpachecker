scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/main0_true-unreach-call_drivers-net-wireless-ath-carl9170-carl9170-ko--32_7a--8a9f335.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rc2ebvwk/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 9635: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11775: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12032: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14102: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15487: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 16589: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 16715: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17010: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17721: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20178: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20861: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 21545: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23784: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23828: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_sta_block_awake to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_acquire to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_lockdep_rcu_enabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_rcu_dereference to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_first_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_dequeue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_tx_ba_cb_irqsafe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_sched to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bitmap_find_free_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bitmap_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_start_tx_ba_cb_irqsafe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function net_ratelimit to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_beacon_get_tim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_from_anchor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_poison_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath_regd_get_band_ctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 16653: Unsupported feature (recursion): err = carl9170_set_channel(ar, channel, _bw, 2); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            486433 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  438767 (90%)
  Because of loop head:            45577 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2089 (0%)
  Times precision was empty:       48502 (10%)
  Times precision was {false}:     1044 (0%)
  Times result was cached:         434056 (89%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2831 (1%)
  Times result was 'false':        12347 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         391422
  BDD entailment checks:           89134
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          8
Number of abstraction locations:          435
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         1182464
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 305.15
Number of irrelevant predicates:          603125 (51%)
Number of preds handled by boolean abs:   4280 (0%)
  Total number of models for allsat:      2818
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                 30.959s
  Time for path formula creation:       29.577s
Time for strengthen operator:            2.475s
Time for prec operator:                207.455s
  Time for abstraction:                201.112s (Max:     0.827s, Count: 486433)
    Boolean abstraction:                41.955s
    Solving time:                       55.212s (Max:     0.807s)
    Model enumeration time:              1.678s
    Time for BDD construction:           0.123s (Max:     0.012s)
Time for merge operator:                 1.856s
Time for coverage check:                 0.184s
  Time for BDD entailment checks:        0.121s
Total time for SMT solver (w/o itp):    56.890s

Number of path formula cache hits:   3443863 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    18.232s

Total number of created targets for pointer analysis: 170666
   Number of created targets for uf: *unsigned_short_int is 1381
   Number of created targets for uf: *(struct_sk_buff)* is 2
   Number of created targets for uf: *signed_int is 19
   Number of created targets for uf: *unsigned_char is 220
   Number of created targets for uf: *(struct_list_head)* is 10
   Number of created targets for uf: *(unsigned_char)* is 19
   Number of created targets for uf: *enum_carl9170_tid_state is 2
   Number of created targets for uf: *_Bool is 5
   Number of created targets for uf: *unsigned_int is 161


Number of BDD nodes:                               287
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5845 (count: 165581, min: 0, max: 94, avg: 0.04)
Time for BDD node cleanup:                             0.043s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.795s
  Time for transition matches:                         2.212s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.014s
Automaton transfers with branching:                0
Automaton transfer successors:                      2947690 (count: 2947690, min: 1, max: 1, avg: 1.00) [1 x 2947690]

CPA algorithm statistics
------------------------
Number of iterations:            1833954
Max size of waitlist:            218
Average size of waitlist:        100
Number of computed successors:   2114761
Max successors for one state:    2
Number of times merged:          151144
Number of times stopped:         216646
Number of times breaked:         2089

Total time for CPA algorithm:       306.930s (Max:     2.131s)
  Time for choose from waitlist:      0.786s
  Time for precision adjustment:    219.768s
  Time for transfer relation:        73.062s
  Time for merge operator:            3.561s
  Time for stop operator:             2.306s
  Time for adding to reached set:     2.713s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2089
Avg. length of target path (in blocks):               54735 (count: 2089, min: 6, max: 66, avg: 26.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 557.223s
  Counterexample analysis:                           551.975s (Max:     1.033s, Calls: 2089)
    Refinement sat check:                            514.909s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.040s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.325s
  Precision update:                                    1.441s
  ARG update:                                          2.985s

Length of refined path (in blocks):                   49503 (count: 2089, min: 5, max: 65, avg: 23.70)
Number of affected states:                            29433 (count: 2089, min: 1, max: 63, avg: 14.09)
Length (states) of path with itp 'true':              17981 (count: 2089, min: 1, max: 47, avg: 8.61)
Length (states) of path with itp non-trivial itp:     29433 (count: 2089, min: 1, max: 63, avg: 14.09)
Length (states) of path with itp 'false':              2089 (count: 2089, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2089, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           27344 (count: 2089, min: 0, max: 62, avg: 13.09)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2089
Number of successful refinements:     2089
Number of failed refinements:         0
Max. size of reached set before ref.: 11931
Max. size of reached set after ref.:  10480
Avg. size of reached set before ref.: 5574.82
Avg. size of reached set after ref.:  4676.78

Total time for CEGAR algorithm:     879.869s
Time for refinements:               567.107s
Average time for refinement:          0.271s
Max time for refinement:              1.043s

Code Coverage
-----------------------------
  Function coverage:      0.316
  Visited lines:          3660
  Total lines:            10392
  Line coverage:          0.352
  Visited conditions:     916
  Total conditions:       3378
  Condition coverage:     0.271

CPAchecker general statistics
-----------------------------
Number of program locations:     14816
Number of CFA edges:             17417
Number of relevant variables:    3043
Number of functions:             465
Number of loops:                 125
Size of reached set:             9762
  Number of reached locations:   2572 (17%)
    Avg states per location:     3
    Max states per location:     143 (at node N127)
  Number of reached functions:   147 (32%)
  Number of partitions:          9729
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N5965 (before line 13392), Function carl9170_set_operating_mode called from node N1290, stack depth 3 [57e50201], stack [main, carl9170_op_remove_interface, carl9170_set_operating_mode]])
  Number of target states:       0
  Size of final wait list        183

Time for analysis setup:         10.036s
  Time for loading CPAs:          1.247s
  Time for loading parser:        0.717s
  Time for CFA construction:      7.921s
    Time for parsing file(s):     1.725s
    Time for AST to CFA:          3.080s
    Time for CFA sanity check:    0.742s
    Time for post-processing:     2.185s
      Time for var class.:        1.231s
Time for Analysis:              879.869s
CPU time for analysis:          879.780s
Total time for CPAchecker:      889.917s
Total CPU time for CPAchecker:  889.800s
Time for statistics:              0.318s

Time for Garbage Collector:      16.264s (in 1563 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                215MB (   205 MiB) max;    126MB (   120 MiB) avg;    225MB (   215 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           237MB (   226 MiB) max;    183MB (   174 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8420MB (  8030 MiB) max;   8269MB (  7886 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
