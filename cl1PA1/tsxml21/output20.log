scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_sound-oss-opl3-ko--111_1a--42f9f8d.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__s8kst_f/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sound_unload_synthdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2526: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function note_to_freq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function compute_finetune to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sound_alloc_synthdev to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sequencer_init to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function conf_printf2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2191 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1706 (78%)
  Because of loop head:            480 (22%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (0%)
  Times precision was empty:       2123 (97%)
  Times precision was {false}:     6 (0%)
  Times result was cached:         44 (2%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      18 (1%)
  Times result was 'false':        11 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1131
  BDD entailment checks:           541
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          8
Number of abstraction locations:          11
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         80
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 3.33
Number of irrelevant predicates:          25 (31%)
Number of preds handled by boolean abs:   19 (24%)
  Total number of models for allsat:      20
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.11

Time for post operator:                  4.009s
  Time for path formula creation:        3.969s
Time for strengthen operator:            0.062s
Time for prec operator:                  0.462s
  Time for abstraction:                  0.292s (Max:     0.066s, Count: 2191)
    Boolean abstraction:                 0.093s
    Solving time:                        0.071s (Max:     0.023s)
    Model enumeration time:              0.011s
    Time for BDD construction:           0.006s (Max:     0.004s)
Time for merge operator:                 0.089s
Time for coverage check:                 0.041s
  Time for BDD entailment checks:        0.037s
Total time for SMT solver (w/o itp):     0.082s

Number of path formula cache hits:   2850 (25%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.818s

Total number of created targets for pointer analysis: 3242
   Number of created targets for uf: *unsigned_short_int is 39
   Number of created targets for uf: *signed_int is 38
   Number of created targets for uf: *unsigned_char is 19
   Number of created targets for uf: *(struct_synth_operations)* is 12


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          62 (count: 2823, min: 0, max: 60, avg: 0.02)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.195s
Automaton transfers with branching:                0
Automaton transfer successors:                        10295 (count: 10295, min: 1, max: 1, avg: 1.00) [1 x 10295]

CPA algorithm statistics
------------------------
Number of iterations:            7458
Max size of waitlist:            69
Average size of waitlist:        27
Number of computed successors:   8310
Max successors for one state:    2
Number of times merged:          295
Number of times stopped:         836
Number of times breaked:         5

Total time for CPA algorithm:         6.631s (Max:     3.143s)
  Time for choose from waitlist:      0.038s
  Time for precision adjustment:      0.888s
  Time for transfer relation:         5.091s
  Time for merge operator:            0.164s
  Time for stop operator:             0.096s
  Time for adding to reached set:     0.127s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  69 (count: 5, min: 9, max: 16, avg: 13.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.070s
  Counterexample analysis:                             1.025s (Max:     0.222s, Calls: 5)
    Refinement sat check:                              0.939s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.004s
  ARG update:                                          0.003s

Length of refined path (in blocks):                      64 (count: 5, min: 8, max: 15, avg: 12.80)
Number of affected states:                               39 (count: 5, min: 3, max: 10, avg: 7.80)
Length (states) of path with itp 'true':                 20 (count: 5, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp non-trivial itp:        39 (count: 5, min: 3, max: 10, avg: 7.80)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          14 (count: 5, min: 2, max: 3, avg: 2.80)
Equal non-trivial interpolants along paths:              20 (count: 5, min: 0, max: 6, avg: 4.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 5340
Max. size of reached set after ref.:  5251
Avg. size of reached set before ref.: 2546.60
Avg. size of reached set after ref.:  2478.60

Total time for CEGAR algorithm:       7.840s
Time for refinements:                 1.188s
Average time for refinement:          0.237s
Max time for refinement:              0.279s

Code Coverage
-----------------------------
  Function coverage:      0.848
  Visited lines:          1423
  Total lines:            1450
  Line coverage:          0.981
  Visited conditions:     382
  Total conditions:       384
  Condition coverage:     0.995

CPAchecker general statistics
-----------------------------
Number of program locations:     1936
Number of CFA edges:             2218
Number of relevant variables:    231
Number of functions:             46
Number of loops:                 21
Size of reached set:             7124
  Number of reached locations:   1014 (52%)
    Avg states per location:     7
    Max states per location:     312 (at node N12)
  Number of reached functions:   39 (85%)
  Number of partitions:          7124
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.305s
  Time for loading CPAs:          0.935s
  Time for loading parser:        0.727s
  Time for CFA construction:      3.503s
    Time for parsing file(s):     0.973s
    Time for AST to CFA:          1.295s
    Time for CFA sanity check:    0.222s
    Time for post-processing:     0.798s
      Time for var class.:        0.419s
Time for Analysis:                7.840s
CPU time for analysis:            7.830s
Time for analyzing result:        0.010s
Total time for CPAchecker:       13.150s
Total CPU time for CPAchecker:   13.130s
Time for statistics:              0.233s

Time for Garbage Collector:       0.221s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     40MB (    38 MiB) avg;     73MB (    70 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     29MB (    28 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8056MB (  7683 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
