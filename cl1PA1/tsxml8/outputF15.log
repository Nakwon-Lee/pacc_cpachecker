scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/main1_true-unreach-call_sound-oss-sound-ko--32_7a--c4cb1dd.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_99kztsdk/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3267: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 3299: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3302: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3305: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5746;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5746;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5746;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5746;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3434: Dead code detected: pao_ID__ = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 3437: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 3437: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3438: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3440: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 3440: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3441: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3443: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" ((module->refptr)->incs): "qi" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3447: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 3447: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3448: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3450: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 3450: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3451: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3453: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" ((module->refptr)->incs): "ri" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3456: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 3457: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3458: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3460: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 3460: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3461: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3463: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" ((module->refptr)->incs): "ri" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3467: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 3467: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3468: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3470: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 3470: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3471: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3473: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" ((module->refptr)->incs): "re" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
      case 1UL: ;
      if (pao_ID__ == 1) {
        __asm__ ("incb %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID__ == -1) {
        __asm__ ("decb %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addb %1, %%gs:%P0": "+m" ((module->refptr)->incs): "qi" (1U));
      }
      goto ldv_14955;
      case 2UL: ;
      if (pao_ID__ == 1) {
        __asm__ ("incw %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID__ == -1) {
        __asm__ ("decw %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addw %1, %%gs:%P0": "+m" ((module->refptr)->incs): "ri" (1U));
      }
      goto ldv_14955;
      case 4UL: ;
      if (pao_ID__ == 1) {
        __asm__ ("incl %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID__ == -1) {
        __asm__ ("decl %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addl %1, %%gs:%P0": "+m" ((module->refptr)->incs): "ri" (1U));
      }
      goto ldv_14955;
      case 8UL: ;
      if (pao_ID__ == 1) {
        __asm__ ("incq %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID__ == -1) {
        __asm__ ("decq %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addq %1, %%gs:%P0": "+m" ((module->refptr)->incs): "re" (1U));
      }
      goto ldv_14955;
      default:
      __bad_percpu_size();
      } (CFACreationUtils.addEdgeToCFA, INFO)

line 3482: Dead code detected: pao_ID_____0 = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 3485: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 3485: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3486: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3488: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 3488: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3489: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3491: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" ((module->refptr)->incs): "qi" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3495: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 3495: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3496: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3498: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 3498: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3499: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3501: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" ((module->refptr)->incs): "ri" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3504: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 3505: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3506: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3508: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 3508: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3509: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3511: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" ((module->refptr)->incs): "ri" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3515: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 3515: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3516: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3518: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 3518: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3519: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3521: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" ((module->refptr)->incs): "re" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
      case 1UL: ;
      if (pao_ID_____0 == 1) {
        __asm__ ("incb %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID_____0 == -1) {
        __asm__ ("decb %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addb %1, %%gs:%P0": "+m" ((module->refptr)->incs): "qi" (1U));
      }
      goto ldv_14966;
      case 2UL: ;
      if (pao_ID_____0 == 1) {
        __asm__ ("incw %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID_____0 == -1) {
        __asm__ ("decw %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addw %1, %%gs:%P0": "+m" ((module->refptr)->incs): "ri" (1U));
      }
      goto ldv_14966;
      case 4UL: ;
      if (pao_ID_____0 == 1) {
        __asm__ ("incl %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID_____0 == -1) {
        __asm__ ("decl %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addl %1, %%gs:%P0": "+m" ((module->refptr)->incs): "ri" (1U));
      }
      goto ldv_14966;
      case 8UL: ;
      if (pao_ID_____0 == 1) {
        __asm__ ("incq %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID_____0 == -1) {
        __asm__ ("decq %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addq %1, %%gs:%P0": "+m" ((module->refptr)->incs): "re" (1U));
      }
      goto ldv_14966;
      default:
      __bad_percpu_size();
      } (CFACreationUtils.addEdgeToCFA, INFO)

line 3533: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 3533: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3534: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3536: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 3536: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3537: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3539: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" ((module->refptr)->incs): "qi" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3543: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 3543: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3544: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3546: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 3546: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3547: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3549: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" ((module->refptr)->incs): "ri" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3563: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 3563: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3564: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3566: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 3566: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3567: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3569: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" ((module->refptr)->incs): "re" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
      case 1UL: ;
      if (pao_ID_____1 == 1) {
        __asm__ ("incb %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID_____1 == -1) {
        __asm__ ("decb %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addb %1, %%gs:%P0": "+m" ((module->refptr)->incs): "qi" (1U));
      }
      goto ldv_14976;
      case 2UL: ;
      if (pao_ID_____1 == 1) {
        __asm__ ("incw %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID_____1 == -1) {
        __asm__ ("decw %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addw %1, %%gs:%P0": "+m" ((module->refptr)->incs): "ri" (1U));
      }
      goto ldv_14976;
      case 4UL: ;
      if (pao_ID_____1 == 1) {
        __asm__ ("incl %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID_____1 == -1) {
        __asm__ ("decl %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addl %1, %%gs:%P0": "+m" ((module->refptr)->incs): "ri" (1U));
      }
      goto ldv_14976;
      case 8UL: ;
      if (pao_ID_____1 == 1) {
        __asm__ ("incq %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID_____1 == -1) {
        __asm__ ("decq %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addq %1, %%gs:%P0": "+m" ((module->refptr)->incs): "re" (1U));
      }
      goto ldv_14976;
      default:
      __bad_percpu_size();
      } (CFACreationUtils.addEdgeToCFA, INFO)

line 3578: Dead code detected: pao_ID_____2 = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 3581: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 3581: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3582: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3584: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 3584: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3585: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3587: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" ((module->refptr)->incs): "qi" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3591: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 3591: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3592: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3594: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 3594: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3595: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3597: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" ((module->refptr)->incs): "ri" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3600: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 3601: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3602: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3604: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 3604: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3605: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3607: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" ((module->refptr)->incs): "ri" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3611: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 3611: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3612: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3614: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 3614: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3615: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" ((module->refptr)->incs)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3617: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" ((module->refptr)->incs): "re" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
      case 1UL: ;
      if (pao_ID_____2 == 1) {
        __asm__ ("incb %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID_____2 == -1) {
        __asm__ ("decb %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addb %1, %%gs:%P0": "+m" ((module->refptr)->incs): "qi" (1U));
      }
      goto ldv_14986;
      case 2UL: ;
      if (pao_ID_____2 == 1) {
        __asm__ ("incw %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID_____2 == -1) {
        __asm__ ("decw %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addw %1, %%gs:%P0": "+m" ((module->refptr)->incs): "ri" (1U));
      }
      goto ldv_14986;
      case 4UL: ;
      if (pao_ID_____2 == 1) {
        __asm__ ("incl %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID_____2 == -1) {
        __asm__ ("decl %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addl %1, %%gs:%P0": "+m" ((module->refptr)->incs): "ri" (1U));
      }
      goto ldv_14986;
      case 8UL: ;
      if (pao_ID_____2 == 1) {
        __asm__ ("incq %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID_____2 == -1) {
        __asm__ ("decq %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addq %1, %%gs:%P0": "+m" ((module->refptr)->incs): "re" (1U));
      }
      goto ldv_14986;
      default:
      __bad_percpu_size();
      } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
      case 1UL:
      pao_ID__ = 1;
      switch (4UL) {
      case 1UL: ;
      if (pao_ID__ == 1) {
        __asm__ ("incb %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID__ == -1) {
        __asm__ ("decb %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addb %1, %%gs:%P0": "+m" ((module->refptr)->incs): "qi" (1U));
      }
      goto ldv_14955;
      case 2UL: ;
      if (pao_ID__ == 1) {
        __asm__ ("incw %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID__ == -1) {
        __asm__ ("decw %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addw %1, %%gs:%P0": "+m" ((module->refptr)->incs): "ri" (1U));
      }
      goto ldv_14955;
      case 4UL: ;
      if (pao_ID__ == 1) {
        __asm__ ("incl %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID__ == -1) {
        __asm__ ("decl %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addl %1, %%gs:%P0": "+m" ((module->refptr)->incs): "ri" (1U));
      }
      goto ldv_14955;
      case 8UL: ;
      if (pao_ID__ == 1) {
        __asm__ ("incq %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID__ == -1) {
        __asm__ ("decq %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addq %1, %%gs:%P0": "+m" ((module->refptr)->incs): "re" (1U));
      }
      goto ldv_14955;
      default:
      __bad_percpu_size();
      }
      ldv_14955: ;
      goto ldv_14960;
      case 2UL:
      pao_ID_____0 = 1;
      switch (4UL) {
      case 1UL: ;
      if (pao_ID_____0 == 1) {
        __asm__ ("incb %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID_____0 == -1) {
        __asm__ ("decb %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addb %1, %%gs:%P0": "+m" ((module->refptr)->incs): "qi" (1U));
      }
      goto ldv_14966;
      case 2UL: ;
      if (pao_ID_____0 == 1) {
        __asm__ ("incw %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID_____0 == -1) {
        __asm__ ("decw %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addw %1, %%gs:%P0": "+m" ((module->refptr)->incs): "ri" (1U));
      }
      goto ldv_14966;
      case 4UL: ;
      if (pao_ID_____0 == 1) {
        __asm__ ("incl %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID_____0 == -1) {
        __asm__ ("decl %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addl %1, %%gs:%P0": "+m" ((module->refptr)->incs): "ri" (1U));
      }
      goto ldv_14966;
      case 8UL: ;
      if (pao_ID_____0 == 1) {
        __asm__ ("incq %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID_____0 == -1) {
        __asm__ ("decq %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addq %1, %%gs:%P0": "+m" ((module->refptr)->incs): "re" (1U));
      }
      goto ldv_14966;
      default:
      __bad_percpu_size();
      }
      ldv_14966: ;
      goto ldv_14960;
      case 4UL:
      pao_ID_____1 = 1;
      switch (4UL) {
      case 1UL: ;
      if (pao_ID_____1 == 1) {
        __asm__ ("incb %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID_____1 == -1) {
        __asm__ ("decb %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addb %1, %%gs:%P0": "+m" ((module->refptr)->incs): "qi" (1U));
      }
      goto ldv_14976;
      case 2UL: ;
      if (pao_ID_____1 == 1) {
        __asm__ ("incw %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID_____1 == -1) {
        __asm__ ("decw %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addw %1, %%gs:%P0": "+m" ((module->refptr)->incs): "ri" (1U));
      }
      goto ldv_14976;
      case 4UL: ;
      if (pao_ID_____1 == 1) {
        __asm__ ("incl %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID_____1 == -1) {
        __asm__ ("decl %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addl %1, %%gs:%P0": "+m" ((module->refptr)->incs): "ri" (1U));
      }
      goto ldv_14976;
      case 8UL: ;
      if (pao_ID_____1 == 1) {
        __asm__ ("incq %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID_____1 == -1) {
        __asm__ ("decq %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addq %1, %%gs:%P0": "+m" ((module->refptr)->incs): "re" (1U));
      }
      goto ldv_14976;
      default:
      __bad_percpu_size();
      }
      ldv_14976: ;
      goto ldv_14960;
      case 8UL:
      pao_ID_____2 = 1;
      switch (4UL) {
      case 1UL: ;
      if (pao_ID_____2 == 1) {
        __asm__ ("incb %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID_____2 == -1) {
        __asm__ ("decb %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addb %1, %%gs:%P0": "+m" ((module->refptr)->incs): "qi" (1U));
      }
      goto ldv_14986;
      case 2UL: ;
      if (pao_ID_____2 == 1) {
        __asm__ ("incw %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID_____2 == -1) {
        __asm__ ("decw %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addw %1, %%gs:%P0": "+m" ((module->refptr)->incs): "ri" (1U));
      }
      goto ldv_14986;
      case 4UL: ;
      if (pao_ID_____2 == 1) {
        __asm__ ("incl %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID_____2 == -1) {
        __asm__ ("decl %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addl %1, %%gs:%P0": "+m" ((module->refptr)->incs): "ri" (1U));
      }
      goto ldv_14986;
      case 8UL: ;
      if (pao_ID_____2 == 1) {
        __asm__ ("incq %%gs:%P0": "+m" ((module->refptr)->incs));
      } else
      if (pao_ID_____2 == -1) {
        __asm__ ("decq %%gs:%P0": "+m" ((module->refptr)->incs));
      } else {
        __asm__ ("addq %1, %%gs:%P0": "+m" ((module->refptr)->incs): "re" (1U));
      }
      goto ldv_14986;
      default:
      __bad_percpu_size();
      }
      ldv_14986: ;
      goto ldv_14960;
      default:
      __bad_size_call_parameter();
      goto ldv_14960;
      } (CFACreationUtils.addEdgeToCFA, INFO)

lines 3694-3746: Dead code detected: switch (size) (CFACreationUtils.addEdgeToCFA, INFO)

line 3695: Dead code detected: [!(size == 1U)] (CFACreationUtils.addEdgeToCFA, INFO)

lines 3696-3698: Dead code detected: __asm__ volatile ("1:\tmovb %2,%b1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorb %b1,%b1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret),
                       "=q" (*((u8 *)dst)): "m" (*((struct __large_struct *)src)),
                       "i" (1), "0" (ret)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3700: Dead code detected: [size == 2U] (CFACreationUtils.addEdgeToCFA, INFO)

line 3700: Dead code detected: [!(size == 2U)] (CFACreationUtils.addEdgeToCFA, INFO)

lines 3701-3703: Dead code detected: __asm__ volatile ("1:\tmovw %2,%w1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorw %w1,%w1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret),
                       "=r" (*((u16 *)dst)): "m" (*((struct __large_struct *)src)),
                       "i" (2), "0" (ret)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3705: Dead code detected: [size == 4U] (CFACreationUtils.addEdgeToCFA, INFO)

line 3705: Dead code detected: [!(size == 4U)] (CFACreationUtils.addEdgeToCFA, INFO)

lines 3706-3708: Dead code detected: __asm__ volatile ("1:\tmovl %2,%k1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorl %k1,%k1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret),
                       "=r" (*((u32 *)dst)): "m" (*((struct __large_struct *)src)),
                       "i" (4), "0" (ret)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3710: Dead code detected: [size == 8U] (CFACreationUtils.addEdgeToCFA, INFO)

line 3710: Dead code detected: [!(size == 8U)] (CFACreationUtils.addEdgeToCFA, INFO)

lines 3711-3713: Dead code detected: __asm__ volatile ("1:\tmovq %2,%1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorq %1,%1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret),
                       "=r" (*((u64 *)dst)): "m" (*((struct __large_struct *)src)),
                       "i" (8), "0" (ret)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3715: Dead code detected: [size == 10U] (CFACreationUtils.addEdgeToCFA, INFO)

line 3715: Dead code detected: [!(size == 10U)] (CFACreationUtils.addEdgeToCFA, INFO)

lines 3716-3718: Dead code detected: __asm__ volatile ("1:\tmovq %2,%1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorq %1,%1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret),
                       "=r" (*((u64 *)dst)): "m" (*((struct __large_struct *)src)),
                       "i" (10), "0" (ret)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3720: Dead code detected: [!(tmp___0 != 0L)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3721: Dead code detected: return (ret); (CFACreationUtils.addEdgeToCFA, INFO)

lines 3725-3727: Dead code detected: __asm__ volatile ("1:\tmovw %2,%w1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorw %w1,%w1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret),
                       "=r" (*((u16 *)dst + 8U)): "m" (*((struct __large_struct *)src + 8U)),
                       "i" (2), "0" (ret)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3729: Dead code detected: [size == 16U] (CFACreationUtils.addEdgeToCFA, INFO)

line 3729: Dead code detected: [!(size == 16U)] (CFACreationUtils.addEdgeToCFA, INFO)

lines 3730-3732: Dead code detected: __asm__ volatile ("1:\tmovq %2,%1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorq %1,%1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret),
                       "=r" (*((u64 *)dst)): "m" (*((struct __large_struct *)src)),
                       "i" (16), "0" (ret)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3734: Dead code detected: [!(tmp___1 != 0L)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3735: Dead code detected: return (ret); (CFACreationUtils.addEdgeToCFA, INFO)

lines 3739-3741: Dead code detected: __asm__ volatile ("1:\tmovq %2,%1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorq %1,%1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret),
                       "=r" (*((u64 *)dst + 8U)): "m" (*((struct __large_struct *)src + 8U)),
                       "i" (8), "0" (ret)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (size) {
  case 1U:
  __asm__ volatile ("1:\tmovb %2,%b1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorb %b1,%b1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret),
                       "=q" (*((u8 *)dst)): "m" (*((struct __large_struct *)src)),
                       "i" (1), "0" (ret));
  return (ret);
  case 2U:
  __asm__ volatile ("1:\tmovw %2,%w1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorw %w1,%w1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret),
                       "=r" (*((u16 *)dst)): "m" (*((struct __large_struct *)src)),
                       "i" (2), "0" (ret));
  return (ret);
  case 4U:
  __asm__ volatile ("1:\tmovl %2,%k1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorl %k1,%k1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret),
                       "=r" (*((u32 *)dst)): "m" (*((struct __large_struct *)src)),
                       "i" (4), "0" (ret));
  return (ret);
  case 8U:
  __asm__ volatile ("1:\tmovq %2,%1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorq %1,%1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret),
                       "=r" (*((u64 *)dst)): "m" (*((struct __large_struct *)src)),
                       "i" (8), "0" (ret));
  return (ret);
  case 10U:
  __asm__ volatile ("1:\tmovq %2,%1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorq %1,%1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret),
                       "=r" (*((u64 *)dst)): "m" (*((struct __large_struct *)src)),
                       "i" (10), "0" (ret));
  tmp___0 = ldv__builtin_expect(ret != 0, 0L);
  if (tmp___0 != 0L) {
    return (ret);
  } else {

  }
  __asm__ volatile ("1:\tmovw %2,%w1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorw %w1,%w1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret),
                       "=r" (*((u16 *)dst + 8U)): "m" (*((struct __large_struct *)src + 8U)),
                       "i" (2), "0" (ret));
  return (ret);
  case 16U:
  __asm__ volatile ("1:\tmovq %2,%1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorq %1,%1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret),
                       "=r" (*((u64 *)dst)): "m" (*((struct __large_struct *)src)),
                       "i" (16), "0" (ret));
  tmp___1 = ldv__builtin_expect(ret != 0, 0L);
  if (tmp___1 != 0L) {
    return (ret);
  } else {

  }
  __asm__ volatile ("1:\tmovq %2,%1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorq %1,%1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret),
                       "=r" (*((u64 *)dst + 8U)): "m" (*((struct __large_struct *)src + 8U)),
                       "i" (8), "0" (ret));
  return (ret);
  default:
  tmp___2 = copy_user_generic(dst, src, size);
  return ((int )tmp___2);
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 3762-3808: Dead code detected: switch (size) (CFACreationUtils.addEdgeToCFA, INFO)

line 3763: Dead code detected: [!(size == 1U)] (CFACreationUtils.addEdgeToCFA, INFO)

lines 3764-3765: Dead code detected: __asm__ volatile ("1:\tmovb %b1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret): "iq" (*((u8 *)src)),
                       "m" (*((struct __large_struct *)dst)), "i" (1), "0" (ret)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3767: Dead code detected: [size == 2U] (CFACreationUtils.addEdgeToCFA, INFO)

line 3767: Dead code detected: [!(size == 2U)] (CFACreationUtils.addEdgeToCFA, INFO)

lines 3768-3769: Dead code detected: __asm__ volatile ("1:\tmovw %w1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret): "ir" (*((u16 *)src)),
                       "m" (*((struct __large_struct *)dst)), "i" (2), "0" (ret)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3771: Dead code detected: [size == 4U] (CFACreationUtils.addEdgeToCFA, INFO)

line 3771: Dead code detected: [!(size == 4U)] (CFACreationUtils.addEdgeToCFA, INFO)

lines 3772-3773: Dead code detected: __asm__ volatile ("1:\tmovl %k1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret): "ir" (*((u32 *)src)),
                       "m" (*((struct __large_struct *)dst)), "i" (4), "0" (ret)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3775: Dead code detected: [size == 8U] (CFACreationUtils.addEdgeToCFA, INFO)

line 3775: Dead code detected: [!(size == 8U)] (CFACreationUtils.addEdgeToCFA, INFO)

lines 3776-3777: Dead code detected: __asm__ volatile ("1:\tmovq %1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret): "er" (*((u64 *)src)),
                       "m" (*((struct __large_struct *)dst)), "i" (8), "0" (ret)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3779: Dead code detected: [size == 10U] (CFACreationUtils.addEdgeToCFA, INFO)

line 3779: Dead code detected: [!(size == 10U)] (CFACreationUtils.addEdgeToCFA, INFO)

lines 3780-3781: Dead code detected: __asm__ volatile ("1:\tmovq %1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret): "er" (*((u64 *)src)),
                       "m" (*((struct __large_struct *)dst)), "i" (10), "0" (ret)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3783: Dead code detected: [!(tmp___0 != 0L)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3784: Dead code detected: return (ret); (CFACreationUtils.addEdgeToCFA, INFO)

line 3788: Dead code detected: __asm__ volatile ("": : : "memory"); (CFACreationUtils.addEdgeToCFA, INFO)

line 3792: Dead code detected: [size == 16U] (CFACreationUtils.addEdgeToCFA, INFO)

line 3792: Dead code detected: [!(size == 16U)] (CFACreationUtils.addEdgeToCFA, INFO)

lines 3793-3794: Dead code detected: __asm__ volatile ("1:\tmovq %1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret): "er" (*((u64 *)src)),
                       "m" (*((struct __large_struct *)dst)), "i" (16), "0" (ret)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3796: Dead code detected: [!(tmp___1 != 0L)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3797: Dead code detected: return (ret); (CFACreationUtils.addEdgeToCFA, INFO)

line 3801: Dead code detected: __asm__ volatile ("": : : "memory"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (size) {
  case 1U:
  __asm__ volatile ("1:\tmovb %b1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret): "iq" (*((u8 *)src)),
                       "m" (*((struct __large_struct *)dst)), "i" (1), "0" (ret));
  return (ret);
  case 2U:
  __asm__ volatile ("1:\tmovw %w1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret): "ir" (*((u16 *)src)),
                       "m" (*((struct __large_struct *)dst)), "i" (2), "0" (ret));
  return (ret);
  case 4U:
  __asm__ volatile ("1:\tmovl %k1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret): "ir" (*((u32 *)src)),
                       "m" (*((struct __large_struct *)dst)), "i" (4), "0" (ret));
  return (ret);
  case 8U:
  __asm__ volatile ("1:\tmovq %1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret): "er" (*((u64 *)src)),
                       "m" (*((struct __large_struct *)dst)), "i" (8), "0" (ret));
  return (ret);
  case 10U:
  __asm__ volatile ("1:\tmovq %1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret): "er" (*((u64 *)src)),
                       "m" (*((struct __large_struct *)dst)), "i" (10), "0" (ret));
  tmp___0 = ldv__builtin_expect(ret != 0, 0L);
  if (tmp___0 != 0L) {
    return (ret);
  } else {

  }
  __asm__ volatile ("": : : "memory");
  __asm__ volatile ("1:\tmovw %w1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret): "ir" (*((u16 *)src + 4UL)),
                       "m" (*((struct __large_struct *)dst + 4U)), "i" (2), "0" (ret));
  return (ret);
  case 16U:
  __asm__ volatile ("1:\tmovq %1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret): "er" (*((u64 *)src)),
                       "m" (*((struct __large_struct *)dst)), "i" (16), "0" (ret));
  tmp___1 = ldv__builtin_expect(ret != 0, 0L);
  if (tmp___1 != 0L) {
    return (ret);
  } else {

  }
  __asm__ volatile ("": : : "memory");
  __asm__ volatile ("1:\tmovq %1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (ret): "er" (*((u64 *)src + 1UL)),
                       "m" (*((struct __large_struct *)dst + 1U)), "i" (8), "0" (ret));
  return (ret);
  default:
  tmp___2 = copy_user_generic(dst, src, size);
  return ((int )tmp___2);
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 3950-3952: Dead code detected: __asm__ volatile ("1:\tmovb %2,%b1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorb %b1,%b1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err),
                       "=q" (__gu_val): "m" (*((struct __large_struct *)(& ((mixer_vol_table *)arg)->num))),
                       "i" (-14), "0" (__gu_err)); (CFACreationUtils.addEdgeToCFA, INFO)

lines 3955-3957: Dead code detected: __asm__ volatile ("1:\tmovw %2,%w1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorw %w1,%w1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err),
                       "=r" (__gu_val): "m" (*((struct __large_struct *)(& ((mixer_vol_table *)arg)->num))),
                       "i" (-14), "0" (__gu_err)); (CFACreationUtils.addEdgeToCFA, INFO)

lines 3965-3967: Dead code detected: __asm__ volatile ("1:\tmovq %2,%1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorq %1,%1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err),
                       "=r" (__gu_val): "m" (*((struct __large_struct *)(& ((mixer_vol_table *)arg)->num))),
                       "i" (-14), "0" (__gu_err)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("1:\tmovb %2,%b1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorb %b1,%b1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err),
                       "=q" (__gu_val): "m" (*((struct __large_struct *)(& ((mixer_vol_table *)arg)->num))),
                       "i" (-14), "0" (__gu_err));
  goto ldv_25767;
  case 2UL:
  __asm__ volatile ("1:\tmovw %2,%w1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorw %w1,%w1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err),
                       "=r" (__gu_val): "m" (*((struct __large_struct *)(& ((mixer_vol_table *)arg)->num))),
                       "i" (-14), "0" (__gu_err));
  goto ldv_25767;
  case 4UL:
  __asm__ volatile ("1:\tmovl %2,%k1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorl %k1,%k1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err),
                       "=r" (__gu_val): "m" (*((struct __large_struct *)(& ((mixer_vol_table *)arg)->num))),
                       "i" (-14), "0" (__gu_err));
  goto ldv_25767;
  case 8UL:
  __asm__ volatile ("1:\tmovq %2,%1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorq %1,%1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err),
                       "=r" (__gu_val): "m" (*((struct __large_struct *)(& ((mixer_vol_table *)arg)->num))),
                       "i" (-14), "0" (__gu_err));
  goto ldv_25767;
  default:
  tmp = __get_user_bad();
  __gu_val = (unsigned long )tmp;
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 4324-4325: Dead code detected: __asm__ volatile ("1:\tmovb %b1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err): "iq" (198658),
                         "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err)); (CFACreationUtils.addEdgeToCFA, INFO)

lines 4328-4329: Dead code detected: __asm__ volatile ("1:\tmovw %w1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err): "ir" (198658),
                         "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err)); (CFACreationUtils.addEdgeToCFA, INFO)

lines 4336-4337: Dead code detected: __asm__ volatile ("1:\tmovq %1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err): "er" (198658),
                         "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL:
    __asm__ volatile ("1:\tmovb %b1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err): "iq" (198658),
                         "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err));
    goto ldv_25868;
    case 2UL:
    __asm__ volatile ("1:\tmovw %w1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err): "ir" (198658),
                         "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err));
    goto ldv_25868;
    case 4UL:
    __asm__ volatile ("1:\tmovl %k1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err): "ir" (198658),
                         "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err));
    goto ldv_25868;
    case 8UL:
    __asm__ volatile ("1:\tmovq %1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err): "er" (198658),
                         "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err));
    goto ldv_25868;
    default:
    __put_user_bad();
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 5022: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5749: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5752: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5758: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL:
    __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" (p));
    goto ldv_25638;
    case 2UL:
    __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" (p));
    goto ldv_25638;
    case 4UL:
    __asm__ volatile ("call __get_user_4": "=a" (__ret_gu), "=d" (__val_gu): "0" (p));
    goto ldv_25638;
    case 8UL:
    __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" (p));
    goto ldv_25638;
    default:
    __asm__ volatile ("call __get_user_X": "=a" (__ret_gu), "=d" (__val_gu): "0" (p));
    goto ldv_25638;
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 5832: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5835: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5841: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL:
    __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" (p));
    goto ldv_25652;
    case 2UL:
    __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" (p));
    goto ldv_25652;
    case 4UL:
    __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" (p));
    goto ldv_25652;
    case 8UL:
    __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" (p));
    goto ldv_25652;
    default:
    __asm__ volatile ("call __get_user_X": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" (p));
    goto ldv_25652;
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 5863: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5866: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5872: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL:
    __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" (p));
    goto ldv_25663;
    case 2UL:
    __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" (p));
    goto ldv_25663;
    case 4UL:
    __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" (p));
    goto ldv_25663;
    case 8UL:
    __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" (p));
    goto ldv_25663;
    default:
    __asm__ volatile ("call __get_user_X": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" (p));
    goto ldv_25663;
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 5897: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___2), "=d" (__val_gu___2): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5900: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___2), "=d" (__val_gu___2): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5906: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___2), "=d" (__val_gu___2): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL:
    __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___2), "=d" (__val_gu___2): "0" (p));
    goto ldv_25673;
    case 2UL:
    __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___2), "=d" (__val_gu___2): "0" (p));
    goto ldv_25673;
    case 4UL:
    __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___2), "=d" (__val_gu___2): "0" (p));
    goto ldv_25673;
    case 8UL:
    __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___2), "=d" (__val_gu___2): "0" (p));
    goto ldv_25673;
    default:
    __asm__ volatile ("call __get_user_X": "=a" (__ret_gu___2), "=d" (__val_gu___2): "0" (p));
    goto ldv_25673;
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 5941: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___3), "=d" (__val_gu___3): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5944: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___3), "=d" (__val_gu___3): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5950: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___3), "=d" (__val_gu___3): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL:
    __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___3), "=d" (__val_gu___3): "0" (p));
    goto ldv_25686;
    case 2UL:
    __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___3), "=d" (__val_gu___3): "0" (p));
    goto ldv_25686;
    case 4UL:
    __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___3), "=d" (__val_gu___3): "0" (p));
    goto ldv_25686;
    case 8UL:
    __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___3), "=d" (__val_gu___3): "0" (p));
    goto ldv_25686;
    default:
    __asm__ volatile ("call __get_user_X": "=a" (__ret_gu___3), "=d" (__val_gu___3): "0" (p));
    goto ldv_25686;
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 6015: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" (p): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 6018: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" (p): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 6024: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" (p): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" (p): "ebx");
  goto ldv_25700;
  case 2UL:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" (p): "ebx");
  goto ldv_25700;
  case 4UL:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" (p): "ebx");
  goto ldv_25700;
  case 8UL:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" (p): "ebx");
  goto ldv_25700;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu): "0" (__pu_val), "c" (p): "ebx");
  goto ldv_25700;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6340: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" ((int *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6343: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" ((int *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6349: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" ((int *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" ((int *)arg));
  goto ldv_25760;
  case 2UL:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" ((int *)arg));
  goto ldv_25760;
  case 4UL:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu), "=d" (__val_gu): "0" ((int *)arg));
  goto ldv_25760;
  case 8UL:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" ((int *)arg));
  goto ldv_25760;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu), "=d" (__val_gu): "0" ((int *)arg));
  goto ldv_25760;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6461: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((int *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6464: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((int *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6470: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((int *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((int *)arg));
  goto ldv_25774;
  case 2UL:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((int *)arg));
  goto ldv_25774;
  case 4UL:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((int *)arg));
  goto ldv_25774;
  case 8UL:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((int *)arg));
  goto ldv_25774;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((int *)arg));
  goto ldv_25774;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6680: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((int *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6683: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((int *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6689: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((int *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((int *)arg));
  goto ldv_25806;
  case 2UL:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((int *)arg));
  goto ldv_25806;
  case 4UL:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((int *)arg));
  goto ldv_25806;
  case 8UL:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((int *)arg));
  goto ldv_25806;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((int *)arg));
  goto ldv_25806;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6744: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 6747: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 6753: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx");
  goto ldv_25816;
  case 2UL:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx");
  goto ldv_25816;
  case 4UL:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx");
  goto ldv_25816;
  case 8UL:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx");
  goto ldv_25816;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx");
  goto ldv_25816;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6784: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6834: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6837: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6840: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_1929;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1929;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1929;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1929;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6863: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6866: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6869: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5738;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5738;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5738;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5738;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 9118: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9767: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned char *)addr + (unsigned long )(hdr_size + i))); (CFACreationUtils.addEdgeToCFA, INFO)

line 9770: Dead code detected: __asm__ volatile ("call __get_user_4": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned char *)addr + (unsigned long )(hdr_size + i))); (CFACreationUtils.addEdgeToCFA, INFO)

line 9773: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned char *)addr + (unsigned long )(hdr_size + i))); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned char *)addr + (unsigned long )(hdr_size + i)));
  goto ldv_25808;
  case 2UL:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned char *)addr + (unsigned long )(hdr_size + i)));
  goto ldv_25808;
  case 4UL:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned char *)addr + (unsigned long )(hdr_size + i)));
  goto ldv_25808;
  case 8UL:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned char *)addr + (unsigned long )(hdr_size + i)));
  goto ldv_25808;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned char *)addr + (unsigned long )(hdr_size + i)));
  goto ldv_25808;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10091: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10587: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" ((int *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 10590: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" ((int *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 10596: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" ((int *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL:
    __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" ((int *)arg));
    goto ldv_25656;
    case 2UL:
    __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" ((int *)arg));
    goto ldv_25656;
    case 4UL:
    __asm__ volatile ("call __get_user_4": "=a" (__ret_gu), "=d" (__val_gu): "0" ((int *)arg));
    goto ldv_25656;
    case 8UL:
    __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" ((int *)arg));
    goto ldv_25656;
    default:
    __asm__ volatile ("call __get_user_X": "=a" (__ret_gu), "=d" (__val_gu): "0" ((int *)arg));
    goto ldv_25656;
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 10620: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 10623: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 10629: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL:
    __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx");
    goto ldv_25665;
    case 2UL:
    __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx");
    goto ldv_25665;
    case 4UL:
    __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx");
    goto ldv_25665;
    case 8UL:
    __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx");
    goto ldv_25665;
    default:
    __asm__ volatile ("call __put_user_X": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx");
    goto ldv_25665;
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 10707: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12566: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12569: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12575: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" (p));
  goto ldv_25947;
  case 2UL:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" (p));
  goto ldv_25947;
  case 4UL:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu), "=d" (__val_gu): "0" (p));
  goto ldv_25947;
  case 8UL:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" (p));
  goto ldv_25947;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu), "=d" (__val_gu): "0" (p));
  goto ldv_25947;
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 12629-12631: Dead code detected: __asm__ volatile ("1:\tmovb %2,%b1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorb %b1,%b1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err),
                       "=q" (__gu_val): "m" (*((struct __large_struct *)p)), "i" (-14),
                       "0" (__gu_err)); (CFACreationUtils.addEdgeToCFA, INFO)

lines 12634-12636: Dead code detected: __asm__ volatile ("1:\tmovw %2,%w1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorw %w1,%w1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err),
                       "=r" (__gu_val): "m" (*((struct __large_struct *)p)), "i" (-14),
                       "0" (__gu_err)); (CFACreationUtils.addEdgeToCFA, INFO)

lines 12644-12646: Dead code detected: __asm__ volatile ("1:\tmovq %2,%1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorq %1,%1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err),
                       "=r" (__gu_val): "m" (*((struct __large_struct *)p)), "i" (-14),
                       "0" (__gu_err)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("1:\tmovb %2,%b1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorb %b1,%b1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err),
                       "=q" (__gu_val): "m" (*((struct __large_struct *)p)), "i" (-14),
                       "0" (__gu_err));
  goto ldv_25964;
  case 2UL:
  __asm__ volatile ("1:\tmovw %2,%w1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorw %w1,%w1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err),
                       "=r" (__gu_val): "m" (*((struct __large_struct *)p)), "i" (-14),
                       "0" (__gu_err));
  goto ldv_25964;
  case 4UL:
  __asm__ volatile ("1:\tmovl %2,%k1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorl %k1,%k1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err),
                       "=r" (__gu_val): "m" (*((struct __large_struct *)p)), "i" (-14),
                       "0" (__gu_err));
  goto ldv_25964;
  case 8UL:
  __asm__ volatile ("1:\tmovq %2,%1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorq %1,%1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err),
                       "=r" (__gu_val): "m" (*((struct __large_struct *)p)), "i" (-14),
                       "0" (__gu_err));
  goto ldv_25964;
  default:
  tmp___3 = __get_user_bad();
  __gu_val = (unsigned long )tmp___3;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 12712: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12715: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12721: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" (p));
  goto ldv_25977;
  case 2UL:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" (p));
  goto ldv_25977;
  case 4UL:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" (p));
  goto ldv_25977;
  case 8UL:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" (p));
  goto ldv_25977;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" (p));
  goto ldv_25977;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 12747: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12750: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12756: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" (p));
  goto ldv_25989;
  case 2UL:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" (p));
  goto ldv_25989;
  case 4UL:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" (p));
  goto ldv_25989;
  case 8UL:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" (p));
  goto ldv_25989;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" (p));
  goto ldv_25989;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 12791: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___2), "=d" (__val_gu___2): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12794: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___2), "=d" (__val_gu___2): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12800: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___2), "=d" (__val_gu___2): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___2), "=d" (__val_gu___2): "0" (p));
  goto ldv_26001;
  case 2UL:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___2), "=d" (__val_gu___2): "0" (p));
  goto ldv_26001;
  case 4UL:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___2), "=d" (__val_gu___2): "0" (p));
  goto ldv_26001;
  case 8UL:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___2), "=d" (__val_gu___2): "0" (p));
  goto ldv_26001;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu___2), "=d" (__val_gu___2): "0" (p));
  goto ldv_26001;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 12829: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___3), "=d" (__val_gu___3): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12832: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___3), "=d" (__val_gu___3): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12838: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___3), "=d" (__val_gu___3): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___3), "=d" (__val_gu___3): "0" (p));
  goto ldv_26011;
  case 2UL:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___3), "=d" (__val_gu___3): "0" (p));
  goto ldv_26011;
  case 4UL:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___3), "=d" (__val_gu___3): "0" (p));
  goto ldv_26011;
  case 8UL:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___3), "=d" (__val_gu___3): "0" (p));
  goto ldv_26011;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu___3), "=d" (__val_gu___3): "0" (p));
  goto ldv_26011;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 12867: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___4), "=d" (__val_gu___4): "0" (& ((struct synth_info *)arg)->device)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12870: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___4), "=d" (__val_gu___4): "0" (& ((struct synth_info *)arg)->device)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12876: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___4), "=d" (__val_gu___4): "0" (& ((struct synth_info *)arg)->device)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___4), "=d" (__val_gu___4): "0" (& ((struct synth_info *)arg)->device));
  goto ldv_26021;
  case 2UL:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___4), "=d" (__val_gu___4): "0" (& ((struct synth_info *)arg)->device));
  goto ldv_26021;
  case 4UL:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___4), "=d" (__val_gu___4): "0" (& ((struct synth_info *)arg)->device));
  goto ldv_26021;
  case 8UL:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___4), "=d" (__val_gu___4): "0" (& ((struct synth_info *)arg)->device));
  goto ldv_26021;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu___4), "=d" (__val_gu___4): "0" (& ((struct synth_info *)arg)->device));
  goto ldv_26021;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 12905: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___5), "=d" (__val_gu___5): "0" (& ((struct synth_info *)arg)->device)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12908: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___5), "=d" (__val_gu___5): "0" (& ((struct synth_info *)arg)->device)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12914: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___5), "=d" (__val_gu___5): "0" (& ((struct synth_info *)arg)->device)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___5), "=d" (__val_gu___5): "0" (& ((struct synth_info *)arg)->device));
  goto ldv_26031;
  case 2UL:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___5), "=d" (__val_gu___5): "0" (& ((struct synth_info *)arg)->device));
  goto ldv_26031;
  case 4UL:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___5), "=d" (__val_gu___5): "0" (& ((struct synth_info *)arg)->device));
  goto ldv_26031;
  case 8UL:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___5), "=d" (__val_gu___5): "0" (& ((struct synth_info *)arg)->device));
  goto ldv_26031;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu___5), "=d" (__val_gu___5): "0" (& ((struct synth_info *)arg)->device));
  goto ldv_26031;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 12964: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___6), "=d" (__val_gu___6): "0" (& ((struct midi_info *)arg)->device)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12967: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___6), "=d" (__val_gu___6): "0" (& ((struct midi_info *)arg)->device)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12973: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___6), "=d" (__val_gu___6): "0" (& ((struct midi_info *)arg)->device)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___6), "=d" (__val_gu___6): "0" (& ((struct midi_info *)arg)->device));
  goto ldv_26048;
  case 2UL:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___6), "=d" (__val_gu___6): "0" (& ((struct midi_info *)arg)->device));
  goto ldv_26048;
  case 4UL:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___6), "=d" (__val_gu___6): "0" (& ((struct midi_info *)arg)->device));
  goto ldv_26048;
  case 8UL:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___6), "=d" (__val_gu___6): "0" (& ((struct midi_info *)arg)->device));
  goto ldv_26048;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu___6), "=d" (__val_gu___6): "0" (& ((struct midi_info *)arg)->device));
  goto ldv_26048;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 12998: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___7), "=d" (__val_gu___7): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 13001: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___7), "=d" (__val_gu___7): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 13007: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___7), "=d" (__val_gu___7): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___7), "=d" (__val_gu___7): "0" (p));
  goto ldv_26058;
  case 2UL:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___7), "=d" (__val_gu___7): "0" (p));
  goto ldv_26058;
  case 4UL:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___7), "=d" (__val_gu___7): "0" (p));
  goto ldv_26058;
  case 8UL:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___7), "=d" (__val_gu___7): "0" (p));
  goto ldv_26058;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu___7), "=d" (__val_gu___7): "0" (p));
  goto ldv_26058;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 13036: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___8), "=d" (__val_gu___8): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 13039: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___8), "=d" (__val_gu___8): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 13045: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___8), "=d" (__val_gu___8): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___8), "=d" (__val_gu___8): "0" (p));
  goto ldv_26068;
  case 2UL:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___8), "=d" (__val_gu___8): "0" (p));
  goto ldv_26068;
  case 4UL:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___8), "=d" (__val_gu___8): "0" (p));
  goto ldv_26068;
  case 8UL:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___8), "=d" (__val_gu___8): "0" (p));
  goto ldv_26068;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu___8), "=d" (__val_gu___8): "0" (p));
  goto ldv_26068;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 13096: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" (p): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 13099: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" (p): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 13105: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" (p): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" (p): "ebx");
  goto ldv_26078;
  case 2UL:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" (p): "ebx");
  goto ldv_26078;
  case 4UL:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" (p): "ebx");
  goto ldv_26078;
  case 8UL:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" (p): "ebx");
  goto ldv_26078;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu): "0" (__pu_val), "c" (p): "ebx");
  goto ldv_26078;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 13318: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13563: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 13566: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 13572: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" (p));
  goto ldv_25617;
  case 2UL:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" (p));
  goto ldv_25617;
  case 4UL:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu), "=d" (__val_gu): "0" (p));
  goto ldv_25617;
  case 8UL:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" (p));
  goto ldv_25617;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu), "=d" (__val_gu): "0" (p));
  goto ldv_25617;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 13606: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 13609: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 13615: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" (p));
  goto ldv_25627;
  case 2UL:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" (p));
  goto ldv_25627;
  case 4UL:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" (p));
  goto ldv_25627;
  case 8UL:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" (p));
  goto ldv_25627;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" (p));
  goto ldv_25627;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 13654: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 13657: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

line 13663: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" (p)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" (p));
  goto ldv_25637;
  case 2UL:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" (p));
  goto ldv_25637;
  case 4UL:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" (p));
  goto ldv_25637;
  case 8UL:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" (p));
  goto ldv_25637;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" (p));
  goto ldv_25637;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 13695: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" (p): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 13698: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" (p): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 13704: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" (p): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" (p): "ebx");
  goto ldv_25649;
  case 2UL:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" (p): "ebx");
  goto ldv_25649;
  case 4UL:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" (p): "ebx");
  goto ldv_25649;
  case 8UL:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" (p): "ebx");
  goto ldv_25649;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu): "0" (__pu_val), "c" (p): "ebx");
  goto ldv_25649;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 13902: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

lines 14146-14147: Dead code detected: __asm__ volatile ("1:\tmovb %b1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err): "iq" (1),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err)); (CFACreationUtils.addEdgeToCFA, INFO)

lines 14150-14151: Dead code detected: __asm__ volatile ("1:\tmovw %w1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err): "ir" (1),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err)); (CFACreationUtils.addEdgeToCFA, INFO)

lines 14158-14159: Dead code detected: __asm__ volatile ("1:\tmovq %1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err): "er" (1),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("1:\tmovb %b1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err): "iq" (1),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err));
  goto ldv_25602;
  case 2UL:
  __asm__ volatile ("1:\tmovw %w1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err): "ir" (1),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err));
  goto ldv_25602;
  case 4UL:
  __asm__ volatile ("1:\tmovl %k1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err): "ir" (1),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err));
  goto ldv_25602;
  case 8UL:
  __asm__ volatile ("1:\tmovq %1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err): "er" (1),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err));
  goto ldv_25602;
  default:
  __put_user_bad();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 14180-14182: Dead code detected: __asm__ volatile ("1:\tmovb %2,%b1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorb %b1,%b1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err),
                       "=q" (__gu_val): "m" (*((struct __large_struct *)p)), "i" (-14),
                       "0" (__gu_err)); (CFACreationUtils.addEdgeToCFA, INFO)

lines 14185-14187: Dead code detected: __asm__ volatile ("1:\tmovw %2,%w1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorw %w1,%w1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err),
                       "=r" (__gu_val): "m" (*((struct __large_struct *)p)), "i" (-14),
                       "0" (__gu_err)); (CFACreationUtils.addEdgeToCFA, INFO)

lines 14195-14197: Dead code detected: __asm__ volatile ("1:\tmovq %2,%1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorq %1,%1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err),
                       "=r" (__gu_val): "m" (*((struct __large_struct *)p)), "i" (-14),
                       "0" (__gu_err)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("1:\tmovb %2,%b1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorb %b1,%b1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err),
                       "=q" (__gu_val): "m" (*((struct __large_struct *)p)), "i" (-14),
                       "0" (__gu_err));
  goto ldv_25615;
  case 2UL:
  __asm__ volatile ("1:\tmovw %2,%w1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorw %w1,%w1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err),
                       "=r" (__gu_val): "m" (*((struct __large_struct *)p)), "i" (-14),
                       "0" (__gu_err));
  goto ldv_25615;
  case 4UL:
  __asm__ volatile ("1:\tmovl %2,%k1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorl %k1,%k1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err),
                       "=r" (__gu_val): "m" (*((struct __large_struct *)p)), "i" (-14),
                       "0" (__gu_err));
  goto ldv_25615;
  case 8UL:
  __asm__ volatile ("1:\tmovq %2,%1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorq %1,%1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err),
                       "=r" (__gu_val): "m" (*((struct __large_struct *)p)), "i" (-14),
                       "0" (__gu_err));
  goto ldv_25615;
  default:
  tmp = __get_user_bad();
  __gu_val = (unsigned long )tmp;
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 14228-14229: Dead code detected: __asm__ volatile ("1:\tmovb %b1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err___0): "iq" (curr_timebase___0),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err___0)); (CFACreationUtils.addEdgeToCFA, INFO)

lines 14232-14233: Dead code detected: __asm__ volatile ("1:\tmovw %w1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err___0): "ir" (curr_timebase___0),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err___0)); (CFACreationUtils.addEdgeToCFA, INFO)

lines 14240-14241: Dead code detected: __asm__ volatile ("1:\tmovq %1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err___0): "er" (curr_timebase___0),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err___0)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("1:\tmovb %b1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err___0): "iq" (curr_timebase___0),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err___0));
  goto ldv_25623;
  case 2UL:
  __asm__ volatile ("1:\tmovw %w1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err___0): "ir" (curr_timebase___0),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err___0));
  goto ldv_25623;
  case 4UL:
  __asm__ volatile ("1:\tmovl %k1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err___0): "ir" (curr_timebase___0),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err___0));
  goto ldv_25623;
  case 8UL:
  __asm__ volatile ("1:\tmovq %1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err___0): "er" (curr_timebase___0),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err___0));
  goto ldv_25623;
  default:
  __put_user_bad();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 14252-14254: Dead code detected: __asm__ volatile ("1:\tmovb %2,%b1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorb %b1,%b1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err___0),
                       "=q" (__gu_val___0): "m" (*((struct __large_struct *)p)), "i" (-14),
                       "0" (__gu_err___0)); (CFACreationUtils.addEdgeToCFA, INFO)

lines 14257-14259: Dead code detected: __asm__ volatile ("1:\tmovw %2,%w1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorw %w1,%w1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err___0),
                       "=r" (__gu_val___0): "m" (*((struct __large_struct *)p)), "i" (-14),
                       "0" (__gu_err___0)); (CFACreationUtils.addEdgeToCFA, INFO)

lines 14267-14269: Dead code detected: __asm__ volatile ("1:\tmovq %2,%1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorq %1,%1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err___0),
                       "=r" (__gu_val___0): "m" (*((struct __large_struct *)p)), "i" (-14),
                       "0" (__gu_err___0)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("1:\tmovb %2,%b1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorb %b1,%b1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err___0),
                       "=q" (__gu_val___0): "m" (*((struct __large_struct *)p)), "i" (-14),
                       "0" (__gu_err___0));
  goto ldv_25633;
  case 2UL:
  __asm__ volatile ("1:\tmovw %2,%w1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorw %w1,%w1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err___0),
                       "=r" (__gu_val___0): "m" (*((struct __large_struct *)p)), "i" (-14),
                       "0" (__gu_err___0));
  goto ldv_25633;
  case 4UL:
  __asm__ volatile ("1:\tmovl %2,%k1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorl %k1,%k1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err___0),
                       "=r" (__gu_val___0): "m" (*((struct __large_struct *)p)), "i" (-14),
                       "0" (__gu_err___0));
  goto ldv_25633;
  case 8UL:
  __asm__ volatile ("1:\tmovq %2,%1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorq %1,%1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err___0),
                       "=r" (__gu_val___0): "m" (*((struct __large_struct *)p)), "i" (-14),
                       "0" (__gu_err___0));
  goto ldv_25633;
  default:
  tmp___0 = __get_user_bad();
  __gu_val___0 = (unsigned long )tmp___0;
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 14305-14306: Dead code detected: __asm__ volatile ("1:\tmovb %b1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err___1): "iq" (curr_tempo___0),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err___1)); (CFACreationUtils.addEdgeToCFA, INFO)

lines 14309-14310: Dead code detected: __asm__ volatile ("1:\tmovw %w1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err___1): "ir" (curr_tempo___0),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err___1)); (CFACreationUtils.addEdgeToCFA, INFO)

lines 14317-14318: Dead code detected: __asm__ volatile ("1:\tmovq %1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err___1): "er" (curr_tempo___0),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err___1)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("1:\tmovb %b1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err___1): "iq" (curr_tempo___0),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err___1));
  goto ldv_25641;
  case 2UL:
  __asm__ volatile ("1:\tmovw %w1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err___1): "ir" (curr_tempo___0),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err___1));
  goto ldv_25641;
  case 4UL:
  __asm__ volatile ("1:\tmovl %k1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err___1): "ir" (curr_tempo___0),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err___1));
  goto ldv_25641;
  case 8UL:
  __asm__ volatile ("1:\tmovq %1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err___1): "er" (curr_tempo___0),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err___1));
  goto ldv_25641;
  default:
  __put_user_bad();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 14329-14331: Dead code detected: __asm__ volatile ("1:\tmovb %2,%b1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorb %b1,%b1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err___1),
                       "=q" (__gu_val___1): "m" (*((struct __large_struct *)p)), "i" (-14),
                       "0" (__gu_err___1)); (CFACreationUtils.addEdgeToCFA, INFO)

lines 14334-14336: Dead code detected: __asm__ volatile ("1:\tmovw %2,%w1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorw %w1,%w1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err___1),
                       "=r" (__gu_val___1): "m" (*((struct __large_struct *)p)), "i" (-14),
                       "0" (__gu_err___1)); (CFACreationUtils.addEdgeToCFA, INFO)

lines 14344-14346: Dead code detected: __asm__ volatile ("1:\tmovq %2,%1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorq %1,%1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err___1),
                       "=r" (__gu_val___1): "m" (*((struct __large_struct *)p)), "i" (-14),
                       "0" (__gu_err___1)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("1:\tmovb %2,%b1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorb %b1,%b1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err___1),
                       "=q" (__gu_val___1): "m" (*((struct __large_struct *)p)), "i" (-14),
                       "0" (__gu_err___1));
  goto ldv_25651;
  case 2UL:
  __asm__ volatile ("1:\tmovw %2,%w1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorw %w1,%w1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err___1),
                       "=r" (__gu_val___1): "m" (*((struct __large_struct *)p)), "i" (-14),
                       "0" (__gu_err___1));
  goto ldv_25651;
  case 4UL:
  __asm__ volatile ("1:\tmovl %2,%k1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorl %k1,%k1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err___1),
                       "=r" (__gu_val___1): "m" (*((struct __large_struct *)p)), "i" (-14),
                       "0" (__gu_err___1));
  goto ldv_25651;
  case 8UL:
  __asm__ volatile ("1:\tmovq %2,%1\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\txorq %1,%1\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__gu_err___1),
                       "=r" (__gu_val___1): "m" (*((struct __large_struct *)p)), "i" (-14),
                       "0" (__gu_err___1));
  goto ldv_25651;
  default:
  tmp___2 = __get_user_bad();
  __gu_val___1 = (unsigned long )tmp___2;
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 14368-14369: Dead code detected: __asm__ volatile ("1:\tmovb %b1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err___2): "iq" (val),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err___2)); (CFACreationUtils.addEdgeToCFA, INFO)

lines 14372-14373: Dead code detected: __asm__ volatile ("1:\tmovw %w1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err___2): "ir" (val),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err___2)); (CFACreationUtils.addEdgeToCFA, INFO)

lines 14380-14381: Dead code detected: __asm__ volatile ("1:\tmovq %1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err___2): "er" (val),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err___2)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("1:\tmovb %b1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err___2): "iq" (val),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err___2));
  goto ldv_25659;
  case 2UL:
  __asm__ volatile ("1:\tmovw %w1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err___2): "ir" (val),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err___2));
  goto ldv_25659;
  case 4UL:
  __asm__ volatile ("1:\tmovl %k1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err___2): "ir" (val),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err___2));
  goto ldv_25659;
  case 8UL:
  __asm__ volatile ("1:\tmovq %1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err___2): "er" (val),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err___2));
  goto ldv_25659;
  default:
  __put_user_bad();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 14392-14393: Dead code detected: __asm__ volatile ("1:\tmovb %b1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err___3): "iq" ((int )curr_ticks___0),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err___3)); (CFACreationUtils.addEdgeToCFA, INFO)

lines 14396-14397: Dead code detected: __asm__ volatile ("1:\tmovw %w1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err___3): "ir" ((int )curr_ticks___0),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err___3)); (CFACreationUtils.addEdgeToCFA, INFO)

lines 14404-14405: Dead code detected: __asm__ volatile ("1:\tmovq %1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err___3): "er" ((int )curr_ticks___0),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err___3)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("1:\tmovb %b1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err___3): "iq" ((int )curr_ticks___0),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err___3));
  goto ldv_25668;
  case 2UL:
  __asm__ volatile ("1:\tmovw %w1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err___3): "ir" ((int )curr_ticks___0),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err___3));
  goto ldv_25668;
  case 4UL:
  __asm__ volatile ("1:\tmovl %k1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err___3): "ir" ((int )curr_ticks___0),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err___3));
  goto ldv_25668;
  case 8UL:
  __asm__ volatile ("1:\tmovq %1,%2\n2:\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .section __ex_table,\"a\"\n .balign 8 \n .quad 1b,3b\n .previous\n": "=r" (__pu_err___3): "er" ((int )curr_ticks___0),
                       "m" (*((struct __large_struct *)p)), "i" (-14), "0" (__pu_err___3));
  goto ldv_25668;
  default:
  __put_user_bad();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 14546: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 7996-7997: Function pointer *(adev->d->start_input) with type void (*)(int, unsigned long, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7764-7765: Function pointer *(adev->d->output_block) with type void (*)(int, unsigned long, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7606: Function pointer *(adev->d->set_channels) with type short int (*)(int, short) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 10574-10575: Function pointer *((midi_devs[dev])->coproc->ioctl) with type int (*)(void *, unsigned int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10296: Function pointer *((midi_devs[dev])->open) with type int (*)(int, int, void (*)(int, unsigned char), void (*)(int)) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11307: Function pointer *((synth_devs[dev])->alloc_voice) with type int (*)(int, int, int, struct voice_alloc_info *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5923: Function pointer *((audio_devs[dev])->d->set_channels) with type short int (*)(int, short) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5919: Function pointer *((audio_devs[dev])->d->set_channels) with type short int (*)(int, short) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5890: Function pointer *((audio_devs[dev])->d->set_channels) with type short int (*)(int, short) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5699-5700: Function pointer *((audio_devs[dev])->coproc->ioctl) with type int (*)(void *, unsigned int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5564-5565: Function pointer *((audio_devs[dev])->d->copy_user) with type void (*)(int, char *, int, const char *, int, int, int, int *, int *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8837-8838: Function pointer *(adev->d->start_input) with type void (*)(int, unsigned long, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8797-8798: Function pointer *(adev->d->start_input) with type void (*)(int, unsigned long, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11256: Function pointer *((synth_devs[dev])->controller) with type void (*)(int, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11253: Function pointer *((synth_devs[dev])->panning) with type void (*)(int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11250: Function pointer *((synth_devs[dev])->aftertouch) with type void (*)(int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11244: Function pointer *((synth_devs[dev])->start_note) with type int (*)(int, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11239: Function pointer *((synth_devs[dev])->kill_note) with type int (*)(int, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11230: Function pointer *((synth_devs[dev])->kill_note) with type int (*)(int, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9664: Function pointer *((midi_devs[orig_dev])->open) with type int (*)(int, int, void (*)(int, unsigned char), void (*)(int)) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11778: Function pointer *((synth_devs[(int)(*(q + 1UL))])->hw_control) with type void (*)(int, unsigned char *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11708: Function pointer *((synth_devs[0])->start_note) with type int (*)(int, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11696: Function pointer *((synth_devs[0])->kill_note) with type int (*)(int, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7133: Function pointer *(p->qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6058: Function pointer *(dsp_dev->d->set_channels) with type short int (*)(int, short) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11533: Function pointer *((synth_devs[(int)dev])->bender) with type void (*)(int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11530: Function pointer *((synth_devs[(int)dev])->bender) with type void (*)(int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11517: Function pointer *((synth_devs[(int)dev])->bender) with type void (*)(int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11505: Function pointer *((synth_devs[(int)dev])->controller) with type void (*)(int, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11502: Function pointer *((synth_devs[(int)dev])->controller) with type void (*)(int, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11489: Function pointer *((synth_devs[(int)dev])->controller) with type void (*)(int, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 11407-11408: Function pointer *((synth_devs[(int)(*(event_rec + 1UL))])->aftertouch) with type void (*)(int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 11397-11399: Function pointer *((synth_devs[(int)(*(event_rec + 1UL))])->kill_note) with type int (*)(int, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 11387-11389: Function pointer *((synth_devs[(int)(*(event_rec + 1UL))])->start_note) with type int (*)(int, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 11382-11383: Function pointer *((synth_devs[(int)(*(event_rec + 1UL))])->setup_voice) with type void (*)(int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12404: Function pointer *((synth_devs[i])->controller) with type void (*)(int, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12405: Function pointer *((synth_devs[i])->controller) with type void (*)(int, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12406: Function pointer *((synth_devs[i])->bender) with type void (*)(int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11676: Function pointer *((synth_devs[dev])->send_sysex) with type int (*)(int, unsigned char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 12665-12666: Function pointer *((midi_devs[midi_dev])->open) with type int (*)(int, int, void (*)(int, unsigned char), void (*)(int)) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12109: Function pointer *((midi_devs[i])->open) with type int (*)(int, int, void (*)(int, unsigned char), void (*)(int)) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 11118-11119: Function pointer *((midi_devs[dev___0])->open) with type int (*)(int, int, void (*)(int, unsigned char), void (*)(int)) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11060: Function pointer *((synth_devs[dev])->load_patch) with type int (*)(int, int, const char *, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 3386-3387: Function pointer *((void (*)(void *, struct module *, unsigned long))it_func) with type void (*)(void *, struct module *, unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_sound_special to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_sound_special to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _lock_kernel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _unlock_kernel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function module_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_module to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5927: Ignoring function call through function pointer *((audio_devs[dev])->d->set_bits): tmp___5 = (*((audio_devs[dev])->d->set_bits))(dev, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5923: Ignoring function call through function pointer *((audio_devs[dev])->d->set_channels): tmp___4 = (*((audio_devs[dev])->d->set_channels))(dev, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5919: Ignoring function call through function pointer *((audio_devs[dev])->d->set_channels): tmp___3 = (*((audio_devs[dev])->d->set_channels))(dev, (int)((short)val)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5890: Ignoring function call through function pointer *((audio_devs[dev])->d->set_channels): tmp___2 = (*((audio_devs[dev])->d->set_channels))(dev, (int)((short)(((unsigned int)((unsigned short)val)) + 1U))); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5857: Ignoring function call through function pointer *((audio_devs[dev])->d->set_speed): val = (*((audio_devs[dev])->d->set_speed))(dev, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5854: Ignoring function call through function pointer *((audio_devs[dev])->d->set_speed): val = (*((audio_devs[dev])->d->set_speed))(dev, val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function interruptible_sleep_on_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4521: Ignoring function call through function pointer *((audio_devs[dev])->d->mmap): (*((audio_devs[dev])->d->mmap))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6550: Ignoring function call through function pointer *((audio_devs[dev])->d->trigger): (*((audio_devs[dev])->d->trigger))(dev, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7133: Ignoring function call through function pointer *(p->qproc): (*(p->qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function interruptible_sleep_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13441: Ignoring function call through function pointer *(tmr___0->tmr_disable): (*(tmr___0->tmr_disable))(tmr___0->dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 13441: Unsupported feature (recursion): timer_close(tmr___0->dev); (line was originally pointer call(timer_close) (*(tmr___0->tmr_disable))(tmr___0->dev);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            503 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  437 (87%)
  Because of loop head:            63 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3 (1%)
  Times precision was empty:       465 (92%)
  Times precision was {false}:     7 (1%)
  Times result was cached:         20 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      11 (2%)
  Times result was 'false':        3 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1027
  BDD entailment checks:           57
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       118
Number of predicates discovered:          2
Number of abstraction locations:          9
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         38
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.11
Number of irrelevant predicates:          11 (29%)
Number of preds handled by boolean abs:   11 (29%)
  Total number of models for allsat:      11
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.981s
  Time for path formula creation:        1.931s
Time for strengthen operator:            0.042s
Time for prec operator:                  0.217s
  Time for abstraction:                  0.155s (Max:     0.021s, Count: 503)
    Boolean abstraction:                 0.023s
    Solving time:                        0.009s (Max:     0.001s)
    Model enumeration time:              0.001s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 0.221s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     0.010s

Number of path formula cache hits:   2387 (36%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.840s

Total number of created targets for pointer analysis: 564
   Number of created targets for uf: *signed_int is 28
   Number of created targets for uf: *unsigned_char is 67
   Number of created targets for uf: *char is 109


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          25 (count: 628, min: 0, max: 16, avg: 0.04)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.114s
Automaton transfers with branching:                0
Automaton transfer successors:                         6183 (count: 6183, min: 1, max: 1, avg: 1.00) [1 x 6183]

CPA algorithm statistics
------------------------
Number of iterations:            3084
Max size of waitlist:            175
Average size of waitlist:        84
Number of computed successors:   3850
Max successors for one state:    2
Number of times merged:          485
Number of times stopped:         538
Number of times breaked:         3

Total time for CPA algorithm:         3.536s (Max:     1.687s)
  Time for choose from waitlist:      0.040s
  Time for precision adjustment:      0.427s
  Time for transfer relation:         2.537s
  Time for merge operator:            0.307s
  Time for stop operator:             0.084s
  Time for adding to reached set:     0.028s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                  31 (count: 3, min: 9, max: 12, avg: 10.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.325s
  Counterexample analysis:                             0.276s (Max:     0.116s, Calls: 3)
    Refinement sat check:                              0.242s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.007s
  ARG update:                                          0.022s

Length of refined path (in blocks):                      28 (count: 3, min: 8, max: 11, avg: 9.33)
Number of affected states:                               22 (count: 3, min: 6, max: 9, avg: 7.33)
Length (states) of path with itp 'true':                  3 (count: 3, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:        22 (count: 3, min: 6, max: 9, avg: 7.33)
Length (states) of path with itp 'false':                 3 (count: 3, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              19 (count: 3, min: 5, max: 8, avg: 6.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 445
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 245.67
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:       3.883s
Time for refinements:                 0.347s
Average time for refinement:          0.115s
Max time for refinement:              0.166s

Code Coverage
-----------------------------
  Function coverage:      0.340
  Visited lines:          2080
  Total lines:            6475
  Line coverage:          0.321
  Visited conditions:     696
  Total conditions:       3328
  Condition coverage:     0.209

CPAchecker general statistics
-----------------------------
Number of program locations:     10138
Number of CFA edges:             12474
Number of relevant variables:    1240
Number of functions:             262
Number of loops:                 74
Size of reached set:             2591
  Number of reached locations:   1392 (14%)
    Avg states per location:     1
    Max states per location:     19 (at node N1806)
  Number of reached functions:   89 (34%)
  Number of partitions:          2591
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        175

Time for analysis setup:          7.944s
  Time for loading CPAs:          1.058s
  Time for loading parser:        0.705s
  Time for CFA construction:      6.039s
    Time for parsing file(s):     1.242s
    Time for AST to CFA:          2.312s
    Time for CFA sanity check:    0.595s
    Time for post-processing:     1.733s
      Time for var class.:        0.815s
Time for Analysis:                3.884s
CPU time for analysis:            3.890s
Total time for CPAchecker:       11.832s
Total CPU time for CPAchecker:   11.820s
Time for statistics:              0.149s

Time for Garbage Collector:       0.371s (in 17 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    69 MiB) max;     42MB (    40 MiB) avg;     77MB (    74 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     29MB (    27 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8050MB (  7677 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
