scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---fs--nfs--nfsv2.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ds16mvsu/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 10117: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10318: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10359: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11039: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 11040: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11229: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11270: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11950: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 11951: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12141: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12182: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12869: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 12870: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13060: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13101: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13788: Dead code detected: goto ldv_call_11; (CFACreationUtils.addEdgeToCFA, INFO)

line 13789: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13978: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14019: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14699: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 14700: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14889: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14930: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15610: Dead code detected: goto ldv_call_3; (CFACreationUtils.addEdgeToCFA, INFO)

line 15611: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15800: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15841: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16521: Dead code detected: goto ldv_call_4; (CFACreationUtils.addEdgeToCFA, INFO)

line 16522: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16711: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16752: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 17432: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 17433: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 17622: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 17663: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 18343: Dead code detected: goto ldv_call_6; (CFACreationUtils.addEdgeToCFA, INFO)

line 18344: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 18533: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 18574: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 19254: Dead code detected: goto ldv_call_7; (CFACreationUtils.addEdgeToCFA, INFO)

line 19255: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 19444: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 19485: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20165: Dead code detected: goto ldv_call_8; (CFACreationUtils.addEdgeToCFA, INFO)

line 20166: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20355: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20396: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21076: Dead code detected: goto ldv_call_9; (CFACreationUtils.addEdgeToCFA, INFO)

line 21077: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 21087: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21099: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21111: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21123: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21135: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21147: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21159: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21171: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21183: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21195: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21207: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21219: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21233: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21247: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21261: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21275: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21289: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21303: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21317: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21331: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21345: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21359: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21373: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21387: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 34416: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 34435: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function register_nfs_version to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10036: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10308: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(40UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function unregister_nfs_version to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 21087: Ignoring call via function pointer ldv_file_operations_instance_probe_0_12::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21087: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10039: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11219: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(40UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21123: Ignoring call via function pointer ldv_file_operations_instance_probe_1_12::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21123: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10042: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13968: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(40UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21135: Ignoring call via function pointer ldv_file_operations_instance_probe_2_12::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21135: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10045: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14879: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(40UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21147: Ignoring call via function pointer ldv_file_operations_instance_probe_3_12::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21147: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10048: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15790: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(40UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21159: Ignoring call via function pointer ldv_file_operations_instance_probe_4_12::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21159: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10051: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 16701: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(40UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21171: Ignoring call via function pointer ldv_file_operations_instance_probe_5_12::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21171: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10054: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17612: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(40UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21183: Ignoring call via function pointer ldv_file_operations_instance_probe_6_12::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21183: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10057: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 18523: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(40UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21195: Ignoring call via function pointer ldv_file_operations_instance_probe_7_12::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21195: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10060: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19434: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(40UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21207: Ignoring call via function pointer ldv_file_operations_instance_probe_8_12::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21207: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10063: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20345: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(40UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21219: Ignoring call via function pointer ldv_file_operations_instance_probe_9_12::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21219: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10066: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12131: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(40UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21099: Ignoring call via function pointer ldv_file_operations_instance_probe_10_12::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21099: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10069: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13050: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(40UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21111: Ignoring call via function pointer ldv_file_operations_instance_probe_11_12::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21111: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13153: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_xmalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function nfs_alloc_client to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13756: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___35 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function nfs_clone_server to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13747: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___34 = ldv_xmalloc(136UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function nfs_close_context to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 22783: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13731: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___33 = ldv_xmalloc(704UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 22796: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_fattr_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rpc_call_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_instantiate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_create_server to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xdr_inline_decode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 30128: Return type of function __builtin_bswap32 is void, but result is used as type int: tmp = __builtin_bswap32(val); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_bswap32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_bswap32, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13703: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___32 = ldv_xmalloc(1096UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function nfs_free_client to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13684: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___30 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13656: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___27 = ldv_xmalloc(1096UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13658: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___28 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function nfs_init_client to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function make_kuid(&init_user_ns, tmp___4) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Extern function make_kgid(&init_user_ns, tmp___8) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function __memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xdr_encode_opaque to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xdr_reserve_space to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xdr_write_pages to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function from_kuid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function from_kgid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13589: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___24 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function nfs_permission to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rpc_call_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_invalidate_atime to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_refresh_inode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13562: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___23 = ldv_xmalloc(960UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13525: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___20 = ldv_xmalloc(976UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13527: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___21 = ldv_xmalloc(320UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function nfs_rename to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13500: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___18 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function nfs_wb_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_setattr_update_inode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13457: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___15 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function nfs_submount to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_alloc_fhandle to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_alloc_fattr to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13439: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___14 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function nfs_try_mount to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_rmdir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13411: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___13 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function nfs_post_op_update_inode_force_wcc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13396: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_xmalloc(960UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13125: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13127: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21261: Ignoring call via function pointer ldv_file_operations_instance_write_11_4::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2, arg3, arg4); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21261: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2, arg3, arg4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12234: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_xmalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12837: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___35 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12828: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___34 = ldv_xmalloc(136UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12812: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___33 = ldv_xmalloc(704UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12784: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___32 = ldv_xmalloc(1096UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12765: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___30 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12737: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___27 = ldv_xmalloc(1096UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12739: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___28 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12670: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___24 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12643: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___23 = ldv_xmalloc(960UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12606: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___20 = ldv_xmalloc(976UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12608: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___21 = ldv_xmalloc(320UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12581: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___18 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12538: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___15 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12520: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___14 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12492: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___13 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12477: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_xmalloc(960UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12206: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12208: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21247: Ignoring call via function pointer ldv_file_operations_instance_write_10_4::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2, arg3, arg4); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21247: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2, arg3, arg4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 20448: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_xmalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21044: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___35 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21035: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___34 = ldv_xmalloc(136UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21020: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___33 = ldv_xmalloc(704UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20992: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___32 = ldv_xmalloc(1096UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20973: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___30 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20945: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___27 = ldv_xmalloc(1096UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20947: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___28 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20878: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___24 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20851: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___23 = ldv_xmalloc(960UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20814: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___20 = ldv_xmalloc(976UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20816: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___21 = ldv_xmalloc(320UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20790: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___18 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20750: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___15 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20733: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___14 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20706: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___13 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20691: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_xmalloc(960UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20420: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20422: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21387: Ignoring call via function pointer ldv_file_operations_instance_write_9_4::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2, arg3, arg4); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21387: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2, arg3, arg4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19537: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_xmalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20133: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___35 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20124: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___34 = ldv_xmalloc(136UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20109: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___33 = ldv_xmalloc(704UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20081: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___32 = ldv_xmalloc(1096UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20062: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___30 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20034: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___27 = ldv_xmalloc(1096UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20036: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___28 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19967: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___24 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19940: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___23 = ldv_xmalloc(960UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19903: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___20 = ldv_xmalloc(976UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19905: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___21 = ldv_xmalloc(320UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19879: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___18 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19839: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___15 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19822: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___14 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19795: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___13 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19780: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_xmalloc(960UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19509: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19511: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21373: Ignoring call via function pointer ldv_file_operations_instance_write_8_4::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2, arg3, arg4); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21373: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2, arg3, arg4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 18626: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_xmalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19222: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___35 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19213: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___34 = ldv_xmalloc(136UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19198: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___33 = ldv_xmalloc(704UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19170: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___32 = ldv_xmalloc(1096UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19151: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___30 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19123: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___27 = ldv_xmalloc(1096UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19125: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___28 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19056: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___24 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19029: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___23 = ldv_xmalloc(960UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 18992: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___20 = ldv_xmalloc(976UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 18994: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___21 = ldv_xmalloc(320UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 18968: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___18 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 18928: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___15 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 18911: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___14 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 18884: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___13 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 18869: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_xmalloc(960UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 18598: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 18600: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21359: Ignoring call via function pointer ldv_file_operations_instance_write_7_4::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2, arg3, arg4); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21359: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2, arg3, arg4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17715: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_xmalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 18311: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___35 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 18302: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___34 = ldv_xmalloc(136UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 18287: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___33 = ldv_xmalloc(704UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 18259: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___32 = ldv_xmalloc(1096UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 18240: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___30 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 18212: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___27 = ldv_xmalloc(1096UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 18214: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___28 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 18145: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___24 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 18118: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___23 = ldv_xmalloc(960UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 18081: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___20 = ldv_xmalloc(976UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 18083: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___21 = ldv_xmalloc(320UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 18057: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___18 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 18017: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___15 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 18000: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___14 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17973: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___13 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17958: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_xmalloc(960UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17687: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17689: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21345: Ignoring call via function pointer ldv_file_operations_instance_write_6_4::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2, arg3, arg4); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21345: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2, arg3, arg4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16804: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_xmalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17400: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___35 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17391: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___34 = ldv_xmalloc(136UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17376: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___33 = ldv_xmalloc(704UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17348: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___32 = ldv_xmalloc(1096UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17329: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___30 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17301: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___27 = ldv_xmalloc(1096UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17303: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___28 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17234: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___24 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17207: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___23 = ldv_xmalloc(960UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17170: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___20 = ldv_xmalloc(976UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17172: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___21 = ldv_xmalloc(320UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17146: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___18 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17106: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___15 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17089: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___14 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17062: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___13 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17047: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_xmalloc(960UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 16776: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 16778: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21331: Ignoring call via function pointer ldv_file_operations_instance_write_5_4::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2, arg3, arg4); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21331: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2, arg3, arg4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15893: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_xmalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 16489: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___35 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 16480: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___34 = ldv_xmalloc(136UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 16465: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___33 = ldv_xmalloc(704UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            140963 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            108897 (77%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         32066 (23%)
  Times precision was empty:       107475 (76%)
  Times precision was {false}:     5155 (4%)
  Times result was cached:         26347 (19%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1986 (1%)
  Times result was 'false':        24365 (17%)
Number of strengthen sat checks:   0
Number of coverage checks:         261040
  BDD entailment checks:           5232
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       462
Number of predicates discovered:          25
Number of abstraction locations:          45
Max number of predicates per location:    24
Avg number of predicates per location:    10
Total predicates per abstraction:         225980
Max number of predicates per abstraction: 24
Avg number of predicates per abstraction: 31.65
Number of irrelevant predicates:          42320 (19%)
Number of preds handled by boolean abs:   25644 (11%)
  Total number of models for allsat:      1986
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                 15.292s
  Time for path formula creation:       14.138s
Time for strengthen operator:            2.561s
Time for prec operator:                 68.417s
  Time for abstraction:                 65.786s (Max:     0.321s, Count: 140963)
    Boolean abstraction:                24.764s
    Solving time:                       28.440s (Max:     0.261s)
    Model enumeration time:              2.005s
    Time for BDD construction:           0.111s (Max:     0.007s)
Time for merge operator:                 1.738s
Time for coverage check:                 0.049s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):    30.445s

Number of path formula cache hits:   4764580 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.488s

Total number of created targets for pointer analysis: 90
   Number of created targets for uf: *unsigned_short_int is 64
   Number of created targets for uf: *enum_nfs_stat is 8
   Number of created targets for uf: *unsigned_int is 6


Number of BDD nodes:                               1341
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6434 (count: 156492, min: 0, max: 136, avg: 0.04)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.304s
  Time for transition matches:                         2.208s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.024s
Automaton transfers with branching:                0
Automaton transfer successors:                      4576771 (count: 4576771, min: 1, max: 1, avg: 1.00) [1 x 4576771]

CPA algorithm statistics
------------------------
Number of iterations:            3174526
Max size of waitlist:            895
Average size of waitlist:        390
Number of computed successors:   3433364
Max successors for one state:    2
Number of times merged:          127904
Number of times stopped:         132842
Number of times breaked:         7701

Total time for CPA algorithm:       243.161s (Max:     1.374s)
  Time for choose from waitlist:      0.849s
  Time for precision adjustment:     80.776s
  Time for transfer relation:       148.825s
  Time for merge operator:            2.854s
  Time for stop operator:             1.928s
  Time for adding to reached set:     3.500s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7701
Avg. length of target path (in blocks):               92307 (count: 7701, min: 1, max: 15, avg: 11.99)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 478.924s
  Counterexample analysis:                           461.729s (Max:     0.170s, Calls: 7701)
    Refinement sat check:                            393.474s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.076s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.060s
  Precision update:                                    1.661s
  ARG update:                                          4.648s

Length of refined path (in blocks):                   92299 (count: 7700, min: 1, max: 15, avg: 11.99)
Number of affected states:                             2538 (count: 7700, min: 0, max: 14, avg: 0.33)
Length (states) of path with itp 'true':              82061 (count: 7700, min: 0, max: 13, avg: 10.66)
Length (states) of path with itp non-trivial itp:      2538 (count: 7700, min: 0, max: 14, avg: 0.33)
Length (states) of path with itp 'false':                 0 (count: 7700, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 7700, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2346 (count: 7700, min: 0, max: 13, avg: 0.30)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7701
Number of successful refinements:     7700
Number of failed refinements:         0
Max. size of reached set before ref.: 31223
Max. size of reached set after ref.:  29279
Avg. size of reached set before ref.: 13617.43
Avg. size of reached set after ref.:  13193.73

Total time for CEGAR algorithm:     893.247s
Time for refinements:               595.002s
Average time for refinement:          0.077s
Max time for refinement:              0.325s

Code Coverage
-----------------------------
  Function coverage:      0.469
  Visited lines:          7924
  Total lines:            11906
  Line coverage:          0.666
  Visited conditions:     1086
  Total conditions:       2088
  Condition coverage:     0.520

CPAchecker general statistics
-----------------------------
Number of program locations:     16601
Number of CFA edges:             19151
Number of relevant variables:    2019
Number of functions:             1103
Number of loops:                 29
Size of reached set:             28817
  Number of reached locations:   5869 (35%)
    Avg states per location:     4
    Max states per location:     743 (at node N14769)
  Number of reached functions:   517 (47%)
  Number of partitions:          28817
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       1
  Size of final wait list        788

Time for analysis setup:          7.083s
  Time for loading CPAs:          0.948s
  Time for loading parser:        0.474s
  Time for CFA construction:      5.566s
    Time for parsing file(s):     1.024s
    Time for AST to CFA:          2.263s
    Time for CFA sanity check:    0.709s
    Time for post-processing:     1.452s
      Time for var class.:        0.678s
Time for Analysis:              893.247s
CPU time for analysis:          893.240s
Total time for CPAchecker:      900.332s
Total CPU time for CPAchecker:  900.300s
Time for statistics:              0.468s

Time for Garbage Collector:      25.243s (in 2252 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                213MB (   203 MiB) max;    125MB (   119 MiB) avg;    215MB (   205 MiB) peak
Used non-heap memory:             41MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           216MB (   206 MiB) max;    183MB (   174 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8337MB (  7951 MiB) max;   8237MB (  7856 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
