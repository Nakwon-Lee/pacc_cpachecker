scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--usb--host--u132-hcd.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_931ye137/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10469: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10627: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10793: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10871: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10901: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10939: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 10946: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 10947: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 10975: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11542: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11573: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11647: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11654: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11655: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11661: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11662: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11663: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11673: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11674: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11675: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11676: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11688: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11689: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11690: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11691: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11692: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11698: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11699: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11700: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11701: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11702: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11703: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11710: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11711: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11712: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11713: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11714: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11715: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11716: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11722: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11723: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11724: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11725: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11726: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11727: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11728: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11729: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11735: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11736: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11737: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11738: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11739: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11740: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11741: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11742: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11743: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 11768: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11811: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13380: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 11248: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11259: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11270: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11281: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11292: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11303: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11314: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11325: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11336: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11347: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11358: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11369: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11380: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11391: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11402: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11413: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11424: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11435: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11446: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11457: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11468: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11479: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11490: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11777: Function pointer *arg0 with type void (*)(unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10577: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_ftdi_elan_write_pcimem to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_ftdi_elan_read_pcimem to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_create_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ftdi_elan_gone_away to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10563: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11777: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11777: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            9837 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            4253 (43%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5584 (57%)
  Times precision was empty:       3883 (39%)
  Times precision was {false}:     1382 (14%)
  Times result was cached:         4235 (43%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      337 (3%)
  Times result was 'false':        5027 (51%)
Number of strengthen sat checks:   0
Number of coverage checks:         6905
  BDD entailment checks:           1665
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       208
Number of predicates discovered:          30
Number of abstraction locations:          32
Max number of predicates per location:    25
Avg number of predicates per location:    3
Total predicates per abstraction:         15169
Max number of predicates per abstraction: 25
Avg number of predicates per abstraction: 8.82
Number of irrelevant predicates:          6726 (44%)
Number of preds handled by boolean abs:   2696 (18%)
  Total number of models for allsat:      361
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.07

Time for post operator:                  1.475s
  Time for path formula creation:        1.337s
Time for strengthen operator:            0.184s
Time for prec operator:                  8.193s
  Time for abstraction:                  7.985s (Max:     0.072s, Count: 9837)
    Boolean abstraction:                 2.997s
    Solving time:                        3.397s (Max:     0.056s)
    Model enumeration time:              0.183s
    Time for BDD construction:           0.062s (Max:     0.009s)
Time for merge operator:                 0.103s
Time for coverage check:                 0.013s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):     3.581s

Number of path formula cache hits:   148269 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.994s

Total number of created targets for pointer analysis: 96
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *(struct_list_head)* is 40
   Number of created targets for uf: *(struct_timer_list)* is 3
   Number of created targets for uf: *unsigned_int is 4


Number of BDD nodes:                               1571
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4730 (count: 17468, min: 0, max: 336, avg: 0.27)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.549s
  Time for transition matches:                         0.164s
  Time for transition assertions:                      0.014s
  Time for transition actions:                         0.020s
Automaton transfers with branching:                0
Automaton transfer successors:                       147653 (count: 147653, min: 1, max: 1, avg: 1.00) [1 x 147653]

CPA algorithm statistics
------------------------
Number of iterations:            114630
Max size of waitlist:            26
Average size of waitlist:        14
Number of computed successors:   125498
Max successors for one state:    2
Number of times merged:          2620
Number of times stopped:         4076
Number of times breaked:         659

Total time for CPA algorithm:        13.848s (Max:     0.819s)
  Time for choose from waitlist:      0.044s
  Time for precision adjustment:      8.852s
  Time for transfer relation:         4.026s
  Time for merge operator:            0.238s
  Time for stop operator:             0.157s
  Time for adding to reached set:     0.169s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   659
Avg. length of target path (in blocks):                1823 (count: 659, min: 1, max: 7, avg: 2.77)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   9.188s
  Counterexample analysis:                             8.280s (Max:     0.064s, Calls: 659)
    Refinement sat check:                              6.662s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.059s
  Precision update:                                    0.201s
  ARG update:                                          0.319s

Length of refined path (in blocks):                    1821 (count: 659, min: 1, max: 7, avg: 2.76)
Number of affected states:                              419 (count: 659, min: 0, max: 6, avg: 0.64)
Length (states) of path with itp 'true':                743 (count: 659, min: 0, max: 4, avg: 1.13)
Length (states) of path with itp non-trivial itp:       419 (count: 659, min: 0, max: 6, avg: 0.64)
Length (states) of path with itp 'false':                 2 (count: 659, min: 0, max: 1, avg: 0.00)
Different non-trivial interpolants along paths:          35 (count: 659, min: 0, max: 2, avg: 0.05)
Equal non-trivial interpolants along paths:             139 (count: 659, min: 0, max: 5, avg: 0.21)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                659
Number of successful refinements:     659
Number of failed refinements:         0
Max. size of reached set before ref.: 3142
Max. size of reached set after ref.:  2711
Avg. size of reached set before ref.: 1288.40
Avg. size of reached set after ref.:  1113.88

Total time for CEGAR algorithm:      24.528s
Time for refinements:                10.157s
Average time for refinement:          0.015s
Max time for refinement:              0.075s

Code Coverage
-----------------------------
  Function coverage:      0.152
  Visited lines:          1350
  Total lines:            6062
  Line coverage:          0.223
  Visited conditions:     136
  Total conditions:       1460
  Condition coverage:     0.093

CPAchecker general statistics
-----------------------------
Number of program locations:     9153
Number of CFA edges:             10370
Number of relevant variables:    1349
Number of functions:             673
Number of loops:                 38
Size of reached set:             1382
  Number of reached locations:   671 (7%)
    Avg states per location:     2
    Max states per location:     32 (at node N7183)
  Number of reached functions:   102 (15%)
  Number of partitions:          1382
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        16

Time for analysis setup:          5.796s
  Time for loading CPAs:          0.974s
  Time for loading parser:        0.521s
  Time for CFA construction:      4.179s
    Time for parsing file(s):     0.780s
    Time for AST to CFA:          1.815s
    Time for CFA sanity check:    0.421s
    Time for post-processing:     0.961s
      Time for var class.:        0.508s
Time for Analysis:               24.529s
CPU time for analysis:           24.520s
Total time for CPAchecker:       30.332s
Total CPU time for CPAchecker:   30.310s
Time for statistics:              0.099s

Time for Garbage Collector:       0.674s (in 75 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 75MB (    71 MiB) max;     53MB (    51 MiB) avg;     78MB (    75 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8131MB (  7754 MiB) max;   8120MB (  7744 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
