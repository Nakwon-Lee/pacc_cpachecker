scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec9_product09_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vzsrpawp/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 717: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1079: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1158: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1312: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1321: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1404: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1497: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1849: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1883: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1953: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2526: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2892: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3093: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3171: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3274: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3297: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2683: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            202 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            49 (24%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         153 (76%)
  Times precision was empty:       3 (1%)
  Times precision was {false}:     152 (75%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      47 (23%)
  Times result was 'false':        142 (70%)
Number of strengthen sat checks:   0
Number of coverage checks:         76694
  BDD entailment checks:           86
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       874
Number of predicates discovered:          93
Number of abstraction locations:          2
Max number of predicates per location:    93
Avg number of predicates per location:    47
Total predicates per abstraction:         2651
Max number of predicates per abstraction: 93
Avg number of predicates per abstraction: 13.32
Number of irrelevant predicates:          158 (6%)
Number of preds handled by boolean abs:   2493 (94%)
  Total number of models for allsat:      3692
  Max number of models for allsat:        2442
  Avg number of models for allsat:        78.55

Time for post operator:                  3.858s
  Time for path formula creation:        3.646s
Time for strengthen operator:            0.300s
Time for prec operator:                 41.210s
  Time for abstraction:                 40.869s (Max:    16.164s, Count: 202)
    Boolean abstraction:                38.106s
    Solving time:                       10.151s (Max:     0.495s)
    Model enumeration time:             27.447s
    Time for BDD construction:           0.722s (Max:     0.290s)
Time for merge operator:                 0.940s
Time for coverage check:                 0.067s
  Time for BDD entailment checks:        0.053s
Total time for SMT solver (w/o itp):    37.598s

Number of path formula cache hits:   174023 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.328s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               180017
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       28999 (count: 13251, min: 0, max: 4070, avg: 2.19)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.082s (in 1 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.563s
  Time for transition matches:                         0.204s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       183847 (count: 183847, min: 1, max: 1, avg: 1.00) [1 x 183847]

CPA algorithm statistics
------------------------
Number of iterations:            136960
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   175429
Max successors for one state:    2
Number of times merged:          38304
Number of times stopped:         38306
Number of times breaked:         12

Total time for CPA algorithm:        54.868s (Max:    20.986s)
  Time for choose from waitlist:      0.196s
  Time for precision adjustment:     42.924s
  Time for transfer relation:         7.649s
  Time for merge operator:            1.962s
  Time for stop operator:             0.439s
  Time for adding to reached set:     0.493s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                  43 (count: 12, min: 2, max: 8, avg: 3.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  15.515s
  Counterexample analysis:                            14.925s (Max:     5.101s, Calls: 12)
    Refinement sat check:                             13.657s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.038s
  Precision update:                                    0.012s
  ARG update:                                          0.383s

Length of refined path (in blocks):                      41 (count: 12, min: 2, max: 6, avg: 3.42)
Number of affected states:                               29 (count: 12, min: 1, max: 5, avg: 2.42)
Length (states) of path with itp 'true':                  0 (count: 12, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        29 (count: 12, min: 1, max: 5, avg: 2.42)
Length (states) of path with itp 'false':                 1 (count: 12, min: 0, max: 1, avg: 0.08)
Different non-trivial interpolants along paths:          17 (count: 12, min: 0, max: 4, avg: 1.42)
Equal non-trivial interpolants along paths:               0 (count: 12, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 29638
Max. size of reached set after ref.:  3703
Avg. size of reached set before ref.: 13264.58
Avg. size of reached set after ref.:  3703.00

Total time for CEGAR algorithm:      71.540s
Time for refinements:                16.629s
Average time for refinement:          1.385s
Max time for refinement:              5.680s

Code Coverage
-----------------------------
  Function coverage:      0.586
  Visited lines:          981
  Total lines:            1675
  Line coverage:          0.586
  Visited conditions:     588
  Total conditions:       744
  Condition coverage:     0.790

CPAchecker general statistics
-----------------------------
Number of program locations:     2198
Number of CFA edges:             2677
Number of relevant variables:    281
Number of functions:             70
Number of loops:                 9
Size of reached set:             22243
  Number of reached locations:   1118 (51%)
    Avg states per location:     19
    Max states per location:     151 (at node N45)
  Number of reached functions:   41 (59%)
  Number of partitions:          22239
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N690 (before lines 869-897), Function cleanup called from node N3, stack depth 4 [f5c79a6], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          4.431s
  Time for loading CPAs:          0.904s
  Time for loading parser:        0.796s
  Time for CFA construction:      2.499s
    Time for parsing file(s):     0.713s
    Time for AST to CFA:          0.678s
    Time for CFA sanity check:    0.298s
    Time for post-processing:     0.619s
      Time for var class.:        0.357s
Time for Analysis:               71.541s
CPU time for analysis:           71.540s
Time for analyzing result:        0.021s
Total time for CPAchecker:       75.976s
Total CPU time for CPAchecker:   75.970s
Time for statistics:              0.444s

Time for Garbage Collector:       1.807s (in 64 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                170MB (   162 MiB) max;     69MB (    66 MiB) avg;    179MB (   171 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     34MB (    32 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           223MB (   213 MiB) max;    137MB (   131 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8278MB (  7895 MiB) max;   8161MB (  7783 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
