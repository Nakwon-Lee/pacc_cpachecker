scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec3_product17_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_p8wnejwx/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1340: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1386: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1464: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1626: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1660: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1669: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1789: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1802: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2188: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2244: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2258: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2831: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3182: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3261: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3300: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3312: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3335: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1177: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            27 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            4 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (85%)
  Times precision was empty:       10 (37%)
  Times precision was {false}:     14 (52%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3 (11%)
  Times result was 'false':        13 (48%)
Number of strengthen sat checks:   0
Number of coverage checks:         17329
  BDD entailment checks:           3
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3291
Number of predicates discovered:          13
Number of abstraction locations:          2
Max number of predicates per location:    12
Avg number of predicates per location:    6
Total predicates per abstraction:         50
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 2.94
Number of irrelevant predicates:          14 (28%)
Number of preds handled by boolean abs:   36 (72%)
  Total number of models for allsat:      8
  Max number of models for allsat:        6
  Avg number of models for allsat:        2.67

Time for post operator:                  3.941s
  Time for path formula creation:        3.844s
Time for strengthen operator:            0.161s
Time for prec operator:                  7.543s
  Time for abstraction:                  7.362s (Max:     1.734s, Count: 27)
    Boolean abstraction:                 2.183s
    Solving time:                        5.667s (Max:     1.417s)
    Model enumeration time:              0.337s
    Time for BDD construction:           0.008s (Max:     0.004s)
Time for merge operator:                 0.848s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.005s
Total time for SMT solver (w/o itp):     6.004s

Number of path formula cache hits:   6331 (15%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.725s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               512
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         224 (count: 212, min: 0, max: 119, avg: 1.06)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.345s
Automaton transfers with branching:                0
Automaton transfer successors:                        41720 (count: 41720, min: 1, max: 1, avg: 1.00) [1 x 41720]

CPA algorithm statistics
------------------------
Number of iterations:            31193
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   39875
Max successors for one state:    2
Number of times merged:          8663
Number of times stopped:         8663
Number of times breaked:         9

Total time for CPA algorithm:        17.437s (Max:     6.391s)
  Time for choose from waitlist:      0.096s
  Time for precision adjustment:      8.450s
  Time for transfer relation:         6.232s
  Time for merge operator:            1.494s
  Time for stop operator:             0.223s
  Time for adding to reached set:     0.263s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                  10 (count: 9, min: 1, max: 2, avg: 1.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.459s
  Counterexample analysis:                             6.216s (Max:     2.318s, Calls: 9)
    Refinement sat check:                              5.775s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.016s
  Precision update:                                    0.007s
  ARG update:                                          0.034s

Length of refined path (in blocks):                      10 (count: 9, min: 1, max: 2, avg: 1.11)
Number of affected states:                                1 (count: 9, min: 0, max: 1, avg: 0.11)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         1 (count: 9, min: 0, max: 1, avg: 0.11)
Length (states) of path with itp 'false':                 0 (count: 9, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 9, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 19380
Max. size of reached set after ref.:  15453
Avg. size of reached set before ref.: 10742.44
Avg. size of reached set after ref.:  10305.22

Total time for CEGAR algorithm:      24.955s
Time for refinements:                 7.400s
Average time for refinement:          0.822s
Max time for refinement:              2.732s

Code Coverage
-----------------------------
  Function coverage:      0.623
  Visited lines:          1054
  Total lines:            1693
  Line coverage:          0.623
  Visited conditions:     592
  Total conditions:       748
  Condition coverage:     0.791

CPAchecker general statistics
-----------------------------
Number of program locations:     2215
Number of CFA edges:             2708
Number of relevant variables:    284
Number of functions:             69
Number of loops:                 9
Size of reached set:             27264
  Number of reached locations:   1151 (52%)
    Avg states per location:     23
    Max states per location:     162 (at node N270)
  Number of reached functions:   43 (62%)
  Number of partitions:          27262
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2374 (before lines 2978-3006), Function cleanup called from node N6, stack depth 4 [76d1f6ea], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        3

Time for analysis setup:          4.774s
  Time for loading CPAs:          1.014s
  Time for loading parser:        0.858s
  Time for CFA construction:      2.672s
    Time for parsing file(s):     0.777s
    Time for AST to CFA:          0.825s
    Time for CFA sanity check:    0.277s
    Time for post-processing:     0.610s
      Time for var class.:        0.332s
Time for Analysis:               24.955s
CPU time for analysis:           24.950s
Total time for CPAchecker:       29.736s
Total CPU time for CPAchecker:   29.720s
Time for statistics:              0.560s

Time for Garbage Collector:       0.872s (in 29 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                110MB (   105 MiB) max;     58MB (    56 MiB) avg;    119MB (   113 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     32MB (    31 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8204MB (  7824 MiB) max;   8151MB (  7774 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
