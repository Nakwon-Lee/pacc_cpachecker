scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product56_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qe7c8z2w/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 467: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 499: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 513: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 522: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 708: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 717: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 772: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 791: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 899: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 922: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            47 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            24 (51%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (49%)
  Times precision was empty:       3 (6%)
  Times precision was {false}:     15 (32%)
  Times result was cached:         13 (28%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      16 (34%)
  Times result was 'false':        18 (38%)
Number of strengthen sat checks:   0
Number of coverage checks:         1427
  BDD entailment checks:           15
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       76
Number of predicates discovered:          5
Number of abstraction locations:          3
Max number of predicates per location:    4
Avg number of predicates per location:    3
Total predicates per abstraction:         79
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 2.55
Number of irrelevant predicates:          22 (28%)
Number of preds handled by boolean abs:   36 (46%)
  Total number of models for allsat:      43
  Max number of models for allsat:        6
  Avg number of models for allsat:        2.69

Time for post operator:                  0.634s
  Time for path formula creation:        0.556s
Time for strengthen operator:            0.057s
Time for prec operator:                  0.542s
  Time for abstraction:                  0.468s (Max:     0.027s, Count: 47)
    Boolean abstraction:                 0.145s
    Solving time:                        0.140s (Max:     0.016s)
    Model enumeration time:              0.028s
    Time for BDD construction:           0.025s (Max:     0.008s)
Time for merge operator:                 0.128s
Time for coverage check:                 0.006s
  Time for BDD entailment checks:        0.005s
Total time for SMT solver (w/o itp):     0.168s

Number of path formula cache hits:   6690 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.473s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               259
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          90 (count: 230, min: 0, max: 59, avg: 0.39)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.145s
Automaton transfers with branching:                0
Automaton transfer successors:                         8996 (count: 8996, min: 1, max: 1, avg: 1.00) [1 x 8996]

CPA algorithm statistics
------------------------
Number of iterations:            7009
Max size of waitlist:            10
Average size of waitlist:        6
Number of computed successors:   7760
Max successors for one state:    2
Number of times merged:          706
Number of times stopped:         711
Number of times breaked:         5

Total time for CPA algorithm:         2.862s (Max:     0.682s)
  Time for choose from waitlist:      0.034s
  Time for precision adjustment:      0.848s
  Time for transfer relation:         1.468s
  Time for merge operator:            0.238s
  Time for stop operator:             0.054s
  Time for adding to reached set:     0.070s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  16 (count: 5, min: 2, max: 4, avg: 3.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.231s
  Counterexample analysis:                             0.113s (Max:     0.033s, Calls: 5)
    Refinement sat check:                              0.069s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.031s
  Precision update:                                    0.005s
  ARG update:                                          0.058s

Length of refined path (in blocks):                      16 (count: 5, min: 2, max: 4, avg: 3.20)
Number of affected states:                               10 (count: 5, min: 1, max: 3, avg: 2.00)
Length (states) of path with itp 'true':                  1 (count: 5, min: 0, max: 1, avg: 0.20)
Length (states) of path with itp non-trivial itp:        10 (count: 5, min: 1, max: 3, avg: 2.00)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           3 (count: 5, min: 0, max: 1, avg: 0.60)
Equal non-trivial interpolants along paths:               2 (count: 5, min: 0, max: 2, avg: 0.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 1868
Max. size of reached set after ref.:  958
Avg. size of reached set before ref.: 1246.80
Avg. size of reached set after ref.:  217.20

Total time for CEGAR algorithm:       3.165s
Time for refinements:                 0.298s
Average time for refinement:          0.059s
Max time for refinement:              0.079s

Code Coverage
-----------------------------
  Function coverage:      0.732
  Visited lines:          172
  Total lines:            462
  Line coverage:          0.372
  Visited conditions:     50
  Total conditions:       80
  Condition coverage:     0.625

CPAchecker general statistics
-----------------------------
Number of program locations:     670
Number of CFA edges:             725
Number of relevant variables:    120
Number of functions:             41
Number of loops:                 5
Size of reached set:             1884
  Number of reached locations:   233 (35%)
    Avg states per location:     8
    Max states per location:     48 (at node N415)
  Number of reached functions:   30 (73%)
  Number of partitions:          1883
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N560 (before lines 829-878), Function test called from node N664, stack depth 3 [409c54f], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.305s
  Time for loading CPAs:          0.812s
  Time for loading parser:        0.754s
  Time for CFA construction:      1.462s
    Time for parsing file(s):     0.540s
    Time for AST to CFA:          0.311s
    Time for CFA sanity check:    0.099s
    Time for post-processing:     0.333s
      Time for var class.:        0.149s
Time for Analysis:                3.165s
CPU time for analysis:            3.160s
Time for analyzing result:        0.002s
Total time for CPAchecker:        6.475s
Total CPU time for CPAchecker:    6.470s
Time for statistics:              0.135s

Time for Garbage Collector:       0.194s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     32MB (    31 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     26MB (    25 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8082MB (  7708 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
