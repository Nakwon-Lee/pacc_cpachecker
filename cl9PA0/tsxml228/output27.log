scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product25_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_u7m849gk/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 229: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 238: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 308: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 438: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 447: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 767: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 813: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 909: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 604: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1696 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1615 (95%)
  Because of loop head:            62 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         19 (1%)
  Times precision was empty:       248 (15%)
  Times precision was {false}:     60 (4%)
  Times result was cached:         1033 (61%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      355 (21%)
  Times result was 'false':        205 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         732
  BDD entailment checks:           362
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          31
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         4413
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 10.63
Number of irrelevant predicates:          1250 (28%)
Number of preds handled by boolean abs:   876 (20%)
  Total number of models for allsat:      363
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  0.574s
  Time for path formula creation:        0.542s
Time for strengthen operator:            0.033s
Time for prec operator:                  1.761s
  Time for abstraction:                  1.694s (Max:     0.017s, Count: 1696)
    Boolean abstraction:                 0.454s
    Solving time:                        0.300s (Max:     0.013s)
    Model enumeration time:              0.026s
    Time for BDD construction:           0.058s (Max:     0.008s)
Time for merge operator:                 0.016s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     0.326s

Number of path formula cache hits:   3849 (52%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.517s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               291
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         884 (count: 3163, min: 0, max: 359, avg: 0.28)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.084s
Automaton transfers with branching:                0
Automaton transfer successors:                         6590 (count: 6590, min: 1, max: 1, avg: 1.00) [1 x 6590]

CPA algorithm statistics
------------------------
Number of iterations:            5134
Max size of waitlist:            20
Average size of waitlist:        6
Number of computed successors:   5830
Max successors for one state:    2
Number of times merged:          185
Number of times stopped:         317
Number of times breaked:         19

Total time for CPA algorithm:         3.261s (Max:     0.315s)
  Time for choose from waitlist:      0.013s
  Time for precision adjustment:      1.991s
  Time for transfer relation:         0.990s
  Time for merge operator:            0.059s
  Time for stop operator:             0.047s
  Time for adding to reached set:     0.036s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   19
Avg. length of target path (in blocks):                 755 (count: 19, min: 19, max: 57, avg: 39.74)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.321s
  Counterexample analysis:                             0.194s (Max:     0.020s, Calls: 19)
    Refinement sat check:                              0.068s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.041s
  Precision update:                                    0.021s
  ARG update:                                          0.040s

Length of refined path (in blocks):                     471 (count: 19, min: 13, max: 48, avg: 24.79)
Number of affected states:                              340 (count: 19, min: 9, max: 47, avg: 17.89)
Length (states) of path with itp 'true':                112 (count: 19, min: 0, max: 22, avg: 5.89)
Length (states) of path with itp non-trivial itp:       340 (count: 19, min: 9, max: 47, avg: 17.89)
Length (states) of path with itp 'false':                19 (count: 19, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 19, min: 0, max: 1, avg: 0.21)
Equal non-trivial interpolants along paths:             317 (count: 19, min: 8, max: 45, avg: 16.68)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                19
Number of successful refinements:     19
Number of failed refinements:         0
Max. size of reached set before ref.: 538
Max. size of reached set after ref.:  189
Avg. size of reached set before ref.: 314.84
Avg. size of reached set after ref.:  53.11

Total time for CEGAR algorithm:       3.655s
Time for refinements:                 0.393s
Average time for refinement:          0.020s
Max time for refinement:              0.044s

Code Coverage
-----------------------------
  Function coverage:      0.429
  Visited lines:          80
  Total lines:            420
  Line coverage:          0.190
  Visited conditions:     26
  Total conditions:       66
  Condition coverage:     0.394

CPAchecker general statistics
-----------------------------
Number of program locations:     598
Number of CFA edges:             641
Number of relevant variables:    114
Number of functions:             35
Number of loops:                 5
Size of reached set:             336
  Number of reached locations:   106 (18%)
    Avg states per location:     3
    Max states per location:     10 (at node N53)
  Number of reached functions:   15 (43%)
  Number of partitions:          330
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N15 (before lines 63-108), Function test called from node N589, stack depth 3 [396e6d9], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.388s
  Time for loading CPAs:          0.635s
  Time for loading parser:        0.506s
  Time for CFA construction:      1.116s
    Time for parsing file(s):     0.358s
    Time for AST to CFA:          0.293s
    Time for CFA sanity check:    0.081s
    Time for post-processing:     0.258s
      Time for var class.:        0.116s
Time for Analysis:                3.655s
CPU time for analysis:            3.650s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.046s
Total CPU time for CPAchecker:    6.040s
Time for statistics:              0.092s

Time for Garbage Collector:       0.124s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     35MB (    33 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8049MB (  7676 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
