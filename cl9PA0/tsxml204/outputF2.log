scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product39_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4vr6w3xa/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 60: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 83: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 212: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 221: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 276: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 829: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 875: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 923: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 955: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 969: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 666: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            31601 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  31002 (98%)
  Because of loop head:            456 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         143 (0%)
  Times precision was empty:       3571 (11%)
  Times precision was {false}:     399 (1%)
  Times result was cached:         21509 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6122 (19%)
  Times result was 'false':        3993 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         26568
  BDD entailment checks:           19584
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          24
Number of abstraction locations:          55
Max number of predicates per location:    14
Avg number of predicates per location:    7
Total predicates per abstraction:         166108
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 25.47
Number of irrelevant predicates:          61880 (37%)
Number of preds handled by boolean abs:   34376 (21%)
  Total number of models for allsat:      8427
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.38

Time for post operator:                  1.531s
  Time for path formula creation:        1.432s
Time for strengthen operator:            0.155s
Time for prec operator:                 14.681s
  Time for abstraction:                 14.214s (Max:     0.028s, Count: 31601)
    Boolean abstraction:                 4.331s
    Solving time:                        3.230s (Max:     0.016s)
    Model enumeration time:              0.445s
    Time for BDD construction:           0.258s (Max:     0.010s)
Time for merge operator:                 0.087s
Time for coverage check:                 0.076s
  Time for BDD entailment checks:        0.063s
Total time for SMT solver (w/o itp):     3.675s

Number of path formula cache hits:   105758 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.177s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               6774
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       21656 (count: 66911, min: 0, max: 1171, avg: 0.32)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.292s
Automaton transfers with branching:                0
Automaton transfer successors:                       118858 (count: 118858, min: 1, max: 1, avg: 1.00) [1 x 118858]

CPA algorithm statistics
------------------------
Number of iterations:            94445
Max size of waitlist:            28
Average size of waitlist:        10
Number of computed successors:   105484
Max successors for one state:    2
Number of times merged:          3492
Number of times stopped:         6716
Number of times breaked:         143

Total time for CPA algorithm:        19.963s (Max:     1.367s)
  Time for choose from waitlist:      0.121s
  Time for precision adjustment:     15.374s
  Time for transfer relation:         3.228s
  Time for merge operator:            0.244s
  Time for stop operator:             0.270s
  Time for adding to reached set:     0.174s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   143
Avg. length of target path (in blocks):                9167 (count: 143, min: 25, max: 135, avg: 64.10)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.169s
  Counterexample analysis:                             1.513s (Max:     0.099s, Calls: 143)
    Refinement sat check:                              0.618s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.104s
  Precision update:                                    0.098s
  ARG update:                                          0.299s

Length of refined path (in blocks):                    7417 (count: 143, min: 14, max: 125, avg: 51.87)
Number of affected states:                             2654 (count: 143, min: 1, max: 94, avg: 18.56)
Length (states) of path with itp 'true':               4620 (count: 143, min: 0, max: 80, avg: 32.31)
Length (states) of path with itp non-trivial itp:      2654 (count: 143, min: 1, max: 94, avg: 18.56)
Length (states) of path with itp 'false':               143 (count: 143, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          75 (count: 143, min: 0, max: 5, avg: 0.52)
Equal non-trivial interpolants along paths:            2436 (count: 143, min: 0, max: 91, avg: 17.03)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                143
Number of successful refinements:     143
Number of failed refinements:         0
Max. size of reached set before ref.: 5570
Max. size of reached set after ref.:  4264
Avg. size of reached set before ref.: 1801.80
Avg. size of reached set after ref.:  1179.08

Total time for CEGAR algorithm:      22.580s
Time for refinements:                 2.490s
Average time for refinement:          0.017s
Max time for refinement:              0.119s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          134
  Total lines:            439
  Line coverage:          0.305
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     632
Number of CFA edges:             683
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             5728
  Number of reached locations:   184 (29%)
    Avg states per location:     31
    Max states per location:     153 (at node N262)
  Number of reached functions:   26 (68%)
  Number of partitions:          5607
    Avg size of partitions:      1
    Max size of partitions:      20 (with key [N237 (after line 428), Function test called from node N192, stack depth 3 [1b18f7a], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.328s
  Time for loading CPAs:          0.611s
  Time for loading parser:        0.525s
  Time for CFA construction:      1.079s
    Time for parsing file(s):     0.392s
    Time for AST to CFA:          0.248s
    Time for CFA sanity check:    0.075s
    Time for post-processing:     0.223s
      Time for var class.:        0.089s
Time for Analysis:               22.581s
CPU time for analysis:           22.580s
Time for analyzing result:        0.004s
Total time for CPAchecker:       24.913s
Total CPU time for CPAchecker:   24.910s
Time for statistics:              0.144s

Time for Garbage Collector:       0.578s (in 74 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    70 MiB) max;     45MB (    43 MiB) avg;     78MB (    75 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     34MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8076MB (  7702 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
