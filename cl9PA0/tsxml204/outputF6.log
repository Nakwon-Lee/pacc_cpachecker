scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product39_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_p5a2qo26/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 60: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 83: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 212: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 221: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 276: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 829: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 875: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 923: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 955: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 969: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 666: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            38422 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  37693 (98%)
  Because of loop head:            528 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         201 (1%)
  Times precision was empty:       1630 (4%)
  Times precision was {false}:     376 (1%)
  Times result was cached:         30760 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5656 (15%)
  Times result was 'false':        5065 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         28162
  BDD entailment checks:           20380
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          23
Number of abstraction locations:          55
Max number of predicates per location:    13
Avg number of predicates per location:    7
Total predicates per abstraction:         212324
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 35.20
Number of irrelevant predicates:          85671 (40%)
Number of preds handled by boolean abs:   26840 (13%)
  Total number of models for allsat:      7773
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.37

Time for post operator:                  1.524s
  Time for path formula creation:        1.428s
Time for strengthen operator:            0.213s
Time for prec operator:                 14.780s
  Time for abstraction:                 14.252s (Max:     0.022s, Count: 38422)
    Boolean abstraction:                 3.774s
    Solving time:                        2.855s (Max:     0.016s)
    Model enumeration time:              0.357s
    Time for BDD construction:           0.213s (Max:     0.012s)
Time for merge operator:                 0.087s
Time for coverage check:                 0.076s
  Time for BDD entailment checks:        0.062s
Total time for SMT solver (w/o itp):     3.212s

Number of path formula cache hits:   140126 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.112s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               7105
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       20751 (count: 62724, min: 0, max: 1641, avg: 0.33)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.356s
Automaton transfers with branching:                0
Automaton transfer successors:                       142746 (count: 142746, min: 1, max: 1, avg: 1.00) [1 x 142746]

CPA algorithm statistics
------------------------
Number of iterations:            113249
Max size of waitlist:            29
Average size of waitlist:        10
Number of computed successors:   126506
Max successors for one state:    2
Number of times merged:          3891
Number of times stopped:         7147
Number of times breaked:         201

Total time for CPA algorithm:        20.391s (Max:     0.791s)
  Time for choose from waitlist:      0.090s
  Time for precision adjustment:     15.617s
  Time for transfer relation:         3.310s
  Time for merge operator:            0.269s
  Time for stop operator:             0.284s
  Time for adding to reached set:     0.196s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   201
Avg. length of target path (in blocks):               14723 (count: 201, min: 33, max: 134, avg: 73.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.143s
  Counterexample analysis:                             2.446s (Max:     0.053s, Calls: 201)
    Refinement sat check:                              0.981s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.065s
  Precision update:                                    0.160s
  ARG update:                                          0.322s

Length of refined path (in blocks):                   11029 (count: 201, min: 14, max: 111, avg: 54.87)
Number of affected states:                             4181 (count: 201, min: 1, max: 75, avg: 20.80)
Length (states) of path with itp 'true':               6647 (count: 201, min: 0, max: 103, avg: 33.07)
Length (states) of path with itp non-trivial itp:      4181 (count: 201, min: 1, max: 75, avg: 20.80)
Length (states) of path with itp 'false':               201 (count: 201, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         137 (count: 201, min: 0, max: 5, avg: 0.68)
Equal non-trivial interpolants along paths:            3843 (count: 201, min: 0, max: 74, avg: 19.12)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                201
Number of successful refinements:     201
Number of failed refinements:         0
Max. size of reached set before ref.: 4942
Max. size of reached set after ref.:  4675
Avg. size of reached set before ref.: 1678.91
Avg. size of reached set after ref.:  1131.82

Total time for CEGAR algorithm:      24.203s
Time for refinements:                 3.623s
Average time for refinement:          0.018s
Max time for refinement:              0.080s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          134
  Total lines:            439
  Line coverage:          0.305
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     632
Number of CFA edges:             683
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             4331
  Number of reached locations:   184 (29%)
    Avg states per location:     23
    Max states per location:     134 (at node N262)
  Number of reached functions:   26 (68%)
  Number of partitions:          4260
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N220 (before lines 406-453), Function test called from node N192, stack depth 3 [60055158], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.043s
  Time for loading CPAs:          0.526s
  Time for loading parser:        0.559s
  Time for CFA construction:      0.842s
    Time for parsing file(s):     0.280s
    Time for AST to CFA:          0.215s
    Time for CFA sanity check:    0.072s
    Time for post-processing:     0.172s
      Time for var class.:        0.063s
Time for Analysis:               24.203s
CPU time for analysis:           24.190s
Time for analyzing result:        0.003s
Total time for CPAchecker:       26.250s
Total CPU time for CPAchecker:   26.240s
Time for statistics:              0.110s

Time for Garbage Collector:       0.635s (in 88 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     45MB (    43 MiB) avg;     77MB (    73 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     34MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8010MB (  7639 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
