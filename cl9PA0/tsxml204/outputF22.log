scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product39_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bh_tajw7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 60: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 83: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 212: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 221: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 276: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 829: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 875: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 923: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 955: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 969: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 666: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            35238 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  34744 (99%)
  Because of loop head:            268 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         226 (1%)
  Times precision was empty:       1394 (4%)
  Times precision was {false}:     364 (1%)
  Times result was cached:         27954 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5526 (16%)
  Times result was 'false':        5372 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         26160
  BDD entailment checks:           18206
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          27
Number of abstraction locations:          55
Max number of predicates per location:    13
Avg number of predicates per location:    7
Total predicates per abstraction:         231748
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 39.35
Number of irrelevant predicates:          78081 (34%)
Number of preds handled by boolean abs:   30145 (13%)
  Total number of models for allsat:      8530
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.54

Time for post operator:                  1.135s
  Time for path formula creation:        1.080s
Time for strengthen operator:            0.207s
Time for prec operator:                 15.045s
  Time for abstraction:                 14.641s (Max:     0.017s, Count: 35238)
    Boolean abstraction:                 3.982s
    Solving time:                        2.932s (Max:     0.013s)
    Model enumeration time:              0.402s
    Time for BDD construction:           0.190s (Max:     0.012s)
Time for merge operator:                 0.076s
Time for coverage check:                 0.049s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     3.334s

Number of path formula cache hits:   134689 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.931s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               8596
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       22101 (count: 60011, min: 0, max: 1843, avg: 0.37)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.348s
Automaton transfers with branching:                0
Automaton transfer successors:                       134668 (count: 134668, min: 1, max: 1, avg: 1.00) [1 x 134668]

CPA algorithm statistics
------------------------
Number of iterations:            105523
Max size of waitlist:            25
Average size of waitlist:        8
Number of computed successors:   118694
Max successors for one state:    2
Number of times merged:          3977
Number of times stopped:         6912
Number of times breaked:         226

Total time for CPA algorithm:        19.729s (Max:     0.962s)
  Time for choose from waitlist:      0.118s
  Time for precision adjustment:     15.690s
  Time for transfer relation:         2.875s
  Time for merge operator:            0.173s
  Time for stop operator:             0.215s
  Time for adding to reached set:     0.196s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   226
Avg. length of target path (in blocks):               17203 (count: 226, min: 25, max: 195, avg: 76.12)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.122s
  Counterexample analysis:                             2.555s (Max:     0.059s, Calls: 226)
    Refinement sat check:                              0.960s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.060s
  Precision update:                                    0.154s
  ARG update:                                          0.220s

Length of refined path (in blocks):                   13269 (count: 226, min: 14, max: 148, avg: 58.71)
Number of affected states:                             3843 (count: 226, min: 1, max: 73, avg: 17.00)
Length (states) of path with itp 'true':               9200 (count: 226, min: 0, max: 140, avg: 40.71)
Length (states) of path with itp non-trivial itp:      3843 (count: 226, min: 1, max: 73, avg: 17.00)
Length (states) of path with itp 'false':               226 (count: 226, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         157 (count: 226, min: 0, max: 7, avg: 0.69)
Equal non-trivial interpolants along paths:            3460 (count: 226, min: 0, max: 70, avg: 15.31)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                226
Number of successful refinements:     226
Number of failed refinements:         0
Max. size of reached set before ref.: 4150
Max. size of reached set after ref.:  3727
Avg. size of reached set before ref.: 1617.39
Avg. size of reached set after ref.:  1166.59

Total time for CEGAR algorithm:      23.520s
Time for refinements:                 3.609s
Average time for refinement:          0.015s
Max time for refinement:              0.065s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          134
  Total lines:            439
  Line coverage:          0.305
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     632
Number of CFA edges:             683
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             4531
  Number of reached locations:   184 (29%)
    Avg states per location:     24
    Max states per location:     118 (at node N262)
  Number of reached functions:   26 (68%)
  Number of partitions:          4448
    Avg size of partitions:      1
    Max size of partitions:      16 (with key [N237 (after line 428), Function test called from node N192, stack depth 3 [710a1b5e], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.101s
  Time for loading CPAs:          0.598s
  Time for loading parser:        0.469s
  Time for CFA construction:      0.913s
    Time for parsing file(s):     0.324s
    Time for AST to CFA:          0.227s
    Time for CFA sanity check:    0.043s
    Time for post-processing:     0.190s
      Time for var class.:        0.080s
Time for Analysis:               23.521s
CPU time for analysis:           23.520s
Time for analyzing result:        0.005s
Total time for CPAchecker:       25.626s
Total CPU time for CPAchecker:   25.620s
Time for statistics:              0.121s

Time for Garbage Collector:       0.593s (in 92 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    70 MiB) max;     45MB (    43 MiB) avg;     77MB (    73 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    33 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8077MB (  7703 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
