scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product39_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bqqpbdmu/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 60: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 83: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 212: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 221: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 276: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 829: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 875: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 923: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 955: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 969: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 666: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            22151 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21835 (99%)
  Because of loop head:            172 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         144 (1%)
  Times precision was empty:       1034 (5%)
  Times precision was {false}:     361 (2%)
  Times result was cached:         15108 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5648 (25%)
  Times result was 'false':        3366 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         16914
  BDD entailment checks:           11704
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          26
Number of abstraction locations:          55
Max number of predicates per location:    14
Avg number of predicates per location:    7
Total predicates per abstraction:         129570
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 21.56
Number of irrelevant predicates:          38237 (30%)
Number of preds handled by boolean abs:   32293 (25%)
  Total number of models for allsat:      7899
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.40

Time for post operator:                  1.232s
  Time for path formula creation:        1.151s
Time for strengthen operator:            0.132s
Time for prec operator:                 14.302s
  Time for abstraction:                 13.921s (Max:     0.022s, Count: 22151)
    Boolean abstraction:                 4.544s
    Solving time:                        3.344s (Max:     0.020s)
    Model enumeration time:              0.466s
    Time for BDD construction:           0.314s (Max:     0.012s)
Time for merge operator:                 0.063s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     3.810s

Number of path formula cache hits:   72549 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.012s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               6344
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       19779 (count: 52795, min: 0, max: 1725, avg: 0.37)
Time for BDD node cleanup:                             0.026s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.396s
Automaton transfers with branching:                0
Automaton transfer successors:                        85733 (count: 85733, min: 1, max: 1, avg: 1.00) [1 x 85733]

CPA algorithm statistics
------------------------
Number of iterations:            67331
Max size of waitlist:            26
Average size of waitlist:        8
Number of computed successors:   75755
Max successors for one state:    2
Number of times merged:          2605
Number of times stopped:         4442
Number of times breaked:         144

Total time for CPA algorithm:        18.711s (Max:     1.404s)
  Time for choose from waitlist:      0.109s
  Time for precision adjustment:     14.940s
  Time for transfer relation:         2.700s
  Time for merge operator:            0.210s
  Time for stop operator:             0.199s
  Time for adding to reached set:     0.145s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   144
Avg. length of target path (in blocks):                9388 (count: 144, min: 25, max: 135, avg: 65.19)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.147s
  Counterexample analysis:                             1.639s (Max:     0.062s, Calls: 144)
    Refinement sat check:                              0.609s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.056s
  Precision update:                                    0.140s
  ARG update:                                          0.244s

Length of refined path (in blocks):                    7729 (count: 144, min: 14, max: 125, avg: 53.67)
Number of affected states:                             2738 (count: 144, min: 1, max: 71, avg: 19.01)
Length (states) of path with itp 'true':               4847 (count: 144, min: 0, max: 82, avg: 33.66)
Length (states) of path with itp non-trivial itp:      2738 (count: 144, min: 1, max: 71, avg: 19.01)
Length (states) of path with itp 'false':               144 (count: 144, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          89 (count: 144, min: 0, max: 5, avg: 0.62)
Equal non-trivial interpolants along paths:            2505 (count: 144, min: 0, max: 70, avg: 17.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                144
Number of successful refinements:     144
Number of failed refinements:         0
Max. size of reached set before ref.: 5331
Max. size of reached set after ref.:  4190
Avg. size of reached set before ref.: 1493.14
Avg. size of reached set after ref.:  1057.35

Total time for CEGAR algorithm:      21.264s
Time for refinements:                 2.415s
Average time for refinement:          0.016s
Max time for refinement:              0.082s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          134
  Total lines:            439
  Line coverage:          0.305
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     632
Number of CFA edges:             683
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             5195
  Number of reached locations:   184 (29%)
    Avg states per location:     28
    Max states per location:     132 (at node N262)
  Number of reached functions:   26 (68%)
  Number of partitions:          5085
    Avg size of partitions:      1
    Max size of partitions:      16 (with key [N237 (after line 428), Function test called from node N192, stack depth 3 [1e748256], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.312s
  Time for loading CPAs:          0.652s
  Time for loading parser:        0.439s
  Time for CFA construction:      1.055s
    Time for parsing file(s):     0.316s
    Time for AST to CFA:          0.313s
    Time for CFA sanity check:    0.089s
    Time for post-processing:     0.217s
      Time for var class.:        0.085s
Time for Analysis:               21.264s
CPU time for analysis:           21.270s
Time for analyzing result:        0.004s
Total time for CPAchecker:       23.579s
Total CPU time for CPAchecker:   23.580s
Time for statistics:              0.128s

Time for Garbage Collector:       0.456s (in 59 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    67 MiB) max;     45MB (    43 MiB) avg;     74MB (    70 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    33 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8076MB (  7702 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
