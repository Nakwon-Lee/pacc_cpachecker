scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product39_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lsq7nwyi/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 60: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 83: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 212: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 221: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 276: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 829: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 875: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 923: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 955: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 969: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 666: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            32310 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  31801 (98%)
  Because of loop head:            285 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         224 (1%)
  Times precision was empty:       1270 (4%)
  Times precision was {false}:     325 (1%)
  Times result was cached:         25029 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5686 (18%)
  Times result was 'false':        4511 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         21404
  BDD entailment checks:           13992
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          27
Number of abstraction locations:          55
Max number of predicates per location:    14
Avg number of predicates per location:    7
Total predicates per abstraction:         197901
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 32.92
Number of irrelevant predicates:          79326 (40%)
Number of preds handled by boolean abs:   31233 (16%)
  Total number of models for allsat:      7710
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.36

Time for post operator:                  1.276s
  Time for path formula creation:        1.194s
Time for strengthen operator:            0.148s
Time for prec operator:                 14.102s
  Time for abstraction:                 13.707s (Max:     0.039s, Count: 32310)
    Boolean abstraction:                 4.176s
    Solving time:                        3.063s (Max:     0.037s)
    Model enumeration time:              0.431s
    Time for BDD construction:           0.219s (Max:     0.009s)
Time for merge operator:                 0.090s
Time for coverage check:                 0.051s
  Time for BDD entailment checks:        0.048s
Total time for SMT solver (w/o itp):     3.494s

Number of path formula cache hits:   124600 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.029s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               7357
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       22146 (count: 56167, min: 0, max: 1346, avg: 0.39)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.343s
Automaton transfers with branching:                0
Automaton transfer successors:                       124885 (count: 124885, min: 1, max: 1, avg: 1.00) [1 x 124885]

CPA algorithm statistics
------------------------
Number of iterations:            98071
Max size of waitlist:            26
Average size of waitlist:        8
Number of computed successors:   110190
Max successors for one state:    2
Number of times merged:          3706
Number of times stopped:         6264
Number of times breaked:         224

Total time for CPA algorithm:        18.979s (Max:     0.954s)
  Time for choose from waitlist:      0.081s
  Time for precision adjustment:     14.769s
  Time for transfer relation:         3.014s
  Time for merge operator:            0.222s
  Time for stop operator:             0.205s
  Time for adding to reached set:     0.197s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   224
Avg. length of target path (in blocks):               16158 (count: 224, min: 26, max: 131, avg: 72.13)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.157s
  Counterexample analysis:                             2.522s (Max:     0.051s, Calls: 224)
    Refinement sat check:                              0.988s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.066s
  Precision update:                                    0.169s
  ARG update:                                          0.243s

Length of refined path (in blocks):                   11928 (count: 224, min: 14, max: 121, avg: 53.25)
Number of affected states:                             4059 (count: 224, min: 1, max: 73, avg: 18.12)
Length (states) of path with itp 'true':               7645 (count: 224, min: 0, max: 80, avg: 34.13)
Length (states) of path with itp non-trivial itp:      4059 (count: 224, min: 1, max: 73, avg: 18.12)
Length (states) of path with itp 'false':               224 (count: 224, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         178 (count: 224, min: 0, max: 7, avg: 0.79)
Equal non-trivial interpolants along paths:            3657 (count: 224, min: 0, max: 70, avg: 16.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                224
Number of successful refinements:     224
Number of failed refinements:         0
Max. size of reached set before ref.: 5377
Max. size of reached set after ref.:  3554
Avg. size of reached set before ref.: 1179.96
Avg. size of reached set after ref.:  758.00

Total time for CEGAR algorithm:      22.680s
Time for refinements:                 3.561s
Average time for refinement:          0.015s
Max time for refinement:              0.058s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          134
  Total lines:            439
  Line coverage:          0.305
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     632
Number of CFA edges:             683
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             4896
  Number of reached locations:   184 (29%)
    Avg states per location:     26
    Max states per location:     132 (at node N262)
  Number of reached functions:   26 (68%)
  Number of partitions:          4802
    Avg size of partitions:      1
    Max size of partitions:      18 (with key [N237 (after line 428), Function test called from node N192, stack depth 3 [7f734052], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.411s
  Time for loading CPAs:          0.620s
  Time for loading parser:        0.517s
  Time for CFA construction:      1.160s
    Time for parsing file(s):     0.395s
    Time for AST to CFA:          0.277s
    Time for CFA sanity check:    0.078s
    Time for post-processing:     0.223s
      Time for var class.:        0.089s
Time for Analysis:               22.681s
CPU time for analysis:           22.680s
Time for analyzing result:        0.003s
Total time for CPAchecker:       25.095s
Total CPU time for CPAchecker:   25.080s
Time for statistics:              0.125s

Time for Garbage Collector:       0.547s (in 80 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    67 MiB) max;     44MB (    42 MiB) avg;     73MB (    70 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8076MB (  7701 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
