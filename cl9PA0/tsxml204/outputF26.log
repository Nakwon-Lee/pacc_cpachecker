scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product39_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__xvrxns6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 60: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 83: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 212: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 221: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 276: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 829: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 875: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 923: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 955: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 969: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 666: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            16602 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  16332 (98%)
  Because of loop head:            192 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         78 (0%)
  Times precision was empty:       872 (5%)
  Times precision was {false}:     318 (2%)
  Times result was cached:         10360 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5052 (30%)
  Times result was 'false':        2631 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         14399
  BDD entailment checks:           10601
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          24
Number of abstraction locations:          55
Max number of predicates per location:    14
Avg number of predicates per location:    7
Total predicates per abstraction:         100202
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 18.66
Number of irrelevant predicates:          28537 (28%)
Number of preds handled by boolean abs:   30437 (30%)
  Total number of models for allsat:      6708
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.33

Time for post operator:                  1.260s
  Time for path formula creation:        1.231s
Time for strengthen operator:            0.090s
Time for prec operator:                 13.165s
  Time for abstraction:                 12.863s (Max:     0.047s, Count: 16602)
    Boolean abstraction:                 4.069s
    Solving time:                        2.896s (Max:     0.018s)
    Model enumeration time:              0.405s
    Time for BDD construction:           0.240s (Max:     0.012s)
Time for merge operator:                 0.067s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):     3.301s

Number of path formula cache hits:   46523 (63%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.052s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               5898
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       18492 (count: 47429, min: 0, max: 2032, avg: 0.39)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.275s
Automaton transfers with branching:                0
Automaton transfer successors:                        63659 (count: 63659, min: 1, max: 1, avg: 1.00) [1 x 63659]

CPA algorithm statistics
------------------------
Number of iterations:            50137
Max size of waitlist:            22
Average size of waitlist:        8
Number of computed successors:   56376
Max successors for one state:    2
Number of times merged:          1899
Number of times stopped:         3364
Number of times breaked:         78

Total time for CPA algorithm:        17.400s (Max:     1.618s)
  Time for choose from waitlist:      0.101s
  Time for precision adjustment:     13.776s
  Time for transfer relation:         2.647s
  Time for merge operator:            0.162s
  Time for stop operator:             0.193s
  Time for adding to reached set:     0.120s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   78
Avg. length of target path (in blocks):                4590 (count: 78, min: 26, max: 135, avg: 58.85)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.497s
  Counterexample analysis:                             1.112s (Max:     0.096s, Calls: 78)
    Refinement sat check:                              0.424s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.050s
  Precision update:                                    0.104s
  ARG update:                                          0.173s

Length of refined path (in blocks):                    3557 (count: 78, min: 14, max: 125, avg: 45.60)
Number of affected states:                             1921 (count: 78, min: 1, max: 94, avg: 24.63)
Length (states) of path with itp 'true':               1558 (count: 78, min: 0, max: 80, avg: 19.97)
Length (states) of path with itp non-trivial itp:      1921 (count: 78, min: 1, max: 94, avg: 24.63)
Length (states) of path with itp 'false':                78 (count: 78, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          61 (count: 78, min: 0, max: 5, avg: 0.78)
Equal non-trivial interpolants along paths:            1782 (count: 78, min: 0, max: 91, avg: 22.85)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                78
Number of successful refinements:     78
Number of failed refinements:         0
Max. size of reached set before ref.: 4938
Max. size of reached set after ref.:  3424
Avg. size of reached set before ref.: 1352.97
Avg. size of reached set after ref.:  784.58

Total time for CEGAR algorithm:      19.290s
Time for refinements:                 1.803s
Average time for refinement:          0.023s
Max time for refinement:              0.105s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          134
  Total lines:            439
  Line coverage:          0.305
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     632
Number of CFA edges:             683
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             6047
  Number of reached locations:   184 (29%)
    Avg states per location:     32
    Max states per location:     146 (at node N262)
  Number of reached functions:   26 (68%)
  Number of partitions:          5933
    Avg size of partitions:      1
    Max size of partitions:      22 (with key [N237 (after line 428), Function test called from node N192, stack depth 3 [119a8125], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.123s
  Time for loading CPAs:          0.533s
  Time for loading parser:        0.484s
  Time for CFA construction:      1.020s
    Time for parsing file(s):     0.363s
    Time for AST to CFA:          0.239s
    Time for CFA sanity check:    0.076s
    Time for post-processing:     0.233s
      Time for var class.:        0.108s
Time for Analysis:               19.291s
CPU time for analysis:           19.280s
Time for analyzing result:        0.005s
Total time for CPAchecker:       21.419s
Total CPU time for CPAchecker:   21.400s
Time for statistics:              0.164s

Time for Garbage Collector:       0.396s (in 46 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    67 MiB) max;     44MB (    42 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
