scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product39_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_o0czyd0e/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 60: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 83: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 212: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 221: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 276: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 829: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 875: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 923: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 955: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 969: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 666: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            20544 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20283 (99%)
  Because of loop head:            173 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         88 (0%)
  Times precision was empty:       820 (4%)
  Times precision was {false}:     356 (2%)
  Times result was cached:         13355 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6013 (29%)
  Times result was 'false':        3287 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         20602
  BDD entailment checks:           15934
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          27
Number of abstraction locations:          55
Max number of predicates per location:    15
Avg number of predicates per location:    7
Total predicates per abstraction:         130695
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 20.52
Number of irrelevant predicates:          36841 (28%)
Number of preds handled by boolean abs:   37108 (28%)
  Total number of models for allsat:      8076
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.34

Time for post operator:                  1.430s
  Time for path formula creation:        1.366s
Time for strengthen operator:            0.103s
Time for prec operator:                 14.790s
  Time for abstraction:                 14.435s (Max:     0.020s, Count: 20544)
    Boolean abstraction:                 4.846s
    Solving time:                        3.510s (Max:     0.013s)
    Model enumeration time:              0.480s
    Time for BDD construction:           0.255s (Max:     0.010s)
Time for merge operator:                 0.080s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     3.990s

Number of path formula cache hits:   60156 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.163s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               6899
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       21639 (count: 59383, min: 0, max: 1941, avg: 0.36)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.242s
Automaton transfers with branching:                0
Automaton transfer successors:                        78607 (count: 78607, min: 1, max: 1, avg: 1.00) [1 x 78607]

CPA algorithm statistics
------------------------
Number of iterations:            61771
Max size of waitlist:            25
Average size of waitlist:        7
Number of computed successors:   69500
Max successors for one state:    2
Number of times merged:          2334
Number of times stopped:         4258
Number of times breaked:         88

Total time for CPA algorithm:        19.215s (Max:     1.903s)
  Time for choose from waitlist:      0.103s
  Time for precision adjustment:     15.340s
  Time for transfer relation:         2.754s
  Time for merge operator:            0.207s
  Time for stop operator:             0.178s
  Time for adding to reached set:     0.144s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   88
Avg. length of target path (in blocks):                5456 (count: 88, min: 26, max: 133, avg: 62.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.472s
  Counterexample analysis:                             1.098s (Max:     0.058s, Calls: 88)
    Refinement sat check:                              0.422s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.062s
  Precision update:                                    0.053s
  ARG update:                                          0.169s

Length of refined path (in blocks):                    4285 (count: 88, min: 14, max: 103, avg: 48.69)
Number of affected states:                             2134 (count: 88, min: 1, max: 73, avg: 24.25)
Length (states) of path with itp 'true':               2063 (count: 88, min: 0, max: 80, avg: 23.44)
Length (states) of path with itp non-trivial itp:      2134 (count: 88, min: 1, max: 73, avg: 24.25)
Length (states) of path with itp 'false':                88 (count: 88, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          75 (count: 88, min: 0, max: 7, avg: 0.85)
Equal non-trivial interpolants along paths:            1971 (count: 88, min: 0, max: 70, avg: 22.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                88
Number of successful refinements:     88
Number of failed refinements:         0
Max. size of reached set before ref.: 5660
Max. size of reached set after ref.:  4799
Avg. size of reached set before ref.: 1743.03
Avg. size of reached set after ref.:  1106.45

Total time for CEGAR algorithm:      21.019s
Time for refinements:                 1.702s
Average time for refinement:          0.019s
Max time for refinement:              0.083s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          134
  Total lines:            439
  Line coverage:          0.305
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     632
Number of CFA edges:             683
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             5937
  Number of reached locations:   184 (29%)
    Avg states per location:     32
    Max states per location:     143 (at node N262)
  Number of reached functions:   26 (68%)
  Number of partitions:          5825
    Avg size of partitions:      1
    Max size of partitions:      21 (with key [N237 (after line 428), Function test called from node N192, stack depth 3 [39e2bb89], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.123s
  Time for loading CPAs:          0.512s
  Time for loading parser:        0.503s
  Time for CFA construction:      0.970s
    Time for parsing file(s):     0.335s
    Time for AST to CFA:          0.261s
    Time for CFA sanity check:    0.069s
    Time for post-processing:     0.202s
      Time for var class.:        0.082s
Time for Analysis:               21.019s
CPU time for analysis:           21.020s
Time for analyzing result:        0.005s
Total time for CPAchecker:       23.145s
Total CPU time for CPAchecker:   23.140s
Time for statistics:              0.141s

Time for Garbage Collector:       0.473s (in 58 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    70 MiB) max;     45MB (    42 MiB) avg;     77MB (    74 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   8010MB (  7639 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
