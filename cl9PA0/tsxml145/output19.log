scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2j9w5usk/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 140: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 225: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 906: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 952: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 743: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2457 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2375 (97%)
  Because of loop head:            60 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         22 (1%)
  Times precision was empty:       421 (17%)
  Times precision was {false}:     68 (3%)
  Times result was cached:         1772 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      196 (8%)
  Times result was 'false':        392 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         531
  BDD entailment checks:           299
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          40
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         5028
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 19.05
Number of irrelevant predicates:          1254 (25%)
Number of preds handled by boolean abs:   393 (8%)
  Total number of models for allsat:      219
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.12

Time for post operator:                  0.306s
  Time for path formula creation:        0.300s
Time for strengthen operator:            0.025s
Time for prec operator:                  1.092s
  Time for abstraction:                  1.002s (Max:     0.015s, Count: 2457)
    Boolean abstraction:                 0.197s
    Solving time:                        0.169s (Max:     0.013s)
    Model enumeration time:              0.011s
    Time for BDD construction:           0.017s (Max:     0.007s)
Time for merge operator:                 0.006s
Time for coverage check:                 0.013s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):     0.180s

Number of path formula cache hits:   8385 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.268s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               244
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         436 (count: 2360, min: 0, max: 176, avg: 0.18)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.090s
Automaton transfers with branching:                0
Automaton transfer successors:                         8886 (count: 8886, min: 1, max: 1, avg: 1.00) [1 x 8886]

CPA algorithm statistics
------------------------
Number of iterations:            6972
Max size of waitlist:            11
Average size of waitlist:        5
Number of computed successors:   7786
Max successors for one state:    2
Number of times merged:          116
Number of times stopped:         271
Number of times breaked:         22

Total time for CPA algorithm:         2.309s (Max:     0.207s)
  Time for choose from waitlist:      0.043s
  Time for precision adjustment:      1.266s
  Time for transfer relation:         0.757s
  Time for merge operator:            0.024s
  Time for stop operator:             0.083s
  Time for adding to reached set:     0.040s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   22
Avg. length of target path (in blocks):                 654 (count: 22, min: 19, max: 52, avg: 29.73)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.277s
  Counterexample analysis:                             0.161s (Max:     0.016s, Calls: 22)
    Refinement sat check:                              0.056s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.022s
  Precision update:                                    0.035s
  ARG update:                                          0.044s

Length of refined path (in blocks):                     505 (count: 22, min: 13, max: 49, avg: 22.95)
Number of affected states:                              457 (count: 22, min: 12, max: 48, avg: 20.77)
Length (states) of path with itp 'true':                 26 (count: 22, min: 0, max: 13, avg: 1.18)
Length (states) of path with itp non-trivial itp:       457 (count: 22, min: 12, max: 48, avg: 20.77)
Length (states) of path with itp 'false':                22 (count: 22, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           6 (count: 22, min: 0, max: 1, avg: 0.27)
Equal non-trivial interpolants along paths:             429 (count: 22, min: 11, max: 46, avg: 19.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 743
Max. size of reached set after ref.:  132
Avg. size of reached set before ref.: 299.77
Avg. size of reached set after ref.:  14.73

Total time for CEGAR algorithm:       2.635s
Time for refinements:                 0.325s
Average time for refinement:          0.014s
Max time for refinement:              0.055s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          104
  Total lines:            433
  Line coverage:          0.240
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     623
Number of CFA edges:             673
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             853
  Number of reached locations:   142 (23%)
    Avg states per location:     6
    Max states per location:     31 (at node N147)
  Number of reached functions:   18 (49%)
  Number of partitions:          842
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N295 (before lines 524-571), Function test called from node N46, stack depth 3 [664632e9], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.292s
  Time for loading CPAs:          0.550s
  Time for loading parser:        0.543s
  Time for CFA construction:      1.005s
    Time for parsing file(s):     0.362s
    Time for AST to CFA:          0.265s
    Time for CFA sanity check:    0.066s
    Time for post-processing:     0.206s
      Time for var class.:        0.073s
Time for Analysis:                2.635s
CPU time for analysis:            2.630s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.931s
Total CPU time for CPAchecker:    4.920s
Time for statistics:              0.074s

Time for Garbage Collector:       0.110s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 56MB (    53 MiB) max;     34MB (    32 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8035MB (  7663 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
