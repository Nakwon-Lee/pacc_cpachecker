scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2tdi8_1a/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 140: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 225: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 906: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 952: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 743: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3849 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3711 (96%)
  Because of loop head:            114 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24 (1%)
  Times precision was empty:       394 (10%)
  Times precision was {false}:     106 (3%)
  Times result was cached:         2734 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      615 (16%)
  Times result was 'false':        583 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         1827
  BDD entailment checks:           1381
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          40
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         9753
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 13.53
Number of irrelevant predicates:          2797 (29%)
Number of preds handled by boolean abs:   1453 (15%)
  Total number of models for allsat:      660
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  0.582s
  Time for path formula creation:        0.561s
Time for strengthen operator:            0.024s
Time for prec operator:                  2.327s
  Time for abstraction:                  2.201s (Max:     0.017s, Count: 3849)
    Boolean abstraction:                 0.590s
    Solving time:                        0.374s (Max:     0.013s)
    Model enumeration time:              0.021s
    Time for BDD construction:           0.113s (Max:     0.009s)
Time for merge operator:                 0.022s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     0.395s

Number of path formula cache hits:   10014 (61%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.522s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               293
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1362 (count: 6157, min: 0, max: 351, avg: 0.22)
Time for BDD node cleanup:                             0.026s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.136s
Automaton transfers with branching:                0
Automaton transfer successors:                        14306 (count: 14306, min: 1, max: 1, avg: 1.00) [1 x 14306]

CPA algorithm statistics
------------------------
Number of iterations:            11209
Max size of waitlist:            30
Average size of waitlist:        9
Number of computed successors:   12727
Max successors for one state:    2
Number of times merged:          223
Number of times stopped:         624
Number of times breaked:         24

Total time for CPA algorithm:         4.202s (Max:     0.405s)
  Time for choose from waitlist:      0.043s
  Time for precision adjustment:      2.613s
  Time for transfer relation:         1.140s
  Time for merge operator:            0.063s
  Time for stop operator:             0.106s
  Time for adding to reached set:     0.097s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                1242 (count: 24, min: 19, max: 73, avg: 51.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.366s
  Counterexample analysis:                             0.229s (Max:     0.017s, Calls: 24)
    Refinement sat check:                              0.119s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.038s
  Precision update:                                    0.025s
  ARG update:                                          0.045s

Length of refined path (in blocks):                     792 (count: 24, min: 13, max: 49, avg: 33.00)
Number of affected states:                              622 (count: 24, min: 12, max: 37, avg: 25.92)
Length (states) of path with itp 'true':                146 (count: 24, min: 0, max: 12, avg: 6.08)
Length (states) of path with itp non-trivial itp:       622 (count: 24, min: 12, max: 37, avg: 25.92)
Length (states) of path with itp 'false':                24 (count: 24, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 24, min: 0, max: 1, avg: 0.13)
Equal non-trivial interpolants along paths:             595 (count: 24, min: 11, max: 36, avg: 24.79)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 1221
Max. size of reached set after ref.:  625
Avg. size of reached set before ref.: 567.96
Avg. size of reached set after ref.:  141.54

Total time for CEGAR algorithm:       4.620s
Time for refinements:                 0.412s
Average time for refinement:          0.017s
Max time for refinement:              0.040s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          104
  Total lines:            433
  Line coverage:          0.240
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     623
Number of CFA edges:             673
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             1287
  Number of reached locations:   142 (23%)
    Avg states per location:     9
    Max states per location:     48 (at node N147)
  Number of reached functions:   18 (49%)
  Number of partitions:          1248
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N295 (before lines 524-571), Function test called from node N46, stack depth 3 [70c31b17], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.498s
  Time for loading CPAs:          0.747s
  Time for loading parser:        0.532s
  Time for CFA construction:      1.144s
    Time for parsing file(s):     0.423s
    Time for AST to CFA:          0.329s
    Time for CFA sanity check:    0.062s
    Time for post-processing:     0.215s
      Time for var class.:        0.079s
Time for Analysis:                4.620s
CPU time for analysis:            4.620s
Time for analyzing result:        0.001s
Total time for CPAchecker:        7.122s
Total CPU time for CPAchecker:    7.120s
Time for statistics:              0.079s

Time for Garbage Collector:       0.110s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     37MB (    35 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     29MB (    28 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8051MB (  7678 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
