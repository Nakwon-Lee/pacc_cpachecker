scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_at3111vs/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 140: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 225: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 906: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 952: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 743: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3645 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3581 (98%)
  Because of loop head:            43 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         21 (1%)
  Times precision was empty:       1394 (38%)
  Times precision was {false}:     68 (2%)
  Times result was cached:         1987 (55%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      196 (5%)
  Times result was 'false':        406 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         791
  BDD entailment checks:           387
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          40
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         4685
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 17.75
Number of irrelevant predicates:          1760 (38%)
Number of preds handled by boolean abs:   319 (7%)
  Total number of models for allsat:      223
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.14

Time for post operator:                  0.464s
  Time for path formula creation:        0.436s
Time for strengthen operator:            0.043s
Time for prec operator:                  1.180s
  Time for abstraction:                  1.038s (Max:     0.013s, Count: 3645)
    Boolean abstraction:                 0.164s
    Solving time:                        0.127s (Max:     0.013s)
    Model enumeration time:              0.010s
    Time for BDD construction:           0.016s (Max:     0.006s)
Time for merge operator:                 0.014s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):     0.137s

Number of path formula cache hits:   13357 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.376s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               224
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         390 (count: 3382, min: 0, max: 117, avg: 0.12)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.120s
Automaton transfers with branching:                0
Automaton transfer successors:                        13632 (count: 13632, min: 1, max: 1, avg: 1.00) [1 x 13632]

CPA algorithm statistics
------------------------
Number of iterations:            10200
Max size of waitlist:            48
Average size of waitlist:        14
Number of computed successors:   11573
Max successors for one state:    2
Number of times merged:          202
Number of times stopped:         440
Number of times breaked:         21

Total time for CPA algorithm:         2.846s (Max:     0.401s)
  Time for choose from waitlist:      0.040s
  Time for precision adjustment:      1.420s
  Time for transfer relation:         1.093s
  Time for merge operator:            0.039s
  Time for stop operator:             0.062s
  Time for adding to reached set:     0.052s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   21
Avg. length of target path (in blocks):                 562 (count: 21, min: 19, max: 48, avg: 26.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.259s
  Counterexample analysis:                             0.138s (Max:     0.014s, Calls: 21)
    Refinement sat check:                              0.071s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.013s
  ARG update:                                          0.061s

Length of refined path (in blocks):                     404 (count: 21, min: 13, max: 40, avg: 19.24)
Number of affected states:                              370 (count: 21, min: 12, max: 39, avg: 17.62)
Length (states) of path with itp 'true':                 13 (count: 21, min: 0, max: 13, avg: 0.62)
Length (states) of path with itp non-trivial itp:       370 (count: 21, min: 12, max: 39, avg: 17.62)
Length (states) of path with itp 'false':                21 (count: 21, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 21, min: 0, max: 1, avg: 0.19)
Equal non-trivial interpolants along paths:             345 (count: 21, min: 11, max: 38, avg: 16.43)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                21
Number of successful refinements:     21
Number of failed refinements:         0
Max. size of reached set before ref.: 975
Max. size of reached set after ref.:  412
Avg. size of reached set before ref.: 482.05
Avg. size of reached set after ref.:  22.48

Total time for CEGAR algorithm:       3.149s
Time for refinements:                 0.303s
Average time for refinement:          0.014s
Max time for refinement:              0.044s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          104
  Total lines:            433
  Line coverage:          0.240
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     623
Number of CFA edges:             673
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             1077
  Number of reached locations:   142 (23%)
    Avg states per location:     7
    Max states per location:     41 (at node N147)
  Number of reached functions:   18 (49%)
  Number of partitions:          1056
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N295 (before lines 524-571), Function test called from node N46, stack depth 3 [4751cd3], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.144s
  Time for loading CPAs:          0.598s
  Time for loading parser:        0.457s
  Time for CFA construction:      0.971s
    Time for parsing file(s):     0.339s
    Time for AST to CFA:          0.234s
    Time for CFA sanity check:    0.075s
    Time for post-processing:     0.199s
      Time for var class.:        0.077s
Time for Analysis:                3.149s
CPU time for analysis:            3.150s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.296s
Total CPU time for CPAchecker:    5.300s
Time for statistics:              0.078s

Time for Garbage Collector:       0.092s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    55 MiB) max;     34MB (    32 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8045MB (  7673 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
