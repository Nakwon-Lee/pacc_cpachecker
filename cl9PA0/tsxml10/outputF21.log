scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product30_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_x3zltagk/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 140: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 506: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 626: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 780: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 789: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 297: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2608 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2553 (98%)
  Because of loop head:            35 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         20 (1%)
  Times precision was empty:       841 (32%)
  Times precision was {false}:     64 (2%)
  Times result was cached:         1523 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      180 (7%)
  Times result was 'false':        330 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         488
  BDD entailment checks:           182
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          39
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         3930
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 16.11
Number of irrelevant predicates:          1271 (32%)
Number of preds handled by boolean abs:   330 (8%)
  Total number of models for allsat:      202
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.12

Time for post operator:                  0.520s
  Time for path formula creation:        0.493s
Time for strengthen operator:            0.042s
Time for prec operator:                  1.093s
  Time for abstraction:                  0.980s (Max:     0.016s, Count: 2608)
    Boolean abstraction:                 0.210s
    Solving time:                        0.136s (Max:     0.012s)
    Model enumeration time:              0.023s
    Time for BDD construction:           0.035s (Max:     0.008s)
Time for merge operator:                 0.006s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):     0.159s

Number of path formula cache hits:   8411 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.439s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               232
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         389 (count: 2522, min: 0, max: 159, avg: 0.15)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.120s
Automaton transfers with branching:                0
Automaton transfer successors:                         9724 (count: 9724, min: 1, max: 1, avg: 1.00) [1 x 9724]

CPA algorithm statistics
------------------------
Number of iterations:            7285
Max size of waitlist:            38
Average size of waitlist:        12
Number of computed successors:   8247
Max successors for one state:    2
Number of times merged:          153
Number of times stopped:         277
Number of times breaked:         20

Total time for CPA algorithm:         2.677s (Max:     0.426s)
  Time for choose from waitlist:      0.026s
  Time for precision adjustment:      1.382s
  Time for transfer relation:         1.022s
  Time for merge operator:            0.035s
  Time for stop operator:             0.047s
  Time for adding to reached set:     0.081s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   20
Avg. length of target path (in blocks):                 617 (count: 20, min: 20, max: 60, avg: 30.85)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.281s
  Counterexample analysis:                             0.168s (Max:     0.025s, Calls: 20)
    Refinement sat check:                              0.089s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.024s
  Precision update:                                    0.027s
  ARG update:                                          0.036s

Length of refined path (in blocks):                     448 (count: 20, min: 14, max: 41, avg: 22.40)
Number of affected states:                              362 (count: 20, min: 2, max: 40, avg: 18.10)
Length (states) of path with itp 'true':                 66 (count: 20, min: 0, max: 14, avg: 3.30)
Length (states) of path with itp non-trivial itp:       362 (count: 20, min: 2, max: 40, avg: 18.10)
Length (states) of path with itp 'false':                20 (count: 20, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 20, min: 0, max: 1, avg: 0.10)
Equal non-trivial interpolants along paths:             340 (count: 20, min: 1, max: 39, avg: 17.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                20
Number of successful refinements:     20
Number of failed refinements:         0
Max. size of reached set before ref.: 799
Max. size of reached set after ref.:  356
Avg. size of reached set before ref.: 418.40
Avg. size of reached set after ref.:  87.25

Total time for CEGAR algorithm:       3.033s
Time for refinements:                 0.348s
Average time for refinement:          0.017s
Max time for refinement:              0.043s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          103
  Total lines:            431
  Line coverage:          0.239
  Visited conditions:     30
  Total conditions:       70
  Condition coverage:     0.429

CPAchecker general statistics
-----------------------------
Number of program locations:     619
Number of CFA edges:             667
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             1018
  Number of reached locations:   138 (22%)
    Avg states per location:     7
    Max states per location:     37 (at node N573)
  Number of reached functions:   18 (49%)
  Number of partitions:          1005
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N597 (before lines 892-939), Function test called from node N46, stack depth 3 [697d6ded], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.230s
  Time for loading CPAs:          0.507s
  Time for loading parser:        0.597s
  Time for CFA construction:      0.979s
    Time for parsing file(s):     0.352s
    Time for AST to CFA:          0.232s
    Time for CFA sanity check:    0.088s
    Time for post-processing:     0.184s
      Time for var class.:        0.070s
Time for Analysis:                3.033s
CPU time for analysis:            3.030s
Time for analyzing result:        0.010s
Total time for CPAchecker:        5.276s
Total CPU time for CPAchecker:    5.280s
Time for statistics:              0.123s

Time for Garbage Collector:       0.097s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    56 MiB) max;     34MB (    32 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8039MB (  7667 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
