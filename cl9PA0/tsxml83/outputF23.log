scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product39_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9is6_zta/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 241: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 566: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 909: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 955: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            16225 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15897 (98%)
  Because of loop head:            215 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         113 (1%)
  Times precision was empty:       2018 (12%)
  Times precision was {false}:     191 (1%)
  Times result was cached:         11573 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2443 (15%)
  Times result was 'false':        2068 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         9291
  BDD entailment checks:           5385
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          10
Number of abstraction locations:          54
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         54347
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 20.63
Number of irrelevant predicates:          18027 (33%)
Number of preds handled by boolean abs:   7420 (14%)
  Total number of models for allsat:      2431
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  1.116s
  Time for path formula creation:        1.068s
Time for strengthen operator:            0.097s
Time for prec operator:                  6.362s
  Time for abstraction:                  6.037s (Max:     0.018s, Count: 16225)
    Boolean abstraction:                 1.568s
    Solving time:                        1.140s (Max:     0.013s)
    Model enumeration time:              0.120s
    Time for BDD construction:           0.146s (Max:     0.013s)
Time for merge operator:                 0.039s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.022s
Total time for SMT solver (w/o itp):     1.260s

Number of path formula cache hits:   55232 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.930s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               611
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5057 (count: 23839, min: 0, max: 363, avg: 0.21)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.206s
Automaton transfers with branching:                0
Automaton transfer successors:                        66016 (count: 66016, min: 1, max: 1, avg: 1.00) [1 x 66016]

CPA algorithm statistics
------------------------
Number of iterations:            51441
Max size of waitlist:            61
Average size of waitlist:        13
Number of computed successors:   57872
Max successors for one state:    2
Number of times merged:          1953
Number of times stopped:         3266
Number of times breaked:         113

Total time for CPA algorithm:        10.221s (Max:     0.522s)
  Time for choose from waitlist:      0.091s
  Time for precision adjustment:      6.912s
  Time for transfer relation:         2.337s
  Time for merge operator:            0.162s
  Time for stop operator:             0.156s
  Time for adding to reached set:     0.181s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   113
Avg. length of target path (in blocks):                5448 (count: 113, min: 21, max: 85, avg: 48.21)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.175s
  Counterexample analysis:                             0.774s (Max:     0.020s, Calls: 113)
    Refinement sat check:                              0.349s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.045s
  Precision update:                                    0.058s
  ARG update:                                          0.205s

Length of refined path (in blocks):                    4174 (count: 113, min: 15, max: 67, avg: 36.94)
Number of affected states:                             1393 (count: 113, min: 2, max: 62, avg: 12.33)
Length (states) of path with itp 'true':               2668 (count: 113, min: 0, max: 55, avg: 23.61)
Length (states) of path with itp non-trivial itp:      1393 (count: 113, min: 2, max: 62, avg: 12.33)
Length (states) of path with itp 'false':               113 (count: 113, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          16 (count: 113, min: 0, max: 2, avg: 0.14)
Equal non-trivial interpolants along paths:            1264 (count: 113, min: 1, max: 60, avg: 11.19)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                113
Number of successful refinements:     113
Number of failed refinements:         0
Max. size of reached set before ref.: 2962
Max. size of reached set after ref.:  2878
Avg. size of reached set before ref.: 1135.43
Avg. size of reached set after ref.:  700.98

Total time for CEGAR algorithm:      11.672s
Time for refinements:                 1.372s
Average time for refinement:          0.012s
Max time for refinement:              0.041s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          147
  Total lines:            439
  Line coverage:          0.335
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     629
Number of CFA edges:             679
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             3446
  Number of reached locations:   200 (32%)
    Avg states per location:     17
    Max states per location:     89 (at node N209)
  Number of reached functions:   25 (68%)
  Number of partitions:          3319
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N170 (before lines 306-353), Function test called from node N110, stack depth 3 [60e890e7], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.086s
  Time for loading CPAs:          0.547s
  Time for loading parser:        0.467s
  Time for CFA construction:      0.897s
    Time for parsing file(s):     0.290s
    Time for AST to CFA:          0.257s
    Time for CFA sanity check:    0.042s
    Time for post-processing:     0.191s
      Time for var class.:        0.078s
Time for Analysis:               11.673s
CPU time for analysis:           11.670s
Time for analyzing result:        0.003s
Total time for CPAchecker:       13.763s
Total CPU time for CPAchecker:   13.750s
Time for statistics:              0.129s

Time for Garbage Collector:       0.235s (in 33 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     41MB (    39 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8070MB (  7696 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
