scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product39_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nw5286ul/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 241: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 566: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 909: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 955: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            17669 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  17338 (98%)
  Because of loop head:            255 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         76 (0%)
  Times precision was empty:       1814 (10%)
  Times precision was {false}:     288 (2%)
  Times result was cached:         13193 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2374 (13%)
  Times result was 'false':        2306 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         12164
  BDD entailment checks:           8260
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          11
Number of abstraction locations:          51
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         64859
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 24.36
Number of irrelevant predicates:          24533 (38%)
Number of preds handled by boolean abs:   7845 (12%)
  Total number of models for allsat:      2638
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.11

Time for post operator:                  1.216s
  Time for path formula creation:        1.146s
Time for strengthen operator:            0.136s
Time for prec operator:                  7.138s
  Time for abstraction:                  6.839s (Max:     0.022s, Count: 17669)
    Boolean abstraction:                 1.734s
    Solving time:                        1.223s (Max:     0.013s)
    Model enumeration time:              0.162s
    Time for BDD construction:           0.169s (Max:     0.012s)
Time for merge operator:                 0.076s
Time for coverage check:                 0.053s
  Time for BDD entailment checks:        0.039s
Total time for SMT solver (w/o itp):     1.385s

Number of path formula cache hits:   53631 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.049s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               734
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5380 (count: 27050, min: 0, max: 399, avg: 0.20)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.289s
Automaton transfers with branching:                0
Automaton transfer successors:                        70697 (count: 70697, min: 1, max: 1, avg: 1.00) [1 x 70697]

CPA algorithm statistics
------------------------
Number of iterations:            54679
Max size of waitlist:            104
Average size of waitlist:        26
Number of computed successors:   62710
Max successors for one state:    2
Number of times merged:          1952
Number of times stopped:         3747
Number of times breaked:         76

Total time for CPA algorithm:        11.383s (Max:     0.577s)
  Time for choose from waitlist:      0.087s
  Time for precision adjustment:      7.678s
  Time for transfer relation:         2.642s
  Time for merge operator:            0.154s
  Time for stop operator:             0.218s
  Time for adding to reached set:     0.176s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   76
Avg. length of target path (in blocks):                4533 (count: 76, min: 21, max: 99, avg: 59.64)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.104s
  Counterexample analysis:                             0.717s (Max:     0.019s, Calls: 76)
    Refinement sat check:                              0.380s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.060s
  Precision update:                                    0.092s
  ARG update:                                          0.182s

Length of refined path (in blocks):                    2836 (count: 76, min: 15, max: 70, avg: 37.32)
Number of affected states:                             1087 (count: 76, min: 3, max: 46, avg: 14.30)
Length (states) of path with itp 'true':               1673 (count: 76, min: 0, max: 54, avg: 22.01)
Length (states) of path with itp non-trivial itp:      1087 (count: 76, min: 3, max: 46, avg: 14.30)
Length (states) of path with itp 'false':                76 (count: 76, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           9 (count: 76, min: 0, max: 3, avg: 0.12)
Equal non-trivial interpolants along paths:            1002 (count: 76, min: 2, max: 44, avg: 13.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                76
Number of successful refinements:     76
Number of failed refinements:         0
Max. size of reached set before ref.: 3323
Max. size of reached set after ref.:  2630
Avg. size of reached set before ref.: 1517.04
Avg. size of reached set after ref.:  805.66

Total time for CEGAR algorithm:      12.769s
Time for refinements:                 1.333s
Average time for refinement:          0.017s
Max time for refinement:              0.041s

Code Coverage
-----------------------------
  Function coverage:      0.649
  Visited lines:          131
  Total lines:            439
  Line coverage:          0.298
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     629
Number of CFA edges:             679
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             2593
  Number of reached locations:   179 (28%)
    Avg states per location:     14
    Max states per location:     67 (at node N134)
  Number of reached functions:   24 (65%)
  Number of partitions:          2505
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N170 (before lines 306-353), Function test called from node N110, stack depth 3 [1d77a5e8], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.145s
  Time for loading CPAs:          0.568s
  Time for loading parser:        0.484s
  Time for CFA construction:      0.996s
    Time for parsing file(s):     0.382s
    Time for AST to CFA:          0.235s
    Time for CFA sanity check:    0.081s
    Time for post-processing:     0.171s
      Time for var class.:        0.061s
Time for Analysis:               12.769s
CPU time for analysis:           12.760s
Time for analyzing result:        0.002s
Total time for CPAchecker:       14.916s
Total CPU time for CPAchecker:   14.910s
Time for statistics:              0.113s

Time for Garbage Collector:       0.288s (in 37 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     41MB (    39 MiB) avg;     70MB (    66 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8070MB (  7696 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
