scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product39_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jr2p0dfi/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 241: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 566: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 909: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 955: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            22169 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21797 (98%)
  Because of loop head:            303 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         69 (0%)
  Times precision was empty:       4871 (22%)
  Times precision was {false}:     215 (1%)
  Times result was cached:         14711 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2372 (11%)
  Times result was 'false':        1916 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         11413
  BDD entailment checks:           6553
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          10
Number of abstraction locations:          54
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         57126
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 22.08
Number of irrelevant predicates:          20142 (35%)
Number of preds handled by boolean abs:   6613 (12%)
  Total number of models for allsat:      2503
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.06

Time for post operator:                  1.609s
  Time for path formula creation:        1.440s
Time for strengthen operator:            0.149s
Time for prec operator:                  6.914s
  Time for abstraction:                  6.490s (Max:     0.024s, Count: 22169)
    Boolean abstraction:                 1.624s
    Solving time:                        1.102s (Max:     0.013s)
    Model enumeration time:              0.167s
    Time for BDD construction:           0.205s (Max:     0.012s)
Time for merge operator:                 0.079s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     1.269s

Number of path formula cache hits:   74289 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.242s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               489
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5137 (count: 27593, min: 0, max: 385, avg: 0.19)
Time for BDD node cleanup:                             0.025s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.330s
Automaton transfers with branching:                0
Automaton transfer successors:                        86940 (count: 86940, min: 1, max: 1, avg: 1.00) [1 x 86940]

CPA algorithm statistics
------------------------
Number of iterations:            69704
Max size of waitlist:            33
Average size of waitlist:        13
Number of computed successors:   77149
Max successors for one state:    2
Number of times merged:          2430
Number of times stopped:         5092
Number of times breaked:         69

Total time for CPA algorithm:        12.376s (Max:     0.898s)
  Time for choose from waitlist:      0.100s
  Time for precision adjustment:      7.733s
  Time for transfer relation:         3.259s
  Time for merge operator:            0.242s
  Time for stop operator:             0.227s
  Time for adding to reached set:     0.198s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   69
Avg. length of target path (in blocks):                3100 (count: 69, min: 21, max: 85, avg: 44.93)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.900s
  Counterexample analysis:                             0.483s (Max:     0.022s, Calls: 69)
    Refinement sat check:                              0.208s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.091s
  ARG update:                                          0.247s

Length of refined path (in blocks):                    2451 (count: 69, min: 15, max: 69, avg: 35.52)
Number of affected states:                             1208 (count: 69, min: 2, max: 62, avg: 17.51)
Length (states) of path with itp 'true':               1174 (count: 69, min: 0, max: 45, avg: 17.01)
Length (states) of path with itp non-trivial itp:      1208 (count: 69, min: 2, max: 62, avg: 17.51)
Length (states) of path with itp 'false':                69 (count: 69, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           9 (count: 69, min: 0, max: 2, avg: 0.13)
Equal non-trivial interpolants along paths:            1130 (count: 69, min: 1, max: 60, avg: 16.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                69
Number of successful refinements:     69
Number of failed refinements:         0
Max. size of reached set before ref.: 5636
Max. size of reached set after ref.:  5544
Avg. size of reached set before ref.: 2116.43
Avg. size of reached set after ref.:  1180.29

Total time for CEGAR algorithm:      13.568s
Time for refinements:                 1.116s
Average time for refinement:          0.016s
Max time for refinement:              0.055s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          147
  Total lines:            439
  Line coverage:          0.335
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     629
Number of CFA edges:             679
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             5548
  Number of reached locations:   200 (32%)
    Avg states per location:     27
    Max states per location:     133 (at node N134)
  Number of reached functions:   25 (68%)
  Number of partitions:          5353
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N213 (before line 389), Function timeShift called from node N189, stack depth 4 [78b5e9c7], stack [main, runTest, test, timeShift]])
  Number of target states:       0

Time for analysis setup:          2.016s
  Time for loading CPAs:          0.556s
  Time for loading parser:        0.459s
  Time for CFA construction:      0.899s
    Time for parsing file(s):     0.315s
    Time for AST to CFA:          0.237s
    Time for CFA sanity check:    0.065s
    Time for post-processing:     0.177s
      Time for var class.:        0.075s
Time for Analysis:               13.568s
CPU time for analysis:           13.570s
Time for analyzing result:        0.010s
Total time for CPAchecker:       15.586s
Total CPU time for CPAchecker:   15.580s
Time for statistics:              0.123s

Time for Garbage Collector:       0.323s (in 39 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     41MB (    39 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8007MB (  7636 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
