scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product39_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6hrjqmj5/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 241: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 566: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 909: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 955: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            15221 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14849 (98%)
  Because of loop head:            268 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         104 (1%)
  Times precision was empty:       909 (6%)
  Times precision was {false}:     207 (1%)
  Times result was cached:         11774 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2331 (15%)
  Times result was 'false':        1968 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         9409
  BDD entailment checks:           6353
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          10
Number of abstraction locations:          54
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         58399
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 23.01
Number of irrelevant predicates:          17220 (29%)
Number of preds handled by boolean abs:   7342 (13%)
  Total number of models for allsat:      2432
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  1.176s
  Time for path formula creation:        1.132s
Time for strengthen operator:            0.096s
Time for prec operator:                  6.535s
  Time for abstraction:                  6.287s (Max:     0.023s, Count: 15221)
    Boolean abstraction:                 1.730s
    Solving time:                        1.213s (Max:     0.022s)
    Model enumeration time:              0.192s
    Time for BDD construction:           0.152s (Max:     0.012s)
Time for merge operator:                 0.075s
Time for coverage check:                 0.039s
  Time for BDD entailment checks:        0.035s
Total time for SMT solver (w/o itp):     1.405s

Number of path formula cache hits:   49268 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.015s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               620
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5116 (count: 23143, min: 0, max: 344, avg: 0.22)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.238s
Automaton transfers with branching:                0
Automaton transfer successors:                        59548 (count: 59548, min: 1, max: 1, avg: 1.00) [1 x 59548]

CPA algorithm statistics
------------------------
Number of iterations:            47268
Max size of waitlist:            32
Average size of waitlist:        7
Number of computed successors:   52525
Max successors for one state:    2
Number of times merged:          1528
Number of times stopped:         3006
Number of times breaked:         104

Total time for CPA algorithm:        10.562s (Max:     0.625s)
  Time for choose from waitlist:      0.078s
  Time for precision adjustment:      7.061s
  Time for transfer relation:         2.452s
  Time for merge operator:            0.181s
  Time for stop operator:             0.192s
  Time for adding to reached set:     0.140s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   104
Avg. length of target path (in blocks):                5503 (count: 104, min: 21, max: 108, avg: 52.91)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.287s
  Counterexample analysis:                             0.869s (Max:     0.028s, Calls: 104)
    Refinement sat check:                              0.422s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.053s
  Precision update:                                    0.113s
  ARG update:                                          0.166s

Length of refined path (in blocks):                    4233 (count: 104, min: 15, max: 71, avg: 40.70)
Number of affected states:                             1574 (count: 104, min: 2, max: 64, avg: 15.13)
Length (states) of path with itp 'true':               2555 (count: 104, min: 0, max: 49, avg: 24.57)
Length (states) of path with itp non-trivial itp:      1574 (count: 104, min: 2, max: 64, avg: 15.13)
Length (states) of path with itp 'false':               104 (count: 104, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          20 (count: 104, min: 0, max: 2, avg: 0.19)
Equal non-trivial interpolants along paths:            1450 (count: 104, min: 1, max: 62, avg: 13.94)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                104
Number of successful refinements:     104
Number of failed refinements:         0
Max. size of reached set before ref.: 3602
Max. size of reached set after ref.:  2696
Avg. size of reached set before ref.: 1468.54
Avg. size of reached set after ref.:  1034.96

Total time for CEGAR algorithm:      12.190s
Time for refinements:                 1.548s
Average time for refinement:          0.014s
Max time for refinement:              0.041s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          147
  Total lines:            439
  Line coverage:          0.335
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     629
Number of CFA edges:             679
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             2460
  Number of reached locations:   200 (32%)
    Avg states per location:     12
    Max states per location:     64 (at node N134)
  Number of reached functions:   25 (68%)
  Number of partitions:          2378
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N170 (before lines 306-353), Function test called from node N110, stack depth 3 [5a2d1e48], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.129s
  Time for loading CPAs:          0.493s
  Time for loading parser:        0.532s
  Time for CFA construction:      1.006s
    Time for parsing file(s):     0.341s
    Time for AST to CFA:          0.232s
    Time for CFA sanity check:    0.068s
    Time for post-processing:     0.225s
      Time for var class.:        0.106s
Time for Analysis:               12.190s
CPU time for analysis:           12.200s
Time for analyzing result:        0.000s
Total time for CPAchecker:       14.323s
Total CPU time for CPAchecker:   14.320s
Time for statistics:              0.077s

Time for Garbage Collector:       0.250s (in 32 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     41MB (    39 MiB) avg;     69MB (    65 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8005MB (  7634 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
