scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_a1eiyr_e/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 140: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 152: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 175: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 626: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 838: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 847: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 902: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 332: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7788 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7688 (99%)
  Because of loop head:            78 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         22 (0%)
  Times precision was empty:       3529 (45%)
  Times precision was {false}:     80 (1%)
  Times result was cached:         3937 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      242 (3%)
  Times result was 'false':        558 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         1916
  BDD entailment checks:           1054
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          40
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         8045
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 24.98
Number of irrelevant predicates:          4186 (52%)
Number of preds handled by boolean abs:   396 (5%)
  Total number of models for allsat:      277
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.14

Time for post operator:                  0.729s
  Time for path formula creation:        0.652s
Time for strengthen operator:            0.041s
Time for prec operator:                  1.596s
  Time for abstraction:                  1.398s (Max:     0.014s, Count: 7788)
    Boolean abstraction:                 0.257s
    Solving time:                        0.150s (Max:     0.013s)
    Model enumeration time:              0.015s
    Time for BDD construction:           0.056s (Max:     0.007s)
Time for merge operator:                 0.009s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     0.165s

Number of path formula cache hits:   29136 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.559s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               232
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         534 (count: 6537, min: 0, max: 218, avg: 0.08)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.132s
Automaton transfers with branching:                0
Automaton transfer successors:                        28601 (count: 28601, min: 1, max: 1, avg: 1.00) [1 x 28601]

CPA algorithm statistics
------------------------
Number of iterations:            21949
Max size of waitlist:            64
Average size of waitlist:        25
Number of computed successors:   24459
Max successors for one state:    2
Number of times merged:          431
Number of times stopped:         1139
Number of times breaked:         22

Total time for CPA algorithm:         4.015s (Max:     0.542s)
  Time for choose from waitlist:      0.051s
  Time for precision adjustment:      1.903s
  Time for transfer relation:         1.529s
  Time for merge operator:            0.063s
  Time for stop operator:             0.111s
  Time for adding to reached set:     0.093s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   22
Avg. length of target path (in blocks):                 631 (count: 22, min: 19, max: 48, avg: 28.68)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.335s
  Counterexample analysis:                             0.195s (Max:     0.018s, Calls: 22)
    Refinement sat check:                              0.097s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.025s
  Precision update:                                    0.006s
  ARG update:                                          0.094s

Length of refined path (in blocks):                     438 (count: 22, min: 13, max: 40, avg: 19.91)
Number of affected states:                              381 (count: 22, min: 9, max: 39, avg: 17.32)
Length (states) of path with itp 'true':                 35 (count: 22, min: 0, max: 13, avg: 1.59)
Length (states) of path with itp non-trivial itp:       381 (count: 22, min: 9, max: 39, avg: 17.32)
Length (states) of path with itp 'false':                22 (count: 22, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 22, min: 0, max: 1, avg: 0.23)
Equal non-trivial interpolants along paths:             354 (count: 22, min: 8, max: 38, avg: 16.09)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 1610
Max. size of reached set after ref.:  900
Avg. size of reached set before ref.: 1060.68
Avg. size of reached set after ref.:  74.36

Total time for CEGAR algorithm:       4.409s
Time for refinements:                 0.383s
Average time for refinement:          0.017s
Max time for refinement:              0.050s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          104
  Total lines:            433
  Line coverage:          0.240
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     623
Number of CFA edges:             673
Number of relevant variables:    115
Number of functions:             37
Number of loops:                 5
Size of reached set:             1064
  Number of reached locations:   142 (23%)
    Avg states per location:     7
    Max states per location:     40 (at node N612)
  Number of reached functions:   18 (49%)
  Number of partitions:          1045
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N456 (before lines 650-697), Function test called from node N46, stack depth 3 [5629e904], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.148s
  Time for loading CPAs:          0.519s
  Time for loading parser:        0.535s
  Time for CFA construction:      0.979s
    Time for parsing file(s):     0.317s
    Time for AST to CFA:          0.258s
    Time for CFA sanity check:    0.069s
    Time for post-processing:     0.192s
      Time for var class.:        0.069s
Time for Analysis:                4.413s
CPU time for analysis:            4.410s
Time for analyzing result:        0.001s
Total time for CPAchecker:        6.564s
Total CPU time for CPAchecker:    6.550s
Time for statistics:              0.063s

Time for Garbage Collector:       0.143s (in 12 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    58 MiB) max;     36MB (    35 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     29MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8049MB (  7676 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
