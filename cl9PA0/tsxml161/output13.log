scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product17_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_c4fvmwf4/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 385: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 535: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 637: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 646: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 750: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 782: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 791: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 891: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 222: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2260 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2210 (98%)
  Because of loop head:            33 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         17 (1%)
  Times precision was empty:       791 (35%)
  Times precision was {false}:     57 (3%)
  Times result was cached:         1215 (54%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      197 (9%)
  Times result was 'false':        237 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         856
  BDD entailment checks:           262
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          34
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         3593
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 14.15
Number of irrelevant predicates:          1452 (40%)
Number of preds handled by boolean abs:   387 (11%)
  Total number of models for allsat:      219
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.11

Time for post operator:                  0.387s
  Time for path formula creation:        0.364s
Time for strengthen operator:            0.065s
Time for prec operator:                  1.001s
  Time for abstraction:                  0.913s (Max:     0.014s, Count: 2260)
    Boolean abstraction:                 0.143s
    Solving time:                        0.084s (Max:     0.009s)
    Model enumeration time:              0.014s
    Time for BDD construction:           0.034s (Max:     0.008s)
Time for merge operator:                 0.026s
Time for coverage check:                 0.007s
  Time for BDD entailment checks:        0.006s
Total time for SMT solver (w/o itp):     0.098s

Number of path formula cache hits:   7543 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.320s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               251
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         449 (count: 2599, min: 0, max: 195, avg: 0.17)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.090s
Automaton transfers with branching:                0
Automaton transfer successors:                         9195 (count: 9195, min: 1, max: 1, avg: 1.00) [1 x 9195]

CPA algorithm statistics
------------------------
Number of iterations:            6954
Max size of waitlist:            34
Average size of waitlist:        10
Number of computed successors:   7933
Max successors for one state:    2
Number of times merged:          297
Number of times stopped:         428
Number of times breaked:         17

Total time for CPA algorithm:         2.326s (Max:     0.346s)
  Time for choose from waitlist:      0.025s
  Time for precision adjustment:      1.176s
  Time for transfer relation:         0.867s
  Time for merge operator:            0.048s
  Time for stop operator:             0.055s
  Time for adding to reached set:     0.044s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   17
Avg. length of target path (in blocks):                 505 (count: 17, min: 20, max: 46, avg: 29.71)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.212s
  Counterexample analysis:                             0.107s (Max:     0.013s, Calls: 17)
    Refinement sat check:                              0.036s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.024s
  ARG update:                                          0.038s

Length of refined path (in blocks):                     369 (count: 17, min: 14, max: 38, avg: 21.71)
Number of affected states:                              306 (count: 17, min: 11, max: 37, avg: 18.00)
Length (states) of path with itp 'true':                 46 (count: 17, min: 0, max: 13, avg: 2.71)
Length (states) of path with itp non-trivial itp:       306 (count: 17, min: 11, max: 37, avg: 18.00)
Length (states) of path with itp 'false':                17 (count: 17, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 17, min: 0, max: 1, avg: 0.12)
Equal non-trivial interpolants along paths:             287 (count: 17, min: 10, max: 36, avg: 16.88)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                17
Number of successful refinements:     17
Number of failed refinements:         0
Max. size of reached set before ref.: 772
Max. size of reached set after ref.:  352
Avg. size of reached set before ref.: 453.59
Avg. size of reached set after ref.:  70.59

Total time for CEGAR algorithm:       2.573s
Time for refinements:                 0.246s
Average time for refinement:          0.014s
Max time for refinement:              0.043s

Code Coverage
-----------------------------
  Function coverage:      0.471
  Visited lines:          96
  Total lines:            415
  Line coverage:          0.231
  Visited conditions:     28
  Total conditions:       64
  Condition coverage:     0.438

CPAchecker general statistics
-----------------------------
Number of program locations:     588
Number of CFA edges:             629
Number of relevant variables:    109
Number of functions:             34
Number of loops:                 5
Size of reached set:             758
  Number of reached locations:   127 (22%)
    Avg states per location:     5
    Max states per location:     31 (at node N0)
  Number of reached functions:   16 (47%)
  Number of partitions:          742
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N543 (before lines 805-850), Function test called from node N361, stack depth 3 [373052b5], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.039s
  Time for loading CPAs:          0.542s
  Time for loading parser:        0.513s
  Time for CFA construction:      0.822s
    Time for parsing file(s):     0.300s
    Time for AST to CFA:          0.189s
    Time for CFA sanity check:    0.060s
    Time for post-processing:     0.178s
      Time for var class.:        0.055s
Time for Analysis:                2.573s
CPU time for analysis:            2.580s
Time for analyzing result:        0.005s
Total time for CPAchecker:        4.616s
Total CPU time for CPAchecker:    4.620s
Time for statistics:              0.074s

Time for Garbage Collector:       0.081s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     34MB (    32 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8040MB (  7667 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
