scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product17_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_r52adgrv/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 385: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 535: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 637: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 646: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 750: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 782: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 791: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 891: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 222: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1920 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1860 (97%)
  Because of loop head:            43 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         17 (1%)
  Times precision was empty:       741 (39%)
  Times precision was {false}:     48 (3%)
  Times result was cached:         924 (48%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      207 (11%)
  Times result was 'false':        109 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         774
  BDD entailment checks:           196
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          31
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         2780
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 10.90
Number of irrelevant predicates:          933 (34%)
Number of preds handled by boolean abs:   483 (17%)
  Total number of models for allsat:      216
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  0.426s
  Time for path formula creation:        0.417s
Time for strengthen operator:            0.030s
Time for prec operator:                  1.067s
  Time for abstraction:                  0.964s (Max:     0.016s, Count: 1920)
    Boolean abstraction:                 0.204s
    Solving time:                        0.147s (Max:     0.009s)
    Model enumeration time:              0.019s
    Time for BDD construction:           0.026s (Max:     0.008s)
Time for merge operator:                 0.037s
Time for coverage check:                 0.010s
  Time for BDD entailment checks:        0.010s
Total time for SMT solver (w/o itp):     0.166s

Number of path formula cache hits:   5837 (63%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.380s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               291
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         272 (count: 2532, min: 0, max: 196, avg: 0.11)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.075s
Automaton transfers with branching:                0
Automaton transfer successors:                         8000 (count: 8000, min: 1, max: 1, avg: 1.00) [1 x 8000]

CPA algorithm statistics
------------------------
Number of iterations:            5924
Max size of waitlist:            43
Average size of waitlist:        14
Number of computed successors:   6825
Max successors for one state:    2
Number of times merged:          289
Number of times stopped:         389
Number of times breaked:         17

Total time for CPA algorithm:         2.440s (Max:     0.329s)
  Time for choose from waitlist:      0.039s
  Time for precision adjustment:      1.305s
  Time for transfer relation:         0.855s
  Time for merge operator:            0.061s
  Time for stop operator:             0.053s
  Time for adding to reached set:     0.034s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   17
Avg. length of target path (in blocks):                 537 (count: 17, min: 19, max: 51, avg: 31.59)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.241s
  Counterexample analysis:                             0.109s (Max:     0.019s, Calls: 17)
    Refinement sat check:                              0.053s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.034s
  Precision update:                                    0.032s
  ARG update:                                          0.042s

Length of refined path (in blocks):                     360 (count: 17, min: 13, max: 31, avg: 21.18)
Number of affected states:                              297 (count: 17, min: 11, max: 30, avg: 17.47)
Length (states) of path with itp 'true':                 46 (count: 17, min: 0, max: 12, avg: 2.71)
Length (states) of path with itp non-trivial itp:       297 (count: 17, min: 11, max: 30, avg: 17.47)
Length (states) of path with itp 'false':                17 (count: 17, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 17, min: 0, max: 1, avg: 0.18)
Equal non-trivial interpolants along paths:             277 (count: 17, min: 10, max: 28, avg: 16.29)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                17
Number of successful refinements:     17
Number of failed refinements:         0
Max. size of reached set before ref.: 754
Max. size of reached set after ref.:  204
Avg. size of reached set before ref.: 397.88
Avg. size of reached set after ref.:  43.00

Total time for CEGAR algorithm:       2.722s
Time for refinements:                 0.280s
Average time for refinement:          0.016s
Max time for refinement:              0.047s

Code Coverage
-----------------------------
  Function coverage:      0.441
  Visited lines:          80
  Total lines:            415
  Line coverage:          0.193
  Visited conditions:     26
  Total conditions:       64
  Condition coverage:     0.406

CPAchecker general statistics
-----------------------------
Number of program locations:     588
Number of CFA edges:             629
Number of relevant variables:    109
Number of functions:             34
Number of loops:                 5
Size of reached set:             295
  Number of reached locations:   106 (18%)
    Avg states per location:     2
    Max states per location:     8 (at node N393)
  Number of reached functions:   15 (44%)
  Number of partitions:          290
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N543 (before lines 805-850), Function test called from node N361, stack depth 3 [8aeab9e], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.114s
  Time for loading CPAs:          0.569s
  Time for loading parser:        0.498s
  Time for CFA construction:      0.946s
    Time for parsing file(s):     0.348s
    Time for AST to CFA:          0.254s
    Time for CFA sanity check:    0.048s
    Time for post-processing:     0.181s
      Time for var class.:        0.069s
Time for Analysis:                2.722s
CPU time for analysis:            2.730s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.839s
Total CPU time for CPAchecker:    4.840s
Time for statistics:              0.071s

Time for Garbage Collector:       0.076s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 56MB (    54 MiB) max;     34MB (    32 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8041MB (  7669 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
