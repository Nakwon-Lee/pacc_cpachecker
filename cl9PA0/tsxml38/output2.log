scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product17_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5f1t_bik/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 169: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 190: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 213: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 372: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 381: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 436: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 516: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 525: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 891: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 682: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1434 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1375 (96%)
  Because of loop head:            44 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15 (1%)
  Times precision was empty:       258 (18%)
  Times precision was {false}:     43 (3%)
  Times result was cached:         1041 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      92 (6%)
  Times result was 'false':        198 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         491
  BDD entailment checks:           147
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          34
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         2308
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 17.10
Number of irrelevant predicates:          819 (35%)
Number of preds handled by boolean abs:   137 (6%)
  Total number of models for allsat:      105
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.14

Time for post operator:                  0.301s
  Time for path formula creation:        0.280s
Time for strengthen operator:            0.013s
Time for prec operator:                  0.736s
  Time for abstraction:                  0.662s (Max:     0.014s, Count: 1434)
    Boolean abstraction:                 0.122s
    Solving time:                        0.078s (Max:     0.010s)
    Model enumeration time:              0.006s
    Time for BDD construction:           0.018s (Max:     0.007s)
Time for merge operator:                 0.011s
Time for coverage check:                 0.007s
  Time for BDD entailment checks:        0.007s
Total time for SMT solver (w/o itp):     0.084s

Number of path formula cache hits:   5025 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.254s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               215
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         219 (count: 1228, min: 0, max: 144, avg: 0.18)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.055s
Automaton transfers with branching:                0
Automaton transfer successors:                         5657 (count: 5657, min: 1, max: 1, avg: 1.00) [1 x 5657]

CPA algorithm statistics
------------------------
Number of iterations:            4418
Max size of waitlist:            11
Average size of waitlist:        4
Number of computed successors:   4987
Max successors for one state:    2
Number of times merged:          172
Number of times stopped:         279
Number of times breaked:         15

Total time for CPA algorithm:         1.667s (Max:     0.207s)
  Time for choose from waitlist:      0.018s
  Time for precision adjustment:      0.889s
  Time for transfer relation:         0.577s
  Time for merge operator:            0.027s
  Time for stop operator:             0.025s
  Time for adding to reached set:     0.043s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   15
Avg. length of target path (in blocks):                 378 (count: 15, min: 19, max: 36, avg: 25.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.185s
  Counterexample analysis:                             0.113s (Max:     0.015s, Calls: 15)
    Refinement sat check:                              0.043s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.009s
  ARG update:                                          0.026s

Length of refined path (in blocks):                     276 (count: 15, min: 13, max: 28, avg: 18.40)
Number of affected states:                              261 (count: 15, min: 12, max: 27, avg: 17.40)
Length (states) of path with itp 'true':                  0 (count: 15, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       261 (count: 15, min: 12, max: 27, avg: 17.40)
Length (states) of path with itp 'false':                15 (count: 15, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 15, min: 0, max: 1, avg: 0.20)
Equal non-trivial interpolants along paths:             243 (count: 15, min: 11, max: 26, avg: 16.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15
Number of successful refinements:     15
Number of failed refinements:         0
Max. size of reached set before ref.: 515
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 251.87
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.890s
Time for refinements:                 0.223s
Average time for refinement:          0.014s
Max time for refinement:              0.036s

Code Coverage
-----------------------------
  Function coverage:      0.471
  Visited lines:          96
  Total lines:            415
  Line coverage:          0.231
  Visited conditions:     28
  Total conditions:       64
  Condition coverage:     0.438

CPAchecker general statistics
-----------------------------
Number of program locations:     588
Number of CFA edges:             629
Number of relevant variables:    109
Number of functions:             34
Number of loops:                 5
Size of reached set:             778
  Number of reached locations:   127 (22%)
    Avg states per location:     6
    Max states per location:     34 (at node N0)
  Number of reached functions:   16 (47%)
  Number of partitions:          774
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N136 (after line 249), Function test called from node N61, stack depth 3 [71f0b72e], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.115s
  Time for loading CPAs:          0.582s
  Time for loading parser:        0.471s
  Time for CFA construction:      0.923s
    Time for parsing file(s):     0.338s
    Time for AST to CFA:          0.211s
    Time for CFA sanity check:    0.073s
    Time for post-processing:     0.192s
      Time for var class.:        0.072s
Time for Analysis:                1.890s
CPU time for analysis:            1.890s
Time for analyzing result:        0.002s
Total time for CPAchecker:        4.008s
Total CPU time for CPAchecker:    4.000s
Time for statistics:              0.081s

Time for Garbage Collector:       0.090s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     33MB (    32 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     26MB (    24 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    34 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8032MB (  7660 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
