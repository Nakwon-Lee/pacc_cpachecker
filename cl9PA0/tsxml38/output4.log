scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product17_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ns85zisk/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 169: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 190: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 213: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 372: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 381: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 436: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 516: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 525: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 891: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 682: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2122 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2057 (97%)
  Because of loop head:            47 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18 (1%)
  Times precision was empty:       772 (36%)
  Times precision was {false}:     48 (2%)
  Times result was cached:         1095 (52%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      207 (10%)
  Times result was 'false':        135 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         867
  BDD entailment checks:           227
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          31
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         3360
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 13.18
Number of irrelevant predicates:          1082 (32%)
Number of preds handled by boolean abs:   481 (14%)
  Total number of models for allsat:      213
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  0.468s
  Time for path formula creation:        0.445s
Time for strengthen operator:            0.039s
Time for prec operator:                  1.257s
  Time for abstraction:                  1.131s (Max:     0.014s, Count: 2122)
    Boolean abstraction:                 0.289s
    Solving time:                        0.149s (Max:     0.009s)
    Model enumeration time:              0.016s
    Time for BDD construction:           0.046s (Max:     0.009s)
Time for merge operator:                 0.017s
Time for coverage check:                 0.027s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):     0.165s

Number of path formula cache hits:   6673 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.436s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               296
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         598 (count: 2597, min: 0, max: 322, avg: 0.23)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.106s
Automaton transfers with branching:                0
Automaton transfer successors:                         8827 (count: 8827, min: 1, max: 1, avg: 1.00) [1 x 8827]

CPA algorithm statistics
------------------------
Number of iterations:            6551
Max size of waitlist:            50
Average size of waitlist:        14
Number of computed successors:   7546
Max successors for one state:    2
Number of times merged:          320
Number of times stopped:         426
Number of times breaked:         18

Total time for CPA algorithm:         2.750s (Max:     0.367s)
  Time for choose from waitlist:      0.018s
  Time for precision adjustment:      1.484s
  Time for transfer relation:         0.967s
  Time for merge operator:            0.068s
  Time for stop operator:             0.053s
  Time for adding to reached set:     0.064s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   18
Avg. length of target path (in blocks):                 564 (count: 18, min: 19, max: 51, avg: 31.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.272s
  Counterexample analysis:                             0.150s (Max:     0.024s, Calls: 18)
    Refinement sat check:                              0.063s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.036s
  ARG update:                                          0.035s

Length of refined path (in blocks):                     384 (count: 18, min: 13, max: 31, avg: 21.33)
Number of affected states:                              320 (count: 18, min: 11, max: 30, avg: 17.78)
Length (states) of path with itp 'true':                 46 (count: 18, min: 0, max: 12, avg: 2.56)
Length (states) of path with itp non-trivial itp:       320 (count: 18, min: 11, max: 30, avg: 17.78)
Length (states) of path with itp 'false':                18 (count: 18, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 18, min: 0, max: 1, avg: 0.22)
Equal non-trivial interpolants along paths:             298 (count: 18, min: 10, max: 28, avg: 16.56)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                18
Number of successful refinements:     18
Number of failed refinements:         0
Max. size of reached set before ref.: 849
Max. size of reached set after ref.:  182
Avg. size of reached set before ref.: 411.44
Avg. size of reached set after ref.:  42.00

Total time for CEGAR algorithm:       3.059s
Time for refinements:                 0.309s
Average time for refinement:          0.017s
Max time for refinement:              0.054s

Code Coverage
-----------------------------
  Function coverage:      0.441
  Visited lines:          80
  Total lines:            415
  Line coverage:          0.193
  Visited conditions:     26
  Total conditions:       64
  Condition coverage:     0.406

CPAchecker general statistics
-----------------------------
Number of program locations:     588
Number of CFA edges:             629
Number of relevant variables:    109
Number of functions:             34
Number of loops:                 5
Size of reached set:             336
  Number of reached locations:   106 (18%)
    Avg states per location:     3
    Max states per location:     10 (at node N157)
  Number of reached functions:   15 (44%)
  Number of partitions:          330
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N119 (before lines 227-272), Function test called from node N61, stack depth 3 [f613067], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.996s
  Time for loading CPAs:          0.521s
  Time for loading parser:        0.452s
  Time for CFA construction:      0.909s
    Time for parsing file(s):     0.289s
    Time for AST to CFA:          0.221s
    Time for CFA sanity check:    0.077s
    Time for post-processing:     0.226s
      Time for var class.:        0.115s
Time for Analysis:                3.059s
CPU time for analysis:            3.060s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.058s
Total CPU time for CPAchecker:    5.060s
Time for statistics:              0.062s

Time for Garbage Collector:       0.107s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     36MB (    34 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7984MB (  7614 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
