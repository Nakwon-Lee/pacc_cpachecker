scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product17_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jon2l8dj/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 169: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 190: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 213: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 372: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 381: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 436: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 516: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 525: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 891: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 682: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2514 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2461 (98%)
  Because of loop head:            35 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18 (1%)
  Times precision was empty:       1057 (42%)
  Times precision was {false}:     49 (2%)
  Times result was cached:         1271 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      137 (5%)
  Times result was 'false':        267 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         859
  BDD entailment checks:           247
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          34
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         3023
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 16.25
Number of irrelevant predicates:          996 (33%)
Number of preds handled by boolean abs:   222 (7%)
  Total number of models for allsat:      155
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.13

Time for post operator:                  0.420s
  Time for path formula creation:        0.381s
Time for strengthen operator:            0.030s
Time for prec operator:                  0.916s
  Time for abstraction:                  0.817s (Max:     0.014s, Count: 2514)
    Boolean abstraction:                 0.196s
    Solving time:                        0.111s (Max:     0.012s)
    Model enumeration time:              0.014s
    Time for BDD construction:           0.040s (Max:     0.012s)
Time for merge operator:                 0.013s
Time for coverage check:                 0.019s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     0.125s

Number of path formula cache hits:   9684 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.308s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               224
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         304 (count: 2438, min: 0, max: 127, avg: 0.12)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.106s
Automaton transfers with branching:                0
Automaton transfer successors:                        10165 (count: 10165, min: 1, max: 1, avg: 1.00) [1 x 10165]

CPA algorithm statistics
------------------------
Number of iterations:            7698
Max size of waitlist:            43
Average size of waitlist:        12
Number of computed successors:   8753
Max successors for one state:    2
Number of times merged:          306
Number of times stopped:         450
Number of times breaked:         18

Total time for CPA algorithm:         2.434s (Max:     0.521s)
  Time for choose from waitlist:      0.024s
  Time for precision adjustment:      1.173s
  Time for transfer relation:         0.940s
  Time for merge operator:            0.063s
  Time for stop operator:             0.076s
  Time for adding to reached set:     0.069s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   18
Avg. length of target path (in blocks):                 489 (count: 18, min: 19, max: 46, avg: 27.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.269s
  Counterexample analysis:                             0.158s (Max:     0.018s, Calls: 18)
    Refinement sat check:                              0.062s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.022s
  Precision update:                                    0.031s
  ARG update:                                          0.039s

Length of refined path (in blocks):                     363 (count: 18, min: 13, max: 38, avg: 20.17)
Number of affected states:                              332 (count: 18, min: 11, max: 37, avg: 18.44)
Length (states) of path with itp 'true':                 13 (count: 18, min: 0, max: 13, avg: 0.72)
Length (states) of path with itp non-trivial itp:       332 (count: 18, min: 11, max: 37, avg: 18.44)
Length (states) of path with itp 'false':                18 (count: 18, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 18, min: 0, max: 1, avg: 0.22)
Equal non-trivial interpolants along paths:             310 (count: 18, min: 10, max: 36, avg: 17.22)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                18
Number of successful refinements:     18
Number of failed refinements:         0
Max. size of reached set before ref.: 858
Max. size of reached set after ref.:  265
Avg. size of reached set before ref.: 416.17
Avg. size of reached set after ref.:  17.56

Total time for CEGAR algorithm:       2.744s
Time for refinements:                 0.307s
Average time for refinement:          0.017s
Max time for refinement:              0.052s

Code Coverage
-----------------------------
  Function coverage:      0.471
  Visited lines:          96
  Total lines:            415
  Line coverage:          0.231
  Visited conditions:     28
  Total conditions:       64
  Condition coverage:     0.438

CPAchecker general statistics
-----------------------------
Number of program locations:     588
Number of CFA edges:             629
Number of relevant variables:    109
Number of functions:             34
Number of loops:                 5
Size of reached set:             862
  Number of reached locations:   127 (22%)
    Avg states per location:     6
    Max states per location:     35 (at node N0)
  Number of reached functions:   16 (47%)
  Number of partitions:          845
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N136 (after line 249), Function test called from node N61, stack depth 3 [2bb62414], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.056s
  Time for loading CPAs:          0.566s
  Time for loading parser:        0.475s
  Time for CFA construction:      0.910s
    Time for parsing file(s):     0.318s
    Time for AST to CFA:          0.234s
    Time for CFA sanity check:    0.069s
    Time for post-processing:     0.188s
      Time for var class.:        0.063s
Time for Analysis:                2.744s
CPU time for analysis:            2.740s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.802s
Total CPU time for CPAchecker:    4.790s
Time for statistics:              0.091s

Time for Garbage Collector:       0.082s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     35MB (    33 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     27MB (    26 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7983MB (  7613 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
