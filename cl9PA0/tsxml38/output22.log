scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product17_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_n98gd6s5/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 169: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 190: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 213: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 372: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 381: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 436: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 516: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 525: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 891: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 682: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3786 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3696 (98%)
  Because of loop head:            72 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18 (0%)
  Times precision was empty:       1485 (39%)
  Times precision was {false}:     57 (2%)
  Times result was cached:         2078 (55%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      166 (4%)
  Times result was 'false':        300 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         1277
  BDD entailment checks:           537
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          34
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         4428
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 19.86
Number of irrelevant predicates:          2015 (46%)
Number of preds handled by boolean abs:   275 (6%)
  Total number of models for allsat:      193
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.16

Time for post operator:                  0.589s
  Time for path formula creation:        0.549s
Time for strengthen operator:            0.073s
Time for prec operator:                  1.216s
  Time for abstraction:                  1.077s (Max:     0.017s, Count: 3786)
    Boolean abstraction:                 0.192s
    Solving time:                        0.149s (Max:     0.012s)
    Model enumeration time:              0.018s
    Time for BDD construction:           0.012s (Max:     0.001s)
Time for merge operator:                 0.035s
Time for coverage check:                 0.027s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     0.167s

Number of path formula cache hits:   14152 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.492s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               231
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         365 (count: 3382, min: 0, max: 160, avg: 0.11)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.081s
Automaton transfers with branching:                0
Automaton transfer successors:                        14833 (count: 14833, min: 1, max: 1, avg: 1.00) [1 x 14833]

CPA algorithm statistics
------------------------
Number of iterations:            11432
Max size of waitlist:            35
Average size of waitlist:        13
Number of computed successors:   12757
Max successors for one state:    2
Number of times merged:          370
Number of times stopped:         748
Number of times breaked:         18

Total time for CPA algorithm:         3.064s (Max:     0.456s)
  Time for choose from waitlist:      0.033s
  Time for precision adjustment:      1.485s
  Time for transfer relation:         1.115s
  Time for merge operator:            0.077s
  Time for stop operator:             0.084s
  Time for adding to reached set:     0.103s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   18
Avg. length of target path (in blocks):                 501 (count: 18, min: 19, max: 47, avg: 27.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.243s
  Counterexample analysis:                             0.152s (Max:     0.017s, Calls: 18)
    Refinement sat check:                              0.042s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.023s
  Precision update:                                    0.008s
  ARG update:                                          0.041s

Length of refined path (in blocks):                     354 (count: 18, min: 13, max: 36, avg: 19.67)
Number of affected states:                              312 (count: 18, min: 11, max: 35, avg: 17.33)
Length (states) of path with itp 'true':                 24 (count: 18, min: 0, max: 13, avg: 1.33)
Length (states) of path with itp non-trivial itp:       312 (count: 18, min: 11, max: 35, avg: 17.33)
Length (states) of path with itp 'false':                18 (count: 18, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 18, min: 0, max: 1, avg: 0.17)
Equal non-trivial interpolants along paths:             291 (count: 18, min: 10, max: 34, avg: 16.17)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                18
Number of successful refinements:     18
Number of failed refinements:         0
Max. size of reached set before ref.: 1334
Max. size of reached set after ref.:  616
Avg. size of reached set before ref.: 653.50
Avg. size of reached set after ref.:  48.56

Total time for CEGAR algorithm:       3.350s
Time for refinements:                 0.286s
Average time for refinement:          0.015s
Max time for refinement:              0.048s

Code Coverage
-----------------------------
  Function coverage:      0.471
  Visited lines:          96
  Total lines:            415
  Line coverage:          0.231
  Visited conditions:     28
  Total conditions:       64
  Condition coverage:     0.438

CPAchecker general statistics
-----------------------------
Number of program locations:     588
Number of CFA edges:             629
Number of relevant variables:    109
Number of functions:             34
Number of loops:                 5
Size of reached set:             821
  Number of reached locations:   127 (22%)
    Avg states per location:     6
    Max states per location:     34 (at node N0)
  Number of reached functions:   16 (47%)
  Number of partitions:          805
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N119 (before lines 227-272), Function test called from node N61, stack depth 3 [3350ab4], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.857s
  Time for loading CPAs:          0.484s
  Time for loading parser:        0.448s
  Time for CFA construction:      0.837s
    Time for parsing file(s):     0.277s
    Time for AST to CFA:          0.233s
    Time for CFA sanity check:    0.045s
    Time for post-processing:     0.173s
      Time for var class.:        0.074s
Time for Analysis:                3.350s
CPU time for analysis:            3.350s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.210s
Total CPU time for CPAchecker:    5.200s
Time for statistics:              0.072s

Time for Garbage Collector:       0.089s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    57 MiB) max;     36MB (    35 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     28MB (    27 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8022MB (  7651 MiB) max;   7989MB (  7619 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
