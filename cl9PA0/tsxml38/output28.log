scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product17_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_x698lf91/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 169: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 190: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 213: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 372: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 381: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 436: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 516: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 525: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 891: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 682: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3638 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3575 (98%)
  Because of loop head:            49 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (0%)
  Times precision was empty:       1368 (38%)
  Times precision was {false}:     54 (1%)
  Times result was cached:         2097 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      119 (3%)
  Times result was 'false':        239 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         1235
  BDD entailment checks:           541
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          34
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         4022
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 23.25
Number of irrelevant predicates:          1945 (48%)
Number of preds handled by boolean abs:   168 (4%)
  Total number of models for allsat:      141
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.18

Time for post operator:                  0.462s
  Time for path formula creation:        0.448s
Time for strengthen operator:            0.039s
Time for prec operator:                  1.038s
  Time for abstraction:                  0.927s (Max:     0.017s, Count: 3638)
    Boolean abstraction:                 0.177s
    Solving time:                        0.111s (Max:     0.010s)
    Model enumeration time:              0.027s
    Time for BDD construction:           0.024s (Max:     0.007s)
Time for merge operator:                 0.035s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     0.138s

Number of path formula cache hits:   13073 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.407s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               213
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         278 (count: 2947, min: 0, max: 102, avg: 0.09)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.115s
Automaton transfers with branching:                0
Automaton transfer successors:                        14228 (count: 14228, min: 1, max: 1, avg: 1.00) [1 x 14228]

CPA algorithm statistics
------------------------
Number of iterations:            10766
Max size of waitlist:            48
Average size of waitlist:        18
Number of computed successors:   12143
Max successors for one state:    2
Number of times merged:          347
Number of times stopped:         773
Number of times breaked:         14

Total time for CPA algorithm:         2.899s (Max:     0.446s)
  Time for choose from waitlist:      0.056s
  Time for precision adjustment:      1.269s
  Time for transfer relation:         1.096s
  Time for merge operator:            0.091s
  Time for stop operator:             0.093s
  Time for adding to reached set:     0.100s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14
Avg. length of target path (in blocks):                 358 (count: 14, min: 19, max: 36, avg: 25.57)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.213s
  Counterexample analysis:                             0.094s (Max:     0.015s, Calls: 14)
    Refinement sat check:                              0.050s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.005s
  ARG update:                                          0.070s

Length of refined path (in blocks):                     259 (count: 14, min: 13, max: 28, avg: 18.50)
Number of affected states:                              245 (count: 14, min: 12, max: 27, avg: 17.50)
Length (states) of path with itp 'true':                  0 (count: 14, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       245 (count: 14, min: 12, max: 27, avg: 17.50)
Length (states) of path with itp 'false':                14 (count: 14, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 14, min: 0, max: 1, avg: 0.14)
Equal non-trivial interpolants along paths:             229 (count: 14, min: 11, max: 26, avg: 16.36)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 1021
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 745.50
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.177s
Time for refinements:                 0.276s
Average time for refinement:          0.019s
Max time for refinement:              0.039s

Code Coverage
-----------------------------
  Function coverage:      0.471
  Visited lines:          96
  Total lines:            415
  Line coverage:          0.231
  Visited conditions:     28
  Total conditions:       64
  Condition coverage:     0.438

CPAchecker general statistics
-----------------------------
Number of program locations:     588
Number of CFA edges:             629
Number of relevant variables:    109
Number of functions:             34
Number of loops:                 5
Size of reached set:             737
  Number of reached locations:   127 (22%)
    Avg states per location:     5
    Max states per location:     33 (at node N0)
  Number of reached functions:   16 (47%)
  Number of partitions:          734
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N119 (before lines 227-272), Function test called from node N61, stack depth 3 [333a44f2], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.237s
  Time for loading CPAs:          0.633s
  Time for loading parser:        0.501s
  Time for CFA construction:      1.000s
    Time for parsing file(s):     0.364s
    Time for AST to CFA:          0.232s
    Time for CFA sanity check:    0.060s
    Time for post-processing:     0.201s
      Time for var class.:        0.077s
Time for Analysis:                3.178s
CPU time for analysis:            3.180s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.419s
Total CPU time for CPAchecker:    5.420s
Time for statistics:              0.066s

Time for Garbage Collector:       0.093s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 56MB (    54 MiB) max;     34MB (    32 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7986MB (  7616 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
