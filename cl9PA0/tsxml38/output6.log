scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product17_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_05s3wat2/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 169: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 190: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 213: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 372: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 381: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 436: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 516: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 525: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 891: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 682: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1766 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1706 (97%)
  Because of loop head:            45 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15 (1%)
  Times precision was empty:       434 (25%)
  Times precision was {false}:     46 (3%)
  Times result was cached:         1187 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      99 (6%)
  Times result was 'false':        218 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         605
  BDD entailment checks:           225
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          34
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         2534
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 17.48
Number of irrelevant predicates:          991 (39%)
Number of preds handled by boolean abs:   144 (6%)
  Total number of models for allsat:      112
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.13

Time for post operator:                  0.344s
  Time for path formula creation:        0.332s
Time for strengthen operator:            0.032s
Time for prec operator:                  0.790s
  Time for abstraction:                  0.661s (Max:     0.019s, Count: 1766)
    Boolean abstraction:                 0.130s
    Solving time:                        0.108s (Max:     0.013s)
    Model enumeration time:              0.011s
    Time for BDD construction:           0.012s (Max:     0.006s)
Time for merge operator:                 0.013s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     0.119s

Number of path formula cache hits:   5956 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.312s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               215
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         204 (count: 1539, min: 0, max: 122, avg: 0.13)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.124s
Automaton transfers with branching:                0
Automaton transfer successors:                         6861 (count: 6861, min: 1, max: 1, avg: 1.00) [1 x 6861]

CPA algorithm statistics
------------------------
Number of iterations:            5380
Max size of waitlist:            12
Average size of waitlist:        4
Number of computed successors:   6027
Max successors for one state:    2
Number of times merged:          190
Number of times stopped:         346
Number of times breaked:         15

Total time for CPA algorithm:         1.987s (Max:     0.254s)
  Time for choose from waitlist:      0.044s
  Time for precision adjustment:      0.941s
  Time for transfer relation:         0.791s
  Time for merge operator:            0.032s
  Time for stop operator:             0.046s
  Time for adding to reached set:     0.023s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   15
Avg. length of target path (in blocks):                 385 (count: 15, min: 19, max: 38, avg: 25.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.218s
  Counterexample analysis:                             0.139s (Max:     0.050s, Calls: 15)
    Refinement sat check:                              0.044s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.038s
  Precision update:                                    0.004s
  ARG update:                                          0.028s

Length of refined path (in blocks):                     283 (count: 15, min: 13, max: 30, avg: 18.87)
Number of affected states:                              268 (count: 15, min: 12, max: 29, avg: 17.87)
Length (states) of path with itp 'true':                  0 (count: 15, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       268 (count: 15, min: 12, max: 29, avg: 17.87)
Length (states) of path with itp 'false':                15 (count: 15, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 15, min: 0, max: 1, avg: 0.20)
Equal non-trivial interpolants along paths:             250 (count: 15, min: 11, max: 28, avg: 16.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15
Number of successful refinements:     15
Number of failed refinements:         0
Max. size of reached set before ref.: 589
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 315.40
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.244s
Time for refinements:                 0.256s
Average time for refinement:          0.017s
Max time for refinement:              0.055s

Code Coverage
-----------------------------
  Function coverage:      0.471
  Visited lines:          96
  Total lines:            415
  Line coverage:          0.231
  Visited conditions:     28
  Total conditions:       64
  Condition coverage:     0.438

CPAchecker general statistics
-----------------------------
Number of program locations:     588
Number of CFA edges:             629
Number of relevant variables:    109
Number of functions:             34
Number of loops:                 5
Size of reached set:             778
  Number of reached locations:   127 (22%)
    Avg states per location:     6
    Max states per location:     34 (at node N0)
  Number of reached functions:   16 (47%)
  Number of partitions:          774
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N136 (after line 249), Function test called from node N61, stack depth 3 [7544ac86], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.155s
  Time for loading CPAs:          0.593s
  Time for loading parser:        0.482s
  Time for CFA construction:      0.990s
    Time for parsing file(s):     0.354s
    Time for AST to CFA:          0.241s
    Time for CFA sanity check:    0.069s
    Time for post-processing:     0.221s
      Time for var class.:        0.093s
Time for Analysis:                2.244s
CPU time for analysis:            2.250s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.402s
Total CPU time for CPAchecker:    4.400s
Time for statistics:              0.068s

Time for Garbage Collector:       0.080s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     34MB (    32 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     26MB (    25 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8037MB (  7664 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
