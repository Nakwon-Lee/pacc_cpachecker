scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product38_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5lystln6/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 101: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 124: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 255: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 310: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 485: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 534: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 566: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 580: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 946: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 737: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            28552 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  27995 (98%)
  Because of loop head:            438 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         119 (0%)
  Times precision was empty:       1551 (5%)
  Times precision was {false}:     289 (1%)
  Times result was cached:         22549 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4163 (15%)
  Times result was 'false':        4827 (17%)
Number of strengthen sat checks:   0
Number of coverage checks:         14945
  BDD entailment checks:           9249
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          11
Number of abstraction locations:          53
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         111688
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 25.09
Number of irrelevant predicates:          36403 (33%)
Number of preds handled by boolean abs:   13053 (12%)
  Total number of models for allsat:      4121
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.99

Time for post operator:                  1.467s
  Time for path formula creation:        1.399s
Time for strengthen operator:            0.132s
Time for prec operator:                 10.099s
  Time for abstraction:                  9.738s (Max:     0.019s, Count: 28552)
    Boolean abstraction:                 2.307s
    Solving time:                        1.708s (Max:     0.013s)
    Model enumeration time:              0.212s
    Time for BDD construction:           0.154s (Max:     0.010s)
Time for merge operator:                 0.065s
Time for coverage check:                 0.054s
  Time for BDD entailment checks:        0.052s
Total time for SMT solver (w/o itp):     1.920s

Number of path formula cache hits:   91716 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.211s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               608
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8739 (count: 38520, min: 0, max: 663, avg: 0.23)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.380s
Automaton transfers with branching:                0
Automaton transfer successors:                       110462 (count: 110462, min: 1, max: 1, avg: 1.00) [1 x 110462]

CPA algorithm statistics
------------------------
Number of iterations:            86328
Max size of waitlist:            57
Average size of waitlist:        14
Number of computed successors:   98080
Max successors for one state:    2
Number of times merged:          2848
Number of times stopped:         5333
Number of times breaked:         119

Total time for CPA algorithm:        14.949s (Max:     0.639s)
  Time for choose from waitlist:      0.101s
  Time for precision adjustment:     10.692s
  Time for transfer relation:         3.154s
  Time for merge operator:            0.158s
  Time for stop operator:             0.203s
  Time for adding to reached set:     0.157s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   119
Avg. length of target path (in blocks):                7736 (count: 119, min: 21, max: 140, avg: 65.01)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.594s
  Counterexample analysis:                             1.122s (Max:     0.040s, Calls: 119)
    Refinement sat check:                              0.514s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.049s
  Precision update:                                    0.117s
  ARG update:                                          0.214s

Length of refined path (in blocks):                    4669 (count: 119, min: 15, max: 92, avg: 39.24)
Number of affected states:                             2129 (count: 119, min: 2, max: 61, avg: 17.89)
Length (states) of path with itp 'true':               2421 (count: 119, min: 0, max: 54, avg: 20.34)
Length (states) of path with itp non-trivial itp:      2129 (count: 119, min: 2, max: 61, avg: 17.89)
Length (states) of path with itp 'false':               119 (count: 119, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          10 (count: 119, min: 0, max: 3, avg: 0.08)
Equal non-trivial interpolants along paths:            2000 (count: 119, min: 1, max: 60, avg: 16.81)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                119
Number of successful refinements:     119
Number of failed refinements:         0
Max. size of reached set before ref.: 2996
Max. size of reached set after ref.:  2582
Avg. size of reached set before ref.: 1215.76
Avg. size of reached set after ref.:  497.11

Total time for CEGAR algorithm:      16.896s
Time for refinements:                 1.849s
Average time for refinement:          0.015s
Max time for refinement:              0.054s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          145
  Total lines:            437
  Line coverage:          0.332
  Visited conditions:     42
  Total conditions:       72
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     625
Number of CFA edges:             673
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             2402
  Number of reached locations:   195 (31%)
    Avg states per location:     12
    Max states per location:     68 (at node N63)
  Number of reached functions:   25 (68%)
  Number of partitions:          2320
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N175 (before lines 335-382), Function test called from node N254, stack depth 3 [5d1a86ca], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.028s
  Time for loading CPAs:          0.494s
  Time for loading parser:        0.442s
  Time for CFA construction:      0.953s
    Time for parsing file(s):     0.314s
    Time for AST to CFA:          0.258s
    Time for CFA sanity check:    0.058s
    Time for post-processing:     0.201s
      Time for var class.:        0.080s
Time for Analysis:               16.898s
CPU time for analysis:           16.890s
Time for analyzing result:        0.002s
Total time for CPAchecker:       18.929s
Total CPU time for CPAchecker:   18.910s
Time for statistics:              0.103s

Time for Garbage Collector:       0.423s (in 55 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     43MB (    41 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8009MB (  7638 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
