scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product38_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kh6ouudy/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 101: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 124: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 255: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 310: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 485: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 534: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 566: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 580: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 946: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 737: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            45255 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  44636 (99%)
  Because of loop head:            475 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         144 (0%)
  Times precision was empty:       4681 (10%)
  Times precision was {false}:     355 (1%)
  Times result was cached:         35168 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5051 (11%)
  Times result was 'false':        5122 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         24218
  BDD entailment checks:           13052
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          12
Number of abstraction locations:          52
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         157615
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 29.16
Number of irrelevant predicates:          59057 (37%)
Number of preds handled by boolean abs:   17188 (11%)
  Total number of models for allsat:      5058
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  1.709s
  Time for path formula creation:        1.591s
Time for strengthen operator:            0.193s
Time for prec operator:                 11.258s
  Time for abstraction:                 10.769s (Max:     0.018s, Count: 45255)
    Boolean abstraction:                 2.619s
    Solving time:                        1.929s (Max:     0.013s)
    Model enumeration time:              0.243s
    Time for BDD construction:           0.182s (Max:     0.015s)
Time for merge operator:                 0.074s
Time for coverage check:                 0.041s
  Time for BDD entailment checks:        0.039s
Total time for SMT solver (w/o itp):     2.172s

Number of path formula cache hits:   172023 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.334s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               875
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       10727 (count: 52272, min: 0, max: 712, avg: 0.21)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.422s
Automaton transfers with branching:                0
Automaton transfer successors:                       181955 (count: 181955, min: 1, max: 1, avg: 1.00) [1 x 181955]

CPA algorithm statistics
------------------------
Number of iterations:            140707
Max size of waitlist:            107
Average size of waitlist:        39
Number of computed successors:   158142
Max successors for one state:    2
Number of times merged:          5583
Number of times stopped:         9628
Number of times breaked:         144

Total time for CPA algorithm:        17.720s (Max:     0.818s)
  Time for choose from waitlist:      0.145s
  Time for precision adjustment:     12.288s
  Time for transfer relation:         3.921s
  Time for merge operator:            0.205s
  Time for stop operator:             0.271s
  Time for adding to reached set:     0.285s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   144
Avg. length of target path (in blocks):                7190 (count: 144, min: 21, max: 97, avg: 49.93)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.541s
  Counterexample analysis:                             0.957s (Max:     0.023s, Calls: 144)
    Refinement sat check:                              0.431s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.057s
  Precision update:                                    0.077s
  ARG update:                                          0.358s

Length of refined path (in blocks):                    5613 (count: 144, min: 15, max: 58, avg: 38.98)
Number of affected states:                             2230 (count: 144, min: 2, max: 50, avg: 15.49)
Length (states) of path with itp 'true':               3239 (count: 144, min: 0, max: 47, avg: 22.49)
Length (states) of path with itp non-trivial itp:      2230 (count: 144, min: 2, max: 50, avg: 15.49)
Length (states) of path with itp 'false':               144 (count: 144, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          59 (count: 144, min: 0, max: 3, avg: 0.41)
Equal non-trivial interpolants along paths:            2027 (count: 144, min: 1, max: 47, avg: 14.08)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                144
Number of successful refinements:     144
Number of failed refinements:         0
Max. size of reached set before ref.: 6408
Max. size of reached set after ref.:  6272
Avg. size of reached set before ref.: 2821.07
Avg. size of reached set after ref.:  1844.38

Total time for CEGAR algorithm:      19.866s
Time for refinements:                 1.933s
Average time for refinement:          0.013s
Max time for refinement:              0.044s

Code Coverage
-----------------------------
  Function coverage:      0.649
  Visited lines:          129
  Total lines:            437
  Line coverage:          0.295
  Visited conditions:     40
  Total conditions:       72
  Condition coverage:     0.556

CPAchecker general statistics
-----------------------------
Number of program locations:     625
Number of CFA edges:             673
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             2749
  Number of reached locations:   174 (28%)
    Avg states per location:     15
    Max states per location:     62 (at node N63)
  Number of reached functions:   24 (65%)
  Number of partitions:          2700
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N197 (after line 367), Function test called from node N254, stack depth 3 [2c663d23], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.953s
  Time for loading CPAs:          0.492s
  Time for loading parser:        0.424s
  Time for CFA construction:      0.918s
    Time for parsing file(s):     0.297s
    Time for AST to CFA:          0.231s
    Time for CFA sanity check:    0.074s
    Time for post-processing:     0.195s
      Time for var class.:        0.077s
Time for Analysis:               19.866s
CPU time for analysis:           19.860s
Time for analyzing result:        0.001s
Total time for CPAchecker:       21.822s
Total CPU time for CPAchecker:   21.820s
Time for statistics:              0.087s

Time for Garbage Collector:       0.695s (in 82 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 83MB (    79 MiB) max;     48MB (    46 MiB) avg;     87MB (    83 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     34MB (    32 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8010MB (  7639 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
