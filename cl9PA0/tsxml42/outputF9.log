scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product38_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_84s8vv4d/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 101: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 124: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 255: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 310: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 485: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 534: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 566: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 580: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 946: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 737: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            23648 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  23261 (98%)
  Because of loop head:            301 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         86 (0%)
  Times precision was empty:       734 (3%)
  Times precision was {false}:     375 (2%)
  Times result was cached:         17354 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5185 (22%)
  Times result was 'false':        4144 (18%)
Number of strengthen sat checks:   0
Number of coverage checks:         12686
  BDD entailment checks:           7986
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          10
Number of abstraction locations:          50
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         109218
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 19.64
Number of irrelevant predicates:          31770 (29%)
Number of preds handled by boolean abs:   18073 (17%)
  Total number of models for allsat:      4762
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.92

Time for post operator:                  1.320s
  Time for path formula creation:        1.235s
Time for strengthen operator:            0.102s
Time for prec operator:                 10.728s
  Time for abstraction:                 10.357s (Max:     0.026s, Count: 23648)
    Boolean abstraction:                 3.103s
    Solving time:                        2.443s (Max:     0.013s)
    Model enumeration time:              0.283s
    Time for BDD construction:           0.115s (Max:     0.008s)
Time for merge operator:                 0.048s
Time for coverage check:                 0.037s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     2.726s

Number of path formula cache hits:   78747 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.063s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               585
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       10442 (count: 42541, min: 0, max: 462, avg: 0.25)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.247s
Automaton transfers with branching:                0
Automaton transfer successors:                        91739 (count: 91739, min: 1, max: 1, avg: 1.00) [1 x 91739]

CPA algorithm statistics
------------------------
Number of iterations:            72342
Max size of waitlist:            34
Average size of waitlist:        13
Number of computed successors:   81217
Max successors for one state:    2
Number of times merged:          2350
Number of times stopped:         3866
Number of times breaked:         86

Total time for CPA algorithm:        14.899s (Max:     0.618s)
  Time for choose from waitlist:      0.074s
  Time for precision adjustment:     11.366s
  Time for transfer relation:         2.577s
  Time for merge operator:            0.215s
  Time for stop operator:             0.189s
  Time for adding to reached set:     0.118s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   86
Avg. length of target path (in blocks):                7430 (count: 86, min: 21, max: 161, avg: 86.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.664s
  Counterexample analysis:                             1.250s (Max:     0.038s, Calls: 86)
    Refinement sat check:                              0.491s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.039s
  Precision update:                                    0.084s
  ARG update:                                          0.205s

Length of refined path (in blocks):                    5732 (count: 86, min: 15, max: 136, avg: 66.65)
Number of affected states:                             2852 (count: 86, min: 2, max: 105, avg: 33.16)
Length (states) of path with itp 'true':               2794 (count: 86, min: 0, max: 81, avg: 32.49)
Length (states) of path with itp non-trivial itp:      2852 (count: 86, min: 2, max: 105, avg: 33.16)
Length (states) of path with itp 'false':                86 (count: 86, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          48 (count: 86, min: 0, max: 2, avg: 0.56)
Equal non-trivial interpolants along paths:            2718 (count: 86, min: 1, max: 104, avg: 31.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                86
Number of successful refinements:     86
Number of failed refinements:         0
Max. size of reached set before ref.: 3338
Max. size of reached set after ref.:  2231
Avg. size of reached set before ref.: 1248.74
Avg. size of reached set after ref.:  418.62

Total time for CEGAR algorithm:      16.776s
Time for refinements:                 1.842s
Average time for refinement:          0.021s
Max time for refinement:              0.043s

Code Coverage
-----------------------------
  Function coverage:      0.649
  Visited lines:          129
  Total lines:            437
  Line coverage:          0.295
  Visited conditions:     40
  Total conditions:       72
  Condition coverage:     0.556

CPAchecker general statistics
-----------------------------
Number of program locations:     625
Number of CFA edges:             673
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             1817
  Number of reached locations:   174 (28%)
    Avg states per location:     10
    Max states per location:     54 (at node N63)
  Number of reached functions:   24 (65%)
  Number of partitions:          1776
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N197 (after line 367), Function test called from node N254, stack depth 3 [5cf93ce8], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.930s
  Time for loading CPAs:          0.490s
  Time for loading parser:        0.460s
  Time for CFA construction:      0.879s
    Time for parsing file(s):     0.302s
    Time for AST to CFA:          0.232s
    Time for CFA sanity check:    0.055s
    Time for post-processing:     0.182s
      Time for var class.:        0.070s
Time for Analysis:               16.777s
CPU time for analysis:           16.780s
Time for analyzing result:        0.001s
Total time for CPAchecker:       18.710s
Total CPU time for CPAchecker:   18.720s
Time for statistics:              0.080s

Time for Garbage Collector:       0.378s (in 53 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     44MB (    42 MiB) avg;     72MB (    68 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
