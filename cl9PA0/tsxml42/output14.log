scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product38_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tqht3spo/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 101: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 124: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 255: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 310: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 485: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 534: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 566: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 580: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 946: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 737: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            21760 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21431 (98%)
  Because of loop head:            269 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         60 (0%)
  Times precision was empty:       4426 (20%)
  Times precision was {false}:     202 (1%)
  Times result was cached:         15110 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2022 (9%)
  Times result was 'false':        2088 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         10931
  BDD entailment checks:           6223
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          10
Number of abstraction locations:          53
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         61815
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 27.79
Number of irrelevant predicates:          23695 (38%)
Number of preds handled by boolean abs:   5668 (9%)
  Total number of models for allsat:      2106
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  1.303s
  Time for path formula creation:        1.236s
Time for strengthen operator:            0.156s
Time for prec operator:                  6.509s
  Time for abstraction:                  6.127s (Max:     0.018s, Count: 21760)
    Boolean abstraction:                 1.522s
    Solving time:                        1.135s (Max:     0.013s)
    Model enumeration time:              0.092s
    Time for BDD construction:           0.203s (Max:     0.012s)
Time for merge operator:                 0.060s
Time for coverage check:                 0.056s
  Time for BDD entailment checks:        0.045s
Total time for SMT solver (w/o itp):     1.227s

Number of path formula cache hits:   77111 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.107s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               541
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4398 (count: 24559, min: 0, max: 387, avg: 0.18)
Time for BDD node cleanup:                             0.039s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.288s
Automaton transfers with branching:                0
Automaton transfer successors:                        84845 (count: 84845, min: 1, max: 1, avg: 1.00) [1 x 84845]

CPA algorithm statistics
------------------------
Number of iterations:            67827
Max size of waitlist:            33
Average size of waitlist:        11
Number of computed successors:   75163
Max successors for one state:    2
Number of times merged:          2354
Number of times stopped:         4866
Number of times breaked:         60

Total time for CPA algorithm:        11.301s (Max:     0.857s)
  Time for choose from waitlist:      0.058s
  Time for precision adjustment:      7.229s
  Time for transfer relation:         2.820s
  Time for merge operator:            0.248s
  Time for stop operator:             0.192s
  Time for adding to reached set:     0.199s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   60
Avg. length of target path (in blocks):                2827 (count: 60, min: 21, max: 85, avg: 47.12)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.839s
  Counterexample analysis:                             0.512s (Max:     0.023s, Calls: 60)
    Refinement sat check:                              0.221s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.049s
  Precision update:                                    0.047s
  ARG update:                                          0.184s

Length of refined path (in blocks):                    2143 (count: 60, min: 15, max: 69, avg: 35.72)
Number of affected states:                             1312 (count: 60, min: 2, max: 62, avg: 21.87)
Length (states) of path with itp 'true':                771 (count: 60, min: 0, max: 45, avg: 12.85)
Length (states) of path with itp non-trivial itp:      1312 (count: 60, min: 2, max: 62, avg: 21.87)
Length (states) of path with itp 'false':                60 (count: 60, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           9 (count: 60, min: 0, max: 2, avg: 0.15)
Equal non-trivial interpolants along paths:            1243 (count: 60, min: 1, max: 60, avg: 20.72)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                60
Number of successful refinements:     60
Number of failed refinements:         0
Max. size of reached set before ref.: 2858
Max. size of reached set after ref.:  1452
Avg. size of reached set before ref.: 1488.53
Avg. size of reached set after ref.:  418.35

Total time for CEGAR algorithm:      12.326s
Time for refinements:                 0.982s
Average time for refinement:          0.016s
Max time for refinement:              0.071s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          145
  Total lines:            437
  Line coverage:          0.332
  Visited conditions:     42
  Total conditions:       72
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     625
Number of CFA edges:             673
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             3999
  Number of reached locations:   195 (31%)
    Avg states per location:     20
    Max states per location:     105 (at node N11)
  Number of reached functions:   25 (68%)
  Number of partitions:          3847
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N175 (before lines 335-382), Function test called from node N254, stack depth 3 [53df324b], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.068s
  Time for loading CPAs:          0.489s
  Time for loading parser:        0.510s
  Time for CFA construction:      0.970s
    Time for parsing file(s):     0.365s
    Time for AST to CFA:          0.225s
    Time for CFA sanity check:    0.079s
    Time for post-processing:     0.192s
      Time for var class.:        0.070s
Time for Analysis:               12.327s
CPU time for analysis:           12.320s
Time for analyzing result:        0.003s
Total time for CPAchecker:       14.399s
Total CPU time for CPAchecker:   14.380s
Time for statistics:              0.100s

Time for Garbage Collector:       0.263s (in 37 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     41MB (    40 MiB) avg;     68MB (    65 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8070MB (  7696 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
