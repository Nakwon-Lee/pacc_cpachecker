scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product19_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__pwr25x1/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 128: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 169: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 535: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 573: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 772: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 326: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3533 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3400 (96%)
  Because of loop head:            110 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (1%)
  Times precision was empty:       356 (10%)
  Times precision was {false}:     100 (3%)
  Times result was cached:         2478 (70%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      599 (17%)
  Times result was 'false':        519 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         1789
  BDD entailment checks:           1349
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          37
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         9046
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 12.94
Number of irrelevant predicates:          2534 (28%)
Number of preds handled by boolean abs:   1418 (16%)
  Total number of models for allsat:      643
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  0.495s
  Time for path formula creation:        0.475s
Time for strengthen operator:            0.042s
Time for prec operator:                  2.126s
  Time for abstraction:                  1.960s (Max:     0.021s, Count: 3533)
    Boolean abstraction:                 0.444s
    Solving time:                        0.321s (Max:     0.012s)
    Model enumeration time:              0.033s
    Time for BDD construction:           0.042s (Max:     0.009s)
Time for merge operator:                 0.029s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     0.354s

Number of path formula cache hits:   9445 (62%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.435s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               292
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1260 (count: 5960, min: 0, max: 389, avg: 0.21)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.085s
Automaton transfers with branching:                0
Automaton transfer successors:                        13308 (count: 13308, min: 1, max: 1, avg: 1.00) [1 x 13308]

CPA algorithm statistics
------------------------
Number of iterations:            10433
Max size of waitlist:            26
Average size of waitlist:        9
Number of computed successors:   11848
Max successors for one state:    2
Number of times merged:          220
Number of times stopped:         615
Number of times breaked:         23

Total time for CPA algorithm:         3.730s (Max:     0.361s)
  Time for choose from waitlist:      0.052s
  Time for precision adjustment:      2.300s
  Time for transfer relation:         1.017s
  Time for merge operator:            0.058s
  Time for stop operator:             0.089s
  Time for adding to reached set:     0.073s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   23
Avg. length of target path (in blocks):                1151 (count: 23, min: 19, max: 71, avg: 50.04)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.345s
  Counterexample analysis:                             0.221s (Max:     0.018s, Calls: 23)
    Refinement sat check:                              0.105s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.040s
  Precision update:                                    0.018s
  ARG update:                                          0.037s

Length of refined path (in blocks):                     749 (count: 23, min: 13, max: 47, avg: 32.57)
Number of affected states:                              580 (count: 23, min: 11, max: 37, avg: 25.22)
Length (states) of path with itp 'true':                146 (count: 23, min: 0, max: 12, avg: 6.35)
Length (states) of path with itp non-trivial itp:       580 (count: 23, min: 11, max: 37, avg: 25.22)
Length (states) of path with itp 'false':                23 (count: 23, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 23, min: 0, max: 1, avg: 0.13)
Equal non-trivial interpolants along paths:             554 (count: 23, min: 10, max: 35, avg: 24.09)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                23
Number of successful refinements:     23
Number of failed refinements:         0
Max. size of reached set before ref.: 1172
Max. size of reached set after ref.:  597
Avg. size of reached set before ref.: 555.96
Avg. size of reached set after ref.:  142.39

Total time for CEGAR algorithm:       4.154s
Time for refinements:                 0.410s
Average time for refinement:          0.017s
Max time for refinement:              0.044s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          100
  Total lines:            420
  Line coverage:          0.238
  Visited conditions:     30
  Total conditions:       66
  Condition coverage:     0.455

CPAchecker general statistics
-----------------------------
Number of program locations:     598
Number of CFA edges:             641
Number of relevant variables:    109
Number of functions:             35
Number of loops:                 5
Size of reached set:             1203
  Number of reached locations:   135 (23%)
    Avg states per location:     8
    Max states per location:     48 (at node N0)
  Number of reached functions:   17 (49%)
  Number of partitions:          1164
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N576 (before lines 856-903), Function test called from node N449, stack depth 3 [70c56434], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.006s
  Time for loading CPAs:          0.526s
  Time for loading parser:        0.416s
  Time for CFA construction:      0.933s
    Time for parsing file(s):     0.323s
    Time for AST to CFA:          0.202s
    Time for CFA sanity check:    0.069s
    Time for post-processing:     0.228s
      Time for var class.:        0.107s
Time for Analysis:                4.154s
CPU time for analysis:            4.150s
Time for analyzing result:        0.001s
Total time for CPAchecker:        6.163s
Total CPU time for CPAchecker:    6.160s
Time for statistics:              0.082s

Time for Garbage Collector:       0.092s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     37MB (    35 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     29MB (    27 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7994MB (  7623 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
