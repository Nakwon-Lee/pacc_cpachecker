scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product19_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qhj_s7ee/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 411: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 466: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 611: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 742: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 751: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 806: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 923: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 202: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            9980 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  9876 (99%)
  Because of loop head:            78 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         26 (0%)
  Times precision was empty:       2505 (25%)
  Times precision was {false}:     87 (1%)
  Times result was cached:         7115 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      273 (3%)
  Times result was 'false':        495 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         4420
  BDD entailment checks:           2378
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          39
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         13158
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 36.55
Number of irrelevant predicates:          6761 (51%)
Number of preds handled by boolean abs:   475 (4%)
  Total number of models for allsat:      317
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.16

Time for post operator:                  1.009s
  Time for path formula creation:        0.965s
Time for strengthen operator:            0.081s
Time for prec operator:                  2.178s
  Time for abstraction:                  1.889s (Max:     0.020s, Count: 9980)
    Boolean abstraction:                 0.257s
    Solving time:                        0.157s (Max:     0.009s)
    Model enumeration time:              0.017s
    Time for BDD construction:           0.072s (Max:     0.010s)
Time for merge operator:                 0.058s
Time for coverage check:                 0.033s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     0.174s

Number of path formula cache hits:   38965 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.818s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               234
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         625 (count: 7030, min: 0, max: 104, avg: 0.09)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.212s
Automaton transfers with branching:                0
Automaton transfer successors:                        41004 (count: 41004, min: 1, max: 1, avg: 1.00) [1 x 41004]

CPA algorithm statistics
------------------------
Number of iterations:            31433
Max size of waitlist:            77
Average size of waitlist:        34
Number of computed successors:   35404
Max successors for one state:    2
Number of times merged:          1021
Number of times stopped:         2490
Number of times breaked:         26

Total time for CPA algorithm:         5.461s (Max:     0.600s)
  Time for choose from waitlist:      0.081s
  Time for precision adjustment:      2.611s
  Time for transfer relation:         1.998s
  Time for merge operator:            0.122s
  Time for stop operator:             0.094s
  Time for adding to reached set:     0.166s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   26
Avg. length of target path (in blocks):                 746 (count: 26, min: 21, max: 38, avg: 28.69)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.396s
  Counterexample analysis:                             0.188s (Max:     0.017s, Calls: 26)
    Refinement sat check:                              0.084s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.022s
  Precision update:                                    0.023s
  ARG update:                                          0.138s

Length of refined path (in blocks):                     564 (count: 26, min: 15, max: 33, avg: 21.69)
Number of affected states:                              414 (count: 26, min: 9, max: 32, avg: 15.92)
Length (states) of path with itp 'true':                124 (count: 26, min: 0, max: 19, avg: 4.77)
Length (states) of path with itp non-trivial itp:       414 (count: 26, min: 9, max: 32, avg: 15.92)
Length (states) of path with itp 'false':                26 (count: 26, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 26, min: 0, max: 1, avg: 0.12)
Equal non-trivial interpolants along paths:             385 (count: 26, min: 8, max: 30, avg: 14.81)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                26
Number of successful refinements:     26
Number of failed refinements:         0
Max. size of reached set before ref.: 1838
Max. size of reached set after ref.:  466
Avg. size of reached set before ref.: 1286.15
Avg. size of reached set after ref.:  78.77

Total time for CEGAR algorithm:       5.940s
Time for refinements:                 0.461s
Average time for refinement:          0.017s
Max time for refinement:              0.044s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          108
  Total lines:            428
  Line coverage:          0.252
  Visited conditions:     32
  Total conditions:       68
  Condition coverage:     0.471

CPAchecker general statistics
-----------------------------
Number of program locations:     611
Number of CFA edges:             655
Number of relevant variables:    110
Number of functions:             36
Number of loops:                 5
Size of reached set:             1028
  Number of reached locations:   145 (24%)
    Avg states per location:     7
    Max states per location:     41 (at node N435)
  Number of reached functions:   18 (50%)
  Number of partitions:          1024
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N564 (before lines 835-882), Function test called from node N411, stack depth 3 [4bc01cab], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.064s
  Time for loading CPAs:          0.540s
  Time for loading parser:        0.475s
  Time for CFA construction:      0.940s
    Time for parsing file(s):     0.322s
    Time for AST to CFA:          0.224s
    Time for CFA sanity check:    0.064s
    Time for post-processing:     0.202s
      Time for var class.:        0.088s
Time for Analysis:                5.941s
CPU time for analysis:            5.940s
Time for analyzing result:        0.001s
Total time for CPAchecker:        8.008s
Total CPU time for CPAchecker:    8.000s
Time for statistics:              0.067s

Time for Garbage Collector:       0.141s (in 16 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     38MB (    36 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     30MB (    29 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8059MB (  7685 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
