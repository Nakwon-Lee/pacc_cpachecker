scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product19_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rjssf0bn/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 411: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 466: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 611: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 742: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 751: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 806: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 923: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 202: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3619 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3531 (98%)
  Because of loop head:            59 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29 (1%)
  Times precision was empty:       638 (18%)
  Times precision was {false}:     99 (3%)
  Times result was cached:         2483 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      399 (11%)
  Times result was 'false':        518 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         1299
  BDD entailment checks:           549
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          39
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         7288
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 14.63
Number of irrelevant predicates:          1833 (25%)
Number of preds handled by boolean abs:   1034 (14%)
  Total number of models for allsat:      434
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  0.444s
  Time for path formula creation:        0.416s
Time for strengthen operator:            0.033s
Time for prec operator:                  1.421s
  Time for abstraction:                  1.305s (Max:     0.017s, Count: 3619)
    Boolean abstraction:                 0.327s
    Solving time:                        0.194s (Max:     0.017s)
    Model enumeration time:              0.019s
    Time for BDD construction:           0.071s (Max:     0.010s)
Time for merge operator:                 0.045s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):     0.213s

Number of path formula cache hits:   13884 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.363s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               306
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         827 (count: 4198, min: 0, max: 269, avg: 0.20)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.080s
Automaton transfers with branching:                0
Automaton transfer successors:                        14851 (count: 14851, min: 1, max: 1, avg: 1.00) [1 x 14851]

CPA algorithm statistics
------------------------
Number of iterations:            11468
Max size of waitlist:            32
Average size of waitlist:        10
Number of computed successors:   13021
Max successors for one state:    2
Number of times merged:          375
Number of times stopped:         659
Number of times breaked:         29

Total time for CPA algorithm:         2.999s (Max:     0.293s)
  Time for choose from waitlist:      0.035s
  Time for precision adjustment:      1.613s
  Time for transfer relation:         0.934s
  Time for merge operator:            0.097s
  Time for stop operator:             0.072s
  Time for adding to reached set:     0.081s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   29
Avg. length of target path (in blocks):                 961 (count: 29, min: 22, max: 61, avg: 33.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.325s
  Counterexample analysis:                             0.201s (Max:     0.015s, Calls: 29)
    Refinement sat check:                              0.060s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.024s
  Precision update:                                    0.020s
  ARG update:                                          0.053s

Length of refined path (in blocks):                     750 (count: 29, min: 16, max: 47, avg: 25.86)
Number of affected states:                              543 (count: 29, min: 2, max: 44, avg: 18.72)
Length (states) of path with itp 'true':                178 (count: 29, min: 0, max: 33, avg: 6.14)
Length (states) of path with itp non-trivial itp:       543 (count: 29, min: 2, max: 44, avg: 18.72)
Length (states) of path with itp 'false':                29 (count: 29, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 29, min: 0, max: 1, avg: 0.17)
Equal non-trivial interpolants along paths:             509 (count: 29, min: 1, max: 42, avg: 17.55)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 773
Max. size of reached set after ref.:  497
Avg. size of reached set before ref.: 484.31
Avg. size of reached set after ref.:  108.38

Total time for CEGAR algorithm:       3.367s
Time for refinements:                 0.359s
Average time for refinement:          0.012s
Max time for refinement:              0.038s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          108
  Total lines:            428
  Line coverage:          0.252
  Visited conditions:     32
  Total conditions:       68
  Condition coverage:     0.471

CPAchecker general statistics
-----------------------------
Number of program locations:     611
Number of CFA edges:             655
Number of relevant variables:    110
Number of functions:             36
Number of loops:                 5
Size of reached set:             943
  Number of reached locations:   145 (24%)
    Avg states per location:     6
    Max states per location:     29 (at node N435)
  Number of reached functions:   18 (50%)
  Number of partitions:          923
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N467 (before line 682), Function timeShift called from node N583, stack depth 4 [45f1413c], stack [main, runTest, test, timeShift]])
  Number of target states:       0

Time for analysis setup:          1.859s
  Time for loading CPAs:          0.467s
  Time for loading parser:        0.396s
  Time for CFA construction:      0.849s
    Time for parsing file(s):     0.296s
    Time for AST to CFA:          0.220s
    Time for CFA sanity check:    0.057s
    Time for post-processing:     0.181s
      Time for var class.:        0.081s
Time for Analysis:                3.367s
CPU time for analysis:            3.370s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.228s
Total CPU time for CPAchecker:    5.230s
Time for statistics:              0.064s

Time for Garbage Collector:       0.094s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     36MB (    34 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     29MB (    27 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   7990MB (  7620 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
