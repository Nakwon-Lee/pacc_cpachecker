scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product29_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ernuj_t8/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 461: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 612: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 748: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 757: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 812: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 908: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 298: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3142 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3087 (98%)
  Because of loop head:            36 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         19 (1%)
  Times precision was empty:       1411 (45%)
  Times precision was {false}:     50 (2%)
  Times result was cached:         1543 (49%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      138 (4%)
  Times result was 'false':        342 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         877
  BDD entailment checks:           257
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          37
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         3576
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 19.02
Number of irrelevant predicates:          1171 (33%)
Number of preds handled by boolean abs:   223 (6%)
  Total number of models for allsat:      157
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.14

Time for post operator:                  0.410s
  Time for path formula creation:        0.394s
Time for strengthen operator:            0.044s
Time for prec operator:                  0.908s
  Time for abstraction:                  0.771s (Max:     0.015s, Count: 3142)
    Boolean abstraction:                 0.183s
    Solving time:                        0.126s (Max:     0.011s)
    Model enumeration time:              0.017s
    Time for BDD construction:           0.012s (Max:     0.009s)
Time for merge operator:                 0.006s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     0.143s

Number of path formula cache hits:   12056 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.363s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               224
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         257 (count: 2818, min: 0, max: 123, avg: 0.09)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.068s
Automaton transfers with branching:                0
Automaton transfer successors:                        12283 (count: 12283, min: 1, max: 1, avg: 1.00) [1 x 12283]

CPA algorithm statistics
------------------------
Number of iterations:            9197
Max size of waitlist:            53
Average size of waitlist:        14
Number of computed successors:   10422
Max successors for one state:    2
Number of times merged:          310
Number of times stopped:         462
Number of times breaked:         19

Total time for CPA algorithm:         2.327s (Max:     0.432s)
  Time for choose from waitlist:      0.021s
  Time for precision adjustment:      1.113s
  Time for transfer relation:         0.905s
  Time for merge operator:            0.033s
  Time for stop operator:             0.087s
  Time for adding to reached set:     0.047s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   19
Avg. length of target path (in blocks):                 540 (count: 19, min: 19, max: 50, avg: 28.42)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.254s
  Counterexample analysis:                             0.158s (Max:     0.015s, Calls: 19)
    Refinement sat check:                              0.065s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.012s
  ARG update:                                          0.050s

Length of refined path (in blocks):                     400 (count: 19, min: 13, max: 42, avg: 21.05)
Number of affected states:                              368 (count: 19, min: 12, max: 41, avg: 19.37)
Length (states) of path with itp 'true':                 13 (count: 19, min: 0, max: 13, avg: 0.68)
Length (states) of path with itp non-trivial itp:       368 (count: 19, min: 12, max: 41, avg: 19.37)
Length (states) of path with itp 'false':                19 (count: 19, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 19, min: 0, max: 1, avg: 0.21)
Equal non-trivial interpolants along paths:             345 (count: 19, min: 11, max: 40, avg: 18.16)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                19
Number of successful refinements:     19
Number of failed refinements:         0
Max. size of reached set before ref.: 891
Max. size of reached set after ref.:  293
Avg. size of reached set before ref.: 474.74
Avg. size of reached set after ref.:  18.26

Total time for CEGAR algorithm:       2.625s
Time for refinements:                 0.298s
Average time for refinement:          0.015s
Max time for refinement:              0.046s

Code Coverage
-----------------------------
  Function coverage:      0.472
  Visited lines:          100
  Total lines:            428
  Line coverage:          0.234
  Visited conditions:     30
  Total conditions:       70
  Condition coverage:     0.429

CPAchecker general statistics
-----------------------------
Number of program locations:     613
Number of CFA edges:             661
Number of relevant variables:    115
Number of functions:             36
Number of loops:                 5
Size of reached set:             946
  Number of reached locations:   134 (22%)
    Avg states per location:     7
    Max states per location:     35 (at node N608)
  Number of reached functions:   17 (47%)
  Number of partitions:          929
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N390 (after line 545), Function test called from node N589, stack depth 3 [28e7bb31], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.971s
  Time for loading CPAs:          0.450s
  Time for loading parser:        0.482s
  Time for CFA construction:      0.910s
    Time for parsing file(s):     0.289s
    Time for AST to CFA:          0.232s
    Time for CFA sanity check:    0.073s
    Time for post-processing:     0.209s
      Time for var class.:        0.101s
Time for Analysis:                2.625s
CPU time for analysis:            2.620s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.599s
Total CPU time for CPAchecker:    4.590s
Time for statistics:              0.074s

Time for Garbage Collector:       0.079s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    55 MiB) max;     35MB (    33 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    26 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8040MB (  7667 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
