scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product29_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1rugb3l_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 461: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 612: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 748: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 757: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 812: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 908: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 298: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1964 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1878 (96%)
  Because of loop head:            66 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         20 (1%)
  Times precision was empty:       285 (15%)
  Times precision was {false}:     66 (3%)
  Times result was cached:         1255 (64%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      358 (18%)
  Times result was 'false':        254 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         776
  BDD entailment checks:           394
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          34
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         5003
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 11.80
Number of irrelevant predicates:          1436 (29%)
Number of preds handled by boolean abs:   883 (18%)
  Total number of models for allsat:      366
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  0.393s
  Time for path formula creation:        0.382s
Time for strengthen operator:            0.017s
Time for prec operator:                  1.368s
  Time for abstraction:                  1.296s (Max:     0.017s, Count: 1964)
    Boolean abstraction:                 0.392s
    Solving time:                        0.293s (Max:     0.014s)
    Model enumeration time:              0.035s
    Time for BDD construction:           0.043s (Max:     0.012s)
Time for merge operator:                 0.026s
Time for coverage check:                 0.016s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):     0.328s

Number of path formula cache hits:   4472 (53%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.344s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               292
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         841 (count: 3281, min: 0, max: 332, avg: 0.26)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.074s
Automaton transfers with branching:                0
Automaton transfer successors:                         7452 (count: 7452, min: 1, max: 1, avg: 1.00) [1 x 7452]

CPA algorithm statistics
------------------------
Number of iterations:            5805
Max size of waitlist:            26
Average size of waitlist:        7
Number of computed successors:   6589
Max successors for one state:    2
Number of times merged:          191
Number of times stopped:         329
Number of times breaked:         20

Total time for CPA algorithm:         2.645s (Max:     0.206s)
  Time for choose from waitlist:      0.017s
  Time for precision adjustment:      1.567s
  Time for transfer relation:         0.794s
  Time for merge operator:            0.055s
  Time for stop operator:             0.067s
  Time for adding to reached set:     0.036s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   20
Avg. length of target path (in blocks):                 850 (count: 20, min: 19, max: 68, avg: 42.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.259s
  Counterexample analysis:                             0.162s (Max:     0.015s, Calls: 20)
    Refinement sat check:                              0.087s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.013s
  ARG update:                                          0.035s

Length of refined path (in blocks):                     520 (count: 20, min: 13, max: 54, avg: 26.00)
Number of affected states:                              386 (count: 20, min: 9, max: 53, avg: 19.30)
Length (states) of path with itp 'true':                114 (count: 20, min: 0, max: 24, avg: 5.70)
Length (states) of path with itp non-trivial itp:       386 (count: 20, min: 9, max: 53, avg: 19.30)
Length (states) of path with itp 'false':                20 (count: 20, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 20, min: 0, max: 1, avg: 0.20)
Equal non-trivial interpolants along paths:             362 (count: 20, min: 8, max: 51, avg: 18.10)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                20
Number of successful refinements:     20
Number of failed refinements:         0
Max. size of reached set before ref.: 587
Max. size of reached set after ref.:  210
Avg. size of reached set before ref.: 336.60
Avg. size of reached set after ref.:  54.80

Total time for CEGAR algorithm:       2.950s
Time for refinements:                 0.301s
Average time for refinement:          0.015s
Max time for refinement:              0.038s

Code Coverage
-----------------------------
  Function coverage:      0.444
  Visited lines:          84
  Total lines:            428
  Line coverage:          0.196
  Visited conditions:     28
  Total conditions:       70
  Condition coverage:     0.400

CPAchecker general statistics
-----------------------------
Number of program locations:     613
Number of CFA edges:             661
Number of relevant variables:    115
Number of functions:             36
Number of loops:                 5
Size of reached set:             371
  Number of reached locations:   113 (18%)
    Avg states per location:     3
    Max states per location:     10 (at node N435)
  Number of reached functions:   16 (44%)
  Number of partitions:          365
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N373 (before lines 523-568), Function test called from node N589, stack depth 3 [20134094], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.141s
  Time for loading CPAs:          0.590s
  Time for loading parser:        0.487s
  Time for CFA construction:      0.982s
    Time for parsing file(s):     0.393s
    Time for AST to CFA:          0.219s
    Time for CFA sanity check:    0.061s
    Time for post-processing:     0.195s
      Time for var class.:        0.082s
Time for Analysis:                2.950s
CPU time for analysis:            2.950s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.094s
Total CPU time for CPAchecker:    5.090s
Time for statistics:              0.075s

Time for Garbage Collector:       0.107s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     35MB (    34 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8043MB (  7671 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
