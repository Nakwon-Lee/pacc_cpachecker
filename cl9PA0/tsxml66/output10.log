scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product29_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9yznwm5_/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 461: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 612: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 748: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 757: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 812: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 908: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 298: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1584 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1522 (96%)
  Because of loop head:            46 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (1%)
  Times precision was empty:       282 (18%)
  Times precision was {false}:     42 (3%)
  Times result was cached:         1169 (74%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      91 (6%)
  Times result was 'false':        240 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         501
  BDD entailment checks:           143
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          37
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         2503
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 18.82
Number of irrelevant predicates:          896 (36%)
Number of preds handled by boolean abs:   136 (5%)
  Total number of models for allsat:      104
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.14

Time for post operator:                  0.225s
  Time for path formula creation:        0.201s
Time for strengthen operator:            0.026s
Time for prec operator:                  0.743s
  Time for abstraction:                  0.677s (Max:     0.034s, Count: 1584)
    Boolean abstraction:                 0.130s
    Solving time:                        0.081s (Max:     0.015s)
    Model enumeration time:              0.015s
    Time for BDD construction:           0.018s (Max:     0.007s)
Time for merge operator:                 0.004s
Time for coverage check:                 0.015s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     0.096s

Number of path formula cache hits:   5434 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.158s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               215
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         201 (count: 1237, min: 0, max: 123, avg: 0.16)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.126s
Automaton transfers with branching:                0
Automaton transfer successors:                         6140 (count: 6140, min: 1, max: 1, avg: 1.00) [1 x 6140]

CPA algorithm statistics
------------------------
Number of iterations:            4798
Max size of waitlist:            11
Average size of waitlist:        4
Number of computed successors:   5423
Max successors for one state:    2
Number of times merged:          179
Number of times stopped:         281
Number of times breaked:         16

Total time for CPA algorithm:         1.781s (Max:     0.220s)
  Time for choose from waitlist:      0.025s
  Time for precision adjustment:      0.887s
  Time for transfer relation:         0.579s
  Time for merge operator:            0.042s
  Time for stop operator:             0.052s
  Time for adding to reached set:     0.074s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                 415 (count: 16, min: 19, max: 36, avg: 25.94)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.185s
  Counterexample analysis:                             0.102s (Max:     0.013s, Calls: 16)
    Refinement sat check:                              0.035s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.012s
  ARG update:                                          0.041s

Length of refined path (in blocks):                     299 (count: 16, min: 13, max: 28, avg: 18.69)
Number of affected states:                              283 (count: 16, min: 12, max: 27, avg: 17.69)
Length (states) of path with itp 'true':                  0 (count: 16, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       283 (count: 16, min: 12, max: 27, avg: 17.69)
Length (states) of path with itp 'false':                16 (count: 16, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 16, min: 0, max: 1, avg: 0.19)
Equal non-trivial interpolants along paths:             264 (count: 16, min: 11, max: 26, avg: 16.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 557
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 256.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.986s
Time for refinements:                 0.203s
Average time for refinement:          0.012s
Max time for refinement:              0.034s

Code Coverage
-----------------------------
  Function coverage:      0.472
  Visited lines:          100
  Total lines:            428
  Line coverage:          0.234
  Visited conditions:     30
  Total conditions:       70
  Condition coverage:     0.429

CPAchecker general statistics
-----------------------------
Number of program locations:     613
Number of CFA edges:             661
Number of relevant variables:    115
Number of functions:             36
Number of loops:                 5
Size of reached set:             855
  Number of reached locations:   134 (22%)
    Avg states per location:     6
    Max states per location:     34 (at node N608)
  Number of reached functions:   17 (47%)
  Number of partitions:          851
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N390 (after line 545), Function test called from node N589, stack depth 3 [760245e1], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.016s
  Time for loading CPAs:          0.462s
  Time for loading parser:        0.464s
  Time for CFA construction:      0.936s
    Time for parsing file(s):     0.320s
    Time for AST to CFA:          0.236s
    Time for CFA sanity check:    0.042s
    Time for post-processing:     0.201s
      Time for var class.:        0.094s
Time for Analysis:                1.987s
CPU time for analysis:            1.990s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.009s
Total CPU time for CPAchecker:    4.000s
Time for statistics:              0.089s

Time for Garbage Collector:       0.112s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     33MB (    31 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     26MB (    25 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     28MB (    26 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8033MB (  7660 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
