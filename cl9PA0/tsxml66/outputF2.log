scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product29_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_k1d3v8b0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 461: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 612: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 748: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 757: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 812: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 908: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 298: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2430 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2347 (97%)
  Because of loop head:            61 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         22 (1%)
  Times precision was empty:       479 (20%)
  Times precision was {false}:     64 (3%)
  Times result was cached:         1710 (70%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      177 (7%)
  Times result was 'false':        368 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         627
  BDD entailment checks:           277
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          37
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         4839
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 20.08
Number of irrelevant predicates:          1290 (27%)
Number of preds handled by boolean abs:   368 (8%)
  Total number of models for allsat:      191
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  0.443s
  Time for path formula creation:        0.412s
Time for strengthen operator:            0.063s
Time for prec operator:                  0.935s
  Time for abstraction:                  0.845s (Max:     0.018s, Count: 2430)
    Boolean abstraction:                 0.210s
    Solving time:                        0.135s (Max:     0.015s)
    Model enumeration time:              0.022s
    Time for BDD construction:           0.028s (Max:     0.007s)
Time for merge operator:                 0.016s
Time for coverage check:                 0.015s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     0.157s

Number of path formula cache hits:   7737 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.366s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               252
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         433 (count: 2269, min: 0, max: 148, avg: 0.19)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.081s
Automaton transfers with branching:                0
Automaton transfer successors:                         8935 (count: 8935, min: 1, max: 1, avg: 1.00) [1 x 8935]

CPA algorithm statistics
------------------------
Number of iterations:            7015
Max size of waitlist:            11
Average size of waitlist:        5
Number of computed successors:   7826
Max successors for one state:    2
Number of times merged:          175
Number of times stopped:         318
Number of times breaked:         22

Total time for CPA algorithm:         2.257s (Max:     0.273s)
  Time for choose from waitlist:      0.019s
  Time for precision adjustment:      1.097s
  Time for transfer relation:         0.946s
  Time for merge operator:            0.034s
  Time for stop operator:             0.052s
  Time for adding to reached set:     0.022s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   22
Avg. length of target path (in blocks):                 679 (count: 22, min: 19, max: 52, avg: 30.86)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.278s
  Counterexample analysis:                             0.135s (Max:     0.015s, Calls: 22)
    Refinement sat check:                              0.051s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.046s
  Precision update:                                    0.016s
  ARG update:                                          0.061s

Length of refined path (in blocks):                     523 (count: 22, min: 13, max: 49, avg: 23.77)
Number of affected states:                              464 (count: 22, min: 12, max: 48, avg: 21.09)
Length (states) of path with itp 'true':                 37 (count: 22, min: 0, max: 13, avg: 1.68)
Length (states) of path with itp non-trivial itp:       464 (count: 22, min: 12, max: 48, avg: 21.09)
Length (states) of path with itp 'false':                22 (count: 22, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           6 (count: 22, min: 0, max: 1, avg: 0.27)
Equal non-trivial interpolants along paths:             436 (count: 22, min: 11, max: 46, avg: 19.82)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 791
Max. size of reached set after ref.:  342
Avg. size of reached set before ref.: 314.86
Avg. size of reached set after ref.:  28.77

Total time for CEGAR algorithm:       2.579s
Time for refinements:                 0.318s
Average time for refinement:          0.014s
Max time for refinement:              0.043s

Code Coverage
-----------------------------
  Function coverage:      0.472
  Visited lines:          100
  Total lines:            428
  Line coverage:          0.234
  Visited conditions:     30
  Total conditions:       70
  Condition coverage:     0.429

CPAchecker general statistics
-----------------------------
Number of program locations:     613
Number of CFA edges:             661
Number of relevant variables:    115
Number of functions:             36
Number of loops:                 5
Size of reached set:             847
  Number of reached locations:   134 (22%)
    Avg states per location:     6
    Max states per location:     29 (at node N608)
  Number of reached functions:   17 (47%)
  Number of partitions:          833
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N390 (after line 545), Function test called from node N589, stack depth 3 [1946384], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.940s
  Time for loading CPAs:          0.516s
  Time for loading parser:        0.443s
  Time for CFA construction:      0.866s
    Time for parsing file(s):     0.298s
    Time for AST to CFA:          0.200s
    Time for CFA sanity check:    0.087s
    Time for post-processing:     0.179s
      Time for var class.:        0.072s
Time for Analysis:                2.587s
CPU time for analysis:            2.590s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.530s
Total CPU time for CPAchecker:    4.520s
Time for statistics:              0.073s

Time for Garbage Collector:       0.085s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     35MB (    33 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8042MB (  7669 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
