scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product21_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4xfs4ndv/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 255: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 308: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 697: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 881: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 890: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 945: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 488: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1904 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1866 (98%)
  Because of loop head:            26 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (1%)
  Times precision was empty:       366 (19%)
  Times precision was {false}:     52 (3%)
  Times result was cached:         1416 (74%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      70 (4%)
  Times result was 'false':        206 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         640
  BDD entailment checks:           176
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          4
Number of abstraction locations:          42
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         2173
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 17.81
Number of irrelevant predicates:          771 (35%)
Number of preds handled by boolean abs:   83 (4%)
  Total number of models for allsat:      82
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.17

Time for post operator:                  0.343s
  Time for path formula creation:        0.322s
Time for strengthen operator:            0.016s
Time for prec operator:                  0.681s
  Time for abstraction:                  0.599s (Max:     0.018s, Count: 1904)
    Boolean abstraction:                 0.084s
    Solving time:                        0.060s (Max:     0.012s)
    Model enumeration time:              0.005s
    Time for BDD construction:           0.012s (Max:     0.006s)
Time for merge operator:                 0.017s
Time for coverage check:                 0.009s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):     0.065s

Number of path formula cache hits:   6818 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.278s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         151 (count: 1255, min: 0, max: 86, avg: 0.12)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.094s
Automaton transfers with branching:                0
Automaton transfer successors:                         7444 (count: 7444, min: 1, max: 1, avg: 1.00) [1 x 7444]

CPA algorithm statistics
------------------------
Number of iterations:            5665
Max size of waitlist:            16
Average size of waitlist:        5
Number of computed successors:   6356
Max successors for one state:    2
Number of times merged:          232
Number of times stopped:         382
Number of times breaked:         12

Total time for CPA algorithm:         1.911s (Max:     0.313s)
  Time for choose from waitlist:      0.035s
  Time for precision adjustment:      0.867s
  Time for transfer relation:         0.742s
  Time for merge operator:            0.062s
  Time for stop operator:             0.049s
  Time for adding to reached set:     0.035s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                 411 (count: 12, min: 25, max: 50, avg: 34.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.214s
  Counterexample analysis:                             0.135s (Max:     0.020s, Calls: 12)
    Refinement sat check:                              0.062s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.016s
  Precision update:                                    0.013s
  ARG update:                                          0.028s

Length of refined path (in blocks):                     313 (count: 12, min: 19, max: 42, avg: 26.08)
Number of affected states:                              301 (count: 12, min: 18, max: 41, avg: 25.08)
Length (states) of path with itp 'true':                  0 (count: 12, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       301 (count: 12, min: 18, max: 41, avg: 25.08)
Length (states) of path with itp 'false':                12 (count: 12, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 12, min: 0, max: 1, avg: 0.08)
Equal non-trivial interpolants along paths:             288 (count: 12, min: 17, max: 40, avg: 24.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 702
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 416.83
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.153s
Time for refinements:                 0.240s
Average time for refinement:          0.020s
Max time for refinement:              0.058s

Code Coverage
-----------------------------
  Function coverage:      0.514
  Visited lines:          108
  Total lines:            431
  Line coverage:          0.251
  Visited conditions:     32
  Total conditions:       70
  Condition coverage:     0.457

CPAchecker general statistics
-----------------------------
Number of program locations:     619
Number of CFA edges:             667
Number of relevant variables:    115
Number of functions:             37
Number of loops:                 5
Size of reached set:             803
  Number of reached locations:   146 (24%)
    Avg states per location:     5
    Max states per location:     30 (at node N76)
  Number of reached functions:   19 (51%)
  Number of partitions:          802
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N491 (before lines 711-756), Function test called from node N47, stack depth 3 [6add8e3f], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.069s
  Time for loading CPAs:          0.607s
  Time for loading parser:        0.451s
  Time for CFA construction:      0.921s
    Time for parsing file(s):     0.316s
    Time for AST to CFA:          0.250s
    Time for CFA sanity check:    0.070s
    Time for post-processing:     0.176s
      Time for var class.:        0.060s
Time for Analysis:                2.153s
CPU time for analysis:            2.160s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.226s
Total CPU time for CPAchecker:    4.230s
Time for statistics:              0.062s

Time for Garbage Collector:       0.088s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     33MB (    31 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     26MB (    25 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8035MB (  7663 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
