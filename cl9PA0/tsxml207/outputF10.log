scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product21_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tejl_ra2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 255: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 308: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 697: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 881: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 890: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 945: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 488: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2203 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2148 (98%)
  Because of loop head:            36 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         19 (1%)
  Times precision was empty:       328 (15%)
  Times precision was {false}:     65 (3%)
  Times result was cached:         1616 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      194 (9%)
  Times result was 'false':        221 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         827
  BDD entailment checks:           245
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          5
Number of abstraction locations:          42
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         3942
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 15.22
Number of irrelevant predicates:          1207 (31%)
Number of preds handled by boolean abs:   360 (9%)
  Total number of models for allsat:      213
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.10

Time for post operator:                  0.399s
  Time for path formula creation:        0.376s
Time for strengthen operator:            0.043s
Time for prec operator:                  1.118s
  Time for abstraction:                  0.991s (Max:     0.018s, Count: 2203)
    Boolean abstraction:                 0.173s
    Solving time:                        0.121s (Max:     0.009s)
    Model enumeration time:              0.011s
    Time for BDD construction:           0.037s (Max:     0.008s)
Time for merge operator:                 0.045s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):     0.132s

Number of path formula cache hits:   6723 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.343s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               238
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         438 (count: 2138, min: 0, max: 171, avg: 0.20)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.084s
Automaton transfers with branching:                0
Automaton transfer successors:                         8536 (count: 8536, min: 1, max: 1, avg: 1.00) [1 x 8536]

CPA algorithm statistics
------------------------
Number of iterations:            6574
Max size of waitlist:            17
Average size of waitlist:        5
Number of computed successors:   7380
Max successors for one state:    2
Number of times merged:          291
Number of times stopped:         446
Number of times breaked:         19

Total time for CPA algorithm:         2.419s (Max:     0.283s)
  Time for choose from waitlist:      0.024s
  Time for precision adjustment:      1.321s
  Time for transfer relation:         0.792s
  Time for merge operator:            0.062s
  Time for stop operator:             0.043s
  Time for adding to reached set:     0.059s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   19
Avg. length of target path (in blocks):                 852 (count: 19, min: 26, max: 74, avg: 44.84)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.264s
  Counterexample analysis:                             0.150s (Max:     0.021s, Calls: 19)
    Refinement sat check:                              0.085s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.031s
  Precision update:                                    0.021s
  ARG update:                                          0.034s

Length of refined path (in blocks):                     632 (count: 19, min: 20, max: 55, avg: 33.26)
Number of affected states:                              497 (count: 19, min: 17, max: 54, avg: 26.16)
Length (states) of path with itp 'true':                116 (count: 19, min: 0, max: 19, avg: 6.11)
Length (states) of path with itp non-trivial itp:       497 (count: 19, min: 17, max: 54, avg: 26.16)
Length (states) of path with itp 'false':                19 (count: 19, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 19, min: 0, max: 1, avg: 0.05)
Equal non-trivial interpolants along paths:             477 (count: 19, min: 16, max: 53, avg: 25.11)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                19
Number of successful refinements:     19
Number of failed refinements:         0
Max. size of reached set before ref.: 754
Max. size of reached set after ref.:  508
Avg. size of reached set before ref.: 485.79
Avg. size of reached set after ref.:  155.84

Total time for CEGAR algorithm:       2.746s
Time for refinements:                 0.324s
Average time for refinement:          0.017s
Max time for refinement:              0.053s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          92
  Total lines:            431
  Line coverage:          0.213
  Visited conditions:     30
  Total conditions:       70
  Condition coverage:     0.429

CPAchecker general statistics
-----------------------------
Number of program locations:     619
Number of CFA edges:             667
Number of relevant variables:    115
Number of functions:             37
Number of loops:                 5
Size of reached set:             445
  Number of reached locations:   125 (20%)
    Avg states per location:     3
    Max states per location:     14 (at node N76)
  Number of reached functions:   18 (49%)
  Number of partitions:          441
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N491 (before lines 711-756), Function test called from node N47, stack depth 3 [45843650], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.082s
  Time for loading CPAs:          0.522s
  Time for loading parser:        0.472s
  Time for CFA construction:      0.971s
    Time for parsing file(s):     0.352s
    Time for AST to CFA:          0.222s
    Time for CFA sanity check:    0.053s
    Time for post-processing:     0.208s
      Time for var class.:        0.089s
Time for Analysis:                2.747s
CPU time for analysis:            2.740s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.833s
Total CPU time for CPAchecker:    4.820s
Time for statistics:              0.065s

Time for Garbage Collector:       0.085s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     35MB (    33 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8041MB (  7669 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
