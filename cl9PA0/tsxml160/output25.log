scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product35_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9tc3arfc/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 151: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 471: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 517: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 529: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 552: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 673: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 705: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 824: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 879: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 308: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            14985 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14689 (98%)
  Because of loop head:            174 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         122 (1%)
  Times precision was empty:       813 (5%)
  Times precision was {false}:     162 (1%)
  Times result was cached:         12087 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1923 (13%)
  Times result was 'false':        1562 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         8365
  BDD entailment checks:           4829
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          17
Number of abstraction locations:          47
Max number of predicates per location:    9
Avg number of predicates per location:    5
Total predicates per abstraction:         63068
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 30.25
Number of irrelevant predicates:          27589 (44%)
Number of preds handled by boolean abs:   6705 (11%)
  Total number of models for allsat:      2898
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.51

Time for post operator:                  0.895s
  Time for path formula creation:        0.812s
Time for strengthen operator:            0.082s
Time for prec operator:                  6.308s
  Time for abstraction:                  6.017s (Max:     0.017s, Count: 14985)
    Boolean abstraction:                 1.549s
    Solving time:                        1.060s (Max:     0.013s)
    Model enumeration time:              0.197s
    Time for BDD construction:           0.103s (Max:     0.013s)
Time for merge operator:                 0.056s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):     1.257s

Number of path formula cache hits:   55056 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.713s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1745
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5807 (count: 19070, min: 0, max: 463, avg: 0.30)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.295s
Automaton transfers with branching:                0
Automaton transfer successors:                        56962 (count: 56962, min: 1, max: 1, avg: 1.00) [1 x 56962]

CPA algorithm statistics
------------------------
Number of iterations:            45240
Max size of waitlist:            26
Average size of waitlist:        9
Number of computed successors:   50603
Max successors for one state:    2
Number of times merged:          1768
Number of times stopped:         3178
Number of times breaked:         122

Total time for CPA algorithm:         9.667s (Max:     0.406s)
  Time for choose from waitlist:      0.077s
  Time for precision adjustment:      6.748s
  Time for transfer relation:         2.094s
  Time for merge operator:            0.176s
  Time for stop operator:             0.170s
  Time for adding to reached set:     0.082s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   122
Avg. length of target path (in blocks):                7239 (count: 122, min: 31, max: 95, avg: 59.34)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.572s
  Counterexample analysis:                             1.143s (Max:     0.024s, Calls: 122)
    Refinement sat check:                              0.558s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.078s
  Precision update:                                    0.102s
  ARG update:                                          0.136s

Length of refined path (in blocks):                    5255 (count: 122, min: 14, max: 76, avg: 43.07)
Number of affected states:                             1770 (count: 122, min: 1, max: 48, avg: 14.51)
Length (states) of path with itp 'true':               3363 (count: 122, min: 0, max: 62, avg: 27.57)
Length (states) of path with itp non-trivial itp:      1770 (count: 122, min: 1, max: 48, avg: 14.51)
Length (states) of path with itp 'false':               122 (count: 122, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          13 (count: 122, min: 0, max: 2, avg: 0.11)
Equal non-trivial interpolants along paths:            1635 (count: 122, min: 0, max: 45, avg: 13.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                122
Number of successful refinements:     122
Number of failed refinements:         0
Max. size of reached set before ref.: 2438
Max. size of reached set after ref.:  2306
Avg. size of reached set before ref.: 1033.94
Avg. size of reached set after ref.:  674.27

Total time for CEGAR algorithm:      11.563s
Time for refinements:                 1.832s
Average time for refinement:          0.015s
Max time for refinement:              0.051s

Code Coverage
-----------------------------
  Function coverage:      0.622
  Visited lines:          120
  Total lines:            431
  Line coverage:          0.278
  Visited conditions:     38
  Total conditions:       70
  Condition coverage:     0.543

CPAchecker general statistics
-----------------------------
Number of program locations:     617
Number of CFA edges:             663
Number of relevant variables:    110
Number of functions:             37
Number of loops:                 5
Size of reached set:             1984
  Number of reached locations:   164 (27%)
    Avg states per location:     12
    Max states per location:     60 (at node N610)
  Number of reached functions:   23 (62%)
  Number of partitions:          1948
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N405 (before lines 567-614), Function test called from node N53, stack depth 3 [55feda3f], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.963s
  Time for loading CPAs:          0.498s
  Time for loading parser:        0.463s
  Time for CFA construction:      0.922s
    Time for parsing file(s):     0.294s
    Time for AST to CFA:          0.261s
    Time for CFA sanity check:    0.059s
    Time for post-processing:     0.190s
      Time for var class.:        0.081s
Time for Analysis:               11.564s
CPU time for analysis:           11.560s
Time for analyzing result:        0.001s
Total time for CPAchecker:       13.530s
Total CPU time for CPAchecker:   13.530s
Time for statistics:              0.101s

Time for Garbage Collector:       0.225s (in 32 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    59 MiB) max;     41MB (    39 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8069MB (  7696 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
