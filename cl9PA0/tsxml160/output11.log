scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product35_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pp3quz6l/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 151: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 471: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 517: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 529: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 552: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 673: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 705: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 824: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 879: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 308: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7275 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7127 (98%)
  Because of loop head:            94 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         54 (1%)
  Times precision was empty:       476 (7%)
  Times precision was {false}:     206 (3%)
  Times result was cached:         4875 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1718 (24%)
  Times result was 'false':        999 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         4400
  BDD entailment checks:           2526
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          17
Number of abstraction locations:          47
Max number of predicates per location:    9
Avg number of predicates per location:    5
Total predicates per abstraction:         32402
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 16.84
Number of irrelevant predicates:          9355 (29%)
Number of preds handled by boolean abs:   7167 (22%)
  Total number of models for allsat:      2381
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.39

Time for post operator:                  0.807s
  Time for path formula creation:        0.787s
Time for strengthen operator:            0.065s
Time for prec operator:                  5.599s
  Time for abstraction:                  5.389s (Max:     0.020s, Count: 7275)
    Boolean abstraction:                 1.634s
    Solving time:                        1.141s (Max:     0.013s)
    Model enumeration time:              0.167s
    Time for BDD construction:           0.132s (Max:     0.012s)
Time for merge operator:                 0.041s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     1.308s

Number of path formula cache hits:   22610 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.722s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1508
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5141 (count: 15420, min: 0, max: 747, avg: 0.33)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.257s
Automaton transfers with branching:                0
Automaton transfer successors:                        28562 (count: 28562, min: 1, max: 1, avg: 1.00) [1 x 28562]

CPA algorithm statistics
------------------------
Number of iterations:            22318
Max size of waitlist:            16
Average size of waitlist:        5
Number of computed successors:   25090
Max successors for one state:    2
Number of times merged:          937
Number of times stopped:         1620
Number of times breaked:         54

Total time for CPA algorithm:         8.190s (Max:     0.523s)
  Time for choose from waitlist:      0.040s
  Time for precision adjustment:      5.891s
  Time for transfer relation:         1.713s
  Time for merge operator:            0.133s
  Time for stop operator:             0.109s
  Time for adding to reached set:     0.072s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   54
Avg. length of target path (in blocks):                2749 (count: 54, min: 25, max: 93, avg: 50.91)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.766s
  Counterexample analysis:                             0.524s (Max:     0.025s, Calls: 54)
    Refinement sat check:                              0.222s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.045s
  Precision update:                                    0.065s
  ARG update:                                          0.092s

Length of refined path (in blocks):                    2016 (count: 54, min: 14, max: 73, avg: 37.33)
Number of affected states:                             1139 (count: 54, min: 1, max: 44, avg: 21.09)
Length (states) of path with itp 'true':                823 (count: 54, min: 0, max: 49, avg: 15.24)
Length (states) of path with itp non-trivial itp:      1139 (count: 54, min: 1, max: 44, avg: 21.09)
Length (states) of path with itp 'false':                54 (count: 54, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          13 (count: 54, min: 0, max: 2, avg: 0.24)
Equal non-trivial interpolants along paths:            1072 (count: 54, min: 0, max: 43, avg: 19.85)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                54
Number of successful refinements:     54
Number of failed refinements:         0
Max. size of reached set before ref.: 1733
Max. size of reached set after ref.:  1441
Avg. size of reached set before ref.: 852.04
Avg. size of reached set after ref.:  475.67

Total time for CEGAR algorithm:       9.106s
Time for refinements:                 0.904s
Average time for refinement:          0.016s
Max time for refinement:              0.038s

Code Coverage
-----------------------------
  Function coverage:      0.622
  Visited lines:          120
  Total lines:            431
  Line coverage:          0.278
  Visited conditions:     38
  Total conditions:       70
  Condition coverage:     0.543

CPAchecker general statistics
-----------------------------
Number of program locations:     617
Number of CFA edges:             663
Number of relevant variables:    110
Number of functions:             37
Number of loops:                 5
Size of reached set:             2148
  Number of reached locations:   164 (27%)
    Avg states per location:     13
    Max states per location:     59 (at node N610)
  Number of reached functions:   23 (62%)
  Number of partitions:          2093
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N405 (before lines 567-614), Function test called from node N53, stack depth 3 [236fdf], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.053s
  Time for loading CPAs:          0.527s
  Time for loading parser:        0.515s
  Time for CFA construction:      0.897s
    Time for parsing file(s):     0.319s
    Time for AST to CFA:          0.213s
    Time for CFA sanity check:    0.061s
    Time for post-processing:     0.208s
      Time for var class.:        0.087s
Time for Analysis:                9.106s
CPU time for analysis:            9.110s
Time for analyzing result:        0.001s
Total time for CPAchecker:       11.161s
Total CPU time for CPAchecker:   11.160s
Time for statistics:              0.092s

Time for Garbage Collector:       0.158s (in 20 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    59 MiB) max;     40MB (    38 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    30 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8065MB (  7691 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
