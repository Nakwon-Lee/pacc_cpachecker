scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product35_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_obb33wsj/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 151: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 471: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 517: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 529: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 552: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 673: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 705: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 824: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 879: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 308: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            12662 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12384 (98%)
  Because of loop head:            195 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         83 (1%)
  Times precision was empty:       1249 (10%)
  Times precision was {false}:     228 (2%)
  Times result was cached:         8728 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2457 (19%)
  Times result was 'false':        1469 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         8408
  BDD entailment checks:           5344
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          17
Number of abstraction locations:          47
Max number of predicates per location:    9
Avg number of predicates per location:    5
Total predicates per abstraction:         54617
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 20.34
Number of irrelevant predicates:          20996 (38%)
Number of preds handled by boolean abs:   10021 (18%)
  Total number of models for allsat:      3534
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.44

Time for post operator:                  1.072s
  Time for path formula creation:        1.033s
Time for strengthen operator:            0.073s
Time for prec operator:                  6.740s
  Time for abstraction:                  6.409s (Max:     0.018s, Count: 12662)
    Boolean abstraction:                 1.907s
    Solving time:                        1.410s (Max:     0.013s)
    Model enumeration time:              0.168s
    Time for BDD construction:           0.130s (Max:     0.010s)
Time for merge operator:                 0.056s
Time for coverage check:                 0.028s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):     1.578s

Number of path formula cache hits:   35708 (63%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.900s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1753
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7037 (count: 23692, min: 0, max: 566, avg: 0.30)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.210s
Automaton transfers with branching:                0
Automaton transfer successors:                        48467 (count: 48467, min: 1, max: 1, avg: 1.00) [1 x 48467]

CPA algorithm statistics
------------------------
Number of iterations:            38298
Max size of waitlist:            19
Average size of waitlist:        7
Number of computed successors:   42859
Max successors for one state:    2
Number of times merged:          1532
Number of times stopped:         2880
Number of times breaked:         83

Total time for CPA algorithm:        10.044s (Max:     0.472s)
  Time for choose from waitlist:      0.076s
  Time for precision adjustment:      7.146s
  Time for transfer relation:         2.089s
  Time for merge operator:            0.134s
  Time for stop operator:             0.142s
  Time for adding to reached set:     0.097s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   83
Avg. length of target path (in blocks):                4370 (count: 83, min: 25, max: 87, avg: 52.65)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.114s
  Counterexample analysis:                             0.697s (Max:     0.024s, Calls: 83)
    Refinement sat check:                              0.315s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.066s
  Precision update:                                    0.075s
  ARG update:                                          0.185s

Length of refined path (in blocks):                    3225 (count: 83, min: 14, max: 72, avg: 38.86)
Number of affected states:                             1255 (count: 83, min: 1, max: 44, avg: 15.12)
Length (states) of path with itp 'true':               1887 (count: 83, min: 0, max: 66, avg: 22.73)
Length (states) of path with itp non-trivial itp:      1255 (count: 83, min: 1, max: 44, avg: 15.12)
Length (states) of path with itp 'false':                83 (count: 83, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          14 (count: 83, min: 0, max: 2, avg: 0.17)
Equal non-trivial interpolants along paths:            1158 (count: 83, min: 0, max: 41, avg: 13.95)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                83
Number of successful refinements:     83
Number of failed refinements:         0
Max. size of reached set before ref.: 2321
Max. size of reached set after ref.:  1752
Avg. size of reached set before ref.: 1103.94
Avg. size of reached set after ref.:  672.99

Total time for CEGAR algorithm:      11.350s
Time for refinements:                 1.263s
Average time for refinement:          0.015s
Max time for refinement:              0.051s

Code Coverage
-----------------------------
  Function coverage:      0.622
  Visited lines:          120
  Total lines:            431
  Line coverage:          0.278
  Visited conditions:     38
  Total conditions:       70
  Condition coverage:     0.543

CPAchecker general statistics
-----------------------------
Number of program locations:     617
Number of CFA edges:             663
Number of relevant variables:    110
Number of functions:             37
Number of loops:                 5
Size of reached set:             2742
  Number of reached locations:   164 (27%)
    Avg states per location:     16
    Max states per location:     76 (at node N610)
  Number of reached functions:   23 (62%)
  Number of partitions:          2670
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N422 (after line 589), Function test called from node N53, stack depth 3 [27e656e6], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.996s
  Time for loading CPAs:          0.487s
  Time for loading parser:        0.462s
  Time for CFA construction:      0.962s
    Time for parsing file(s):     0.326s
    Time for AST to CFA:          0.253s
    Time for CFA sanity check:    0.055s
    Time for post-processing:     0.207s
      Time for var class.:        0.098s
Time for Analysis:               11.351s
CPU time for analysis:           11.350s
Time for analyzing result:        0.002s
Total time for CPAchecker:       13.351s
Total CPU time for CPAchecker:   13.350s
Time for statistics:              0.102s

Time for Garbage Collector:       0.221s (in 29 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     40MB (    38 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     32MB (    31 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8069MB (  7695 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
