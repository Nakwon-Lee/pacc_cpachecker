scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product35_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1ehmyuhf/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 151: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 471: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 517: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 529: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 552: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 673: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 705: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 824: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 879: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 308: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            8162 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7999 (98%)
  Because of loop head:            58 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         105 (1%)
  Times precision was empty:       622 (8%)
  Times precision was {false}:     159 (2%)
  Times result was cached:         5615 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1766 (22%)
  Times result was 'false':        813 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         4502
  BDD entailment checks:           2360
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          17
Number of abstraction locations:          47
Max number of predicates per location:    9
Avg number of predicates per location:    5
Total predicates per abstraction:         35246
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 18.31
Number of irrelevant predicates:          14538 (41%)
Number of preds handled by boolean abs:   6874 (20%)
  Total number of models for allsat:      2703
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.53

Time for post operator:                  0.870s
  Time for path formula creation:        0.827s
Time for strengthen operator:            0.081s
Time for prec operator:                  6.073s
  Time for abstraction:                  5.782s (Max:     0.017s, Count: 8162)
    Boolean abstraction:                 1.701s
    Solving time:                        1.120s (Max:     0.013s)
    Model enumeration time:              0.223s
    Time for BDD construction:           0.153s (Max:     0.012s)
Time for merge operator:                 0.065s
Time for coverage check:                 0.027s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):     1.343s

Number of path formula cache hits:   24498 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.742s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1655
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5575 (count: 15425, min: 0, max: 700, avg: 0.36)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.201s
Automaton transfers with branching:                0
Automaton transfer successors:                        31954 (count: 31954, min: 1, max: 1, avg: 1.00) [1 x 31954]

CPA algorithm statistics
------------------------
Number of iterations:            24875
Max size of waitlist:            17
Average size of waitlist:        6
Number of computed successors:   27983
Max successors for one state:    2
Number of times merged:          1071
Number of times stopped:         1846
Number of times breaked:         105

Total time for CPA algorithm:         9.029s (Max:     0.337s)
  Time for choose from waitlist:      0.063s
  Time for precision adjustment:      6.477s
  Time for transfer relation:         1.767s
  Time for merge operator:            0.164s
  Time for stop operator:             0.133s
  Time for adding to reached set:     0.116s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   105
Avg. length of target path (in blocks):                5775 (count: 105, min: 26, max: 116, avg: 55.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.350s
  Counterexample analysis:                             1.003s (Max:     0.025s, Calls: 105)
    Refinement sat check:                              0.465s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.045s
  Precision update:                                    0.098s
  ARG update:                                          0.121s

Length of refined path (in blocks):                    4408 (count: 105, min: 14, max: 79, avg: 41.98)
Number of affected states:                             1263 (count: 105, min: 1, max: 65, avg: 12.03)
Length (states) of path with itp 'true':               3040 (count: 105, min: 0, max: 64, avg: 28.95)
Length (states) of path with itp non-trivial itp:      1263 (count: 105, min: 1, max: 65, avg: 12.03)
Length (states) of path with itp 'false':               105 (count: 105, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          14 (count: 105, min: 0, max: 2, avg: 0.13)
Equal non-trivial interpolants along paths:            1144 (count: 105, min: 0, max: 64, avg: 10.90)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                105
Number of successful refinements:     105
Number of failed refinements:         0
Max. size of reached set before ref.: 1878
Max. size of reached set after ref.:  1347
Avg. size of reached set before ref.: 912.86
Avg. size of reached set after ref.:  689.60

Total time for CEGAR algorithm:      10.724s
Time for refinements:                 1.608s
Average time for refinement:          0.015s
Max time for refinement:              0.045s

Code Coverage
-----------------------------
  Function coverage:      0.622
  Visited lines:          120
  Total lines:            431
  Line coverage:          0.278
  Visited conditions:     38
  Total conditions:       70
  Condition coverage:     0.543

CPAchecker general statistics
-----------------------------
Number of program locations:     617
Number of CFA edges:             663
Number of relevant variables:    110
Number of functions:             37
Number of loops:                 5
Size of reached set:             1883
  Number of reached locations:   164 (27%)
    Avg states per location:     11
    Max states per location:     54 (at node N610)
  Number of reached functions:   23 (62%)
  Number of partitions:          1835
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N422 (after line 589), Function test called from node N53, stack depth 3 [3e1c5e0d], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.927s
  Time for loading CPAs:          0.508s
  Time for loading parser:        0.430s
  Time for CFA construction:      0.887s
    Time for parsing file(s):     0.297s
    Time for AST to CFA:          0.233s
    Time for CFA sanity check:    0.062s
    Time for post-processing:     0.186s
      Time for var class.:        0.068s
Time for Analysis:               10.724s
CPU time for analysis:           10.730s
Time for analyzing result:        0.001s
Total time for CPAchecker:       12.654s
Total CPU time for CPAchecker:   12.650s
Time for statistics:              0.084s

Time for Garbage Collector:       0.205s (in 21 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    59 MiB) max;     40MB (    39 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
