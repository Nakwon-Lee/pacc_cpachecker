scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product27_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0n0g2js8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 179: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 625: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 671: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 847: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 911: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 462: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2754 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2666 (97%)
  Because of loop head:            61 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         27 (1%)
  Times precision was empty:       475 (17%)
  Times precision was {false}:     78 (3%)
  Times result was cached:         1894 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      307 (11%)
  Times result was 'false':        382 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         797
  BDD entailment checks:           471
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          37
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         6490
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 16.86
Number of irrelevant predicates:          1993 (31%)
Number of preds handled by boolean abs:   713 (11%)
  Total number of models for allsat:      336
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  0.396s
  Time for path formula creation:        0.383s
Time for strengthen operator:            0.038s
Time for prec operator:                  1.543s
  Time for abstraction:                  1.424s (Max:     0.017s, Count: 2754)
    Boolean abstraction:                 0.316s
    Solving time:                        0.211s (Max:     0.017s)
    Model enumeration time:              0.025s
    Time for BDD construction:           0.043s (Max:     0.008s)
Time for merge operator:                 0.014s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):     0.236s

Number of path formula cache hits:   7955 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.365s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               286
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         730 (count: 3341, min: 0, max: 234, avg: 0.22)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.077s
Automaton transfers with branching:                0
Automaton transfer successors:                        10238 (count: 10238, min: 1, max: 1, avg: 1.00) [1 x 10238]

CPA algorithm statistics
------------------------
Number of iterations:            8071
Max size of waitlist:            14
Average size of waitlist:        5
Number of computed successors:   9031
Max successors for one state:    2
Number of times merged:          163
Number of times stopped:         417
Number of times breaked:         27

Total time for CPA algorithm:         2.935s (Max:     0.209s)
  Time for choose from waitlist:      0.040s
  Time for precision adjustment:      1.720s
  Time for transfer relation:         0.858s
  Time for merge operator:            0.054s
  Time for stop operator:             0.065s
  Time for adding to reached set:     0.060s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   27
Avg. length of target path (in blocks):                 823 (count: 27, min: 20, max: 46, avg: 30.48)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.285s
  Counterexample analysis:                             0.158s (Max:     0.017s, Calls: 27)
    Refinement sat check:                              0.062s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.030s
  Precision update:                                    0.041s
  ARG update:                                          0.033s

Length of refined path (in blocks):                     613 (count: 27, min: 13, max: 43, avg: 22.70)
Number of affected states:                              482 (count: 27, min: 9, max: 42, avg: 17.85)
Length (states) of path with itp 'true':                104 (count: 27, min: 0, max: 13, avg: 3.85)
Length (states) of path with itp non-trivial itp:       482 (count: 27, min: 9, max: 42, avg: 17.85)
Length (states) of path with itp 'false':                27 (count: 27, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 27, min: 0, max: 1, avg: 0.19)
Equal non-trivial interpolants along paths:             450 (count: 27, min: 8, max: 40, avg: 16.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                27
Number of successful refinements:     27
Number of failed refinements:         0
Max. size of reached set before ref.: 648
Max. size of reached set after ref.:  432
Avg. size of reached set before ref.: 371.19
Avg. size of reached set after ref.:  92.96

Total time for CEGAR algorithm:       3.279s
Time for refinements:                 0.338s
Average time for refinement:          0.012s
Max time for refinement:              0.041s

Code Coverage
-----------------------------
  Function coverage:      0.444
  Visited lines:          84
  Total lines:            425
  Line coverage:          0.198
  Visited conditions:     28
  Total conditions:       68
  Condition coverage:     0.412

CPAchecker general statistics
-----------------------------
Number of program locations:     608
Number of CFA edges:             653
Number of relevant variables:    112
Number of functions:             36
Number of loops:                 5
Size of reached set:             721
  Number of reached locations:   114 (19%)
    Avg states per location:     6
    Max states per location:     24 (at node N88)
  Number of reached functions:   16 (44%)
  Number of partitions:          708
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N477 (before lines 686-733), Function test called from node N149, stack depth 3 [bbb6f0], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.185s
  Time for loading CPAs:          0.626s
  Time for loading parser:        0.529s
  Time for CFA construction:      0.913s
    Time for parsing file(s):     0.303s
    Time for AST to CFA:          0.232s
    Time for CFA sanity check:    0.059s
    Time for post-processing:     0.223s
      Time for var class.:        0.095s
Time for Analysis:                3.279s
CPU time for analysis:            3.280s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.469s
Total CPU time for CPAchecker:    5.470s
Time for statistics:              0.073s

Time for Garbage Collector:       0.085s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     36MB (    34 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8044MB (  7671 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
