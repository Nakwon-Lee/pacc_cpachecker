scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product27_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cklsigf2/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 179: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 625: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 671: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 847: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 911: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 462: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2592 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2531 (98%)
  Because of loop head:            36 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25 (1%)
  Times precision was empty:       818 (32%)
  Times precision was {false}:     70 (3%)
  Times result was cached:         1502 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      202 (8%)
  Times result was 'false':        339 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         616
  BDD entailment checks:           262
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          37
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         3766
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 13.85
Number of irrelevant predicates:          1246 (33%)
Number of preds handled by boolean abs:   368 (10%)
  Total number of models for allsat:      226
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.12

Time for post operator:                  0.449s
  Time for path formula creation:        0.422s
Time for strengthen operator:            0.042s
Time for prec operator:                  1.141s
  Time for abstraction:                  1.024s (Max:     0.018s, Count: 2592)
    Boolean abstraction:                 0.191s
    Solving time:                        0.111s (Max:     0.009s)
    Model enumeration time:              0.007s
    Time for BDD construction:           0.040s (Max:     0.012s)
Time for merge operator:                 0.007s
Time for coverage check:                 0.006s
  Time for BDD entailment checks:        0.006s
Total time for SMT solver (w/o itp):     0.118s

Number of path formula cache hits:   9040 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.388s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               235
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         447 (count: 2753, min: 0, max: 229, avg: 0.16)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.067s
Automaton transfers with branching:                0
Automaton transfer successors:                         9933 (count: 9933, min: 1, max: 1, avg: 1.00) [1 x 9933]

CPA algorithm statistics
------------------------
Number of iterations:            7540
Max size of waitlist:            31
Average size of waitlist:        9
Number of computed successors:   8567
Max successors for one state:    2
Number of times merged:          177
Number of times stopped:         366
Number of times breaked:         25

Total time for CPA algorithm:         2.560s (Max:     0.379s)
  Time for choose from waitlist:      0.051s
  Time for precision adjustment:      1.303s
  Time for transfer relation:         0.900s
  Time for merge operator:            0.037s
  Time for stop operator:             0.038s
  Time for adding to reached set:     0.089s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   25
Avg. length of target path (in blocks):                 689 (count: 25, min: 20, max: 44, avg: 27.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.323s
  Counterexample analysis:                             0.205s (Max:     0.017s, Calls: 25)
    Refinement sat check:                              0.117s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.045s
  Precision update:                                    0.009s
  ARG update:                                          0.038s

Length of refined path (in blocks):                     476 (count: 25, min: 13, max: 36, avg: 19.04)
Number of affected states:                              359 (count: 25, min: 2, max: 35, avg: 14.36)
Length (states) of path with itp 'true':                 92 (count: 25, min: 0, max: 14, avg: 3.68)
Length (states) of path with itp non-trivial itp:       359 (count: 25, min: 2, max: 35, avg: 14.36)
Length (states) of path with itp 'false':                25 (count: 25, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 25, min: 0, max: 1, avg: 0.16)
Equal non-trivial interpolants along paths:             330 (count: 25, min: 1, max: 34, avg: 13.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 780
Max. size of reached set after ref.:  338
Avg. size of reached set before ref.: 349.64
Avg. size of reached set after ref.:  74.20

Total time for CEGAR algorithm:       2.906s
Time for refinements:                 0.346s
Average time for refinement:          0.013s
Max time for refinement:              0.039s

Code Coverage
-----------------------------
  Function coverage:      0.472
  Visited lines:          100
  Total lines:            425
  Line coverage:          0.235
  Visited conditions:     30
  Total conditions:       68
  Condition coverage:     0.441

CPAchecker general statistics
-----------------------------
Number of program locations:     608
Number of CFA edges:             653
Number of relevant variables:    112
Number of functions:             36
Number of loops:                 5
Size of reached set:             977
  Number of reached locations:   135 (22%)
    Avg states per location:     7
    Max states per location:     40 (at node N88)
  Number of reached functions:   17 (47%)
  Number of partitions:          962
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N477 (before lines 686-733), Function test called from node N149, stack depth 3 [41f3aaf1], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.246s
  Time for loading CPAs:          0.535s
  Time for loading parser:        0.536s
  Time for CFA construction:      1.070s
    Time for parsing file(s):     0.300s
    Time for AST to CFA:          0.271s
    Time for CFA sanity check:    0.084s
    Time for post-processing:     0.245s
      Time for var class.:        0.124s
Time for Analysis:                2.907s
CPU time for analysis:            2.920s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.157s
Total CPU time for CPAchecker:    5.160s
Time for statistics:              0.067s

Time for Garbage Collector:       0.088s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    56 MiB) max;     35MB (    34 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8039MB (  7667 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
