scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product48_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ws3a5zs_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 239: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 559: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 605: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 768: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 777: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 832: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 945: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 968: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 396: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            16033 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15755 (98%)
  Because of loop head:            215 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         63 (0%)
  Times precision was empty:       887 (6%)
  Times precision was {false}:     174 (1%)
  Times result was cached:         13264 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1708 (11%)
  Times result was 'false':        2211 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         6308
  BDD entailment checks:           4698
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          10
Number of abstraction locations:          57
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         49563
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 26.34
Number of irrelevant predicates:          16195 (33%)
Number of preds handled by boolean abs:   4340 (9%)
  Total number of models for allsat:      1710
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  1.278s
  Time for path formula creation:        1.182s
Time for strengthen operator:            0.085s
Time for prec operator:                  6.342s
  Time for abstraction:                  5.983s (Max:     0.030s, Count: 16033)
    Boolean abstraction:                 1.405s
    Solving time:                        1.076s (Max:     0.016s)
    Model enumeration time:              0.078s
    Time for BDD construction:           0.111s (Max:     0.012s)
Time for merge operator:                 0.038s
Time for coverage check:                 0.049s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):     1.154s

Number of path formula cache hits:   48975 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.019s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               390
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3605 (count: 17432, min: 0, max: 280, avg: 0.21)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.284s
Automaton transfers with branching:                0
Automaton transfer successors:                        57160 (count: 57160, min: 1, max: 1, avg: 1.00) [1 x 57160]

CPA algorithm statistics
------------------------
Number of iterations:            44784
Max size of waitlist:            17
Average size of waitlist:        7
Number of computed successors:   49260
Max successors for one state:    2
Number of times merged:          805
Number of times stopped:         2055
Number of times breaked:         63

Total time for CPA algorithm:        10.453s (Max:     0.738s)
  Time for choose from waitlist:      0.111s
  Time for precision adjustment:      6.902s
  Time for transfer relation:         2.545s
  Time for merge operator:            0.133s
  Time for stop operator:             0.203s
  Time for adding to reached set:     0.141s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   63
Avg. length of target path (in blocks):                2839 (count: 63, min: 19, max: 76, avg: 45.06)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.935s
  Counterexample analysis:                             0.578s (Max:     0.028s, Calls: 63)
    Refinement sat check:                              0.275s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.042s
  Precision update:                                    0.070s
  ARG update:                                          0.185s

Length of refined path (in blocks):                    2323 (count: 63, min: 13, max: 69, avg: 36.87)
Number of affected states:                             1175 (count: 63, min: 2, max: 68, avg: 18.65)
Length (states) of path with itp 'true':               1085 (count: 63, min: 0, max: 55, avg: 17.22)
Length (states) of path with itp non-trivial itp:      1175 (count: 63, min: 2, max: 68, avg: 18.65)
Length (states) of path with itp 'false':                63 (count: 63, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          26 (count: 63, min: 0, max: 2, avg: 0.41)
Equal non-trivial interpolants along paths:            1086 (count: 63, min: 1, max: 66, avg: 17.24)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                63
Number of successful refinements:     63
Number of failed refinements:         0
Max. size of reached set before ref.: 5082
Max. size of reached set after ref.:  4820
Avg. size of reached set before ref.: 1801.16
Avg. size of reached set after ref.:  1144.21

Total time for CEGAR algorithm:      11.683s
Time for refinements:                 1.129s
Average time for refinement:          0.017s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          147
  Total lines:            439
  Line coverage:          0.335
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     632
Number of CFA edges:             683
Number of relevant variables:    113
Number of functions:             38
Number of loops:                 5
Size of reached set:             3607
  Number of reached locations:   202 (32%)
    Avg states per location:     17
    Max states per location:     94 (at node N25)
  Number of reached functions:   26 (68%)
  Number of partitions:          3477
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N454 (before line 665), Function timeShift called from node N75, stack depth 5 [3864569f], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0

Time for analysis setup:          2.255s
  Time for loading CPAs:          0.630s
  Time for loading parser:        0.488s
  Time for CFA construction:      1.014s
    Time for parsing file(s):     0.338s
    Time for AST to CFA:          0.267s
    Time for CFA sanity check:    0.081s
    Time for post-processing:     0.227s
      Time for var class.:        0.093s
Time for Analysis:               11.684s
CPU time for analysis:           11.680s
Time for analyzing result:        0.001s
Total time for CPAchecker:       13.942s
Total CPU time for CPAchecker:   13.940s
Time for statistics:              0.132s

Time for Garbage Collector:       0.254s (in 30 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     41MB (    39 MiB) avg;     68MB (    65 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8005MB (  7634 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
