scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product26_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_mulh4jn9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 232: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 241: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 353: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 385: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 435: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 458: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 778: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 824: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 920: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 615: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2312 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2236 (97%)
  Because of loop head:            51 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25 (1%)
  Times precision was empty:       365 (16%)
  Times precision was {false}:     70 (3%)
  Times result was cached:         1583 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      294 (13%)
  Times result was 'false':        292 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         640
  BDD entailment checks:           378
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          36
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         5563
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 15.28
Number of irrelevant predicates:          1846 (33%)
Number of preds handled by boolean abs:   676 (12%)
  Total number of models for allsat:      327
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.11

Time for post operator:                  0.578s
  Time for path formula creation:        0.555s
Time for strengthen operator:            0.021s
Time for prec operator:                  1.423s
  Time for abstraction:                  1.355s (Max:     0.014s, Count: 2312)
    Boolean abstraction:                 0.340s
    Solving time:                        0.263s (Max:     0.012s)
    Model enumeration time:              0.013s
    Time for BDD construction:           0.037s (Max:     0.008s)
Time for merge operator:                 0.005s
Time for coverage check:                 0.007s
  Time for BDD entailment checks:        0.007s
Total time for SMT solver (w/o itp):     0.276s

Number of path formula cache hits:   6330 (64%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.526s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               283
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         653 (count: 2996, min: 0, max: 261, avg: 0.22)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.070s
Automaton transfers with branching:                0
Automaton transfer successors:                         8528 (count: 8528, min: 1, max: 1, avg: 1.00) [1 x 8528]

CPA algorithm statistics
------------------------
Number of iterations:            6617
Max size of waitlist:            13
Average size of waitlist:        6
Number of computed successors:   7411
Max successors for one state:    2
Number of times merged:          131
Number of times stopped:         324
Number of times breaked:         25

Total time for CPA algorithm:         2.835s (Max:     0.262s)
  Time for choose from waitlist:      0.026s
  Time for precision adjustment:      1.595s
  Time for transfer relation:         0.987s
  Time for merge operator:            0.041s
  Time for stop operator:             0.030s
  Time for adding to reached set:     0.053s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   25
Avg. length of target path (in blocks):                 783 (count: 25, min: 20, max: 46, avg: 31.32)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.300s
  Counterexample analysis:                             0.161s (Max:     0.016s, Calls: 25)
    Refinement sat check:                              0.063s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.016s
  ARG update:                                          0.052s

Length of refined path (in blocks):                     584 (count: 25, min: 14, max: 43, avg: 23.36)
Number of affected states:                              444 (count: 25, min: 9, max: 42, avg: 17.76)
Length (states) of path with itp 'true':                115 (count: 25, min: 0, max: 13, avg: 4.60)
Length (states) of path with itp non-trivial itp:       444 (count: 25, min: 9, max: 42, avg: 17.76)
Length (states) of path with itp 'false':                25 (count: 25, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 25, min: 0, max: 1, avg: 0.16)
Equal non-trivial interpolants along paths:             415 (count: 25, min: 8, max: 40, avg: 16.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 634
Max. size of reached set after ref.:  420
Avg. size of reached set before ref.: 358.20
Avg. size of reached set after ref.:  109.48

Total time for CEGAR algorithm:       3.182s
Time for refinements:                 0.345s
Average time for refinement:          0.013s
Max time for refinement:              0.038s

Code Coverage
-----------------------------
  Function coverage:      0.444
  Visited lines:          83
  Total lines:            423
  Line coverage:          0.196
  Visited conditions:     26
  Total conditions:       66
  Condition coverage:     0.394

CPAchecker general statistics
-----------------------------
Number of program locations:     604
Number of CFA edges:             647
Number of relevant variables:    114
Number of functions:             36
Number of loops:                 5
Size of reached set:             578
  Number of reached locations:   110 (18%)
    Avg states per location:     5
    Max states per location:     21 (at node N210)
  Number of reached functions:   16 (44%)
  Number of partitions:          568
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N15 (before lines 64-111), Function test called from node N595, stack depth 3 [78307a56], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.177s
  Time for loading CPAs:          0.535s
  Time for loading parser:        0.547s
  Time for CFA construction:      0.983s
    Time for parsing file(s):     0.327s
    Time for AST to CFA:          0.243s
    Time for CFA sanity check:    0.068s
    Time for post-processing:     0.217s
      Time for var class.:        0.094s
Time for Analysis:                3.183s
CPU time for analysis:            3.190s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.362s
Total CPU time for CPAchecker:    5.360s
Time for statistics:              0.060s

Time for Garbage Collector:       0.118s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     35MB (    33 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8040MB (  7667 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
