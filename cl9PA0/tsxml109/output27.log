scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product26_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_y9nzttmo/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 232: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 241: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 353: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 385: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 435: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 458: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 778: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 824: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 920: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 615: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1969 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1902 (97%)
  Because of loop head:            45 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         22 (1%)
  Times precision was empty:       338 (17%)
  Times precision was {false}:     67 (3%)
  Times result was cached:         1313 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      251 (13%)
  Times result was 'false':        251 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         471
  BDD entailment checks:           261
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          36
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         4593
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 14.44
Number of irrelevant predicates:          1421 (31%)
Number of preds handled by boolean abs:   576 (13%)
  Total number of models for allsat:      280
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.12

Time for post operator:                  0.377s
  Time for path formula creation:        0.365s
Time for strengthen operator:            0.020s
Time for prec operator:                  1.155s
  Time for abstraction:                  1.093s (Max:     0.014s, Count: 1969)
    Boolean abstraction:                 0.244s
    Solving time:                        0.110s (Max:     0.009s)
    Model enumeration time:              0.039s
    Time for BDD construction:           0.056s (Max:     0.012s)
Time for merge operator:                 0.009s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     0.149s

Number of path formula cache hits:   5740 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.335s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               281
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         634 (count: 2577, min: 0, max: 232, avg: 0.25)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.047s
Automaton transfers with branching:                0
Automaton transfer successors:                         7250 (count: 7250, min: 1, max: 1, avg: 1.00) [1 x 7250]

CPA algorithm statistics
------------------------
Number of iterations:            5619
Max size of waitlist:            14
Average size of waitlist:        6
Number of computed successors:   6284
Max successors for one state:    2
Number of times merged:          105
Number of times stopped:         248
Number of times breaked:         22

Total time for CPA algorithm:         2.432s (Max:     0.218s)
  Time for choose from waitlist:      0.036s
  Time for precision adjustment:      1.377s
  Time for transfer relation:         0.775s
  Time for merge operator:            0.023s
  Time for stop operator:             0.046s
  Time for adding to reached set:     0.071s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   22
Avg. length of target path (in blocks):                 679 (count: 22, min: 20, max: 46, avg: 30.86)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.244s
  Counterexample analysis:                             0.125s (Max:     0.012s, Calls: 22)
    Refinement sat check:                              0.054s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.043s
  Precision update:                                    0.033s
  ARG update:                                          0.024s

Length of refined path (in blocks):                     518 (count: 22, min: 14, max: 43, avg: 23.55)
Number of affected states:                              415 (count: 22, min: 11, max: 42, avg: 18.86)
Length (states) of path with itp 'true':                 81 (count: 22, min: 0, max: 13, avg: 3.68)
Length (states) of path with itp non-trivial itp:       415 (count: 22, min: 11, max: 42, avg: 18.86)
Length (states) of path with itp 'false':                22 (count: 22, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 22, min: 0, max: 1, avg: 0.18)
Equal non-trivial interpolants along paths:             389 (count: 22, min: 10, max: 40, avg: 17.68)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 529
Max. size of reached set after ref.:  356
Avg. size of reached set before ref.: 317.68
Avg. size of reached set after ref.:  77.14

Total time for CEGAR algorithm:       2.741s
Time for refinements:                 0.307s
Average time for refinement:          0.013s
Max time for refinement:              0.042s

Code Coverage
-----------------------------
  Function coverage:      0.444
  Visited lines:          83
  Total lines:            423
  Line coverage:          0.196
  Visited conditions:     26
  Total conditions:       66
  Condition coverage:     0.394

CPAchecker general statistics
-----------------------------
Number of program locations:     604
Number of CFA edges:             647
Number of relevant variables:    114
Number of functions:             36
Number of loops:                 5
Size of reached set:             494
  Number of reached locations:   110 (18%)
    Avg states per location:     4
    Max states per location:     19 (at node N210)
  Number of reached functions:   16 (44%)
  Number of partitions:          487
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N15 (before lines 64-111), Function test called from node N595, stack depth 3 [2d85fb64], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.059s
  Time for loading CPAs:          0.560s
  Time for loading parser:        0.458s
  Time for CFA construction:      0.895s
    Time for parsing file(s):     0.298s
    Time for AST to CFA:          0.234s
    Time for CFA sanity check:    0.060s
    Time for post-processing:     0.189s
      Time for var class.:        0.073s
Time for Analysis:                2.741s
CPU time for analysis:            2.740s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.803s
Total CPU time for CPAchecker:    4.800s
Time for statistics:              0.041s

Time for Garbage Collector:       0.095s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     35MB (    33 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     27MB (    26 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7984MB (  7614 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
