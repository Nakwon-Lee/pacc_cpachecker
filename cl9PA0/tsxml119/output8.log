scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product32_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ysql7tm1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 80: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 103: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 213: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 265: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 297: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 306: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 626: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 816: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 871: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 463: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4016 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3925 (98%)
  Because of loop head:            61 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         30 (1%)
  Times precision was empty:       804 (20%)
  Times precision was {false}:     84 (2%)
  Times result was cached:         2799 (70%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      329 (8%)
  Times result was 'false':        528 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         964
  BDD entailment checks:           740
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          42
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         8802
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 21.31
Number of irrelevant predicates:          3195 (36%)
Number of preds handled by boolean abs:   730 (8%)
  Total number of models for allsat:      365
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.11

Time for post operator:                  0.446s
  Time for path formula creation:        0.423s
Time for strengthen operator:            0.054s
Time for prec operator:                  1.471s
  Time for abstraction:                  1.365s (Max:     0.013s, Count: 4016)
    Boolean abstraction:                 0.317s
    Solving time:                        0.219s (Max:     0.009s)
    Model enumeration time:              0.015s
    Time for BDD construction:           0.066s (Max:     0.010s)
Time for merge operator:                 0.008s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     0.234s

Number of path formula cache hits:   10597 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.373s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               285
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         747 (count: 4092, min: 0, max: 241, avg: 0.18)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.145s
Automaton transfers with branching:                0
Automaton transfer successors:                        14143 (count: 14143, min: 1, max: 1, avg: 1.00) [1 x 14143]

CPA algorithm statistics
------------------------
Number of iterations:            11105
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   12360
Max successors for one state:    2
Number of times merged:          112
Number of times stopped:         554
Number of times breaked:         30

Total time for CPA algorithm:         3.154s (Max:     0.282s)
  Time for choose from waitlist:      0.036s
  Time for precision adjustment:      1.737s
  Time for transfer relation:         1.013s
  Time for merge operator:            0.056s
  Time for stop operator:             0.068s
  Time for adding to reached set:     0.054s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   30
Avg. length of target path (in blocks):                 963 (count: 30, min: 20, max: 52, avg: 32.10)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.329s
  Counterexample analysis:                             0.192s (Max:     0.019s, Calls: 30)
    Refinement sat check:                              0.094s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.047s
  Precision update:                                    0.018s
  ARG update:                                          0.053s

Length of refined path (in blocks):                     710 (count: 30, min: 13, max: 49, avg: 23.67)
Number of affected states:                              543 (count: 30, min: 9, max: 48, avg: 18.10)
Length (states) of path with itp 'true':                137 (count: 30, min: 0, max: 13, avg: 4.57)
Length (states) of path with itp non-trivial itp:       543 (count: 30, min: 9, max: 48, avg: 18.10)
Length (states) of path with itp 'false':                30 (count: 30, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 30, min: 0, max: 1, avg: 0.13)
Equal non-trivial interpolants along paths:             509 (count: 30, min: 8, max: 46, avg: 16.97)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                30
Number of successful refinements:     30
Number of failed refinements:         0
Max. size of reached set before ref.: 752
Max. size of reached set after ref.:  487
Avg. size of reached set before ref.: 502.37
Avg. size of reached set after ref.:  151.07

Total time for CEGAR algorithm:       3.559s
Time for refinements:                 0.393s
Average time for refinement:          0.013s
Max time for refinement:              0.046s

Code Coverage
-----------------------------
  Function coverage:      0.474
  Visited lines:          91
  Total lines:            436
  Line coverage:          0.209
  Visited conditions:     30
  Total conditions:       72
  Condition coverage:     0.417

CPAchecker general statistics
-----------------------------
Number of program locations:     629
Number of CFA edges:             679
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             740
  Number of reached locations:   125 (20%)
    Avg states per location:     5
    Max states per location:     25 (at node N0)
  Number of reached functions:   18 (47%)
  Number of partitions:          729
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N606 (before lines 908-957), Function test called from node N91, stack depth 3 [17befef0], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.918s
  Time for loading CPAs:          0.516s
  Time for loading parser:        0.432s
  Time for CFA construction:      0.878s
    Time for parsing file(s):     0.321s
    Time for AST to CFA:          0.207s
    Time for CFA sanity check:    0.053s
    Time for post-processing:     0.185s
      Time for var class.:        0.073s
Time for Analysis:                3.559s
CPU time for analysis:            3.550s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.479s
Total CPU time for CPAchecker:    5.470s
Time for statistics:              0.067s

Time for Garbage Collector:       0.085s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     36MB (    34 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     28MB (    27 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7991MB (  7621 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
