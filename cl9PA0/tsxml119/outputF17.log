scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product32_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tclin7ts/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 80: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 103: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 213: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 265: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 297: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 306: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 626: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 816: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 871: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 463: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4130 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4060 (98%)
  Because of loop head:            39 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         31 (1%)
  Times precision was empty:       1545 (37%)
  Times precision was {false}:     75 (2%)
  Times result was cached:         2314 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      196 (5%)
  Times result was 'false':        492 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         684
  BDD entailment checks:           386
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          42
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         4994
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 18.43
Number of irrelevant predicates:          1494 (30%)
Number of preds handled by boolean abs:   346 (7%)
  Total number of models for allsat:      225
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.15

Time for post operator:                  0.506s
  Time for path formula creation:        0.479s
Time for strengthen operator:            0.064s
Time for prec operator:                  1.265s
  Time for abstraction:                  1.142s (Max:     0.014s, Count: 4130)
    Boolean abstraction:                 0.193s
    Solving time:                        0.128s (Max:     0.009s)
    Model enumeration time:              0.018s
    Time for BDD construction:           0.031s (Max:     0.008s)
Time for merge operator:                 0.022s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):     0.146s

Number of path formula cache hits:   14367 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.432s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               237
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         413 (count: 3593, min: 0, max: 195, avg: 0.11)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.175s
Automaton transfers with branching:                0
Automaton transfer successors:                        15198 (count: 15198, min: 1, max: 1, avg: 1.00) [1 x 15198]

CPA algorithm statistics
------------------------
Number of iterations:            11419
Max size of waitlist:            42
Average size of waitlist:        16
Number of computed successors:   12904
Max successors for one state:    2
Number of times merged:          149
Number of times stopped:         418
Number of times breaked:         31

Total time for CPA algorithm:         3.015s (Max:     0.396s)
  Time for choose from waitlist:      0.047s
  Time for precision adjustment:      1.487s
  Time for transfer relation:         1.184s
  Time for merge operator:            0.033s
  Time for stop operator:             0.080s
  Time for adding to reached set:     0.069s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   31
Avg. length of target path (in blocks):                 902 (count: 31, min: 20, max: 60, avg: 29.10)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.367s
  Counterexample analysis:                             0.224s (Max:     0.018s, Calls: 31)
    Refinement sat check:                              0.088s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.035s
  Precision update:                                    0.019s
  ARG update:                                          0.060s

Length of refined path (in blocks):                     635 (count: 31, min: 14, max: 41, avg: 20.48)
Number of affected states:                              440 (count: 31, min: 2, max: 40, avg: 14.19)
Length (states) of path with itp 'true':                164 (count: 31, min: 0, max: 16, avg: 5.29)
Length (states) of path with itp non-trivial itp:       440 (count: 31, min: 2, max: 40, avg: 14.19)
Length (states) of path with itp 'false':                31 (count: 31, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 31, min: 0, max: 1, avg: 0.13)
Equal non-trivial interpolants along paths:             405 (count: 31, min: 1, max: 39, avg: 13.06)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 1042
Max. size of reached set after ref.:  579
Avg. size of reached set before ref.: 505.87
Avg. size of reached set after ref.:  159.52

Total time for CEGAR algorithm:       3.493s
Time for refinements:                 0.466s
Average time for refinement:          0.015s
Max time for refinement:              0.057s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          107
  Total lines:            436
  Line coverage:          0.245
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     629
Number of CFA edges:             679
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             1258
  Number of reached locations:   146 (23%)
    Avg states per location:     8
    Max states per location:     49 (at node N0)
  Number of reached functions:   19 (50%)
  Number of partitions:          1241
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N623 (after line 930), Function test called from node N91, stack depth 3 [79b8ecb], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.378s
  Time for loading CPAs:          0.610s
  Time for loading parser:        0.460s
  Time for CFA construction:      1.076s
    Time for parsing file(s):     0.350s
    Time for AST to CFA:          0.281s
    Time for CFA sanity check:    0.072s
    Time for post-processing:     0.233s
      Time for var class.:        0.093s
Time for Analysis:                3.493s
CPU time for analysis:            3.490s
Time for analyzing result:        0.002s
Total time for CPAchecker:        5.875s
Total CPU time for CPAchecker:    5.870s
Time for statistics:              0.076s

Time for Garbage Collector:       0.106s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 56MB (    54 MiB) max;     34MB (    33 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8048MB (  7675 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
