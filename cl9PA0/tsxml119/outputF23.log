scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product32_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wnem3ztn/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 80: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 103: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 213: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 265: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 297: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 306: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 626: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 816: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 871: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 463: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            5224 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5155 (99%)
  Because of loop head:            42 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         27 (1%)
  Times precision was empty:       1980 (38%)
  Times precision was {false}:     88 (2%)
  Times result was cached:         2811 (54%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      345 (7%)
  Times result was 'false':        634 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         1139
  BDD entailment checks:           663
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          42
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         7485
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 17.29
Number of irrelevant predicates:          2920 (39%)
Number of preds handled by boolean abs:   681 (9%)
  Total number of models for allsat:      374
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  0.615s
  Time for path formula creation:        0.561s
Time for strengthen operator:            0.030s
Time for prec operator:                  1.622s
  Time for abstraction:                  1.495s (Max:     0.014s, Count: 5224)
    Boolean abstraction:                 0.345s
    Solving time:                        0.245s (Max:     0.012s)
    Model enumeration time:              0.022s
    Time for BDD construction:           0.056s (Max:     0.008s)
Time for merge operator:                 0.022s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     0.267s

Number of path formula cache hits:   17522 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.504s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               256
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         718 (count: 5281, min: 0, max: 231, avg: 0.14)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.096s
Automaton transfers with branching:                0
Automaton transfer successors:                        19232 (count: 19232, min: 1, max: 1, avg: 1.00) [1 x 19232]

CPA algorithm statistics
------------------------
Number of iterations:            14545
Max size of waitlist:            50
Average size of waitlist:        17
Number of computed successors:   16491
Max successors for one state:    2
Number of times merged:          238
Number of times stopped:         626
Number of times breaked:         27

Total time for CPA algorithm:         3.718s (Max:     0.445s)
  Time for choose from waitlist:      0.071s
  Time for precision adjustment:      1.886s
  Time for transfer relation:         1.363s
  Time for merge operator:            0.079s
  Time for stop operator:             0.069s
  Time for adding to reached set:     0.070s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   27
Avg. length of target path (in blocks):                 786 (count: 27, min: 20, max: 50, avg: 29.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.372s
  Counterexample analysis:                             0.217s (Max:     0.023s, Calls: 27)
    Refinement sat check:                              0.118s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.038s
  Precision update:                                    0.027s
  ARG update:                                          0.071s

Length of refined path (in blocks):                     569 (count: 27, min: 13, max: 42, avg: 21.07)
Number of affected states:                              462 (count: 27, min: 2, max: 41, avg: 17.11)
Length (states) of path with itp 'true':                 80 (count: 27, min: 0, max: 13, avg: 2.96)
Length (states) of path with itp non-trivial itp:       462 (count: 27, min: 2, max: 41, avg: 17.11)
Length (states) of path with itp 'false':                27 (count: 27, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 27, min: 0, max: 1, avg: 0.19)
Equal non-trivial interpolants along paths:             430 (count: 27, min: 1, max: 40, avg: 15.93)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                27
Number of successful refinements:     27
Number of failed refinements:         0
Max. size of reached set before ref.: 1082
Max. size of reached set after ref.:  722
Avg. size of reached set before ref.: 667.00
Avg. size of reached set after ref.:  144.52

Total time for CEGAR algorithm:       4.161s
Time for refinements:                 0.442s
Average time for refinement:          0.016s
Max time for refinement:              0.043s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          107
  Total lines:            436
  Line coverage:          0.245
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     629
Number of CFA edges:             679
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             1125
  Number of reached locations:   146 (23%)
    Avg states per location:     7
    Max states per location:     40 (at node N0)
  Number of reached functions:   19 (50%)
  Number of partitions:          1104
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N606 (before lines 908-957), Function test called from node N91, stack depth 3 [291028d7], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.223s
  Time for loading CPAs:          0.550s
  Time for loading parser:        0.544s
  Time for CFA construction:      0.987s
    Time for parsing file(s):     0.407s
    Time for AST to CFA:          0.202s
    Time for CFA sanity check:    0.053s
    Time for post-processing:     0.192s
      Time for var class.:        0.078s
Time for Analysis:                4.161s
CPU time for analysis:            4.170s
Time for analyzing result:        0.001s
Total time for CPAchecker:        6.386s
Total CPU time for CPAchecker:    6.390s
Time for statistics:              0.086s

Time for Garbage Collector:       0.106s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     37MB (    35 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     29MB (    27 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8047MB (  7675 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
