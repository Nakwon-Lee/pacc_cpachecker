scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product32_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gz_ge6gg/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 80: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 103: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 213: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 265: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 297: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 306: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 626: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 816: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 871: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 463: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7370 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7277 (99%)
  Because of loop head:            74 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         19 (0%)
  Times precision was empty:       3143 (43%)
  Times precision was {false}:     77 (1%)
  Times result was cached:         3973 (54%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      177 (2%)
  Times result was 'false':        560 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         1879
  BDD entailment checks:           1339
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          42
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         7511
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 29.57
Number of irrelevant predicates:          3906 (52%)
Number of preds handled by boolean abs:   243 (3%)
  Total number of models for allsat:      205
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.16

Time for post operator:                  0.701s
  Time for path formula creation:        0.641s
Time for strengthen operator:            0.071s
Time for prec operator:                  1.553s
  Time for abstraction:                  1.352s (Max:     0.014s, Count: 7370)
    Boolean abstraction:                 0.191s
    Solving time:                        0.130s (Max:     0.009s)
    Model enumeration time:              0.025s
    Time for BDD construction:           0.030s (Max:     0.010s)
Time for merge operator:                 0.017s
Time for coverage check:                 0.041s
  Time for BDD entailment checks:        0.040s
Total time for SMT solver (w/o itp):     0.155s

Number of path formula cache hits:   26232 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.564s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               216
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         395 (count: 5967, min: 0, max: 95, avg: 0.07)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.144s
Automaton transfers with branching:                0
Automaton transfer successors:                        26840 (count: 26840, min: 1, max: 1, avg: 1.00) [1 x 26840]

CPA algorithm statistics
------------------------
Number of iterations:            20181
Max size of waitlist:            103
Average size of waitlist:        40
Number of computed successors:   23112
Max successors for one state:    2
Number of times merged:          270
Number of times stopped:         1129
Number of times breaked:         19

Total time for CPA algorithm:         3.917s (Max:     0.516s)
  Time for choose from waitlist:      0.045s
  Time for precision adjustment:      1.916s
  Time for transfer relation:         1.412s
  Time for merge operator:            0.063s
  Time for stop operator:             0.114s
  Time for adding to reached set:     0.131s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   19
Avg. length of target path (in blocks):                 486 (count: 19, min: 19, max: 36, avg: 25.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.340s
  Counterexample analysis:                             0.172s (Max:     0.019s, Calls: 19)
    Refinement sat check:                              0.075s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.025s
  Precision update:                                    0.014s
  ARG update:                                          0.113s

Length of refined path (in blocks):                     347 (count: 19, min: 13, max: 28, avg: 18.26)
Number of affected states:                              328 (count: 19, min: 12, max: 27, avg: 17.26)
Length (states) of path with itp 'true':                  0 (count: 19, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       328 (count: 19, min: 12, max: 27, avg: 17.26)
Length (states) of path with itp 'false':                19 (count: 19, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 19, min: 0, max: 1, avg: 0.21)
Equal non-trivial interpolants along paths:             305 (count: 19, min: 11, max: 26, avg: 16.05)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                19
Number of successful refinements:     19
Number of failed refinements:         0
Max. size of reached set before ref.: 1598
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1071.95
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       4.320s
Time for refinements:                 0.402s
Average time for refinement:          0.021s
Max time for refinement:              0.055s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          107
  Total lines:            436
  Line coverage:          0.245
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     629
Number of CFA edges:             679
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             1114
  Number of reached locations:   146 (23%)
    Avg states per location:     7
    Max states per location:     44 (at node N0)
  Number of reached functions:   19 (50%)
  Number of partitions:          1109
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N623 (after line 930), Function test called from node N91, stack depth 3 [42f9b425], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.176s
  Time for loading CPAs:          0.554s
  Time for loading parser:        0.486s
  Time for CFA construction:      1.026s
    Time for parsing file(s):     0.344s
    Time for AST to CFA:          0.262s
    Time for CFA sanity check:    0.067s
    Time for post-processing:     0.247s
      Time for var class.:        0.128s
Time for Analysis:                4.321s
CPU time for analysis:            4.320s
Time for analyzing result:        0.001s
Total time for CPAchecker:        6.500s
Total CPU time for CPAchecker:    6.490s
Time for statistics:              0.090s

Time for Garbage Collector:       0.120s (in 12 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     37MB (    35 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     29MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   7991MB (  7621 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
