scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product32_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_y2fek_qy/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 80: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 103: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 213: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 265: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 297: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 306: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 626: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 816: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 871: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 463: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4373 (29% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4252 (97%)
  Because of loop head:            88 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         33 (1%)
  Times precision was empty:       1050 (24%)
  Times precision was {false}:     96 (2%)
  Times result was cached:         2991 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      236 (5%)
  Times result was 'false':        660 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         812
  BDD entailment checks:           544
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          42
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         7666
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 23.09
Number of irrelevant predicates:          2356 (31%)
Number of preds handled by boolean abs:   458 (6%)
  Total number of models for allsat:      256
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  0.438s
  Time for path formula creation:        0.417s
Time for strengthen operator:            0.043s
Time for prec operator:                  1.446s
  Time for abstraction:                  1.303s (Max:     0.016s, Count: 4373)
    Boolean abstraction:                 0.196s
    Solving time:                        0.116s (Max:     0.015s)
    Model enumeration time:              0.021s
    Time for BDD construction:           0.036s (Max:     0.011s)
Time for merge operator:                 0.007s
Time for coverage check:                 0.027s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):     0.137s

Number of path formula cache hits:   14558 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.380s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               249
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         541 (count: 3649, min: 0, max: 168, avg: 0.15)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.106s
Automaton transfers with branching:                0
Automaton transfer successors:                        15151 (count: 15151, min: 1, max: 1, avg: 1.00) [1 x 15151]

CPA algorithm statistics
------------------------
Number of iterations:            11973
Max size of waitlist:            26
Average size of waitlist:        8
Number of computed successors:   13432
Max successors for one state:    2
Number of times merged:          134
Number of times stopped:         453
Number of times breaked:         33

Total time for CPA algorithm:         3.146s (Max:     0.244s)
  Time for choose from waitlist:      0.062s
  Time for precision adjustment:      1.698s
  Time for transfer relation:         1.001s
  Time for merge operator:            0.046s
  Time for stop operator:             0.097s
  Time for adding to reached set:     0.053s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   33
Avg. length of target path (in blocks):                 902 (count: 33, min: 19, max: 52, avg: 27.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.420s
  Counterexample analysis:                             0.251s (Max:     0.020s, Calls: 33)
    Refinement sat check:                              0.122s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.026s
  Precision update:                                    0.042s
  ARG update:                                          0.052s

Length of refined path (in blocks):                     678 (count: 33, min: 13, max: 49, avg: 20.55)
Number of affected states:                              548 (count: 33, min: 2, max: 48, avg: 16.61)
Length (states) of path with itp 'true':                 97 (count: 33, min: 0, max: 13, avg: 2.94)
Length (states) of path with itp non-trivial itp:       548 (count: 33, min: 2, max: 48, avg: 16.61)
Length (states) of path with itp 'false':                33 (count: 33, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           8 (count: 33, min: 0, max: 1, avg: 0.24)
Equal non-trivial interpolants along paths:             507 (count: 33, min: 1, max: 46, avg: 15.36)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                33
Number of successful refinements:     33
Number of failed refinements:         0
Max. size of reached set before ref.: 1065
Max. size of reached set after ref.:  583
Avg. size of reached set before ref.: 407.09
Avg. size of reached set after ref.:  68.12

Total time for CEGAR algorithm:       3.633s
Time for refinements:                 0.477s
Average time for refinement:          0.014s
Max time for refinement:              0.041s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          107
  Total lines:            436
  Line coverage:          0.245
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     629
Number of CFA edges:             679
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             1134
  Number of reached locations:   146 (23%)
    Avg states per location:     7
    Max states per location:     38 (at node N0)
  Number of reached functions:   19 (50%)
  Number of partitions:          1115
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N623 (after line 930), Function test called from node N91, stack depth 3 [71734463], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.020s
  Time for loading CPAs:          0.594s
  Time for loading parser:        0.411s
  Time for CFA construction:      0.909s
    Time for parsing file(s):     0.308s
    Time for AST to CFA:          0.252s
    Time for CFA sanity check:    0.065s
    Time for post-processing:     0.175s
      Time for var class.:        0.074s
Time for Analysis:                3.633s
CPU time for analysis:            3.640s
Time for analyzing result:        0.003s
Total time for CPAchecker:        5.655s
Total CPU time for CPAchecker:    5.650s
Time for statistics:              0.087s

Time for Garbage Collector:       0.091s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     35MB (    34 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     29MB (    27 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8053MB (  7680 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
