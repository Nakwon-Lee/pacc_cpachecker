scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product24_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gt6a_wj1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 195: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 227: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 236: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 404: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 459: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 871: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 917: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 708: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4160 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4087 (98%)
  Because of loop head:            48 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25 (1%)
  Times precision was empty:       667 (16%)
  Times precision was {false}:     108 (3%)
  Times result was cached:         3076 (74%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      309 (7%)
  Times result was 'false':        398 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         1174
  BDD entailment checks:           700
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          5
Number of abstraction locations:          47
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         7293
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 17.49
Number of irrelevant predicates:          2426 (33%)
Number of preds handled by boolean abs:   570 (8%)
  Total number of models for allsat:      337
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  0.670s
  Time for path formula creation:        0.637s
Time for strengthen operator:            0.050s
Time for prec operator:                  1.574s
  Time for abstraction:                  1.433s (Max:     0.021s, Count: 4160)
    Boolean abstraction:                 0.237s
    Solving time:                        0.213s (Max:     0.020s)
    Model enumeration time:              0.009s
    Time for BDD construction:           0.041s (Max:     0.012s)
Time for merge operator:                 0.021s
Time for coverage check:                 0.014s
  Time for BDD entailment checks:        0.013s
Total time for SMT solver (w/o itp):     0.222s

Number of path formula cache hits:   12312 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.564s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               240
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         635 (count: 3855, min: 0, max: 195, avg: 0.16)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.159s
Automaton transfers with branching:                0
Automaton transfer successors:                        14943 (count: 14943, min: 1, max: 1, avg: 1.00) [1 x 14943]

CPA algorithm statistics
------------------------
Number of iterations:            11676
Max size of waitlist:            19
Average size of waitlist:        7
Number of computed successors:   12972
Max successors for one state:    2
Number of times merged:          237
Number of times stopped:         723
Number of times breaked:         25

Total time for CPA algorithm:         3.536s (Max:     0.308s)
  Time for choose from waitlist:      0.043s
  Time for precision adjustment:      1.763s
  Time for transfer relation:         1.343s
  Time for merge operator:            0.069s
  Time for stop operator:             0.086s
  Time for adding to reached set:     0.080s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   25
Avg. length of target path (in blocks):                1082 (count: 25, min: 26, max: 74, avg: 43.28)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.322s
  Counterexample analysis:                             0.219s (Max:     0.015s, Calls: 25)
    Refinement sat check:                              0.076s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.023s
  ARG update:                                          0.035s

Length of refined path (in blocks):                     776 (count: 25, min: 17, max: 55, avg: 31.04)
Number of affected states:                              595 (count: 25, min: 6, max: 54, avg: 23.80)
Length (states) of path with itp 'true':                156 (count: 25, min: 0, max: 19, avg: 6.24)
Length (states) of path with itp non-trivial itp:       595 (count: 25, min: 6, max: 54, avg: 23.80)
Length (states) of path with itp 'false':                25 (count: 25, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 25, min: 0, max: 1, avg: 0.04)
Equal non-trivial interpolants along paths:             569 (count: 25, min: 5, max: 53, avg: 22.76)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 1008
Max. size of reached set after ref.:  700
Avg. size of reached set before ref.: 680.24
Avg. size of reached set after ref.:  230.64

Total time for CEGAR algorithm:       3.948s
Time for refinements:                 0.398s
Average time for refinement:          0.015s
Max time for refinement:              0.038s

Code Coverage
-----------------------------
  Function coverage:      0.513
  Visited lines:          99
  Total lines:            439
  Line coverage:          0.226
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     635
Number of CFA edges:             685
Number of relevant variables:    115
Number of functions:             39
Number of loops:                 5
Size of reached set:             612
  Number of reached locations:   137 (22%)
    Avg states per location:     4
    Max states per location:     20 (at node N620)
  Number of reached functions:   20 (51%)
  Number of partitions:          607
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N277 (before lines 496-545), Function test called from node N47, stack depth 3 [624d778e], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.103s
  Time for loading CPAs:          0.620s
  Time for loading parser:        0.467s
  Time for CFA construction:      0.903s
    Time for parsing file(s):     0.301s
    Time for AST to CFA:          0.238s
    Time for CFA sanity check:    0.061s
    Time for post-processing:     0.196s
      Time for var class.:        0.080s
Time for Analysis:                3.948s
CPU time for analysis:            3.960s
Time for analyzing result:        0.001s
Total time for CPAchecker:        6.054s
Total CPU time for CPAchecker:    6.050s
Time for statistics:              0.074s

Time for Garbage Collector:       0.100s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     36MB (    35 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     29MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   7990MB (  7620 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
