scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product24_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8r_uwcty/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 195: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 227: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 236: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 404: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 459: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 871: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 917: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 708: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            8392 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8251 (98%)
  Because of loop head:            110 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         31 (0%)
  Times precision was empty:       871 (10%)
  Times precision was {false}:     106 (1%)
  Times result was cached:         7153 (85%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      262 (3%)
  Times result was 'false':        875 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         2643
  BDD entailment checks:           1551
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          5
Number of abstraction locations:          47
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         14111
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 38.35
Number of irrelevant predicates:          5316 (38%)
Number of preds handled by boolean abs:   385 (3%)
  Total number of models for allsat:      286
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  0.782s
  Time for path formula creation:        0.734s
Time for strengthen operator:            0.091s
Time for prec operator:                  1.730s
  Time for abstraction:                  1.588s (Max:     0.017s, Count: 8392)
    Boolean abstraction:                 0.234s
    Solving time:                        0.155s (Max:     0.016s)
    Model enumeration time:              0.024s
    Time for BDD construction:           0.027s (Max:     0.006s)
Time for merge operator:                 0.046s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.012s
Total time for SMT solver (w/o itp):     0.179s

Number of path formula cache hits:   23969 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.677s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               214
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         563 (count: 4594, min: 0, max: 192, avg: 0.12)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.232s
Automaton transfers with branching:                0
Automaton transfer successors:                        30247 (count: 30247, min: 1, max: 1, avg: 1.00) [1 x 30247]

CPA algorithm statistics
------------------------
Number of iterations:            23607
Max size of waitlist:            39
Average size of waitlist:        13
Number of computed successors:   26531
Max successors for one state:    2
Number of times merged:          546
Number of times stopped:         1685
Number of times breaked:         31

Total time for CPA algorithm:         4.575s (Max:     0.332s)
  Time for choose from waitlist:      0.041s
  Time for precision adjustment:      2.162s
  Time for transfer relation:         1.818s
  Time for merge operator:            0.130s
  Time for stop operator:             0.101s
  Time for adding to reached set:     0.102s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   31
Avg. length of target path (in blocks):                1756 (count: 31, min: 29, max: 71, avg: 56.65)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.505s
  Counterexample analysis:                             0.253s (Max:     0.021s, Calls: 31)
    Refinement sat check:                              0.128s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.046s
  Precision update:                                    0.039s
  ARG update:                                          0.123s

Length of refined path (in blocks):                     934 (count: 31, min: 15, max: 47, avg: 30.13)
Number of affected states:                              643 (count: 31, min: 13, max: 46, avg: 20.74)
Length (states) of path with itp 'true':                260 (count: 31, min: 0, max: 13, avg: 8.39)
Length (states) of path with itp non-trivial itp:       643 (count: 31, min: 13, max: 46, avg: 20.74)
Length (states) of path with itp 'false':                31 (count: 31, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 31, min: 0, max: 1, avg: 0.03)
Equal non-trivial interpolants along paths:             611 (count: 31, min: 12, max: 45, avg: 19.71)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 1485
Max. size of reached set after ref.:  424
Avg. size of reached set before ref.: 935.35
Avg. size of reached set after ref.:  200.03

Total time for CEGAR algorithm:       5.155s
Time for refinements:                 0.574s
Average time for refinement:          0.018s
Max time for refinement:              0.067s

Code Coverage
-----------------------------
  Function coverage:      0.538
  Visited lines:          115
  Total lines:            439
  Line coverage:          0.262
  Visited conditions:     34
  Total conditions:       72
  Condition coverage:     0.472

CPAchecker general statistics
-----------------------------
Number of program locations:     635
Number of CFA edges:             685
Number of relevant variables:    115
Number of functions:             39
Number of loops:                 5
Size of reached set:             1177
  Number of reached locations:   158 (25%)
    Avg states per location:     7
    Max states per location:     42 (at node N620)
  Number of reached functions:   21 (54%)
  Number of partitions:          1174
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N277 (before lines 496-545), Function test called from node N47, stack depth 3 [9124278], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.275s
  Time for loading CPAs:          0.603s
  Time for loading parser:        0.540s
  Time for CFA construction:      1.030s
    Time for parsing file(s):     0.334s
    Time for AST to CFA:          0.240s
    Time for CFA sanity check:    0.092s
    Time for post-processing:     0.217s
      Time for var class.:        0.089s
Time for Analysis:                5.155s
CPU time for analysis:            5.160s
Time for analyzing result:        0.001s
Total time for CPAchecker:        7.433s
Total CPU time for CPAchecker:    7.430s
Time for statistics:              0.074s

Time for Garbage Collector:       0.148s (in 15 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     37MB (    35 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    28 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8052MB (  7679 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
