scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product24_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ozlbq_4s/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 195: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 227: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 236: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 404: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 459: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 871: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 917: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 708: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            5990 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5855 (98%)
  Because of loop head:            106 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29 (0%)
  Times precision was empty:       393 (7%)
  Times precision was {false}:     122 (2%)
  Times result was cached:         4958 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      517 (9%)
  Times result was 'false':        716 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         2051
  BDD entailment checks:           1321
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          5
Number of abstraction locations:          47
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         12034
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 18.83
Number of irrelevant predicates:          3233 (27%)
Number of preds handled by boolean abs:   943 (8%)
  Total number of models for allsat:      549
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.06

Time for post operator:                  0.720s
  Time for path formula creation:        0.673s
Time for strengthen operator:            0.036s
Time for prec operator:                  2.288s
  Time for abstraction:                  2.120s (Max:     0.017s, Count: 5990)
    Boolean abstraction:                 0.378s
    Solving time:                        0.246s (Max:     0.013s)
    Model enumeration time:              0.024s
    Time for BDD construction:           0.059s (Max:     0.013s)
Time for merge operator:                 0.028s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     0.270s

Number of path formula cache hits:   16512 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.591s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               229
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1088 (count: 5531, min: 0, max: 298, avg: 0.20)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.169s
Automaton transfers with branching:                0
Automaton transfer successors:                        21577 (count: 21577, min: 1, max: 1, avg: 1.00) [1 x 21577]

CPA algorithm statistics
------------------------
Number of iterations:            16718
Max size of waitlist:            29
Average size of waitlist:        11
Number of computed successors:   18794
Max successors for one state:    2
Number of times merged:          365
Number of times stopped:         1012
Number of times breaked:         29

Total time for CPA algorithm:         4.596s (Max:     0.337s)
  Time for choose from waitlist:      0.020s
  Time for precision adjustment:      2.616s
  Time for transfer relation:         1.474s
  Time for merge operator:            0.096s
  Time for stop operator:             0.085s
  Time for adding to reached set:     0.066s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   29
Avg. length of target path (in blocks):                1665 (count: 29, min: 25, max: 76, avg: 57.41)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.439s
  Counterexample analysis:                             0.301s (Max:     0.020s, Calls: 29)
    Refinement sat check:                              0.168s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.026s
  Precision update:                                    0.015s
  ARG update:                                          0.074s

Length of refined path (in blocks):                     958 (count: 29, min: 19, max: 42, avg: 33.03)
Number of affected states:                              685 (count: 29, min: 13, max: 41, avg: 23.62)
Length (states) of path with itp 'true':                244 (count: 29, min: 0, max: 18, avg: 8.41)
Length (states) of path with itp non-trivial itp:       685 (count: 29, min: 13, max: 41, avg: 23.62)
Length (states) of path with itp 'false':                29 (count: 29, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 29, min: 0, max: 1, avg: 0.03)
Equal non-trivial interpolants along paths:             655 (count: 29, min: 12, max: 40, avg: 22.59)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 1233
Max. size of reached set after ref.:  607
Avg. size of reached set before ref.: 726.10
Avg. size of reached set after ref.:  171.55

Total time for CEGAR algorithm:       5.116s
Time for refinements:                 0.517s
Average time for refinement:          0.017s
Max time for refinement:              0.043s

Code Coverage
-----------------------------
  Function coverage:      0.538
  Visited lines:          115
  Total lines:            439
  Line coverage:          0.262
  Visited conditions:     34
  Total conditions:       72
  Condition coverage:     0.472

CPAchecker general statistics
-----------------------------
Number of program locations:     635
Number of CFA edges:             685
Number of relevant variables:    115
Number of functions:             39
Number of loops:                 5
Size of reached set:             985
  Number of reached locations:   158 (25%)
    Avg states per location:     6
    Max states per location:     36 (at node N620)
  Number of reached functions:   21 (54%)
  Number of partitions:          975
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N277 (before lines 496-545), Function test called from node N47, stack depth 3 [139b3a29], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.161s
  Time for loading CPAs:          0.546s
  Time for loading parser:        0.500s
  Time for CFA construction:      0.990s
    Time for parsing file(s):     0.325s
    Time for AST to CFA:          0.247s
    Time for CFA sanity check:    0.077s
    Time for post-processing:     0.227s
      Time for var class.:        0.100s
Time for Analysis:                5.117s
CPU time for analysis:            5.110s
Time for analyzing result:        0.001s
Total time for CPAchecker:        7.283s
Total CPU time for CPAchecker:    7.280s
Time for statistics:              0.077s

Time for Garbage Collector:       0.115s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     37MB (    35 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     30MB (    28 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7994MB (  7624 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
