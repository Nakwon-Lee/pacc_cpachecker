scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product18_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cab4nudq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 135: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 144: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 199: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 378: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 413: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 462: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 494: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 823: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 869: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 660: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7574 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7422 (98%)
  Because of loop head:            111 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         41 (1%)
  Times precision was empty:       1796 (24%)
  Times precision was {false}:     142 (2%)
  Times result was cached:         4974 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      662 (9%)
  Times result was 'false':        601 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         3264
  BDD entailment checks:           1802
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          8
Number of abstraction locations:          38
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         20286
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 25.23
Number of irrelevant predicates:          9224 (45%)
Number of preds handled by boolean abs:   1851 (9%)
  Total number of models for allsat:      711
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  0.800s
  Time for path formula creation:        0.757s
Time for strengthen operator:            0.071s
Time for prec operator:                  3.109s
  Time for abstraction:                  2.914s (Max:     0.019s, Count: 7574)
    Boolean abstraction:                 0.610s
    Solving time:                        0.418s (Max:     0.013s)
    Model enumeration time:              0.054s
    Time for BDD construction:           0.105s (Max:     0.013s)
Time for merge operator:                 0.042s
Time for coverage check:                 0.006s
  Time for BDD entailment checks:        0.006s
Total time for SMT solver (w/o itp):     0.472s

Number of path formula cache hits:   26350 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.697s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               372
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1527 (count: 8460, min: 0, max: 244, avg: 0.18)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.213s
Automaton transfers with branching:                0
Automaton transfer successors:                        28651 (count: 28651, min: 1, max: 1, avg: 1.00) [1 x 28651]

CPA algorithm statistics
------------------------
Number of iterations:            23162
Max size of waitlist:            34
Average size of waitlist:        12
Number of computed successors:   25818
Max successors for one state:    2
Number of times merged:          731
Number of times stopped:         1535
Number of times breaked:         41

Total time for CPA algorithm:         5.896s (Max:     0.502s)
  Time for choose from waitlist:      0.070s
  Time for precision adjustment:      3.453s
  Time for transfer relation:         1.718s
  Time for merge operator:            0.118s
  Time for stop operator:             0.095s
  Time for adding to reached set:     0.129s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   41
Avg. length of target path (in blocks):                1355 (count: 41, min: 22, max: 61, avg: 33.05)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.542s
  Counterexample analysis:                             0.285s (Max:     0.018s, Calls: 41)
    Refinement sat check:                              0.118s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.031s
  Precision update:                                    0.048s
  ARG update:                                          0.136s

Length of refined path (in blocks):                    1068 (count: 41, min: 16, max: 47, avg: 26.05)
Number of affected states:                              666 (count: 41, min: 2, max: 44, avg: 16.24)
Length (states) of path with itp 'true':                361 (count: 41, min: 0, max: 33, avg: 8.80)
Length (states) of path with itp non-trivial itp:       666 (count: 41, min: 2, max: 44, avg: 16.24)
Length (states) of path with itp 'false':                41 (count: 41, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 41, min: 0, max: 1, avg: 0.12)
Equal non-trivial interpolants along paths:             620 (count: 41, min: 1, max: 42, avg: 15.12)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                41
Number of successful refinements:     41
Number of failed refinements:         0
Max. size of reached set before ref.: 1151
Max. size of reached set after ref.:  467
Avg. size of reached set before ref.: 741.41
Avg. size of reached set after ref.:  178.71

Total time for CEGAR algorithm:       6.549s
Time for refinements:                 0.649s
Average time for refinement:          0.015s
Max time for refinement:              0.042s

Code Coverage
-----------------------------
  Function coverage:      0.472
  Visited lines:          91
  Total lines:            426
  Line coverage:          0.214
  Visited conditions:     28
  Total conditions:       66
  Condition coverage:     0.424

CPAchecker general statistics
-----------------------------
Number of program locations:     607
Number of CFA edges:             649
Number of relevant variables:    110
Number of functions:             36
Number of loops:                 5
Size of reached set:             612
  Number of reached locations:   120 (20%)
    Avg states per location:     5
    Max states per location:     18 (at node N0)
  Number of reached functions:   17 (47%)
  Number of partitions:          597
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N11 (before line 75), Function timeShift called from node N123, stack depth 4 [3177190a], stack [main, runTest, test, timeShift]])
  Number of target states:       0

Time for analysis setup:          2.029s
  Time for loading CPAs:          0.474s
  Time for loading parser:        0.481s
  Time for CFA construction:      0.943s
    Time for parsing file(s):     0.306s
    Time for AST to CFA:          0.260s
    Time for CFA sanity check:    0.059s
    Time for post-processing:     0.196s
      Time for var class.:        0.084s
Time for Analysis:                6.549s
CPU time for analysis:            6.550s
Time for analyzing result:        0.001s
Total time for CPAchecker:        8.581s
Total CPU time for CPAchecker:    8.570s
Time for statistics:              0.081s

Time for Garbage Collector:       0.128s (in 15 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     38MB (    36 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     31MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8060MB (  7687 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
