scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product18_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_z_nqlmr6/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 135: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 144: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 199: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 378: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 413: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 462: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 494: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 823: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 869: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 660: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4414 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4319 (98%)
  Because of loop head:            69 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         26 (1%)
  Times precision was empty:       1065 (24%)
  Times precision was {false}:     90 (2%)
  Times result was cached:         2938 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      321 (7%)
  Times result was 'false':        345 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         1604
  BDD entailment checks:           766
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          38
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         9142
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 22.24
Number of irrelevant predicates:          4195 (46%)
Number of preds handled by boolean abs:   684 (7%)
  Total number of models for allsat:      351
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  0.475s
  Time for path formula creation:        0.421s
Time for strengthen operator:            0.039s
Time for prec operator:                  1.462s
  Time for abstraction:                  1.334s (Max:     0.017s, Count: 4414)
    Boolean abstraction:                 0.272s
    Solving time:                        0.192s (Max:     0.013s)
    Model enumeration time:              0.015s
    Time for BDD construction:           0.041s (Max:     0.009s)
Time for merge operator:                 0.045s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.010s
Total time for SMT solver (w/o itp):     0.207s

Number of path formula cache hits:   15167 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.397s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               264
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         731 (count: 4302, min: 0, max: 167, avg: 0.17)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.132s
Automaton transfers with branching:                0
Automaton transfer successors:                        16925 (count: 16925, min: 1, max: 1, avg: 1.00) [1 x 16925]

CPA algorithm statistics
------------------------
Number of iterations:            13570
Max size of waitlist:            24
Average size of waitlist:        11
Number of computed successors:   15139
Max successors for one state:    2
Number of times merged:          419
Number of times stopped:         894
Number of times breaked:         26

Total time for CPA algorithm:         3.137s (Max:     0.436s)
  Time for choose from waitlist:      0.021s
  Time for precision adjustment:      1.667s
  Time for transfer relation:         1.098s
  Time for merge operator:            0.076s
  Time for stop operator:             0.061s
  Time for adding to reached set:     0.046s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   26
Avg. length of target path (in blocks):                1030 (count: 26, min: 26, max: 61, avg: 39.62)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.317s
  Counterexample analysis:                             0.196s (Max:     0.017s, Calls: 26)
    Refinement sat check:                              0.081s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.026s
  Precision update:                                    0.018s
  ARG update:                                          0.052s

Length of refined path (in blocks):                     733 (count: 26, min: 16, max: 47, avg: 28.19)
Number of affected states:                              524 (count: 26, min: 11, max: 44, avg: 20.15)
Length (states) of path with itp 'true':                183 (count: 26, min: 0, max: 33, avg: 7.04)
Length (states) of path with itp non-trivial itp:       524 (count: 26, min: 11, max: 44, avg: 20.15)
Length (states) of path with itp 'false':                26 (count: 26, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 26, min: 0, max: 1, avg: 0.19)
Equal non-trivial interpolants along paths:             493 (count: 26, min: 10, max: 42, avg: 18.96)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                26
Number of successful refinements:     26
Number of failed refinements:         0
Max. size of reached set before ref.: 994
Max. size of reached set after ref.:  463
Avg. size of reached set before ref.: 638.54
Avg. size of reached set after ref.:  125.38

Total time for CEGAR algorithm:       3.518s
Time for refinements:                 0.371s
Average time for refinement:          0.014s
Max time for refinement:              0.045s

Code Coverage
-----------------------------
  Function coverage:      0.472
  Visited lines:          91
  Total lines:            426
  Line coverage:          0.214
  Visited conditions:     28
  Total conditions:       66
  Condition coverage:     0.424

CPAchecker general statistics
-----------------------------
Number of program locations:     607
Number of CFA edges:             649
Number of relevant variables:    110
Number of functions:             36
Number of loops:                 5
Size of reached set:             559
  Number of reached locations:   120 (20%)
    Avg states per location:     4
    Max states per location:     20 (at node N589)
  Number of reached functions:   17 (47%)
  Number of partitions:          553
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N104 (before lines 224-271), Function test called from node N183, stack depth 3 [782dc5], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.953s
  Time for loading CPAs:          0.540s
  Time for loading parser:        0.445s
  Time for CFA construction:      0.871s
    Time for parsing file(s):     0.302s
    Time for AST to CFA:          0.198s
    Time for CFA sanity check:    0.053s
    Time for post-processing:     0.202s
      Time for var class.:        0.094s
Time for Analysis:                3.519s
CPU time for analysis:            3.530s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.475s
Total CPU time for CPAchecker:    5.480s
Time for statistics:              0.061s

Time for Garbage Collector:       0.090s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     37MB (    35 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     29MB (    27 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   7988MB (  7618 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
