scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product28_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nt16q28p/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 411: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 466: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 691: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 755: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 819: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 938: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 202: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3263 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3168 (97%)
  Because of loop head:            65 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         30 (1%)
  Times precision was empty:       526 (16%)
  Times precision was {false}:     79 (2%)
  Times result was cached:         2318 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      340 (10%)
  Times result was 'false':        447 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         766
  BDD entailment checks:           570
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          39
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         7714
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 18.41
Number of irrelevant predicates:          2402 (31%)
Number of preds handled by boolean abs:   776 (10%)
  Total number of models for allsat:      369
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  0.496s
  Time for path formula creation:        0.482s
Time for strengthen operator:            0.039s
Time for prec operator:                  1.476s
  Time for abstraction:                  1.401s (Max:     0.016s, Count: 3263)
    Boolean abstraction:                 0.297s
    Solving time:                        0.160s (Max:     0.012s)
    Model enumeration time:              0.029s
    Time for BDD construction:           0.044s (Max:     0.010s)
Time for merge operator:                 0.017s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     0.189s

Number of path formula cache hits:   8894 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.432s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               284
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         683 (count: 3703, min: 0, max: 227, avg: 0.18)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.095s
Automaton transfers with branching:                0
Automaton transfer successors:                        11685 (count: 11685, min: 1, max: 1, avg: 1.00) [1 x 11685]

CPA algorithm statistics
------------------------
Number of iterations:            9148
Max size of waitlist:            15
Average size of waitlist:        6
Number of computed successors:   10239
Max successors for one state:    2
Number of times merged:          98
Number of times stopped:         418
Number of times breaked:         30

Total time for CPA algorithm:         2.981s (Max:     0.272s)
  Time for choose from waitlist:      0.025s
  Time for precision adjustment:      1.627s
  Time for transfer relation:         1.004s
  Time for merge operator:            0.060s
  Time for stop operator:             0.073s
  Time for adding to reached set:     0.074s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   30
Avg. length of target path (in blocks):                 910 (count: 30, min: 20, max: 46, avg: 30.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.320s
  Counterexample analysis:                             0.154s (Max:     0.018s, Calls: 30)
    Refinement sat check:                              0.077s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.039s
  Precision update:                                    0.038s
  ARG update:                                          0.043s

Length of refined path (in blocks):                     672 (count: 30, min: 13, max: 43, avg: 22.40)
Number of affected states:                              516 (count: 30, min: 9, max: 42, avg: 17.20)
Length (states) of path with itp 'true':                126 (count: 30, min: 0, max: 13, avg: 4.20)
Length (states) of path with itp non-trivial itp:       516 (count: 30, min: 9, max: 42, avg: 17.20)
Length (states) of path with itp 'false':                30 (count: 30, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 30, min: 0, max: 1, avg: 0.17)
Equal non-trivial interpolants along paths:             481 (count: 30, min: 8, max: 40, avg: 16.03)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                30
Number of successful refinements:     30
Number of failed refinements:         0
Max. size of reached set before ref.: 856
Max. size of reached set after ref.:  574
Avg. size of reached set before ref.: 420.40
Avg. size of reached set after ref.:  134.87

Total time for CEGAR algorithm:       3.362s
Time for refinements:                 0.378s
Average time for refinement:          0.012s
Max time for refinement:              0.036s

Code Coverage
-----------------------------
  Function coverage:      0.459
  Visited lines:          87
  Total lines:            428
  Line coverage:          0.203
  Visited conditions:     28
  Total conditions:       68
  Condition coverage:     0.412

CPAchecker general statistics
-----------------------------
Number of program locations:     614
Number of CFA edges:             659
Number of relevant variables:    112
Number of functions:             37
Number of loops:                 5
Size of reached set:             809
  Number of reached locations:   118 (19%)
    Avg states per location:     6
    Max states per location:     28 (at node N520)
  Number of reached functions:   17 (46%)
  Number of partitions:          795
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N373 (before lines 525-574), Function test called from node N605, stack depth 3 [17134190], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.083s
  Time for loading CPAs:          0.551s
  Time for loading parser:        0.529s
  Time for CFA construction:      0.903s
    Time for parsing file(s):     0.332s
    Time for AST to CFA:          0.225s
    Time for CFA sanity check:    0.064s
    Time for post-processing:     0.180s
      Time for var class.:        0.061s
Time for Analysis:                3.362s
CPU time for analysis:            3.370s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.448s
Total CPU time for CPAchecker:    5.450s
Time for statistics:              0.048s

Time for Garbage Collector:       0.089s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     36MB (    34 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8045MB (  7672 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
