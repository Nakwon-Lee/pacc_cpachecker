scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product28_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_t6t8bk58/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 411: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 466: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 691: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 755: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 819: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 938: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 202: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7349 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7236 (98%)
  Because of loop head:            85 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         28 (0%)
  Times precision was empty:       3126 (43%)
  Times precision was {false}:     81 (1%)
  Times result was cached:         3893 (53%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      249 (3%)
  Times result was 'false':        475 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         1978
  BDD entailment checks:           1230
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          39
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         7968
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 24.15
Number of irrelevant predicates:          3932 (49%)
Number of preds handled by boolean abs:   392 (5%)
  Total number of models for allsat:      279
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.12

Time for post operator:                  0.558s
  Time for path formula creation:        0.516s
Time for strengthen operator:            0.078s
Time for prec operator:                  1.501s
  Time for abstraction:                  1.277s (Max:     0.013s, Count: 7349)
    Boolean abstraction:                 0.253s
    Solving time:                        0.148s (Max:     0.013s)
    Model enumeration time:              0.021s
    Time for BDD construction:           0.054s (Max:     0.010s)
Time for merge operator:                 0.022s
Time for coverage check:                 0.016s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):     0.169s

Number of path formula cache hits:   27830 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.428s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               228
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         350 (count: 6348, min: 0, max: 93, avg: 0.06)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.147s
Automaton transfers with branching:                0
Automaton transfer successors:                        27490 (count: 27490, min: 1, max: 1, avg: 1.00) [1 x 27490]

CPA algorithm statistics
------------------------
Number of iterations:            21148
Max size of waitlist:            51
Average size of waitlist:        22
Number of computed successors:   23462
Max successors for one state:    2
Number of times merged:          374
Number of times stopped:         1274
Number of times breaked:         28

Total time for CPA algorithm:         3.912s (Max:     0.520s)
  Time for choose from waitlist:      0.057s
  Time for precision adjustment:      1.782s
  Time for transfer relation:         1.535s
  Time for merge operator:            0.067s
  Time for stop operator:             0.110s
  Time for adding to reached set:     0.138s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   28
Avg. length of target path (in blocks):                 711 (count: 28, min: 19, max: 45, avg: 25.39)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.413s
  Counterexample analysis:                             0.216s (Max:     0.017s, Calls: 28)
    Refinement sat check:                              0.077s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.050s
  Precision update:                                    0.010s
  ARG update:                                          0.115s

Length of refined path (in blocks):                     509 (count: 28, min: 13, max: 36, avg: 18.18)
Number of affected states:                              385 (count: 28, min: 2, max: 35, avg: 13.75)
Length (states) of path with itp 'true':                 96 (count: 28, min: 0, max: 13, avg: 3.43)
Length (states) of path with itp non-trivial itp:       385 (count: 28, min: 2, max: 35, avg: 13.75)
Length (states) of path with itp 'false':                28 (count: 28, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           6 (count: 28, min: 0, max: 1, avg: 0.21)
Equal non-trivial interpolants along paths:             351 (count: 28, min: 1, max: 34, avg: 12.54)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 1685
Max. size of reached set after ref.:  868
Avg. size of reached set before ref.: 930.64
Avg. size of reached set after ref.:  192.43

Total time for CEGAR algorithm:       4.414s
Time for refinements:                 0.498s
Average time for refinement:          0.017s
Max time for refinement:              0.053s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          103
  Total lines:            428
  Line coverage:          0.241
  Visited conditions:     30
  Total conditions:       68
  Condition coverage:     0.441

CPAchecker general statistics
-----------------------------
Number of program locations:     614
Number of CFA edges:             659
Number of relevant variables:    112
Number of functions:             37
Number of loops:                 5
Size of reached set:             1044
  Number of reached locations:   139 (23%)
    Avg states per location:     7
    Max states per location:     43 (at node N520)
  Number of reached functions:   18 (49%)
  Number of partitions:          1025
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N373 (before lines 525-574), Function test called from node N605, stack depth 3 [41dbf02b], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.047s
  Time for loading CPAs:          0.535s
  Time for loading parser:        0.462s
  Time for CFA construction:      0.920s
    Time for parsing file(s):     0.306s
    Time for AST to CFA:          0.248s
    Time for CFA sanity check:    0.059s
    Time for post-processing:     0.186s
      Time for var class.:        0.071s
Time for Analysis:                4.415s
CPU time for analysis:            4.430s
Time for analyzing result:        0.001s
Total time for CPAchecker:        6.465s
Total CPU time for CPAchecker:    6.480s
Time for statistics:              0.090s

Time for Garbage Collector:       0.113s (in 12 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     37MB (    35 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     29MB (    28 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8052MB (  7679 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
