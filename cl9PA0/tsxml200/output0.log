scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product40_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_w110tnuf/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 164: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 178: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 368: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 377: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 432: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 775: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 821: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 942: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 965: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 612: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            18771 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  18468 (98%)
  Because of loop head:            193 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         110 (1%)
  Times precision was empty:       2369 (13%)
  Times precision was {false}:     212 (1%)
  Times result was cached:         13319 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2871 (15%)
  Times result was 'false':        2375 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         10586
  BDD entailment checks:           6596
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          10
Number of abstraction locations:          56
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         61094
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 19.82
Number of irrelevant predicates:          20547 (34%)
Number of preds handled by boolean abs:   8855 (14%)
  Total number of models for allsat:      2860
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  1.154s
  Time for path formula creation:        1.089s
Time for strengthen operator:            0.098s
Time for prec operator:                  7.196s
  Time for abstraction:                  6.827s (Max:     0.021s, Count: 18771)
    Boolean abstraction:                 1.798s
    Solving time:                        1.332s (Max:     0.013s)
    Model enumeration time:              0.114s
    Time for BDD construction:           0.162s (Max:     0.013s)
Time for merge operator:                 0.041s
Time for coverage check:                 0.077s
  Time for BDD entailment checks:        0.057s
Total time for SMT solver (w/o itp):     1.446s

Number of path formula cache hits:   61275 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.938s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               598
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5908 (count: 28116, min: 0, max: 389, avg: 0.21)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.292s
Automaton transfers with branching:                0
Automaton transfer successors:                        75416 (count: 75416, min: 1, max: 1, avg: 1.00) [1 x 75416]

CPA algorithm statistics
------------------------
Number of iterations:            58715
Max size of waitlist:            66
Average size of waitlist:        16
Number of computed successors:   65986
Max successors for one state:    2
Number of times merged:          1995
Number of times stopped:         3757
Number of times breaked:         110

Total time for CPA algorithm:        11.321s (Max:     0.485s)
  Time for choose from waitlist:      0.063s
  Time for precision adjustment:      7.799s
  Time for transfer relation:         2.457s
  Time for merge operator:            0.182s
  Time for stop operator:             0.215s
  Time for adding to reached set:     0.139s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   110
Avg. length of target path (in blocks):                5178 (count: 110, min: 21, max: 85, avg: 47.07)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.279s
  Counterexample analysis:                             0.824s (Max:     0.021s, Calls: 110)
    Refinement sat check:                              0.358s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.044s
  Precision update:                                    0.089s
  ARG update:                                          0.210s

Length of refined path (in blocks):                    4004 (count: 110, min: 15, max: 65, avg: 36.40)
Number of affected states:                             1488 (count: 110, min: 2, max: 62, avg: 13.53)
Length (states) of path with itp 'true':               2406 (count: 110, min: 0, max: 51, avg: 21.87)
Length (states) of path with itp non-trivial itp:      1488 (count: 110, min: 2, max: 62, avg: 13.53)
Length (states) of path with itp 'false':               110 (count: 110, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          13 (count: 110, min: 0, max: 2, avg: 0.12)
Equal non-trivial interpolants along paths:            1365 (count: 110, min: 1, max: 60, avg: 12.41)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                110
Number of successful refinements:     110
Number of failed refinements:         0
Max. size of reached set before ref.: 3510
Max. size of reached set after ref.:  3099
Avg. size of reached set before ref.: 1369.64
Avg. size of reached set after ref.:  858.84

Total time for CEGAR algorithm:      12.885s
Time for refinements:                 1.498s
Average time for refinement:          0.013s
Max time for refinement:              0.052s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          150
  Total lines:            442
  Line coverage:          0.339
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     635
Number of CFA edges:             685
Number of relevant variables:    113
Number of functions:             38
Number of loops:                 5
Size of reached set:             3667
  Number of reached locations:   204 (32%)
    Avg states per location:     17
    Max states per location:     96 (at node N138)
  Number of reached functions:   26 (68%)
  Number of partitions:          3533
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N98 (before lines 196-245), Function test called from node N603, stack depth 3 [1b5a8687], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.204s
  Time for loading CPAs:          0.545s
  Time for loading parser:        0.495s
  Time for CFA construction:      1.024s
    Time for parsing file(s):     0.370s
    Time for AST to CFA:          0.277s
    Time for CFA sanity check:    0.058s
    Time for post-processing:     0.185s
      Time for var class.:        0.070s
Time for Analysis:               12.885s
CPU time for analysis:           12.890s
Time for analyzing result:        0.003s
Total time for CPAchecker:       15.092s
Total CPU time for CPAchecker:   15.090s
Time for statistics:              0.117s

Time for Garbage Collector:       0.280s (in 37 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     41MB (    39 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8071MB (  7697 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
