scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product40_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1gakts9z/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 164: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 178: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 368: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 377: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 432: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 775: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 821: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 942: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 965: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 612: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            19197 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  18812 (98%)
  Because of loop head:            271 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         114 (1%)
  Times precision was empty:       1103 (6%)
  Times precision was {false}:     270 (1%)
  Times result was cached:         14399 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3425 (18%)
  Times result was 'false':        2386 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         13628
  BDD entailment checks:           10170
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          10
Number of abstraction locations:          56
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         75620
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 20.47
Number of irrelevant predicates:          20710 (27%)
Number of preds handled by boolean abs:   11448 (15%)
  Total number of models for allsat:      3535
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  1.077s
  Time for path formula creation:        1.013s
Time for strengthen operator:            0.102s
Time for prec operator:                  8.431s
  Time for abstraction:                  8.078s (Max:     0.018s, Count: 19197)
    Boolean abstraction:                 2.233s
    Solving time:                        1.625s (Max:     0.013s)
    Model enumeration time:              0.197s
    Time for BDD construction:           0.180s (Max:     0.010s)
Time for merge operator:                 0.080s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):     1.822s

Number of path formula cache hits:   58568 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.900s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               726
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7158 (count: 34120, min: 0, max: 454, avg: 0.21)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.332s
Automaton transfers with branching:                0
Automaton transfer successors:                        73640 (count: 73640, min: 1, max: 1, avg: 1.00) [1 x 73640]

CPA algorithm statistics
------------------------
Number of iterations:            58552
Max size of waitlist:            34
Average size of waitlist:        10
Number of computed successors:   65127
Max successors for one state:    2
Number of times merged:          1729
Number of times stopped:         3943
Number of times breaked:         114

Total time for CPA algorithm:        12.465s (Max:     0.371s)
  Time for choose from waitlist:      0.051s
  Time for precision adjustment:      9.045s
  Time for transfer relation:         2.396s
  Time for merge operator:            0.174s
  Time for stop operator:             0.208s
  Time for adding to reached set:     0.166s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   114
Avg. length of target path (in blocks):                5389 (count: 114, min: 22, max: 87, avg: 47.27)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.263s
  Counterexample analysis:                             0.857s (Max:     0.032s, Calls: 114)
    Refinement sat check:                              0.418s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.035s
  Precision update:                                    0.075s
  ARG update:                                          0.195s

Length of refined path (in blocks):                    4276 (count: 114, min: 15, max: 65, avg: 37.51)
Number of affected states:                             1880 (count: 114, min: 2, max: 58, avg: 16.49)
Length (states) of path with itp 'true':               2282 (count: 114, min: 0, max: 45, avg: 20.02)
Length (states) of path with itp non-trivial itp:      1880 (count: 114, min: 2, max: 58, avg: 16.49)
Length (states) of path with itp 'false':               114 (count: 114, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          15 (count: 114, min: 0, max: 2, avg: 0.13)
Equal non-trivial interpolants along paths:            1751 (count: 114, min: 1, max: 55, avg: 15.36)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                114
Number of successful refinements:     114
Number of failed refinements:         0
Max. size of reached set before ref.: 4464
Max. size of reached set after ref.:  2901
Avg. size of reached set before ref.: 1243.67
Avg. size of reached set after ref.:  751.24

Total time for CEGAR algorithm:      14.113s
Time for refinements:                 1.534s
Average time for refinement:          0.013s
Max time for refinement:              0.058s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          150
  Total lines:            442
  Line coverage:          0.339
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     635
Number of CFA edges:             685
Number of relevant variables:    113
Number of functions:             38
Number of loops:                 5
Size of reached set:             2662
  Number of reached locations:   204 (32%)
    Avg states per location:     13
    Max states per location:     73 (at node N5)
  Number of reached functions:   26 (68%)
  Number of partitions:          2566
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N98 (before lines 196-245), Function test called from node N603, stack depth 3 [6a26271b], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.193s
  Time for loading CPAs:          0.526s
  Time for loading parser:        0.517s
  Time for CFA construction:      1.008s
    Time for parsing file(s):     0.367s
    Time for AST to CFA:          0.247s
    Time for CFA sanity check:    0.075s
    Time for post-processing:     0.196s
      Time for var class.:        0.072s
Time for Analysis:               14.114s
CPU time for analysis:           14.110s
Time for analyzing result:        0.002s
Total time for CPAchecker:       16.309s
Total CPU time for CPAchecker:   16.310s
Time for statistics:              0.112s

Time for Garbage Collector:       0.377s (in 41 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     41MB (    39 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8071MB (  7697 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
