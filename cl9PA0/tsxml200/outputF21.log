scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product40_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dj5ps34f/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 164: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 178: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 368: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 377: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 432: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 775: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 821: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 942: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 965: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 612: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            26247 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  25749 (98%)
  Because of loop head:            319 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         179 (1%)
  Times precision was empty:       884 (3%)
  Times precision was {false}:     318 (1%)
  Times result was cached:         21231 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3814 (15%)
  Times result was 'false':        3763 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         19716
  BDD entailment checks:           15506
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          10
Number of abstraction locations:          53
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         116741
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 28.25
Number of irrelevant predicates:          33806 (29%)
Number of preds handled by boolean abs:   12298 (11%)
  Total number of models for allsat:      3670
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.96

Time for post operator:                  1.124s
  Time for path formula creation:        1.084s
Time for strengthen operator:            0.145s
Time for prec operator:                  9.581s
  Time for abstraction:                  9.234s (Max:     0.016s, Count: 26247)
    Boolean abstraction:                 2.352s
    Solving time:                        1.851s (Max:     0.013s)
    Model enumeration time:              0.178s
    Time for BDD construction:           0.127s (Max:     0.012s)
Time for merge operator:                 0.059s
Time for coverage check:                 0.037s
  Time for BDD entailment checks:        0.032s
Total time for SMT solver (w/o itp):     2.029s

Number of path formula cache hits:   93657 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.948s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               621
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7761 (count: 41543, min: 0, max: 800, avg: 0.19)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.223s
Automaton transfers with branching:                0
Automaton transfer successors:                       101021 (count: 101021, min: 1, max: 1, avg: 1.00) [1 x 101021]

CPA algorithm statistics
------------------------
Number of iterations:            79868
Max size of waitlist:            52
Average size of waitlist:        21
Number of computed successors:   89404
Max successors for one state:    2
Number of times merged:          2105
Number of times stopped:         4613
Number of times breaked:         179

Total time for CPA algorithm:        13.638s (Max:     0.849s)
  Time for choose from waitlist:      0.058s
  Time for precision adjustment:     10.179s
  Time for transfer relation:         2.499s
  Time for merge operator:            0.173s
  Time for stop operator:             0.176s
  Time for adding to reached set:     0.161s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   179
Avg. length of target path (in blocks):               17857 (count: 179, min: 21, max: 179, avg: 99.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.017s
  Counterexample analysis:                             2.521s (Max:     0.042s, Calls: 179)
    Refinement sat check:                              1.095s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.062s
  Precision update:                                    0.100s
  ARG update:                                          0.154s

Length of refined path (in blocks):                   14291 (count: 179, min: 15, max: 159, avg: 79.84)
Number of affected states:                             2676 (count: 179, min: 2, max: 140, avg: 14.95)
Length (states) of path with itp 'true':              11436 (count: 179, min: 0, max: 156, avg: 63.89)
Length (states) of path with itp non-trivial itp:      2676 (count: 179, min: 2, max: 140, avg: 14.95)
Length (states) of path with itp 'false':               179 (count: 179, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          29 (count: 179, min: 0, max: 2, avg: 0.16)
Equal non-trivial interpolants along paths:            2468 (count: 179, min: 1, max: 139, avg: 13.79)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                179
Number of successful refinements:     179
Number of failed refinements:         0
Max. size of reached set before ref.: 3657
Max. size of reached set after ref.:  3383
Avg. size of reached set before ref.: 1611.36
Avg. size of reached set after ref.:  1173.58

Total time for CEGAR algorithm:      17.220s
Time for refinements:                 3.405s
Average time for refinement:          0.019s
Max time for refinement:              0.054s

Code Coverage
-----------------------------
  Function coverage:      0.658
  Visited lines:          134
  Total lines:            442
  Line coverage:          0.303
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     635
Number of CFA edges:             685
Number of relevant variables:    113
Number of functions:             38
Number of loops:                 5
Size of reached set:             2665
  Number of reached locations:   183 (29%)
    Avg states per location:     14
    Max states per location:     67 (at node N5)
  Number of reached functions:   25 (66%)
  Number of partitions:          2573
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N98 (before lines 196-245), Function test called from node N603, stack depth 3 [3805ebbe], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.223s
  Time for loading CPAs:          0.555s
  Time for loading parser:        0.497s
  Time for CFA construction:      0.992s
    Time for parsing file(s):     0.358s
    Time for AST to CFA:          0.217s
    Time for CFA sanity check:    0.078s
    Time for post-processing:     0.215s
      Time for var class.:        0.102s
Time for Analysis:               17.220s
CPU time for analysis:           17.220s
Time for analyzing result:        0.001s
Total time for CPAchecker:       19.449s
Total CPU time for CPAchecker:   19.440s
Time for statistics:              0.106s

Time for Garbage Collector:       0.442s (in 57 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    64 MiB) max;     44MB (    42 MiB) avg;     71MB (    68 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
