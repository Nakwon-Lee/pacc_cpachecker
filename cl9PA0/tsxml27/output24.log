scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product22_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_isyys0a2/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 147: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 291: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 300: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 882: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 928: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 719: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3613 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3555 (98%)
  Because of loop head:            37 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         21 (1%)
  Times precision was empty:       1607 (44%)
  Times precision was {false}:     59 (2%)
  Times result was cached:         1791 (50%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      156 (4%)
  Times result was 'false':        394 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         819
  BDD entailment checks:           309
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          39
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         4063
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 18.90
Number of irrelevant predicates:          1332 (33%)
Number of preds handled by boolean abs:   248 (6%)
  Total number of models for allsat:      177
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.13

Time for post operator:                  0.462s
  Time for path formula creation:        0.430s
Time for strengthen operator:            0.025s
Time for prec operator:                  1.109s
  Time for abstraction:                  0.972s (Max:     0.017s, Count: 3613)
    Boolean abstraction:                 0.197s
    Solving time:                        0.148s (Max:     0.016s)
    Model enumeration time:              0.012s
    Time for BDD construction:           0.056s (Max:     0.008s)
Time for merge operator:                 0.016s
Time for coverage check:                 0.007s
  Time for BDD entailment checks:        0.007s
Total time for SMT solver (w/o itp):     0.160s

Number of path formula cache hits:   13536 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.380s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               224
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         352 (count: 3228, min: 0, max: 113, avg: 0.11)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.132s
Automaton transfers with branching:                0
Automaton transfer successors:                        13723 (count: 13723, min: 1, max: 1, avg: 1.00) [1 x 13723]

CPA algorithm statistics
------------------------
Number of iterations:            10277
Max size of waitlist:            57
Average size of waitlist:        16
Number of computed successors:   11627
Max successors for one state:    2
Number of times merged:          255
Number of times stopped:         455
Number of times breaked:         21

Total time for CPA algorithm:         2.990s (Max:     0.588s)
  Time for choose from waitlist:      0.087s
  Time for precision adjustment:      1.429s
  Time for transfer relation:         1.093s
  Time for merge operator:            0.067s
  Time for stop operator:             0.048s
  Time for adding to reached set:     0.090s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   21
Avg. length of target path (in blocks):                 584 (count: 21, min: 19, max: 50, avg: 27.81)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.305s
  Counterexample analysis:                             0.195s (Max:     0.022s, Calls: 21)
    Refinement sat check:                              0.076s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.023s
  Precision update:                                    0.009s
  ARG update:                                          0.048s

Length of refined path (in blocks):                     430 (count: 21, min: 13, max: 42, avg: 20.48)
Number of affected states:                              384 (count: 21, min: 2, max: 41, avg: 18.29)
Length (states) of path with itp 'true':                 25 (count: 21, min: 0, max: 13, avg: 1.19)
Length (states) of path with itp non-trivial itp:       384 (count: 21, min: 2, max: 41, avg: 18.29)
Length (states) of path with itp 'false':                21 (count: 21, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 21, min: 0, max: 1, avg: 0.19)
Equal non-trivial interpolants along paths:             359 (count: 21, min: 1, max: 40, avg: 17.10)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                21
Number of successful refinements:     21
Number of failed refinements:         0
Max. size of reached set before ref.: 958
Max. size of reached set after ref.:  357
Avg. size of reached set before ref.: 497.14
Avg. size of reached set after ref.:  32.38

Total time for CEGAR algorithm:       3.342s
Time for refinements:                 0.341s
Average time for refinement:          0.016s
Max time for refinement:              0.041s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          103
  Total lines:            426
  Line coverage:          0.242
  Visited conditions:     30
  Total conditions:       68
  Condition coverage:     0.441

CPAchecker general statistics
-----------------------------
Number of program locations:     609
Number of CFA edges:             655
Number of relevant variables:    114
Number of functions:             36
Number of loops:                 5
Size of reached set:             1019
  Number of reached locations:   138 (23%)
    Avg states per location:     7
    Max states per location:     37 (at node N304)
  Number of reached functions:   18 (50%)
  Number of partitions:          1001
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N218 (after line 400), Function test called from node N279, stack depth 3 [202f054f], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.226s
  Time for loading CPAs:          0.591s
  Time for loading parser:        0.471s
  Time for CFA construction:      1.028s
    Time for parsing file(s):     0.348s
    Time for AST to CFA:          0.264s
    Time for CFA sanity check:    0.080s
    Time for post-processing:     0.218s
      Time for var class.:        0.077s
Time for Analysis:                3.342s
CPU time for analysis:            3.350s
Time for analyzing result:        0.013s
Total time for CPAchecker:        5.571s
Total CPU time for CPAchecker:    5.570s
Time for statistics:              0.069s

Time for Garbage Collector:       0.122s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     35MB (    34 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    26 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8047MB (  7674 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
