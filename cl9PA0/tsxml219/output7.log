scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product25_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__3n38qac/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 420: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 469: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 501: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 510: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 878: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 924: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 715: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4848 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4730 (98%)
  Because of loop head:            83 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         35 (1%)
  Times precision was empty:       1080 (22%)
  Times precision was {false}:     88 (2%)
  Times result was cached:         3161 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      519 (11%)
  Times result was 'false':        561 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         2292
  BDD entailment checks:           842
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          8
Number of abstraction locations:          36
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         11212
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 18.47
Number of irrelevant predicates:          3269 (29%)
Number of preds handled by boolean abs:   1526 (14%)
  Total number of models for allsat:      559
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  0.668s
  Time for path formula creation:        0.621s
Time for strengthen operator:            0.030s
Time for prec operator:                  2.315s
  Time for abstraction:                  2.141s (Max:     0.014s, Count: 4848)
    Boolean abstraction:                 0.523s
    Solving time:                        0.326s (Max:     0.011s)
    Model enumeration time:              0.036s
    Time for BDD construction:           0.073s (Max:     0.008s)
Time for merge operator:                 0.012s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     0.362s

Number of path formula cache hits:   18717 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.562s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               363
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1197 (count: 5635, min: 0, max: 266, avg: 0.21)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.183s
Automaton transfers with branching:                0
Automaton transfer successors:                        20729 (count: 20729, min: 1, max: 1, avg: 1.00) [1 x 20729]

CPA algorithm statistics
------------------------
Number of iterations:            15985
Max size of waitlist:            47
Average size of waitlist:        12
Number of computed successors:   18149
Max successors for one state:    2
Number of times merged:          725
Number of times stopped:         1095
Number of times breaked:         35

Total time for CPA algorithm:         4.538s (Max:     0.487s)
  Time for choose from waitlist:      0.030s
  Time for precision adjustment:      2.637s
  Time for transfer relation:         1.443s
  Time for merge operator:            0.069s
  Time for stop operator:             0.066s
  Time for adding to reached set:     0.068s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   35
Avg. length of target path (in blocks):                1236 (count: 35, min: 21, max: 61, avg: 35.31)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.449s
  Counterexample analysis:                             0.296s (Max:     0.026s, Calls: 35)
    Refinement sat check:                              0.120s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.029s
  Precision update:                                    0.028s
  ARG update:                                          0.078s

Length of refined path (in blocks):                     897 (count: 35, min: 15, max: 47, avg: 25.63)
Number of affected states:                              618 (count: 35, min: 9, max: 44, avg: 17.66)
Length (states) of path with itp 'true':                244 (count: 35, min: 0, max: 33, avg: 6.97)
Length (states) of path with itp non-trivial itp:       618 (count: 35, min: 9, max: 44, avg: 17.66)
Length (states) of path with itp 'false':                35 (count: 35, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 35, min: 0, max: 1, avg: 0.14)
Equal non-trivial interpolants along paths:             578 (count: 35, min: 8, max: 42, avg: 16.51)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                35
Number of successful refinements:     35
Number of failed refinements:         0
Max. size of reached set before ref.: 867
Max. size of reached set after ref.:  391
Avg. size of reached set before ref.: 555.14
Avg. size of reached set after ref.:  101.80

Total time for CEGAR algorithm:       5.087s
Time for refinements:                 0.539s
Average time for refinement:          0.015s
Max time for refinement:              0.042s

Code Coverage
-----------------------------
  Function coverage:      0.472
  Visited lines:          104
  Total lines:            428
  Line coverage:          0.243
  Visited conditions:     30
  Total conditions:       68
  Condition coverage:     0.441

CPAchecker general statistics
-----------------------------
Number of program locations:     611
Number of CFA edges:             655
Number of relevant variables:    113
Number of functions:             36
Number of loops:                 5
Size of reached set:             627
  Number of reached locations:   137 (22%)
    Avg states per location:     4
    Max states per location:     18 (at node N137)
  Number of reached functions:   17 (47%)
  Number of partitions:          614
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N99 (before lines 191-236), Function test called from node N47, stack depth 3 [6e466fdf], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.874s
  Time for loading CPAs:          0.431s
  Time for loading parser:        0.458s
  Time for CFA construction:      0.917s
    Time for parsing file(s):     0.311s
    Time for AST to CFA:          0.233s
    Time for CFA sanity check:    0.063s
    Time for post-processing:     0.206s
      Time for var class.:        0.095s
Time for Analysis:                5.087s
CPU time for analysis:            5.080s
Time for analyzing result:        0.001s
Total time for CPAchecker:        6.964s
Total CPU time for CPAchecker:    6.960s
Time for statistics:              0.086s

Time for Garbage Collector:       0.101s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     38MB (    36 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    28 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   7993MB (  7623 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
