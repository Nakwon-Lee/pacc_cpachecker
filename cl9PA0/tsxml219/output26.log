scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product25_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_n4gu2b5f/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 420: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 469: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 501: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 510: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 878: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 924: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 715: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            6609 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6502 (98%)
  Because of loop head:            81 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         26 (0%)
  Times precision was empty:       1168 (18%)
  Times precision was {false}:     75 (1%)
  Times result was cached:         5013 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      353 (5%)
  Times result was 'false':        357 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         3804
  BDD entailment checks:           1808
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          36
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         12186
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 28.47
Number of irrelevant predicates:          5079 (42%)
Number of preds handled by boolean abs:   746 (6%)
  Total number of models for allsat:      398
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.13

Time for post operator:                  0.680s
  Time for path formula creation:        0.643s
Time for strengthen operator:            0.056s
Time for prec operator:                  1.849s
  Time for abstraction:                  1.686s (Max:     0.015s, Count: 6609)
    Boolean abstraction:                 0.341s
    Solving time:                        0.215s (Max:     0.012s)
    Model enumeration time:              0.022s
    Time for BDD construction:           0.077s (Max:     0.013s)
Time for merge operator:                 0.073s
Time for coverage check:                 0.027s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):     0.237s

Number of path formula cache hits:   26708 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.572s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               269
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         793 (count: 5568, min: 0, max: 185, avg: 0.14)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.211s
Automaton transfers with branching:                0
Automaton transfer successors:                        28061 (count: 28061, min: 1, max: 1, avg: 1.00) [1 x 28061]

CPA algorithm statistics
------------------------
Number of iterations:            21978
Max size of waitlist:            58
Average size of waitlist:        23
Number of computed successors:   24882
Max successors for one state:    2
Number of times merged:          998
Number of times stopped:         1927
Number of times breaked:         26

Total time for CPA algorithm:         4.265s (Max:     0.368s)
  Time for choose from waitlist:      0.032s
  Time for precision adjustment:      2.163s
  Time for transfer relation:         1.461s
  Time for merge operator:            0.128s
  Time for stop operator:             0.117s
  Time for adding to reached set:     0.103s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   26
Avg. length of target path (in blocks):                 795 (count: 26, min: 21, max: 40, avg: 30.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.346s
  Counterexample analysis:                             0.168s (Max:     0.015s, Calls: 26)
    Refinement sat check:                              0.061s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.042s
  Precision update:                                    0.021s
  ARG update:                                          0.100s

Length of refined path (in blocks):                     607 (count: 26, min: 15, max: 39, avg: 23.35)
Number of affected states:                              440 (count: 26, min: 9, max: 38, avg: 16.92)
Length (states) of path with itp 'true':                141 (count: 26, min: 0, max: 19, avg: 5.42)
Length (states) of path with itp non-trivial itp:       440 (count: 26, min: 9, max: 38, avg: 16.92)
Length (states) of path with itp 'false':                26 (count: 26, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 26, min: 0, max: 1, avg: 0.12)
Equal non-trivial interpolants along paths:             411 (count: 26, min: 8, max: 36, avg: 15.81)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                26
Number of successful refinements:     26
Number of failed refinements:         0
Max. size of reached set before ref.: 1455
Max. size of reached set after ref.:  333
Avg. size of reached set before ref.: 912.12
Avg. size of reached set after ref.:  69.88

Total time for CEGAR algorithm:       4.678s
Time for refinements:                 0.403s
Average time for refinement:          0.015s
Max time for refinement:              0.044s

Code Coverage
-----------------------------
  Function coverage:      0.472
  Visited lines:          104
  Total lines:            428
  Line coverage:          0.243
  Visited conditions:     30
  Total conditions:       68
  Condition coverage:     0.441

CPAchecker general statistics
-----------------------------
Number of program locations:     611
Number of CFA edges:             655
Number of relevant variables:    113
Number of functions:             36
Number of loops:                 5
Size of reached set:             701
  Number of reached locations:   137 (22%)
    Avg states per location:     5
    Max states per location:     24 (at node N299)
  Number of reached functions:   17 (47%)
  Number of partitions:          695
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N99 (before lines 191-236), Function test called from node N47, stack depth 3 [41628b4f], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.003s
  Time for loading CPAs:          0.525s
  Time for loading parser:        0.444s
  Time for CFA construction:      0.893s
    Time for parsing file(s):     0.302s
    Time for AST to CFA:          0.235s
    Time for CFA sanity check:    0.055s
    Time for post-processing:     0.180s
      Time for var class.:        0.066s
Time for Analysis:                4.679s
CPU time for analysis:            4.680s
Time for analyzing result:        0.001s
Total time for CPAchecker:        6.685s
Total CPU time for CPAchecker:    6.670s
Time for statistics:              0.069s

Time for Garbage Collector:       0.111s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     36MB (    34 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     29MB (    28 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8055MB (  7682 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
