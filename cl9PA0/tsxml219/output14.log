scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product25_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__o_6s4q9/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 420: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 469: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 501: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 510: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 878: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 924: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 715: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2122 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2028 (96%)
  Because of loop head:            67 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         27 (1%)
  Times precision was empty:       256 (12%)
  Times precision was {false}:     61 (3%)
  Times result was cached:         1518 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      287 (14%)
  Times result was 'false':        315 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         678
  BDD entailment checks:           228
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          36
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         5808
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 16.69
Number of irrelevant predicates:          1168 (20%)
Number of preds handled by boolean abs:   731 (13%)
  Total number of models for allsat:      320
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.11

Time for post operator:                  0.425s
  Time for path formula creation:        0.412s
Time for strengthen operator:            0.046s
Time for prec operator:                  1.156s
  Time for abstraction:                  1.096s (Max:     0.015s, Count: 2122)
    Boolean abstraction:                 0.245s
    Solving time:                        0.172s (Max:     0.013s)
    Model enumeration time:              0.021s
    Time for BDD construction:           0.024s (Max:     0.005s)
Time for merge operator:                 0.015s
Time for coverage check:                 0.010s
  Time for BDD entailment checks:        0.010s
Total time for SMT solver (w/o itp):     0.193s

Number of path formula cache hits:   7684 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.347s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               284
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         616 (count: 2604, min: 0, max: 271, avg: 0.24)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.057s
Automaton transfers with branching:                0
Automaton transfer successors:                         8442 (count: 8442, min: 1, max: 1, avg: 1.00) [1 x 8442]

CPA algorithm statistics
------------------------
Number of iterations:            6630
Max size of waitlist:            12
Average size of waitlist:        4
Number of computed successors:   7447
Max successors for one state:    2
Number of times merged:          225
Number of times stopped:         347
Number of times breaked:         27

Total time for CPA algorithm:         2.445s (Max:     0.163s)
  Time for choose from waitlist:      0.020s
  Time for precision adjustment:      1.338s
  Time for transfer relation:         0.844s
  Time for merge operator:            0.046s
  Time for stop operator:             0.037s
  Time for adding to reached set:     0.060s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   27
Avg. length of target path (in blocks):                 910 (count: 27, min: 21, max: 61, avg: 33.70)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.294s
  Counterexample analysis:                             0.173s (Max:     0.014s, Calls: 27)
    Refinement sat check:                              0.080s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.025s
  ARG update:                                          0.065s

Length of refined path (in blocks):                     705 (count: 27, min: 15, max: 47, avg: 26.11)
Number of affected states:                              512 (count: 27, min: 9, max: 44, avg: 18.96)
Length (states) of path with itp 'true':                166 (count: 27, min: 0, max: 33, avg: 6.15)
Length (states) of path with itp non-trivial itp:       512 (count: 27, min: 9, max: 44, avg: 18.96)
Length (states) of path with itp 'false':                27 (count: 27, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 27, min: 0, max: 1, avg: 0.19)
Equal non-trivial interpolants along paths:             480 (count: 27, min: 8, max: 42, avg: 17.78)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                27
Number of successful refinements:     27
Number of failed refinements:         0
Max. size of reached set before ref.: 440
Max. size of reached set after ref.:  348
Avg. size of reached set before ref.: 285.59
Avg. size of reached set after ref.:  55.56

Total time for CEGAR algorithm:       2.775s
Time for refinements:                 0.328s
Average time for refinement:          0.012s
Max time for refinement:              0.025s

Code Coverage
-----------------------------
  Function coverage:      0.472
  Visited lines:          104
  Total lines:            428
  Line coverage:          0.243
  Visited conditions:     30
  Total conditions:       68
  Condition coverage:     0.441

CPAchecker general statistics
-----------------------------
Number of program locations:     611
Number of CFA edges:             655
Number of relevant variables:    113
Number of functions:             36
Number of loops:                 5
Size of reached set:             575
  Number of reached locations:   137 (22%)
    Avg states per location:     4
    Max states per location:     18 (at node N137)
  Number of reached functions:   17 (47%)
  Number of partitions:          568
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N99 (before lines 191-236), Function test called from node N47, stack depth 3 [2accaec2], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.854s
  Time for loading CPAs:          0.485s
  Time for loading parser:        0.422s
  Time for CFA construction:      0.814s
    Time for parsing file(s):     0.269s
    Time for AST to CFA:          0.226s
    Time for CFA sanity check:    0.040s
    Time for post-processing:     0.177s
      Time for var class.:        0.067s
Time for Analysis:                2.775s
CPU time for analysis:            2.780s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.632s
Total CPU time for CPAchecker:    4.630s
Time for statistics:              0.040s

Time for Garbage Collector:       0.073s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     35MB (    33 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     28MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7987MB (  7617 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
