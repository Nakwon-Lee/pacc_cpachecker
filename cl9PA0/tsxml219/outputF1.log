scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product25_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7cl5y4t5/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 420: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 469: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 501: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 510: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 878: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 924: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 715: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1977 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1891 (96%)
  Because of loop head:            57 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29 (1%)
  Times precision was empty:       203 (10%)
  Times precision was {false}:     74 (4%)
  Times result was cached:         1329 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      371 (19%)
  Times result was 'false':        278 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         748
  BDD entailment checks:           276
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          8
Number of abstraction locations:          36
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         6167
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 13.86
Number of irrelevant predicates:          1356 (22%)
Number of preds handled by boolean abs:   1073 (17%)
  Total number of models for allsat:      404
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  0.369s
  Time for path formula creation:        0.352s
Time for strengthen operator:            0.060s
Time for prec operator:                  1.700s
  Time for abstraction:                  1.633s (Max:     0.017s, Count: 1977)
    Boolean abstraction:                 0.424s
    Solving time:                        0.252s (Max:     0.013s)
    Model enumeration time:              0.052s
    Time for BDD construction:           0.059s (Max:     0.007s)
Time for merge operator:                 0.017s
Time for coverage check:                 0.010s
  Time for BDD entailment checks:        0.010s
Total time for SMT solver (w/o itp):     0.304s

Number of path formula cache hits:   6951 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.318s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               345
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         862 (count: 3226, min: 0, max: 335, avg: 0.27)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.100s
Automaton transfers with branching:                0
Automaton transfer successors:                         7961 (count: 7961, min: 1, max: 1, avg: 1.00) [1 x 7961]

CPA algorithm statistics
------------------------
Number of iterations:            6248
Max size of waitlist:            12
Average size of waitlist:        4
Number of computed successors:   7034
Max successors for one state:    2
Number of times merged:          236
Number of times stopped:         368
Number of times breaked:         29

Total time for CPA algorithm:         3.124s (Max:     0.196s)
  Time for choose from waitlist:      0.026s
  Time for precision adjustment:      1.893s
  Time for transfer relation:         0.904s
  Time for merge operator:            0.052s
  Time for stop operator:             0.076s
  Time for adding to reached set:     0.060s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   29
Avg. length of target path (in blocks):                1014 (count: 29, min: 22, max: 61, avg: 34.97)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.321s
  Counterexample analysis:                             0.219s (Max:     0.014s, Calls: 29)
    Refinement sat check:                              0.082s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.020s
  ARG update:                                          0.029s

Length of refined path (in blocks):                     786 (count: 29, min: 16, max: 47, avg: 27.10)
Number of affected states:                              549 (count: 29, min: 9, max: 44, avg: 18.93)
Length (states) of path with itp 'true':                208 (count: 29, min: 0, max: 33, avg: 7.17)
Length (states) of path with itp non-trivial itp:       549 (count: 29, min: 9, max: 44, avg: 18.93)
Length (states) of path with itp 'false':                29 (count: 29, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 29, min: 0, max: 1, avg: 0.17)
Equal non-trivial interpolants along paths:             515 (count: 29, min: 8, max: 42, avg: 17.76)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 443
Max. size of reached set after ref.:  348
Avg. size of reached set before ref.: 286.76
Avg. size of reached set after ref.:  79.24

Total time for CEGAR algorithm:       3.502s
Time for refinements:                 0.374s
Average time for refinement:          0.012s
Max time for refinement:              0.036s

Code Coverage
-----------------------------
  Function coverage:      0.444
  Visited lines:          88
  Total lines:            428
  Line coverage:          0.206
  Visited conditions:     28
  Total conditions:       68
  Condition coverage:     0.412

CPAchecker general statistics
-----------------------------
Number of program locations:     611
Number of CFA edges:             655
Number of relevant variables:    113
Number of functions:             36
Number of loops:                 5
Size of reached set:             371
  Number of reached locations:   116 (19%)
    Avg states per location:     3
    Max states per location:     10 (at node N137)
  Number of reached functions:   16 (44%)
  Number of partitions:          366
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N99 (before lines 191-236), Function test called from node N47, stack depth 3 [750f64fe], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.877s
  Time for loading CPAs:          0.484s
  Time for loading parser:        0.454s
  Time for CFA construction:      0.854s
    Time for parsing file(s):     0.266s
    Time for AST to CFA:          0.242s
    Time for CFA sanity check:    0.070s
    Time for post-processing:     0.179s
      Time for var class.:        0.063s
Time for Analysis:                3.502s
CPU time for analysis:            3.500s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.382s
Total CPU time for CPAchecker:    5.370s
Time for statistics:              0.077s

Time for Garbage Collector:       0.077s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     36MB (    34 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   7991MB (  7620 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
