scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product25_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cq6btr2p/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 420: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 469: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 501: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 510: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 878: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 924: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 715: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4931 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4777 (97%)
  Because of loop head:            122 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         32 (1%)
  Times precision was empty:       1254 (25%)
  Times precision was {false}:     88 (2%)
  Times result was cached:         3119 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      470 (10%)
  Times result was 'false':        503 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         2294
  BDD entailment checks:           1074
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          8
Number of abstraction locations:          36
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         9942
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 17.82
Number of irrelevant predicates:          3382 (34%)
Number of preds handled by boolean abs:   1266 (13%)
  Total number of models for allsat:      492
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.05

Time for post operator:                  0.451s
  Time for path formula creation:        0.419s
Time for strengthen operator:            0.040s
Time for prec operator:                  1.821s
  Time for abstraction:                  1.707s (Max:     0.019s, Count: 4931)
    Boolean abstraction:                 0.468s
    Solving time:                        0.273s (Max:     0.013s)
    Model enumeration time:              0.062s
    Time for BDD construction:           0.102s (Max:     0.008s)
Time for merge operator:                 0.023s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     0.335s

Number of path formula cache hits:   18290 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.380s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               351
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1162 (count: 5746, min: 0, max: 273, avg: 0.20)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.169s
Automaton transfers with branching:                0
Automaton transfer successors:                        19734 (count: 19734, min: 1, max: 1, avg: 1.00) [1 x 19734]

CPA algorithm statistics
------------------------
Number of iterations:            15744
Max size of waitlist:            23
Average size of waitlist:        7
Number of computed successors:   17604
Max successors for one state:    2
Number of times merged:          610
Number of times stopped:         1167
Number of times breaked:         32

Total time for CPA algorithm:         3.680s (Max:     0.348s)
  Time for choose from waitlist:      0.040s
  Time for precision adjustment:      2.078s
  Time for transfer relation:         1.088s
  Time for merge operator:            0.080s
  Time for stop operator:             0.106s
  Time for adding to reached set:     0.087s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   32
Avg. length of target path (in blocks):                1114 (count: 32, min: 21, max: 61, avg: 34.81)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.380s
  Counterexample analysis:                             0.221s (Max:     0.015s, Calls: 32)
    Refinement sat check:                              0.083s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.033s
  Precision update:                                    0.031s
  ARG update:                                          0.083s

Length of refined path (in blocks):                     825 (count: 32, min: 15, max: 47, avg: 25.78)
Number of affected states:                              575 (count: 32, min: 9, max: 44, avg: 17.97)
Length (states) of path with itp 'true':                218 (count: 32, min: 0, max: 33, avg: 6.81)
Length (states) of path with itp non-trivial itp:       575 (count: 32, min: 9, max: 44, avg: 17.97)
Length (states) of path with itp 'false':                32 (count: 32, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 32, min: 0, max: 1, avg: 0.13)
Equal non-trivial interpolants along paths:             539 (count: 32, min: 8, max: 42, avg: 16.84)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                32
Number of successful refinements:     32
Number of failed refinements:         0
Max. size of reached set before ref.: 892
Max. size of reached set after ref.:  461
Avg. size of reached set before ref.: 597.06
Avg. size of reached set after ref.:  114.28

Total time for CEGAR algorithm:       4.148s
Time for refinements:                 0.453s
Average time for refinement:          0.014s
Max time for refinement:              0.036s

Code Coverage
-----------------------------
  Function coverage:      0.472
  Visited lines:          104
  Total lines:            428
  Line coverage:          0.243
  Visited conditions:     30
  Total conditions:       68
  Condition coverage:     0.441

CPAchecker general statistics
-----------------------------
Number of program locations:     611
Number of CFA edges:             655
Number of relevant variables:    113
Number of functions:             36
Number of loops:                 5
Size of reached set:             486
  Number of reached locations:   137 (22%)
    Avg states per location:     3
    Max states per location:     14 (at node N137)
  Number of reached functions:   17 (47%)
  Number of partitions:          477
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N99 (before lines 191-236), Function test called from node N47, stack depth 3 [54ec8ab3], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.890s
  Time for loading CPAs:          0.488s
  Time for loading parser:        0.464s
  Time for CFA construction:      0.778s
    Time for parsing file(s):     0.292s
    Time for AST to CFA:          0.167s
    Time for CFA sanity check:    0.045s
    Time for post-processing:     0.173s
      Time for var class.:        0.069s
Time for Analysis:                4.149s
CPU time for analysis:            4.150s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.041s
Total CPU time for CPAchecker:    6.040s
Time for statistics:              0.046s

Time for Garbage Collector:       0.122s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     37MB (    35 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     29MB (    28 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   7990MB (  7620 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
