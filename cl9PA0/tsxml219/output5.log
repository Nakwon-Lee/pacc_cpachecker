scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product25_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_j2xb425v/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 420: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 469: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 501: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 510: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 878: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 924: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 715: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7075 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6904 (98%)
  Because of loop head:            136 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         35 (0%)
  Times precision was empty:       1669 (24%)
  Times precision was {false}:     81 (1%)
  Times result was cached:         4945 (70%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      380 (5%)
  Times result was 'false':        482 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         3022
  BDD entailment checks:           1166
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          8
Number of abstraction locations:          36
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         11240
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 24.38
Number of irrelevant predicates:          4808 (43%)
Number of preds handled by boolean abs:   815 (7%)
  Total number of models for allsat:      414
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  0.813s
  Time for path formula creation:        0.764s
Time for strengthen operator:            0.052s
Time for prec operator:                  2.274s
  Time for abstraction:                  2.064s (Max:     0.014s, Count: 7075)
    Boolean abstraction:                 0.402s
    Solving time:                        0.253s (Max:     0.013s)
    Model enumeration time:              0.021s
    Time for BDD construction:           0.073s (Max:     0.010s)
Time for merge operator:                 0.044s
Time for coverage check:                 0.066s
  Time for BDD entailment checks:        0.057s
Total time for SMT solver (w/o itp):     0.274s

Number of path formula cache hits:   27615 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.694s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               287
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         838 (count: 5646, min: 0, max: 227, avg: 0.15)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.180s
Automaton transfers with branching:                0
Automaton transfer successors:                        29311 (count: 29311, min: 1, max: 1, avg: 1.00) [1 x 29311]

CPA algorithm statistics
------------------------
Number of iterations:            22634
Max size of waitlist:            58
Average size of waitlist:        22
Number of computed successors:   25401
Max successors for one state:    2
Number of times merged:          928
Number of times stopped:         1521
Number of times breaked:         35

Total time for CPA algorithm:         5.140s (Max:     0.505s)
  Time for choose from waitlist:      0.051s
  Time for precision adjustment:      2.679s
  Time for transfer relation:         1.802s
  Time for merge operator:            0.097s
  Time for stop operator:             0.173s
  Time for adding to reached set:     0.080s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   35
Avg. length of target path (in blocks):                1106 (count: 35, min: 21, max: 46, avg: 31.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.428s
  Counterexample analysis:                             0.217s (Max:     0.014s, Calls: 35)
    Refinement sat check:                              0.113s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.026s
  Precision update:                                    0.028s
  ARG update:                                          0.113s

Length of refined path (in blocks):                     885 (count: 35, min: 15, max: 39, avg: 25.29)
Number of affected states:                              544 (count: 35, min: 9, max: 38, avg: 15.54)
Length (states) of path with itp 'true':                306 (count: 35, min: 0, max: 19, avg: 8.74)
Length (states) of path with itp non-trivial itp:       544 (count: 35, min: 9, max: 38, avg: 15.54)
Length (states) of path with itp 'false':                35 (count: 35, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 35, min: 0, max: 1, avg: 0.06)
Equal non-trivial interpolants along paths:             507 (count: 35, min: 8, max: 36, avg: 14.49)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                35
Number of successful refinements:     35
Number of failed refinements:         0
Max. size of reached set before ref.: 1472
Max. size of reached set after ref.:  711
Avg. size of reached set before ref.: 863.60
Avg. size of reached set after ref.:  214.86

Total time for CEGAR algorithm:       5.644s
Time for refinements:                 0.480s
Average time for refinement:          0.013s
Max time for refinement:              0.046s

Code Coverage
-----------------------------
  Function coverage:      0.472
  Visited lines:          104
  Total lines:            428
  Line coverage:          0.243
  Visited conditions:     30
  Total conditions:       68
  Condition coverage:     0.441

CPAchecker general statistics
-----------------------------
Number of program locations:     611
Number of CFA edges:             655
Number of relevant variables:    113
Number of functions:             36
Number of loops:                 5
Size of reached set:             693
  Number of reached locations:   137 (22%)
    Avg states per location:     5
    Max states per location:     22 (at node N299)
  Number of reached functions:   17 (47%)
  Number of partitions:          688
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N99 (before lines 191-236), Function test called from node N47, stack depth 3 [542adcfa], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.021s
  Time for loading CPAs:          0.533s
  Time for loading parser:        0.458s
  Time for CFA construction:      0.919s
    Time for parsing file(s):     0.306s
    Time for AST to CFA:          0.244s
    Time for CFA sanity check:    0.075s
    Time for post-processing:     0.188s
      Time for var class.:        0.065s
Time for Analysis:                5.644s
CPU time for analysis:            5.650s
Time for analyzing result:        0.000s
Total time for CPAchecker:        7.668s
Total CPU time for CPAchecker:    7.670s
Time for statistics:              0.071s

Time for Garbage Collector:       0.136s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    59 MiB) max;     37MB (    36 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    28 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8057MB (  7684 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
