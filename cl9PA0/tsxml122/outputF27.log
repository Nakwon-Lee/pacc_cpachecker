scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product24_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4e5vmpxw/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 140: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 506: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 699: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 708: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 867: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 876: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 915: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 938: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 297: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3793 (29% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3684 (97%)
  Because of loop head:            81 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         28 (1%)
  Times precision was empty:       690 (18%)
  Times precision was {false}:     92 (2%)
  Times result was cached:         2760 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      251 (7%)
  Times result was 'false':        612 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         705
  BDD entailment checks:           487
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          42
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         7788
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 22.71
Number of irrelevant predicates:          1987 (26%)
Number of preds handled by boolean abs:   524 (7%)
  Total number of models for allsat:      267
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.06

Time for post operator:                  0.473s
  Time for path formula creation:        0.449s
Time for strengthen operator:            0.044s
Time for prec operator:                  1.567s
  Time for abstraction:                  1.438s (Max:     0.017s, Count: 3793)
    Boolean abstraction:                 0.297s
    Solving time:                        0.226s (Max:     0.013s)
    Model enumeration time:              0.016s
    Time for BDD construction:           0.048s (Max:     0.012s)
Time for merge operator:                 0.015s
Time for coverage check:                 0.023s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     0.242s

Number of path formula cache hits:   12187 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.387s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               253
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         602 (count: 3303, min: 0, max: 181, avg: 0.18)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.135s
Automaton transfers with branching:                0
Automaton transfer successors:                        13268 (count: 13268, min: 1, max: 1, avg: 1.00) [1 x 13268]

CPA algorithm statistics
------------------------
Number of iterations:            10454
Max size of waitlist:            13
Average size of waitlist:        6
Number of computed successors:   11634
Max successors for one state:    2
Number of times merged:          109
Number of times stopped:         359
Number of times breaked:         28

Total time for CPA algorithm:         3.254s (Max:     0.265s)
  Time for choose from waitlist:      0.018s
  Time for precision adjustment:      1.831s
  Time for transfer relation:         1.111s
  Time for merge operator:            0.056s
  Time for stop operator:             0.057s
  Time for adding to reached set:     0.074s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   28
Avg. length of target path (in blocks):                 817 (count: 28, min: 19, max: 52, avg: 29.18)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.379s
  Counterexample analysis:                             0.232s (Max:     0.020s, Calls: 28)
    Refinement sat check:                              0.099s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.027s
  Precision update:                                    0.022s
  ARG update:                                          0.074s

Length of refined path (in blocks):                     623 (count: 28, min: 13, max: 49, avg: 22.25)
Number of affected states:                              546 (count: 28, min: 2, max: 48, avg: 19.50)
Length (states) of path with itp 'true':                 49 (count: 28, min: 0, max: 13, avg: 1.75)
Length (states) of path with itp non-trivial itp:       546 (count: 28, min: 2, max: 48, avg: 19.50)
Length (states) of path with itp 'false':                28 (count: 28, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           8 (count: 28, min: 0, max: 1, avg: 0.29)
Equal non-trivial interpolants along paths:             510 (count: 28, min: 1, max: 46, avg: 18.21)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 1058
Max. size of reached set after ref.:  599
Avg. size of reached set before ref.: 383.54
Avg. size of reached set after ref.:  43.18

Total time for CEGAR algorithm:       3.671s
Time for refinements:                 0.415s
Average time for refinement:          0.014s
Max time for refinement:              0.041s

Code Coverage
-----------------------------
  Function coverage:      0.514
  Visited lines:          107
  Total lines:            431
  Line coverage:          0.248
  Visited conditions:     32
  Total conditions:       70
  Condition coverage:     0.457

CPAchecker general statistics
-----------------------------
Number of program locations:     619
Number of CFA edges:             667
Number of relevant variables:    114
Number of functions:             37
Number of loops:                 5
Size of reached set:             1134
  Number of reached locations:   146 (24%)
    Avg states per location:     7
    Max states per location:     38 (at node N584)
  Number of reached functions:   19 (51%)
  Number of partitions:          1115
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N391 (after line 544), Function test called from node N46, stack depth 3 [520a95ff], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.183s
  Time for loading CPAs:          0.627s
  Time for loading parser:        0.469s
  Time for CFA construction:      0.938s
    Time for parsing file(s):     0.327s
    Time for AST to CFA:          0.232s
    Time for CFA sanity check:    0.071s
    Time for post-processing:     0.196s
      Time for var class.:        0.088s
Time for Analysis:                3.680s
CPU time for analysis:            3.680s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.867s
Total CPU time for CPAchecker:    5.860s
Time for statistics:              0.070s

Time for Garbage Collector:       0.099s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     36MB (    35 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8049MB (  7676 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
