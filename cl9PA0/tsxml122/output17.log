scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product24_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_k0vt337k/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 140: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 506: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 699: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 708: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 867: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 876: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 915: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 938: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 297: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            6262 (29% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6086 (97%)
  Because of loop head:            143 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         33 (1%)
  Times precision was empty:       506 (8%)
  Times precision was {false}:     145 (2%)
  Times result was cached:         4693 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      918 (15%)
  Times result was 'false':        974 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         2690
  BDD entailment checks:           2464
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          42
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         16794
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 15.80
Number of irrelevant predicates:          4622 (28%)
Number of preds handled by boolean abs:   2197 (13%)
  Total number of models for allsat:      962
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.05

Time for post operator:                  0.817s
  Time for path formula creation:        0.772s
Time for strengthen operator:            0.036s
Time for prec operator:                  3.320s
  Time for abstraction:                  3.103s (Max:     0.017s, Count: 6262)
    Boolean abstraction:                 0.772s
    Solving time:                        0.541s (Max:     0.017s)
    Model enumeration time:              0.098s
    Time for BDD construction:           0.054s (Max:     0.008s)
Time for merge operator:                 0.019s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     0.639s

Number of path formula cache hits:   15919 (63%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.688s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               303
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1888 (count: 9417, min: 0, max: 340, avg: 0.20)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.126s
Automaton transfers with branching:                0
Automaton transfer successors:                        21878 (count: 21878, min: 1, max: 1, avg: 1.00) [1 x 21878]

CPA algorithm statistics
------------------------
Number of iterations:            17092
Max size of waitlist:            34
Average size of waitlist:        14
Number of computed successors:   19280
Max successors for one state:    2
Number of times merged:          113
Number of times stopped:         761
Number of times breaked:         33

Total time for CPA algorithm:         5.483s (Max:     0.558s)
  Time for choose from waitlist:      0.036s
  Time for precision adjustment:      3.589s
  Time for transfer relation:         1.414s
  Time for merge operator:            0.066s
  Time for stop operator:             0.092s
  Time for adding to reached set:     0.115s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   33
Avg. length of target path (in blocks):                1872 (count: 33, min: 19, max: 99, avg: 56.73)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.491s
  Counterexample analysis:                             0.293s (Max:     0.016s, Calls: 33)
    Refinement sat check:                              0.130s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.046s
  Precision update:                                    0.016s
  ARG update:                                          0.063s

Length of refined path (in blocks):                    1158 (count: 33, min: 13, max: 75, avg: 35.09)
Number of affected states:                              696 (count: 33, min: 2, max: 63, avg: 21.09)
Length (states) of path with itp 'true':                429 (count: 33, min: 0, max: 43, avg: 13.00)
Length (states) of path with itp non-trivial itp:       696 (count: 33, min: 2, max: 63, avg: 21.09)
Length (states) of path with itp 'false':                33 (count: 33, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 33, min: 0, max: 1, avg: 0.15)
Equal non-trivial interpolants along paths:             658 (count: 33, min: 1, max: 62, avg: 19.94)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                33
Number of successful refinements:     33
Number of failed refinements:         0
Max. size of reached set before ref.: 1772
Max. size of reached set after ref.:  1238
Avg. size of reached set before ref.: 781.97
Avg. size of reached set after ref.:  295.82

Total time for CEGAR algorithm:       6.103s
Time for refinements:                 0.612s
Average time for refinement:          0.018s
Max time for refinement:              0.039s

Code Coverage
-----------------------------
  Function coverage:      0.514
  Visited lines:          107
  Total lines:            431
  Line coverage:          0.248
  Visited conditions:     32
  Total conditions:       70
  Condition coverage:     0.457

CPAchecker general statistics
-----------------------------
Number of program locations:     619
Number of CFA edges:             667
Number of relevant variables:    114
Number of functions:             37
Number of loops:                 5
Size of reached set:             1503
  Number of reached locations:   146 (24%)
    Avg states per location:     10
    Max states per location:     57 (at node N407)
  Number of reached functions:   19 (51%)
  Number of partitions:          1456
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N374 (before lines 522-571), Function test called from node N46, stack depth 3 [79a92277], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.119s
  Time for loading CPAs:          0.566s
  Time for loading parser:        0.456s
  Time for CFA construction:      0.977s
    Time for parsing file(s):     0.363s
    Time for AST to CFA:          0.240s
    Time for CFA sanity check:    0.070s
    Time for post-processing:     0.189s
      Time for var class.:        0.071s
Time for Analysis:                6.114s
CPU time for analysis:            6.130s
Time for analyzing result:        0.001s
Total time for CPAchecker:        8.235s
Total CPU time for CPAchecker:    8.240s
Time for statistics:              0.068s

Time for Garbage Collector:       0.124s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     38MB (    36 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8059MB (  7686 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
