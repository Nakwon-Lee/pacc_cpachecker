scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product21_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ktz_dy5c/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 549: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 601: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 633: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 642: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 686: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 802: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 811: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 866: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            5731 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5609 (98%)
  Because of loop head:            85 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         37 (1%)
  Times precision was empty:       1320 (23%)
  Times precision was {false}:     88 (2%)
  Times result was cached:         3804 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      519 (9%)
  Times result was 'false':        737 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         2333
  BDD entailment checks:           871
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          8
Number of abstraction locations:          39
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         12640
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 20.82
Number of irrelevant predicates:          3789 (30%)
Number of preds handled by boolean abs:   1526 (12%)
  Total number of models for allsat:      559
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  0.680s
  Time for path formula creation:        0.650s
Time for strengthen operator:            0.071s
Time for prec operator:                  2.396s
  Time for abstraction:                  2.249s (Max:     0.014s, Count: 5731)
    Boolean abstraction:                 0.499s
    Solving time:                        0.329s (Max:     0.013s)
    Model enumeration time:              0.048s
    Time for BDD construction:           0.075s (Max:     0.009s)
Time for merge operator:                 0.023s
Time for coverage check:                 0.027s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):     0.377s

Number of path formula cache hits:   21805 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.580s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               363
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1236 (count: 5904, min: 0, max: 254, avg: 0.21)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.179s
Automaton transfers with branching:                0
Automaton transfer successors:                        23642 (count: 23642, min: 1, max: 1, avg: 1.00) [1 x 23642]

CPA algorithm statistics
------------------------
Number of iterations:            18103
Max size of waitlist:            57
Average size of waitlist:        13
Number of computed successors:   20538
Max successors for one state:    2
Number of times merged:          731
Number of times stopped:         1127
Number of times breaked:         37

Total time for CPA algorithm:         4.768s (Max:     0.590s)
  Time for choose from waitlist:      0.033s
  Time for precision adjustment:      2.728s
  Time for transfer relation:         1.458s
  Time for merge operator:            0.079s
  Time for stop operator:             0.141s
  Time for adding to reached set:     0.131s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   37
Avg. length of target path (in blocks):                1362 (count: 37, min: 21, max: 69, avg: 36.81)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.479s
  Counterexample analysis:                             0.329s (Max:     0.021s, Calls: 37)
    Refinement sat check:                              0.141s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.040s
  Precision update:                                    0.034s
  ARG update:                                          0.056s

Length of refined path (in blocks):                     992 (count: 37, min: 15, max: 53, avg: 26.81)
Number of affected states:                              689 (count: 37, min: 9, max: 50, avg: 18.62)
Length (states) of path with itp 'true':                266 (count: 37, min: 0, max: 37, avg: 7.19)
Length (states) of path with itp non-trivial itp:       689 (count: 37, min: 9, max: 50, avg: 18.62)
Length (states) of path with itp 'false':                37 (count: 37, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 37, min: 0, max: 1, avg: 0.14)
Equal non-trivial interpolants along paths:             647 (count: 37, min: 8, max: 48, avg: 17.49)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                37
Number of successful refinements:     37
Number of failed refinements:         0
Max. size of reached set before ref.: 886
Max. size of reached set after ref.:  438
Avg. size of reached set before ref.: 601.86
Avg. size of reached set after ref.:  115.78

Total time for CEGAR algorithm:       5.334s
Time for refinements:                 0.554s
Average time for refinement:          0.014s
Max time for refinement:              0.042s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          108
  Total lines:            431
  Line coverage:          0.251
  Visited conditions:     32
  Total conditions:       70
  Condition coverage:     0.457

CPAchecker general statistics
-----------------------------
Number of program locations:     616
Number of CFA edges:             663
Number of relevant variables:    113
Number of functions:             36
Number of loops:                 5
Size of reached set:             690
  Number of reached locations:   144 (23%)
    Avg states per location:     4
    Max states per location:     18 (at node N487)
  Number of reached functions:   18 (50%)
  Number of partitions:          677
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N594 (before lines 880-925), Function test called from node N373, stack depth 3 [7c7a4986], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.066s
  Time for loading CPAs:          0.547s
  Time for loading parser:        0.482s
  Time for CFA construction:      0.933s
    Time for parsing file(s):     0.310s
    Time for AST to CFA:          0.240s
    Time for CFA sanity check:    0.052s
    Time for post-processing:     0.204s
      Time for var class.:        0.094s
Time for Analysis:                5.334s
CPU time for analysis:            5.340s
Time for analyzing result:        0.000s
Total time for CPAchecker:        7.402s
Total CPU time for CPAchecker:    7.400s
Time for statistics:              0.057s

Time for Garbage Collector:       0.142s (in 12 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     37MB (    35 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    28 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8056MB (  7683 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
