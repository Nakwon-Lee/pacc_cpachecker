scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product21_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uippo7zx/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 549: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 601: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 633: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 642: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 686: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 802: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 811: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 866: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2474 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2378 (96%)
  Because of loop head:            68 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         28 (1%)
  Times precision was empty:       326 (13%)
  Times precision was {false}:     62 (3%)
  Times result was cached:         1798 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      288 (12%)
  Times result was 'false':        402 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         705
  BDD entailment checks:           241
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          39
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         6545
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 18.70
Number of irrelevant predicates:          1343 (21%)
Number of preds handled by boolean abs:   733 (11%)
  Total number of models for allsat:      321
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.11

Time for post operator:                  0.479s
  Time for path formula creation:        0.465s
Time for strengthen operator:            0.025s
Time for prec operator:                  1.376s
  Time for abstraction:                  1.266s (Max:     0.014s, Count: 2474)
    Boolean abstraction:                 0.320s
    Solving time:                        0.181s (Max:     0.009s)
    Model enumeration time:              0.032s
    Time for BDD construction:           0.073s (Max:     0.009s)
Time for merge operator:                 0.011s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     0.213s

Number of path formula cache hits:   8794 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.432s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               284
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         700 (count: 2698, min: 0, max: 319, avg: 0.26)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.122s
Automaton transfers with branching:                0
Automaton transfer successors:                         9577 (count: 9577, min: 1, max: 1, avg: 1.00) [1 x 9577]

CPA algorithm statistics
------------------------
Number of iterations:            7516
Max size of waitlist:            12
Average size of waitlist:        4
Number of computed successors:   8444
Max successors for one state:    2
Number of times merged:          232
Number of times stopped:         367
Number of times breaked:         28

Total time for CPA algorithm:         2.859s (Max:     0.260s)
  Time for choose from waitlist:      0.019s
  Time for precision adjustment:      1.587s
  Time for transfer relation:         0.956s
  Time for merge operator:            0.082s
  Time for stop operator:             0.050s
  Time for adding to reached set:     0.044s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   28
Avg. length of target path (in blocks):                 995 (count: 28, min: 21, max: 69, avg: 35.54)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.327s
  Counterexample analysis:                             0.200s (Max:     0.019s, Calls: 28)
    Refinement sat check:                              0.088s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.041s
  ARG update:                                          0.049s

Length of refined path (in blocks):                     768 (count: 28, min: 15, max: 53, avg: 27.43)
Number of affected states:                              568 (count: 28, min: 9, max: 50, avg: 20.29)
Length (states) of path with itp 'true':                172 (count: 28, min: 0, max: 37, avg: 6.14)
Length (states) of path with itp non-trivial itp:       568 (count: 28, min: 9, max: 50, avg: 20.29)
Length (states) of path with itp 'false':                28 (count: 28, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 28, min: 0, max: 1, avg: 0.18)
Equal non-trivial interpolants along paths:             535 (count: 28, min: 8, max: 48, avg: 19.11)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 475
Max. size of reached set after ref.:  376
Avg. size of reached set before ref.: 309.04
Avg. size of reached set after ref.:  57.68

Total time for CEGAR algorithm:       3.258s
Time for refinements:                 0.397s
Average time for refinement:          0.014s
Max time for refinement:              0.036s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          108
  Total lines:            431
  Line coverage:          0.251
  Visited conditions:     32
  Total conditions:       70
  Condition coverage:     0.457

CPAchecker general statistics
-----------------------------
Number of program locations:     616
Number of CFA edges:             663
Number of relevant variables:    113
Number of functions:             36
Number of loops:                 5
Size of reached set:             638
  Number of reached locations:   144 (23%)
    Avg states per location:     4
    Max states per location:     18 (at node N487)
  Number of reached functions:   18 (50%)
  Number of partitions:          631
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N594 (before lines 880-925), Function test called from node N373, stack depth 3 [27960b1e], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.126s
  Time for loading CPAs:          0.554s
  Time for loading parser:        0.475s
  Time for CFA construction:      0.978s
    Time for parsing file(s):     0.310s
    Time for AST to CFA:          0.259s
    Time for CFA sanity check:    0.080s
    Time for post-processing:     0.215s
      Time for var class.:        0.087s
Time for Analysis:                3.258s
CPU time for analysis:            3.260s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.386s
Total CPU time for CPAchecker:    5.380s
Time for statistics:              0.080s

Time for Garbage Collector:       0.134s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     35MB (    33 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8045MB (  7673 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
