scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product21_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_b4eshj_z/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 549: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 601: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 633: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 642: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 686: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 802: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 811: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 866: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7470 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7343 (98%)
  Because of loop head:            92 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         35 (0%)
  Times precision was empty:       2601 (35%)
  Times precision was {false}:     102 (1%)
  Times result was cached:         4319 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      448 (6%)
  Times result was 'false':        647 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         2706
  BDD entailment checks:           1304
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          8
Number of abstraction locations:          39
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         15689
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 28.53
Number of irrelevant predicates:          7453 (48%)
Number of preds handled by boolean abs:   1229 (8%)
  Total number of models for allsat:      478
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  0.698s
  Time for path formula creation:        0.672s
Time for strengthen operator:            0.052s
Time for prec operator:                  2.411s
  Time for abstraction:                  2.244s (Max:     0.016s, Count: 7470)
    Boolean abstraction:                 0.446s
    Solving time:                        0.254s (Max:     0.013s)
    Model enumeration time:              0.050s
    Time for BDD construction:           0.066s (Max:     0.010s)
Time for merge operator:                 0.048s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     0.304s

Number of path formula cache hits:   25878 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.634s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               370
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1156 (count: 7266, min: 0, max: 216, avg: 0.16)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.217s
Automaton transfers with branching:                0
Automaton transfer successors:                        27878 (count: 27878, min: 1, max: 1, avg: 1.00) [1 x 27878]

CPA algorithm statistics
------------------------
Number of iterations:            22433
Max size of waitlist:            23
Average size of waitlist:        10
Number of computed successors:   24903
Max successors for one state:    2
Number of times merged:          701
Number of times stopped:         1495
Number of times breaked:         35

Total time for CPA algorithm:         4.943s (Max:     0.643s)
  Time for choose from waitlist:      0.080s
  Time for precision adjustment:      2.667s
  Time for transfer relation:         1.586s
  Time for merge operator:            0.095s
  Time for stop operator:             0.101s
  Time for adding to reached set:     0.104s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   35
Avg. length of target path (in blocks):                1227 (count: 35, min: 22, max: 69, avg: 35.06)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.476s
  Counterexample analysis:                             0.296s (Max:     0.022s, Calls: 35)
    Refinement sat check:                              0.121s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.034s
  Precision update:                                    0.026s
  ARG update:                                          0.097s

Length of refined path (in blocks):                     972 (count: 35, min: 16, max: 53, avg: 27.77)
Number of affected states:                              648 (count: 35, min: 9, max: 50, avg: 18.51)
Length (states) of path with itp 'true':                289 (count: 35, min: 0, max: 37, avg: 8.26)
Length (states) of path with itp non-trivial itp:       648 (count: 35, min: 9, max: 50, avg: 18.51)
Length (states) of path with itp 'false':                35 (count: 35, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 35, min: 0, max: 1, avg: 0.11)
Equal non-trivial interpolants along paths:             609 (count: 35, min: 8, max: 48, avg: 17.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                35
Number of successful refinements:     35
Number of failed refinements:         0
Max. size of reached set before ref.: 1373
Max. size of reached set after ref.:  482
Avg. size of reached set before ref.: 790.31
Avg. size of reached set after ref.:  155.49

Total time for CEGAR algorithm:       5.548s
Time for refinements:                 0.590s
Average time for refinement:          0.016s
Max time for refinement:              0.060s

Code Coverage
-----------------------------
  Function coverage:      0.472
  Visited lines:          92
  Total lines:            431
  Line coverage:          0.213
  Visited conditions:     30
  Total conditions:       70
  Condition coverage:     0.429

CPAchecker general statistics
-----------------------------
Number of program locations:     616
Number of CFA edges:             663
Number of relevant variables:    113
Number of functions:             36
Number of loops:                 5
Size of reached set:             543
  Number of reached locations:   123 (20%)
    Avg states per location:     4
    Max states per location:     15 (at node N305)
  Number of reached functions:   17 (47%)
  Number of partitions:          530
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N491 (before line 716), Function timeShift called from node N613, stack depth 4 [35abfeba], stack [main, runTest, test, timeShift]])
  Number of target states:       0

Time for analysis setup:          2.075s
  Time for loading CPAs:          0.483s
  Time for loading parser:        0.539s
  Time for CFA construction:      0.947s
    Time for parsing file(s):     0.318s
    Time for AST to CFA:          0.241s
    Time for CFA sanity check:    0.058s
    Time for post-processing:     0.221s
      Time for var class.:        0.101s
Time for Analysis:                5.549s
CPU time for analysis:            5.540s
Time for analyzing result:        0.001s
Total time for CPAchecker:        7.627s
Total CPU time for CPAchecker:    7.620s
Time for statistics:              0.063s

Time for Garbage Collector:       0.136s (in 15 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     37MB (    36 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     30MB (    28 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8055MB (  7681 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
