scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product20_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kt2o9qc5/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 129: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 161: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 772: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 426: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4113 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4042 (98%)
  Because of loop head:            55 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (0%)
  Times precision was empty:       834 (20%)
  Times precision was {false}:     88 (2%)
  Times result was cached:         2870 (70%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      321 (8%)
  Times result was 'false':        251 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         1290
  BDD entailment checks:           970
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          36
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         7023
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 17.17
Number of irrelevant predicates:          3035 (43%)
Number of preds handled by boolean abs:   575 (8%)
  Total number of models for allsat:      346
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  0.613s
  Time for path formula creation:        0.584s
Time for strengthen operator:            0.034s
Time for prec operator:                  1.583s
  Time for abstraction:                  1.447s (Max:     0.021s, Count: 4113)
    Boolean abstraction:                 0.288s
    Solving time:                        0.168s (Max:     0.012s)
    Model enumeration time:              0.016s
    Time for BDD construction:           0.082s (Max:     0.009s)
Time for merge operator:                 0.012s
Time for coverage check:                 0.015s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     0.184s

Number of path formula cache hits:   10812 (62%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.545s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               240
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         711 (count: 4255, min: 0, max: 183, avg: 0.17)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.150s
Automaton transfers with branching:                0
Automaton transfer successors:                        14916 (count: 14916, min: 1, max: 1, avg: 1.00) [1 x 14916]

CPA algorithm statistics
------------------------
Number of iterations:            11598
Max size of waitlist:            54
Average size of waitlist:        23
Number of computed successors:   12977
Max successors for one state:    2
Number of times merged:          160
Number of times stopped:         736
Number of times breaked:         16

Total time for CPA algorithm:         3.534s (Max:     0.427s)
  Time for choose from waitlist:      0.047s
  Time for precision adjustment:      1.806s
  Time for transfer relation:         1.262s
  Time for merge operator:            0.047s
  Time for stop operator:             0.126s
  Time for adding to reached set:     0.058s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                 644 (count: 16, min: 23, max: 50, avg: 40.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.260s
  Counterexample analysis:                             0.125s (Max:     0.017s, Calls: 16)
    Refinement sat check:                              0.046s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.026s
  Precision update:                                    0.014s
  ARG update:                                          0.068s

Length of refined path (in blocks):                     346 (count: 16, min: 13, max: 37, avg: 21.63)
Number of affected states:                              274 (count: 16, min: 2, max: 36, avg: 17.13)
Length (states) of path with itp 'true':                 56 (count: 16, min: 0, max: 12, avg: 3.50)
Length (states) of path with itp non-trivial itp:       274 (count: 16, min: 2, max: 36, avg: 17.13)
Length (states) of path with itp 'false':                16 (count: 16, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 16, min: 0, max: 1, avg: 0.25)
Equal non-trivial interpolants along paths:             254 (count: 16, min: 1, max: 34, avg: 15.88)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 1534
Max. size of reached set after ref.:  470
Avg. size of reached set before ref.: 824.44
Avg. size of reached set after ref.:  108.94

Total time for CEGAR algorithm:       3.850s
Time for refinements:                 0.313s
Average time for refinement:          0.019s
Max time for refinement:              0.048s

Code Coverage
-----------------------------
  Function coverage:      0.472
  Visited lines:          87
  Total lines:            423
  Line coverage:          0.206
  Visited conditions:     28
  Total conditions:       66
  Condition coverage:     0.424

CPAchecker general statistics
-----------------------------
Number of program locations:     604
Number of CFA edges:             647
Number of relevant variables:    109
Number of functions:             36
Number of loops:                 5
Size of reached set:             543
  Number of reached locations:   118 (20%)
    Avg states per location:     4
    Max states per location:     22 (at node N453)
  Number of reached functions:   17 (47%)
  Number of partitions:          535
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N581 (before lines 864-913), Function test called from node N128, stack depth 3 [4e26987b], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.159s
  Time for loading CPAs:          0.574s
  Time for loading parser:        0.501s
  Time for CFA construction:      0.984s
    Time for parsing file(s):     0.329s
    Time for AST to CFA:          0.252s
    Time for CFA sanity check:    0.057s
    Time for post-processing:     0.204s
      Time for var class.:        0.084s
Time for Analysis:                3.851s
CPU time for analysis:            3.850s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.014s
Total CPU time for CPAchecker:    6.010s
Time for statistics:              0.072s

Time for Garbage Collector:       0.104s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     35MB (    34 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8048MB (  7675 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
