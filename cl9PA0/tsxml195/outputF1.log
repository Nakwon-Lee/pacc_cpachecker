scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product29_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_717l2tqk/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 186: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 241: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 408: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 420: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 443: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 790: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 836: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 917: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 926: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 627: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2208 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2137 (97%)
  Because of loop head:            48 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (1%)
  Times precision was empty:       487 (22%)
  Times precision was {false}:     61 (3%)
  Times result was cached:         1467 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      193 (9%)
  Times result was 'false':        330 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         494
  BDD entailment checks:           176
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          37
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         4835
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 19.04
Number of irrelevant predicates:          1342 (28%)
Number of preds handled by boolean abs:   455 (9%)
  Total number of models for allsat:      210
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  0.412s
  Time for path formula creation:        0.397s
Time for strengthen operator:            0.022s
Time for prec operator:                  1.008s
  Time for abstraction:                  0.894s (Max:     0.014s, Count: 2208)
    Boolean abstraction:                 0.158s
    Solving time:                        0.143s (Max:     0.013s)
    Model enumeration time:              0.008s
    Time for BDD construction:           0.004s (Max:     0.001s)
Time for merge operator:                 0.017s
Time for coverage check:                 0.018s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):     0.151s

Number of path formula cache hits:   6376 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.360s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               279
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         490 (count: 2267, min: 0, max: 214, avg: 0.22)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.064s
Automaton transfers with branching:                0
Automaton transfer successors:                         8115 (count: 8115, min: 1, max: 1, avg: 1.00) [1 x 8115]

CPA algorithm statistics
------------------------
Number of iterations:            6328
Max size of waitlist:            14
Average size of waitlist:        5
Number of computed successors:   7085
Max successors for one state:    2
Number of times merged:          159
Number of times stopped:         270
Number of times breaked:         23

Total time for CPA algorithm:         2.319s (Max:     0.274s)
  Time for choose from waitlist:      0.027s
  Time for precision adjustment:      1.216s
  Time for transfer relation:         0.801s
  Time for merge operator:            0.052s
  Time for stop operator:             0.043s
  Time for adding to reached set:     0.050s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   23
Avg. length of target path (in blocks):                 745 (count: 23, min: 20, max: 52, avg: 32.39)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.245s
  Counterexample analysis:                             0.124s (Max:     0.013s, Calls: 23)
    Refinement sat check:                              0.053s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.031s
  Precision update:                                    0.025s
  ARG update:                                          0.038s

Length of refined path (in blocks):                     579 (count: 23, min: 14, max: 49, avg: 25.17)
Number of affected states:                              486 (count: 23, min: 13, max: 48, avg: 21.13)
Length (states) of path with itp 'true':                 70 (count: 23, min: 0, max: 13, avg: 3.04)
Length (states) of path with itp non-trivial itp:       486 (count: 23, min: 13, max: 48, avg: 21.13)
Length (states) of path with itp 'false':                23 (count: 23, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 23, min: 0, max: 1, avg: 0.22)
Equal non-trivial interpolants along paths:             458 (count: 23, min: 12, max: 46, avg: 19.91)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                23
Number of successful refinements:     23
Number of failed refinements:         0
Max. size of reached set before ref.: 501
Max. size of reached set after ref.:  281
Avg. size of reached set before ref.: 313.09
Avg. size of reached set after ref.:  52.74

Total time for CEGAR algorithm:       2.594s
Time for refinements:                 0.274s
Average time for refinement:          0.011s
Max time for refinement:              0.037s

Code Coverage
-----------------------------
  Function coverage:      0.444
  Visited lines:          84
  Total lines:            428
  Line coverage:          0.196
  Visited conditions:     28
  Total conditions:       70
  Condition coverage:     0.400

CPAchecker general statistics
-----------------------------
Number of program locations:     613
Number of CFA edges:             661
Number of relevant variables:    113
Number of functions:             36
Number of loops:                 5
Size of reached set:             498
  Number of reached locations:   113 (18%)
    Avg states per location:     4
    Max states per location:     16 (at node N244)
  Number of reached functions:   16 (44%)
  Number of partitions:          491
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N124 (before lines 258-303), Function test called from node N201, stack depth 3 [32faa16c], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.911s
  Time for loading CPAs:          0.467s
  Time for loading parser:        0.456s
  Time for CFA construction:      0.892s
    Time for parsing file(s):     0.327s
    Time for AST to CFA:          0.218s
    Time for CFA sanity check:    0.055s
    Time for post-processing:     0.178s
      Time for var class.:        0.070s
Time for Analysis:                2.594s
CPU time for analysis:            2.600s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.508s
Total CPU time for CPAchecker:    4.500s
Time for statistics:              0.050s

Time for Garbage Collector:       0.084s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     35MB (    33 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7982MB (  7612 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
