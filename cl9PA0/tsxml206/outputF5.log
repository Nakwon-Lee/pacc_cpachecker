scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product27_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wbim6bn8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 140: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 229: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 261: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 270: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 510: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 537: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 880: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 926: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 717: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2551 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2471 (97%)
  Because of loop head:            54 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         26 (1%)
  Times precision was empty:       411 (16%)
  Times precision was {false}:     75 (3%)
  Times result was cached:         1767 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      298 (12%)
  Times result was 'false':        340 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         699
  BDD entailment checks:           421
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          37
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         6006
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 16.10
Number of irrelevant predicates:          2002 (33%)
Number of preds handled by boolean abs:   688 (11%)
  Total number of models for allsat:      333
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.12

Time for post operator:                  0.407s
  Time for path formula creation:        0.386s
Time for strengthen operator:            0.036s
Time for prec operator:                  1.415s
  Time for abstraction:                  1.317s (Max:     0.016s, Count: 2551)
    Boolean abstraction:                 0.281s
    Solving time:                        0.182s (Max:     0.011s)
    Model enumeration time:              0.015s
    Time for BDD construction:           0.058s (Max:     0.008s)
Time for merge operator:                 0.021s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     0.197s

Number of path formula cache hits:   7179 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.349s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               283
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         751 (count: 3142, min: 0, max: 298, avg: 0.24)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.127s
Automaton transfers with branching:                0
Automaton transfer successors:                         9414 (count: 9414, min: 1, max: 1, avg: 1.00) [1 x 9414]

CPA algorithm statistics
------------------------
Number of iterations:            7349
Max size of waitlist:            13
Average size of waitlist:        6
Number of computed successors:   8236
Max successors for one state:    2
Number of times merged:          139
Number of times stopped:         361
Number of times breaked:         26

Total time for CPA algorithm:         2.861s (Max:     0.283s)
  Time for choose from waitlist:      0.040s
  Time for precision adjustment:      1.622s
  Time for transfer relation:         0.971s
  Time for merge operator:            0.045s
  Time for stop operator:             0.040s
  Time for adding to reached set:     0.048s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   26
Avg. length of target path (in blocks):                 808 (count: 26, min: 20, max: 46, avg: 31.08)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.297s
  Counterexample analysis:                             0.169s (Max:     0.016s, Calls: 26)
    Refinement sat check:                              0.078s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.029s
  Precision update:                                    0.023s
  ARG update:                                          0.050s

Length of refined path (in blocks):                     597 (count: 26, min: 13, max: 43, avg: 22.96)
Number of affected states:                              456 (count: 26, min: 9, max: 42, avg: 17.54)
Length (states) of path with itp 'true':                115 (count: 26, min: 0, max: 13, avg: 4.42)
Length (states) of path with itp non-trivial itp:       456 (count: 26, min: 9, max: 42, avg: 17.54)
Length (states) of path with itp 'false':                26 (count: 26, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 26, min: 0, max: 1, avg: 0.15)
Equal non-trivial interpolants along paths:             426 (count: 26, min: 8, max: 40, avg: 16.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                26
Number of successful refinements:     26
Number of failed refinements:         0
Max. size of reached set before ref.: 654
Max. size of reached set after ref.:  436
Avg. size of reached set before ref.: 375.58
Avg. size of reached set after ref.:  108.88

Total time for CEGAR algorithm:       3.233s
Time for refinements:                 0.353s
Average time for refinement:          0.013s
Max time for refinement:              0.037s

Code Coverage
-----------------------------
  Function coverage:      0.444
  Visited lines:          84
  Total lines:            425
  Line coverage:          0.198
  Visited conditions:     28
  Total conditions:       68
  Condition coverage:     0.412

CPAchecker general statistics
-----------------------------
Number of program locations:     608
Number of CFA edges:             653
Number of relevant variables:    114
Number of functions:             36
Number of loops:                 5
Size of reached set:             602
  Number of reached locations:   114 (19%)
    Avg states per location:     5
    Max states per location:     21 (at node N71)
  Number of reached functions:   16 (44%)
  Number of partitions:          592
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N153 (before lines 285-332), Function test called from node N46, stack depth 3 [2744dcae], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.141s
  Time for loading CPAs:          0.516s
  Time for loading parser:        0.463s
  Time for CFA construction:      0.980s
    Time for parsing file(s):     0.341s
    Time for AST to CFA:          0.271s
    Time for CFA sanity check:    0.074s
    Time for post-processing:     0.193s
      Time for var class.:        0.072s
Time for Analysis:                3.233s
CPU time for analysis:            3.230s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.377s
Total CPU time for CPAchecker:    5.370s
Time for statistics:              0.052s

Time for Garbage Collector:       0.134s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     35MB (    34 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     28MB (    26 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8045MB (  7673 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
