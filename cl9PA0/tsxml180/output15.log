scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product27_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_22t9mhl1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 642: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 722: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 745: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 853: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 862: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 917: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            10555 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10373 (98%)
  Because of loop head:            147 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         35 (0%)
  Times precision was empty:       2669 (25%)
  Times precision was {false}:     116 (1%)
  Times result was cached:         7324 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      446 (4%)
  Times result was 'false':        750 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         4118
  BDD entailment checks:           2080
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          8
Number of abstraction locations:          39
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         14575
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 25.93
Number of irrelevant predicates:          7228 (50%)
Number of preds handled by boolean abs:   973 (7%)
  Total number of models for allsat:      517
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.16

Time for post operator:                  0.894s
  Time for path formula creation:        0.866s
Time for strengthen operator:            0.063s
Time for prec operator:                  2.313s
  Time for abstraction:                  2.069s (Max:     0.015s, Count: 10555)
    Boolean abstraction:                 0.389s
    Solving time:                        0.227s (Max:     0.012s)
    Model enumeration time:              0.044s
    Time for BDD construction:           0.076s (Max:     0.010s)
Time for merge operator:                 0.053s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):     0.271s

Number of path formula cache hits:   40154 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.754s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               304
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1058 (count: 8171, min: 0, max: 232, avg: 0.13)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.265s
Automaton transfers with branching:                0
Automaton transfer successors:                        42666 (count: 42666, min: 1, max: 1, avg: 1.00) [1 x 42666]

CPA algorithm statistics
------------------------
Number of iterations:            33132
Max size of waitlist:            76
Average size of waitlist:        28
Number of computed successors:   37064
Max successors for one state:    2
Number of times merged:          1019
Number of times stopped:         2205
Number of times breaked:         35

Total time for CPA algorithm:         5.656s (Max:     0.558s)
  Time for choose from waitlist:      0.086s
  Time for precision adjustment:      2.783s
  Time for transfer relation:         1.933s
  Time for merge operator:            0.174s
  Time for stop operator:             0.174s
  Time for adding to reached set:     0.172s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   35
Avg. length of target path (in blocks):                1095 (count: 35, min: 21, max: 49, avg: 31.29)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.435s
  Counterexample analysis:                             0.193s (Max:     0.020s, Calls: 35)
    Refinement sat check:                              0.107s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.056s
  ARG update:                                          0.125s

Length of refined path (in blocks):                     810 (count: 35, min: 15, max: 38, avg: 23.14)
Number of affected states:                              523 (count: 35, min: 9, max: 37, avg: 14.94)
Length (states) of path with itp 'true':                252 (count: 35, min: 0, max: 19, avg: 7.20)
Length (states) of path with itp non-trivial itp:       523 (count: 35, min: 9, max: 37, avg: 14.94)
Length (states) of path with itp 'false':                35 (count: 35, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 35, min: 0, max: 1, avg: 0.09)
Equal non-trivial interpolants along paths:             485 (count: 35, min: 8, max: 36, avg: 13.86)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                35
Number of successful refinements:     35
Number of failed refinements:         0
Max. size of reached set before ref.: 2286
Max. size of reached set after ref.:  916
Avg. size of reached set before ref.: 1160.63
Avg. size of reached set after ref.:  219.77

Total time for CEGAR algorithm:       6.184s
Time for refinements:                 0.519s
Average time for refinement:          0.014s
Max time for refinement:              0.047s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          108
  Total lines:            433
  Line coverage:          0.249
  Visited conditions:     32
  Total conditions:       70
  Condition coverage:     0.457

CPAchecker general statistics
-----------------------------
Number of program locations:     621
Number of CFA edges:             667
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             1180
  Number of reached locations:   145 (23%)
    Avg states per location:     8
    Max states per location:     45 (at node N305)
  Number of reached functions:   18 (49%)
  Number of partitions:          1164
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N391 (before lines 555-569), Function cleanup called from node N488, stack depth 4 [18b362c2], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          2.059s
  Time for loading CPAs:          0.519s
  Time for loading parser:        0.465s
  Time for CFA construction:      0.978s
    Time for parsing file(s):     0.334s
    Time for AST to CFA:          0.264s
    Time for CFA sanity check:    0.073s
    Time for post-processing:     0.199s
      Time for var class.:        0.071s
Time for Analysis:                6.188s
CPU time for analysis:            6.190s
Time for analyzing result:        0.001s
Total time for CPAchecker:        8.250s
Total CPU time for CPAchecker:    8.250s
Time for statistics:              0.096s

Time for Garbage Collector:       0.141s (in 17 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    58 MiB) max;     38MB (    36 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     30MB (    29 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7997MB (  7626 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
