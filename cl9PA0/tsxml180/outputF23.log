scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product27_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_da4lhuni/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 642: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 722: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 745: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 853: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 862: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 917: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7265 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7167 (99%)
  Because of loop head:            74 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24 (0%)
  Times precision was empty:       2349 (32%)
  Times precision was {false}:     92 (1%)
  Times result was cached:         4539 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      285 (4%)
  Times result was 'false':        377 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         3291
  BDD entailment checks:           1647
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          39
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         9235
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 24.50
Number of irrelevant predicates:          4626 (50%)
Number of preds handled by boolean abs:   486 (5%)
  Total number of models for allsat:      350
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.23

Time for post operator:                  0.824s
  Time for path formula creation:        0.749s
Time for strengthen operator:            0.060s
Time for prec operator:                  1.974s
  Time for abstraction:                  1.725s (Max:     0.014s, Count: 7265)
    Boolean abstraction:                 0.270s
    Solving time:                        0.169s (Max:     0.009s)
    Model enumeration time:              0.015s
    Time for BDD construction:           0.035s (Max:     0.010s)
Time for merge operator:                 0.044s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     0.184s

Number of path formula cache hits:   27659 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.679s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               239
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         652 (count: 6242, min: 0, max: 129, avg: 0.10)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.156s
Automaton transfers with branching:                0
Automaton transfer successors:                        30473 (count: 30473, min: 1, max: 1, avg: 1.00) [1 x 30473]

CPA algorithm statistics
------------------------
Number of iterations:            23003
Max size of waitlist:            81
Average size of waitlist:        35
Number of computed successors:   26233
Max successors for one state:    2
Number of times merged:          822
Number of times stopped:         1765
Number of times breaked:         24

Total time for CPA algorithm:         4.856s (Max:     0.502s)
  Time for choose from waitlist:      0.075s
  Time for precision adjustment:      2.399s
  Time for transfer relation:         1.712s
  Time for merge operator:            0.115s
  Time for stop operator:             0.110s
  Time for adding to reached set:     0.161s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                 672 (count: 24, min: 21, max: 38, avg: 28.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.365s
  Counterexample analysis:                             0.189s (Max:     0.015s, Calls: 24)
    Refinement sat check:                              0.081s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.029s
  Precision update:                                    0.014s
  ARG update:                                          0.116s

Length of refined path (in blocks):                     525 (count: 24, min: 15, max: 33, avg: 21.88)
Number of affected states:                              377 (count: 24, min: 9, max: 32, avg: 15.71)
Length (states) of path with itp 'true':                124 (count: 24, min: 0, max: 19, avg: 5.17)
Length (states) of path with itp non-trivial itp:       377 (count: 24, min: 9, max: 32, avg: 15.71)
Length (states) of path with itp 'false':                24 (count: 24, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 24, min: 0, max: 1, avg: 0.08)
Equal non-trivial interpolants along paths:             351 (count: 24, min: 8, max: 30, avg: 14.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 1547
Max. size of reached set after ref.:  338
Avg. size of reached set before ref.: 1027.88
Avg. size of reached set after ref.:  63.75

Total time for CEGAR algorithm:       5.301s
Time for refinements:                 0.443s
Average time for refinement:          0.018s
Max time for refinement:              0.044s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          108
  Total lines:            433
  Line coverage:          0.249
  Visited conditions:     32
  Total conditions:       70
  Condition coverage:     0.457

CPAchecker general statistics
-----------------------------
Number of program locations:     621
Number of CFA edges:             667
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             953
  Number of reached locations:   145 (23%)
    Avg states per location:     6
    Max states per location:     39 (at node N305)
  Number of reached functions:   18 (49%)
  Number of partitions:          950
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N459 (before lines 657-704), Function test called from node N431, stack depth 3 [520f1862], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.117s
  Time for loading CPAs:          0.609s
  Time for loading parser:        0.498s
  Time for CFA construction:      0.913s
    Time for parsing file(s):     0.340s
    Time for AST to CFA:          0.180s
    Time for CFA sanity check:    0.062s
    Time for post-processing:     0.203s
      Time for var class.:        0.086s
Time for Analysis:                5.304s
CPU time for analysis:            5.300s
Time for analyzing result:        0.001s
Total time for CPAchecker:        7.436s
Total CPU time for CPAchecker:    7.430s
Time for statistics:              0.087s

Time for Garbage Collector:       0.122s (in 14 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     37MB (    35 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     29MB (    28 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7995MB (  7624 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
