scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product33_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_j95vqvs2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 239: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 559: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 605: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 771: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 780: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 881: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 396: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            14490 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14252 (98%)
  Because of loop head:            152 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         86 (1%)
  Times precision was empty:       1481 (10%)
  Times precision was {false}:     158 (1%)
  Times result was cached:         10290 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2561 (18%)
  Times result was 'false':        1771 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         12393
  BDD entailment checks:           9297
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          13
Number of abstraction locations:          43
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         59723
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 21.97
Number of irrelevant predicates:          24507 (41%)
Number of preds handled by boolean abs:   8627 (14%)
  Total number of models for allsat:      3080
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.20

Time for post operator:                  1.092s
  Time for path formula creation:        1.058s
Time for strengthen operator:            0.070s
Time for prec operator:                  7.482s
  Time for abstraction:                  7.116s (Max:     0.023s, Count: 14490)
    Boolean abstraction:                 2.051s
    Solving time:                        1.534s (Max:     0.017s)
    Model enumeration time:              0.165s
    Time for BDD construction:           0.147s (Max:     0.009s)
Time for merge operator:                 0.106s
Time for coverage check:                 0.040s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     1.699s

Number of path formula cache hits:   43561 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.944s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1095
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6409 (count: 27935, min: 0, max: 634, avg: 0.23)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.276s
Automaton transfers with branching:                0
Automaton transfer successors:                        56911 (count: 56911, min: 1, max: 1, avg: 1.00) [1 x 56911]

CPA algorithm statistics
------------------------
Number of iterations:            43444
Max size of waitlist:            43
Average size of waitlist:        12
Number of computed successors:   48988
Max successors for one state:    2
Number of times merged:          1548
Number of times stopped:         2889
Number of times breaked:         86

Total time for CPA algorithm:        11.255s (Max:     0.613s)
  Time for choose from waitlist:      0.096s
  Time for precision adjustment:      7.976s
  Time for transfer relation:         2.357s
  Time for merge operator:            0.203s
  Time for stop operator:             0.166s
  Time for adding to reached set:     0.128s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   86
Avg. length of target path (in blocks):                3655 (count: 86, min: 21, max: 77, avg: 42.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.114s
  Counterexample analysis:                             0.817s (Max:     0.018s, Calls: 86)
    Refinement sat check:                              0.336s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.057s
  Precision update:                                    0.054s
  ARG update:                                          0.143s

Length of refined path (in blocks):                    2886 (count: 86, min: 13, max: 61, avg: 33.56)
Number of affected states:                             1428 (count: 86, min: 3, max: 60, avg: 16.60)
Length (states) of path with itp 'true':               1372 (count: 86, min: 0, max: 36, avg: 15.95)
Length (states) of path with itp non-trivial itp:      1428 (count: 86, min: 3, max: 60, avg: 16.60)
Length (states) of path with itp 'false':                86 (count: 86, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          57 (count: 86, min: 0, max: 3, avg: 0.66)
Equal non-trivial interpolants along paths:            1285 (count: 86, min: 2, max: 58, avg: 14.94)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                86
Number of successful refinements:     86
Number of failed refinements:         0
Max. size of reached set before ref.: 3441
Max. size of reached set after ref.:  2256
Avg. size of reached set before ref.: 1088.15
Avg. size of reached set after ref.:  612.22

Total time for CEGAR algorithm:      12.629s
Time for refinements:                 1.319s
Average time for refinement:          0.015s
Max time for refinement:              0.047s

Code Coverage
-----------------------------
  Function coverage:      0.618
  Visited lines:          127
  Total lines:            421
  Line coverage:          0.302
  Visited conditions:     38
  Total conditions:       68
  Condition coverage:     0.559

CPAchecker general statistics
-----------------------------
Number of program locations:     595
Number of CFA edges:             639
Number of relevant variables:    112
Number of functions:             34
Number of loops:                 5
Size of reached set:             3399
  Number of reached locations:   167 (28%)
    Avg states per location:     20
    Max states per location:     140 (at node N564)
  Number of reached functions:   21 (62%)
  Number of partitions:          3258
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N443 (before lines 628-673), Function test called from node N109, stack depth 3 [2472ba04], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.065s
  Time for loading CPAs:          0.548s
  Time for loading parser:        0.499s
  Time for CFA construction:      0.927s
    Time for parsing file(s):     0.310s
    Time for AST to CFA:          0.270s
    Time for CFA sanity check:    0.062s
    Time for post-processing:     0.176s
      Time for var class.:        0.064s
Time for Analysis:               12.629s
CPU time for analysis:           12.630s
Time for analyzing result:        0.003s
Total time for CPAchecker:       14.697s
Total CPU time for CPAchecker:   14.690s
Time for statistics:              0.108s

Time for Garbage Collector:       0.245s (in 31 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     42MB (    40 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8070MB (  7696 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
