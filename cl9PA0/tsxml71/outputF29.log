scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product33_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zuxxgwrz/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 239: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 559: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 605: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 771: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 780: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 881: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 396: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            13672 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13310 (97%)
  Because of loop head:            270 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         92 (1%)
  Times precision was empty:       1517 (11%)
  Times precision was {false}:     155 (1%)
  Times result was cached:         9906 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2094 (15%)
  Times result was 'false':        1581 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         8165
  BDD entailment checks:           5079
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          14
Number of abstraction locations:          43
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         49818
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 22.15
Number of irrelevant predicates:          19917 (40%)
Number of preds handled by boolean abs:   6838 (14%)
  Total number of models for allsat:      2271
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.08

Time for post operator:                  1.004s
  Time for path formula creation:        0.932s
Time for strengthen operator:            0.064s
Time for prec operator:                  5.834s
  Time for abstraction:                  5.503s (Max:     0.018s, Count: 13672)
    Boolean abstraction:                 1.549s
    Solving time:                        1.161s (Max:     0.013s)
    Model enumeration time:              0.150s
    Time for BDD construction:           0.108s (Max:     0.010s)
Time for merge operator:                 0.081s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     1.311s

Number of path formula cache hits:   47748 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.831s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1125
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5450 (count: 20895, min: 0, max: 665, avg: 0.26)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.342s
Automaton transfers with branching:                0
Automaton transfer successors:                        53548 (count: 53548, min: 1, max: 1, avg: 1.00) [1 x 53548]

CPA algorithm statistics
------------------------
Number of iterations:            42133
Max size of waitlist:            22
Average size of waitlist:        8
Number of computed successors:   46895
Max successors for one state:    2
Number of times merged:          1543
Number of times stopped:         2787
Number of times breaked:         92

Total time for CPA algorithm:         9.415s (Max:     1.398s)
  Time for choose from waitlist:      0.047s
  Time for precision adjustment:      6.290s
  Time for transfer relation:         2.213s
  Time for merge operator:            0.182s
  Time for stop operator:             0.168s
  Time for adding to reached set:     0.133s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   92
Avg. length of target path (in blocks):                3860 (count: 92, min: 21, max: 88, avg: 41.96)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.239s
  Counterexample analysis:                             0.868s (Max:     0.021s, Calls: 92)
    Refinement sat check:                              0.321s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.043s
  Precision update:                                    0.102s
  ARG update:                                          0.133s

Length of refined path (in blocks):                    3373 (count: 92, min: 13, max: 80, avg: 36.66)
Number of affected states:                             1791 (count: 92, min: 9, max: 60, avg: 19.47)
Length (states) of path with itp 'true':               1490 (count: 92, min: 0, max: 62, avg: 16.20)
Length (states) of path with itp non-trivial itp:      1791 (count: 92, min: 9, max: 60, avg: 19.47)
Length (states) of path with itp 'false':                92 (count: 92, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         107 (count: 92, min: 0, max: 4, avg: 1.16)
Equal non-trivial interpolants along paths:            1592 (count: 92, min: 6, max: 58, avg: 17.30)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                92
Number of successful refinements:     92
Number of failed refinements:         0
Max. size of reached set before ref.: 1948
Max. size of reached set after ref.:  1671
Avg. size of reached set before ref.: 831.78
Avg. size of reached set after ref.:  441.58

Total time for CEGAR algorithm:      10.834s
Time for refinements:                 1.388s
Average time for refinement:          0.015s
Max time for refinement:              0.049s

Code Coverage
-----------------------------
  Function coverage:      0.618
  Visited lines:          127
  Total lines:            421
  Line coverage:          0.302
  Visited conditions:     38
  Total conditions:       68
  Condition coverage:     0.559

CPAchecker general statistics
-----------------------------
Number of program locations:     595
Number of CFA edges:             639
Number of relevant variables:    112
Number of functions:             34
Number of loops:                 5
Size of reached set:             6629
  Number of reached locations:   167 (28%)
    Avg states per location:     39
    Max states per location:     272 (at node N564)
  Number of reached functions:   21 (62%)
  Number of partitions:          6352
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N460 (after line 650), Function test called from node N109, stack depth 3 [1c057fc8], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.945s
  Time for loading CPAs:          0.522s
  Time for loading parser:        0.452s
  Time for CFA construction:      0.850s
    Time for parsing file(s):     0.316s
    Time for AST to CFA:          0.183s
    Time for CFA sanity check:    0.046s
    Time for post-processing:     0.182s
      Time for var class.:        0.073s
Time for Analysis:               10.834s
CPU time for analysis:           10.830s
Time for analyzing result:        0.004s
Total time for CPAchecker:       12.782s
Total CPU time for CPAchecker:   12.770s
Time for statistics:              0.130s

Time for Garbage Collector:       0.199s (in 28 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     40MB (    38 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8069MB (  7695 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
