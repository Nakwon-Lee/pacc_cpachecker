scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product47_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_htnpcsu1/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 60: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 83: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 449: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 592: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 644: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 690: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 824: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 833: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 888: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 240: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            13596 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13359 (98%)
  Because of loop head:            160 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         77 (1%)
  Times precision was empty:       1603 (12%)
  Times precision was {false}:     146 (1%)
  Times result was cached:         10543 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1304 (10%)
  Times result was 'false':        1719 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         5413
  BDD entailment checks:           2483
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          11
Number of abstraction locations:          57
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         46144
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 31.82
Number of irrelevant predicates:          13618 (30%)
Number of preds handled by boolean abs:   3837 (8%)
  Total number of models for allsat:      1367
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.05

Time for post operator:                  0.968s
  Time for path formula creation:        0.884s
Time for strengthen operator:            0.084s
Time for prec operator:                  5.129s
  Time for abstraction:                  4.849s (Max:     0.018s, Count: 13596)
    Boolean abstraction:                 1.111s
    Solving time:                        0.790s (Max:     0.013s)
    Model enumeration time:              0.098s
    Time for BDD construction:           0.136s (Max:     0.012s)
Time for merge operator:                 0.054s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     0.888s

Number of path formula cache hits:   52635 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.782s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               507
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3153 (count: 13300, min: 0, max: 285, avg: 0.24)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.200s
Automaton transfers with branching:                0
Automaton transfer successors:                        54217 (count: 54217, min: 1, max: 1, avg: 1.00) [1 x 54217]

CPA algorithm statistics
------------------------
Number of iterations:            41868
Max size of waitlist:            47
Average size of waitlist:        15
Number of computed successors:   46912
Max successors for one state:    2
Number of times merged:          1465
Number of times stopped:         2280
Number of times breaked:         77

Total time for CPA algorithm:         8.533s (Max:     0.485s)
  Time for choose from waitlist:      0.123s
  Time for precision adjustment:      5.533s
  Time for transfer relation:         2.112s
  Time for merge operator:            0.133s
  Time for stop operator:             0.157s
  Time for adding to reached set:     0.124s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   77
Avg. length of target path (in blocks):                4263 (count: 77, min: 22, max: 101, avg: 55.36)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.081s
  Counterexample analysis:                             0.696s (Max:     0.027s, Calls: 77)
    Refinement sat check:                              0.326s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.081s
  Precision update:                                    0.075s
  ARG update:                                          0.135s

Length of refined path (in blocks):                    3257 (count: 77, min: 16, max: 79, avg: 42.30)
Number of affected states:                             1706 (count: 77, min: 2, max: 70, avg: 22.16)
Length (states) of path with itp 'true':               1474 (count: 77, min: 0, max: 63, avg: 19.14)
Length (states) of path with itp non-trivial itp:      1706 (count: 77, min: 2, max: 70, avg: 22.16)
Length (states) of path with itp 'false':                77 (count: 77, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          13 (count: 77, min: 0, max: 3, avg: 0.17)
Equal non-trivial interpolants along paths:            1616 (count: 77, min: 1, max: 68, avg: 20.99)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                77
Number of successful refinements:     77
Number of failed refinements:         0
Max. size of reached set before ref.: 2004
Max. size of reached set after ref.:  1374
Avg. size of reached set before ref.: 1067.91
Avg. size of reached set after ref.:  540.73

Total time for CEGAR algorithm:       9.847s
Time for refinements:                 1.267s
Average time for refinement:          0.016s
Max time for refinement:              0.046s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          152
  Total lines:            444
  Line coverage:          0.342
  Visited conditions:     46
  Total conditions:       76
  Condition coverage:     0.605

CPAchecker general statistics
-----------------------------
Number of program locations:     639
Number of CFA edges:             691
Number of relevant variables:    114
Number of functions:             38
Number of loops:                 5
Size of reached set:             2321
  Number of reached locations:   208 (33%)
    Avg states per location:     11
    Max states per location:     50 (at node N447)
  Number of reached functions:   26 (68%)
  Number of partitions:          2254
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N644 (after line 955), Function test called from node N403, stack depth 3 [550b68f7], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.219s
  Time for loading CPAs:          0.537s
  Time for loading parser:        0.482s
  Time for CFA construction:      1.027s
    Time for parsing file(s):     0.351s
    Time for AST to CFA:          0.256s
    Time for CFA sanity check:    0.064s
    Time for post-processing:     0.230s
      Time for var class.:        0.087s
Time for Analysis:                9.847s
CPU time for analysis:            9.850s
Time for analyzing result:        0.002s
Total time for CPAchecker:       12.072s
Total CPU time for CPAchecker:   12.070s
Time for statistics:              0.099s

Time for Garbage Collector:       0.211s (in 28 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     39MB (    37 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     32MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8067MB (  7693 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
