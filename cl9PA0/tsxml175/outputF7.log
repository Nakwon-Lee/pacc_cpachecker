scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product47_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_piodruuf/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 60: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 83: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 449: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 592: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 644: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 690: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 824: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 833: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 888: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 240: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            20602 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20291 (98%)
  Because of loop head:            218 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         93 (0%)
  Times precision was empty:       2327 (11%)
  Times precision was {false}:     161 (1%)
  Times result was cached:         15525 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2589 (13%)
  Times result was 'false':        2453 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         10079
  BDD entailment checks:           5769
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          11
Number of abstraction locations:          57
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         69691
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 25.34
Number of irrelevant predicates:          22209 (32%)
Number of preds handled by boolean abs:   8107 (12%)
  Total number of models for allsat:      2675
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  1.213s
  Time for path formula creation:        1.112s
Time for strengthen operator:            0.089s
Time for prec operator:                  7.001s
  Time for abstraction:                  6.718s (Max:     0.024s, Count: 20602)
    Boolean abstraction:                 1.728s
    Solving time:                        1.246s (Max:     0.013s)
    Model enumeration time:              0.133s
    Time for BDD construction:           0.164s (Max:     0.012s)
Time for merge operator:                 0.072s
Time for coverage check:                 0.033s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     1.379s

Number of path formula cache hits:   69323 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.909s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               680
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5580 (count: 25385, min: 0, max: 406, avg: 0.22)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.357s
Automaton transfers with branching:                0
Automaton transfer successors:                        81957 (count: 81957, min: 1, max: 1, avg: 1.00) [1 x 81957]

CPA algorithm statistics
------------------------
Number of iterations:            63390
Max size of waitlist:            62
Average size of waitlist:        15
Number of computed successors:   70761
Max successors for one state:    2
Number of times merged:          2155
Number of times stopped:         3742
Number of times breaked:         93

Total time for CPA algorithm:        11.616s (Max:     0.577s)
  Time for choose from waitlist:      0.091s
  Time for precision adjustment:      7.688s
  Time for transfer relation:         2.748s
  Time for merge operator:            0.183s
  Time for stop operator:             0.193s
  Time for adding to reached set:     0.195s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   93
Avg. length of target path (in blocks):                4518 (count: 93, min: 21, max: 85, avg: 48.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.100s
  Counterexample analysis:                             0.743s (Max:     0.025s, Calls: 93)
    Refinement sat check:                              0.360s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.015s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.054s
  Precision update:                                    0.053s
  ARG update:                                          0.172s

Length of refined path (in blocks):                    3572 (count: 93, min: 15, max: 75, avg: 38.41)
Number of affected states:                             1566 (count: 93, min: 2, max: 62, avg: 16.84)
Length (states) of path with itp 'true':               1913 (count: 93, min: 0, max: 57, avg: 20.57)
Length (states) of path with itp non-trivial itp:      1566 (count: 93, min: 2, max: 62, avg: 16.84)
Length (states) of path with itp 'false':                93 (count: 93, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          12 (count: 93, min: 0, max: 2, avg: 0.13)
Equal non-trivial interpolants along paths:            1461 (count: 93, min: 1, max: 60, avg: 15.71)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                93
Number of successful refinements:     93
Number of failed refinements:         0
Max. size of reached set before ref.: 4349
Max. size of reached set after ref.:  2921
Avg. size of reached set before ref.: 1554.74
Avg. size of reached set after ref.:  895.15

Total time for CEGAR algorithm:      13.050s
Time for refinements:                 1.362s
Average time for refinement:          0.014s
Max time for refinement:              0.074s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          152
  Total lines:            444
  Line coverage:          0.342
  Visited conditions:     46
  Total conditions:       76
  Condition coverage:     0.605

CPAchecker general statistics
-----------------------------
Number of program locations:     639
Number of CFA edges:             691
Number of relevant variables:    114
Number of functions:             38
Number of loops:                 5
Size of reached set:             3225
  Number of reached locations:   208 (33%)
    Avg states per location:     15
    Max states per location:     74 (at node N492)
  Number of reached functions:   26 (68%)
  Number of partitions:          3110
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N618 (before lines 917-964), Function test called from node N403, stack depth 3 [3dc03beb], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.251s
  Time for loading CPAs:          0.606s
  Time for loading parser:        0.498s
  Time for CFA construction:      1.006s
    Time for parsing file(s):     0.333s
    Time for AST to CFA:          0.264s
    Time for CFA sanity check:    0.074s
    Time for post-processing:     0.206s
      Time for var class.:        0.082s
Time for Analysis:               13.050s
CPU time for analysis:           13.040s
Time for analyzing result:        0.002s
Total time for CPAchecker:       15.303s
Total CPU time for CPAchecker:   15.290s
Time for statistics:              0.102s

Time for Garbage Collector:       0.295s (in 40 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     41MB (    39 MiB) avg;     70MB (    67 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8071MB (  7697 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
