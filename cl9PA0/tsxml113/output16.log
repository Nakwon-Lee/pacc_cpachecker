scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product20_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jxwuq4xz/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 93: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 116: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 202: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 211: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 311: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 631: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 847: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 911: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            9525 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  9419 (99%)
  Because of loop head:            79 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         27 (0%)
  Times precision was empty:       3144 (33%)
  Times precision was {false}:     110 (1%)
  Times result was cached:         5952 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      319 (3%)
  Times result was 'false':        434 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         3950
  BDD entailment checks:           2246
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          41
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         11472
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 26.74
Number of irrelevant predicates:          5821 (51%)
Number of preds handled by boolean abs:   540 (5%)
  Total number of models for allsat:      392
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.23

Time for post operator:                  0.983s
  Time for path formula creation:        0.919s
Time for strengthen operator:            0.100s
Time for prec operator:                  2.153s
  Time for abstraction:                  1.886s (Max:     0.022s, Count: 9525)
    Boolean abstraction:                 0.289s
    Solving time:                        0.202s (Max:     0.013s)
    Model enumeration time:              0.029s
    Time for BDD construction:           0.042s (Max:     0.008s)
Time for merge operator:                 0.045s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     0.231s

Number of path formula cache hits:   35948 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.797s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               239
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         702 (count: 7930, min: 0, max: 166, avg: 0.09)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.181s
Automaton transfers with branching:                0
Automaton transfer successors:                        39101 (count: 39101, min: 1, max: 1, avg: 1.00) [1 x 39101]

CPA algorithm statistics
------------------------
Number of iterations:            29399
Max size of waitlist:            95
Average size of waitlist:        42
Number of computed successors:   33442
Max successors for one state:    2
Number of times merged:          852
Number of times stopped:         2192
Number of times breaked:         27

Total time for CPA algorithm:         5.328s (Max:     0.533s)
  Time for choose from waitlist:      0.098s
  Time for precision adjustment:      2.540s
  Time for transfer relation:         2.086s
  Time for merge operator:            0.107s
  Time for stop operator:             0.120s
  Time for adding to reached set:     0.119s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   27
Avg. length of target path (in blocks):                 750 (count: 27, min: 21, max: 38, avg: 27.78)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.442s
  Counterexample analysis:                             0.224s (Max:     0.016s, Calls: 27)
    Refinement sat check:                              0.122s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.040s
  Precision update:                                    0.019s
  ARG update:                                          0.135s

Length of refined path (in blocks):                     593 (count: 27, min: 15, max: 33, avg: 21.96)
Number of affected states:                              413 (count: 27, min: 9, max: 32, avg: 15.30)
Length (states) of path with itp 'true':                153 (count: 27, min: 0, max: 19, avg: 5.67)
Length (states) of path with itp non-trivial itp:       413 (count: 27, min: 9, max: 32, avg: 15.30)
Length (states) of path with itp 'false':                27 (count: 27, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 27, min: 0, max: 1, avg: 0.07)
Equal non-trivial interpolants along paths:             384 (count: 27, min: 8, max: 30, avg: 14.22)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                27
Number of successful refinements:     27
Number of failed refinements:         0
Max. size of reached set before ref.: 1767
Max. size of reached set after ref.:  394
Avg. size of reached set before ref.: 1183.22
Avg. size of reached set after ref.:  80.44

Total time for CEGAR algorithm:       5.868s
Time for refinements:                 0.529s
Average time for refinement:          0.019s
Max time for refinement:              0.054s

Code Coverage
-----------------------------
  Function coverage:      0.514
  Visited lines:          111
  Total lines:            431
  Line coverage:          0.258
  Visited conditions:     32
  Total conditions:       68
  Condition coverage:     0.471

CPAchecker general statistics
-----------------------------
Number of program locations:     617
Number of CFA edges:             661
Number of relevant variables:    110
Number of functions:             37
Number of loops:                 5
Size of reached set:             1042
  Number of reached locations:   149 (24%)
    Avg states per location:     6
    Max states per location:     43 (at node N5)
  Number of reached functions:   19 (51%)
  Number of partitions:          1039
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N489 (before lines 702-751), Function test called from node N155, stack depth 3 [67d8e3b0], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.346s
  Time for loading CPAs:          0.554s
  Time for loading parser:        0.596s
  Time for CFA construction:      1.097s
    Time for parsing file(s):     0.389s
    Time for AST to CFA:          0.260s
    Time for CFA sanity check:    0.064s
    Time for post-processing:     0.231s
      Time for var class.:        0.107s
Time for Analysis:                5.868s
CPU time for analysis:            5.860s
Time for analyzing result:        0.001s
Total time for CPAchecker:        8.217s
Total CPU time for CPAchecker:    8.200s
Time for statistics:              0.073s

Time for Garbage Collector:       0.170s (in 15 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     36MB (    35 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     30MB (    28 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8054MB (  7681 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
