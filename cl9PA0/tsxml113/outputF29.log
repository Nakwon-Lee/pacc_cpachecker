scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product20_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_q57reaav/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 93: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 116: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 202: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 211: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 311: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 631: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 847: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 911: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            6686 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6566 (98%)
  Because of loop head:            85 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         35 (1%)
  Times precision was empty:       1587 (24%)
  Times precision was {false}:     113 (2%)
  Times result was cached:         4591 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      395 (6%)
  Times result was 'false':        573 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         2186
  BDD entailment checks:           1286
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          8
Number of abstraction locations:          41
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         14245
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 28.04
Number of irrelevant predicates:          6944 (49%)
Number of preds handled by boolean abs:   847 (6%)
  Total number of models for allsat:      418
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.06

Time for post operator:                  0.780s
  Time for path formula creation:        0.750s
Time for strengthen operator:            0.046s
Time for prec operator:                  1.878s
  Time for abstraction:                  1.680s (Max:     0.013s, Count: 6686)
    Boolean abstraction:                 0.315s
    Solving time:                        0.191s (Max:     0.010s)
    Model enumeration time:              0.023s
    Time for BDD construction:           0.076s (Max:     0.010s)
Time for merge operator:                 0.025s
Time for coverage check:                 0.019s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     0.214s

Number of path formula cache hits:   22174 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.653s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               282
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         944 (count: 5930, min: 0, max: 154, avg: 0.16)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.175s
Automaton transfers with branching:                0
Automaton transfer successors:                        24898 (count: 24898, min: 1, max: 1, avg: 1.00) [1 x 24898]

CPA algorithm statistics
------------------------
Number of iterations:            20106
Max size of waitlist:            32
Average size of waitlist:        14
Number of computed successors:   22396
Max successors for one state:    2
Number of times merged:          450
Number of times stopped:         1231
Number of times breaked:         35

Total time for CPA algorithm:         4.371s (Max:     0.650s)
  Time for choose from waitlist:      0.056s
  Time for precision adjustment:      2.211s
  Time for transfer relation:         1.563s
  Time for merge operator:            0.062s
  Time for stop operator:             0.144s
  Time for adding to reached set:     0.104s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   35
Avg. length of target path (in blocks):                1320 (count: 35, min: 23, max: 61, avg: 37.71)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.493s
  Counterexample analysis:                             0.307s (Max:     0.024s, Calls: 35)
    Refinement sat check:                              0.160s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.025s
  Precision update:                                    0.030s
  ARG update:                                          0.114s

Length of refined path (in blocks):                     906 (count: 35, min: 15, max: 47, avg: 25.89)
Number of affected states:                              609 (count: 35, min: 2, max: 44, avg: 17.40)
Length (states) of path with itp 'true':                262 (count: 35, min: 0, max: 33, avg: 7.49)
Length (states) of path with itp non-trivial itp:       609 (count: 35, min: 2, max: 44, avg: 17.40)
Length (states) of path with itp 'false':                35 (count: 35, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           6 (count: 35, min: 0, max: 1, avg: 0.17)
Equal non-trivial interpolants along paths:             568 (count: 35, min: 1, max: 42, avg: 16.23)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                35
Number of successful refinements:     35
Number of failed refinements:         0
Max. size of reached set before ref.: 1256
Max. size of reached set after ref.:  601
Avg. size of reached set before ref.: 753.03
Avg. size of reached set after ref.:  184.06

Total time for CEGAR algorithm:       4.958s
Time for refinements:                 0.581s
Average time for refinement:          0.016s
Max time for refinement:              0.072s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          95
  Total lines:            431
  Line coverage:          0.220
  Visited conditions:     30
  Total conditions:       68
  Condition coverage:     0.441

CPAchecker general statistics
-----------------------------
Number of program locations:     617
Number of CFA edges:             661
Number of relevant variables:    110
Number of functions:             37
Number of loops:                 5
Size of reached set:             679
  Number of reached locations:   128 (21%)
    Avg states per location:     5
    Max states per location:     24 (at node N5)
  Number of reached functions:   18 (49%)
  Number of partitions:          671
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N489 (before lines 702-751), Function test called from node N155, stack depth 3 [cfb462], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.207s
  Time for loading CPAs:          0.621s
  Time for loading parser:        0.442s
  Time for CFA construction:      1.034s
    Time for parsing file(s):     0.350s
    Time for AST to CFA:          0.240s
    Time for CFA sanity check:    0.077s
    Time for post-processing:     0.250s
      Time for var class.:        0.103s
Time for Analysis:                4.958s
CPU time for analysis:            4.960s
Time for analyzing result:        0.000s
Total time for CPAchecker:        7.167s
Total CPU time for CPAchecker:    7.170s
Time for statistics:              0.052s

Time for Garbage Collector:       0.151s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     38MB (    37 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     29MB (    28 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7995MB (  7625 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
