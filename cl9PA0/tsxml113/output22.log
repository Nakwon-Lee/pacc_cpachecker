scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product20_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_iu2jecuo/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 93: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 116: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 202: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 211: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 311: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 631: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 847: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 911: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            13340 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13225 (99%)
  Because of loop head:            85 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         30 (0%)
  Times precision was empty:       3474 (26%)
  Times precision was {false}:     110 (1%)
  Times result was cached:         9423 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      333 (2%)
  Times result was 'false':        586 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         5476
  BDD entailment checks:           3292
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          41
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         16795
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 37.91
Number of irrelevant predicates:          8834 (53%)
Number of preds handled by boolean abs:   582 (3%)
  Total number of models for allsat:      378
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.14

Time for post operator:                  0.981s
  Time for path formula creation:        0.930s
Time for strengthen operator:            0.091s
Time for prec operator:                  2.360s
  Time for abstraction:                  2.050s (Max:     0.016s, Count: 13340)
    Boolean abstraction:                 0.293s
    Solving time:                        0.189s (Max:     0.013s)
    Model enumeration time:              0.029s
    Time for BDD construction:           0.083s (Max:     0.009s)
Time for merge operator:                 0.044s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.051s
Total time for SMT solver (w/o itp):     0.218s

Number of path formula cache hits:   51283 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.787s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               242
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         726 (count: 9393, min: 0, max: 152, avg: 0.08)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.276s
Automaton transfers with branching:                0
Automaton transfer successors:                        53671 (count: 53671, min: 1, max: 1, avg: 1.00) [1 x 53671]

CPA algorithm statistics
------------------------
Number of iterations:            41043
Max size of waitlist:            89
Average size of waitlist:        41
Number of computed successors:   46104
Max successors for one state:    2
Number of times merged:          1092
Number of times stopped:         3175
Number of times breaked:         30

Total time for CPA algorithm:         6.004s (Max:     0.614s)
  Time for choose from waitlist:      0.118s
  Time for precision adjustment:      2.854s
  Time for transfer relation:         2.147s
  Time for merge operator:            0.123s
  Time for stop operator:             0.216s
  Time for adding to reached set:     0.153s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   30
Avg. length of target path (in blocks):                 856 (count: 30, min: 21, max: 38, avg: 28.53)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.445s
  Counterexample analysis:                             0.198s (Max:     0.018s, Calls: 30)
    Refinement sat check:                              0.072s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.040s
  Precision update:                                    0.030s
  ARG update:                                          0.137s

Length of refined path (in blocks):                     649 (count: 30, min: 15, max: 33, avg: 21.63)
Number of affected states:                              452 (count: 30, min: 2, max: 32, avg: 15.07)
Length (states) of path with itp 'true':                167 (count: 30, min: 0, max: 19, avg: 5.57)
Length (states) of path with itp non-trivial itp:       452 (count: 30, min: 2, max: 32, avg: 15.07)
Length (states) of path with itp 'false':                30 (count: 30, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 30, min: 0, max: 1, avg: 0.10)
Equal non-trivial interpolants along paths:             419 (count: 30, min: 1, max: 30, avg: 13.97)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                30
Number of successful refinements:     30
Number of failed refinements:         0
Max. size of reached set before ref.: 2215
Max. size of reached set after ref.:  554
Avg. size of reached set before ref.: 1487.70
Avg. size of reached set after ref.:  112.73

Total time for CEGAR algorithm:       6.535s
Time for refinements:                 0.530s
Average time for refinement:          0.017s
Max time for refinement:              0.045s

Code Coverage
-----------------------------
  Function coverage:      0.514
  Visited lines:          111
  Total lines:            431
  Line coverage:          0.258
  Visited conditions:     32
  Total conditions:       68
  Condition coverage:     0.471

CPAchecker general statistics
-----------------------------
Number of program locations:     617
Number of CFA edges:             661
Number of relevant variables:    110
Number of functions:             37
Number of loops:                 5
Size of reached set:             1095
  Number of reached locations:   149 (24%)
    Avg states per location:     7
    Max states per location:     43 (at node N5)
  Number of reached functions:   19 (51%)
  Number of partitions:          1091
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N489 (before lines 702-751), Function test called from node N155, stack depth 3 [7dc26ace], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.935s
  Time for loading CPAs:          0.512s
  Time for loading parser:        0.483s
  Time for CFA construction:      0.848s
    Time for parsing file(s):     0.299s
    Time for AST to CFA:          0.211s
    Time for CFA sanity check:    0.059s
    Time for post-processing:     0.183s
      Time for var class.:        0.078s
Time for Analysis:                6.542s
CPU time for analysis:            6.530s
Time for analyzing result:        0.001s
Total time for CPAchecker:        8.481s
Total CPU time for CPAchecker:    8.480s
Time for statistics:              0.069s

Time for Garbage Collector:       0.174s (in 19 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     38MB (    37 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     30MB (    29 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8060MB (  7686 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
