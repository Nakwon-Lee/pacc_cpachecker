scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product34_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5bglkvs3/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 208: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 304: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 368: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 696: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 742: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 867: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 881: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 893: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 916: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 533: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            12119 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11843 (98%)
  Because of loop head:            134 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         142 (1%)
  Times precision was empty:       1871 (15%)
  Times precision was {false}:     215 (2%)
  Times result was cached:         8318 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1715 (14%)
  Times result was 'false':        1390 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         5618
  BDD entailment checks:           3366
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          13
Number of abstraction locations:          45
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         38298
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 19.84
Number of irrelevant predicates:          15140 (40%)
Number of preds handled by boolean abs:   4837 (13%)
  Total number of models for allsat:      1926
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.12

Time for post operator:                  0.999s
  Time for path formula creation:        0.957s
Time for strengthen operator:            0.081s
Time for prec operator:                  4.951s
  Time for abstraction:                  4.728s (Max:     0.015s, Count: 12119)
    Boolean abstraction:                 1.366s
    Solving time:                        0.934s (Max:     0.013s)
    Model enumeration time:              0.129s
    Time for BDD construction:           0.152s (Max:     0.009s)
Time for merge operator:                 0.059s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     1.063s

Number of path formula cache hits:   39674 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.863s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               746
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4295 (count: 17435, min: 0, max: 470, avg: 0.25)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.271s
Automaton transfers with branching:                0
Automaton transfer successors:                        47368 (count: 47368, min: 1, max: 1, avg: 1.00) [1 x 47368]

CPA algorithm statistics
------------------------
Number of iterations:            36080
Max size of waitlist:            47
Average size of waitlist:        14
Number of computed successors:   40529
Max successors for one state:    2
Number of times merged:          1126
Number of times stopped:         2021
Number of times breaked:         142

Total time for CPA algorithm:         8.465s (Max:     1.405s)
  Time for choose from waitlist:      0.083s
  Time for precision adjustment:      5.388s
  Time for transfer relation:         2.217s
  Time for merge operator:            0.145s
  Time for stop operator:             0.173s
  Time for adding to reached set:     0.112s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   142
Avg. length of target path (in blocks):                5540 (count: 142, min: 21, max: 73, avg: 39.01)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.685s
  Counterexample analysis:                             1.257s (Max:     0.022s, Calls: 142)
    Refinement sat check:                              0.513s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.089s
  Precision update:                                    0.097s
  ARG update:                                          0.144s

Length of refined path (in blocks):                    4676 (count: 142, min: 13, max: 65, avg: 32.93)
Number of affected states:                             1873 (count: 142, min: 2, max: 60, avg: 13.19)
Length (states) of path with itp 'true':               2661 (count: 142, min: 0, max: 47, avg: 18.74)
Length (states) of path with itp non-trivial itp:      1873 (count: 142, min: 2, max: 60, avg: 13.19)
Length (states) of path with itp 'false':               142 (count: 142, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         130 (count: 142, min: 0, max: 3, avg: 0.92)
Equal non-trivial interpolants along paths:            1601 (count: 142, min: 1, max: 58, avg: 11.27)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                142
Number of successful refinements:     142
Number of failed refinements:         0
Max. size of reached set before ref.: 1993
Max. size of reached set after ref.:  1538
Avg. size of reached set before ref.: 822.54
Avg. size of reached set after ref.:  613.83

Total time for CEGAR algorithm:      10.479s
Time for refinements:                 1.919s
Average time for refinement:          0.013s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.629
  Visited lines:          130
  Total lines:            424
  Line coverage:          0.307
  Visited conditions:     38
  Total conditions:       68
  Condition coverage:     0.559

CPAchecker general statistics
-----------------------------
Number of program locations:     601
Number of CFA edges:             645
Number of relevant variables:    112
Number of functions:             35
Number of loops:                 5
Size of reached set:             7482
  Number of reached locations:   171 (28%)
    Avg states per location:     43
    Max states per location:     342 (at node N501)
  Number of reached functions:   22 (63%)
  Number of partitions:          7113
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N48 (before lines 123-137), Function cleanup called from node N38, stack depth 4 [42c4f29c], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          2.081s
  Time for loading CPAs:          0.504s
  Time for loading parser:        0.494s
  Time for CFA construction:      0.992s
    Time for parsing file(s):     0.354s
    Time for AST to CFA:          0.246s
    Time for CFA sanity check:    0.070s
    Time for post-processing:     0.198s
      Time for var class.:        0.080s
Time for Analysis:               10.480s
CPU time for analysis:           10.480s
Time for analyzing result:        0.014s
Total time for CPAchecker:       12.571s
Total CPU time for CPAchecker:   12.570s
Time for statistics:              0.161s

Time for Garbage Collector:       0.199s (in 24 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     41MB (    39 MiB) avg;     69MB (    65 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8068MB (  7694 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
