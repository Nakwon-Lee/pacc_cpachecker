scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product34_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_k43w4he5/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 208: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 304: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 368: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 696: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 742: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 867: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 881: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 893: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 916: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 533: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            21552 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20969 (97%)
  Because of loop head:            476 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         107 (0%)
  Times precision was empty:       1091 (5%)
  Times precision was {false}:     177 (1%)
  Times result was cached:         15590 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4694 (22%)
  Times result was 'false':        3405 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         14156
  BDD entailment checks:           10450
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          14
Number of abstraction locations:          42
Max number of predicates per location:    8
Avg number of predicates per location:    4
Total predicates per abstraction:         92635
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 19.02
Number of irrelevant predicates:          32627 (35%)
Number of preds handled by boolean abs:   15732 (17%)
  Total number of models for allsat:      4510
  Max number of models for allsat:        3
  Avg number of models for allsat:        0.96

Time for post operator:                  1.257s
  Time for path formula creation:        1.179s
Time for strengthen operator:            0.070s
Time for prec operator:                 11.015s
  Time for abstraction:                 10.645s (Max:     0.017s, Count: 21552)
    Boolean abstraction:                 3.488s
    Solving time:                        2.631s (Max:     0.014s)
    Model enumeration time:              0.293s
    Time for BDD construction:           0.187s (Max:     0.013s)
Time for merge operator:                 0.054s
Time for coverage check:                 0.028s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     2.924s

Number of path formula cache hits:   64506 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.028s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               866
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        9990 (count: 41367, min: 0, max: 745, avg: 0.24)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.262s
Automaton transfers with branching:                0
Automaton transfer successors:                        82590 (count: 82590, min: 1, max: 1, avg: 1.00) [1 x 82590]

CPA algorithm statistics
------------------------
Number of iterations:            64236
Max size of waitlist:            39
Average size of waitlist:        15
Number of computed successors:   72923
Max successors for one state:    2
Number of times merged:          1853
Number of times stopped:         3665
Number of times breaked:         107

Total time for CPA algorithm:        15.103s (Max:     0.739s)
  Time for choose from waitlist:      0.067s
  Time for precision adjustment:     11.580s
  Time for transfer relation:         2.561s
  Time for merge operator:            0.151s
  Time for stop operator:             0.187s
  Time for adding to reached set:     0.139s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   107
Avg. length of target path (in blocks):                9175 (count: 107, min: 21, max: 154, avg: 85.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.958s
  Counterexample analysis:                             1.453s (Max:     0.033s, Calls: 107)
    Refinement sat check:                              0.683s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.020s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.077s
  Precision update:                                    0.060s
  ARG update:                                          0.238s

Length of refined path (in blocks):                    6765 (count: 107, min: 13, max: 137, avg: 63.22)
Number of affected states:                             3928 (count: 107, min: 2, max: 125, avg: 36.71)
Length (states) of path with itp 'true':               2730 (count: 107, min: 0, max: 72, avg: 25.51)
Length (states) of path with itp non-trivial itp:      3928 (count: 107, min: 2, max: 125, avg: 36.71)
Length (states) of path with itp 'false':               107 (count: 107, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          24 (count: 107, min: 0, max: 3, avg: 0.22)
Equal non-trivial interpolants along paths:            3797 (count: 107, min: 1, max: 124, avg: 35.49)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                107
Number of successful refinements:     107
Number of failed refinements:         0
Max. size of reached set before ref.: 2333
Max. size of reached set after ref.:  1499
Avg. size of reached set before ref.: 1018.09
Avg. size of reached set after ref.:  419.36

Total time for CEGAR algorithm:      17.376s
Time for refinements:                 2.213s
Average time for refinement:          0.020s
Max time for refinement:              0.046s

Code Coverage
-----------------------------
  Function coverage:      0.600
  Visited lines:          114
  Total lines:            424
  Line coverage:          0.269
  Visited conditions:     36
  Total conditions:       68
  Condition coverage:     0.529

CPAchecker general statistics
-----------------------------
Number of program locations:     601
Number of CFA edges:             645
Number of relevant variables:    112
Number of functions:             35
Number of loops:                 5
Size of reached set:             1789
  Number of reached locations:   150 (25%)
    Avg states per location:     11
    Max states per location:     56 (at node N501)
  Number of reached functions:   21 (60%)
  Number of partitions:          1733
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N9 (before lines 55-102), Function test called from node N87, stack depth 3 [6ec3dc11], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.234s
  Time for loading CPAs:          0.601s
  Time for loading parser:        0.490s
  Time for CFA construction:      1.009s
    Time for parsing file(s):     0.342s
    Time for AST to CFA:          0.233s
    Time for CFA sanity check:    0.061s
    Time for post-processing:     0.222s
      Time for var class.:        0.087s
Time for Analysis:               17.377s
CPU time for analysis:           17.370s
Time for analyzing result:        0.001s
Total time for CPAchecker:       19.614s
Total CPU time for CPAchecker:   19.610s
Time for statistics:              0.066s

Time for Garbage Collector:       0.368s (in 46 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     43MB (    41 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
