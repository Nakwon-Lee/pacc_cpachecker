scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product30_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2g1fzhi2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 360: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 756: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 802: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 936: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 593: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            6531 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6424 (98%)
  Because of loop head:            79 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         28 (0%)
  Times precision was empty:       3012 (46%)
  Times precision was {false}:     74 (1%)
  Times result was cached:         3238 (50%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      207 (3%)
  Times result was 'false':        458 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         1526
  BDD entailment checks:           814
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          39
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         6576
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 23.40
Number of irrelevant predicates:          3240 (49%)
Number of preds handled by boolean abs:   334 (5%)
  Total number of models for allsat:      236
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.14

Time for post operator:                  0.741s
  Time for path formula creation:        0.702s
Time for strengthen operator:            0.047s
Time for prec operator:                  1.427s
  Time for abstraction:                  1.250s (Max:     0.016s, Count: 6531)
    Boolean abstraction:                 0.236s
    Solving time:                        0.160s (Max:     0.013s)
    Model enumeration time:              0.013s
    Time for BDD construction:           0.039s (Max:     0.009s)
Time for merge operator:                 0.032s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     0.173s

Number of path formula cache hits:   23307 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.617s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               231
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         350 (count: 5523, min: 0, max: 119, avg: 0.06)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.142s
Automaton transfers with branching:                0
Automaton transfer successors:                        23773 (count: 23773, min: 1, max: 1, avg: 1.00) [1 x 23773]

CPA algorithm statistics
------------------------
Number of iterations:            18157
Max size of waitlist:            52
Average size of waitlist:        21
Number of computed successors:   20199
Max successors for one state:    2
Number of times merged:          356
Number of times stopped:         945
Number of times breaked:         28

Total time for CPA algorithm:         3.821s (Max:     0.527s)
  Time for choose from waitlist:      0.054s
  Time for precision adjustment:      1.719s
  Time for transfer relation:         1.581s
  Time for merge operator:            0.075s
  Time for stop operator:             0.110s
  Time for adding to reached set:     0.088s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   28
Avg. length of target path (in blocks):                 755 (count: 28, min: 19, max: 49, avg: 26.96)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.385s
  Counterexample analysis:                             0.218s (Max:     0.018s, Calls: 28)
    Refinement sat check:                              0.091s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.040s
  Precision update:                                    0.028s
  ARG update:                                          0.067s

Length of refined path (in blocks):                     520 (count: 28, min: 13, max: 40, avg: 18.57)
Number of affected states:                              373 (count: 28, min: 2, max: 39, avg: 13.32)
Length (states) of path with itp 'true':                119 (count: 28, min: 0, max: 13, avg: 4.25)
Length (states) of path with itp non-trivial itp:       373 (count: 28, min: 2, max: 39, avg: 13.32)
Length (states) of path with itp 'false':                28 (count: 28, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 28, min: 0, max: 1, avg: 0.11)
Equal non-trivial interpolants along paths:             342 (count: 28, min: 1, max: 38, avg: 12.21)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 1447
Max. size of reached set after ref.:  825
Avg. size of reached set before ref.: 815.89
Avg. size of reached set after ref.:  179.82

Total time for CEGAR algorithm:       4.340s
Time for refinements:                 0.497s
Average time for refinement:          0.017s
Max time for refinement:              0.057s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          103
  Total lines:            431
  Line coverage:          0.239
  Visited conditions:     30
  Total conditions:       70
  Condition coverage:     0.429

CPAchecker general statistics
-----------------------------
Number of program locations:     619
Number of CFA edges:             667
Number of relevant variables:    115
Number of functions:             37
Number of loops:                 5
Size of reached set:             987
  Number of reached locations:   138 (22%)
    Avg states per location:     7
    Max states per location:     38 (at node N58)
  Number of reached functions:   18 (49%)
  Number of partitions:          970
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N202 (before lines 383-430), Function test called from node N580, stack depth 3 [3f2feab7], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.261s
  Time for loading CPAs:          0.615s
  Time for loading parser:        0.536s
  Time for CFA construction:      0.991s
    Time for parsing file(s):     0.359s
    Time for AST to CFA:          0.220s
    Time for CFA sanity check:    0.053s
    Time for post-processing:     0.219s
      Time for var class.:        0.093s
Time for Analysis:                4.340s
CPU time for analysis:            4.350s
Time for analyzing result:        0.001s
Total time for CPAchecker:        6.605s
Total CPU time for CPAchecker:    6.610s
Time for statistics:              0.095s

Time for Garbage Collector:       0.117s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     35MB (    34 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     29MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8049MB (  7676 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
