scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product19_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7820mybs/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 273: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 712: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 744: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 753: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 768: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 791: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 937: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 454: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3009 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2946 (98%)
  Because of loop head:            41 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         22 (1%)
  Times precision was empty:       491 (16%)
  Times precision was {false}:     90 (3%)
  Times result was cached:         2164 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      264 (9%)
  Times result was 'false':        248 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         1065
  BDD entailment checks:           485
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          5
Number of abstraction locations:          42
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         5309
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 15.00
Number of irrelevant predicates:          1811 (34%)
Number of preds handled by boolean abs:   493 (9%)
  Total number of models for allsat:      290
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.10

Time for post operator:                  0.650s
  Time for path formula creation:        0.626s
Time for strengthen operator:            0.048s
Time for prec operator:                  1.337s
  Time for abstraction:                  1.226s (Max:     0.018s, Count: 3009)
    Boolean abstraction:                 0.225s
    Solving time:                        0.181s (Max:     0.012s)
    Model enumeration time:              0.016s
    Time for BDD construction:           0.036s (Max:     0.012s)
Time for merge operator:                 0.052s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     0.197s

Number of path formula cache hits:   8899 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.601s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               240
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         570 (count: 3097, min: 0, max: 179, avg: 0.18)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.100s
Automaton transfers with branching:                0
Automaton transfer successors:                        11390 (count: 11390, min: 1, max: 1, avg: 1.00) [1 x 11390]

CPA algorithm statistics
------------------------
Number of iterations:            8933
Max size of waitlist:            16
Average size of waitlist:        6
Number of computed successors:   9960
Max successors for one state:    2
Number of times merged:          290
Number of times stopped:         629
Number of times breaked:         22

Total time for CPA algorithm:         3.108s (Max:     0.372s)
  Time for choose from waitlist:      0.037s
  Time for precision adjustment:      1.518s
  Time for transfer relation:         1.210s
  Time for merge operator:            0.092s
  Time for stop operator:             0.074s
  Time for adding to reached set:     0.054s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   22
Avg. length of target path (in blocks):                 896 (count: 22, min: 26, max: 58, avg: 40.73)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.316s
  Counterexample analysis:                             0.176s (Max:     0.019s, Calls: 22)
    Refinement sat check:                              0.093s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.036s
  ARG update:                                          0.061s

Length of refined path (in blocks):                     634 (count: 22, min: 17, max: 50, avg: 28.82)
Number of affected states:                              469 (count: 22, min: 6, max: 49, avg: 21.32)
Length (states) of path with itp 'true':                143 (count: 22, min: 0, max: 19, avg: 6.50)
Length (states) of path with itp non-trivial itp:       469 (count: 22, min: 6, max: 49, avg: 21.32)
Length (states) of path with itp 'false':                22 (count: 22, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 22, min: 0, max: 1, avg: 0.05)
Equal non-trivial interpolants along paths:             446 (count: 22, min: 5, max: 48, avg: 20.27)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 850
Max. size of reached set after ref.:  564
Avg. size of reached set before ref.: 583.45
Avg. size of reached set after ref.:  192.68

Total time for CEGAR algorithm:       3.504s
Time for refinements:                 0.372s
Average time for refinement:          0.016s
Max time for refinement:              0.041s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          92
  Total lines:            428
  Line coverage:          0.215
  Visited conditions:     30
  Total conditions:       68
  Condition coverage:     0.441

CPAchecker general statistics
-----------------------------
Number of program locations:     614
Number of CFA edges:             659
Number of relevant variables:    110
Number of functions:             37
Number of loops:                 5
Size of reached set:             487
  Number of reached locations:   126 (21%)
    Avg states per location:     3
    Max states per location:     16 (at node N539)
  Number of reached functions:   18 (49%)
  Number of partitions:          483
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N9 (before lines 55-102), Function test called from node N604, stack depth 3 [52d96367], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.226s
  Time for loading CPAs:          0.547s
  Time for loading parser:        0.525s
  Time for CFA construction:      1.033s
    Time for parsing file(s):     0.386s
    Time for AST to CFA:          0.252s
    Time for CFA sanity check:    0.064s
    Time for post-processing:     0.206s
      Time for var class.:        0.079s
Time for Analysis:                3.504s
CPU time for analysis:            3.510s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.732s
Total CPU time for CPAchecker:    5.740s
Time for statistics:              0.074s

Time for Garbage Collector:       0.135s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     35MB (    34 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8045MB (  7673 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
