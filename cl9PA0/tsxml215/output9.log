scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product47_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__2w_hq6e/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 191: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 200: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 255: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 761: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 819: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 940: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 972: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 986: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 598: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            34055 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  33432 (98%)
  Because of loop head:            472 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         151 (0%)
  Times precision was empty:       4549 (13%)
  Times precision was {false}:     479 (1%)
  Times result was cached:         21009 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8018 (24%)
  Times result was 'false':        4036 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         23775
  BDD entailment checks:           17021
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          27
Number of abstraction locations:          58
Max number of predicates per location:    14
Avg number of predicates per location:    8
Total predicates per abstraction:         179168
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 21.09
Number of irrelevant predicates:          57848 (32%)
Number of preds handled by boolean abs:   46265 (26%)
  Total number of models for allsat:      11292
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.41

Time for post operator:                  1.786s
  Time for path formula creation:        1.682s
Time for strengthen operator:            0.159s
Time for prec operator:                 18.759s
  Time for abstraction:                 18.141s (Max:     0.037s, Count: 34055)
    Boolean abstraction:                 5.867s
    Solving time:                        4.369s (Max:     0.017s)
    Model enumeration time:              0.494s
    Time for BDD construction:           0.317s (Max:     0.015s)
Time for merge operator:                 0.103s
Time for coverage check:                 0.059s
  Time for BDD entailment checks:        0.048s
Total time for SMT solver (w/o itp):     4.863s

Number of path formula cache hits:   106890 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.439s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               6944
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       25354 (count: 77300, min: 0, max: 1500, avg: 0.33)
Time for BDD node cleanup:                             0.024s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.433s
Automaton transfers with branching:                0
Automaton transfer successors:                       126433 (count: 126433, min: 1, max: 1, avg: 1.00) [1 x 126433]

CPA algorithm statistics
------------------------
Number of iterations:            100342
Max size of waitlist:            28
Average size of waitlist:        10
Number of computed successors:   111483
Max successors for one state:    2
Number of times merged:          3377
Number of times stopped:         6593
Number of times breaked:         151

Total time for CPA algorithm:        25.290s (Max:     1.877s)
  Time for choose from waitlist:      0.179s
  Time for precision adjustment:     19.672s
  Time for transfer relation:         3.895s
  Time for merge operator:            0.269s
  Time for stop operator:             0.305s
  Time for adding to reached set:     0.313s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   151
Avg. length of target path (in blocks):               10802 (count: 151, min: 25, max: 149, avg: 71.54)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.366s
  Counterexample analysis:                             1.793s (Max:     0.055s, Calls: 151)
    Refinement sat check:                              0.717s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.063s
  Precision update:                                    0.091s
  ARG update:                                          0.310s

Length of refined path (in blocks):                    8734 (count: 151, min: 14, max: 133, avg: 57.84)
Number of affected states:                             2949 (count: 151, min: 1, max: 104, avg: 19.53)
Length (states) of path with itp 'true':               5634 (count: 151, min: 0, max: 109, avg: 37.31)
Length (states) of path with itp non-trivial itp:      2949 (count: 151, min: 1, max: 104, avg: 19.53)
Length (states) of path with itp 'false':               151 (count: 151, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         103 (count: 151, min: 0, max: 5, avg: 0.68)
Equal non-trivial interpolants along paths:            2695 (count: 151, min: 0, max: 100, avg: 17.85)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                151
Number of successful refinements:     151
Number of failed refinements:         0
Max. size of reached set before ref.: 4773
Max. size of reached set after ref.:  3694
Avg. size of reached set before ref.: 1941.56
Avg. size of reached set after ref.:  1305.37

Total time for CEGAR algorithm:      28.158s
Time for refinements:                 2.755s
Average time for refinement:          0.018s
Max time for refinement:              0.077s

Code Coverage
-----------------------------
  Function coverage:      0.692
  Visited lines:          139
  Total lines:            444
  Line coverage:          0.313
  Visited conditions:     44
  Total conditions:       76
  Condition coverage:     0.579

CPAchecker general statistics
-----------------------------
Number of program locations:     642
Number of CFA edges:             695
Number of relevant variables:    116
Number of functions:             39
Number of loops:                 5
Size of reached set:             4791
  Number of reached locations:   192 (30%)
    Avg states per location:     24
    Max states per location:     116 (at node N572)
  Number of reached functions:   27 (69%)
  Number of partitions:          4703
    Avg size of partitions:      1
    Max size of partitions:      17 (with key [N157 (after line 309), Function test called from node N219, stack depth 3 [4a033710], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.114s
  Time for loading CPAs:          0.530s
  Time for loading parser:        0.493s
  Time for CFA construction:      0.972s
    Time for parsing file(s):     0.365s
    Time for AST to CFA:          0.259s
    Time for CFA sanity check:    0.064s
    Time for post-processing:     0.173s
      Time for var class.:        0.061s
Time for Analysis:               28.159s
CPU time for analysis:           28.150s
Time for analyzing result:        0.003s
Total time for CPAchecker:       30.275s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.177s

Time for Garbage Collector:       0.612s (in 81 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 77MB (    73 MiB) max;     46MB (    44 MiB) avg;     79MB (    76 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     34MB (    32 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8152MB (  7774 MiB) max;   8081MB (  7707 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
