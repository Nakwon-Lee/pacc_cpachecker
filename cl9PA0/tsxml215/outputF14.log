scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product47_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_m2rk74k2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 191: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 200: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 255: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 761: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 819: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 940: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 972: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 986: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 598: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            21547 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21274 (99%)
  Because of loop head:            169 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         104 (0%)
  Times precision was empty:       869 (4%)
  Times precision was {false}:     476 (2%)
  Times result was cached:         12846 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7356 (34%)
  Times result was 'false':        3381 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         16010
  BDD entailment checks:           11288
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          28
Number of abstraction locations:          58
Max number of predicates per location:    14
Avg number of predicates per location:    8
Total predicates per abstraction:         144840
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 18.49
Number of irrelevant predicates:          29664 (20%)
Number of preds handled by boolean abs:   50481 (35%)
  Total number of models for allsat:      11786
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.60

Time for post operator:                  1.449s
  Time for path formula creation:        1.385s
Time for strengthen operator:            0.106s
Time for prec operator:                 17.276s
  Time for abstraction:                 16.880s (Max:     0.024s, Count: 21547)
    Boolean abstraction:                 5.931s
    Solving time:                        4.236s (Max:     0.013s)
    Model enumeration time:              0.591s
    Time for BDD construction:           0.333s (Max:     0.012s)
Time for merge operator:                 0.120s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):     4.827s

Number of path formula cache hits:   64593 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.224s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               8271
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       25328 (count: 64135, min: 0, max: 1762, avg: 0.39)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.340s
Automaton transfers with branching:                0
Automaton transfer successors:                        82286 (count: 82286, min: 1, max: 1, avg: 1.00) [1 x 82286]

CPA algorithm statistics
------------------------
Number of iterations:            64341
Max size of waitlist:            22
Average size of waitlist:        8
Number of computed successors:   72258
Max successors for one state:    2
Number of times merged:          2361
Number of times stopped:         4176
Number of times breaked:         104

Total time for CPA algorithm:        21.855s (Max:     2.424s)
  Time for choose from waitlist:      0.062s
  Time for precision adjustment:     17.924s
  Time for transfer relation:         2.889s
  Time for merge operator:            0.243s
  Time for stop operator:             0.177s
  Time for adding to reached set:     0.181s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   104
Avg. length of target path (in blocks):                7114 (count: 104, min: 26, max: 141, avg: 68.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.683s
  Counterexample analysis:                             1.261s (Max:     0.085s, Calls: 104)
    Refinement sat check:                              0.459s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.083s
  Precision update:                                    0.102s
  ARG update:                                          0.153s

Length of refined path (in blocks):                    5577 (count: 104, min: 14, max: 119, avg: 53.63)
Number of affected states:                             2724 (count: 104, min: 1, max: 104, avg: 26.19)
Length (states) of path with itp 'true':               2749 (count: 104, min: 0, max: 88, avg: 26.43)
Length (states) of path with itp non-trivial itp:      2724 (count: 104, min: 1, max: 104, avg: 26.19)
Length (states) of path with itp 'false':               104 (count: 104, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          95 (count: 104, min: 0, max: 5, avg: 0.91)
Equal non-trivial interpolants along paths:            2525 (count: 104, min: 0, max: 100, avg: 24.28)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                104
Number of successful refinements:     104
Number of failed refinements:         0
Max. size of reached set before ref.: 4356
Max. size of reached set after ref.:  3550
Avg. size of reached set before ref.: 1550.83
Avg. size of reached set after ref.:  985.60

Total time for CEGAR algorithm:      23.887s
Time for refinements:                 1.945s
Average time for refinement:          0.018s
Max time for refinement:              0.117s

Code Coverage
-----------------------------
  Function coverage:      0.692
  Visited lines:          139
  Total lines:            444
  Line coverage:          0.313
  Visited conditions:     44
  Total conditions:       76
  Condition coverage:     0.579

CPAchecker general statistics
-----------------------------
Number of program locations:     642
Number of CFA edges:             695
Number of relevant variables:    116
Number of functions:             39
Number of loops:                 5
Size of reached set:             5918
  Number of reached locations:   192 (30%)
    Avg states per location:     30
    Max states per location:     135 (at node N572)
  Number of reached functions:   27 (69%)
  Number of partitions:          5817
    Avg size of partitions:      1
    Max size of partitions:      21 (with key [N157 (after line 309), Function test called from node N219, stack depth 3 [1972ffee], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.216s
  Time for loading CPAs:          0.568s
  Time for loading parser:        0.478s
  Time for CFA construction:      1.021s
    Time for parsing file(s):     0.339s
    Time for AST to CFA:          0.282s
    Time for CFA sanity check:    0.075s
    Time for post-processing:     0.204s
      Time for var class.:        0.084s
Time for Analysis:               23.887s
CPU time for analysis:           23.890s
Time for analyzing result:        0.004s
Total time for CPAchecker:       26.106s
Total CPU time for CPAchecker:   26.100s
Time for statistics:              0.146s

Time for Garbage Collector:       0.501s (in 65 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    70 MiB) max;     46MB (    44 MiB) avg;     77MB (    73 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8153MB (  7775 MiB) max;   8082MB (  7707 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
