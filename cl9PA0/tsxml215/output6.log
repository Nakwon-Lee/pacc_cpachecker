scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product47_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ablyir5r/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 191: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 200: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 255: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 761: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 819: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 940: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 972: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 986: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 598: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            27905 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  27610 (99%)
  Because of loop head:            190 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         105 (0%)
  Times precision was empty:       1200 (4%)
  Times precision was {false}:     652 (2%)
  Times result was cached:         17062 (61%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8991 (32%)
  Times result was 'false':        4362 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         18564
  BDD entailment checks:           12190
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          25
Number of abstraction locations:          58
Max number of predicates per location:    14
Avg number of predicates per location:    8
Total predicates per abstraction:         178595
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 18.52
Number of irrelevant predicates:          45992 (26%)
Number of preds handled by boolean abs:   59141 (33%)
  Total number of models for allsat:      14854
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.65

Time for post operator:                  1.554s
  Time for path formula creation:        1.485s
Time for strengthen operator:            0.132s
Time for prec operator:                 19.750s
  Time for abstraction:                 19.366s (Max:     0.024s, Count: 27905)
    Boolean abstraction:                 6.927s
    Solving time:                        5.107s (Max:     0.013s)
    Model enumeration time:              0.635s
    Time for BDD construction:           0.398s (Max:     0.013s)
Time for merge operator:                 0.097s
Time for coverage check:                 0.057s
  Time for BDD entailment checks:        0.050s
Total time for SMT solver (w/o itp):     5.742s

Number of path formula cache hits:   81846 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.243s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               9017
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       29252 (count: 76660, min: 0, max: 1362, avg: 0.38)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.256s
Automaton transfers with branching:                0
Automaton transfer successors:                       107994 (count: 107994, min: 1, max: 1, avg: 1.00) [1 x 107994]

CPA algorithm statistics
------------------------
Number of iterations:            83646
Max size of waitlist:            32
Average size of waitlist:        9
Number of computed successors:   94042
Max successors for one state:    2
Number of times merged:          3187
Number of times stopped:         5225
Number of times breaked:         105

Total time for CPA algorithm:        24.752s (Max:     2.258s)
  Time for choose from waitlist:      0.107s
  Time for precision adjustment:     20.493s
  Time for transfer relation:         3.056s
  Time for merge operator:            0.224s
  Time for stop operator:             0.195s
  Time for adding to reached set:     0.199s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   105
Avg. length of target path (in blocks):                7275 (count: 105, min: 25, max: 147, avg: 69.29)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.765s
  Counterexample analysis:                             1.334s (Max:     0.077s, Calls: 105)
    Refinement sat check:                              0.473s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.048s
  Precision update:                                    0.069s
  ARG update:                                          0.220s

Length of refined path (in blocks):                    5671 (count: 105, min: 14, max: 131, avg: 54.01)
Number of affected states:                             2667 (count: 105, min: 1, max: 81, avg: 25.40)
Length (states) of path with itp 'true':               2899 (count: 105, min: 0, max: 88, avg: 27.61)
Length (states) of path with itp non-trivial itp:      2667 (count: 105, min: 1, max: 81, avg: 25.40)
Length (states) of path with itp 'false':               105 (count: 105, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          86 (count: 105, min: 0, max: 5, avg: 0.82)
Equal non-trivial interpolants along paths:            2476 (count: 105, min: 0, max: 78, avg: 23.58)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                105
Number of successful refinements:     105
Number of failed refinements:         0
Max. size of reached set before ref.: 5357
Max. size of reached set after ref.:  3325
Avg. size of reached set before ref.: 1746.16
Avg. size of reached set after ref.:  1005.30

Total time for CEGAR algorithm:      26.888s
Time for refinements:                 2.039s
Average time for refinement:          0.019s
Max time for refinement:              0.093s

Code Coverage
-----------------------------
  Function coverage:      0.692
  Visited lines:          139
  Total lines:            444
  Line coverage:          0.313
  Visited conditions:     44
  Total conditions:       76
  Condition coverage:     0.579

CPAchecker general statistics
-----------------------------
Number of program locations:     642
Number of CFA edges:             695
Number of relevant variables:    116
Number of functions:             39
Number of loops:                 5
Size of reached set:             6666
  Number of reached locations:   192 (30%)
    Avg states per location:     34
    Max states per location:     167 (at node N572)
  Number of reached functions:   27 (69%)
  Number of partitions:          6541
    Avg size of partitions:      1
    Max size of partitions:      21 (with key [N157 (after line 309), Function test called from node N219, stack depth 3 [71b9ac49], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.069s
  Time for loading CPAs:          0.504s
  Time for loading parser:        0.497s
  Time for CFA construction:      0.949s
    Time for parsing file(s):     0.308s
    Time for AST to CFA:          0.241s
    Time for CFA sanity check:    0.076s
    Time for post-processing:     0.196s
      Time for var class.:        0.080s
Time for Analysis:               26.888s
CPU time for analysis:           26.880s
Time for analyzing result:        0.004s
Total time for CPAchecker:       28.959s
Total CPU time for CPAchecker:   28.950s
Time for statistics:              0.146s

Time for Garbage Collector:       0.635s (in 78 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 78MB (    74 MiB) max;     47MB (    45 MiB) avg;     81MB (    77 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8153MB (  7775 MiB) max;   8087MB (  7713 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
