scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product17_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vu783je0/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 301: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 371: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 769: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 905: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4373 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4277 (98%)
  Because of loop head:            62 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         34 (1%)
  Times precision was empty:       932 (21%)
  Times precision was {false}:     97 (2%)
  Times result was cached:         2879 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      465 (11%)
  Times result was 'false':        437 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         2220
  BDD entailment checks:           772
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          8
Number of abstraction locations:          36
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         10602
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 18.86
Number of irrelevant predicates:          3748 (35%)
Number of preds handled by boolean abs:   1296 (12%)
  Total number of models for allsat:      497
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  0.545s
  Time for path formula creation:        0.508s
Time for strengthen operator:            0.052s
Time for prec operator:                  2.038s
  Time for abstraction:                  1.861s (Max:     0.017s, Count: 4373)
    Boolean abstraction:                 0.449s
    Solving time:                        0.309s (Max:     0.015s)
    Model enumeration time:              0.030s
    Time for BDD construction:           0.076s (Max:     0.010s)
Time for merge operator:                 0.028s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     0.339s

Number of path formula cache hits:   17049 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.443s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               374
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1161 (count: 5137, min: 0, max: 249, avg: 0.23)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.080s
Automaton transfers with branching:                0
Automaton transfer successors:                        18949 (count: 18949, min: 1, max: 1, avg: 1.00) [1 x 18949]

CPA algorithm statistics
------------------------
Number of iterations:            14509
Max size of waitlist:            38
Average size of waitlist:        12
Number of computed successors:   16551
Max successors for one state:    2
Number of times merged:          724
Number of times stopped:         997
Number of times breaked:         34

Total time for CPA algorithm:         3.872s (Max:     0.380s)
  Time for choose from waitlist:      0.025s
  Time for precision adjustment:      2.292s
  Time for transfer relation:         1.157s
  Time for merge operator:            0.085s
  Time for stop operator:             0.107s
  Time for adding to reached set:     0.059s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   34
Avg. length of target path (in blocks):                1139 (count: 34, min: 22, max: 61, avg: 33.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.411s
  Counterexample analysis:                             0.211s (Max:     0.016s, Calls: 34)
    Refinement sat check:                              0.078s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.061s
  Precision update:                                    0.041s
  ARG update:                                          0.073s

Length of refined path (in blocks):                     895 (count: 34, min: 16, max: 47, avg: 26.32)
Number of affected states:                              588 (count: 34, min: 9, max: 44, avg: 17.29)
Length (states) of path with itp 'true':                273 (count: 34, min: 0, max: 33, avg: 8.03)
Length (states) of path with itp non-trivial itp:       588 (count: 34, min: 9, max: 44, avg: 17.29)
Length (states) of path with itp 'false':                34 (count: 34, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 34, min: 0, max: 1, avg: 0.12)
Equal non-trivial interpolants along paths:             550 (count: 34, min: 8, max: 42, avg: 16.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                34
Number of successful refinements:     34
Number of failed refinements:         0
Max. size of reached set before ref.: 780
Max. size of reached set after ref.:  386
Avg. size of reached set before ref.: 571.65
Avg. size of reached set after ref.:  136.32

Total time for CEGAR algorithm:       4.350s
Time for refinements:                 0.467s
Average time for refinement:          0.013s
Max time for refinement:              0.040s

Code Coverage
-----------------------------
  Function coverage:      0.457
  Visited lines:          88
  Total lines:            423
  Line coverage:          0.208
  Visited conditions:     28
  Total conditions:       66
  Condition coverage:     0.424

CPAchecker general statistics
-----------------------------
Number of program locations:     601
Number of CFA edges:             643
Number of relevant variables:    110
Number of functions:             35
Number of loops:                 5
Size of reached set:             317
  Number of reached locations:   116 (19%)
    Avg states per location:     2
    Max states per location:     8 (at node N105)
  Number of reached functions:   16 (46%)
  Number of partitions:          313
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N67 (before lines 148-193), Function test called from node N591, stack depth 3 [361c4981], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.170s
  Time for loading CPAs:          0.574s
  Time for loading parser:        0.498s
  Time for CFA construction:      0.993s
    Time for parsing file(s):     0.299s
    Time for AST to CFA:          0.263s
    Time for CFA sanity check:    0.062s
    Time for post-processing:     0.253s
      Time for var class.:        0.121s
Time for Analysis:                4.350s
CPU time for analysis:            4.350s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.523s
Total CPU time for CPAchecker:    6.520s
Time for statistics:              0.055s

Time for Garbage Collector:       0.099s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     36MB (    35 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     29MB (    28 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8052MB (  7679 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
