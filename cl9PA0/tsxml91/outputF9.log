scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product22_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9qkc2i8k/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 508: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 631: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 640: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 695: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 867: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 899: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 908: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 920: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 943: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3725 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3596 (97%)
  Because of loop head:            100 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29 (1%)
  Times precision was empty:       433 (12%)
  Times precision was {false}:     125 (3%)
  Times result was cached:         2514 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      653 (18%)
  Times result was 'false':        503 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         1516
  BDD entailment checks:           906
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          8
Number of abstraction locations:          41
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         11623
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 14.94
Number of irrelevant predicates:          4162 (36%)
Number of preds handled by boolean abs:   1779 (15%)
  Total number of models for allsat:      714
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  0.640s
  Time for path formula creation:        0.614s
Time for strengthen operator:            0.041s
Time for prec operator:                  2.432s
  Time for abstraction:                  2.279s (Max:     0.038s, Count: 3725)
    Boolean abstraction:                 0.635s
    Solving time:                        0.456s (Max:     0.020s)
    Model enumeration time:              0.039s
    Time for BDD construction:           0.109s (Max:     0.013s)
Time for merge operator:                 0.010s
Time for coverage check:                 0.019s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     0.495s

Number of path formula cache hits:   9905 (61%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.588s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               336
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1490 (count: 6065, min: 0, max: 340, avg: 0.25)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.098s
Automaton transfers with branching:                0
Automaton transfer successors:                        14272 (count: 14272, min: 1, max: 1, avg: 1.00) [1 x 14272]

CPA algorithm statistics
------------------------
Number of iterations:            11243
Max size of waitlist:            31
Average size of waitlist:        8
Number of computed successors:   12705
Max successors for one state:    2
Number of times merged:          305
Number of times stopped:         620
Number of times breaked:         29

Total time for CPA algorithm:         4.379s (Max:     0.440s)
  Time for choose from waitlist:      0.049s
  Time for precision adjustment:      2.634s
  Time for transfer relation:         1.260s
  Time for merge operator:            0.050s
  Time for stop operator:             0.094s
  Time for adding to reached set:     0.120s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   29
Avg. length of target path (in blocks):                1399 (count: 29, min: 21, max: 72, avg: 48.24)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.433s
  Counterexample analysis:                             0.245s (Max:     0.020s, Calls: 29)
    Refinement sat check:                              0.119s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.035s
  Precision update:                                    0.027s
  ARG update:                                          0.079s

Length of refined path (in blocks):                     890 (count: 29, min: 15, max: 48, avg: 30.69)
Number of affected states:                              626 (count: 29, min: 2, max: 42, avg: 21.59)
Length (states) of path with itp 'true':                235 (count: 29, min: 0, max: 23, avg: 8.10)
Length (states) of path with itp non-trivial itp:       626 (count: 29, min: 2, max: 42, avg: 21.59)
Length (states) of path with itp 'false':                29 (count: 29, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 29, min: 0, max: 1, avg: 0.14)
Equal non-trivial interpolants along paths:             593 (count: 29, min: 1, max: 40, avg: 20.45)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 957
Max. size of reached set after ref.:  452
Avg. size of reached set before ref.: 456.93
Avg. size of reached set after ref.:  86.41

Total time for CEGAR algorithm:       4.896s
Time for refinements:                 0.513s
Average time for refinement:          0.017s
Max time for refinement:              0.036s

Code Coverage
-----------------------------
  Function coverage:      0.514
  Visited lines:          111
  Total lines:            434
  Line coverage:          0.256
  Visited conditions:     32
  Total conditions:       70
  Condition coverage:     0.457

CPAchecker general statistics
-----------------------------
Number of program locations:     622
Number of CFA edges:             669
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             838
  Number of reached locations:   148 (24%)
    Avg states per location:     5
    Max states per location:     26 (at node N366)
  Number of reached functions:   19 (51%)
  Number of partitions:          819
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N377 (before line 545), Function timeShift called from node N304, stack depth 5 [66944c7c], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0

Time for analysis setup:          1.923s
  Time for loading CPAs:          0.483s
  Time for loading parser:        0.450s
  Time for CFA construction:      0.863s
    Time for parsing file(s):     0.326s
    Time for AST to CFA:          0.178s
    Time for CFA sanity check:    0.054s
    Time for post-processing:     0.186s
      Time for var class.:        0.069s
Time for Analysis:                4.897s
CPU time for analysis:            4.890s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.822s
Total CPU time for CPAchecker:    6.820s
Time for statistics:              0.078s

Time for Garbage Collector:       0.103s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     37MB (    35 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    28 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   7994MB (  7624 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
