scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product48_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3mukqv7k/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 630: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 639: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 694: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 766: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 812: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 974: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 997: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            38220 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  37853 (99%)
  Because of loop head:            214 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         153 (0%)
  Times precision was empty:       1266 (3%)
  Times precision was {false}:     635 (2%)
  Times result was cached:         23734 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12585 (33%)
  Times result was 'false':        5900 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         30752
  BDD entailment checks:           24456
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          25
Number of abstraction locations:          60
Max number of predicates per location:    15
Avg number of predicates per location:    8
Total predicates per abstraction:         262860
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 19.88
Number of irrelevant predicates:          53292 (20%)
Number of preds handled by boolean abs:   86904 (33%)
  Total number of models for allsat:      17110
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.36

Time for post operator:                  1.771s
  Time for path formula creation:        1.709s
Time for strengthen operator:            0.139s
Time for prec operator:                 27.072s
  Time for abstraction:                 26.574s (Max:     0.029s, Count: 38220)
    Boolean abstraction:                 9.156s
    Solving time:                        6.884s (Max:     0.014s)
    Model enumeration time:              0.857s
    Time for BDD construction:           0.398s (Max:     0.012s)
Time for merge operator:                 0.085s
Time for coverage check:                 0.068s
  Time for BDD entailment checks:        0.062s
Total time for SMT solver (w/o itp):     7.741s

Number of path formula cache hits:   103673 (64%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.360s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               8354
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       35156 (count: 110462, min: 0, max: 1211, avg: 0.32)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.326s
Automaton transfers with branching:                0
Automaton transfer successors:                       140377 (count: 140377, min: 1, max: 1, avg: 1.00) [1 x 140377]

CPA algorithm statistics
------------------------
Number of iterations:            109670
Max size of waitlist:            35
Average size of waitlist:        9
Number of computed successors:   122510
Max successors for one state:    2
Number of times merged:          3148
Number of times stopped:         6489
Number of times breaked:         153

Total time for CPA algorithm:        32.897s (Max:     2.120s)
  Time for choose from waitlist:      0.114s
  Time for precision adjustment:     27.952s
  Time for transfer relation:         3.560s
  Time for merge operator:            0.204s
  Time for stop operator:             0.314s
  Time for adding to reached set:     0.193s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   153
Avg. length of target path (in blocks):               10761 (count: 153, min: 26, max: 154, avg: 70.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.532s
  Counterexample analysis:                             1.950s (Max:     0.050s, Calls: 153)
    Refinement sat check:                              0.723s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.074s
  Precision update:                                    0.101s
  ARG update:                                          0.291s

Length of refined path (in blocks):                    8228 (count: 153, min: 14, max: 138, avg: 53.78)
Number of affected states:                             3450 (count: 153, min: 1, max: 106, avg: 22.55)
Length (states) of path with itp 'true':               4625 (count: 153, min: 0, max: 86, avg: 30.23)
Length (states) of path with itp non-trivial itp:      3450 (count: 153, min: 1, max: 106, avg: 22.55)
Length (states) of path with itp 'false':               153 (count: 153, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         128 (count: 153, min: 0, max: 5, avg: 0.84)
Equal non-trivial interpolants along paths:            3169 (count: 153, min: 0, max: 102, avg: 20.71)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                153
Number of successful refinements:     153
Number of failed refinements:         0
Max. size of reached set before ref.: 7595
Max. size of reached set after ref.:  5507
Avg. size of reached set before ref.: 2672.96
Avg. size of reached set after ref.:  2002.70

Total time for CEGAR algorithm:      36.169s
Time for refinements:                 3.035s
Average time for refinement:          0.019s
Max time for refinement:              0.072s

Code Coverage
-----------------------------
  Function coverage:      0.700
  Visited lines:          142
  Total lines:            447
  Line coverage:          0.318
  Visited conditions:     44
  Total conditions:       76
  Condition coverage:     0.579

CPAchecker general statistics
-----------------------------
Number of program locations:     648
Number of CFA edges:             701
Number of relevant variables:    116
Number of functions:             40
Number of loops:                 5
Size of reached set:             7572
  Number of reached locations:   196 (30%)
    Avg states per location:     38
    Max states per location:     185 (at node N617)
  Number of reached functions:   28 (70%)
  Number of partitions:          7429
    Avg size of partitions:      1
    Max size of partitions:      25 (with key [N332 (after line 453), Function test called from node N588, stack depth 3 [1b1cd2c3], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.160s
  Time for loading CPAs:          0.533s
  Time for loading parser:        0.498s
  Time for CFA construction:      1.003s
    Time for parsing file(s):     0.374s
    Time for AST to CFA:          0.223s
    Time for CFA sanity check:    0.061s
    Time for post-processing:     0.212s
      Time for var class.:        0.089s
Time for Analysis:               36.170s
CPU time for analysis:           36.160s
Time for analyzing result:        0.004s
Total time for CPAchecker:       38.334s
Total CPU time for CPAchecker:   38.320s
Time for statistics:              0.159s

Time for Garbage Collector:       0.941s (in 114 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 88MB (    84 MiB) max;     52MB (    49 MiB) avg;     94MB (    89 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    33 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8221MB (  7840 MiB) max;   8098MB (  7723 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
