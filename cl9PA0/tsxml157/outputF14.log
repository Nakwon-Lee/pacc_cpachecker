scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product26_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8tu1zhgo/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 129: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 161: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 297: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 470: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2486 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2402 (97%)
  Because of loop head:            58 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         26 (1%)
  Times precision was empty:       397 (16%)
  Times precision was {false}:     72 (3%)
  Times result was cached:         1710 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      307 (12%)
  Times result was 'false':        332 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         730
  BDD entailment checks:           420
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          36
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         6050
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 15.96
Number of irrelevant predicates:          1847 (31%)
Number of preds handled by boolean abs:   703 (12%)
  Total number of models for allsat:      334
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  0.456s
  Time for path formula creation:        0.437s
Time for strengthen operator:            0.042s
Time for prec operator:                  1.460s
  Time for abstraction:                  1.301s (Max:     0.017s, Count: 2486)
    Boolean abstraction:                 0.322s
    Solving time:                        0.234s (Max:     0.013s)
    Model enumeration time:              0.017s
    Time for BDD construction:           0.033s (Max:     0.008s)
Time for merge operator:                 0.007s
Time for coverage check:                 0.019s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):     0.251s

Number of path formula cache hits:   6996 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.414s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               286
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         610 (count: 3172, min: 0, max: 290, avg: 0.19)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.082s
Automaton transfers with branching:                0
Automaton transfer successors:                         9232 (count: 9232, min: 1, max: 1, avg: 1.00) [1 x 9232]

CPA algorithm statistics
------------------------
Number of iterations:            7220
Max size of waitlist:            14
Average size of waitlist:        5
Number of computed successors:   8075
Max successors for one state:    2
Number of times merged:          155
Number of times stopped:         370
Number of times breaked:         26

Total time for CPA algorithm:         2.808s (Max:     0.224s)
  Time for choose from waitlist:      0.014s
  Time for precision adjustment:      1.635s
  Time for transfer relation:         0.880s
  Time for merge operator:            0.030s
  Time for stop operator:             0.072s
  Time for adding to reached set:     0.086s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   26
Avg. length of target path (in blocks):                 798 (count: 26, min: 20, max: 46, avg: 30.69)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.269s
  Counterexample analysis:                             0.165s (Max:     0.013s, Calls: 26)
    Refinement sat check:                              0.074s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.025s
  Precision update:                                    0.024s
  ARG update:                                          0.039s

Length of refined path (in blocks):                     600 (count: 26, min: 14, max: 43, avg: 23.08)
Number of affected states:                              470 (count: 26, min: 9, max: 42, avg: 18.08)
Length (states) of path with itp 'true':                104 (count: 26, min: 0, max: 13, avg: 4.00)
Length (states) of path with itp non-trivial itp:       470 (count: 26, min: 9, max: 42, avg: 18.08)
Length (states) of path with itp 'false':                26 (count: 26, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 26, min: 0, max: 1, avg: 0.19)
Equal non-trivial interpolants along paths:             439 (count: 26, min: 8, max: 40, avg: 16.88)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                26
Number of successful refinements:     26
Number of failed refinements:         0
Max. size of reached set before ref.: 628
Max. size of reached set after ref.:  416
Avg. size of reached set before ref.: 349.92
Avg. size of reached set after ref.:  92.81

Total time for CEGAR algorithm:       3.157s
Time for refinements:                 0.334s
Average time for refinement:          0.012s
Max time for refinement:              0.035s

Code Coverage
-----------------------------
  Function coverage:      0.444
  Visited lines:          83
  Total lines:            423
  Line coverage:          0.196
  Visited conditions:     26
  Total conditions:       66
  Condition coverage:     0.394

CPAchecker general statistics
-----------------------------
Number of program locations:     604
Number of CFA edges:             647
Number of relevant variables:    112
Number of functions:             36
Number of loops:                 5
Size of reached set:             689
  Number of reached locations:   110 (18%)
    Avg states per location:     6
    Max states per location:     24 (at node N82)
  Number of reached functions:   16 (44%)
  Number of partitions:          676
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N576 (before lines 858-905), Function test called from node N143, stack depth 3 [415a3f6a], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.247s
  Time for loading CPAs:          0.587s
  Time for loading parser:        0.503s
  Time for CFA construction:      1.050s
    Time for parsing file(s):     0.342s
    Time for AST to CFA:          0.277s
    Time for CFA sanity check:    0.069s
    Time for post-processing:     0.220s
      Time for var class.:        0.101s
Time for Analysis:                3.157s
CPU time for analysis:            3.160s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.407s
Total CPU time for CPAchecker:    5.420s
Time for statistics:              0.047s

Time for Garbage Collector:       0.087s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    56 MiB) max;     36MB (    34 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8045MB (  7673 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
