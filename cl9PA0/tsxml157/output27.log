scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product26_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_o1fe9r61/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 129: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 161: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 297: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 470: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1590 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1543 (97%)
  Because of loop head:            36 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11 (1%)
  Times precision was empty:       271 (17%)
  Times precision was {false}:     51 (3%)
  Times result was cached:         1198 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      70 (4%)
  Times result was 'false':        192 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         416
  BDD entailment checks:           226
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          4
Number of abstraction locations:          36
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         1702
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 14.07
Number of irrelevant predicates:          498 (29%)
Number of preds handled by boolean abs:   84 (5%)
  Total number of models for allsat:      75
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  0.294s
  Time for path formula creation:        0.285s
Time for strengthen operator:            0.018s
Time for prec operator:                  0.580s
  Time for abstraction:                  0.516s (Max:     0.013s, Count: 1590)
    Boolean abstraction:                 0.067s
    Solving time:                        0.042s (Max:     0.008s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.026s (Max:     0.008s)
Time for merge operator:                 0.017s
Time for coverage check:                 0.027s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):     0.045s

Number of path formula cache hits:   5406 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.247s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          98 (count: 1210, min: 0, max: 98, avg: 0.08)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.080s
Automaton transfers with branching:                0
Automaton transfer successors:                         5982 (count: 5982, min: 1, max: 1, avg: 1.00) [1 x 5982]

CPA algorithm statistics
------------------------
Number of iterations:            4621
Max size of waitlist:            15
Average size of waitlist:        5
Number of computed successors:   5187
Max successors for one state:    2
Number of times merged:          95
Number of times stopped:         281
Number of times breaked:         11

Total time for CPA algorithm:         1.608s (Max:     0.247s)
  Time for choose from waitlist:      0.008s
  Time for precision adjustment:      0.719s
  Time for transfer relation:         0.649s
  Time for merge operator:            0.035s
  Time for stop operator:             0.065s
  Time for adding to reached set:     0.036s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                 300 (count: 11, min: 21, max: 36, avg: 27.27)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.154s
  Counterexample analysis:                             0.084s (Max:     0.019s, Calls: 11)
    Refinement sat check:                              0.041s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.015s
  ARG update:                                          0.023s

Length of refined path (in blocks):                     216 (count: 11, min: 14, max: 28, avg: 19.64)
Number of affected states:                              205 (count: 11, min: 13, max: 27, avg: 18.64)
Length (states) of path with itp 'true':                  0 (count: 11, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       205 (count: 11, min: 13, max: 27, avg: 18.64)
Length (states) of path with itp 'false':                11 (count: 11, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 11, min: 0, max: 1, avg: 0.09)
Equal non-trivial interpolants along paths:             193 (count: 11, min: 12, max: 26, avg: 17.55)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 677
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 362.45
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.795s
Time for refinements:                 0.186s
Average time for refinement:          0.016s
Max time for refinement:              0.036s

Code Coverage
-----------------------------
  Function coverage:      0.472
  Visited lines:          99
  Total lines:            423
  Line coverage:          0.234
  Visited conditions:     28
  Total conditions:       66
  Condition coverage:     0.424

CPAchecker general statistics
-----------------------------
Number of program locations:     604
Number of CFA edges:             647
Number of relevant variables:    112
Number of functions:             36
Number of loops:                 5
Size of reached set:             761
  Number of reached locations:   131 (22%)
    Avg states per location:     5
    Max states per location:     36 (at node N82)
  Number of reached functions:   17 (47%)
  Number of partitions:          759
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N576 (before lines 858-905), Function test called from node N143, stack depth 3 [57402ba1], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.069s
  Time for loading CPAs:          0.527s
  Time for loading parser:        0.467s
  Time for CFA construction:      0.961s
    Time for parsing file(s):     0.346s
    Time for AST to CFA:          0.230s
    Time for CFA sanity check:    0.057s
    Time for post-processing:     0.186s
      Time for var class.:        0.078s
Time for Analysis:                1.796s
CPU time for analysis:            1.800s
Time for analyzing result:        0.000s
Total time for CPAchecker:        3.867s
Total CPU time for CPAchecker:    3.870s
Time for statistics:              0.060s

Time for Garbage Collector:       0.082s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     33MB (    32 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     25MB (    24 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7973MB (  7604 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
