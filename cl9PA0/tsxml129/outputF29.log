scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product42_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0nsznflt/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 193: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 214: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 557: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 603: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 655: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 687: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 880: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 889: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 944: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            92030 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  90941 (99%)
  Because of loop head:            972 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         117 (0%)
  Times precision was empty:       1027 (1%)
  Times precision was {false}:     1015 (1%)
  Times result was cached:         76818 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      13170 (14%)
  Times result was 'false':        11134 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         71434
  BDD entailment checks:           50352
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          22
Number of abstraction locations:          54
Max number of predicates per location:    13
Avg number of predicates per location:    6
Total predicates per abstraction:         627595
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 44.24
Number of irrelevant predicates:          235618 (38%)
Number of preds handled by boolean abs:   74030 (12%)
  Total number of models for allsat:      20494
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.56

Time for post operator:                  4.029s
  Time for path formula creation:        3.885s
Time for strengthen operator:            0.346s
Time for prec operator:                 32.372s
  Time for abstraction:                 31.193s (Max:     0.027s, Count: 92030)
    Boolean abstraction:                 8.282s
    Solving time:                        6.105s (Max:     0.013s)
    Model enumeration time:              0.832s
    Time for BDD construction:           0.434s (Max:     0.012s)
Time for merge operator:                 0.172s
Time for coverage check:                 0.101s
  Time for BDD entailment checks:        0.087s
Total time for SMT solver (w/o itp):     6.937s

Number of path formula cache hits:   272843 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.454s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               5226
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       33662 (count: 140145, min: 0, max: 884, avg: 0.24)
Time for BDD node cleanup:                             0.033s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.477s
Automaton transfers with branching:                0
Automaton transfer successors:                       354159 (count: 354159, min: 1, max: 1, avg: 1.00) [1 x 354159]

CPA algorithm statistics
------------------------
Number of iterations:            271087
Max size of waitlist:            70
Average size of waitlist:        30
Number of computed successors:   303979
Max successors for one state:    2
Number of times merged:          10541
Number of times stopped:         20604
Number of times breaked:         117

Total time for CPA algorithm:        43.468s (Max:     1.860s)
  Time for choose from waitlist:      0.185s
  Time for precision adjustment:     34.064s
  Time for transfer relation:         7.226s
  Time for merge operator:            0.400s
  Time for stop operator:             0.434s
  Time for adding to reached set:     0.377s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   117
Avg. length of target path (in blocks):               10209 (count: 117, min: 25, max: 139, avg: 87.26)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.195s
  Counterexample analysis:                             1.430s (Max:     0.029s, Calls: 117)
    Refinement sat check:                              0.583s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.071s
  Precision update:                                    0.069s
  ARG update:                                          0.521s

Length of refined path (in blocks):                    7960 (count: 117, min: 14, max: 119, avg: 68.03)
Number of affected states:                             2473 (count: 117, min: 1, max: 80, avg: 21.14)
Length (states) of path with itp 'true':               5370 (count: 117, min: 0, max: 99, avg: 45.90)
Length (states) of path with itp non-trivial itp:      2473 (count: 117, min: 1, max: 80, avg: 21.14)
Length (states) of path with itp 'false':               117 (count: 117, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          39 (count: 117, min: 0, max: 3, avg: 0.33)
Equal non-trivial interpolants along paths:            2317 (count: 117, min: 0, max: 76, avg: 19.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                117
Number of successful refinements:     117
Number of failed refinements:         0
Max. size of reached set before ref.: 7119
Max. size of reached set after ref.:  3948
Avg. size of reached set before ref.: 4023.07
Avg. size of reached set after ref.:  1726.01

Total time for CEGAR algorithm:      46.194s
Time for refinements:                 2.571s
Average time for refinement:          0.021s
Max time for refinement:              0.052s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          143
  Total lines:            434
  Line coverage:          0.329
  Visited conditions:     40
  Total conditions:       70
  Condition coverage:     0.571

CPAchecker general statistics
-----------------------------
Number of program locations:     623
Number of CFA edges:             669
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             3486
  Number of reached locations:   192 (31%)
    Avg states per location:     18
    Max states per location:     101 (at node N10)
  Number of reached functions:   26 (68%)
  Number of partitions:          3424
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N513 (after line 738), Function test called from node N75, stack depth 3 [1ce2d332], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.173s
  Time for loading CPAs:          0.516s
  Time for loading parser:        0.534s
  Time for CFA construction:      0.967s
    Time for parsing file(s):     0.329s
    Time for AST to CFA:          0.241s
    Time for CFA sanity check:    0.060s
    Time for post-processing:     0.209s
      Time for var class.:        0.094s
Time for Analysis:               46.195s
CPU time for analysis:           46.200s
Time for analyzing result:        0.003s
Total time for CPAchecker:       48.370s
Total CPU time for CPAchecker:   48.370s
Time for statistics:              0.108s

Time for Garbage Collector:       2.266s (in 258 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                125MB (   119 MiB) max;     68MB (    65 MiB) avg;    130MB (   124 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    33 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           135MB (   128 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8154MB (  7777 MiB) max;   8046MB (  7673 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
