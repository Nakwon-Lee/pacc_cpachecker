scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product42_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ycy2a2l_/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 193: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 214: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 557: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 603: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 655: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 687: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 880: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 889: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 944: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            38193 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  37749 (99%)
  Because of loop head:            335 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         109 (0%)
  Times precision was empty:       2774 (7%)
  Times precision was {false}:     432 (1%)
  Times result was cached:         27260 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7727 (20%)
  Times result was 'false':        3968 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         28171
  BDD entailment checks:           19303
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          22
Number of abstraction locations:          51
Max number of predicates per location:    11
Avg number of predicates per location:    7
Total predicates per abstraction:         209468
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 25.67
Number of irrelevant predicates:          71500 (34%)
Number of preds handled by boolean abs:   40821 (19%)
  Total number of models for allsat:      11804
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.53

Time for post operator:                  1.443s
  Time for path formula creation:        1.350s
Time for strengthen operator:            0.127s
Time for prec operator:                 15.177s
  Time for abstraction:                 14.746s (Max:     0.014s, Count: 38193)
    Boolean abstraction:                 4.527s
    Solving time:                        3.295s (Max:     0.013s)
    Model enumeration time:              0.429s
    Time for BDD construction:           0.282s (Max:     0.012s)
Time for merge operator:                 0.091s
Time for coverage check:                 0.037s
  Time for BDD entailment checks:        0.032s
Total time for SMT solver (w/o itp):     3.724s

Number of path formula cache hits:   123832 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.098s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               4335
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       20478 (count: 73714, min: 0, max: 769, avg: 0.28)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.311s
Automaton transfers with branching:                0
Automaton transfer successors:                       146401 (count: 146401, min: 1, max: 1, avg: 1.00) [1 x 146401]

CPA algorithm statistics
------------------------
Number of iterations:            113097
Max size of waitlist:            69
Average size of waitlist:        25
Number of computed successors:   126169
Max successors for one state:    2
Number of times merged:          4434
Number of times stopped:         8044
Number of times breaked:         109

Total time for CPA algorithm:        20.400s (Max:     0.850s)
  Time for choose from waitlist:      0.102s
  Time for precision adjustment:     15.937s
  Time for transfer relation:         3.071s
  Time for merge operator:            0.259s
  Time for stop operator:             0.190s
  Time for adding to reached set:     0.256s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   109
Avg. length of target path (in blocks):                6306 (count: 109, min: 25, max: 112, avg: 57.85)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.370s
  Counterexample analysis:                             0.970s (Max:     0.029s, Calls: 109)
    Refinement sat check:                              0.371s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.044s
  Precision update:                                    0.060s
  ARG update:                                          0.237s

Length of refined path (in blocks):                    4673 (count: 109, min: 14, max: 109, avg: 42.87)
Number of affected states:                             2238 (count: 109, min: 1, max: 55, avg: 20.53)
Length (states) of path with itp 'true':               2326 (count: 109, min: 0, max: 80, avg: 21.34)
Length (states) of path with itp non-trivial itp:      2238 (count: 109, min: 1, max: 55, avg: 20.53)
Length (states) of path with itp 'false':               109 (count: 109, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          67 (count: 109, min: 0, max: 3, avg: 0.61)
Equal non-trivial interpolants along paths:            2062 (count: 109, min: 0, max: 51, avg: 18.92)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                109
Number of successful refinements:     109
Number of failed refinements:         0
Max. size of reached set before ref.: 5493
Max. size of reached set after ref.:  4487
Avg. size of reached set before ref.: 2441.02
Avg. size of reached set after ref.:  1419.63

Total time for CEGAR algorithm:      22.180s
Time for refinements:                 1.656s
Average time for refinement:          0.015s
Max time for refinement:              0.040s

Code Coverage
-----------------------------
  Function coverage:      0.658
  Visited lines:          127
  Total lines:            434
  Line coverage:          0.293
  Visited conditions:     38
  Total conditions:       70
  Condition coverage:     0.543

CPAchecker general statistics
-----------------------------
Number of program locations:     623
Number of CFA edges:             669
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             2827
  Number of reached locations:   171 (27%)
    Avg states per location:     16
    Max states per location:     71 (at node N536)
  Number of reached functions:   25 (66%)
  Number of partitions:          2764
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N496 (before lines 716-763), Function test called from node N75, stack depth 3 [735f01a4], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.849s
  Time for loading CPAs:          0.528s
  Time for loading parser:        0.391s
  Time for CFA construction:      0.858s
    Time for parsing file(s):     0.304s
    Time for AST to CFA:          0.187s
    Time for CFA sanity check:    0.052s
    Time for post-processing:     0.189s
      Time for var class.:        0.085s
Time for Analysis:               22.180s
CPU time for analysis:           22.180s
Time for analyzing result:        0.001s
Total time for CPAchecker:       24.032s
Total CPU time for CPAchecker:   24.020s
Time for statistics:              0.082s

Time for Garbage Collector:       0.638s (in 92 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 84MB (    80 MiB) max;     48MB (    46 MiB) avg;     86MB (    82 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     34MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8020MB (  7649 MiB) max;   8012MB (  7641 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
