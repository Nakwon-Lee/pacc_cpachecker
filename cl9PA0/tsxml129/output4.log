scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product42_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6dyehjsc/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 193: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 214: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 557: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 603: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 655: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 687: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 880: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 889: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 944: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            34093 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  33657 (99%)
  Because of loop head:            312 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         124 (0%)
  Times precision was empty:       928 (3%)
  Times precision was {false}:     561 (2%)
  Times result was cached:         25358 (74%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7246 (21%)
  Times result was 'false':        4425 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         22094
  BDD entailment checks:           14168
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          22
Number of abstraction locations:          54
Max number of predicates per location:    11
Avg number of predicates per location:    6
Total predicates per abstraction:         193213
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 24.75
Number of irrelevant predicates:          56434 (29%)
Number of preds handled by boolean abs:   38843 (20%)
  Total number of models for allsat:      10426
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.44

Time for post operator:                  1.562s
  Time for path formula creation:        1.445s
Time for strengthen operator:            0.153s
Time for prec operator:                 16.150s
  Time for abstraction:                 15.736s (Max:     0.017s, Count: 34093)
    Boolean abstraction:                 4.698s
    Solving time:                        3.410s (Max:     0.013s)
    Model enumeration time:              0.459s
    Time for BDD construction:           0.258s (Max:     0.012s)
Time for merge operator:                 0.091s
Time for coverage check:                 0.054s
  Time for BDD entailment checks:        0.043s
Total time for SMT solver (w/o itp):     3.869s

Number of path formula cache hits:   111145 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.202s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               3177
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       18347 (count: 64216, min: 0, max: 572, avg: 0.29)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.378s
Automaton transfers with branching:                0
Automaton transfer successors:                       130907 (count: 130907, min: 1, max: 1, avg: 1.00) [1 x 130907]

CPA algorithm statistics
------------------------
Number of iterations:            100462
Max size of waitlist:            25
Average size of waitlist:        10
Number of computed successors:   112106
Max successors for one state:    2
Number of times merged:          3963
Number of times stopped:         6896
Number of times breaked:         124

Total time for CPA algorithm:        21.674s (Max:     0.620s)
  Time for choose from waitlist:      0.095s
  Time for precision adjustment:     16.968s
  Time for transfer relation:         3.359s
  Time for merge operator:            0.207s
  Time for stop operator:             0.211s
  Time for adding to reached set:     0.210s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   124
Avg. length of target path (in blocks):                7966 (count: 124, min: 25, max: 110, avg: 64.24)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.554s
  Counterexample analysis:                             1.074s (Max:     0.024s, Calls: 124)
    Refinement sat check:                              0.445s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.058s
  Precision update:                                    0.103s
  ARG update:                                          0.210s

Length of refined path (in blocks):                    6030 (count: 124, min: 14, max: 107, avg: 48.63)
Number of affected states:                             2640 (count: 124, min: 1, max: 55, avg: 21.29)
Length (states) of path with itp 'true':               3266 (count: 124, min: 0, max: 78, avg: 26.34)
Length (states) of path with itp non-trivial itp:      2640 (count: 124, min: 1, max: 55, avg: 21.29)
Length (states) of path with itp 'false':               124 (count: 124, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          72 (count: 124, min: 0, max: 3, avg: 0.58)
Equal non-trivial interpolants along paths:            2444 (count: 124, min: 0, max: 53, avg: 19.71)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                124
Number of successful refinements:     124
Number of failed refinements:         0
Max. size of reached set before ref.: 3712
Max. size of reached set after ref.:  3275
Avg. size of reached set before ref.: 1947.80
Avg. size of reached set after ref.:  1162.39

Total time for CEGAR algorithm:      23.564s
Time for refinements:                 1.803s
Average time for refinement:          0.014s
Max time for refinement:              0.047s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          143
  Total lines:            434
  Line coverage:          0.329
  Visited conditions:     40
  Total conditions:       70
  Condition coverage:     0.571

CPAchecker general statistics
-----------------------------
Number of program locations:     623
Number of CFA edges:             669
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             3395
  Number of reached locations:   192 (31%)
    Avg states per location:     17
    Max states per location:     87 (at node N10)
  Number of reached functions:   26 (68%)
  Number of partitions:          3318
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N518 (after line 748), Function test called from node N75, stack depth 3 [24d9efd8], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.973s
  Time for loading CPAs:          0.571s
  Time for loading parser:        0.428s
  Time for CFA construction:      0.876s
    Time for parsing file(s):     0.329s
    Time for AST to CFA:          0.194s
    Time for CFA sanity check:    0.055s
    Time for post-processing:     0.191s
      Time for var class.:        0.079s
Time for Analysis:               23.565s
CPU time for analysis:           23.560s
Time for analyzing result:        0.002s
Total time for CPAchecker:       25.540s
Total CPU time for CPAchecker:   25.530s
Time for statistics:              0.092s

Time for Garbage Collector:       0.560s (in 84 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 76MB (    72 MiB) max;     47MB (    45 MiB) avg;     78MB (    74 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8078MB (  7704 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
