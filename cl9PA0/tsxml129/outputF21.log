scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product42_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_aac5ojx3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 193: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 214: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 557: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 603: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 655: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 687: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 880: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 889: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 944: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            27958 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  27686 (99%)
  Because of loop head:            172 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         100 (0%)
  Times precision was empty:       897 (3%)
  Times precision was {false}:     492 (2%)
  Times result was cached:         19345 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7224 (26%)
  Times result was 'false':        3862 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         18871
  BDD entailment checks:           11991
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          22
Number of abstraction locations:          51
Max number of predicates per location:    12
Avg number of predicates per location:    7
Total predicates per abstraction:         176000
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 22.81
Number of irrelevant predicates:          45327 (26%)
Number of preds handled by boolean abs:   43592 (25%)
  Total number of models for allsat:      11672
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.62

Time for post operator:                  1.392s
  Time for path formula creation:        1.338s
Time for strengthen operator:            0.125s
Time for prec operator:                 15.607s
  Time for abstraction:                 15.263s (Max:     0.019s, Count: 27958)
    Boolean abstraction:                 5.057s
    Solving time:                        3.718s (Max:     0.013s)
    Model enumeration time:              0.486s
    Time for BDD construction:           0.323s (Max:     0.012s)
Time for merge operator:                 0.092s
Time for coverage check:                 0.039s
  Time for BDD entailment checks:        0.037s
Total time for SMT solver (w/o itp):     4.204s

Number of path formula cache hits:   88121 (69%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.125s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               4582
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       19891 (count: 62022, min: 0, max: 735, avg: 0.32)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.340s
Automaton transfers with branching:                0
Automaton transfer successors:                       108953 (count: 108953, min: 1, max: 1, avg: 1.00) [1 x 108953]

CPA algorithm statistics
------------------------
Number of iterations:            83305
Max size of waitlist:            43
Average size of waitlist:        12
Number of computed successors:   93311
Max successors for one state:    2
Number of times merged:          3440
Number of times stopped:         5397
Number of times breaked:         100

Total time for CPA algorithm:        20.351s (Max:     0.779s)
  Time for choose from waitlist:      0.086s
  Time for precision adjustment:     16.233s
  Time for transfer relation:         2.901s
  Time for merge operator:            0.216s
  Time for stop operator:             0.210s
  Time for adding to reached set:     0.249s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   100
Avg. length of target path (in blocks):                6675 (count: 100, min: 25, max: 118, avg: 66.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.389s
  Counterexample analysis:                             0.964s (Max:     0.027s, Calls: 100)
    Refinement sat check:                              0.407s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.044s
  Precision update:                                    0.079s
  ARG update:                                          0.234s

Length of refined path (in blocks):                    5145 (count: 100, min: 14, max: 111, avg: 51.45)
Number of affected states:                             2340 (count: 100, min: 1, max: 62, avg: 23.40)
Length (states) of path with itp 'true':               2705 (count: 100, min: 0, max: 82, avg: 27.05)
Length (states) of path with itp non-trivial itp:      2340 (count: 100, min: 1, max: 62, avg: 23.40)
Length (states) of path with itp 'false':               100 (count: 100, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          72 (count: 100, min: 0, max: 3, avg: 0.72)
Equal non-trivial interpolants along paths:            2168 (count: 100, min: 0, max: 59, avg: 21.68)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                100
Number of successful refinements:     100
Number of failed refinements:         0
Max. size of reached set before ref.: 3677
Max. size of reached set after ref.:  3033
Avg. size of reached set before ref.: 2046.96
Avg. size of reached set after ref.:  1238.74

Total time for CEGAR algorithm:      22.031s
Time for refinements:                 1.618s
Average time for refinement:          0.016s
Max time for refinement:              0.051s

Code Coverage
-----------------------------
  Function coverage:      0.658
  Visited lines:          127
  Total lines:            434
  Line coverage:          0.293
  Visited conditions:     38
  Total conditions:       70
  Condition coverage:     0.543

CPAchecker general statistics
-----------------------------
Number of program locations:     623
Number of CFA edges:             669
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             3231
  Number of reached locations:   171 (27%)
    Avg states per location:     18
    Max states per location:     79 (at node N536)
  Number of reached functions:   25 (66%)
  Number of partitions:          3162
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N513 (after line 738), Function test called from node N75, stack depth 3 [7d6e2561], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.861s
  Time for loading CPAs:          0.462s
  Time for loading parser:        0.418s
  Time for CFA construction:      0.878s
    Time for parsing file(s):     0.277s
    Time for AST to CFA:          0.246s
    Time for CFA sanity check:    0.055s
    Time for post-processing:     0.179s
      Time for var class.:        0.073s
Time for Analysis:               22.031s
CPU time for analysis:           22.020s
Time for analyzing result:        0.003s
Total time for CPAchecker:       23.895s
Total CPU time for CPAchecker:   23.890s
Time for statistics:              0.135s

Time for Garbage Collector:       0.525s (in 75 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 75MB (    72 MiB) max;     47MB (    45 MiB) avg;     79MB (    75 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     34MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8012MB (  7641 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
