scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product42_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9l_3jp_b/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 193: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 214: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 557: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 603: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 655: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 687: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 880: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 889: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 944: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            20255 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20003 (99%)
  Because of loop head:            176 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         76 (0%)
  Times precision was empty:       849 (4%)
  Times precision was {false}:     155 (1%)
  Times result was cached:         16808 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2443 (12%)
  Times result was 'false':        2117 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         11328
  BDD entailment checks:           7012
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          22
Number of abstraction locations:          51
Max number of predicates per location:    10
Avg number of predicates per location:    6
Total predicates per abstraction:         100544
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 38.70
Number of irrelevant predicates:          34980 (35%)
Number of preds handled by boolean abs:   10916 (11%)
  Total number of models for allsat:      3393
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.39

Time for post operator:                  1.175s
  Time for path formula creation:        1.098s
Time for strengthen operator:            0.086s
Time for prec operator:                  8.097s
  Time for abstraction:                  7.751s (Max:     0.031s, Count: 20255)
    Boolean abstraction:                 1.805s
    Solving time:                        1.236s (Max:     0.013s)
    Model enumeration time:              0.168s
    Time for BDD construction:           0.151s (Max:     0.010s)
Time for merge operator:                 0.062s
Time for coverage check:                 0.036s
  Time for BDD entailment checks:        0.035s
Total time for SMT solver (w/o itp):     1.404s

Number of path formula cache hits:   71782 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.913s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               2413
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8325 (count: 25081, min: 0, max: 629, avg: 0.33)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.247s
Automaton transfers with branching:                0
Automaton transfer successors:                        75827 (count: 75827, min: 1, max: 1, avg: 1.00) [1 x 75827]

CPA algorithm statistics
------------------------
Number of iterations:            59521
Max size of waitlist:            31
Average size of waitlist:        10
Number of computed successors:   66186
Max successors for one state:    2
Number of times merged:          2158
Number of times stopped:         3835
Number of times breaked:         76

Total time for CPA algorithm:        12.234s (Max:     0.511s)
  Time for choose from waitlist:      0.053s
  Time for precision adjustment:      8.643s
  Time for transfer relation:         2.556s
  Time for merge operator:            0.174s
  Time for stop operator:             0.150s
  Time for adding to reached set:     0.195s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   76
Avg. length of target path (in blocks):                5508 (count: 76, min: 31, max: 109, avg: 72.47)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.324s
  Counterexample analysis:                             0.933s (Max:     0.025s, Calls: 76)
    Refinement sat check:                              0.387s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.059s
  Precision update:                                    0.077s
  ARG update:                                          0.181s

Length of refined path (in blocks):                    4066 (count: 76, min: 14, max: 92, avg: 53.50)
Number of affected states:                             1991 (count: 76, min: 1, max: 55, avg: 26.20)
Length (states) of path with itp 'true':               1999 (count: 76, min: 0, max: 61, avg: 26.30)
Length (states) of path with itp non-trivial itp:      1991 (count: 76, min: 1, max: 55, avg: 26.20)
Length (states) of path with itp 'false':                76 (count: 76, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          45 (count: 76, min: 0, max: 3, avg: 0.59)
Equal non-trivial interpolants along paths:            1870 (count: 76, min: 0, max: 51, avg: 24.61)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                76
Number of successful refinements:     76
Number of failed refinements:         0
Max. size of reached set before ref.: 4084
Max. size of reached set after ref.:  3611
Avg. size of reached set before ref.: 1698.70
Avg. size of reached set after ref.:  953.76

Total time for CEGAR algorithm:      13.902s
Time for refinements:                 1.622s
Average time for refinement:          0.021s
Max time for refinement:              0.049s

Code Coverage
-----------------------------
  Function coverage:      0.658
  Visited lines:          127
  Total lines:            434
  Line coverage:          0.293
  Visited conditions:     38
  Total conditions:       70
  Condition coverage:     0.543

CPAchecker general statistics
-----------------------------
Number of program locations:     623
Number of CFA edges:             669
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             3620
  Number of reached locations:   171 (27%)
    Avg states per location:     21
    Max states per location:     115 (at node N10)
  Number of reached functions:   25 (66%)
  Number of partitions:          3548
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N518 (after line 748), Function test called from node N75, stack depth 3 [3a439ff7], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.916s
  Time for loading CPAs:          0.480s
  Time for loading parser:        0.466s
  Time for CFA construction:      0.875s
    Time for parsing file(s):     0.300s
    Time for AST to CFA:          0.225s
    Time for CFA sanity check:    0.060s
    Time for post-processing:     0.188s
      Time for var class.:        0.079s
Time for Analysis:               13.902s
CPU time for analysis:           13.900s
Time for analyzing result:        0.002s
Total time for CPAchecker:       15.821s
Total CPU time for CPAchecker:   15.810s
Time for statistics:              0.116s

Time for Garbage Collector:       0.361s (in 45 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     42MB (    40 MiB) avg;     70MB (    67 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8007MB (  7636 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
