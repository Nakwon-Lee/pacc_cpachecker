scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product42_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qyh7nspo/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 193: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 214: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 557: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 603: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 655: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 687: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 880: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 889: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 944: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            35976 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  35497 (99%)
  Because of loop head:            270 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         209 (1%)
  Times precision was empty:       764 (2%)
  Times precision was {false}:     433 (1%)
  Times result was cached:         27882 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6897 (19%)
  Times result was 'false':        4817 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         26892
  BDD entailment checks:           18734
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          24
Number of abstraction locations:          51
Max number of predicates per location:    12
Avg number of predicates per location:    7
Total predicates per abstraction:         235324
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 32.10
Number of irrelevant predicates:          69227 (29%)
Number of preds handled by boolean abs:   39112 (17%)
  Total number of models for allsat:      9985
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.45

Time for post operator:                  1.424s
  Time for path formula creation:        1.302s
Time for strengthen operator:            0.112s
Time for prec operator:                 16.946s
  Time for abstraction:                 16.501s (Max:     0.019s, Count: 35976)
    Boolean abstraction:                 4.867s
    Solving time:                        3.611s (Max:     0.016s)
    Model enumeration time:              0.445s
    Time for BDD construction:           0.241s (Max:     0.012s)
Time for merge operator:                 0.061s
Time for coverage check:                 0.049s
  Time for BDD entailment checks:        0.043s
Total time for SMT solver (w/o itp):     4.056s

Number of path formula cache hits:   136379 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.021s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               4871
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       20050 (count: 66806, min: 0, max: 615, avg: 0.30)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.373s
Automaton transfers with branching:                0
Automaton transfer successors:                       137314 (count: 137314, min: 1, max: 1, avg: 1.00) [1 x 137314]

CPA algorithm statistics
------------------------
Number of iterations:            106409
Max size of waitlist:            18
Average size of waitlist:        8
Number of computed successors:   119157
Max successors for one state:    2
Number of times merged:          4079
Number of times stopped:         7306
Number of times breaked:         209

Total time for CPA algorithm:        22.305s (Max:     0.506s)
  Time for choose from waitlist:      0.112s
  Time for precision adjustment:     17.707s
  Time for transfer relation:         3.320s
  Time for merge operator:            0.239s
  Time for stop operator:             0.236s
  Time for adding to reached set:     0.230s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   209
Avg. length of target path (in blocks):               15093 (count: 209, min: 25, max: 121, avg: 72.22)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.569s
  Counterexample analysis:                             1.970s (Max:     0.026s, Calls: 209)
    Refinement sat check:                              0.831s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.105s
  Precision update:                                    0.110s
  ARG update:                                          0.261s

Length of refined path (in blocks):                   10247 (count: 209, min: 14, max: 88, avg: 49.03)
Number of affected states:                             3878 (count: 209, min: 1, max: 55, avg: 18.56)
Length (states) of path with itp 'true':               6160 (count: 209, min: 0, max: 59, avg: 29.47)
Length (states) of path with itp non-trivial itp:      3878 (count: 209, min: 1, max: 55, avg: 18.56)
Length (states) of path with itp 'false':               209 (count: 209, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          88 (count: 209, min: 0, max: 3, avg: 0.42)
Equal non-trivial interpolants along paths:            3581 (count: 209, min: 0, max: 51, avg: 17.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                209
Number of successful refinements:     209
Number of failed refinements:         0
Max. size of reached set before ref.: 3991
Max. size of reached set after ref.:  3208
Avg. size of reached set before ref.: 1248.46
Avg. size of reached set after ref.:  751.67

Total time for CEGAR algorithm:      25.266s
Time for refinements:                 2.866s
Average time for refinement:          0.013s
Max time for refinement:              0.036s

Code Coverage
-----------------------------
  Function coverage:      0.658
  Visited lines:          127
  Total lines:            434
  Line coverage:          0.293
  Visited conditions:     38
  Total conditions:       70
  Condition coverage:     0.543

CPAchecker general statistics
-----------------------------
Number of program locations:     623
Number of CFA edges:             669
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             3205
  Number of reached locations:   171 (27%)
    Avg states per location:     18
    Max states per location:     76 (at node N536)
  Number of reached functions:   25 (66%)
  Number of partitions:          3138
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N513 (after line 738), Function test called from node N75, stack depth 3 [6bf6b266], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.793s
  Time for loading CPAs:          0.467s
  Time for loading parser:        0.388s
  Time for CFA construction:      0.837s
    Time for parsing file(s):     0.299s
    Time for AST to CFA:          0.214s
    Time for CFA sanity check:    0.059s
    Time for post-processing:     0.169s
      Time for var class.:        0.071s
Time for Analysis:               25.266s
CPU time for analysis:           25.270s
Time for analyzing result:        0.001s
Total time for CPAchecker:       27.063s
Total CPU time for CPAchecker:   27.060s
Time for statistics:              0.101s

Time for Garbage Collector:       0.568s (in 95 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     45MB (    43 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    33 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8013MB (  7641 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
