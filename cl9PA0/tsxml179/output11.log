scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product42_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3chqrukm/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 140: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 322: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 386: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 443: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 510: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 533: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 853: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 899: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 690: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            18751 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  18406 (98%)
  Because of loop head:            203 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         142 (1%)
  Times precision was empty:       2401 (13%)
  Times precision was {false}:     204 (1%)
  Times result was cached:         13304 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2842 (15%)
  Times result was 'false':        2279 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         8194
  BDD entailment checks:           5056
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          16
Number of abstraction locations:          50
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         66426
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 21.81
Number of irrelevant predicates:          23533 (35%)
Number of preds handled by boolean abs:   9616 (14%)
  Total number of models for allsat:      3174
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.12

Time for post operator:                  0.958s
  Time for path formula creation:        0.922s
Time for strengthen operator:            0.093s
Time for prec operator:                  6.862s
  Time for abstraction:                  6.570s (Max:     0.016s, Count: 18751)
    Boolean abstraction:                 1.935s
    Solving time:                        1.336s (Max:     0.013s)
    Model enumeration time:              0.193s
    Time for BDD construction:           0.168s (Max:     0.009s)
Time for merge operator:                 0.032s
Time for coverage check:                 0.036s
  Time for BDD entailment checks:        0.032s
Total time for SMT solver (w/o itp):     1.529s

Number of path formula cache hits:   64751 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.826s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1168
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7013 (count: 26743, min: 0, max: 773, avg: 0.26)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.329s
Automaton transfers with branching:                0
Automaton transfer successors:                        72236 (count: 72236, min: 1, max: 1, avg: 1.00) [1 x 72236]

CPA algorithm statistics
------------------------
Number of iterations:            54712
Max size of waitlist:            52
Average size of waitlist:        14
Number of computed successors:   60972
Max successors for one state:    2
Number of times merged:          1569
Number of times stopped:         2686
Number of times breaked:         142

Total time for CPA algorithm:        10.781s (Max:     1.646s)
  Time for choose from waitlist:      0.063s
  Time for precision adjustment:      7.455s
  Time for transfer relation:         2.350s
  Time for merge operator:            0.121s
  Time for stop operator:             0.239s
  Time for adding to reached set:     0.167s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   142
Avg. length of target path (in blocks):                6353 (count: 142, min: 21, max: 102, avg: 44.74)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.829s
  Counterexample analysis:                             1.386s (Max:     0.025s, Calls: 142)
    Refinement sat check:                              0.532s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.061s
  Precision update:                                    0.129s
  ARG update:                                          0.159s

Length of refined path (in blocks):                    5546 (count: 142, min: 13, max: 84, avg: 39.06)
Number of affected states:                             2531 (count: 142, min: 2, max: 66, avg: 17.82)
Length (states) of path with itp 'true':               2873 (count: 142, min: 0, max: 58, avg: 20.23)
Length (states) of path with itp non-trivial itp:      2531 (count: 142, min: 2, max: 66, avg: 17.82)
Length (states) of path with itp 'false':               142 (count: 142, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         192 (count: 142, min: 0, max: 4, avg: 1.35)
Equal non-trivial interpolants along paths:            2197 (count: 142, min: 1, max: 65, avg: 15.47)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                142
Number of successful refinements:     142
Number of failed refinements:         0
Max. size of reached set before ref.: 2579
Max. size of reached set after ref.:  2070
Avg. size of reached set before ref.: 985.77
Avg. size of reached set after ref.:  652.90

Total time for CEGAR algorithm:      12.942s
Time for refinements:                 2.058s
Average time for refinement:          0.014s
Max time for refinement:              0.043s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          138
  Total lines:            429
  Line coverage:          0.322
  Visited conditions:     40
  Total conditions:       70
  Condition coverage:     0.571

CPAchecker general statistics
-----------------------------
Number of program locations:     611
Number of CFA edges:             657
Number of relevant variables:    115
Number of functions:             36
Number of loops:                 5
Size of reached set:             8741
  Number of reached locations:   183 (30%)
    Avg states per location:     47
    Max states per location:     361 (at node N604)
  Number of reached functions:   24 (67%)
  Number of partitions:          8336
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N91 (after line 177), Function test called from node N46, stack depth 3 [2e26eed3], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.039s
  Time for loading CPAs:          0.563s
  Time for loading parser:        0.459s
  Time for CFA construction:      0.904s
    Time for parsing file(s):     0.365s
    Time for AST to CFA:          0.191s
    Time for CFA sanity check:    0.056s
    Time for post-processing:     0.179s
      Time for var class.:        0.068s
Time for Analysis:               12.942s
CPU time for analysis:           12.950s
Time for analyzing result:        0.007s
Total time for CPAchecker:       14.983s
Total CPU time for CPAchecker:   14.980s
Time for statistics:              0.185s

Time for Garbage Collector:       0.266s (in 36 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     42MB (    40 MiB) avg;     72MB (    68 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8006MB (  7636 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
