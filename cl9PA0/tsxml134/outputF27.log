scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ssfrmjkx/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 517: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 656: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 665: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 834: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 866: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 880: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 892: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 915: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            24265 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  23909 (99%)
  Because of loop head:            288 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         68 (0%)
  Times precision was empty:       2933 (12%)
  Times precision was {false}:     206 (1%)
  Times result was cached:         18483 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2643 (11%)
  Times result was 'false':        2094 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         12467
  BDD entailment checks:           7701
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          11
Number of abstraction locations:          54
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         85920
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 30.16
Number of irrelevant predicates:          31151 (36%)
Number of preds handled by boolean abs:   8477 (10%)
  Total number of models for allsat:      2826
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  1.232s
  Time for path formula creation:        1.145s
Time for strengthen operator:            0.147s
Time for prec operator:                  6.803s
  Time for abstraction:                  6.397s (Max:     0.018s, Count: 24265)
    Boolean abstraction:                 1.508s
    Solving time:                        1.027s (Max:     0.012s)
    Model enumeration time:              0.124s
    Time for BDD construction:           0.180s (Max:     0.009s)
Time for merge operator:                 0.090s
Time for coverage check:                 0.040s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):     1.151s

Number of path formula cache hits:   81561 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.010s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               785
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5959 (count: 28450, min: 0, max: 369, avg: 0.21)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.283s
Automaton transfers with branching:                0
Automaton transfer successors:                        91470 (count: 91470, min: 1, max: 1, avg: 1.00) [1 x 91470]

CPA algorithm statistics
------------------------
Number of iterations:            73320
Max size of waitlist:            39
Average size of waitlist:        14
Number of computed successors:   80724
Max successors for one state:    2
Number of times merged:          2383
Number of times stopped:         4596
Number of times breaked:         68

Total time for CPA algorithm:        11.521s (Max:     0.862s)
  Time for choose from waitlist:      0.062s
  Time for precision adjustment:      7.459s
  Time for transfer relation:         2.935s
  Time for merge operator:            0.212s
  Time for stop operator:             0.192s
  Time for adding to reached set:     0.159s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   68
Avg. length of target path (in blocks):                3391 (count: 68, min: 22, max: 95, avg: 49.87)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.866s
  Counterexample analysis:                             0.482s (Max:     0.017s, Calls: 68)
    Refinement sat check:                              0.200s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.053s
  Precision update:                                    0.061s
  ARG update:                                          0.226s

Length of refined path (in blocks):                    2668 (count: 68, min: 16, max: 73, avg: 39.24)
Number of affected states:                             1556 (count: 68, min: 9, max: 62, avg: 22.88)
Length (states) of path with itp 'true':               1044 (count: 68, min: 0, max: 51, avg: 15.35)
Length (states) of path with itp non-trivial itp:      1556 (count: 68, min: 9, max: 62, avg: 22.88)
Length (states) of path with itp 'false':                68 (count: 68, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          10 (count: 68, min: 0, max: 2, avg: 0.15)
Equal non-trivial interpolants along paths:            1478 (count: 68, min: 8, max: 60, avg: 21.74)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                68
Number of successful refinements:     68
Number of failed refinements:         0
Max. size of reached set before ref.: 3113
Max. size of reached set after ref.:  1896
Avg. size of reached set before ref.: 1626.41
Avg. size of reached set after ref.:  568.19

Total time for CEGAR algorithm:      12.651s
Time for refinements:                 1.091s
Average time for refinement:          0.016s
Max time for refinement:              0.079s

Code Coverage
-----------------------------
  Function coverage:      0.649
  Visited lines:          131
  Total lines:            439
  Line coverage:          0.298
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     629
Number of CFA edges:             679
Number of relevant variables:    114
Number of functions:             37
Number of loops:                 5
Size of reached set:             2076
  Number of reached locations:   178 (28%)
    Avg states per location:     11
    Max states per location:     48 (at node N619)
  Number of reached functions:   24 (65%)
  Number of partitions:          2002
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N496 (before lines 734-779), Function test called from node N353, stack depth 3 [13188cb], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.928s
  Time for loading CPAs:          0.521s
  Time for loading parser:        0.431s
  Time for CFA construction:      0.860s
    Time for parsing file(s):     0.325s
    Time for AST to CFA:          0.183s
    Time for CFA sanity check:    0.061s
    Time for post-processing:     0.177s
      Time for var class.:        0.075s
Time for Analysis:               12.651s
CPU time for analysis:           12.640s
Time for analyzing result:        0.007s
Total time for CPAchecker:       14.586s
Total CPU time for CPAchecker:   14.570s
Time for statistics:              0.071s

Time for Garbage Collector:       0.318s (in 45 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     41MB (    39 MiB) avg;     69MB (    65 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8008MB (  7637 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
