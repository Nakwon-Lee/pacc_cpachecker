scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wr2m84v5/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 517: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 656: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 665: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 834: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 866: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 880: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 892: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 915: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            27975 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  27476 (98%)
  Because of loop head:            397 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         102 (0%)
  Times precision was empty:       1241 (4%)
  Times precision was {false}:     199 (1%)
  Times result was cached:         23543 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2992 (11%)
  Times result was 'false':        3616 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         16311
  BDD entailment checks:           9795
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          11
Number of abstraction locations:          51
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         121114
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 37.95
Number of irrelevant predicates:          43357 (36%)
Number of preds handled by boolean abs:   9564 (8%)
  Total number of models for allsat:      3051
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  1.144s
  Time for path formula creation:        1.086s
Time for strengthen operator:            0.100s
Time for prec operator:                  8.033s
  Time for abstraction:                  7.727s (Max:     0.021s, Count: 27975)
    Boolean abstraction:                 1.830s
    Solving time:                        1.330s (Max:     0.013s)
    Model enumeration time:              0.190s
    Time for BDD construction:           0.120s (Max:     0.010s)
Time for merge operator:                 0.072s
Time for coverage check:                 0.016s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):     1.520s

Number of path formula cache hits:   101637 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.929s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               549
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6342 (count: 30842, min: 0, max: 439, avg: 0.21)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.277s
Automaton transfers with branching:                0
Automaton transfer successors:                       110310 (count: 110310, min: 1, max: 1, avg: 1.00) [1 x 110310]

CPA algorithm statistics
------------------------
Number of iterations:            87177
Max size of waitlist:            24
Average size of waitlist:        10
Number of computed successors:   97192
Max successors for one state:    2
Number of times merged:          3258
Number of times stopped:         5471
Number of times breaked:         102

Total time for CPA algorithm:        12.221s (Max:     0.364s)
  Time for choose from waitlist:      0.079s
  Time for precision adjustment:      8.604s
  Time for transfer relation:         2.566s
  Time for merge operator:            0.180s
  Time for stop operator:             0.167s
  Time for adding to reached set:     0.188s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   102
Avg. length of target path (in blocks):                8507 (count: 102, min: 21, max: 138, avg: 83.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.473s
  Counterexample analysis:                             1.075s (Max:     0.039s, Calls: 102)
    Refinement sat check:                              0.540s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.064s
  Precision update:                                    0.061s
  ARG update:                                          0.194s

Length of refined path (in blocks):                    6601 (count: 102, min: 15, max: 121, avg: 64.72)
Number of affected states:                             3327 (count: 102, min: 3, max: 77, avg: 32.62)
Length (states) of path with itp 'true':               3172 (count: 102, min: 0, max: 55, avg: 31.10)
Length (states) of path with itp non-trivial itp:      3327 (count: 102, min: 3, max: 77, avg: 32.62)
Length (states) of path with itp 'false':               102 (count: 102, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          14 (count: 102, min: 0, max: 2, avg: 0.14)
Equal non-trivial interpolants along paths:            3211 (count: 102, min: 2, max: 75, avg: 31.48)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                102
Number of successful refinements:     102
Number of failed refinements:         0
Max. size of reached set before ref.: 2304
Max. size of reached set after ref.:  1071
Avg. size of reached set before ref.: 1182.52
Avg. size of reached set after ref.:  334.16

Total time for CEGAR algorithm:      13.902s
Time for refinements:                 1.646s
Average time for refinement:          0.016s
Max time for refinement:              0.044s

Code Coverage
-----------------------------
  Function coverage:      0.649
  Visited lines:          131
  Total lines:            439
  Line coverage:          0.298
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     629
Number of CFA edges:             679
Number of relevant variables:    114
Number of functions:             37
Number of loops:                 5
Size of reached set:             1573
  Number of reached locations:   178 (28%)
    Avg states per location:     8
    Max states per location:     33 (at node N552)
  Number of reached functions:   24 (65%)
  Number of partitions:          1517
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N496 (before lines 734-779), Function test called from node N353, stack depth 3 [4ec78f1f], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.851s
  Time for loading CPAs:          0.516s
  Time for loading parser:        0.390s
  Time for CFA construction:      0.857s
    Time for parsing file(s):     0.294s
    Time for AST to CFA:          0.234s
    Time for CFA sanity check:    0.047s
    Time for post-processing:     0.175s
      Time for var class.:        0.073s
Time for Analysis:               13.907s
CPU time for analysis:           13.900s
Time for analyzing result:        0.001s
Total time for CPAchecker:       15.760s
Total CPU time for CPAchecker:   15.750s
Time for statistics:              0.080s

Time for Garbage Collector:       0.351s (in 57 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     43MB (    41 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8009MB (  7638 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
