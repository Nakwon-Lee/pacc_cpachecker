scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hkun4kzc/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 517: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 656: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 665: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 834: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 866: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 880: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 892: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 915: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            15442 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15222 (99%)
  Because of loop head:            156 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         64 (0%)
  Times precision was empty:       1210 (8%)
  Times precision was {false}:     144 (1%)
  Times result was cached:         12003 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2085 (14%)
  Times result was 'false':        1797 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         7927
  BDD entailment checks:           4215
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          11
Number of abstraction locations:          54
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         56761
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 25.46
Number of irrelevant predicates:          16971 (30%)
Number of preds handled by boolean abs:   6877 (12%)
  Total number of models for allsat:      2222
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  1.051s
  Time for path formula creation:        0.996s
Time for strengthen operator:            0.084s
Time for prec operator:                  6.261s
  Time for abstraction:                  5.916s (Max:     0.017s, Count: 15442)
    Boolean abstraction:                 1.435s
    Solving time:                        1.003s (Max:     0.013s)
    Model enumeration time:              0.118s
    Time for BDD construction:           0.192s (Max:     0.013s)
Time for merge operator:                 0.099s
Time for coverage check:                 0.039s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     1.121s

Number of path formula cache hits:   51463 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.899s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               723
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4820 (count: 19446, min: 0, max: 402, avg: 0.25)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.201s
Automaton transfers with branching:                0
Automaton transfer successors:                        62198 (count: 62198, min: 1, max: 1, avg: 1.00) [1 x 62198]

CPA algorithm statistics
------------------------
Number of iterations:            48171
Max size of waitlist:            46
Average size of waitlist:        13
Number of computed successors:   53726
Max successors for one state:    2
Number of times merged:          1856
Number of times stopped:         2799
Number of times breaked:         64

Total time for CPA algorithm:         9.977s (Max:     0.618s)
  Time for choose from waitlist:      0.064s
  Time for precision adjustment:      6.696s
  Time for transfer relation:         2.227s
  Time for merge operator:            0.198s
  Time for stop operator:             0.229s
  Time for adding to reached set:     0.163s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   64
Avg. length of target path (in blocks):                3216 (count: 64, min: 22, max: 95, avg: 50.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.888s
  Counterexample analysis:                             0.502s (Max:     0.019s, Calls: 64)
    Refinement sat check:                              0.247s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.068s
  Precision update:                                    0.053s
  ARG update:                                          0.217s

Length of refined path (in blocks):                    2561 (count: 64, min: 16, max: 71, avg: 40.02)
Number of affected states:                             1414 (count: 64, min: 3, max: 62, avg: 22.09)
Length (states) of path with itp 'true':               1083 (count: 64, min: 0, max: 51, avg: 16.92)
Length (states) of path with itp non-trivial itp:      1414 (count: 64, min: 3, max: 62, avg: 22.09)
Length (states) of path with itp 'false':                64 (count: 64, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          10 (count: 64, min: 0, max: 2, avg: 0.16)
Equal non-trivial interpolants along paths:            1340 (count: 64, min: 2, max: 60, avg: 20.94)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                64
Number of successful refinements:     64
Number of failed refinements:         0
Max. size of reached set before ref.: 2834
Max. size of reached set after ref.:  1287
Avg. size of reached set before ref.: 1190.88
Avg. size of reached set after ref.:  453.56

Total time for CEGAR algorithm:      11.049s
Time for refinements:                 1.051s
Average time for refinement:          0.016s
Max time for refinement:              0.048s

Code Coverage
-----------------------------
  Function coverage:      0.649
  Visited lines:          131
  Total lines:            439
  Line coverage:          0.298
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     629
Number of CFA edges:             679
Number of relevant variables:    114
Number of functions:             37
Number of loops:                 5
Size of reached set:             1943
  Number of reached locations:   178 (28%)
    Avg states per location:     10
    Max states per location:     44 (at node N379)
  Number of reached functions:   24 (65%)
  Number of partitions:          1876
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N496 (before lines 734-779), Function test called from node N353, stack depth 3 [24bff8d7], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.210s
  Time for loading CPAs:          0.496s
  Time for loading parser:        0.483s
  Time for CFA construction:      1.079s
    Time for parsing file(s):     0.393s
    Time for AST to CFA:          0.281s
    Time for CFA sanity check:    0.067s
    Time for post-processing:     0.210s
      Time for var class.:        0.095s
Time for Analysis:               11.049s
CPU time for analysis:           11.040s
Time for analyzing result:        0.001s
Total time for CPAchecker:       13.261s
Total CPU time for CPAchecker:   13.250s
Time for statistics:              0.069s

Time for Garbage Collector:       0.241s (in 32 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     40MB (    38 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    31 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8069MB (  7695 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
