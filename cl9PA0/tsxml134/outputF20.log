scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tiyzkweq/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 517: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 656: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 665: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 834: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 866: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 880: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 892: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 915: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            39018 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  38410 (98%)
  Because of loop head:            484 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         124 (0%)
  Times precision was empty:       1966 (5%)
  Times precision was {false}:     222 (1%)
  Times result was cached:         33924 (87%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2906 (7%)
  Times result was 'false':        5258 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         24151
  BDD entailment checks:           13069
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          11
Number of abstraction locations:          54
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         144341
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 46.14
Number of irrelevant predicates:          49627 (34%)
Number of preds handled by boolean abs:   8999 (6%)
  Total number of models for allsat:      3158
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.09

Time for post operator:                  1.461s
  Time for path formula creation:        1.381s
Time for strengthen operator:            0.151s
Time for prec operator:                  8.053s
  Time for abstraction:                  7.583s (Max:     0.016s, Count: 39018)
    Boolean abstraction:                 1.573s
    Solving time:                        1.144s (Max:     0.015s)
    Model enumeration time:              0.171s
    Time for BDD construction:           0.157s (Max:     0.010s)
Time for merge operator:                 0.110s
Time for coverage check:                 0.055s
  Time for BDD entailment checks:        0.051s
Total time for SMT solver (w/o itp):     1.315s

Number of path formula cache hits:   151185 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.151s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               732
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6721 (count: 35116, min: 0, max: 383, avg: 0.19)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.376s
Automaton transfers with branching:                0
Automaton transfer successors:                       159843 (count: 159843, min: 1, max: 1, avg: 1.00) [1 x 159843]

CPA algorithm statistics
------------------------
Number of iterations:            122413
Max size of waitlist:            87
Average size of waitlist:        33
Number of computed successors:   140408
Max successors for one state:    2
Number of times merged:          5541
Number of times stopped:         8816
Number of times breaked:         124

Total time for CPA algorithm:        13.453s (Max:     0.428s)
  Time for choose from waitlist:      0.117s
  Time for precision adjustment:      8.889s
  Time for transfer relation:         3.169s
  Time for merge operator:            0.223s
  Time for stop operator:             0.263s
  Time for adding to reached set:     0.199s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   124
Avg. length of target path (in blocks):                7490 (count: 124, min: 21, max: 129, avg: 60.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.438s
  Counterexample analysis:                             0.973s (Max:     0.017s, Calls: 124)
    Refinement sat check:                              0.446s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.045s
  Precision update:                                    0.071s
  ARG update:                                          0.247s

Length of refined path (in blocks):                    5930 (count: 124, min: 15, max: 88, avg: 47.82)
Number of affected states:                             2460 (count: 124, min: 8, max: 63, avg: 19.84)
Length (states) of path with itp 'true':               3346 (count: 124, min: 0, max: 70, avg: 26.98)
Length (states) of path with itp non-trivial itp:      2460 (count: 124, min: 8, max: 63, avg: 19.84)
Length (states) of path with itp 'false':               124 (count: 124, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          11 (count: 124, min: 0, max: 3, avg: 0.09)
Equal non-trivial interpolants along paths:            2325 (count: 124, min: 7, max: 62, avg: 18.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                124
Number of successful refinements:     124
Number of failed refinements:         0
Max. size of reached set before ref.: 4026
Max. size of reached set after ref.:  2944
Avg. size of reached set before ref.: 1863.92
Avg. size of reached set after ref.:  870.40

Total time for CEGAR algorithm:      15.214s
Time for refinements:                 1.689s
Average time for refinement:          0.013s
Max time for refinement:              0.040s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          147
  Total lines:            439
  Line coverage:          0.335
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     629
Number of CFA edges:             679
Number of relevant variables:    114
Number of functions:             37
Number of loops:                 5
Size of reached set:             3139
  Number of reached locations:   199 (32%)
    Avg states per location:     15
    Max states per location:     69 (at node N552)
  Number of reached functions:   25 (68%)
  Number of partitions:          3041
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N313 (before lines 427-441), Function cleanup called from node N524, stack depth 4 [1954e5dd], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          1.955s
  Time for loading CPAs:          0.550s
  Time for loading parser:        0.439s
  Time for CFA construction:      0.855s
    Time for parsing file(s):     0.277s
    Time for AST to CFA:          0.204s
    Time for CFA sanity check:    0.059s
    Time for post-processing:     0.199s
      Time for var class.:        0.076s
Time for Analysis:               15.215s
CPU time for analysis:           15.210s
Time for analyzing result:        0.002s
Total time for CPAchecker:       17.173s
Total CPU time for CPAchecker:   17.170s
Time for statistics:              0.129s

Time for Garbage Collector:       0.470s (in 72 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    67 MiB) max;     44MB (    42 MiB) avg;     74MB (    70 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    32 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8009MB (  7638 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
