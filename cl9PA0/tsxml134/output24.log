scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_forgwoy_/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 517: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 656: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 665: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 834: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 866: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 880: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 892: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 915: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            19628 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  19305 (98%)
  Because of loop head:            266 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         57 (0%)
  Times precision was empty:       3617 (18%)
  Times precision was {false}:     167 (1%)
  Times result was cached:         13967 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1877 (10%)
  Times result was 'false':        1600 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         8703
  BDD entailment checks:           4891
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          11
Number of abstraction locations:          54
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         54313
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 26.57
Number of irrelevant predicates:          19269 (35%)
Number of preds handled by boolean abs:   5349 (10%)
  Total number of models for allsat:      1962
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.05

Time for post operator:                  1.144s
  Time for path formula creation:        1.074s
Time for strengthen operator:            0.130s
Time for prec operator:                  6.354s
  Time for abstraction:                  5.942s (Max:     0.019s, Count: 19628)
    Boolean abstraction:                 1.282s
    Solving time:                        0.904s (Max:     0.013s)
    Model enumeration time:              0.099s
    Time for BDD construction:           0.164s (Max:     0.013s)
Time for merge operator:                 0.077s
Time for coverage check:                 0.039s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     1.003s

Number of path formula cache hits:   70302 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.933s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               583
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4170 (count: 21404, min: 0, max: 319, avg: 0.19)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.324s
Automaton transfers with branching:                0
Automaton transfer successors:                        74774 (count: 74774, min: 1, max: 1, avg: 1.00) [1 x 74774]

CPA algorithm statistics
------------------------
Number of iterations:            59641
Max size of waitlist:            26
Average size of waitlist:        10
Number of computed successors:   65617
Max successors for one state:    2
Number of times merged:          1906
Number of times stopped:         4060
Number of times breaked:         57

Total time for CPA algorithm:        10.937s (Max:     0.869s)
  Time for choose from waitlist:      0.098s
  Time for precision adjustment:      7.055s
  Time for transfer relation:         2.707s
  Time for merge operator:            0.225s
  Time for stop operator:             0.226s
  Time for adding to reached set:     0.167s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   57
Avg. length of target path (in blocks):                2833 (count: 57, min: 21, max: 85, avg: 49.70)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.918s
  Counterexample analysis:                             0.527s (Max:     0.020s, Calls: 57)
    Refinement sat check:                              0.245s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.051s
  Precision update:                                    0.058s
  ARG update:                                          0.221s

Length of refined path (in blocks):                    2267 (count: 57, min: 15, max: 75, avg: 39.77)
Number of affected states:                             1370 (count: 57, min: 9, max: 62, avg: 24.04)
Length (states) of path with itp 'true':                840 (count: 57, min: 0, max: 51, avg: 14.74)
Length (states) of path with itp non-trivial itp:      1370 (count: 57, min: 9, max: 62, avg: 24.04)
Length (states) of path with itp 'false':                57 (count: 57, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          10 (count: 57, min: 0, max: 2, avg: 0.18)
Equal non-trivial interpolants along paths:            1303 (count: 57, min: 8, max: 60, avg: 22.86)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                57
Number of successful refinements:     57
Number of failed refinements:         0
Max. size of reached set before ref.: 3324
Max. size of reached set after ref.:  1536
Avg. size of reached set before ref.: 1424.65
Avg. size of reached set after ref.:  421.51

Total time for CEGAR algorithm:      12.028s
Time for refinements:                 1.058s
Average time for refinement:          0.018s
Max time for refinement:              0.080s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          147
  Total lines:            439
  Line coverage:          0.335
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     629
Number of CFA edges:             679
Number of relevant variables:    114
Number of functions:             37
Number of loops:                 5
Size of reached set:             2779
  Number of reached locations:   199 (32%)
    Avg states per location:     13
    Max states per location:     61 (at node N552)
  Number of reached functions:   25 (68%)
  Number of partitions:          2676
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N496 (before lines 734-779), Function test called from node N353, stack depth 3 [23e3f9d4], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.077s
  Time for loading CPAs:          0.550s
  Time for loading parser:        0.412s
  Time for CFA construction:      0.966s
    Time for parsing file(s):     0.285s
    Time for AST to CFA:          0.226s
    Time for CFA sanity check:    0.069s
    Time for post-processing:     0.276s
      Time for var class.:        0.114s
Time for Analysis:               12.029s
CPU time for analysis:           12.030s
Time for analyzing result:        0.002s
Total time for CPAchecker:       14.113s
Total CPU time for CPAchecker:   14.110s
Time for statistics:              0.097s

Time for Garbage Collector:       0.247s (in 34 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     41MB (    39 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     32MB (    30 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8007MB (  7636 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
