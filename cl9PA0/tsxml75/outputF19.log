scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product25_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_t8eqhdi8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 147: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 317: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 326: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 381: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 543: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 863: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 909: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 700: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1784 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1713 (96%)
  Because of loop head:            52 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         19 (1%)
  Times precision was empty:       308 (17%)
  Times precision was {false}:     60 (3%)
  Times result was cached:         1248 (70%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      168 (9%)
  Times result was 'false':        241 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         540
  BDD entailment checks:           252
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          34
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         3683
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 16.15
Number of irrelevant predicates:          1021 (28%)
Number of preds handled by boolean abs:   346 (9%)
  Total number of models for allsat:      182
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  0.328s
  Time for path formula creation:        0.321s
Time for strengthen operator:            0.033s
Time for prec operator:                  0.762s
  Time for abstraction:                  0.699s (Max:     0.013s, Count: 1784)
    Boolean abstraction:                 0.117s
    Solving time:                        0.102s (Max:     0.008s)
    Model enumeration time:              0.010s
    Time for BDD construction:           0.015s (Max:     0.008s)
Time for merge operator:                 0.005s
Time for coverage check:                 0.015s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     0.112s

Number of path formula cache hits:   5872 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.298s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               252
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         335 (count: 1986, min: 0, max: 224, avg: 0.17)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.043s
Automaton transfers with branching:                0
Automaton transfer successors:                         6767 (count: 6767, min: 1, max: 1, avg: 1.00) [1 x 6767]

CPA algorithm statistics
------------------------
Number of iterations:            5286
Max size of waitlist:            10
Average size of waitlist:        4
Number of computed successors:   5897
Max successors for one state:    2
Number of times merged:          144
Number of times stopped:         268
Number of times breaked:         19

Total time for CPA algorithm:         1.835s (Max:     0.206s)
  Time for choose from waitlist:      0.015s
  Time for precision adjustment:      0.887s
  Time for transfer relation:         0.718s
  Time for merge operator:            0.032s
  Time for stop operator:             0.086s
  Time for adding to reached set:     0.035s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   19
Avg. length of target path (in blocks):                 566 (count: 19, min: 19, max: 46, avg: 29.79)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.215s
  Counterexample analysis:                             0.140s (Max:     0.019s, Calls: 19)
    Refinement sat check:                              0.044s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.022s
  Precision update:                                    0.018s
  ARG update:                                          0.020s

Length of refined path (in blocks):                     435 (count: 19, min: 13, max: 43, avg: 22.89)
Number of affected states:                              379 (count: 19, min: 11, max: 42, avg: 19.95)
Length (states) of path with itp 'true':                 37 (count: 19, min: 0, max: 13, avg: 1.95)
Length (states) of path with itp non-trivial itp:       379 (count: 19, min: 11, max: 42, avg: 19.95)
Length (states) of path with itp 'false':                19 (count: 19, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 19, min: 0, max: 1, avg: 0.26)
Equal non-trivial interpolants along paths:             355 (count: 19, min: 10, max: 40, avg: 18.68)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                19
Number of successful refinements:     19
Number of failed refinements:         0
Max. size of reached set before ref.: 737
Max. size of reached set after ref.:  356
Avg. size of reached set before ref.: 281.47
Avg. size of reached set after ref.:  32.84

Total time for CEGAR algorithm:       2.079s
Time for refinements:                 0.242s
Average time for refinement:          0.012s
Max time for refinement:              0.033s

Code Coverage
-----------------------------
  Function coverage:      0.457
  Visited lines:          96
  Total lines:            420
  Line coverage:          0.229
  Visited conditions:     28
  Total conditions:       66
  Condition coverage:     0.424

CPAchecker general statistics
-----------------------------
Number of program locations:     598
Number of CFA edges:             641
Number of relevant variables:    112
Number of functions:             35
Number of loops:                 5
Size of reached set:             665
  Number of reached locations:   127 (21%)
    Avg states per location:     5
    Max states per location:     26 (at node N82)
  Number of reached functions:   16 (46%)
  Number of partitions:          654
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N212 (before lines 396-441), Function test called from node N289, stack depth 3 [22752544], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.864s
  Time for loading CPAs:          0.528s
  Time for loading parser:        0.450s
  Time for CFA construction:      0.796s
    Time for parsing file(s):     0.309s
    Time for AST to CFA:          0.165s
    Time for CFA sanity check:    0.056s
    Time for post-processing:     0.169s
      Time for var class.:        0.067s
Time for Analysis:                2.079s
CPU time for analysis:            2.080s
Time for analyzing result:        0.009s
Total time for CPAchecker:        3.945s
Total CPU time for CPAchecker:    3.950s
Time for statistics:              0.077s

Time for Garbage Collector:       0.083s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    56 MiB) max;     34MB (    32 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     26MB (    25 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   7980MB (  7610 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
