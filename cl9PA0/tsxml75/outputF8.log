scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product25_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wvx3nzck/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 147: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 317: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 326: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 381: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 543: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 863: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 909: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 700: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1960 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1909 (97%)
  Because of loop head:            35 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (1%)
  Times precision was empty:       694 (35%)
  Times precision was {false}:     48 (2%)
  Times result was cached:         1085 (55%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      133 (7%)
  Times result was 'false':        214 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         642
  BDD entailment checks:           224
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          34
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         2558
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 14.13
Number of irrelevant predicates:          903 (35%)
Number of preds handled by boolean abs:   215 (8%)
  Total number of models for allsat:      152
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.14

Time for post operator:                  0.375s
  Time for path formula creation:        0.351s
Time for strengthen operator:            0.057s
Time for prec operator:                  0.845s
  Time for abstraction:                  0.757s (Max:     0.018s, Count: 1960)
    Boolean abstraction:                 0.165s
    Solving time:                        0.123s (Max:     0.013s)
    Model enumeration time:              0.009s
    Time for BDD construction:           0.013s (Max:     0.003s)
Time for merge operator:                 0.020s
Time for coverage check:                 0.010s
  Time for BDD entailment checks:        0.010s
Total time for SMT solver (w/o itp):     0.132s

Number of path formula cache hits:   7137 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.317s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               223
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         268 (count: 2017, min: 0, max: 197, avg: 0.13)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.108s
Automaton transfers with branching:                0
Automaton transfer successors:                         7857 (count: 7857, min: 1, max: 1, avg: 1.00) [1 x 7857]

CPA algorithm statistics
------------------------
Number of iterations:            5906
Max size of waitlist:            33
Average size of waitlist:        9
Number of computed successors:   6710
Max successors for one state:    2
Number of times merged:          209
Number of times stopped:         343
Number of times breaked:         16

Total time for CPA algorithm:         2.194s (Max:     0.380s)
  Time for choose from waitlist:      0.030s
  Time for precision adjustment:      1.027s
  Time for transfer relation:         0.828s
  Time for merge operator:            0.052s
  Time for stop operator:             0.053s
  Time for adding to reached set:     0.074s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                 429 (count: 16, min: 19, max: 44, avg: 26.81)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.246s
  Counterexample analysis:                             0.141s (Max:     0.022s, Calls: 16)
    Refinement sat check:                              0.074s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.034s
  Precision update:                                    0.027s
  ARG update:                                          0.025s

Length of refined path (in blocks):                     309 (count: 16, min: 13, max: 36, avg: 19.31)
Number of affected states:                              280 (count: 16, min: 11, max: 35, avg: 17.50)
Length (states) of path with itp 'true':                 13 (count: 16, min: 0, max: 13, avg: 0.81)
Length (states) of path with itp non-trivial itp:       280 (count: 16, min: 11, max: 35, avg: 17.50)
Length (states) of path with itp 'false':                16 (count: 16, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 16, min: 0, max: 1, avg: 0.13)
Equal non-trivial interpolants along paths:             262 (count: 16, min: 10, max: 34, avg: 16.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 734
Max. size of reached set after ref.:  220
Avg. size of reached set before ref.: 349.06
Avg. size of reached set after ref.:  16.56

Total time for CEGAR algorithm:       2.478s
Time for refinements:                 0.281s
Average time for refinement:          0.017s
Max time for refinement:              0.073s

Code Coverage
-----------------------------
  Function coverage:      0.457
  Visited lines:          96
  Total lines:            420
  Line coverage:          0.229
  Visited conditions:     28
  Total conditions:       66
  Condition coverage:     0.424

CPAchecker general statistics
-----------------------------
Number of program locations:     598
Number of CFA edges:             641
Number of relevant variables:    112
Number of functions:             35
Number of loops:                 5
Size of reached set:             834
  Number of reached locations:   127 (21%)
    Avg states per location:     6
    Max states per location:     35 (at node N82)
  Number of reached functions:   16 (46%)
  Number of partitions:          816
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N212 (before lines 396-441), Function test called from node N289, stack depth 3 [67531e3a], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.175s
  Time for loading CPAs:          0.546s
  Time for loading parser:        0.515s
  Time for CFA construction:      1.013s
    Time for parsing file(s):     0.353s
    Time for AST to CFA:          0.255s
    Time for CFA sanity check:    0.068s
    Time for post-processing:     0.223s
      Time for var class.:        0.114s
Time for Analysis:                2.478s
CPU time for analysis:            2.480s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.656s
Total CPU time for CPAchecker:    4.650s
Time for statistics:              0.067s

Time for Garbage Collector:       0.089s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    55 MiB) max;     33MB (    32 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     26MB (    25 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7981MB (  7611 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
