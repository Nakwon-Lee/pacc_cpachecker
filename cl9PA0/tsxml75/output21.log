scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product25_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_m2w5tlzc/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 147: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 317: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 326: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 381: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 543: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 863: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 909: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 700: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2125 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2035 (96%)
  Because of loop head:            71 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         19 (1%)
  Times precision was empty:       273 (13%)
  Times precision was {false}:     54 (3%)
  Times result was cached:         1467 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      331 (16%)
  Times result was 'false':        256 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         961
  BDD entailment checks:           559
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          34
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         5255
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 13.65
Number of irrelevant predicates:          1512 (29%)
Number of preds handled by boolean abs:   750 (14%)
  Total number of models for allsat:      357
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  0.406s
  Time for path formula creation:        0.393s
Time for strengthen operator:            0.049s
Time for prec operator:                  1.212s
  Time for abstraction:                  1.128s (Max:     0.024s, Count: 2125)
    Boolean abstraction:                 0.305s
    Solving time:                        0.207s (Max:     0.013s)
    Model enumeration time:              0.038s
    Time for BDD construction:           0.033s (Max:     0.008s)
Time for merge operator:                 0.016s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):     0.245s

Number of path formula cache hits:   5456 (59%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.350s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               277
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         785 (count: 3204, min: 0, max: 347, avg: 0.25)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.054s
Automaton transfers with branching:                0
Automaton transfer successors:                         8135 (count: 8135, min: 1, max: 1, avg: 1.00) [1 x 8135]

CPA algorithm statistics
------------------------
Number of iterations:            6354
Max size of waitlist:            20
Average size of waitlist:        6
Number of computed successors:   7178
Max successors for one state:    2
Number of times merged:          201
Number of times stopped:         404
Number of times breaked:         19

Total time for CPA algorithm:         2.458s (Max:     0.331s)
  Time for choose from waitlist:      0.022s
  Time for precision adjustment:      1.372s
  Time for transfer relation:         0.798s
  Time for merge operator:            0.042s
  Time for stop operator:             0.042s
  Time for adding to reached set:     0.057s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   19
Avg. length of target path (in blocks):                 820 (count: 19, min: 19, max: 66, avg: 43.16)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.241s
  Counterexample analysis:                             0.149s (Max:     0.017s, Calls: 19)
    Refinement sat check:                              0.057s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.007s
  ARG update:                                          0.031s

Length of refined path (in blocks):                     505 (count: 19, min: 13, max: 42, avg: 26.58)
Number of affected states:                              382 (count: 19, min: 11, max: 36, avg: 20.11)
Length (states) of path with itp 'true':                104 (count: 19, min: 0, max: 14, avg: 5.47)
Length (states) of path with itp non-trivial itp:       382 (count: 19, min: 11, max: 36, avg: 20.11)
Length (states) of path with itp 'false':                19 (count: 19, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 19, min: 0, max: 1, avg: 0.16)
Equal non-trivial interpolants along paths:             360 (count: 19, min: 10, max: 34, avg: 18.95)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                19
Number of successful refinements:     19
Number of failed refinements:         0
Max. size of reached set before ref.: 661
Max. size of reached set after ref.:  289
Avg. size of reached set before ref.: 373.79
Avg. size of reached set after ref.:  62.21

Total time for CEGAR algorithm:       2.771s
Time for refinements:                 0.292s
Average time for refinement:          0.015s
Max time for refinement:              0.037s

Code Coverage
-----------------------------
  Function coverage:      0.457
  Visited lines:          96
  Total lines:            420
  Line coverage:          0.229
  Visited conditions:     28
  Total conditions:       66
  Condition coverage:     0.424

CPAchecker general statistics
-----------------------------
Number of program locations:     598
Number of CFA edges:             641
Number of relevant variables:    112
Number of functions:             35
Number of loops:                 5
Size of reached set:             599
  Number of reached locations:   127 (21%)
    Avg states per location:     4
    Max states per location:     23 (at node N82)
  Number of reached functions:   16 (46%)
  Number of partitions:          582
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N114 (before line 239), Function timeShift called from node N247, stack depth 5 [2b08772d], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0

Time for analysis setup:          1.997s
  Time for loading CPAs:          0.522s
  Time for loading parser:        0.467s
  Time for CFA construction:      0.878s
    Time for parsing file(s):     0.292s
    Time for AST to CFA:          0.224s
    Time for CFA sanity check:    0.061s
    Time for post-processing:     0.195s
      Time for var class.:        0.081s
Time for Analysis:                2.771s
CPU time for analysis:            2.770s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.771s
Total CPU time for CPAchecker:    4.770s
Time for statistics:              0.059s

Time for Garbage Collector:       0.090s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    55 MiB) max;     34MB (    33 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8041MB (  7669 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
