scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product26_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0ps4rzxt/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 452: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 624: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 633: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 802: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 289: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2167 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2101 (97%)
  Because of loop head:            48 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18 (1%)
  Times precision was empty:       535 (25%)
  Times precision was {false}:     50 (2%)
  Times result was cached:         1428 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      154 (7%)
  Times result was 'false':        124 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         667
  BDD entailment checks:           237
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          4
Number of abstraction locations:          41
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         2949
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 14.46
Number of irrelevant predicates:          848 (29%)
Number of preds handled by boolean abs:   227 (8%)
  Total number of models for allsat:      164
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.06

Time for post operator:                  0.443s
  Time for path formula creation:        0.420s
Time for strengthen operator:            0.055s
Time for prec operator:                  0.720s
  Time for abstraction:                  0.641s (Max:     0.016s, Count: 2167)
    Boolean abstraction:                 0.135s
    Solving time:                        0.082s (Max:     0.013s)
    Model enumeration time:              0.011s
    Time for BDD construction:           0.025s (Max:     0.012s)
Time for merge operator:                 0.031s
Time for coverage check:                 0.023s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     0.093s

Number of path formula cache hits:   6514 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.399s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               215
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         277 (count: 1998, min: 0, max: 173, avg: 0.14)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.120s
Automaton transfers with branching:                0
Automaton transfer successors:                         8206 (count: 8206, min: 1, max: 1, avg: 1.00) [1 x 8206]

CPA algorithm statistics
------------------------
Number of iterations:            6264
Max size of waitlist:            24
Average size of waitlist:        8
Number of computed successors:   7010
Max successors for one state:    2
Number of times merged:          215
Number of times stopped:         394
Number of times breaked:         18

Total time for CPA algorithm:         2.146s (Max:     0.263s)
  Time for choose from waitlist:      0.018s
  Time for precision adjustment:      0.893s
  Time for transfer relation:         0.964s
  Time for merge operator:            0.068s
  Time for stop operator:             0.052s
  Time for adding to reached set:     0.036s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   18
Avg. length of target path (in blocks):                 723 (count: 18, min: 25, max: 50, avg: 40.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.219s
  Counterexample analysis:                             0.140s (Max:     0.015s, Calls: 18)
    Refinement sat check:                              0.052s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.016s
  Precision update:                                    0.015s
  ARG update:                                          0.027s

Length of refined path (in blocks):                     495 (count: 18, min: 19, max: 42, avg: 27.50)
Number of affected states:                              417 (count: 18, min: 6, max: 41, avg: 23.17)
Length (states) of path with itp 'true':                 60 (count: 18, min: 0, max: 22, avg: 3.33)
Length (states) of path with itp non-trivial itp:       417 (count: 18, min: 6, max: 41, avg: 23.17)
Length (states) of path with itp 'false':                18 (count: 18, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 18, min: 0, max: 1, avg: 0.06)
Equal non-trivial interpolants along paths:             398 (count: 18, min: 5, max: 40, avg: 22.11)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                18
Number of successful refinements:     18
Number of failed refinements:         0
Max. size of reached set before ref.: 661
Max. size of reached set after ref.:  205
Avg. size of reached set before ref.: 368.78
Avg. size of reached set after ref.:  35.56

Total time for CEGAR algorithm:       2.401s
Time for refinements:                 0.249s
Average time for refinement:          0.013s
Max time for refinement:              0.043s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          107
  Total lines:            431
  Line coverage:          0.248
  Visited conditions:     30
  Total conditions:       68
  Condition coverage:     0.441

CPAchecker general statistics
-----------------------------
Number of program locations:     620
Number of CFA edges:             665
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             495
  Number of reached locations:   143 (23%)
    Avg states per location:     3
    Max states per location:     16 (at node N611)
  Number of reached functions:   19 (50%)
  Number of partitions:          493
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N376 (before line 546), Function timeShift called from node N539, stack depth 5 [5eabff6b], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0

Time for analysis setup:          1.845s
  Time for loading CPAs:          0.540s
  Time for loading parser:        0.386s
  Time for CFA construction:      0.803s
    Time for parsing file(s):     0.269s
    Time for AST to CFA:          0.213s
    Time for CFA sanity check:    0.077s
    Time for post-processing:     0.156s
      Time for var class.:        0.053s
Time for Analysis:                2.401s
CPU time for analysis:            2.400s
Time for analyzing result:        0.003s
Total time for CPAchecker:        4.248s
Total CPU time for CPAchecker:    4.240s
Time for statistics:              0.065s

Time for Garbage Collector:       0.077s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     34MB (    33 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    26 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7984MB (  7614 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
