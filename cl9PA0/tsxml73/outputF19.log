scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product24_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5ghn1ij_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 457: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 708: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 824: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 833: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 888: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 923: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 946: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3984 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3915 (98%)
  Because of loop head:            39 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         30 (1%)
  Times precision was empty:       1376 (35%)
  Times precision was {false}:     77 (2%)
  Times result was cached:         2318 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      213 (5%)
  Times result was 'false':        489 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         623
  BDD entailment checks:           343
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          42
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         5575
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 19.22
Number of irrelevant predicates:          1884 (34%)
Number of preds handled by boolean abs:   384 (7%)
  Total number of models for allsat:      239
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.12

Time for post operator:                  0.482s
  Time for path formula creation:        0.456s
Time for strengthen operator:            0.035s
Time for prec operator:                  1.175s
  Time for abstraction:                  1.048s (Max:     0.016s, Count: 3984)
    Boolean abstraction:                 0.249s
    Solving time:                        0.166s (Max:     0.013s)
    Model enumeration time:              0.016s
    Time for BDD construction:           0.031s (Max:     0.008s)
Time for merge operator:                 0.006s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     0.182s

Number of path formula cache hits:   13806 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.396s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               235
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         453 (count: 3493, min: 0, max: 210, avg: 0.13)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.074s
Automaton transfers with branching:                0
Automaton transfer successors:                        14585 (count: 14585, min: 1, max: 1, avg: 1.00) [1 x 14585]

CPA algorithm statistics
------------------------
Number of iterations:            10947
Max size of waitlist:            42
Average size of waitlist:        16
Number of computed successors:   12366
Max successors for one state:    2
Number of times merged:          140
Number of times stopped:         380
Number of times breaked:         30

Total time for CPA algorithm:         2.828s (Max:     0.396s)
  Time for choose from waitlist:      0.039s
  Time for precision adjustment:      1.416s
  Time for transfer relation:         1.015s
  Time for merge operator:            0.042s
  Time for stop operator:             0.096s
  Time for adding to reached set:     0.059s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   30
Avg. length of target path (in blocks):                 879 (count: 30, min: 20, max: 60, avg: 29.30)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.356s
  Counterexample analysis:                             0.230s (Max:     0.024s, Calls: 30)
    Refinement sat check:                              0.111s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.024s
  Precision update:                                    0.029s
  ARG update:                                          0.044s

Length of refined path (in blocks):                     618 (count: 30, min: 14, max: 41, avg: 20.60)
Number of affected states:                              440 (count: 30, min: 2, max: 40, avg: 14.67)
Length (states) of path with itp 'true':                148 (count: 30, min: 0, max: 14, avg: 4.93)
Length (states) of path with itp non-trivial itp:       440 (count: 30, min: 2, max: 40, avg: 14.67)
Length (states) of path with itp 'false':                30 (count: 30, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 30, min: 0, max: 1, avg: 0.13)
Equal non-trivial interpolants along paths:             406 (count: 30, min: 1, max: 39, avg: 13.53)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                30
Number of successful refinements:     30
Number of failed refinements:         0
Max. size of reached set before ref.: 1001
Max. size of reached set after ref.:  536
Avg. size of reached set before ref.: 484.67
Avg. size of reached set after ref.:  141.97

Total time for CEGAR algorithm:       3.236s
Time for refinements:                 0.406s
Average time for refinement:          0.013s
Max time for refinement:              0.041s

Code Coverage
-----------------------------
  Function coverage:      0.514
  Visited lines:          107
  Total lines:            431
  Line coverage:          0.248
  Visited conditions:     32
  Total conditions:       70
  Condition coverage:     0.457

CPAchecker general statistics
-----------------------------
Number of program locations:     619
Number of CFA edges:             667
Number of relevant variables:    112
Number of functions:             37
Number of loops:                 5
Size of reached set:             1217
  Number of reached locations:   146 (24%)
    Avg states per location:     8
    Max states per location:     46 (at node N358)
  Number of reached functions:   19 (51%)
  Number of partitions:          1199
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N388 (before lines 553-602), Function test called from node N467, stack depth 3 [478530cb], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.000s
  Time for loading CPAs:          0.535s
  Time for loading parser:        0.459s
  Time for CFA construction:      0.908s
    Time for parsing file(s):     0.328s
    Time for AST to CFA:          0.230s
    Time for CFA sanity check:    0.054s
    Time for post-processing:     0.194s
      Time for var class.:        0.067s
Time for Analysis:                3.236s
CPU time for analysis:            3.230s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.239s
Total CPU time for CPAchecker:    5.230s
Time for statistics:              0.092s

Time for Garbage Collector:       0.090s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     35MB (    33 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     28MB (    26 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7986MB (  7616 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
