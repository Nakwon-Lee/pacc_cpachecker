scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product24_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_l1maqjf0/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 457: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 708: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 824: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 833: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 888: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 923: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 946: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            9805 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  9690 (99%)
  Because of loop head:            85 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         30 (0%)
  Times precision was empty:       4613 (47%)
  Times precision was {false}:     83 (1%)
  Times result was cached:         4854 (50%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      255 (3%)
  Times result was 'false':        623 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         2151
  BDD entailment checks:           1361
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          42
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         9610
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 28.43
Number of irrelevant predicates:          5063 (53%)
Number of preds handled by boolean abs:   404 (4%)
  Total number of models for allsat:      287
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.13

Time for post operator:                  0.621s
  Time for path formula creation:        0.572s
Time for strengthen operator:            0.073s
Time for prec operator:                  1.620s
  Time for abstraction:                  1.392s (Max:     0.014s, Count: 9805)
    Boolean abstraction:                 0.200s
    Solving time:                        0.122s (Max:     0.009s)
    Model enumeration time:              0.014s
    Time for BDD construction:           0.041s (Max:     0.010s)
Time for merge operator:                 0.012s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     0.136s

Number of path formula cache hits:   36342 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.496s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               229
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         430 (count: 8018, min: 0, max: 122, avg: 0.05)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.163s
Automaton transfers with branching:                0
Automaton transfer successors:                        35303 (count: 35303, min: 1, max: 1, avg: 1.00) [1 x 35303]

CPA algorithm statistics
------------------------
Number of iterations:            27004
Max size of waitlist:            67
Average size of waitlist:        30
Number of computed successors:   29995
Max successors for one state:    2
Number of times merged:          395
Number of times stopped:         1363
Number of times breaked:         30

Total time for CPA algorithm:         4.539s (Max:     0.584s)
  Time for choose from waitlist:      0.082s
  Time for precision adjustment:      2.090s
  Time for transfer relation:         1.651s
  Time for merge operator:            0.073s
  Time for stop operator:             0.127s
  Time for adding to reached set:     0.135s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   30
Avg. length of target path (in blocks):                 799 (count: 30, min: 19, max: 48, avg: 26.63)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.424s
  Counterexample analysis:                             0.194s (Max:     0.017s, Calls: 30)
    Refinement sat check:                              0.074s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.027s
  Precision update:                                    0.037s
  ARG update:                                          0.138s

Length of refined path (in blocks):                     559 (count: 30, min: 13, max: 40, avg: 18.63)
Number of affected states:                              422 (count: 30, min: 2, max: 39, avg: 14.07)
Length (states) of path with itp 'true':                107 (count: 30, min: 0, max: 13, avg: 3.57)
Length (states) of path with itp non-trivial itp:       422 (count: 30, min: 2, max: 39, avg: 14.07)
Length (states) of path with itp 'false':                30 (count: 30, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           6 (count: 30, min: 0, max: 1, avg: 0.20)
Equal non-trivial interpolants along paths:             386 (count: 30, min: 1, max: 38, avg: 12.87)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                30
Number of successful refinements:     30
Number of failed refinements:         0
Max. size of reached set before ref.: 1805
Max. size of reached set after ref.:  978
Avg. size of reached set before ref.: 1121.40
Avg. size of reached set after ref.:  225.80

Total time for CEGAR algorithm:       5.062s
Time for refinements:                 0.512s
Average time for refinement:          0.017s
Max time for refinement:              0.044s

Code Coverage
-----------------------------
  Function coverage:      0.514
  Visited lines:          107
  Total lines:            431
  Line coverage:          0.248
  Visited conditions:     32
  Total conditions:       70
  Condition coverage:     0.457

CPAchecker general statistics
-----------------------------
Number of program locations:     619
Number of CFA edges:             667
Number of relevant variables:    112
Number of functions:             37
Number of loops:                 5
Size of reached set:             1142
  Number of reached locations:   146 (24%)
    Avg states per location:     7
    Max states per location:     43 (at node N358)
  Number of reached functions:   19 (51%)
  Number of partitions:          1123
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N388 (before lines 553-602), Function test called from node N467, stack depth 3 [75ad8ca8], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.979s
  Time for loading CPAs:          0.546s
  Time for loading parser:        0.426s
  Time for CFA construction:      0.931s
    Time for parsing file(s):     0.313s
    Time for AST to CFA:          0.251s
    Time for CFA sanity check:    0.055s
    Time for post-processing:     0.191s
      Time for var class.:        0.078s
Time for Analysis:                5.063s
CPU time for analysis:            5.070s
Time for analyzing result:        0.001s
Total time for CPAchecker:        7.045s
Total CPU time for CPAchecker:    7.040s
Time for statistics:              0.079s

Time for Garbage Collector:       0.122s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    57 MiB) max;     38MB (    36 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     29MB (    28 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7997MB (  7626 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
