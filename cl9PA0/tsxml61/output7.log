scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product38_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ygcp1f2q/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 151: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 522: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 568: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 620: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 666: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 786: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 795: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 850: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 870: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 893: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 359: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            23814 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  23535 (99%)
  Because of loop head:            181 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         98 (0%)
  Times precision was empty:       649 (3%)
  Times precision was {false}:     330 (1%)
  Times result was cached:         16185 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6650 (28%)
  Times result was 'false':        3642 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         21923
  BDD entailment checks:           16413
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          26
Number of abstraction locations:          54
Max number of predicates per location:    14
Avg number of predicates per location:    7
Total predicates per abstraction:         163934
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 23.49
Number of irrelevant predicates:          44163 (27%)
Number of preds handled by boolean abs:   43395 (26%)
  Total number of models for allsat:      8786
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.32

Time for post operator:                  1.310s
  Time for path formula creation:        1.238s
Time for strengthen operator:            0.104s
Time for prec operator:                 15.471s
  Time for abstraction:                 15.116s (Max:     0.026s, Count: 23814)
    Boolean abstraction:                 4.701s
    Solving time:                        3.434s (Max:     0.013s)
    Model enumeration time:              0.453s
    Time for BDD construction:           0.237s (Max:     0.012s)
Time for merge operator:                 0.072s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):     3.887s

Number of path formula cache hits:   69780 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.105s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               5767
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       21217 (count: 62818, min: 0, max: 1254, avg: 0.34)
Time for BDD node cleanup:                             0.032s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.278s
Automaton transfers with branching:                0
Automaton transfer successors:                        90176 (count: 90176, min: 1, max: 1, avg: 1.00) [1 x 90176]

CPA algorithm statistics
------------------------
Number of iterations:            70244
Max size of waitlist:            27
Average size of waitlist:        8
Number of computed successors:   78883
Max successors for one state:    2
Number of times merged:          2755
Number of times stopped:         4755
Number of times breaked:         98

Total time for CPA algorithm:        19.772s (Max:     1.668s)
  Time for choose from waitlist:      0.061s
  Time for precision adjustment:     16.041s
  Time for transfer relation:         2.601s
  Time for merge operator:            0.178s
  Time for stop operator:             0.206s
  Time for adding to reached set:     0.196s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   98
Avg. length of target path (in blocks):                6817 (count: 98, min: 26, max: 135, avg: 69.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.847s
  Counterexample analysis:                             1.446s (Max:     0.063s, Calls: 98)
    Refinement sat check:                              0.520s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.055s
  Precision update:                                    0.058s
  ARG update:                                          0.189s

Length of refined path (in blocks):                    5705 (count: 98, min: 14, max: 125, avg: 58.21)
Number of affected states:                             2345 (count: 98, min: 1, max: 71, avg: 23.93)
Length (states) of path with itp 'true':               3262 (count: 98, min: 0, max: 82, avg: 33.29)
Length (states) of path with itp non-trivial itp:      2345 (count: 98, min: 1, max: 71, avg: 23.93)
Length (states) of path with itp 'false':                98 (count: 98, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         115 (count: 98, min: 0, max: 5, avg: 1.17)
Equal non-trivial interpolants along paths:            2132 (count: 98, min: 0, max: 68, avg: 21.76)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                98
Number of successful refinements:     98
Number of failed refinements:         0
Max. size of reached set before ref.: 5695
Max. size of reached set after ref.:  3661
Avg. size of reached set before ref.: 1881.67
Avg. size of reached set after ref.:  1232.54

Total time for CEGAR algorithm:      21.989s
Time for refinements:                 2.142s
Average time for refinement:          0.021s
Max time for refinement:              0.084s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          132
  Total lines:            437
  Line coverage:          0.302
  Visited conditions:     40
  Total conditions:       72
  Condition coverage:     0.556

CPAchecker general statistics
-----------------------------
Number of program locations:     628
Number of CFA edges:             677
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             6872
  Number of reached locations:   179 (29%)
    Avg states per location:     38
    Max states per location:     175 (at node N82)
  Number of reached functions:   26 (68%)
  Number of partitions:          6742
    Avg size of partitions:      1
    Max size of partitions:      24 (with key [N624 (after line 929), Function test called from node N53, stack depth 3 [132b00bb], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.115s
  Time for loading CPAs:          0.595s
  Time for loading parser:        0.468s
  Time for CFA construction:      0.949s
    Time for parsing file(s):     0.291s
    Time for AST to CFA:          0.250s
    Time for CFA sanity check:    0.059s
    Time for post-processing:     0.234s
      Time for var class.:        0.105s
Time for Analysis:               21.989s
CPU time for analysis:           21.990s
Time for analyzing result:        0.006s
Total time for CPAchecker:       24.108s
Total CPU time for CPAchecker:   24.100s
Time for statistics:              0.136s

Time for Garbage Collector:       0.510s (in 69 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    70 MiB) max;     46MB (    44 MiB) avg;     77MB (    74 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8012MB (  7640 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
