scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product38_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6dg9ywr9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 151: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 522: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 568: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 620: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 666: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 786: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 795: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 850: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 870: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 893: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 359: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            36128 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  35633 (99%)
  Because of loop head:            369 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         126 (0%)
  Times precision was empty:       2779 (8%)
  Times precision was {false}:     425 (1%)
  Times result was cached:         24915 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8009 (22%)
  Times result was 'false':        5214 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         26151
  BDD entailment checks:           18319
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          24
Number of abstraction locations:          54
Max number of predicates per location:    14
Avg number of predicates per location:    7
Total predicates per abstraction:         223466
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 26.50
Number of irrelevant predicates:          66358 (30%)
Number of preds handled by boolean abs:   51332 (23%)
  Total number of models for allsat:      10079
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.26

Time for post operator:                  1.548s
  Time for path formula creation:        1.493s
Time for strengthen operator:            0.134s
Time for prec operator:                 17.085s
  Time for abstraction:                 16.576s (Max:     0.027s, Count: 36128)
    Boolean abstraction:                 5.225s
    Solving time:                        3.877s (Max:     0.013s)
    Model enumeration time:              0.448s
    Time for BDD construction:           0.287s (Max:     0.012s)
Time for merge operator:                 0.085s
Time for coverage check:                 0.047s
  Time for BDD entailment checks:        0.040s
Total time for SMT solver (w/o itp):     4.325s

Number of path formula cache hits:   121662 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.242s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               7463
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       26059 (count: 77004, min: 0, max: 1076, avg: 0.34)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.415s
Automaton transfers with branching:                0
Automaton transfer successors:                       134481 (count: 134481, min: 1, max: 1, avg: 1.00) [1 x 134481]

CPA algorithm statistics
------------------------
Number of iterations:            105606
Max size of waitlist:            30
Average size of waitlist:        8
Number of computed successors:   117936
Max successors for one state:    2
Number of times merged:          3916
Number of times stopped:         6896
Number of times breaked:         126

Total time for CPA algorithm:        22.389s (Max:     1.854s)
  Time for choose from waitlist:      0.094s
  Time for precision adjustment:     17.848s
  Time for transfer relation:         3.265s
  Time for merge operator:            0.202s
  Time for stop operator:             0.250s
  Time for adding to reached set:     0.184s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   126
Avg. length of target path (in blocks):                7658 (count: 126, min: 25, max: 112, avg: 60.78)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.651s
  Counterexample analysis:                             1.219s (Max:     0.040s, Calls: 126)
    Refinement sat check:                              0.435s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.049s
  Precision update:                                    0.048s
  ARG update:                                          0.220s

Length of refined path (in blocks):                    5889 (count: 126, min: 14, max: 102, avg: 46.74)
Number of affected states:                             2788 (count: 126, min: 1, max: 75, avg: 22.13)
Length (states) of path with itp 'true':               2975 (count: 126, min: 0, max: 57, avg: 23.61)
Length (states) of path with itp non-trivial itp:      2788 (count: 126, min: 1, max: 75, avg: 22.13)
Length (states) of path with itp 'false':               126 (count: 126, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          73 (count: 126, min: 0, max: 5, avg: 0.58)
Equal non-trivial interpolants along paths:            2589 (count: 126, min: 0, max: 72, avg: 20.55)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                126
Number of successful refinements:     126
Number of failed refinements:         0
Max. size of reached set before ref.: 5584
Max. size of reached set after ref.:  3495
Avg. size of reached set before ref.: 1759.83
Avg. size of reached set after ref.:  957.46

Total time for CEGAR algorithm:      24.354s
Time for refinements:                 1.870s
Average time for refinement:          0.014s
Max time for refinement:              0.066s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          132
  Total lines:            437
  Line coverage:          0.302
  Visited conditions:     40
  Total conditions:       72
  Condition coverage:     0.556

CPAchecker general statistics
-----------------------------
Number of program locations:     628
Number of CFA edges:             677
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             4728
  Number of reached locations:   179 (29%)
    Avg states per location:     26
    Max states per location:     130 (at node N82)
  Number of reached functions:   26 (68%)
  Number of partitions:          4641
    Avg size of partitions:      1
    Max size of partitions:      18 (with key [N624 (after line 929), Function test called from node N53, stack depth 3 [2ece48bf], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.215s
  Time for loading CPAs:          0.560s
  Time for loading parser:        0.462s
  Time for CFA construction:      1.021s
    Time for parsing file(s):     0.439s
    Time for AST to CFA:          0.190s
    Time for CFA sanity check:    0.055s
    Time for post-processing:     0.204s
      Time for var class.:        0.081s
Time for Analysis:               24.355s
CPU time for analysis:           24.370s
Time for analyzing result:        0.003s
Total time for CPAchecker:       26.574s
Total CPU time for CPAchecker:   26.580s
Time for statistics:              0.129s

Time for Garbage Collector:       0.634s (in 91 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 77MB (    73 MiB) max;     47MB (    45 MiB) avg;     82MB (    78 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     34MB (    32 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8154MB (  7776 MiB) max;   8083MB (  7708 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
