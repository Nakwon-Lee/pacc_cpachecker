scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product38_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vbuozq21/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 151: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 522: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 568: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 620: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 666: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 786: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 795: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 850: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 870: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 893: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 359: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            22617 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  22329 (99%)
  Because of loop head:            200 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         88 (0%)
  Times precision was empty:       835 (4%)
  Times precision was {false}:     397 (2%)
  Times result was cached:         14161 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7224 (32%)
  Times result was 'false':        3519 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         23634
  BDD entailment checks:           18472
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          24
Number of abstraction locations:          54
Max number of predicates per location:    14
Avg number of predicates per location:    7
Total predicates per abstraction:         151915
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 19.93
Number of irrelevant predicates:          37585 (25%)
Number of preds handled by boolean abs:   48209 (32%)
  Total number of models for allsat:      8913
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.23

Time for post operator:                  1.319s
  Time for path formula creation:        1.260s
Time for strengthen operator:            0.102s
Time for prec operator:                 15.238s
  Time for abstraction:                 14.962s (Max:     0.037s, Count: 22617)
    Boolean abstraction:                 5.136s
    Solving time:                        3.793s (Max:     0.016s)
    Model enumeration time:              0.481s
    Time for BDD construction:           0.201s (Max:     0.010s)
Time for merge operator:                 0.080s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.046s
Total time for SMT solver (w/o itp):     4.274s

Number of path formula cache hits:   63498 (64%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.078s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               6788
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       23528 (count: 69477, min: 0, max: 1185, avg: 0.34)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.235s
Automaton transfers with branching:                0
Automaton transfer successors:                        85994 (count: 85994, min: 1, max: 1, avg: 1.00) [1 x 85994]

CPA algorithm statistics
------------------------
Number of iterations:            66997
Max size of waitlist:            28
Average size of waitlist:        9
Number of computed successors:   75228
Max successors for one state:    2
Number of times merged:          2581
Number of times stopped:         4466
Number of times breaked:         88

Total time for CPA algorithm:        19.581s (Max:     2.557s)
  Time for choose from waitlist:      0.086s
  Time for precision adjustment:     15.749s
  Time for transfer relation:         2.649s
  Time for merge operator:            0.244s
  Time for stop operator:             0.205s
  Time for adding to reached set:     0.198s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   88
Avg. length of target path (in blocks):                5338 (count: 88, min: 26, max: 131, avg: 60.66)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.438s
  Counterexample analysis:                             0.984s (Max:     0.058s, Calls: 88)
    Refinement sat check:                              0.365s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.072s
  Precision update:                                    0.054s
  ARG update:                                          0.227s

Length of refined path (in blocks):                    4069 (count: 88, min: 14, max: 102, avg: 46.24)
Number of affected states:                             2030 (count: 88, min: 1, max: 98, avg: 23.07)
Length (states) of path with itp 'true':               1951 (count: 88, min: 0, max: 66, avg: 22.17)
Length (states) of path with itp non-trivial itp:      2030 (count: 88, min: 1, max: 98, avg: 23.07)
Length (states) of path with itp 'false':                88 (count: 88, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          66 (count: 88, min: 0, max: 5, avg: 0.75)
Equal non-trivial interpolants along paths:            1876 (count: 88, min: 0, max: 95, avg: 21.32)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                88
Number of successful refinements:     88
Number of failed refinements:         0
Max. size of reached set before ref.: 7131
Max. size of reached set after ref.:  4175
Avg. size of reached set before ref.: 1845.49
Avg. size of reached set after ref.:  1182.41

Total time for CEGAR algorithm:      21.395s
Time for refinements:                 1.711s
Average time for refinement:          0.019s
Max time for refinement:              0.068s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          132
  Total lines:            437
  Line coverage:          0.302
  Visited conditions:     40
  Total conditions:       72
  Condition coverage:     0.556

CPAchecker general statistics
-----------------------------
Number of program locations:     628
Number of CFA edges:             677
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             8893
  Number of reached locations:   179 (29%)
    Avg states per location:     49
    Max states per location:     248 (at node N82)
  Number of reached functions:   26 (68%)
  Number of partitions:          8708
    Avg size of partitions:      1
    Max size of partitions:      36 (with key [N624 (after line 929), Function test called from node N53, stack depth 3 [7e93a26e], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.107s
  Time for loading CPAs:          0.579s
  Time for loading parser:        0.492s
  Time for CFA construction:      0.935s
    Time for parsing file(s):     0.320s
    Time for AST to CFA:          0.197s
    Time for CFA sanity check:    0.050s
    Time for post-processing:     0.241s
      Time for var class.:        0.092s
Time for Analysis:               21.395s
CPU time for analysis:           21.380s
Time for analyzing result:        0.014s
Total time for CPAchecker:       23.504s
Total CPU time for CPAchecker:   23.490s
Time for statistics:              0.175s

Time for Garbage Collector:       0.616s (in 66 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 79MB (    76 MiB) max;     48MB (    45 MiB) avg;     84MB (    80 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8013MB (  7642 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
