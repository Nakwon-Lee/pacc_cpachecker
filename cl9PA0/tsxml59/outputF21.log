scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product48_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_mxvcpcy5/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 152: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 175: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 384: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 393: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 831: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 877: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 983: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 668: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            43478 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  42942 (99%)
  Because of loop head:            433 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         103 (0%)
  Times precision was empty:       4841 (11%)
  Times precision was {false}:     290 (1%)
  Times result was cached:         34140 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4207 (10%)
  Times result was 'false':        3731 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         21568
  BDD entailment checks:           15106
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          11
Number of abstraction locations:          59
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         161116
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 35.83
Number of irrelevant predicates:          61960 (38%)
Number of preds handled by boolean abs:   13427 (8%)
  Total number of models for allsat:      4464
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.06

Time for post operator:                  1.493s
  Time for path formula creation:        1.417s
Time for strengthen operator:            0.189s
Time for prec operator:                 10.384s
  Time for abstraction:                  9.836s (Max:     0.025s, Count: 43478)
    Boolean abstraction:                 2.212s
    Solving time:                        1.596s (Max:     0.013s)
    Model enumeration time:              0.172s
    Time for BDD construction:           0.188s (Max:     0.012s)
Time for merge operator:                 0.050s
Time for coverage check:                 0.031s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     1.768s

Number of path formula cache hits:   144903 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.192s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               765
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        9026 (count: 47963, min: 0, max: 360, avg: 0.19)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.326s
Automaton transfers with branching:                0
Automaton transfer successors:                       158960 (count: 158960, min: 1, max: 1, avg: 1.00) [1 x 158960]

CPA algorithm statistics
------------------------
Number of iterations:            127974
Max size of waitlist:            52
Average size of waitlist:        20
Number of computed successors:   140653
Max successors for one state:    2
Number of times merged:          3231
Number of times stopped:         7447
Number of times breaked:         103

Total time for CPA algorithm:        16.138s (Max:     1.004s)
  Time for choose from waitlist:      0.105s
  Time for precision adjustment:     11.276s
  Time for transfer relation:         3.333s
  Time for merge operator:            0.190s
  Time for stop operator:             0.303s
  Time for adding to reached set:     0.257s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   103
Avg. length of target path (in blocks):                5021 (count: 103, min: 22, max: 95, avg: 48.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.187s
  Counterexample analysis:                             0.648s (Max:     0.019s, Calls: 103)
    Refinement sat check:                              0.288s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.040s
  Precision update:                                    0.064s
  ARG update:                                          0.357s

Length of refined path (in blocks):                    3923 (count: 103, min: 15, max: 73, avg: 38.09)
Number of affected states:                             1822 (count: 103, min: 2, max: 62, avg: 17.69)
Length (states) of path with itp 'true':               1998 (count: 103, min: 0, max: 51, avg: 19.40)
Length (states) of path with itp non-trivial itp:      1822 (count: 103, min: 2, max: 62, avg: 17.69)
Length (states) of path with itp 'false':               103 (count: 103, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          11 (count: 103, min: 0, max: 2, avg: 0.11)
Equal non-trivial interpolants along paths:            1708 (count: 103, min: 1, max: 60, avg: 16.58)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                103
Number of successful refinements:     103
Number of failed refinements:         0
Max. size of reached set before ref.: 3753
Max. size of reached set after ref.:  2468
Avg. size of reached set before ref.: 2285.83
Avg. size of reached set after ref.:  1049.93

Total time for CEGAR algorithm:      17.664s
Time for refinements:                 1.470s
Average time for refinement:          0.014s
Max time for refinement:              0.076s

Code Coverage
-----------------------------
  Function coverage:      0.692
  Visited lines:          155
  Total lines:            447
  Line coverage:          0.347
  Visited conditions:     46
  Total conditions:       76
  Condition coverage:     0.605

CPAchecker general statistics
-----------------------------
Number of program locations:     645
Number of CFA edges:             697
Number of relevant variables:    114
Number of functions:             39
Number of loops:                 5
Size of reached set:             2179
  Number of reached locations:   212 (33%)
    Avg states per location:     10
    Max states per location:     47 (at node N129)
  Number of reached functions:   27 (69%)
  Number of partitions:          2105
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N96 (before lines 193-242), Function test called from node N637, stack depth 3 [2abe3381], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.118s
  Time for loading CPAs:          0.502s
  Time for loading parser:        0.459s
  Time for CFA construction:      0.989s
    Time for parsing file(s):     0.317s
    Time for AST to CFA:          0.270s
    Time for CFA sanity check:    0.061s
    Time for post-processing:     0.217s
      Time for var class.:        0.094s
Time for Analysis:               17.664s
CPU time for analysis:           17.660s
Time for analyzing result:        0.001s
Total time for CPAchecker:       19.785s
Total CPU time for CPAchecker:   19.780s
Time for statistics:              0.082s

Time for Garbage Collector:       0.547s (in 77 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    69 MiB) max;     44MB (    42 MiB) avg;     75MB (    72 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
