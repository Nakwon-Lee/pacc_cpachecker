scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product48_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tkg15pjh/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 152: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 175: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 384: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 393: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 831: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 877: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 983: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 668: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            24042 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  23673 (98%)
  Because of loop head:            291 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         78 (0%)
  Times precision was empty:       2745 (11%)
  Times precision was {false}:     191 (1%)
  Times result was cached:         17141 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3965 (16%)
  Times result was 'false':        2949 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         12983
  BDD entailment checks:           8383
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          11
Number of abstraction locations:          59
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         85889
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 20.67
Number of irrelevant predicates:          24805 (29%)
Number of preds handled by boolean abs:   13448 (16%)
  Total number of models for allsat:      4060
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.02

Time for post operator:                  1.346s
  Time for path formula creation:        1.277s
Time for strengthen operator:            0.109s
Time for prec operator:                  8.556s
  Time for abstraction:                  8.246s (Max:     0.018s, Count: 24042)
    Boolean abstraction:                 2.108s
    Solving time:                        1.497s (Max:     0.013s)
    Model enumeration time:              0.221s
    Time for BDD construction:           0.173s (Max:     0.012s)
Time for merge operator:                 0.084s
Time for coverage check:                 0.044s
  Time for BDD entailment checks:        0.039s
Total time for SMT solver (w/o itp):     1.718s

Number of path formula cache hits:   75275 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.089s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               732
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8108 (count: 36715, min: 0, max: 418, avg: 0.22)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.302s
Automaton transfers with branching:                0
Automaton transfer successors:                        94607 (count: 94607, min: 1, max: 1, avg: 1.00) [1 x 94607]

CPA algorithm statistics
------------------------
Number of iterations:            73401
Max size of waitlist:            65
Average size of waitlist:        16
Number of computed successors:   82111
Max successors for one state:    2
Number of times merged:          2300
Number of times stopped:         4474
Number of times breaked:         78

Total time for CPA algorithm:        13.267s (Max:     0.556s)
  Time for choose from waitlist:      0.086s
  Time for precision adjustment:      9.274s
  Time for transfer relation:         2.813s
  Time for merge operator:            0.167s
  Time for stop operator:             0.225s
  Time for adding to reached set:     0.177s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   78
Avg. length of target path (in blocks):                3842 (count: 78, min: 21, max: 90, avg: 49.26)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.958s
  Counterexample analysis:                             0.612s (Max:     0.019s, Calls: 78)
    Refinement sat check:                              0.272s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.051s
  Precision update:                                    0.038s
  ARG update:                                          0.200s

Length of refined path (in blocks):                    2756 (count: 78, min: 15, max: 65, avg: 35.33)
Number of affected states:                             1466 (count: 78, min: 2, max: 62, avg: 18.79)
Length (states) of path with itp 'true':               1212 (count: 78, min: 0, max: 57, avg: 15.54)
Length (states) of path with itp non-trivial itp:      1466 (count: 78, min: 2, max: 62, avg: 18.79)
Length (states) of path with itp 'false':                78 (count: 78, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          13 (count: 78, min: 0, max: 3, avg: 0.17)
Equal non-trivial interpolants along paths:            1375 (count: 78, min: 1, max: 60, avg: 17.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                78
Number of successful refinements:     78
Number of failed refinements:         0
Max. size of reached set before ref.: 5194
Max. size of reached set after ref.:  3915
Avg. size of reached set before ref.: 1787.06
Avg. size of reached set after ref.:  878.67

Total time for CEGAR algorithm:      14.484s
Time for refinements:                 1.140s
Average time for refinement:          0.014s
Max time for refinement:              0.055s

Code Coverage
-----------------------------
  Function coverage:      0.692
  Visited lines:          155
  Total lines:            447
  Line coverage:          0.347
  Visited conditions:     46
  Total conditions:       76
  Condition coverage:     0.605

CPAchecker general statistics
-----------------------------
Number of program locations:     645
Number of CFA edges:             697
Number of relevant variables:    114
Number of functions:             39
Number of loops:                 5
Size of reached set:             3834
  Number of reached locations:   212 (33%)
    Avg states per location:     18
    Max states per location:     88 (at node N136)
  Number of reached functions:   27 (69%)
  Number of partitions:          3693
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N96 (before lines 193-242), Function test called from node N637, stack depth 3 [4fc428a6], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.072s
  Time for loading CPAs:          0.532s
  Time for loading parser:        0.463s
  Time for CFA construction:      0.932s
    Time for parsing file(s):     0.306s
    Time for AST to CFA:          0.246s
    Time for CFA sanity check:    0.072s
    Time for post-processing:     0.196s
      Time for var class.:        0.073s
Time for Analysis:               14.484s
CPU time for analysis:           14.470s
Time for analyzing result:        0.002s
Total time for CPAchecker:       16.566s
Total CPU time for CPAchecker:   16.560s
Time for statistics:              0.119s

Time for Garbage Collector:       0.363s (in 48 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    67 MiB) max;     43MB (    41 MiB) avg;     73MB (    70 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
