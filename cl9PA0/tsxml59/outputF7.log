scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product48_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_l7_o9gct/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 152: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 175: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 384: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 393: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 831: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 877: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 983: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 668: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            47791 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  46889 (98%)
  Because of loop head:            748 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         154 (0%)
  Times precision was empty:       1470 (3%)
  Times precision was {false}:     348 (1%)
  Times result was cached:         41371 (87%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4602 (10%)
  Times result was 'false':        7307 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         36123
  BDD entailment checks:           29333
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          11
Number of abstraction locations:          59
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         192153
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 38.82
Number of irrelevant predicates:          57756 (30%)
Number of preds handled by boolean abs:   13393 (7%)
  Total number of models for allsat:      4492
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.98

Time for post operator:                  1.535s
  Time for path formula creation:        1.417s
Time for strengthen operator:            0.177s
Time for prec operator:                 11.692s
  Time for abstraction:                 11.240s (Max:     0.022s, Count: 47791)
    Boolean abstraction:                 2.484s
    Solving time:                        1.861s (Max:     0.020s)
    Model enumeration time:              0.215s
    Time for BDD construction:           0.179s (Max:     0.008s)
Time for merge operator:                 0.066s
Time for coverage check:                 0.051s
  Time for BDD entailment checks:        0.043s
Total time for SMT solver (w/o itp):     2.076s

Number of path formula cache hits:   183213 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.155s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               603
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        9321 (count: 61379, min: 0, max: 683, avg: 0.15)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.334s
Automaton transfers with branching:                0
Automaton transfer successors:                       182299 (count: 182299, min: 1, max: 1, avg: 1.00) [1 x 182299]

CPA algorithm statistics
------------------------
Number of iterations:            144195
Max size of waitlist:            40
Average size of waitlist:        18
Number of computed successors:   161632
Max successors for one state:    2
Number of times merged:          3395
Number of times stopped:         7588
Number of times breaked:         154

Total time for CPA algorithm:        17.157s (Max:     0.680s)
  Time for choose from waitlist:      0.074s
  Time for precision adjustment:     12.612s
  Time for transfer relation:         3.369s
  Time for merge operator:            0.179s
  Time for stop operator:             0.223s
  Time for adding to reached set:     0.223s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   154
Avg. length of target path (in blocks):               14308 (count: 154, min: 21, max: 160, avg: 92.91)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.376s
  Counterexample analysis:                             1.854s (Max:     0.033s, Calls: 154)
    Refinement sat check:                              0.826s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.064s
  Precision update:                                    0.052s
  ARG update:                                          0.291s

Length of refined path (in blocks):                   10920 (count: 154, min: 15, max: 125, avg: 70.91)
Number of affected states:                             6164 (count: 154, min: 2, max: 106, avg: 40.03)
Length (states) of path with itp 'true':               4602 (count: 154, min: 0, max: 80, avg: 29.88)
Length (states) of path with itp non-trivial itp:      6164 (count: 154, min: 2, max: 106, avg: 40.03)
Length (states) of path with itp 'false':               154 (count: 154, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          45 (count: 154, min: 0, max: 2, avg: 0.29)
Equal non-trivial interpolants along paths:            5965 (count: 154, min: 1, max: 105, avg: 38.73)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                154
Number of successful refinements:     154
Number of failed refinements:         0
Max. size of reached set before ref.: 4263
Max. size of reached set after ref.:  3167
Avg. size of reached set before ref.: 2232.25
Avg. size of reached set after ref.:  1294.12

Total time for CEGAR algorithm:      20.048s
Time for refinements:                 2.755s
Average time for refinement:          0.017s
Max time for refinement:              0.048s

Code Coverage
-----------------------------
  Function coverage:      0.692
  Visited lines:          155
  Total lines:            447
  Line coverage:          0.347
  Visited conditions:     46
  Total conditions:       76
  Condition coverage:     0.605

CPAchecker general statistics
-----------------------------
Number of program locations:     645
Number of CFA edges:             697
Number of relevant variables:    114
Number of functions:             39
Number of loops:                 5
Size of reached set:             2267
  Number of reached locations:   212 (33%)
    Avg states per location:     10
    Max states per location:     54 (at node N136)
  Number of reached functions:   27 (69%)
  Number of partitions:          2188
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N96 (before lines 193-242), Function test called from node N637, stack depth 3 [7ddd474c], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.988s
  Time for loading CPAs:          0.518s
  Time for loading parser:        0.468s
  Time for CFA construction:      0.891s
    Time for parsing file(s):     0.272s
    Time for AST to CFA:          0.226s
    Time for CFA sanity check:    0.069s
    Time for post-processing:     0.207s
      Time for var class.:        0.091s
Time for Analysis:               20.048s
CPU time for analysis:           20.050s
Time for analyzing result:        0.002s
Total time for CPAchecker:       22.045s
Total CPU time for CPAchecker:   22.050s
Time for statistics:              0.106s

Time for Garbage Collector:       0.629s (in 91 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    70 MiB) max;     46MB (    43 MiB) avg;     76MB (    72 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8076MB (  7702 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
