scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product48_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fq2jy9t8/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 152: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 175: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 384: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 393: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 831: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 877: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 983: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 668: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            38191 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  37727 (99%)
  Because of loop head:            377 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         87 (0%)
  Times precision was empty:       9231 (24%)
  Times precision was {false}:     217 (1%)
  Times result was cached:         25074 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3669 (10%)
  Times result was 'false':        2836 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         16152
  BDD entailment checks:           10002
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          11
Number of abstraction locations:          59
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         101148
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 26.03
Number of irrelevant predicates:          35320 (35%)
Number of preds handled by boolean abs:   11384 (11%)
  Total number of models for allsat:      3753
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  1.423s
  Time for path formula creation:        1.363s
Time for strengthen operator:            0.139s
Time for prec operator:                  8.265s
  Time for abstraction:                  7.729s (Max:     0.017s, Count: 38191)
    Boolean abstraction:                 1.661s
    Solving time:                        1.219s (Max:     0.013s)
    Model enumeration time:              0.151s
    Time for BDD construction:           0.151s (Max:     0.008s)
Time for merge operator:                 0.044s
Time for coverage check:                 0.038s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     1.370s

Number of path formula cache hits:   131972 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.157s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               574
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7730 (count: 43292, min: 0, max: 497, avg: 0.18)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.463s
Automaton transfers with branching:                0
Automaton transfer successors:                       142919 (count: 142919, min: 1, max: 1, avg: 1.00) [1 x 142919]

CPA algorithm statistics
------------------------
Number of iterations:            114132
Max size of waitlist:            44
Average size of waitlist:        16
Number of computed successors:   125255
Max successors for one state:    2
Number of times merged:          3075
Number of times stopped:         7747
Number of times breaked:         87

Total time for CPA algorithm:        14.118s (Max:     0.975s)
  Time for choose from waitlist:      0.140s
  Time for precision adjustment:      9.202s
  Time for transfer relation:         3.375s
  Time for merge operator:            0.266s
  Time for stop operator:             0.240s
  Time for adding to reached set:     0.261s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   87
Avg. length of target path (in blocks):                4207 (count: 87, min: 21, max: 85, avg: 48.36)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.115s
  Counterexample analysis:                             0.574s (Max:     0.018s, Calls: 87)
    Refinement sat check:                              0.229s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.015s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.029s
  Precision update:                                    0.081s
  ARG update:                                          0.359s

Length of refined path (in blocks):                    3369 (count: 87, min: 15, max: 75, avg: 38.72)
Number of affected states:                             1529 (count: 87, min: 2, max: 62, avg: 17.57)
Length (states) of path with itp 'true':               1753 (count: 87, min: 0, max: 59, avg: 20.15)
Length (states) of path with itp non-trivial itp:      1529 (count: 87, min: 2, max: 62, avg: 17.57)
Length (states) of path with itp 'false':                87 (count: 87, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          11 (count: 87, min: 0, max: 2, avg: 0.13)
Equal non-trivial interpolants along paths:            1431 (count: 87, min: 1, max: 60, avg: 16.45)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                87
Number of successful refinements:     87
Number of failed refinements:         0
Max. size of reached set before ref.: 4942
Max. size of reached set after ref.:  4570
Avg. size of reached set before ref.: 2586.57
Avg. size of reached set after ref.:  1318.51

Total time for CEGAR algorithm:      15.562s
Time for refinements:                 1.361s
Average time for refinement:          0.015s
Max time for refinement:              0.072s

Code Coverage
-----------------------------
  Function coverage:      0.692
  Visited lines:          155
  Total lines:            447
  Line coverage:          0.347
  Visited conditions:     46
  Total conditions:       76
  Condition coverage:     0.605

CPAchecker general statistics
-----------------------------
Number of program locations:     645
Number of CFA edges:             697
Number of relevant variables:    114
Number of functions:             39
Number of loops:                 5
Size of reached set:             4351
  Number of reached locations:   212 (33%)
    Avg states per location:     20
    Max states per location:     98 (at node N25)
  Number of reached functions:   27 (69%)
  Number of partitions:          4207
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N96 (before lines 193-242), Function test called from node N637, stack depth 3 [5c0d0342], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.061s
  Time for loading CPAs:          0.517s
  Time for loading parser:        0.489s
  Time for CFA construction:      0.961s
    Time for parsing file(s):     0.319s
    Time for AST to CFA:          0.301s
    Time for CFA sanity check:    0.048s
    Time for post-processing:     0.184s
      Time for var class.:        0.072s
Time for Analysis:               15.562s
CPU time for analysis:           15.560s
Time for analyzing result:        0.004s
Total time for CPAchecker:       17.625s
Total CPU time for CPAchecker:   17.620s
Time for statistics:              0.115s

Time for Garbage Collector:       0.437s (in 61 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    68 MiB) max;     43MB (    41 MiB) avg;     75MB (    71 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8072MB (  7698 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
