scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product48_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1mpfs35z/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 152: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 175: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 384: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 393: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 831: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 877: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 983: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 668: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            33561 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  33188 (99%)
  Because of loop head:            299 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         74 (0%)
  Times precision was empty:       9077 (27%)
  Times precision was {false}:     211 (1%)
  Times result was cached:         21482 (64%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2791 (8%)
  Times result was 'false':        2322 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         13834
  BDD entailment checks:           8414
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          11
Number of abstraction locations:          59
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         81724
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 27.22
Number of irrelevant predicates:          29533 (36%)
Number of preds handled by boolean abs:   8085 (10%)
  Total number of models for allsat:      2917
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.05

Time for post operator:                  1.402s
  Time for path formula creation:        1.312s
Time for strengthen operator:            0.141s
Time for prec operator:                  6.742s
  Time for abstraction:                  6.323s (Max:     0.021s, Count: 33561)
    Boolean abstraction:                 1.411s
    Solving time:                        1.026s (Max:     0.013s)
    Model enumeration time:              0.143s
    Time for BDD construction:           0.131s (Max:     0.009s)
Time for merge operator:                 0.052s
Time for coverage check:                 0.067s
  Time for BDD entailment checks:        0.060s
Total time for SMT solver (w/o itp):     1.169s

Number of path formula cache hits:   118006 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.093s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               558
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5942 (count: 36192, min: 0, max: 324, avg: 0.16)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.373s
Automaton transfers with branching:                0
Automaton transfer successors:                       125426 (count: 125426, min: 1, max: 1, avg: 1.00) [1 x 125426]

CPA algorithm statistics
------------------------
Number of iterations:            100238
Max size of waitlist:            42
Average size of waitlist:        16
Number of computed successors:   109962
Max successors for one state:    2
Number of times merged:          2710
Number of times stopped:         6868
Number of times breaked:         74

Total time for CPA algorithm:        12.153s (Max:     1.021s)
  Time for choose from waitlist:      0.098s
  Time for precision adjustment:      7.573s
  Time for transfer relation:         3.102s
  Time for merge operator:            0.188s
  Time for stop operator:             0.261s
  Time for adding to reached set:     0.246s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   74
Avg. length of target path (in blocks):                3452 (count: 74, min: 21, max: 85, avg: 46.65)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.909s
  Counterexample analysis:                             0.460s (Max:     0.030s, Calls: 74)
    Refinement sat check:                              0.207s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.046s
  Precision update:                                    0.036s
  ARG update:                                          0.305s

Length of refined path (in blocks):                    2725 (count: 74, min: 15, max: 75, avg: 36.82)
Number of affected states:                             1446 (count: 74, min: 2, max: 62, avg: 19.54)
Length (states) of path with itp 'true':               1205 (count: 74, min: 0, max: 51, avg: 16.28)
Length (states) of path with itp non-trivial itp:      1446 (count: 74, min: 2, max: 62, avg: 19.54)
Length (states) of path with itp 'false':                74 (count: 74, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          11 (count: 74, min: 0, max: 2, avg: 0.15)
Equal non-trivial interpolants along paths:            1361 (count: 74, min: 1, max: 60, avg: 18.39)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                74
Number of successful refinements:     74
Number of failed refinements:         0
Max. size of reached set before ref.: 4717
Max. size of reached set after ref.:  3687
Avg. size of reached set before ref.: 2130.45
Avg. size of reached set after ref.:  822.43

Total time for CEGAR algorithm:      13.337s
Time for refinements:                 1.113s
Average time for refinement:          0.015s
Max time for refinement:              0.063s

Code Coverage
-----------------------------
  Function coverage:      0.692
  Visited lines:          155
  Total lines:            447
  Line coverage:          0.347
  Visited conditions:     46
  Total conditions:       76
  Condition coverage:     0.605

CPAchecker general statistics
-----------------------------
Number of program locations:     645
Number of CFA edges:             697
Number of relevant variables:    114
Number of functions:             39
Number of loops:                 5
Size of reached set:             3980
  Number of reached locations:   212 (33%)
    Avg states per location:     18
    Max states per location:     87 (at node N25)
  Number of reached functions:   27 (69%)
  Number of partitions:          3846
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N96 (before lines 193-242), Function test called from node N637, stack depth 3 [1e280597], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.912s
  Time for loading CPAs:          0.484s
  Time for loading parser:        0.411s
  Time for CFA construction:      0.909s
    Time for parsing file(s):     0.312s
    Time for AST to CFA:          0.243s
    Time for CFA sanity check:    0.070s
    Time for post-processing:     0.181s
      Time for var class.:        0.071s
Time for Analysis:               13.337s
CPU time for analysis:           13.340s
Time for analyzing result:        0.003s
Total time for CPAchecker:       15.252s
Total CPU time for CPAchecker:   15.250s
Time for statistics:              0.104s

Time for Garbage Collector:       0.363s (in 52 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     43MB (    41 MiB) avg;     71MB (    67 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   8008MB (  7637 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
