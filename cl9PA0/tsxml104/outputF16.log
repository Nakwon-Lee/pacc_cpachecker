scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product19_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_u1u9qg59/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 457: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 593: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 602: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 657: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 848: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 883: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1890 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1817 (96%)
  Because of loop head:            52 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         21 (1%)
  Times precision was empty:       351 (19%)
  Times precision was {false}:     54 (3%)
  Times result was cached:         1313 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      172 (9%)
  Times result was 'false':        278 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         374
  BDD entailment checks:           192
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          37
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         3882
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 17.18
Number of irrelevant predicates:          944 (24%)
Number of preds handled by boolean abs:   331 (9%)
  Total number of models for allsat:      199
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.16

Time for post operator:                  0.295s
  Time for path formula creation:        0.291s
Time for strengthen operator:            0.043s
Time for prec operator:                  0.970s
  Time for abstraction:                  0.873s (Max:     0.017s, Count: 1890)
    Boolean abstraction:                 0.216s
    Solving time:                        0.150s (Max:     0.016s)
    Model enumeration time:              0.027s
    Time for BDD construction:           0.007s (Max:     0.001s)
Time for merge operator:                 0.025s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     0.177s

Number of path formula cache hits:   6373 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.256s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               245
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         328 (count: 1968, min: 0, max: 216, avg: 0.17)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.066s
Automaton transfers with branching:                0
Automaton transfer successors:                         6974 (count: 6974, min: 1, max: 1, avg: 1.00) [1 x 6974]

CPA algorithm statistics
------------------------
Number of iterations:            5470
Max size of waitlist:            14
Average size of waitlist:        5
Number of computed successors:   6114
Max successors for one state:    2
Number of times merged:          91
Number of times stopped:         213
Number of times breaked:         21

Total time for CPA algorithm:         2.042s (Max:     0.232s)
  Time for choose from waitlist:      0.015s
  Time for precision adjustment:      1.152s
  Time for transfer relation:         0.663s
  Time for merge operator:            0.034s
  Time for stop operator:             0.054s
  Time for adding to reached set:     0.054s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   21
Avg. length of target path (in blocks):                 595 (count: 21, min: 19, max: 46, avg: 28.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.223s
  Counterexample analysis:                             0.145s (Max:     0.016s, Calls: 21)
    Refinement sat check:                              0.049s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.026s
  Precision update:                                    0.010s
  ARG update:                                          0.023s

Length of refined path (in blocks):                     455 (count: 21, min: 13, max: 43, avg: 21.67)
Number of affected states:                              408 (count: 21, min: 11, max: 42, avg: 19.43)
Length (states) of path with itp 'true':                 26 (count: 21, min: 0, max: 13, avg: 1.24)
Length (states) of path with itp non-trivial itp:       408 (count: 21, min: 11, max: 42, avg: 19.43)
Length (states) of path with itp 'false':                21 (count: 21, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 21, min: 0, max: 1, avg: 0.24)
Equal non-trivial interpolants along paths:             382 (count: 21, min: 10, max: 40, avg: 18.19)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                21
Number of successful refinements:     21
Number of failed refinements:         0
Max. size of reached set before ref.: 503
Max. size of reached set after ref.:  125
Avg. size of reached set before ref.: 247.10
Avg. size of reached set after ref.:  14.62

Total time for CEGAR algorithm:       2.292s
Time for refinements:                 0.250s
Average time for refinement:          0.011s
Max time for refinement:              0.040s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          100
  Total lines:            420
  Line coverage:          0.238
  Visited conditions:     30
  Total conditions:       66
  Condition coverage:     0.455

CPAchecker general statistics
-----------------------------
Number of program locations:     598
Number of CFA edges:             641
Number of relevant variables:    109
Number of functions:             35
Number of loops:                 5
Size of reached set:             742
  Number of reached locations:   135 (23%)
    Avg states per location:     5
    Max states per location:     29 (at node N593)
  Number of reached functions:   17 (49%)
  Number of partitions:          733
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N472 (before lines 696-743), Function test called from node N550, stack depth 3 [51d719bc], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.015s
  Time for loading CPAs:          0.575s
  Time for loading parser:        0.441s
  Time for CFA construction:      0.917s
    Time for parsing file(s):     0.316s
    Time for AST to CFA:          0.248s
    Time for CFA sanity check:    0.047s
    Time for post-processing:     0.192s
      Time for var class.:        0.080s
Time for Analysis:                2.292s
CPU time for analysis:            2.290s
Time for analyzing result:        0.005s
Total time for CPAchecker:        4.310s
Total CPU time for CPAchecker:    4.310s
Time for statistics:              0.071s

Time for Garbage Collector:       0.079s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     34MB (    32 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     26MB (    25 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8039MB (  7666 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
