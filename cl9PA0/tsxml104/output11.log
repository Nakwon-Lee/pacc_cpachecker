scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product19_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_738rmjqo/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 457: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 593: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 602: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 657: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 848: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 883: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3017 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2954 (98%)
  Because of loop head:            49 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (0%)
  Times precision was empty:       621 (21%)
  Times precision was {false}:     78 (3%)
  Times result was cached:         2042 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      276 (9%)
  Times result was 'false':        193 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         1078
  BDD entailment checks:           700
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          34
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         5135
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 14.51
Number of irrelevant predicates:          2224 (43%)
Number of preds handled by boolean abs:   497 (10%)
  Total number of models for allsat:      301
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  0.466s
  Time for path formula creation:        0.447s
Time for strengthen operator:            0.036s
Time for prec operator:                  1.339s
  Time for abstraction:                  1.236s (Max:     0.013s, Count: 3017)
    Boolean abstraction:                 0.295s
    Solving time:                        0.209s (Max:     0.013s)
    Model enumeration time:              0.020s
    Time for BDD construction:           0.037s (Max:     0.008s)
Time for merge operator:                 0.021s
Time for coverage check:                 0.016s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     0.229s

Number of path formula cache hits:   7398 (57%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.391s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               237
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         643 (count: 3444, min: 0, max: 192, avg: 0.19)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.121s
Automaton transfers with branching:                0
Automaton transfer successors:                        11285 (count: 11285, min: 1, max: 1, avg: 1.00) [1 x 11285]

CPA algorithm statistics
------------------------
Number of iterations:            8793
Max size of waitlist:            40
Average size of waitlist:        17
Number of computed successors:   9868
Max successors for one state:    2
Number of times merged:          189
Number of times stopped:         611
Number of times breaked:         14

Total time for CPA algorithm:         2.771s (Max:     0.364s)
  Time for choose from waitlist:      0.013s
  Time for precision adjustment:      1.492s
  Time for transfer relation:         1.004s
  Time for merge operator:            0.040s
  Time for stop operator:             0.047s
  Time for adding to reached set:     0.040s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14
Avg. length of target path (in blocks):                 566 (count: 14, min: 23, max: 50, avg: 40.43)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.216s
  Counterexample analysis:                             0.108s (Max:     0.021s, Calls: 14)
    Refinement sat check:                              0.064s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.011s
  ARG update:                                          0.052s

Length of refined path (in blocks):                     309 (count: 14, min: 13, max: 37, avg: 22.07)
Number of affected states:                              239 (count: 14, min: 2, max: 36, avg: 17.07)
Length (states) of path with itp 'true':                 56 (count: 14, min: 0, max: 12, avg: 4.00)
Length (states) of path with itp non-trivial itp:       239 (count: 14, min: 2, max: 36, avg: 17.07)
Length (states) of path with itp 'false':                14 (count: 14, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 14, min: 0, max: 1, avg: 0.21)
Equal non-trivial interpolants along paths:             222 (count: 14, min: 1, max: 34, avg: 15.86)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 1190
Max. size of reached set after ref.:  347
Avg. size of reached set before ref.: 712.86
Avg. size of reached set after ref.:  95.57

Total time for CEGAR algorithm:       3.043s
Time for refinements:                 0.272s
Average time for refinement:          0.019s
Max time for refinement:              0.056s

Code Coverage
-----------------------------
  Function coverage:      0.457
  Visited lines:          84
  Total lines:            420
  Line coverage:          0.200
  Visited conditions:     28
  Total conditions:       66
  Condition coverage:     0.424

CPAchecker general statistics
-----------------------------
Number of program locations:     598
Number of CFA edges:             641
Number of relevant variables:    109
Number of functions:             35
Number of loops:                 5
Size of reached set:             423
  Number of reached locations:   114 (19%)
    Avg states per location:     3
    Max states per location:     16 (at node N593)
  Number of reached functions:   16 (46%)
  Number of partitions:          417
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N472 (before lines 696-743), Function test called from node N550, stack depth 3 [2a1e57c6], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.195s
  Time for loading CPAs:          0.621s
  Time for loading parser:        0.525s
  Time for CFA construction:      0.965s
    Time for parsing file(s):     0.352s
    Time for AST to CFA:          0.239s
    Time for CFA sanity check:    0.057s
    Time for post-processing:     0.187s
      Time for var class.:        0.076s
Time for Analysis:                3.045s
CPU time for analysis:            3.040s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.243s
Total CPU time for CPAchecker:    5.240s
Time for statistics:              0.063s

Time for Garbage Collector:       0.090s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     36MB (    34 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8042MB (  7670 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
