scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product32_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vme8j9s3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 340: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 857: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 903: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 983: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 992: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 694: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            5524 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5461 (99%)
  Because of loop head:            47 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (0%)
  Times precision was empty:       2716 (49%)
  Times precision was {false}:     71 (1%)
  Times result was cached:         2637 (48%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      100 (2%)
  Times result was 'false':        357 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         1452
  BDD entailment checks:           790
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          4
Number of abstraction locations:          47
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         3842
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 22.47
Number of irrelevant predicates:          1611 (42%)
Number of preds handled by boolean abs:   114 (3%)
  Total number of models for allsat:      115
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.15

Time for post operator:                  0.618s
  Time for path formula creation:        0.581s
Time for strengthen operator:            0.064s
Time for prec operator:                  0.913s
  Time for abstraction:                  0.762s (Max:     0.015s, Count: 5524)
    Boolean abstraction:                 0.082s
    Solving time:                        0.065s (Max:     0.012s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.029s (Max:     0.011s)
Time for merge operator:                 0.022s
Time for coverage check:                 0.014s
  Time for BDD entailment checks:        0.006s
Total time for SMT solver (w/o itp):     0.068s

Number of path formula cache hits:   18453 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.504s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         195 (count: 4499, min: 0, max: 63, avg: 0.04)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.129s
Automaton transfers with branching:                0
Automaton transfer successors:                        19923 (count: 19923, min: 1, max: 1, avg: 1.00) [1 x 19923]

CPA algorithm statistics
------------------------
Number of iterations:            15746
Max size of waitlist:            35
Average size of waitlist:        13
Number of computed successors:   17293
Max successors for one state:    2
Number of times merged:          331
Number of times stopped:         1052
Number of times breaked:         16

Total time for CPA algorithm:         3.058s (Max:     0.692s)
  Time for choose from waitlist:      0.070s
  Time for precision adjustment:      1.188s
  Time for transfer relation:         1.314s
  Time for merge operator:            0.061s
  Time for stop operator:             0.097s
  Time for adding to reached set:     0.118s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                 521 (count: 16, min: 25, max: 50, avg: 32.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.253s
  Counterexample analysis:                             0.117s (Max:     0.019s, Calls: 16)
    Refinement sat check:                              0.054s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.031s
  Precision update:                                    0.005s
  ARG update:                                          0.073s

Length of refined path (in blocks):                     392 (count: 16, min: 15, max: 42, avg: 24.50)
Number of affected states:                              362 (count: 16, min: 6, max: 41, avg: 22.63)
Length (states) of path with itp 'true':                 14 (count: 16, min: 0, max: 14, avg: 0.88)
Length (states) of path with itp non-trivial itp:       362 (count: 16, min: 6, max: 41, avg: 22.63)
Length (states) of path with itp 'false':                16 (count: 16, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 16, min: 0, max: 1, avg: 0.13)
Equal non-trivial interpolants along paths:             344 (count: 16, min: 5, max: 40, avg: 21.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 1351
Max. size of reached set after ref.:  741
Avg. size of reached set before ref.: 978.88
Avg. size of reached set after ref.:  49.13

Total time for CEGAR algorithm:       3.386s
Time for refinements:                 0.327s
Average time for refinement:          0.020s
Max time for refinement:              0.074s

Code Coverage
-----------------------------
  Function coverage:      0.525
  Visited lines:          115
  Total lines:            444
  Line coverage:          0.259
  Visited conditions:     34
  Total conditions:       74
  Condition coverage:     0.459

CPAchecker general statistics
-----------------------------
Number of program locations:     645
Number of CFA edges:             697
Number of relevant variables:    116
Number of functions:             40
Number of loops:                 5
Size of reached set:             1009
  Number of reached locations:   158 (24%)
    Avg states per location:     6
    Max states per location:     38 (at node N278)
  Number of reached functions:   21 (53%)
  Number of partitions:          1008
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N235 (before lines 432-481), Function test called from node N71, stack depth 3 [4ddb9a8], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.113s
  Time for loading CPAs:          0.535s
  Time for loading parser:        0.456s
  Time for CFA construction:      0.993s
    Time for parsing file(s):     0.366s
    Time for AST to CFA:          0.230s
    Time for CFA sanity check:    0.082s
    Time for post-processing:     0.213s
      Time for var class.:        0.087s
Time for Analysis:                3.387s
CPU time for analysis:            3.390s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.503s
Total CPU time for CPAchecker:    5.500s
Time for statistics:              0.073s

Time for Garbage Collector:       0.100s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    54 MiB) max;     35MB (    33 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     28MB (    27 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8049MB (  7676 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
