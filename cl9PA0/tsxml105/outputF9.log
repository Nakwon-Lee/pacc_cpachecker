scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product46_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_647x2oz9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 89: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 112: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 432: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 579: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 630: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 662: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 810: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 819: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 269: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            19004 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  18636 (98%)
  Because of loop head:            272 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         96 (1%)
  Times precision was empty:       1489 (8%)
  Times precision was {false}:     149 (1%)
  Times result was cached:         14990 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2376 (13%)
  Times result was 'false':        3531 (19%)
Number of strengthen sat checks:   0
Number of coverage checks:         8916
  BDD entailment checks:           5306
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          15
Number of abstraction locations:          56
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         65172
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 25.81
Number of irrelevant predicates:          20183 (31%)
Number of preds handled by boolean abs:   7006 (11%)
  Total number of models for allsat:      2399
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.01

Time for post operator:                  1.109s
  Time for path formula creation:        1.047s
Time for strengthen operator:            0.138s
Time for prec operator:                  6.411s
  Time for abstraction:                  6.110s (Max:     0.020s, Count: 19004)
    Boolean abstraction:                 1.448s
    Solving time:                        1.094s (Max:     0.013s)
    Model enumeration time:              0.131s
    Time for BDD construction:           0.109s (Max:     0.008s)
Time for merge operator:                 0.049s
Time for coverage check:                 0.054s
  Time for BDD entailment checks:        0.052s
Total time for SMT solver (w/o itp):     1.225s

Number of path formula cache hits:   64838 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.902s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               710
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5371 (count: 23366, min: 0, max: 426, avg: 0.23)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.283s
Automaton transfers with branching:                0
Automaton transfer successors:                        72746 (count: 72746, min: 1, max: 1, avg: 1.00) [1 x 72746]

CPA algorithm statistics
------------------------
Number of iterations:            55562
Max size of waitlist:            91
Average size of waitlist:        20
Number of computed successors:   63683
Max successors for one state:    2
Number of times merged:          1805
Number of times stopped:         2933
Number of times breaked:         96

Total time for CPA algorithm:        10.340s (Max:     0.927s)
  Time for choose from waitlist:      0.085s
  Time for precision adjustment:      6.890s
  Time for transfer relation:         2.449s
  Time for merge operator:            0.158s
  Time for stop operator:             0.206s
  Time for adding to reached set:     0.134s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   96
Avg. length of target path (in blocks):                4072 (count: 96, min: 21, max: 99, avg: 42.42)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.414s
  Counterexample analysis:                             1.025s (Max:     0.027s, Calls: 96)
    Refinement sat check:                              0.376s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.066s
  Precision update:                                    0.081s
  ARG update:                                          0.158s

Length of refined path (in blocks):                    3094 (count: 96, min: 13, max: 67, avg: 32.23)
Number of affected states:                             1786 (count: 96, min: 2, max: 66, avg: 18.60)
Length (states) of path with itp 'true':               1212 (count: 96, min: 0, max: 53, avg: 12.63)
Length (states) of path with itp non-trivial itp:      1786 (count: 96, min: 2, max: 66, avg: 18.60)
Length (states) of path with itp 'false':                96 (count: 96, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         119 (count: 96, min: 0, max: 3, avg: 1.24)
Equal non-trivial interpolants along paths:            1571 (count: 96, min: 1, max: 64, avg: 16.36)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                96
Number of successful refinements:     96
Number of failed refinements:         0
Max. size of reached set before ref.: 3038
Max. size of reached set after ref.:  2299
Avg. size of reached set before ref.: 1015.88
Avg. size of reached set after ref.:  483.66

Total time for CEGAR algorithm:      11.997s
Time for refinements:                 1.615s
Average time for refinement:          0.016s
Max time for refinement:              0.053s

Code Coverage
-----------------------------
  Function coverage:      0.703
  Visited lines:          148
  Total lines:            437
  Line coverage:          0.339
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     626
Number of CFA edges:             677
Number of relevant variables:    116
Number of functions:             37
Number of loops:                 5
Size of reached set:             6127
  Number of reached locations:   199 (32%)
    Avg states per location:     30
    Max states per location:     187 (at node N0)
  Number of reached functions:   26 (70%)
  Number of partitions:          5888
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N623 (after line 928), Function test called from node N390, stack depth 3 [4c190267], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.020s
  Time for loading CPAs:          0.496s
  Time for loading parser:        0.486s
  Time for CFA construction:      0.961s
    Time for parsing file(s):     0.353s
    Time for AST to CFA:          0.217s
    Time for CFA sanity check:    0.065s
    Time for post-processing:     0.217s
      Time for var class.:        0.110s
Time for Analysis:               11.997s
CPU time for analysis:           12.000s
Time for analyzing result:        0.003s
Total time for CPAchecker:       14.019s
Total CPU time for CPAchecker:   14.030s
Time for statistics:              0.137s

Time for Garbage Collector:       0.247s (in 35 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     41MB (    39 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8069MB (  7695 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
