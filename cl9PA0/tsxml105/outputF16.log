scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product46_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dyjb5l4g/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 89: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 112: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 432: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 579: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 630: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 662: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 810: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 819: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 269: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            10444 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10232 (98%)
  Because of loop head:            156 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         56 (1%)
  Times precision was empty:       701 (7%)
  Times precision was {false}:     133 (1%)
  Times result was cached:         7883 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1727 (17%)
  Times result was 'false':        1609 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         3508
  BDD entailment checks:           2354
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          15
Number of abstraction locations:          56
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         40275
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 21.65
Number of irrelevant predicates:          11487 (29%)
Number of preds handled by boolean abs:   5169 (13%)
  Total number of models for allsat:      1830
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.06

Time for post operator:                  0.872s
  Time for path formula creation:        0.796s
Time for strengthen operator:            0.075s
Time for prec operator:                  5.405s
  Time for abstraction:                  5.135s (Max:     0.021s, Count: 10444)
    Boolean abstraction:                 1.347s
    Solving time:                        1.013s (Max:     0.013s)
    Model enumeration time:              0.071s
    Time for BDD construction:           0.125s (Max:     0.010s)
Time for merge operator:                 0.029s
Time for coverage check:                 0.031s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     1.084s

Number of path formula cache hits:   33246 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.713s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               705
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4072 (count: 14952, min: 0, max: 458, avg: 0.27)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.269s
Automaton transfers with branching:                0
Automaton transfer successors:                        38171 (count: 38171, min: 1, max: 1, avg: 1.00) [1 x 38171]

CPA algorithm statistics
------------------------
Number of iterations:            29451
Max size of waitlist:            16
Average size of waitlist:        7
Number of computed successors:   32573
Max successors for one state:    2
Number of times merged:          577
Number of times stopped:         1237
Number of times breaked:         56

Total time for CPA algorithm:         8.273s (Max:     0.922s)
  Time for choose from waitlist:      0.063s
  Time for precision adjustment:      5.797s
  Time for transfer relation:         1.783s
  Time for merge operator:            0.065s
  Time for stop operator:             0.152s
  Time for adding to reached set:     0.149s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   56
Avg. length of target path (in blocks):                2285 (count: 56, min: 21, max: 80, avg: 40.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.745s
  Counterexample analysis:                             0.485s (Max:     0.020s, Calls: 56)
    Refinement sat check:                              0.176s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.044s
  Precision update:                                    0.053s
  ARG update:                                          0.125s

Length of refined path (in blocks):                    1850 (count: 56, min: 13, max: 69, avg: 33.04)
Number of affected states:                             1338 (count: 56, min: 2, max: 68, avg: 23.89)
Length (states) of path with itp 'true':                456 (count: 56, min: 0, max: 38, avg: 8.14)
Length (states) of path with itp non-trivial itp:      1338 (count: 56, min: 2, max: 68, avg: 23.89)
Length (states) of path with itp 'false':                56 (count: 56, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          68 (count: 56, min: 0, max: 3, avg: 1.21)
Equal non-trivial interpolants along paths:            1214 (count: 56, min: 1, max: 65, avg: 21.68)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                56
Number of successful refinements:     56
Number of failed refinements:         0
Max. size of reached set before ref.: 2724
Max. size of reached set after ref.:  1377
Avg. size of reached set before ref.: 775.07
Avg. size of reached set after ref.:  319.89

Total time for CEGAR algorithm:       9.138s
Time for refinements:                 0.850s
Average time for refinement:          0.015s
Max time for refinement:              0.040s

Code Coverage
-----------------------------
  Function coverage:      0.703
  Visited lines:          148
  Total lines:            437
  Line coverage:          0.339
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     626
Number of CFA edges:             677
Number of relevant variables:    116
Number of functions:             37
Number of loops:                 5
Size of reached set:             4238
  Number of reached locations:   199 (32%)
    Avg states per location:     21
    Max states per location:     126 (at node N0)
  Number of reached functions:   26 (70%)
  Number of partitions:          4131
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N628 (after line 941), Function test called from node N390, stack depth 3 [6c720765], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.067s
  Time for loading CPAs:          0.489s
  Time for loading parser:        0.453s
  Time for CFA construction:      0.971s
    Time for parsing file(s):     0.343s
    Time for AST to CFA:          0.270s
    Time for CFA sanity check:    0.063s
    Time for post-processing:     0.195s
      Time for var class.:        0.070s
Time for Analysis:                9.138s
CPU time for analysis:            9.140s
Time for analyzing result:        0.002s
Total time for CPAchecker:       11.209s
Total CPU time for CPAchecker:   11.200s
Time for statistics:              0.113s

Time for Garbage Collector:       0.202s (in 23 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     38MB (    37 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    30 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8003MB (  7632 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
