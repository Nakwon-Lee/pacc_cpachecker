scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product46_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ffig5gtr/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 89: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 112: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 432: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 579: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 630: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 662: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 810: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 819: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 269: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            11828 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11656 (99%)
  Because of loop head:            84 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         88 (1%)
  Times precision was empty:       1597 (14%)
  Times precision was {false}:     172 (1%)
  Times result was cached:         7914 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2145 (18%)
  Times result was 'false':        1640 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         3923
  BDD entailment checks:           2021
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          16
Number of abstraction locations:          56
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         44726
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 19.30
Number of irrelevant predicates:          15155 (34%)
Number of preds handled by boolean abs:   7255 (16%)
  Total number of models for allsat:      2451
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.14

Time for post operator:                  0.964s
  Time for path formula creation:        0.915s
Time for strengthen operator:            0.051s
Time for prec operator:                  6.459s
  Time for abstraction:                  6.169s (Max:     0.041s, Count: 11828)
    Boolean abstraction:                 1.791s
    Solving time:                        1.258s (Max:     0.013s)
    Model enumeration time:              0.197s
    Time for BDD construction:           0.156s (Max:     0.010s)
Time for merge operator:                 0.032s
Time for coverage check:                 0.027s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     1.455s

Number of path formula cache hits:   39925 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.812s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1096
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5578 (count: 18440, min: 0, max: 577, avg: 0.30)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.290s
Automaton transfers with branching:                0
Automaton transfer successors:                        44952 (count: 44952, min: 1, max: 1, avg: 1.00) [1 x 44952]

CPA algorithm statistics
------------------------
Number of iterations:            33888
Max size of waitlist:            45
Average size of waitlist:        13
Number of computed successors:   37877
Max successors for one state:    2
Number of times merged:          951
Number of times stopped:         1532
Number of times breaked:         88

Total time for CPA algorithm:         9.862s (Max:     0.764s)
  Time for choose from waitlist:      0.086s
  Time for precision adjustment:      6.948s
  Time for transfer relation:         2.080s
  Time for merge operator:            0.135s
  Time for stop operator:             0.136s
  Time for adding to reached set:     0.163s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   88
Avg. length of target path (in blocks):                3534 (count: 88, min: 22, max: 91, avg: 40.16)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.316s
  Counterexample analysis:                             0.953s (Max:     0.026s, Calls: 88)
    Refinement sat check:                              0.328s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.067s
  Precision update:                                    0.094s
  ARG update:                                          0.123s

Length of refined path (in blocks):                    2859 (count: 88, min: 14, max: 73, avg: 32.49)
Number of affected states:                             1569 (count: 88, min: 2, max: 72, avg: 17.83)
Length (states) of path with itp 'true':               1202 (count: 88, min: 0, max: 38, avg: 13.66)
Length (states) of path with itp non-trivial itp:      1569 (count: 88, min: 2, max: 72, avg: 17.83)
Length (states) of path with itp 'false':                88 (count: 88, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          58 (count: 88, min: 0, max: 3, avg: 0.66)
Equal non-trivial interpolants along paths:            1423 (count: 88, min: 1, max: 71, avg: 16.17)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                88
Number of successful refinements:     88
Number of failed refinements:         0
Max. size of reached set before ref.: 2130
Max. size of reached set after ref.:  1163
Avg. size of reached set before ref.: 788.50
Avg. size of reached set after ref.:  436.91

Total time for CEGAR algorithm:      11.474s
Time for refinements:                 1.573s
Average time for refinement:          0.017s
Max time for refinement:              0.072s

Code Coverage
-----------------------------
  Function coverage:      0.703
  Visited lines:          148
  Total lines:            437
  Line coverage:          0.339
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     626
Number of CFA edges:             677
Number of relevant variables:    116
Number of functions:             37
Number of loops:                 5
Size of reached set:             3766
  Number of reached locations:   199 (32%)
    Avg states per location:     18
    Max states per location:     107 (at node N0)
  Number of reached functions:   26 (70%)
  Number of partitions:          3653
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N601 (before lines 896-943), Function test called from node N390, stack depth 3 [78235b90], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.245s
  Time for loading CPAs:          0.674s
  Time for loading parser:        0.489s
  Time for CFA construction:      0.983s
    Time for parsing file(s):     0.345s
    Time for AST to CFA:          0.265s
    Time for CFA sanity check:    0.046s
    Time for post-processing:     0.180s
      Time for var class.:        0.080s
Time for Analysis:               11.475s
CPU time for analysis:           11.470s
Time for analyzing result:        0.003s
Total time for CPAchecker:       13.723s
Total CPU time for CPAchecker:   13.710s
Time for statistics:              0.127s

Time for Garbage Collector:       0.238s (in 26 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     40MB (    38 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8069MB (  7695 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
