scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product46_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_15ywnja1/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 89: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 112: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 432: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 579: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 630: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 662: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 810: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 819: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 269: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            29730 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  29281 (98%)
  Because of loop head:            322 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         127 (0%)
  Times precision was empty:       5659 (19%)
  Times precision was {false}:     202 (1%)
  Times result was cached:         20844 (70%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3025 (10%)
  Times result was 'false':        3506 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         10728
  BDD entailment checks:           6700
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          16
Number of abstraction locations:          56
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         93660
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 29.02
Number of irrelevant predicates:          35325 (38%)
Number of preds handled by boolean abs:   10431 (11%)
  Total number of models for allsat:      3354
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.11

Time for post operator:                  1.105s
  Time for path formula creation:        1.025s
Time for strengthen operator:            0.165s
Time for prec operator:                  7.941s
  Time for abstraction:                  7.522s (Max:     0.022s, Count: 29730)
    Boolean abstraction:                 1.856s
    Solving time:                        1.300s (Max:     0.013s)
    Model enumeration time:              0.166s
    Time for BDD construction:           0.151s (Max:     0.012s)
Time for merge operator:                 0.037s
Time for coverage check:                 0.063s
  Time for BDD entailment checks:        0.059s
Total time for SMT solver (w/o itp):     1.466s

Number of path formula cache hits:   110314 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.864s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1162
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7236 (count: 33310, min: 0, max: 696, avg: 0.22)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.402s
Automaton transfers with branching:                0
Automaton transfer successors:                       108329 (count: 108329, min: 1, max: 1, avg: 1.00) [1 x 108329]

CPA algorithm statistics
------------------------
Number of iterations:            85068
Max size of waitlist:            24
Average size of waitlist:        11
Number of computed successors:   93647
Max successors for one state:    2
Number of times merged:          2014
Number of times stopped:         4640
Number of times breaked:         127

Total time for CPA algorithm:        12.974s (Max:     1.553s)
  Time for choose from waitlist:      0.146s
  Time for precision adjustment:      8.769s
  Time for transfer relation:         2.857s
  Time for merge operator:            0.148s
  Time for stop operator:             0.202s
  Time for adding to reached set:     0.276s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   127
Avg. length of target path (in blocks):                4931 (count: 127, min: 21, max: 95, avg: 38.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.871s
  Counterexample analysis:                             1.251s (Max:     0.024s, Calls: 127)
    Refinement sat check:                              0.496s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.080s
  Precision update:                                    0.179s
  ARG update:                                          0.267s

Length of refined path (in blocks):                    4143 (count: 127, min: 13, max: 81, avg: 32.62)
Number of affected states:                             2159 (count: 127, min: 2, max: 72, avg: 17.00)
Length (states) of path with itp 'true':               1857 (count: 127, min: 0, max: 57, avg: 14.62)
Length (states) of path with itp non-trivial itp:      2159 (count: 127, min: 2, max: 72, avg: 17.00)
Length (states) of path with itp 'false':               127 (count: 127, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         175 (count: 127, min: 0, max: 3, avg: 1.38)
Equal non-trivial interpolants along paths:            1857 (count: 127, min: 1, max: 70, avg: 14.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                127
Number of successful refinements:     127
Number of failed refinements:         0
Max. size of reached set before ref.: 7427
Max. size of reached set after ref.:  5776
Avg. size of reached set before ref.: 1325.30
Avg. size of reached set after ref.:  701.47

Total time for CEGAR algorithm:      15.188s
Time for refinements:                 2.126s
Average time for refinement:          0.016s
Max time for refinement:              0.076s

Code Coverage
-----------------------------
  Function coverage:      0.703
  Visited lines:          148
  Total lines:            437
  Line coverage:          0.339
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     626
Number of CFA edges:             677
Number of relevant variables:    116
Number of functions:             37
Number of loops:                 5
Size of reached set:             6276
  Number of reached locations:   199 (32%)
    Avg states per location:     31
    Max states per location:     180 (at node N0)
  Number of reached functions:   26 (70%)
  Number of partitions:          6135
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N623 (after line 928), Function test called from node N390, stack depth 3 [5c388059], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.080s
  Time for loading CPAs:          0.543s
  Time for loading parser:        0.489s
  Time for CFA construction:      0.885s
    Time for parsing file(s):     0.311s
    Time for AST to CFA:          0.186s
    Time for CFA sanity check:    0.060s
    Time for post-processing:     0.204s
      Time for var class.:        0.080s
Time for Analysis:               15.188s
CPU time for analysis:           15.190s
Time for analyzing result:        0.004s
Total time for CPAchecker:       17.270s
Total CPU time for CPAchecker:   17.260s
Time for statistics:              0.133s

Time for Garbage Collector:       0.326s (in 50 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     41MB (    39 MiB) avg;     72MB (    68 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8072MB (  7698 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
