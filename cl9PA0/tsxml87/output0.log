scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product21_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4m08i6zd/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 169: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 224: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 621: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 667: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 682: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 705: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 801: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 876: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 908: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 917: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 458: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1712 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1645 (96%)
  Because of loop head:            47 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         20 (1%)
  Times precision was empty:       317 (19%)
  Times precision was {false}:     48 (3%)
  Times result was cached:         1203 (70%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      144 (8%)
  Times result was 'false':        278 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         351
  BDD entailment checks:           123
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          37
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         3473
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 18.09
Number of irrelevant predicates:          812 (23%)
Number of preds handled by boolean abs:   279 (8%)
  Total number of models for allsat:      166
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.15

Time for post operator:                  0.376s
  Time for path formula creation:        0.367s
Time for strengthen operator:            0.038s
Time for prec operator:                  0.784s
  Time for abstraction:                  0.684s (Max:     0.014s, Count: 1712)
    Boolean abstraction:                 0.095s
    Solving time:                        0.062s (Max:     0.006s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.021s (Max:     0.007s)
Time for merge operator:                 0.018s
Time for coverage check:                 0.009s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):     0.066s

Number of path formula cache hits:   5667 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.343s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               245
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         302 (count: 1651, min: 0, max: 204, avg: 0.18)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.054s
Automaton transfers with branching:                0
Automaton transfer successors:                         6320 (count: 6320, min: 1, max: 1, avg: 1.00) [1 x 6320]

CPA algorithm statistics
------------------------
Number of iterations:            4926
Max size of waitlist:            12
Average size of waitlist:        4
Number of computed successors:   5516
Max successors for one state:    2
Number of times merged:          114
Number of times stopped:         190
Number of times breaked:         20

Total time for CPA algorithm:         1.973s (Max:     0.242s)
  Time for choose from waitlist:      0.017s
  Time for precision adjustment:      0.970s
  Time for transfer relation:         0.727s
  Time for merge operator:            0.062s
  Time for stop operator:             0.070s
  Time for adding to reached set:     0.070s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   20
Avg. length of target path (in blocks):                 608 (count: 20, min: 19, max: 52, avg: 30.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.259s
  Counterexample analysis:                             0.146s (Max:     0.018s, Calls: 20)
    Refinement sat check:                              0.068s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.036s
  Precision update:                                    0.038s
  ARG update:                                          0.019s

Length of refined path (in blocks):                     474 (count: 20, min: 13, max: 49, avg: 23.70)
Number of affected states:                              428 (count: 20, min: 12, max: 48, avg: 21.40)
Length (states) of path with itp 'true':                 26 (count: 20, min: 0, max: 13, avg: 1.30)
Length (states) of path with itp non-trivial itp:       428 (count: 20, min: 12, max: 48, avg: 21.40)
Length (states) of path with itp 'false':                20 (count: 20, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 20, min: 0, max: 1, avg: 0.25)
Equal non-trivial interpolants along paths:             403 (count: 20, min: 11, max: 46, avg: 20.15)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                20
Number of successful refinements:     20
Number of failed refinements:         0
Max. size of reached set before ref.: 459
Max. size of reached set after ref.:  117
Avg. size of reached set before ref.: 231.55
Avg. size of reached set after ref.:  14.40

Total time for CEGAR algorithm:       2.293s
Time for refinements:                 0.319s
Average time for refinement:          0.015s
Max time for refinement:              0.039s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          100
  Total lines:            423
  Line coverage:          0.236
  Visited conditions:     30
  Total conditions:       68
  Condition coverage:     0.441

CPAchecker general statistics
-----------------------------
Number of program locations:     603
Number of CFA edges:             649
Number of relevant variables:    114
Number of functions:             35
Number of loops:                 5
Size of reached set:             706
  Number of reached locations:   134 (22%)
    Avg states per location:     5
    Max states per location:     25 (at node N540)
  Number of reached functions:   17 (49%)
  Number of partitions:          698
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N114 (before lines 241-286), Function test called from node N521, stack depth 3 [26cb5207], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.010s
  Time for loading CPAs:          0.468s
  Time for loading parser:        0.481s
  Time for CFA construction:      0.956s
    Time for parsing file(s):     0.334s
    Time for AST to CFA:          0.273s
    Time for CFA sanity check:    0.052s
    Time for post-processing:     0.188s
      Time for var class.:        0.078s
Time for Analysis:                2.293s
CPU time for analysis:            2.300s
Time for analyzing result:        0.009s
Total time for CPAchecker:        4.306s
Total CPU time for CPAchecker:    4.300s
Time for statistics:              0.074s

Time for Garbage Collector:       0.091s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 56MB (    54 MiB) max;     32MB (    31 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     26MB (    25 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8021MB (  7650 MiB) max;   7978MB (  7609 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
