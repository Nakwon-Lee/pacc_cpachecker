scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product22_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_91se_w6a/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 204: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 570: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 631: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 789: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 853: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 361: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3373 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3308 (98%)
  Because of loop head:            34 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         31 (1%)
  Times precision was empty:       1019 (30%)
  Times precision was {false}:     75 (2%)
  Times result was cached:         2012 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      267 (8%)
  Times result was 'false':        459 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         762
  BDD entailment checks:           266
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          39
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         5881
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 17.20
Number of irrelevant predicates:          2357 (40%)
Number of preds handled by boolean abs:   538 (9%)
  Total number of models for allsat:      287
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  0.551s
  Time for path formula creation:        0.528s
Time for strengthen operator:            0.025s
Time for prec operator:                  1.234s
  Time for abstraction:                  1.140s (Max:     0.018s, Count: 3373)
    Boolean abstraction:                 0.248s
    Solving time:                        0.146s (Max:     0.009s)
    Model enumeration time:              0.021s
    Time for BDD construction:           0.065s (Max:     0.012s)
Time for merge operator:                 0.022s
Time for coverage check:                 0.009s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):     0.167s

Number of path formula cache hits:   10294 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.499s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               258
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         549 (count: 3371, min: 0, max: 232, avg: 0.16)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.114s
Automaton transfers with branching:                0
Automaton transfer successors:                        12559 (count: 12559, min: 1, max: 1, avg: 1.00) [1 x 12559]

CPA algorithm statistics
------------------------
Number of iterations:            9475
Max size of waitlist:            45
Average size of waitlist:        12
Number of computed successors:   10811
Max successors for one state:    2
Number of times merged:          248
Number of times stopped:         404
Number of times breaked:         31

Total time for CPA algorithm:         2.883s (Max:     0.441s)
  Time for choose from waitlist:      0.054s
  Time for precision adjustment:      1.476s
  Time for transfer relation:         1.066s
  Time for merge operator:            0.052s
  Time for stop operator:             0.066s
  Time for adding to reached set:     0.054s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   31
Avg. length of target path (in blocks):                 897 (count: 31, min: 20, max: 50, avg: 28.94)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.336s
  Counterexample analysis:                             0.211s (Max:     0.014s, Calls: 31)
    Refinement sat check:                              0.074s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.031s
  Precision update:                                    0.032s
  ARG update:                                          0.049s

Length of refined path (in blocks):                     652 (count: 31, min: 14, max: 42, avg: 21.03)
Number of affected states:                              422 (count: 31, min: 2, max: 41, avg: 13.61)
Length (states) of path with itp 'true':                199 (count: 31, min: 0, max: 14, avg: 6.42)
Length (states) of path with itp non-trivial itp:       422 (count: 31, min: 2, max: 41, avg: 13.61)
Length (states) of path with itp 'false':                31 (count: 31, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 31, min: 0, max: 1, avg: 0.10)
Equal non-trivial interpolants along paths:             388 (count: 31, min: 1, max: 40, avg: 12.52)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 852
Max. size of reached set after ref.:  478
Avg. size of reached set before ref.: 454.87
Avg. size of reached set after ref.:  158.84

Total time for CEGAR algorithm:       3.292s
Time for refinements:                 0.401s
Average time for refinement:          0.012s
Max time for refinement:              0.040s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          103
  Total lines:            426
  Line coverage:          0.242
  Visited conditions:     30
  Total conditions:       68
  Condition coverage:     0.441

CPAchecker general statistics
-----------------------------
Number of program locations:     609
Number of CFA edges:             655
Number of relevant variables:    112
Number of functions:             36
Number of loops:                 5
Size of reached set:             772
  Number of reached locations:   138 (23%)
    Avg states per location:     5
    Max states per location:     27 (at node N24)
  Number of reached functions:   18 (50%)
  Number of partitions:          760
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N587 (before lines 875-922), Function test called from node N85, stack depth 3 [619c3546], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.937s
  Time for loading CPAs:          0.506s
  Time for loading parser:        0.458s
  Time for CFA construction:      0.872s
    Time for parsing file(s):     0.307s
    Time for AST to CFA:          0.232s
    Time for CFA sanity check:    0.050s
    Time for post-processing:     0.174s
      Time for var class.:        0.061s
Time for Analysis:                3.293s
CPU time for analysis:            3.300s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.232s
Total CPU time for CPAchecker:    5.220s
Time for statistics:              0.058s

Time for Garbage Collector:       0.088s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     36MB (    35 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8046MB (  7674 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
