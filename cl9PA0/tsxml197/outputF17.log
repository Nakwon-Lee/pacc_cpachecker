scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product22_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_c0g542j2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 204: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 570: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 631: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 789: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 853: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 361: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2255 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2177 (97%)
  Because of loop head:            56 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         22 (1%)
  Times precision was empty:       364 (16%)
  Times precision was {false}:     66 (3%)
  Times result was cached:         1637 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      188 (8%)
  Times result was 'false':        362 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         467
  BDD entailment checks:           241
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          39
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         4704
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 18.52
Number of irrelevant predicates:          1171 (25%)
Number of preds handled by boolean abs:   376 (8%)
  Total number of models for allsat:      206
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.10

Time for post operator:                  0.318s
  Time for path formula creation:        0.297s
Time for strengthen operator:            0.025s
Time for prec operator:                  0.987s
  Time for abstraction:                  0.913s (Max:     0.014s, Count: 2255)
    Boolean abstraction:                 0.177s
    Solving time:                        0.129s (Max:     0.012s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.035s (Max:     0.008s)
Time for merge operator:                 0.004s
Time for coverage check:                 0.010s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):     0.132s

Number of path formula cache hits:   7607 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.272s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               246
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         440 (count: 2178, min: 0, max: 193, avg: 0.20)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.106s
Automaton transfers with branching:                0
Automaton transfer successors:                         8129 (count: 8129, min: 1, max: 1, avg: 1.00) [1 x 8129]

CPA algorithm statistics
------------------------
Number of iterations:            6351
Max size of waitlist:            11
Average size of waitlist:        5
Number of computed successors:   7092
Max successors for one state:    2
Number of times merged:          113
Number of times stopped:         236
Number of times breaked:         22

Total time for CPA algorithm:         2.106s (Max:     0.187s)
  Time for choose from waitlist:      0.025s
  Time for precision adjustment:      1.167s
  Time for transfer relation:         0.700s
  Time for merge operator:            0.029s
  Time for stop operator:             0.055s
  Time for adding to reached set:     0.040s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   22
Avg. length of target path (in blocks):                 658 (count: 22, min: 19, max: 52, avg: 29.91)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.278s
  Counterexample analysis:                             0.189s (Max:     0.019s, Calls: 22)
    Refinement sat check:                              0.062s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.024s
  ARG update:                                          0.024s

Length of refined path (in blocks):                     513 (count: 22, min: 13, max: 49, avg: 23.32)
Number of affected states:                              453 (count: 22, min: 2, max: 48, avg: 20.59)
Length (states) of path with itp 'true':                 38 (count: 22, min: 0, max: 13, avg: 1.73)
Length (states) of path with itp non-trivial itp:       453 (count: 22, min: 2, max: 48, avg: 20.59)
Length (states) of path with itp 'false':                22 (count: 22, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           6 (count: 22, min: 0, max: 1, avg: 0.27)
Equal non-trivial interpolants along paths:             425 (count: 22, min: 1, max: 46, avg: 19.32)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 685
Max. size of reached set after ref.:  206
Avg. size of reached set before ref.: 281.73
Avg. size of reached set after ref.:  22.95

Total time for CEGAR algorithm:       2.428s
Time for refinements:                 0.321s
Average time for refinement:          0.014s
Max time for refinement:              0.041s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          103
  Total lines:            426
  Line coverage:          0.242
  Visited conditions:     30
  Total conditions:       68
  Condition coverage:     0.441

CPAchecker general statistics
-----------------------------
Number of program locations:     609
Number of CFA edges:             655
Number of relevant variables:    112
Number of functions:             36
Number of loops:                 5
Size of reached set:             802
  Number of reached locations:   138 (23%)
    Avg states per location:     5
    Max states per location:     28 (at node N24)
  Number of reached functions:   18 (50%)
  Number of partitions:          792
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N587 (before lines 875-922), Function test called from node N85, stack depth 3 [5416f8db], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.947s
  Time for loading CPAs:          0.512s
  Time for loading parser:        0.420s
  Time for CFA construction:      0.944s
    Time for parsing file(s):     0.363s
    Time for AST to CFA:          0.200s
    Time for CFA sanity check:    0.060s
    Time for post-processing:     0.212s
      Time for var class.:        0.107s
Time for Analysis:                2.428s
CPU time for analysis:            2.430s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.378s
Total CPU time for CPAchecker:    4.380s
Time for statistics:              0.070s

Time for Garbage Collector:       0.077s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     34MB (    33 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     27MB (    25 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7984MB (  7614 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
