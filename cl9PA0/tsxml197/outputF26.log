scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product22_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7cc8cz7d/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 204: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 570: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 631: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 789: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 853: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 361: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2091 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2027 (97%)
  Because of loop head:            46 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18 (1%)
  Times precision was empty:       378 (18%)
  Times precision was {false}:     55 (3%)
  Times result was cached:         1560 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      98 (5%)
  Times result was 'false':        305 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         491
  BDD entailment checks:           245
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          39
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         3245
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 21.21
Number of irrelevant predicates:          1286 (40%)
Number of preds handled by boolean abs:   140 (4%)
  Total number of models for allsat:      107
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  0.306s
  Time for path formula creation:        0.288s
Time for strengthen operator:            0.026s
Time for prec operator:                  0.738s
  Time for abstraction:                  0.651s (Max:     0.016s, Count: 2091)
    Boolean abstraction:                 0.114s
    Solving time:                        0.076s (Max:     0.010s)
    Model enumeration time:              0.009s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.012s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     0.085s

Number of path formula cache hits:   7150 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.271s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               217
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         213 (count: 1549, min: 0, max: 124, avg: 0.14)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.126s
Automaton transfers with branching:                0
Automaton transfer successors:                         7641 (count: 7641, min: 1, max: 1, avg: 1.00) [1 x 7641]

CPA algorithm statistics
------------------------
Number of iterations:            5958
Max size of waitlist:            15
Average size of waitlist:        5
Number of computed successors:   6705
Max successors for one state:    2
Number of times merged:          123
Number of times stopped:         298
Number of times breaked:         18

Total time for CPA algorithm:         1.914s (Max:     0.258s)
  Time for choose from waitlist:      0.024s
  Time for precision adjustment:      0.888s
  Time for transfer relation:         0.767s
  Time for merge operator:            0.031s
  Time for stop operator:             0.046s
  Time for adding to reached set:     0.048s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   18
Avg. length of target path (in blocks):                 459 (count: 18, min: 19, max: 36, avg: 25.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.202s
  Counterexample analysis:                             0.125s (Max:     0.024s, Calls: 18)
    Refinement sat check:                              0.056s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.016s
  ARG update:                                          0.022s

Length of refined path (in blocks):                     329 (count: 18, min: 13, max: 28, avg: 18.28)
Number of affected states:                              287 (count: 18, min: 2, max: 27, avg: 15.94)
Length (states) of path with itp 'true':                 24 (count: 18, min: 0, max: 12, avg: 1.33)
Length (states) of path with itp non-trivial itp:       287 (count: 18, min: 2, max: 27, avg: 15.94)
Length (states) of path with itp 'false':                18 (count: 18, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 18, min: 0, max: 1, avg: 0.17)
Equal non-trivial interpolants along paths:             266 (count: 18, min: 1, max: 26, avg: 14.78)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                18
Number of successful refinements:     18
Number of failed refinements:         0
Max. size of reached set before ref.: 738
Max. size of reached set after ref.:  173
Avg. size of reached set before ref.: 311.83
Avg. size of reached set after ref.:  19.67

Total time for CEGAR algorithm:       2.150s
Time for refinements:                 0.233s
Average time for refinement:          0.012s
Max time for refinement:              0.039s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          103
  Total lines:            426
  Line coverage:          0.242
  Visited conditions:     30
  Total conditions:       68
  Condition coverage:     0.441

CPAchecker general statistics
-----------------------------
Number of program locations:     609
Number of CFA edges:             655
Number of relevant variables:    112
Number of functions:             36
Number of loops:                 5
Size of reached set:             844
  Number of reached locations:   138 (23%)
    Avg states per location:     6
    Max states per location:     34 (at node N24)
  Number of reached functions:   18 (50%)
  Number of partitions:          841
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N587 (before lines 875-922), Function test called from node N85, stack depth 3 [51c8f62c], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.049s
  Time for loading CPAs:          0.512s
  Time for loading parser:        0.469s
  Time for CFA construction:      0.978s
    Time for parsing file(s):     0.329s
    Time for AST to CFA:          0.250s
    Time for CFA sanity check:    0.057s
    Time for post-processing:     0.203s
      Time for var class.:        0.091s
Time for Analysis:                2.150s
CPU time for analysis:            2.150s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.202s
Total CPU time for CPAchecker:    4.190s
Time for statistics:              0.083s

Time for Garbage Collector:       0.077s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    56 MiB) max;     33MB (    31 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     26MB (    25 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     28MB (    26 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8034MB (  7662 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
