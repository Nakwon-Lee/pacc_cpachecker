scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product22_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sdij2xee/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 204: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 570: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 631: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 789: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 853: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 361: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2925 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2866 (98%)
  Because of loop head:            40 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         19 (1%)
  Times precision was empty:       1117 (38%)
  Times precision was {false}:     61 (2%)
  Times result was cached:         1595 (55%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      152 (5%)
  Times result was 'false':        310 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         626
  BDD entailment checks:           292
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          39
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         3709
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 17.41
Number of irrelevant predicates:          1362 (37%)
Number of preds handled by boolean abs:   241 (6%)
  Total number of models for allsat:      174
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.14

Time for post operator:                  0.345s
  Time for path formula creation:        0.313s
Time for strengthen operator:            0.035s
Time for prec operator:                  0.942s
  Time for abstraction:                  0.859s (Max:     0.016s, Count: 2925)
    Boolean abstraction:                 0.155s
    Solving time:                        0.087s (Max:     0.013s)
    Model enumeration time:              0.021s
    Time for BDD construction:           0.033s (Max:     0.006s)
Time for merge operator:                 0.004s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     0.108s

Number of path formula cache hits:   10328 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.279s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               223
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         314 (count: 2701, min: 0, max: 125, avg: 0.12)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.104s
Automaton transfers with branching:                0
Automaton transfer successors:                        10910 (count: 10910, min: 1, max: 1, avg: 1.00) [1 x 10910]

CPA algorithm statistics
------------------------
Number of iterations:            8139
Max size of waitlist:            47
Average size of waitlist:        13
Number of computed successors:   9218
Max successors for one state:    2
Number of times merged:          167
Number of times stopped:         352
Number of times breaked:         19

Total time for CPA algorithm:         2.372s (Max:     0.318s)
  Time for choose from waitlist:      0.045s
  Time for precision adjustment:      1.153s
  Time for transfer relation:         0.870s
  Time for merge operator:            0.021s
  Time for stop operator:             0.047s
  Time for adding to reached set:     0.077s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   19
Avg. length of target path (in blocks):                 518 (count: 19, min: 19, max: 48, avg: 27.26)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.247s
  Counterexample analysis:                             0.133s (Max:     0.014s, Calls: 19)
    Refinement sat check:                              0.056s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.047s
  Precision update:                                    0.009s
  ARG update:                                          0.038s

Length of refined path (in blocks):                     370 (count: 19, min: 13, max: 40, avg: 19.47)
Number of affected states:                              326 (count: 19, min: 2, max: 39, avg: 17.16)
Length (states) of path with itp 'true':                 25 (count: 19, min: 0, max: 13, avg: 1.32)
Length (states) of path with itp non-trivial itp:       326 (count: 19, min: 2, max: 39, avg: 17.16)
Length (states) of path with itp 'false':                19 (count: 19, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 19, min: 0, max: 1, avg: 0.11)
Equal non-trivial interpolants along paths:             305 (count: 19, min: 1, max: 38, avg: 16.05)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                19
Number of successful refinements:     19
Number of failed refinements:         0
Max. size of reached set before ref.: 870
Max. size of reached set after ref.:  324
Avg. size of reached set before ref.: 432.47
Avg. size of reached set after ref.:  33.74

Total time for CEGAR algorithm:       2.668s
Time for refinements:                 0.294s
Average time for refinement:          0.015s
Max time for refinement:              0.044s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          103
  Total lines:            426
  Line coverage:          0.242
  Visited conditions:     30
  Total conditions:       68
  Condition coverage:     0.441

CPAchecker general statistics
-----------------------------
Number of program locations:     609
Number of CFA edges:             655
Number of relevant variables:    112
Number of functions:             36
Number of loops:                 5
Size of reached set:             981
  Number of reached locations:   138 (23%)
    Avg states per location:     7
    Max states per location:     37 (at node N24)
  Number of reached functions:   18 (50%)
  Number of partitions:          962
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N587 (before lines 875-922), Function test called from node N85, stack depth 3 [515ab3f2], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.980s
  Time for loading CPAs:          0.490s
  Time for loading parser:        0.419s
  Time for CFA construction:      0.953s
    Time for parsing file(s):     0.326s
    Time for AST to CFA:          0.216s
    Time for CFA sanity check:    0.069s
    Time for post-processing:     0.214s
      Time for var class.:        0.104s
Time for Analysis:                2.668s
CPU time for analysis:            2.670s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.651s
Total CPU time for CPAchecker:    4.650s
Time for statistics:              0.084s

Time for Garbage Collector:       0.078s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    54 MiB) max;     35MB (    33 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   7985MB (  7616 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
