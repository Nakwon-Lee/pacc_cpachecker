scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product22_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rbnyv76s/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 204: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 570: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 631: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 789: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 853: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 361: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            6503 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6391 (98%)
  Because of loop head:            79 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         33 (1%)
  Times precision was empty:       2071 (32%)
  Times precision was {false}:     104 (2%)
  Times result was cached:         4151 (64%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      177 (3%)
  Times result was 'false':        415 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         2083
  BDD entailment checks:           1117
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          39
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         7789
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 27.72
Number of irrelevant predicates:          4222 (54%)
Number of preds handled by boolean abs:   256 (3%)
  Total number of models for allsat:      202
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.14

Time for post operator:                  0.671s
  Time for path formula creation:        0.628s
Time for strengthen operator:            0.079s
Time for prec operator:                  1.471s
  Time for abstraction:                  1.262s (Max:     0.016s, Count: 6503)
    Boolean abstraction:                 0.210s
    Solving time:                        0.146s (Max:     0.012s)
    Model enumeration time:              0.028s
    Time for BDD construction:           0.026s (Max:     0.009s)
Time for merge operator:                 0.029s
Time for coverage check:                 0.022s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     0.174s

Number of path formula cache hits:   22659 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.573s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               217
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         397 (count: 4855, min: 0, max: 81, avg: 0.08)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.140s
Automaton transfers with branching:                0
Automaton transfer successors:                        24405 (count: 24405, min: 1, max: 1, avg: 1.00) [1 x 24405]

CPA algorithm statistics
------------------------
Number of iterations:            18584
Max size of waitlist:            59
Average size of waitlist:        25
Number of computed successors:   21230
Max successors for one state:    2
Number of times merged:          483
Number of times stopped:         1187
Number of times breaked:         33

Total time for CPA algorithm:         3.951s (Max:     0.412s)
  Time for choose from waitlist:      0.062s
  Time for precision adjustment:      1.890s
  Time for transfer relation:         1.496s
  Time for merge operator:            0.069s
  Time for stop operator:             0.096s
  Time for adding to reached set:     0.098s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   33
Avg. length of target path (in blocks):                 929 (count: 33, min: 19, max: 45, avg: 28.15)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.427s
  Counterexample analysis:                             0.261s (Max:     0.016s, Calls: 33)
    Refinement sat check:                              0.121s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.021s
  ARG update:                                          0.097s

Length of refined path (in blocks):                     679 (count: 33, min: 13, max: 30, avg: 20.58)
Number of affected states:                              456 (count: 33, min: 2, max: 29, avg: 13.82)
Length (states) of path with itp 'true':                190 (count: 33, min: 0, max: 14, avg: 5.76)
Length (states) of path with itp non-trivial itp:       456 (count: 33, min: 2, max: 29, avg: 13.82)
Length (states) of path with itp 'false':                33 (count: 33, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 33, min: 0, max: 1, avg: 0.12)
Equal non-trivial interpolants along paths:             419 (count: 33, min: 1, max: 28, avg: 12.70)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                33
Number of successful refinements:     33
Number of failed refinements:         0
Max. size of reached set before ref.: 1301
Max. size of reached set after ref.:  331
Avg. size of reached set before ref.: 680.82
Avg. size of reached set after ref.:  113.48

Total time for CEGAR algorithm:       4.470s
Time for refinements:                 0.518s
Average time for refinement:          0.015s
Max time for refinement:              0.042s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          103
  Total lines:            426
  Line coverage:          0.242
  Visited conditions:     30
  Total conditions:       68
  Condition coverage:     0.441

CPAchecker general statistics
-----------------------------
Number of program locations:     609
Number of CFA edges:             655
Number of relevant variables:    112
Number of functions:             36
Number of loops:                 5
Size of reached set:             907
  Number of reached locations:   138 (23%)
    Avg states per location:     6
    Max states per location:     35 (at node N24)
  Number of reached functions:   18 (50%)
  Number of partitions:          903
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N587 (before lines 875-922), Function test called from node N85, stack depth 3 [551976c2], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.329s
  Time for loading CPAs:          0.644s
  Time for loading parser:        0.500s
  Time for CFA construction:      1.064s
    Time for parsing file(s):     0.387s
    Time for AST to CFA:          0.258s
    Time for CFA sanity check:    0.081s
    Time for post-processing:     0.207s
      Time for var class.:        0.081s
Time for Analysis:                4.471s
CPU time for analysis:            4.460s
Time for analyzing result:        0.001s
Total time for CPAchecker:        6.803s
Total CPU time for CPAchecker:    6.790s
Time for statistics:              0.087s

Time for Garbage Collector:       0.111s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     36MB (    34 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     29MB (    27 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8053MB (  7680 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
