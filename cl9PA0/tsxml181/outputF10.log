scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_productSimulator_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_r4st46jp/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 100: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 146: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 155: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 259: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 304: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 633: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 679: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1000: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1055: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1074: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 470: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2501868 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2473408 (99%)
  Because of loop head:            25139 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3321 (0%)
  Times precision was empty:       22550 (1%)
  Times precision was {false}:     3880 (0%)
  Times result was cached:         2373344 (95%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      102094 (4%)
  Times result was 'false':        309578 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         5258931
  BDD entailment checks:           4806407
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       15
Number of predicates discovered:          28
Number of abstraction locations:          89
Max number of predicates per location:    17
Avg number of predicates per location:    8
Total predicates per abstraction:         23173074
Max number of predicates per abstraction: 19
Avg number of predicates per abstraction: 218.67
Number of irrelevant predicates:          10853947 (47%)
Number of preds handled by boolean abs:   755335 (3%)
  Total number of models for allsat:      135299
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.33

Time for post operator:                 64.904s
  Time for path formula creation:       62.715s
Time for strengthen operator:            5.412s
Time for prec operator:                590.106s
  Time for abstraction:                558.883s (Max:     0.775s, Count: 2501868)
    Boolean abstraction:                71.872s
    Solving time:                       56.053s (Max:     0.037s)
    Model enumeration time:              5.912s
    Time for BDD construction:           2.290s (Max:     0.022s)
Time for merge operator:                 1.023s
Time for coverage check:                 3.351s
  Time for BDD entailment checks:        2.698s
Total time for SMT solver (w/o itp):    61.965s

Number of path formula cache hits:   10071876 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.419s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               67899
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      246522 (count: 5531555, min: 0, max: 3694, avg: 0.04)
Time for BDD node cleanup:                             0.536s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.294s
  Time for transition matches:                         4.808s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.017s
Automaton transfers with branching:                0
Automaton transfer successors:                      8812611 (count: 8812611, min: 1, max: 1, avg: 1.00) [1 x 8812611]

CPA algorithm statistics
------------------------
Number of iterations:            6963034
Max size of waitlist:            494
Average size of waitlist:        176
Number of computed successors:   7929615
Max successors for one state:    2
Number of times merged:          226262
Number of times stopped:         487201
Number of times breaked:         3321

Total time for CPA algorithm:       768.317s (Max:     3.587s)
  Time for choose from waitlist:      2.019s
  Time for precision adjustment:    617.533s
  Time for transfer relation:       113.652s
  Time for merge operator:            5.434s
  Time for stop operator:             9.932s
  Time for adding to reached set:     7.158s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3321
Avg. length of target path (in blocks):              354771 (count: 3321, min: 37, max: 196, avg: 106.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  56.713s
  Counterexample analysis:                            43.417s (Max:     0.070s, Calls: 3321)
    Refinement sat check:                             17.214s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.165s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.416s
  Precision update:                                    1.091s
  ARG update:                                         10.421s

Length of refined path (in blocks):                  305062 (count: 3321, min: 26, max: 172, avg: 91.86)
Number of affected states:                            57453 (count: 3321, min: 1, max: 110, avg: 17.30)
Length (states) of path with itp 'true':             244288 (count: 3321, min: 0, max: 140, avg: 73.56)
Length (states) of path with itp non-trivial itp:     57453 (count: 3321, min: 1, max: 110, avg: 17.30)
Length (states) of path with itp 'false':              3321 (count: 3321, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1243 (count: 3321, min: 0, max: 5, avg: 0.37)
Equal non-trivial interpolants along paths:           52889 (count: 3321, min: 0, max: 109, avg: 15.93)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3321
Number of successful refinements:     3321
Number of failed refinements:         0
Max. size of reached set before ref.: 36219
Max. size of reached set after ref.:  32761
Avg. size of reached set before ref.: 16784.88
Avg. size of reached set after ref.:  14645.16

Total time for CEGAR algorithm:     897.982s
Time for refinements:                98.758s
Average time for refinement:          0.029s
Max time for refinement:              1.057s

Code Coverage
-----------------------------
  Function coverage:      0.787
  Visited lines:          216
  Total lines:            505
  Line coverage:          0.428
  Visited conditions:     62
  Total conditions:       94
  Condition coverage:     0.660

CPAchecker general statistics
-----------------------------
Number of program locations:     737
Number of CFA edges:             811
Number of relevant variables:    133
Number of functions:             47
Number of loops:                 5
Size of reached set:             26841
  Number of reached locations:   279 (38%)
    Avg states per location:     96
    Max states per location:     637 (at node N732)
  Number of reached functions:   37 (79%)
  Number of partitions:          26009
    Avg size of partitions:      1
    Max size of partitions:      59 (with key [N500 (after line 717), Function test called from node N117, stack depth 3 [7b7871], stack [main, runTest, test]])
  Number of target states:       0
  Size of final wait list        190

Time for analysis setup:          2.340s
  Time for loading CPAs:          0.628s
  Time for loading parser:        0.466s
  Time for CFA construction:      1.105s
    Time for parsing file(s):     0.401s
    Time for AST to CFA:          0.274s
    Time for CFA sanity check:    0.070s
    Time for post-processing:     0.232s
      Time for var class.:        0.096s
Time for Analysis:              897.982s
CPU time for analysis:          897.880s
Total time for CPAchecker:      900.324s
Total CPU time for CPAchecker:  900.220s
Time for statistics:              0.370s

Time for Garbage Collector:      48.320s (in 3373 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                473MB (   451 MiB) max;    226MB (   215 MiB) avg;    517MB (   493 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     36MB (    34 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           608MB (   580 MiB) max;    330MB (   315 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     38MB (    37 MiB) avg
Total process virtual memory:   9843MB (  9387 MiB) max;   8743MB (  8338 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
