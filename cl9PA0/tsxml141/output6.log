scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product23_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_x1wanhrg/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 411: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 466: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 522: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 545: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 734: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 743: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 935: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 202: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            8395 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8148 (97%)
  Because of loop head:            197 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         50 (1%)
  Times precision was empty:       663 (8%)
  Times precision was {false}:     143 (2%)
  Times result was cached:         6669 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      920 (11%)
  Times result was 'false':        1311 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         4405
  BDD entailment checks:           3635
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          40
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         22966
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 21.60
Number of irrelevant predicates:          7300 (32%)
Number of preds handled by boolean abs:   2227 (10%)
  Total number of models for allsat:      981
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  0.810s
  Time for path formula creation:        0.775s
Time for strengthen operator:            0.060s
Time for prec operator:                  3.284s
  Time for abstraction:                  3.067s (Max:     0.018s, Count: 8395)
    Boolean abstraction:                 0.759s
    Solving time:                        0.535s (Max:     0.013s)
    Model enumeration time:              0.039s
    Time for BDD construction:           0.074s (Max:     0.009s)
Time for merge operator:                 0.045s
Time for coverage check:                 0.027s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     0.574s

Number of path formula cache hits:   23484 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.705s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               302
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1972 (count: 10756, min: 0, max: 383, avg: 0.18)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.258s
Automaton transfers with branching:                0
Automaton transfer successors:                        30297 (count: 30297, min: 1, max: 1, avg: 1.00) [1 x 30297]

CPA algorithm statistics
------------------------
Number of iterations:            23710
Max size of waitlist:            30
Average size of waitlist:        10
Number of computed successors:   26797
Max successors for one state:    2
Number of times merged:          385
Number of times stopped:         1282
Number of times breaked:         50

Total time for CPA algorithm:         6.203s (Max:     0.445s)
  Time for choose from waitlist:      0.072s
  Time for precision adjustment:      3.688s
  Time for transfer relation:         1.735s
  Time for merge operator:            0.112s
  Time for stop operator:             0.144s
  Time for adding to reached set:     0.158s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   50
Avg. length of target path (in blocks):                2732 (count: 50, min: 19, max: 76, avg: 54.64)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.693s
  Counterexample analysis:                             0.415s (Max:     0.022s, Calls: 50)
    Refinement sat check:                              0.239s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.042s
  Precision update:                                    0.079s
  ARG update:                                          0.120s

Length of refined path (in blocks):                    1509 (count: 50, min: 13, max: 52, avg: 30.18)
Number of affected states:                              777 (count: 50, min: 2, max: 40, avg: 15.54)
Length (states) of path with itp 'true':                682 (count: 50, min: 0, max: 34, avg: 13.64)
Length (states) of path with itp non-trivial itp:       777 (count: 50, min: 2, max: 40, avg: 15.54)
Length (states) of path with itp 'false':                50 (count: 50, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 50, min: 0, max: 1, avg: 0.08)
Equal non-trivial interpolants along paths:             723 (count: 50, min: 1, max: 39, avg: 14.46)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                50
Number of successful refinements:     50
Number of failed refinements:         0
Max. size of reached set before ref.: 1288
Max. size of reached set after ref.:  792
Avg. size of reached set before ref.: 822.84
Avg. size of reached set after ref.:  366.52

Total time for CEGAR algorithm:       7.012s
Time for refinements:                 0.788s
Average time for refinement:          0.015s
Max time for refinement:              0.037s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          104
  Total lines:            428
  Line coverage:          0.243
  Visited conditions:     32
  Total conditions:       70
  Condition coverage:     0.457

CPAchecker general statistics
-----------------------------
Number of program locations:     613
Number of CFA edges:             661
Number of relevant variables:    114
Number of functions:             36
Number of loops:                 5
Size of reached set:             1389
  Number of reached locations:   142 (23%)
    Avg states per location:     9
    Max states per location:     54 (at node N429)
  Number of reached functions:   18 (50%)
  Number of partitions:          1344
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N397 (before lines 562-609), Function test called from node N604, stack depth 3 [4fdb338e], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.851s
  Time for loading CPAs:          0.462s
  Time for loading parser:        0.407s
  Time for CFA construction:      0.919s
    Time for parsing file(s):     0.326s
    Time for AST to CFA:          0.218s
    Time for CFA sanity check:    0.057s
    Time for post-processing:     0.208s
      Time for var class.:        0.109s
Time for Analysis:                7.012s
CPU time for analysis:            7.010s
Time for analyzing result:        0.001s
Total time for CPAchecker:        8.866s
Total CPU time for CPAchecker:    8.860s
Time for statistics:              0.077s

Time for Garbage Collector:       0.130s (in 17 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     39MB (    38 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     31MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     33MB (    32 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8001MB (  7631 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
