scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product23_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_i4rsdf9f/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 411: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 466: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 522: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 545: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 734: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 743: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 935: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 202: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            5190 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5112 (98%)
  Because of loop head:            61 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         17 (0%)
  Times precision was empty:       1667 (32%)
  Times precision was {false}:     73 (1%)
  Times result was cached:         3290 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      160 (3%)
  Times result was 'false':        440 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         1619
  BDD entailment checks:           973
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          40
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         6412
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 27.52
Number of irrelevant predicates:          3158 (49%)
Number of preds handled by boolean abs:   215 (3%)
  Total number of models for allsat:      188
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.18

Time for post operator:                  0.461s
  Time for path formula creation:        0.436s
Time for strengthen operator:            0.027s
Time for prec operator:                  1.166s
  Time for abstraction:                  1.021s (Max:     0.015s, Count: 5190)
    Boolean abstraction:                 0.175s
    Solving time:                        0.120s (Max:     0.012s)
    Model enumeration time:              0.015s
    Time for BDD construction:           0.038s (Max:     0.012s)
Time for merge operator:                 0.022s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     0.135s

Number of path formula cache hits:   18491 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.393s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               214
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         359 (count: 4001, min: 0, max: 122, avg: 0.09)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.154s
Automaton transfers with branching:                0
Automaton transfer successors:                        19514 (count: 19514, min: 1, max: 1, avg: 1.00) [1 x 19514]

CPA algorithm statistics
------------------------
Number of iterations:            14982
Max size of waitlist:            64
Average size of waitlist:        23
Number of computed successors:   17038
Max successors for one state:    2
Number of times merged:          323
Number of times stopped:         955
Number of times breaked:         17

Total time for CPA algorithm:         2.960s (Max:     0.344s)
  Time for choose from waitlist:      0.049s
  Time for precision adjustment:      1.360s
  Time for transfer relation:         1.046s
  Time for merge operator:            0.084s
  Time for stop operator:             0.081s
  Time for adding to reached set:     0.099s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   17
Avg. length of target path (in blocks):                 440 (count: 17, min: 19, max: 36, avg: 25.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.232s
  Counterexample analysis:                             0.109s (Max:     0.012s, Calls: 17)
    Refinement sat check:                              0.047s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.023s
  Precision update:                                    0.022s
  ARG update:                                          0.063s

Length of refined path (in blocks):                     312 (count: 17, min: 13, max: 28, avg: 18.35)
Number of affected states:                              295 (count: 17, min: 12, max: 27, avg: 17.35)
Length (states) of path with itp 'true':                  0 (count: 17, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       295 (count: 17, min: 12, max: 27, avg: 17.35)
Length (states) of path with itp 'false':                17 (count: 17, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 17, min: 0, max: 1, avg: 0.18)
Equal non-trivial interpolants along paths:             275 (count: 17, min: 11, max: 26, avg: 16.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                17
Number of successful refinements:     17
Number of failed refinements:         0
Max. size of reached set before ref.: 1409
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 866.24
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.232s
Time for refinements:                 0.272s
Average time for refinement:          0.016s
Max time for refinement:              0.039s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          104
  Total lines:            428
  Line coverage:          0.243
  Visited conditions:     32
  Total conditions:       70
  Condition coverage:     0.457

CPAchecker general statistics
-----------------------------
Number of program locations:     613
Number of CFA edges:             661
Number of relevant variables:    114
Number of functions:             36
Number of loops:                 5
Size of reached set:             969
  Number of reached locations:   142 (23%)
    Avg states per location:     6
    Max states per location:     39 (at node N543)
  Number of reached functions:   18 (50%)
  Number of partitions:          965
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N397 (before lines 562-609), Function test called from node N604, stack depth 3 [3294102e], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.939s
  Time for loading CPAs:          0.495s
  Time for loading parser:        0.465s
  Time for CFA construction:      0.902s
    Time for parsing file(s):     0.300s
    Time for AST to CFA:          0.254s
    Time for CFA sanity check:    0.059s
    Time for post-processing:     0.199s
      Time for var class.:        0.089s
Time for Analysis:                3.232s
CPU time for analysis:            3.230s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.210s
Total CPU time for CPAchecker:    5.210s
Time for statistics:              0.066s

Time for Garbage Collector:       0.085s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     36MB (    34 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     28MB (    27 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   7985MB (  7615 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
