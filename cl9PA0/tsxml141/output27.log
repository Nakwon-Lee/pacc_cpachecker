scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product23_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qysl4vpp/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 411: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 466: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 522: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 545: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 734: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 743: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 935: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 202: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3918 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3843 (98%)
  Because of loop head:            55 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         20 (1%)
  Times precision was empty:       1466 (37%)
  Times precision was {false}:     62 (2%)
  Times result was cached:         2270 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      120 (3%)
  Times result was 'false':        462 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         977
  BDD entailment checks:           545
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          40
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         4513
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 24.80
Number of irrelevant predicates:          1907 (42%)
Number of preds handled by boolean abs:   168 (4%)
  Total number of models for allsat:      133
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.11

Time for post operator:                  0.629s
  Time for path formula creation:        0.600s
Time for strengthen operator:            0.048s
Time for prec operator:                  0.981s
  Time for abstraction:                  0.850s (Max:     0.014s, Count: 3918)
    Boolean abstraction:                 0.152s
    Solving time:                        0.121s (Max:     0.012s)
    Model enumeration time:              0.007s
    Time for BDD construction:           0.014s (Max:     0.001s)
Time for merge operator:                 0.004s
Time for coverage check:                 0.022s
  Time for BDD entailment checks:        0.022s
Total time for SMT solver (w/o itp):     0.128s

Number of path formula cache hits:   13164 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.552s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               215
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         238 (count: 3101, min: 0, max: 88, avg: 0.08)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.110s
Automaton transfers with branching:                0
Automaton transfer successors:                        14234 (count: 14234, min: 1, max: 1, avg: 1.00) [1 x 14234]

CPA algorithm statistics
------------------------
Number of iterations:            11280
Max size of waitlist:            18
Average size of waitlist:        8
Number of computed successors:   12543
Max successors for one state:    2
Number of times merged:          216
Number of times stopped:         625
Number of times breaked:         20

Total time for CPA algorithm:         2.888s (Max:     0.323s)
  Time for choose from waitlist:      0.044s
  Time for precision adjustment:      1.241s
  Time for transfer relation:         1.271s
  Time for merge operator:            0.034s
  Time for stop operator:             0.066s
  Time for adding to reached set:     0.074s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   20
Avg. length of target path (in blocks):                 504 (count: 20, min: 19, max: 38, avg: 25.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.300s
  Counterexample analysis:                             0.174s (Max:     0.019s, Calls: 20)
    Refinement sat check:                              0.071s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.044s
  Precision update:                                    0.009s
  ARG update:                                          0.049s

Length of refined path (in blocks):                     366 (count: 20, min: 13, max: 30, avg: 18.30)
Number of affected states:                              346 (count: 20, min: 12, max: 29, avg: 17.30)
Length (states) of path with itp 'true':                  0 (count: 20, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       346 (count: 20, min: 12, max: 29, avg: 17.30)
Length (states) of path with itp 'false':                20 (count: 20, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 20, min: 0, max: 1, avg: 0.25)
Equal non-trivial interpolants along paths:             321 (count: 20, min: 11, max: 28, avg: 16.05)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                20
Number of successful refinements:     20
Number of failed refinements:         0
Max. size of reached set before ref.: 878
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 524.65
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.219s
Time for refinements:                 0.331s
Average time for refinement:          0.016s
Max time for refinement:              0.038s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          104
  Total lines:            428
  Line coverage:          0.243
  Visited conditions:     32
  Total conditions:       70
  Condition coverage:     0.457

CPAchecker general statistics
-----------------------------
Number of program locations:     613
Number of CFA edges:             661
Number of relevant variables:    114
Number of functions:             36
Number of loops:                 5
Size of reached set:             1024
  Number of reached locations:   142 (23%)
    Avg states per location:     7
    Max states per location:     40 (at node N543)
  Number of reached functions:   18 (50%)
  Number of partitions:          1019
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N414 (after line 584), Function test called from node N604, stack depth 3 [fd4459b], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.461s
  Time for loading CPAs:          0.634s
  Time for loading parser:        0.586s
  Time for CFA construction:      1.124s
    Time for parsing file(s):     0.383s
    Time for AST to CFA:          0.291s
    Time for CFA sanity check:    0.057s
    Time for post-processing:     0.232s
      Time for var class.:        0.092s
Time for Analysis:                3.220s
CPU time for analysis:            3.220s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.685s
Total CPU time for CPAchecker:    5.680s
Time for statistics:              0.085s

Time for Garbage Collector:       0.130s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    57 MiB) max;     34MB (    33 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8042MB (  7669 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
