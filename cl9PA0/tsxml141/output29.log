scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product23_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1gegs0ee/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 411: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 466: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 522: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 545: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 734: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 743: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 935: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 202: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4524 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4461 (99%)
  Because of loop head:            40 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (1%)
  Times precision was empty:       2071 (46%)
  Times precision was {false}:     65 (1%)
  Times result was cached:         2191 (48%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      197 (4%)
  Times result was 'false':        515 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         1053
  BDD entailment checks:           439
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          40
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         5105
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 19.48
Number of irrelevant predicates:          1733 (34%)
Number of preds handled by boolean abs:   323 (6%)
  Total number of models for allsat:      220
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.12

Time for post operator:                  0.480s
  Time for path formula creation:        0.462s
Time for strengthen operator:            0.015s
Time for prec operator:                  1.109s
  Time for abstraction:                  0.962s (Max:     0.016s, Count: 4524)
    Boolean abstraction:                 0.145s
    Solving time:                        0.079s (Max:     0.008s)
    Model enumeration time:              0.005s
    Time for BDD construction:           0.044s (Max:     0.014s)
Time for merge operator:                 0.014s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):     0.084s

Number of path formula cache hits:   17419 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.416s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               225
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         418 (count: 4117, min: 0, max: 128, avg: 0.10)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.126s
Automaton transfers with branching:                0
Automaton transfer successors:                        17217 (count: 17217, min: 1, max: 1, avg: 1.00) [1 x 17217]

CPA algorithm statistics
------------------------
Number of iterations:            12937
Max size of waitlist:            58
Average size of waitlist:        17
Number of computed successors:   14663
Max successors for one state:    2
Number of times merged:          307
Number of times stopped:         569
Number of times breaked:         23

Total time for CPA algorithm:         3.058s (Max:     0.483s)
  Time for choose from waitlist:      0.057s
  Time for precision adjustment:      1.409s
  Time for transfer relation:         1.206s
  Time for merge operator:            0.032s
  Time for stop operator:             0.081s
  Time for adding to reached set:     0.083s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   23
Avg. length of target path (in blocks):                 624 (count: 23, min: 19, max: 50, avg: 27.13)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.313s
  Counterexample analysis:                             0.170s (Max:     0.016s, Calls: 23)
    Refinement sat check:                              0.075s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.046s
  Precision update:                                    0.028s
  ARG update:                                          0.058s

Length of refined path (in blocks):                     460 (count: 23, min: 13, max: 42, avg: 20.00)
Number of affected states:                              424 (count: 23, min: 12, max: 41, avg: 18.43)
Length (states) of path with itp 'true':                 13 (count: 23, min: 0, max: 13, avg: 0.57)
Length (states) of path with itp non-trivial itp:       424 (count: 23, min: 12, max: 41, avg: 18.43)
Length (states) of path with itp 'false':                23 (count: 23, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           6 (count: 23, min: 0, max: 1, avg: 0.26)
Equal non-trivial interpolants along paths:             395 (count: 23, min: 11, max: 40, avg: 17.17)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                23
Number of successful refinements:     23
Number of failed refinements:         0
Max. size of reached set before ref.: 1067
Max. size of reached set after ref.:  443
Avg. size of reached set before ref.: 563.91
Avg. size of reached set after ref.:  22.13

Total time for CEGAR algorithm:       3.420s
Time for refinements:                 0.360s
Average time for refinement:          0.015s
Max time for refinement:              0.053s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          104
  Total lines:            428
  Line coverage:          0.243
  Visited conditions:     32
  Total conditions:       70
  Condition coverage:     0.457

CPAchecker general statistics
-----------------------------
Number of program locations:     613
Number of CFA edges:             661
Number of relevant variables:    114
Number of functions:             36
Number of loops:                 5
Size of reached set:             1119
  Number of reached locations:   142 (23%)
    Avg states per location:     7
    Max states per location:     41 (at node N543)
  Number of reached functions:   18 (50%)
  Number of partitions:          1099
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N414 (after line 584), Function test called from node N604, stack depth 3 [5d3f8661], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.295s
  Time for loading CPAs:          0.538s
  Time for loading parser:        0.530s
  Time for CFA construction:      1.128s
    Time for parsing file(s):     0.363s
    Time for AST to CFA:          0.293s
    Time for CFA sanity check:    0.075s
    Time for post-processing:     0.236s
      Time for var class.:        0.103s
Time for Analysis:                3.420s
CPU time for analysis:            3.420s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.719s
Total CPU time for CPAchecker:    5.720s
Time for statistics:              0.092s

Time for Garbage Collector:       0.100s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    56 MiB) max;     36MB (    34 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8044MB (  7671 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
