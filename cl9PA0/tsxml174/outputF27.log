scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product24_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_mrdjdmfa/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 171: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 226: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 641: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 687: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 702: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 725: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 823: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 921: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 953: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 478: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            12275 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12147 (99%)
  Because of loop head:            97 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         31 (0%)
  Times precision was empty:       3991 (33%)
  Times precision was {false}:     113 (1%)
  Times result was cached:         7792 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      379 (3%)
  Times result was 'false':        653 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         4647
  BDD entailment checks:           2681
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          44
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         15466
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 31.43
Number of irrelevant predicates:          8048 (52%)
Number of preds handled by boolean abs:   673 (4%)
  Total number of models for allsat:      455
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.20

Time for post operator:                  0.993s
  Time for path formula creation:        0.951s
Time for strengthen operator:            0.066s
Time for prec operator:                  2.610s
  Time for abstraction:                  2.339s (Max:     0.017s, Count: 12275)
    Boolean abstraction:                 0.317s
    Solving time:                        0.241s (Max:     0.012s)
    Model enumeration time:              0.015s
    Time for BDD construction:           0.067s (Max:     0.010s)
Time for merge operator:                 0.060s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     0.256s

Number of path formula cache hits:   44091 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.856s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               247
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         849 (count: 9600, min: 0, max: 130, avg: 0.09)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.222s
Automaton transfers with branching:                0
Automaton transfer successors:                        48041 (count: 48041, min: 1, max: 1, avg: 1.00) [1 x 48041]

CPA algorithm statistics
------------------------
Number of iterations:            36653
Max size of waitlist:            119
Average size of waitlist:        48
Number of computed successors:   41972
Max successors for one state:    2
Number of times merged:          983
Number of times stopped:         2509
Number of times breaked:         31

Total time for CPA algorithm:         6.024s (Max:     0.586s)
  Time for choose from waitlist:      0.092s
  Time for precision adjustment:      3.129s
  Time for transfer relation:         2.045s
  Time for merge operator:            0.139s
  Time for stop operator:             0.137s
  Time for adding to reached set:     0.155s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   31
Avg. length of target path (in blocks):                 889 (count: 31, min: 21, max: 38, avg: 28.68)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.441s
  Counterexample analysis:                             0.202s (Max:     0.017s, Calls: 31)
    Refinement sat check:                              0.084s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.044s
  Precision update:                                    0.014s
  ARG update:                                          0.161s

Length of refined path (in blocks):                     670 (count: 31, min: 15, max: 33, avg: 21.61)
Number of affected states:                              472 (count: 31, min: 2, max: 32, avg: 15.23)
Length (states) of path with itp 'true':                167 (count: 31, min: 0, max: 19, avg: 5.39)
Length (states) of path with itp non-trivial itp:       472 (count: 31, min: 2, max: 32, avg: 15.23)
Length (states) of path with itp 'false':                31 (count: 31, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 31, min: 0, max: 1, avg: 0.10)
Equal non-trivial interpolants along paths:             438 (count: 31, min: 1, max: 30, avg: 14.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 1948
Max. size of reached set after ref.:  419
Avg. size of reached set before ref.: 1297.26
Avg. size of reached set after ref.:  83.55

Total time for CEGAR algorithm:       6.561s
Time for refinements:                 0.525s
Average time for refinement:          0.016s
Max time for refinement:              0.053s

Code Coverage
-----------------------------
  Function coverage:      0.526
  Visited lines:          115
  Total lines:            439
  Line coverage:          0.262
  Visited conditions:     34
  Total conditions:       72
  Condition coverage:     0.472

CPAchecker general statistics
-----------------------------
Number of program locations:     632
Number of CFA edges:             681
Number of relevant variables:    113
Number of functions:             38
Number of loops:                 5
Size of reached set:             1186
  Number of reached locations:   156 (25%)
    Avg states per location:     7
    Max states per location:     43 (at node N556)
  Number of reached functions:   20 (53%)
  Number of partitions:          1182
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N128 (before lines 266-315), Function test called from node N532, stack depth 3 [1b5b656b], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.323s
  Time for loading CPAs:          0.598s
  Time for loading parser:        0.503s
  Time for CFA construction:      1.067s
    Time for parsing file(s):     0.343s
    Time for AST to CFA:          0.318s
    Time for CFA sanity check:    0.052s
    Time for post-processing:     0.228s
      Time for var class.:        0.092s
Time for Analysis:                6.561s
CPU time for analysis:            6.560s
Time for analyzing result:        0.001s
Total time for CPAchecker:        8.888s
Total CPU time for CPAchecker:    8.890s
Time for statistics:              0.094s

Time for Garbage Collector:       0.146s (in 18 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     39MB (    37 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8060MB (  7687 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
