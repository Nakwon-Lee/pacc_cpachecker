scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product24_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qpcu9fxn/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 171: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 226: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 641: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 687: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 702: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 725: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 823: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 921: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 953: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 478: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            10924 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10800 (99%)
  Because of loop head:            96 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         28 (0%)
  Times precision was empty:       3791 (35%)
  Times precision was {false}:     110 (1%)
  Times result was cached:         6689 (61%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      334 (3%)
  Times result was 'false':        536 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         4067
  BDD entailment checks:           2337
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          44
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         12679
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 28.56
Number of irrelevant predicates:          6855 (54%)
Number of preds handled by boolean abs:   564 (4%)
  Total number of models for allsat:      415
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.24

Time for post operator:                  0.984s
  Time for path formula creation:        0.928s
Time for strengthen operator:            0.089s
Time for prec operator:                  1.985s
  Time for abstraction:                  1.713s (Max:     0.014s, Count: 10924)
    Boolean abstraction:                 0.314s
    Solving time:                        0.173s (Max:     0.012s)
    Model enumeration time:              0.018s
    Time for BDD construction:           0.082s (Max:     0.010s)
Time for merge operator:                 0.059s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     0.191s

Number of path formula cache hits:   38811 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.768s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               239
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         748 (count: 8761, min: 0, max: 147, avg: 0.09)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.194s
Automaton transfers with branching:                0
Automaton transfer successors:                        42795 (count: 42795, min: 1, max: 1, avg: 1.00) [1 x 42795]

CPA algorithm statistics
------------------------
Number of iterations:            32502
Max size of waitlist:            143
Average size of waitlist:        52
Number of computed successors:   37231
Max successors for one state:    2
Number of times merged:          865
Number of times stopped:         2227
Number of times breaked:         28

Total time for CPA algorithm:         5.430s (Max:     0.611s)
  Time for choose from waitlist:      0.091s
  Time for precision adjustment:      2.469s
  Time for transfer relation:         1.980s
  Time for merge operator:            0.130s
  Time for stop operator:             0.177s
  Time for adding to reached set:     0.168s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   28
Avg. length of target path (in blocks):                 785 (count: 28, min: 21, max: 38, avg: 28.04)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.457s
  Counterexample analysis:                             0.180s (Max:     0.016s, Calls: 28)
    Refinement sat check:                              0.079s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.032s
  Precision update:                                    0.030s
  ARG update:                                          0.175s

Length of refined path (in blocks):                     614 (count: 28, min: 15, max: 33, avg: 21.93)
Number of affected states:                              433 (count: 28, min: 9, max: 32, avg: 15.46)
Length (states) of path with itp 'true':                153 (count: 28, min: 0, max: 19, avg: 5.46)
Length (states) of path with itp non-trivial itp:       433 (count: 28, min: 9, max: 32, avg: 15.46)
Length (states) of path with itp 'false':                28 (count: 28, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 28, min: 0, max: 1, avg: 0.07)
Equal non-trivial interpolants along paths:             403 (count: 28, min: 8, max: 30, avg: 14.39)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 1994
Max. size of reached set after ref.:  419
Avg. size of reached set before ref.: 1272.96
Avg. size of reached set after ref.:  82.14

Total time for CEGAR algorithm:       5.962s
Time for refinements:                 0.525s
Average time for refinement:          0.018s
Max time for refinement:              0.051s

Code Coverage
-----------------------------
  Function coverage:      0.526
  Visited lines:          115
  Total lines:            439
  Line coverage:          0.262
  Visited conditions:     34
  Total conditions:       72
  Condition coverage:     0.472

CPAchecker general statistics
-----------------------------
Number of program locations:     632
Number of CFA edges:             681
Number of relevant variables:    113
Number of functions:             38
Number of loops:                 5
Size of reached set:             1126
  Number of reached locations:   156 (25%)
    Avg states per location:     7
    Max states per location:     43 (at node N556)
  Number of reached functions:   20 (53%)
  Number of partitions:          1123
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N128 (before lines 266-315), Function test called from node N532, stack depth 3 [6c4ffcf0], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.174s
  Time for loading CPAs:          0.597s
  Time for loading parser:        0.485s
  Time for CFA construction:      1.003s
    Time for parsing file(s):     0.332s
    Time for AST to CFA:          0.281s
    Time for CFA sanity check:    0.057s
    Time for post-processing:     0.202s
      Time for var class.:        0.088s
Time for Analysis:                5.962s
CPU time for analysis:            5.970s
Time for analyzing result:        0.001s
Total time for CPAchecker:        8.139s
Total CPU time for CPAchecker:    8.140s
Time for statistics:              0.079s

Time for Garbage Collector:       0.134s (in 17 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     39MB (    37 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     30MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8058MB (  7685 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
