scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product24_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yzs87de_/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 171: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 226: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 641: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 687: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 702: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 725: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 823: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 921: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 953: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 478: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            15372 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15170 (99%)
  Because of loop head:            160 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         42 (0%)
  Times precision was empty:       4721 (31%)
  Times precision was {false}:     145 (1%)
  Times result was cached:         9988 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      518 (3%)
  Times result was 'false':        1262 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         4394
  BDD entailment checks:           2492
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          8
Number of abstraction locations:          44
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         18445
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 27.82
Number of irrelevant predicates:          9127 (49%)
Number of preds handled by boolean abs:   1099 (6%)
  Total number of models for allsat:      590
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.14

Time for post operator:                  1.149s
  Time for path formula creation:        1.093s
Time for strengthen operator:            0.071s
Time for prec operator:                  3.055s
  Time for abstraction:                  2.682s (Max:     0.015s, Count: 15372)
    Boolean abstraction:                 0.402s
    Solving time:                        0.229s (Max:     0.013s)
    Model enumeration time:              0.038s
    Time for BDD construction:           0.103s (Max:     0.010s)
Time for merge operator:                 0.041s
Time for coverage check:                 0.038s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     0.267s

Number of path formula cache hits:   55176 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.972s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               312
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1145 (count: 11226, min: 0, max: 212, avg: 0.10)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.301s
Automaton transfers with branching:                0
Automaton transfer successors:                        58150 (count: 58150, min: 1, max: 1, avg: 1.00) [1 x 58150]

CPA algorithm statistics
------------------------
Number of iterations:            44812
Max size of waitlist:            84
Average size of waitlist:        36
Number of computed successors:   50203
Max successors for one state:    2
Number of times merged:          951
Number of times stopped:         2464
Number of times breaked:         42

Total time for CPA algorithm:         7.263s (Max:     0.579s)
  Time for choose from waitlist:      0.088s
  Time for precision adjustment:      3.660s
  Time for transfer relation:         2.621s
  Time for merge operator:            0.138s
  Time for stop operator:             0.183s
  Time for adding to reached set:     0.159s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   42
Avg. length of target path (in blocks):                1318 (count: 42, min: 21, max: 51, avg: 31.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.579s
  Counterexample analysis:                             0.268s (Max:     0.017s, Calls: 42)
    Refinement sat check:                              0.140s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.036s
  Precision update:                                    0.047s
  ARG update:                                          0.193s

Length of refined path (in blocks):                     987 (count: 42, min: 15, max: 42, avg: 23.50)
Number of affected states:                              619 (count: 42, min: 2, max: 41, avg: 14.74)
Length (states) of path with itp 'true':                326 (count: 42, min: 0, max: 19, avg: 7.76)
Length (states) of path with itp non-trivial itp:       619 (count: 42, min: 2, max: 41, avg: 14.74)
Length (states) of path with itp 'false':                42 (count: 42, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 42, min: 0, max: 1, avg: 0.07)
Equal non-trivial interpolants along paths:             574 (count: 42, min: 1, max: 40, avg: 13.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                42
Number of successful refinements:     42
Number of failed refinements:         0
Max. size of reached set before ref.: 2620
Max. size of reached set after ref.:  1395
Avg. size of reached set before ref.: 1379.71
Avg. size of reached set after ref.:  305.29

Total time for CEGAR algorithm:       7.996s
Time for refinements:                 0.714s
Average time for refinement:          0.017s
Max time for refinement:              0.060s

Code Coverage
-----------------------------
  Function coverage:      0.526
  Visited lines:          115
  Total lines:            439
  Line coverage:          0.262
  Visited conditions:     34
  Total conditions:       72
  Condition coverage:     0.472

CPAchecker general statistics
-----------------------------
Number of program locations:     632
Number of CFA edges:             681
Number of relevant variables:    113
Number of functions:             38
Number of loops:                 5
Size of reached set:             1352
  Number of reached locations:   156 (25%)
    Avg states per location:     8
    Max states per location:     47 (at node N556)
  Number of reached functions:   20 (53%)
  Number of partitions:          1336
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N492 (before lines 740-754), Function cleanup called from node N158, stack depth 4 [26308d2a], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          2.169s
  Time for loading CPAs:          0.527s
  Time for loading parser:        0.500s
  Time for CFA construction:      1.027s
    Time for parsing file(s):     0.357s
    Time for AST to CFA:          0.244s
    Time for CFA sanity check:    0.060s
    Time for post-processing:     0.221s
      Time for var class.:        0.091s
Time for Analysis:                7.996s
CPU time for analysis:            8.000s
Time for analyzing result:        0.001s
Total time for CPAchecker:       10.168s
Total CPU time for CPAchecker:   10.170s
Time for statistics:              0.092s

Time for Garbage Collector:       0.168s (in 22 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     39MB (    37 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     31MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     33MB (    32 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8063MB (  7689 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
