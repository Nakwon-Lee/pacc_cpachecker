scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product24_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_w8ka3nbd/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 171: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 226: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 641: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 687: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 702: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 725: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 823: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 921: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 953: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 478: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            15191 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15003 (99%)
  Because of loop head:            148 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         40 (0%)
  Times precision was empty:       6633 (44%)
  Times precision was {false}:     142 (1%)
  Times result was cached:         7726 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      690 (5%)
  Times result was 'false':        1248 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         4788
  BDD entailment checks:           3006
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          8
Number of abstraction locations:          44
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         20810
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 25.01
Number of irrelevant predicates:          8429 (41%)
Number of preds handled by boolean abs:   1842 (9%)
  Total number of models for allsat:      729
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.06

Time for post operator:                  0.838s
  Time for path formula creation:        0.776s
Time for strengthen operator:            0.130s
Time for prec operator:                  2.997s
  Time for abstraction:                  2.666s (Max:     0.014s, Count: 15191)
    Boolean abstraction:                 0.503s
    Solving time:                        0.310s (Max:     0.012s)
    Model enumeration time:              0.049s
    Time for BDD construction:           0.086s (Max:     0.011s)
Time for merge operator:                 0.035s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     0.359s

Number of path formula cache hits:   57098 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.644s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               355
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1591 (count: 14676, min: 0, max: 340, avg: 0.11)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.290s
Automaton transfers with branching:                0
Automaton transfer successors:                        55821 (count: 55821, min: 1, max: 1, avg: 1.00) [1 x 55821]

CPA algorithm statistics
------------------------
Number of iterations:            44673
Max size of waitlist:            44
Average size of waitlist:        17
Number of computed successors:   49301
Max successors for one state:    2
Number of times merged:          891
Number of times stopped:         2984
Number of times breaked:         40

Total time for CPA algorithm:         6.855s (Max:     0.912s)
  Time for choose from waitlist:      0.110s
  Time for precision adjustment:      3.508s
  Time for transfer relation:         2.228s
  Time for merge operator:            0.108s
  Time for stop operator:             0.187s
  Time for adding to reached set:     0.239s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   40
Avg. length of target path (in blocks):                1346 (count: 40, min: 21, max: 69, avg: 33.65)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.544s
  Counterexample analysis:                             0.252s (Max:     0.023s, Calls: 40)
    Refinement sat check:                              0.102s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.061s
  Precision update:                                    0.047s
  ARG update:                                          0.155s

Length of refined path (in blocks):                     987 (count: 40, min: 15, max: 53, avg: 24.67)
Number of affected states:                              694 (count: 40, min: 2, max: 50, avg: 17.35)
Length (states) of path with itp 'true':                253 (count: 40, min: 0, max: 37, avg: 6.32)
Length (states) of path with itp non-trivial itp:       694 (count: 40, min: 2, max: 50, avg: 17.35)
Length (states) of path with itp 'false':                40 (count: 40, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 40, min: 0, max: 1, avg: 0.13)
Equal non-trivial interpolants along paths:             649 (count: 40, min: 1, max: 48, avg: 16.23)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                40
Number of successful refinements:     40
Number of failed refinements:         0
Max. size of reached set before ref.: 2362
Max. size of reached set after ref.:  624
Avg. size of reached set before ref.: 1251.25
Avg. size of reached set after ref.:  157.45

Total time for CEGAR algorithm:       7.543s
Time for refinements:                 0.669s
Average time for refinement:          0.016s
Max time for refinement:              0.066s

Code Coverage
-----------------------------
  Function coverage:      0.526
  Visited lines:          115
  Total lines:            439
  Line coverage:          0.262
  Visited conditions:     34
  Total conditions:       72
  Condition coverage:     0.472

CPAchecker general statistics
-----------------------------
Number of program locations:     632
Number of CFA edges:             681
Number of relevant variables:    113
Number of functions:             38
Number of loops:                 5
Size of reached set:             1318
  Number of reached locations:   156 (25%)
    Avg states per location:     8
    Max states per location:     41 (at node N0)
  Number of reached functions:   20 (53%)
  Number of partitions:          1278
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N145 (after line 288), Function test called from node N532, stack depth 3 [73b3dfe9], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.344s
  Time for loading CPAs:          0.604s
  Time for loading parser:        0.523s
  Time for CFA construction:      1.071s
    Time for parsing file(s):     0.324s
    Time for AST to CFA:          0.298s
    Time for CFA sanity check:    0.088s
    Time for post-processing:     0.254s
      Time for var class.:        0.119s
Time for Analysis:                7.543s
CPU time for analysis:            7.540s
Time for analyzing result:        0.001s
Total time for CPAchecker:        9.891s
Total CPU time for CPAchecker:    9.880s
Time for statistics:              0.066s

Time for Garbage Collector:       0.144s (in 21 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     39MB (    37 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     31MB (    29 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8000MB (  7629 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
