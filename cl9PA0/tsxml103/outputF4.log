scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_82_o2kv8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 466: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 512: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 764: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 965: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 303: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            36047 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  35582 (99%)
  Because of loop head:            379 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         86 (0%)
  Times precision was empty:       2976 (8%)
  Times precision was {false}:     634 (2%)
  Times result was cached:         21653 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10784 (30%)
  Times result was 'false':        4682 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         26953
  BDD entailment checks:           17243
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          27
Number of abstraction locations:          55
Max number of predicates per location:    14
Avg number of predicates per location:    8
Total predicates per abstraction:         238005
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 20.84
Number of irrelevant predicates:          66479 (28%)
Number of preds handled by boolean abs:   75199 (32%)
  Total number of models for allsat:      18431
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.71

Time for post operator:                  1.625s
  Time for path formula creation:        1.567s
Time for strengthen operator:            0.179s
Time for prec operator:                 22.852s
  Time for abstraction:                 22.361s (Max:     0.024s, Count: 36047)
    Boolean abstraction:                 8.043s
    Solving time:                        5.953s (Max:     0.014s)
    Model enumeration time:              0.774s
    Time for BDD construction:           0.425s (Max:     0.015s)
Time for merge operator:                 0.090s
Time for coverage check:                 0.040s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     6.727s

Number of path formula cache hits:   112498 (69%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.237s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               9376
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       32904 (count: 94402, min: 0, max: 1253, avg: 0.35)
Time for BDD node cleanup:                             0.020s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.400s
Automaton transfers with branching:                0
Automaton transfer successors:                       139861 (count: 139861, min: 1, max: 1, avg: 1.00) [1 x 139861]

CPA algorithm statistics
------------------------
Number of iterations:            108674
Max size of waitlist:            79
Average size of waitlist:        25
Number of computed successors:   121744
Max successors for one state:    2
Number of times merged:          4855
Number of times stopped:         7283
Number of times breaked:         86

Total time for CPA algorithm:        28.713s (Max:     2.395s)
  Time for choose from waitlist:      0.094s
  Time for precision adjustment:     23.776s
  Time for transfer relation:         3.475s
  Time for merge operator:            0.242s
  Time for stop operator:             0.273s
  Time for adding to reached set:     0.226s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   86
Avg. length of target path (in blocks):                6090 (count: 86, min: 25, max: 149, avg: 70.81)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.639s
  Counterexample analysis:                             1.141s (Max:     0.063s, Calls: 86)
    Refinement sat check:                              0.422s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.070s
  Precision update:                                    0.073s
  ARG update:                                          0.277s

Length of refined path (in blocks):                    5089 (count: 86, min: 14, max: 133, avg: 59.17)
Number of affected states:                             2323 (count: 86, min: 1, max: 81, avg: 27.01)
Length (states) of path with itp 'true':               2680 (count: 86, min: 0, max: 88, avg: 31.16)
Length (states) of path with itp non-trivial itp:      2323 (count: 86, min: 1, max: 81, avg: 27.01)
Length (states) of path with itp 'false':                86 (count: 86, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          90 (count: 86, min: 0, max: 5, avg: 1.05)
Equal non-trivial interpolants along paths:            2147 (count: 86, min: 0, max: 77, avg: 24.97)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                86
Number of successful refinements:     86
Number of failed refinements:         0
Max. size of reached set before ref.: 5974
Max. size of reached set after ref.:  4517
Avg. size of reached set before ref.: 2248.12
Avg. size of reached set after ref.:  1044.87

Total time for CEGAR algorithm:      30.643s
Time for refinements:                 1.850s
Average time for refinement:          0.021s
Max time for refinement:              0.086s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          134
  Total lines:            439
  Line coverage:          0.305
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     632
Number of CFA edges:             683
Number of relevant variables:    116
Number of functions:             38
Number of loops:                 5
Size of reached set:             6301
  Number of reached locations:   183 (29%)
    Avg states per location:     34
    Max states per location:     157 (at node N379)
  Number of reached functions:   26 (68%)
  Number of partitions:          6186
    Avg size of partitions:      1
    Max size of partitions:      29 (with key [N539 (after line 801), Function test called from node N624, stack depth 3 [60786ef8], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.228s
  Time for loading CPAs:          0.611s
  Time for loading parser:        0.539s
  Time for CFA construction:      0.978s
    Time for parsing file(s):     0.349s
    Time for AST to CFA:          0.218s
    Time for CFA sanity check:    0.055s
    Time for post-processing:     0.213s
      Time for var class.:        0.080s
Time for Analysis:               30.644s
CPU time for analysis:           30.640s
Time for analyzing result:        0.006s
Total time for CPAchecker:       32.875s
Total CPU time for CPAchecker:   32.870s
Time for statistics:              0.160s

Time for Garbage Collector:       0.747s (in 100 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 84MB (    80 MiB) max;     49MB (    47 MiB) avg;     89MB (    85 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     34MB (    32 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8153MB (  7775 MiB) max;   8095MB (  7720 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
