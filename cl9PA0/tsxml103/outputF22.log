scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_feiz54n3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 466: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 512: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 764: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 965: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 303: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            22676 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  22380 (99%)
  Because of loop head:            206 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         90 (0%)
  Times precision was empty:       536 (2%)
  Times precision was {false}:     455 (2%)
  Times result was cached:         14349 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7336 (32%)
  Times result was 'false':        3575 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         21669
  BDD entailment checks:           15209
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          28
Number of abstraction locations:          55
Max number of predicates per location:    15
Avg number of predicates per location:    8
Total predicates per abstraction:         170364
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 21.87
Number of irrelevant predicates:          32972 (19%)
Number of preds handled by boolean abs:   51921 (30%)
  Total number of models for allsat:      10361
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.41

Time for post operator:                  1.180s
  Time for path formula creation:        1.107s
Time for strengthen operator:            0.100s
Time for prec operator:                 17.315s
  Time for abstraction:                 16.900s (Max:     0.025s, Count: 22676)
    Boolean abstraction:                 5.654s
    Solving time:                        4.071s (Max:     0.014s)
    Model enumeration time:              0.507s
    Time for BDD construction:           0.326s (Max:     0.022s)
Time for merge operator:                 0.103s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     4.578s

Number of path formula cache hits:   73692 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.914s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               8279
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       24957 (count: 67181, min: 0, max: 1121, avg: 0.37)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.263s
Automaton transfers with branching:                0
Automaton transfer successors:                        88830 (count: 88830, min: 1, max: 1, avg: 1.00) [1 x 88830]

CPA algorithm statistics
------------------------
Number of iterations:            69160
Max size of waitlist:            16
Average size of waitlist:        5
Number of computed successors:   77818
Max successors for one state:    2
Number of times merged:          3230
Number of times stopped:         4648
Number of times breaked:         90

Total time for CPA algorithm:        21.554s (Max:     1.980s)
  Time for choose from waitlist:      0.109s
  Time for precision adjustment:     17.868s
  Time for transfer relation:         2.583s
  Time for merge operator:            0.219s
  Time for stop operator:             0.178s
  Time for adding to reached set:     0.135s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   90
Avg. length of target path (in blocks):                6634 (count: 90, min: 26, max: 149, avg: 73.71)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.812s
  Counterexample analysis:                             1.359s (Max:     0.064s, Calls: 90)
    Refinement sat check:                              0.485s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.071s
  Precision update:                                    0.125s
  ARG update:                                          0.159s

Length of refined path (in blocks):                    5185 (count: 90, min: 14, max: 129, avg: 57.61)
Number of affected states:                             2675 (count: 90, min: 1, max: 102, avg: 29.72)
Length (states) of path with itp 'true':               2420 (count: 90, min: 0, max: 78, avg: 26.89)
Length (states) of path with itp non-trivial itp:      2675 (count: 90, min: 1, max: 102, avg: 29.72)
Length (states) of path with itp 'false':                90 (count: 90, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         104 (count: 90, min: 0, max: 5, avg: 1.16)
Equal non-trivial interpolants along paths:            2481 (count: 90, min: 0, max: 99, avg: 27.57)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                90
Number of successful refinements:     90
Number of failed refinements:         0
Max. size of reached set before ref.: 7150
Max. size of reached set after ref.:  4933
Avg. size of reached set before ref.: 1472.77
Avg. size of reached set after ref.:  754.37

Total time for CEGAR algorithm:      23.612s
Time for refinements:                 1.995s
Average time for refinement:          0.022s
Max time for refinement:              0.077s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          134
  Total lines:            439
  Line coverage:          0.305
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     632
Number of CFA edges:             683
Number of relevant variables:    116
Number of functions:             38
Number of loops:                 5
Size of reached set:             4940
  Number of reached locations:   183 (29%)
    Avg states per location:     26
    Max states per location:     127 (at node N379)
  Number of reached functions:   26 (68%)
  Number of partitions:          4846
    Avg size of partitions:      1
    Max size of partitions:      22 (with key [N539 (after line 801), Function test called from node N624, stack depth 3 [5df89e37], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.264s
  Time for loading CPAs:          0.549s
  Time for loading parser:        0.548s
  Time for CFA construction:      1.032s
    Time for parsing file(s):     0.346s
    Time for AST to CFA:          0.284s
    Time for CFA sanity check:    0.076s
    Time for post-processing:     0.216s
      Time for var class.:        0.091s
Time for Analysis:               23.612s
CPU time for analysis:           23.610s
Time for analyzing result:        0.004s
Total time for CPAchecker:       25.880s
Total CPU time for CPAchecker:   25.860s
Time for statistics:              0.143s

Time for Garbage Collector:       0.540s (in 73 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    69 MiB) max;     45MB (    43 MiB) avg;     80MB (    77 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8154MB (  7776 MiB) max;   8083MB (  7709 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
