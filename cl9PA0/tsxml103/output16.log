scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6q1pjxif/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 466: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 512: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 764: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 965: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 303: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            20374 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20138 (99%)
  Because of loop head:            158 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         78 (0%)
  Times precision was empty:       767 (4%)
  Times precision was {false}:     559 (3%)
  Times result was cached:         11276 (55%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7772 (38%)
  Times result was 'false':        3176 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         14667
  BDD entailment checks:           8665
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          28
Number of abstraction locations:          55
Max number of predicates per location:    14
Avg number of predicates per location:    8
Total predicates per abstraction:         141936
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 17.04
Number of irrelevant predicates:          32263 (23%)
Number of preds handled by boolean abs:   54775 (39%)
  Total number of models for allsat:      12546
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.61

Time for post operator:                  1.414s
  Time for path formula creation:        1.327s
Time for strengthen operator:            0.116s
Time for prec operator:                 18.216s
  Time for abstraction:                 17.877s (Max:     0.021s, Count: 20374)
    Boolean abstraction:                 6.422s
    Solving time:                        4.816s (Max:     0.014s)
    Model enumeration time:              0.602s
    Time for BDD construction:           0.325s (Max:     0.012s)
Time for merge operator:                 0.067s
Time for coverage check:                 0.037s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):     5.418s

Number of path formula cache hits:   59339 (64%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.171s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               8551
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       27159 (count: 64770, min: 0, max: 1383, avg: 0.42)
Time for BDD node cleanup:                             0.038s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.278s
Automaton transfers with branching:                0
Automaton transfer successors:                        80840 (count: 80840, min: 1, max: 1, avg: 1.00) [1 x 80840]

CPA algorithm statistics
------------------------
Number of iterations:            62113
Max size of waitlist:            32
Average size of waitlist:        9
Number of computed successors:   70000
Max successors for one state:    2
Number of times merged:          3001
Number of times stopped:         4038
Number of times breaked:         78

Total time for CPA algorithm:        22.716s (Max:     2.630s)
  Time for choose from waitlist:      0.113s
  Time for precision adjustment:     18.788s
  Time for transfer relation:         2.791s
  Time for merge operator:            0.189s
  Time for stop operator:             0.135s
  Time for adding to reached set:     0.174s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   78
Avg. length of target path (in blocks):                5761 (count: 78, min: 25, max: 145, avg: 73.86)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.545s
  Counterexample analysis:                             1.180s (Max:     0.072s, Calls: 78)
    Refinement sat check:                              0.429s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.062s
  Precision update:                                    0.086s
  ARG update:                                          0.142s

Length of refined path (in blocks):                    4802 (count: 78, min: 14, max: 129, avg: 61.56)
Number of affected states:                             2406 (count: 78, min: 1, max: 81, avg: 30.85)
Length (states) of path with itp 'true':               2318 (count: 78, min: 0, max: 86, avg: 29.72)
Length (states) of path with itp non-trivial itp:      2406 (count: 78, min: 1, max: 81, avg: 30.85)
Length (states) of path with itp 'false':                78 (count: 78, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          94 (count: 78, min: 0, max: 5, avg: 1.21)
Equal non-trivial interpolants along paths:            2234 (count: 78, min: 0, max: 78, avg: 28.64)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                78
Number of successful refinements:     78
Number of failed refinements:         0
Max. size of reached set before ref.: 4284
Max. size of reached set after ref.:  2501
Avg. size of reached set before ref.: 1422.88
Avg. size of reached set after ref.:  703.92

Total time for CEGAR algorithm:      24.441s
Time for refinements:                 1.688s
Average time for refinement:          0.021s
Max time for refinement:              0.081s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          134
  Total lines:            439
  Line coverage:          0.305
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     632
Number of CFA edges:             683
Number of relevant variables:    116
Number of functions:             38
Number of loops:                 5
Size of reached set:             6708
  Number of reached locations:   183 (29%)
    Avg states per location:     36
    Max states per location:     181 (at node N379)
  Number of reached functions:   26 (68%)
  Number of partitions:          6574
    Avg size of partitions:      1
    Max size of partitions:      27 (with key [N539 (after line 801), Function test called from node N624, stack depth 3 [52cd65a], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.095s
  Time for loading CPAs:          0.531s
  Time for loading parser:        0.469s
  Time for CFA construction:      0.973s
    Time for parsing file(s):     0.324s
    Time for AST to CFA:          0.260s
    Time for CFA sanity check:    0.061s
    Time for post-processing:     0.221s
      Time for var class.:        0.092s
Time for Analysis:               24.441s
CPU time for analysis:           24.430s
Time for analyzing result:        0.005s
Total time for CPAchecker:       26.539s
Total CPU time for CPAchecker:   26.530s
Time for statistics:              0.159s

Time for Garbage Collector:       0.497s (in 63 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    71 MiB) max;     45MB (    43 MiB) avg;     78MB (    74 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8152MB (  7775 MiB) max;   8084MB (  7710 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
