scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_k3l80v68/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 466: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 512: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 764: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 965: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 303: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            11993 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11762 (98%)
  Because of loop head:            190 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         41 (0%)
  Times precision was empty:       455 (4%)
  Times precision was {false}:     302 (3%)
  Times result was cached:         5306 (44%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5930 (49%)
  Times result was 'false':        2088 (17%)
Number of strengthen sat checks:   0
Number of coverage checks:         6881
  BDD entailment checks:           3799
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          29
Number of abstraction locations:          55
Max number of predicates per location:    15
Avg number of predicates per location:    8
Total predicates per abstraction:         88816
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 14.25
Number of irrelevant predicates:          10665 (12%)
Number of preds handled by boolean abs:   44586 (50%)
  Total number of models for allsat:      7403
  Max number of models for allsat:        5
  Avg number of models for allsat:        1.25

Time for post operator:                  1.136s
  Time for path formula creation:        1.094s
Time for strengthen operator:            0.067s
Time for prec operator:                 13.959s
  Time for abstraction:                 13.718s (Max:     0.019s, Count: 11993)
    Boolean abstraction:                 5.287s
    Solving time:                        4.015s (Max:     0.017s)
    Model enumeration time:              0.417s
    Time for BDD construction:           0.265s (Max:     0.012s)
Time for merge operator:                 0.074s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):     4.432s

Number of path formula cache hits:   30248 (58%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.022s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               12180
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       32689 (count: 50479, min: 0, max: 2052, avg: 0.65)
Time for BDD node cleanup:                             0.032s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.232s
Automaton transfers with branching:                0
Automaton transfer successors:                        45905 (count: 45905, min: 1, max: 1, avg: 1.00) [1 x 45905]

CPA algorithm statistics
------------------------
Number of iterations:            35829
Max size of waitlist:            39
Average size of waitlist:        12
Number of computed successors:   40378
Max successors for one state:    2
Number of times merged:          1541
Number of times stopped:         1961
Number of times breaked:         41

Total time for CPA algorithm:        17.254s (Max:     1.511s)
  Time for choose from waitlist:      0.051s
  Time for precision adjustment:     14.290s
  Time for transfer relation:         2.143s
  Time for merge operator:            0.208s
  Time for stop operator:             0.149s
  Time for adding to reached set:     0.111s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   41
Avg. length of target path (in blocks):                5433 (count: 41, min: 25, max: 278, avg: 132.51)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.502s
  Counterexample analysis:                             2.161s (Max:     0.283s, Calls: 41)
    Refinement sat check:                              0.456s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.047s
  Precision update:                                    0.065s
  ARG update:                                          0.144s

Length of refined path (in blocks):                    4062 (count: 41, min: 19, max: 262, avg: 99.07)
Number of affected states:                             2654 (count: 41, min: 3, max: 200, avg: 64.73)
Length (states) of path with itp 'true':               1367 (count: 41, min: 0, max: 99, avg: 33.34)
Length (states) of path with itp non-trivial itp:      2654 (count: 41, min: 3, max: 200, avg: 64.73)
Length (states) of path with itp 'false':                41 (count: 41, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          89 (count: 41, min: 0, max: 13, avg: 2.17)
Equal non-trivial interpolants along paths:            2524 (count: 41, min: 2, max: 186, avg: 61.56)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                41
Number of successful refinements:     41
Number of failed refinements:         0
Max. size of reached set before ref.: 3557
Max. size of reached set after ref.:  2169
Avg. size of reached set before ref.: 1237.44
Avg. size of reached set after ref.:  425.39

Total time for CEGAR algorithm:      19.997s
Time for refinements:                 2.718s
Average time for refinement:          0.066s
Max time for refinement:              0.299s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          134
  Total lines:            439
  Line coverage:          0.305
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     632
Number of CFA edges:             683
Number of relevant variables:    116
Number of functions:             38
Number of loops:                 5
Size of reached set:             3036
  Number of reached locations:   183 (29%)
    Avg states per location:     16
    Max states per location:     68 (at node N405)
  Number of reached functions:   26 (68%)
  Number of partitions:          2990
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N539 (after line 801), Function test called from node N624, stack depth 3 [4d3b2117], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.173s
  Time for loading CPAs:          0.568s
  Time for loading parser:        0.490s
  Time for CFA construction:      1.011s
    Time for parsing file(s):     0.402s
    Time for AST to CFA:          0.205s
    Time for CFA sanity check:    0.047s
    Time for post-processing:     0.205s
      Time for var class.:        0.085s
Time for Analysis:               19.997s
CPU time for analysis:           19.990s
Time for analyzing result:        0.003s
Total time for CPAchecker:       22.173s
Total CPU time for CPAchecker:   22.150s
Time for statistics:              0.106s

Time for Garbage Collector:       0.355s (in 42 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     44MB (    42 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8153MB (  7776 MiB) max;   8076MB (  7702 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
