scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5uw_plu6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 466: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 512: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 764: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 965: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 303: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            27521 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  27027 (98%)
  Because of loop head:            380 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         114 (0%)
  Times precision was empty:       3021 (11%)
  Times precision was {false}:     451 (2%)
  Times result was cached:         16298 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7751 (28%)
  Times result was 'false':        3473 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         18331
  BDD entailment checks:           11309
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          27
Number of abstraction locations:          55
Max number of predicates per location:    14
Avg number of predicates per location:    8
Total predicates per abstraction:         169594
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 20.68
Number of irrelevant predicates:          41179 (24%)
Number of preds handled by boolean abs:   53382 (31%)
  Total number of models for allsat:      11940
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.54

Time for post operator:                  1.443s
  Time for path formula creation:        1.366s
Time for strengthen operator:            0.101s
Time for prec operator:                 18.098s
  Time for abstraction:                 17.653s (Max:     0.026s, Count: 27521)
    Boolean abstraction:                 6.104s
    Solving time:                        4.480s (Max:     0.013s)
    Model enumeration time:              0.541s
    Time for BDD construction:           0.340s (Max:     0.016s)
Time for merge operator:                 0.102s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.032s
Total time for SMT solver (w/o itp):     5.021s

Number of path formula cache hits:   90484 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.139s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               7265
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       25869 (count: 68586, min: 0, max: 1286, avg: 0.38)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.386s
Automaton transfers with branching:                0
Automaton transfer successors:                       105057 (count: 105057, min: 1, max: 1, avg: 1.00) [1 x 105057]

CPA algorithm statistics
------------------------
Number of iterations:            82644
Max size of waitlist:            22
Average size of waitlist:        9
Number of computed successors:   92093
Max successors for one state:    2
Number of times merged:          3511
Number of times stopped:         5453
Number of times breaked:         114

Total time for CPA algorithm:        23.208s (Max:     2.701s)
  Time for choose from waitlist:      0.084s
  Time for precision adjustment:     18.840s
  Time for transfer relation:         3.142s
  Time for merge operator:            0.220s
  Time for stop operator:             0.224s
  Time for adding to reached set:     0.189s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   114
Avg. length of target path (in blocks):                8423 (count: 114, min: 25, max: 145, avg: 73.89)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.980s
  Counterexample analysis:                             1.459s (Max:     0.050s, Calls: 114)
    Refinement sat check:                              0.544s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.063s
  Precision update:                                    0.090s
  ARG update:                                          0.271s

Length of refined path (in blocks):                    6854 (count: 114, min: 14, max: 121, avg: 60.12)
Number of affected states:                             2755 (count: 114, min: 1, max: 81, avg: 24.17)
Length (states) of path with itp 'true':               3985 (count: 114, min: 0, max: 88, avg: 34.96)
Length (states) of path with itp non-trivial itp:      2755 (count: 114, min: 1, max: 81, avg: 24.17)
Length (states) of path with itp 'false':               114 (count: 114, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         103 (count: 114, min: 0, max: 5, avg: 0.90)
Equal non-trivial interpolants along paths:            2538 (count: 114, min: 0, max: 77, avg: 22.26)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                114
Number of successful refinements:     114
Number of failed refinements:         0
Max. size of reached set before ref.: 4778
Max. size of reached set after ref.:  2268
Avg. size of reached set before ref.: 1377.05
Avg. size of reached set after ref.:  702.25

Total time for CEGAR algorithm:      25.478s
Time for refinements:                 2.206s
Average time for refinement:          0.019s
Max time for refinement:              0.063s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          134
  Total lines:            439
  Line coverage:          0.305
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     632
Number of CFA edges:             683
Number of relevant variables:    116
Number of functions:             38
Number of loops:                 5
Size of reached set:             6240
  Number of reached locations:   183 (29%)
    Avg states per location:     34
    Max states per location:     155 (at node N379)
  Number of reached functions:   26 (68%)
  Number of partitions:          6126
    Avg size of partitions:      1
    Max size of partitions:      28 (with key [N539 (after line 801), Function test called from node N624, stack depth 3 [3d89d3d9], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.144s
  Time for loading CPAs:          0.589s
  Time for loading parser:        0.466s
  Time for CFA construction:      0.964s
    Time for parsing file(s):     0.360s
    Time for AST to CFA:          0.204s
    Time for CFA sanity check:    0.049s
    Time for post-processing:     0.208s
      Time for var class.:        0.082s
Time for Analysis:               25.478s
CPU time for analysis:           25.470s
Time for analyzing result:        0.005s
Total time for CPAchecker:       27.625s
Total CPU time for CPAchecker:   27.620s
Time for statistics:              0.139s

Time for Garbage Collector:       0.587s (in 74 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    70 MiB) max;     45MB (    43 MiB) avg;     77MB (    73 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     34MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8154MB (  7776 MiB) max;   8082MB (  7708 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
