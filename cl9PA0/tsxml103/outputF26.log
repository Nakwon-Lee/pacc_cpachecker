scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_mlthsqrk/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 466: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 512: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 764: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 965: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 303: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            14664 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14463 (99%)
  Because of loop head:            152 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         49 (0%)
  Times precision was empty:       543 (4%)
  Times precision was {false}:     352 (2%)
  Times result was cached:         8522 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5247 (36%)
  Times result was 'false':        2294 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         14533
  BDD entailment checks:           10131
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          27
Number of abstraction locations:          58
Max number of predicates per location:    15
Avg number of predicates per location:    8
Total predicates per abstraction:         105133
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 18.78
Number of irrelevant predicates:          19575 (19%)
Number of preds handled by boolean abs:   36203 (34%)
  Total number of models for allsat:      6624
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.26

Time for post operator:                  1.157s
  Time for path formula creation:        1.121s
Time for strengthen operator:            0.080s
Time for prec operator:                 13.463s
  Time for abstraction:                 13.177s (Max:     0.030s, Count: 14664)
    Boolean abstraction:                 4.513s
    Solving time:                        3.292s (Max:     0.013s)
    Model enumeration time:              0.485s
    Time for BDD construction:           0.227s (Max:     0.012s)
Time for merge operator:                 0.091s
Time for coverage check:                 0.039s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     3.777s

Number of path formula cache hits:   43445 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.015s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               7117
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       21112 (count: 48841, min: 0, max: 1692, avg: 0.43)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.187s
Automaton transfers with branching:                0
Automaton transfer successors:                        58062 (count: 58062, min: 1, max: 1, avg: 1.00) [1 x 58062]

CPA algorithm statistics
------------------------
Number of iterations:            44981
Max size of waitlist:            21
Average size of waitlist:        7
Number of computed successors:   50642
Max successors for one state:    2
Number of times merged:          2201
Number of times stopped:         2984
Number of times breaked:         49

Total time for CPA algorithm:        17.144s (Max:     2.919s)
  Time for choose from waitlist:      0.054s
  Time for precision adjustment:     13.968s
  Time for transfer relation:         2.285s
  Time for merge operator:            0.202s
  Time for stop operator:             0.158s
  Time for adding to reached set:     0.120s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   49
Avg. length of target path (in blocks):                3620 (count: 49, min: 26, max: 149, avg: 73.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.260s
  Counterexample analysis:                             0.953s (Max:     0.077s, Calls: 49)
    Refinement sat check:                              0.328s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.052s
  Precision update:                                    0.055s
  ARG update:                                          0.141s

Length of refined path (in blocks):                    2620 (count: 49, min: 14, max: 133, avg: 53.47)
Number of affected states:                             1756 (count: 49, min: 1, max: 83, avg: 35.84)
Length (states) of path with itp 'true':                815 (count: 49, min: 0, max: 65, avg: 16.63)
Length (states) of path with itp non-trivial itp:      1756 (count: 49, min: 1, max: 83, avg: 35.84)
Length (states) of path with itp 'false':                49 (count: 49, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          55 (count: 49, min: 0, max: 5, avg: 1.12)
Equal non-trivial interpolants along paths:            1652 (count: 49, min: 0, max: 79, avg: 33.71)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                49
Number of successful refinements:     49
Number of failed refinements:         0
Max. size of reached set before ref.: 6907
Max. size of reached set after ref.:  4899
Avg. size of reached set before ref.: 1300.10
Avg. size of reached set after ref.:  476.80

Total time for CEGAR algorithm:      18.581s
Time for refinements:                 1.404s
Average time for refinement:          0.028s
Max time for refinement:              0.094s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          134
  Total lines:            439
  Line coverage:          0.305
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     632
Number of CFA edges:             683
Number of relevant variables:    116
Number of functions:             38
Number of loops:                 5
Size of reached set:             5023
  Number of reached locations:   183 (29%)
    Avg states per location:     27
    Max states per location:     141 (at node N379)
  Number of reached functions:   26 (68%)
  Number of partitions:          4917
    Avg size of partitions:      1
    Max size of partitions:      18 (with key [N539 (after line 801), Function test called from node N624, stack depth 3 [4bb0cae5], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.313s
  Time for loading CPAs:          0.557s
  Time for loading parser:        0.564s
  Time for CFA construction:      1.020s
    Time for parsing file(s):     0.348s
    Time for AST to CFA:          0.265s
    Time for CFA sanity check:    0.051s
    Time for post-processing:     0.217s
      Time for var class.:        0.087s
Time for Analysis:               18.581s
CPU time for analysis:           18.580s
Time for analyzing result:        0.003s
Total time for CPAchecker:       20.898s
Total CPU time for CPAchecker:   20.890s
Time for statistics:              0.114s

Time for Garbage Collector:       0.388s (in 48 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     43MB (    41 MiB) avg;     75MB (    71 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
