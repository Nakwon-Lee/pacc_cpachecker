scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__bvc5g5i/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 127: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 159: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 173: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 275: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 408: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 417: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 472: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 549: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            13210 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12909 (98%)
  Because of loop head:            235 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         66 (0%)
  Times precision was empty:       1015 (8%)
  Times precision was {false}:     109 (1%)
  Times result was cached:         10352 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1734 (13%)
  Times result was 'false':        2468 (19%)
Number of strengthen sat checks:   0
Number of coverage checks:         6758
  BDD entailment checks:           3082
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          15
Number of abstraction locations:          54
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         47028
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 25.52
Number of irrelevant predicates:          14199 (30%)
Number of preds handled by boolean abs:   5252 (11%)
  Total number of models for allsat:      1790
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.03

Time for post operator:                  1.191s
  Time for path formula creation:        1.125s
Time for strengthen operator:            0.082s
Time for prec operator:                  6.015s
  Time for abstraction:                  5.680s (Max:     0.018s, Count: 13210)
    Boolean abstraction:                 1.544s
    Solving time:                        1.109s (Max:     0.013s)
    Model enumeration time:              0.073s
    Time for BDD construction:           0.154s (Max:     0.010s)
Time for merge operator:                 0.076s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     1.182s

Number of path formula cache hits:   44802 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.026s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               699
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4260 (count: 16242, min: 0, max: 417, avg: 0.26)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.295s
Automaton transfers with branching:                0
Automaton transfer successors:                        52908 (count: 52908, min: 1, max: 1, avg: 1.00) [1 x 52908]

CPA algorithm statistics
------------------------
Number of iterations:            40542
Max size of waitlist:            75
Average size of waitlist:        16
Number of computed successors:   46538
Max successors for one state:    2
Number of times merged:          1838
Number of times stopped:         2403
Number of times breaked:         66

Total time for CPA algorithm:         9.854s (Max:     0.995s)
  Time for choose from waitlist:      0.094s
  Time for precision adjustment:      6.515s
  Time for transfer relation:         2.422s
  Time for merge operator:            0.193s
  Time for stop operator:             0.197s
  Time for adding to reached set:     0.125s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   66
Avg. length of target path (in blocks):                3045 (count: 66, min: 21, max: 97, avg: 46.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.167s
  Counterexample analysis:                             0.765s (Max:     0.028s, Calls: 66)
    Refinement sat check:                              0.296s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.064s
  Precision update:                                    0.087s
  ARG update:                                          0.152s

Length of refined path (in blocks):                    2378 (count: 66, min: 13, max: 67, avg: 36.03)
Number of affected states:                             1556 (count: 66, min: 9, max: 66, avg: 23.58)
Length (states) of path with itp 'true':                756 (count: 66, min: 0, max: 51, avg: 11.45)
Length (states) of path with itp non-trivial itp:      1556 (count: 66, min: 9, max: 66, avg: 23.58)
Length (states) of path with itp 'false':                66 (count: 66, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          86 (count: 66, min: 0, max: 3, avg: 1.30)
Equal non-trivial interpolants along paths:            1404 (count: 66, min: 7, max: 64, avg: 21.27)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                66
Number of successful refinements:     66
Number of failed refinements:         0
Max. size of reached set before ref.: 2486
Max. size of reached set after ref.:  1843
Avg. size of reached set before ref.: 942.48
Avg. size of reached set after ref.:  392.23

Total time for CEGAR algorithm:      11.214s
Time for refinements:                 1.327s
Average time for refinement:          0.020s
Max time for refinement:              0.048s

Code Coverage
-----------------------------
  Function coverage:      0.694
  Visited lines:          145
  Total lines:            434
  Line coverage:          0.334
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     620
Number of CFA edges:             671
Number of relevant variables:    116
Number of functions:             36
Number of loops:                 5
Size of reached set:             5351
  Number of reached locations:   195 (31%)
    Avg states per location:     27
    Max states per location:     165 (at node N0)
  Number of reached functions:   25 (69%)
  Number of partitions:          5135
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N289 (after line 508), Function test called from node N129, stack depth 3 [39dc0721], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.216s
  Time for loading CPAs:          0.526s
  Time for loading parser:        0.515s
  Time for CFA construction:      1.013s
    Time for parsing file(s):     0.353s
    Time for AST to CFA:          0.247s
    Time for CFA sanity check:    0.059s
    Time for post-processing:     0.212s
      Time for var class.:        0.082s
Time for Analysis:               11.215s
CPU time for analysis:           11.210s
Time for analyzing result:        0.003s
Total time for CPAchecker:       13.434s
Total CPU time for CPAchecker:   13.430s
Time for statistics:              0.131s

Time for Garbage Collector:       0.228s (in 28 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     40MB (    38 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    31 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8004MB (  7634 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
