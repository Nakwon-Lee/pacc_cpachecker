scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2pe5b14p/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 127: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 159: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 173: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 275: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 408: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 417: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 472: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 549: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            6333 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6172 (97%)
  Because of loop head:            127 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         34 (1%)
  Times precision was empty:       494 (8%)
  Times precision was {false}:     76 (1%)
  Times result was cached:         3972 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1791 (28%)
  Times result was 'false':        849 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         3245
  BDD entailment checks:           2077
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          16
Number of abstraction locations:          51
Max number of predicates per location:    7
Avg number of predicates per location:    5
Total predicates per abstraction:         25084
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 13.44
Number of irrelevant predicates:          7221 (29%)
Number of preds handled by boolean abs:   5817 (23%)
  Total number of models for allsat:      1806
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.01

Time for post operator:                  0.804s
  Time for path formula creation:        0.778s
Time for strengthen operator:            0.044s
Time for prec operator:                  5.189s
  Time for abstraction:                  5.038s (Max:     0.017s, Count: 6333)
    Boolean abstraction:                 1.574s
    Solving time:                        1.150s (Max:     0.013s)
    Model enumeration time:              0.151s
    Time for BDD construction:           0.110s (Max:     0.012s)
Time for merge operator:                 0.068s
Time for coverage check:                 0.039s
  Time for BDD entailment checks:        0.038s
Total time for SMT solver (w/o itp):     1.301s

Number of path formula cache hits:   16627 (60%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.701s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               824
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4715 (count: 14398, min: 0, max: 541, avg: 0.33)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.179s
Automaton transfers with branching:                0
Automaton transfer successors:                        24158 (count: 24158, min: 1, max: 1, avg: 1.00) [1 x 24158]

CPA algorithm statistics
------------------------
Number of iterations:            18539
Max size of waitlist:            28
Average size of waitlist:        12
Number of computed successors:   20828
Max successors for one state:    2
Number of times merged:          584
Number of times stopped:         960
Number of times breaked:         34

Total time for CPA algorithm:         7.731s (Max:     0.546s)
  Time for choose from waitlist:      0.070s
  Time for precision adjustment:      5.521s
  Time for transfer relation:         1.512s
  Time for merge operator:            0.132s
  Time for stop operator:             0.155s
  Time for adding to reached set:     0.090s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   34
Avg. length of target path (in blocks):                2925 (count: 34, min: 21, max: 155, avg: 86.03)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.794s
  Counterexample analysis:                             0.584s (Max:     0.047s, Calls: 34)
    Refinement sat check:                              0.229s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.048s
  Precision update:                                    0.048s
  ARG update:                                          0.079s

Length of refined path (in blocks):                    2019 (count: 34, min: 13, max: 138, avg: 59.38)
Number of affected states:                             1235 (count: 34, min: 3, max: 94, avg: 36.32)
Length (states) of path with itp 'true':                750 (count: 34, min: 0, max: 89, avg: 22.06)
Length (states) of path with itp non-trivial itp:      1235 (count: 34, min: 3, max: 94, avg: 36.32)
Length (states) of path with itp 'false':                34 (count: 34, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          15 (count: 34, min: 0, max: 2, avg: 0.44)
Equal non-trivial interpolants along paths:            1186 (count: 34, min: 2, max: 91, avg: 34.88)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                34
Number of successful refinements:     34
Number of failed refinements:         0
Max. size of reached set before ref.: 1474
Max. size of reached set after ref.:  578
Avg. size of reached set before ref.: 656.35
Avg. size of reached set after ref.:  138.88

Total time for CEGAR algorithm:       8.642s
Time for refinements:                 0.899s
Average time for refinement:          0.026s
Max time for refinement:              0.051s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          129
  Total lines:            434
  Line coverage:          0.297
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     620
Number of CFA edges:             671
Number of relevant variables:    116
Number of functions:             36
Number of loops:                 5
Size of reached set:             1426
  Number of reached locations:   174 (28%)
    Avg states per location:     8
    Max states per location:     40 (at node N0)
  Number of reached functions:   24 (67%)
  Number of partitions:          1379
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N272 (before lines 486-531), Function test called from node N129, stack depth 3 [2735a7dc], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.338s
  Time for loading CPAs:          0.622s
  Time for loading parser:        0.525s
  Time for CFA construction:      1.008s
    Time for parsing file(s):     0.364s
    Time for AST to CFA:          0.265s
    Time for CFA sanity check:    0.052s
    Time for post-processing:     0.202s
      Time for var class.:        0.083s
Time for Analysis:                8.642s
CPU time for analysis:            8.650s
Time for analyzing result:        0.001s
Total time for CPAchecker:       10.984s
Total CPU time for CPAchecker:   10.980s
Time for statistics:              0.085s

Time for Garbage Collector:       0.166s (in 16 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     40MB (    38 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    30 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8064MB (  7691 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
