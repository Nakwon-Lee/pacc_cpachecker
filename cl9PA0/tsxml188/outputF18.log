scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_96ozu6_y/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 127: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 159: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 173: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 275: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 408: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 417: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 472: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 549: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            13881 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13558 (98%)
  Because of loop head:            257 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         66 (0%)
  Times precision was empty:       818 (6%)
  Times precision was {false}:     157 (1%)
  Times result was cached:         10532 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2374 (17%)
  Times result was 'false':        2234 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         5789
  BDD entailment checks:           3701
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          18
Number of abstraction locations:          54
Max number of predicates per location:    7
Avg number of predicates per location:    5
Total predicates per abstraction:         59386
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 23.46
Number of irrelevant predicates:          19006 (32%)
Number of preds handled by boolean abs:   8083 (14%)
  Total number of models for allsat:      2387
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.01

Time for post operator:                  1.038s
  Time for path formula creation:        0.987s
Time for strengthen operator:            0.088s
Time for prec operator:                  6.794s
  Time for abstraction:                  6.561s (Max:     0.023s, Count: 13881)
    Boolean abstraction:                 1.774s
    Solving time:                        1.308s (Max:     0.013s)
    Model enumeration time:              0.132s
    Time for BDD construction:           0.160s (Max:     0.010s)
Time for merge operator:                 0.071s
Time for coverage check:                 0.018s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):     1.440s

Number of path formula cache hits:   41940 (69%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.871s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1340
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6336 (count: 20896, min: 0, max: 493, avg: 0.30)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.233s
Automaton transfers with branching:                0
Automaton transfer successors:                        51779 (count: 51779, min: 1, max: 1, avg: 1.00) [1 x 51779]

CPA algorithm statistics
------------------------
Number of iterations:            40068
Max size of waitlist:            18
Average size of waitlist:        7
Number of computed successors:   44491
Max successors for one state:    2
Number of times merged:          1044
Number of times stopped:         1833
Number of times breaked:         66

Total time for CPA algorithm:        10.372s (Max:     0.943s)
  Time for choose from waitlist:      0.079s
  Time for precision adjustment:      7.207s
  Time for transfer relation:         2.314s
  Time for merge operator:            0.128s
  Time for stop operator:             0.143s
  Time for adding to reached set:     0.158s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   66
Avg. length of target path (in blocks):                3096 (count: 66, min: 22, max: 98, avg: 46.91)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.065s
  Counterexample analysis:                             0.670s (Max:     0.021s, Calls: 66)
    Refinement sat check:                              0.295s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.070s
  Precision update:                                    0.094s
  ARG update:                                          0.157s

Length of refined path (in blocks):                    2540 (count: 66, min: 14, max: 77, avg: 38.48)
Number of affected states:                             1779 (count: 66, min: 3, max: 68, avg: 26.95)
Length (states) of path with itp 'true':                695 (count: 66, min: 0, max: 44, avg: 10.53)
Length (states) of path with itp non-trivial itp:      1779 (count: 66, min: 3, max: 68, avg: 26.95)
Length (states) of path with itp 'false':                66 (count: 66, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          84 (count: 66, min: 0, max: 4, avg: 1.27)
Equal non-trivial interpolants along paths:            1629 (count: 66, min: 2, max: 65, avg: 24.68)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                66
Number of successful refinements:     66
Number of failed refinements:         0
Max. size of reached set before ref.: 3237
Max. size of reached set after ref.:  1732
Avg. size of reached set before ref.: 884.98
Avg. size of reached set after ref.:  346.68

Total time for CEGAR algorithm:      11.642s
Time for refinements:                 1.244s
Average time for refinement:          0.018s
Max time for refinement:              0.073s

Code Coverage
-----------------------------
  Function coverage:      0.694
  Visited lines:          145
  Total lines:            434
  Line coverage:          0.334
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     620
Number of CFA edges:             671
Number of relevant variables:    116
Number of functions:             36
Number of loops:                 5
Size of reached set:             4897
  Number of reached locations:   195 (31%)
    Avg states per location:     25
    Max states per location:     153 (at node N0)
  Number of reached functions:   25 (69%)
  Number of partitions:          4740
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N272 (before lines 486-531), Function test called from node N129, stack depth 3 [5a416df1], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.275s
  Time for loading CPAs:          0.590s
  Time for loading parser:        0.493s
  Time for CFA construction:      1.085s
    Time for parsing file(s):     0.360s
    Time for AST to CFA:          0.273s
    Time for CFA sanity check:    0.074s
    Time for post-processing:     0.239s
      Time for var class.:        0.113s
Time for Analysis:               11.643s
CPU time for analysis:           11.630s
Time for analyzing result:        0.003s
Total time for CPAchecker:       13.921s
Total CPU time for CPAchecker:   13.910s
Time for statistics:              0.147s

Time for Garbage Collector:       0.249s (in 30 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     41MB (    39 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8069MB (  7695 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
