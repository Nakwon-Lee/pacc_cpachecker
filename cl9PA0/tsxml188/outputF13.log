scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ggvg7p17/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 127: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 159: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 173: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 275: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 408: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 417: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 472: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 549: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            21313 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20929 (98%)
  Because of loop head:            304 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         80 (0%)
  Times precision was empty:       3795 (18%)
  Times precision was {false}:     175 (1%)
  Times result was cached:         15101 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2242 (11%)
  Times result was 'false':        2631 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         8137
  BDD entailment checks:           4689
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          16
Number of abstraction locations:          54
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         70519
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 29.18
Number of irrelevant predicates:          26167 (37%)
Number of preds handled by boolean abs:   7505 (11%)
  Total number of models for allsat:      2541
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.13

Time for post operator:                  1.035s
  Time for path formula creation:        0.990s
Time for strengthen operator:            0.081s
Time for prec operator:                  6.513s
  Time for abstraction:                  6.181s (Max:     0.014s, Count: 21313)
    Boolean abstraction:                 1.440s
    Solving time:                        1.053s (Max:     0.013s)
    Model enumeration time:              0.125s
    Time for BDD construction:           0.132s (Max:     0.012s)
Time for merge operator:                 0.048s
Time for coverage check:                 0.031s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     1.178s

Number of path formula cache hits:   76493 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.823s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1150
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5703 (count: 24258, min: 0, max: 760, avg: 0.24)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.299s
Automaton transfers with branching:                0
Automaton transfer successors:                        79074 (count: 79074, min: 1, max: 1, avg: 1.00) [1 x 79074]

CPA algorithm statistics
------------------------
Number of iterations:            62072
Max size of waitlist:            19
Average size of waitlist:        8
Number of computed successors:   68534
Max successors for one state:    2
Number of times merged:          1724
Number of times stopped:         3475
Number of times breaked:         80

Total time for CPA algorithm:        10.620s (Max:     1.024s)
  Time for choose from waitlist:      0.097s
  Time for precision adjustment:      7.041s
  Time for transfer relation:         2.420s
  Time for merge operator:            0.200s
  Time for stop operator:             0.193s
  Time for adding to reached set:     0.180s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   80
Avg. length of target path (in blocks):                3430 (count: 80, min: 21, max: 95, avg: 42.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.290s
  Counterexample analysis:                             0.864s (Max:     0.031s, Calls: 80)
    Refinement sat check:                              0.332s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.057s
  Precision update:                                    0.074s
  ARG update:                                          0.247s

Length of refined path (in blocks):                    2852 (count: 80, min: 13, max: 81, avg: 35.65)
Number of affected states:                             1745 (count: 80, min: 3, max: 72, avg: 21.81)
Length (states) of path with itp 'true':               1027 (count: 80, min: 0, max: 57, avg: 12.84)
Length (states) of path with itp non-trivial itp:      1745 (count: 80, min: 3, max: 72, avg: 21.81)
Length (states) of path with itp 'false':                80 (count: 80, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         108 (count: 80, min: 0, max: 3, avg: 1.35)
Equal non-trivial interpolants along paths:            1557 (count: 80, min: 2, max: 70, avg: 19.46)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                80
Number of successful refinements:     80
Number of failed refinements:         0
Max. size of reached set before ref.: 5602
Max. size of reached set after ref.:  3593
Avg. size of reached set before ref.: 1130.94
Avg. size of reached set after ref.:  415.40

Total time for CEGAR algorithm:      12.154s
Time for refinements:                 1.507s
Average time for refinement:          0.018s
Max time for refinement:              0.074s

Code Coverage
-----------------------------
  Function coverage:      0.694
  Visited lines:          145
  Total lines:            434
  Line coverage:          0.334
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     620
Number of CFA edges:             671
Number of relevant variables:    116
Number of functions:             36
Number of loops:                 5
Size of reached set:             5186
  Number of reached locations:   195 (31%)
    Avg states per location:     26
    Max states per location:     151 (at node N0)
  Number of reached functions:   25 (69%)
  Number of partitions:          5072
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N289 (after line 508), Function test called from node N129, stack depth 3 [9516b87], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.147s
  Time for loading CPAs:          0.587s
  Time for loading parser:        0.469s
  Time for CFA construction:      0.961s
    Time for parsing file(s):     0.336s
    Time for AST to CFA:          0.255s
    Time for CFA sanity check:    0.056s
    Time for post-processing:     0.205s
      Time for var class.:        0.090s
Time for Analysis:               12.154s
CPU time for analysis:           12.150s
Time for analyzing result:        0.003s
Total time for CPAchecker:       14.304s
Total CPU time for CPAchecker:   14.310s
Time for statistics:              0.125s

Time for Garbage Collector:       0.261s (in 37 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     41MB (    39 MiB) avg;     70MB (    67 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     32MB (    31 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8006MB (  7635 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
