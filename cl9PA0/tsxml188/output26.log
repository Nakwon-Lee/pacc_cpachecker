scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pl61cm81/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 127: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 159: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 173: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 275: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 408: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 417: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 472: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 549: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            17230 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  16906 (98%)
  Because of loop head:            240 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         84 (0%)
  Times precision was empty:       2224 (13%)
  Times precision was {false}:     163 (1%)
  Times result was cached:         12529 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2314 (13%)
  Times result was 'false':        2656 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         6318
  BDD entailment checks:           3352
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          17
Number of abstraction locations:          54
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         65129
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 26.29
Number of irrelevant predicates:          20068 (31%)
Number of preds handled by boolean abs:   8105 (12%)
  Total number of models for allsat:      2632
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.14

Time for post operator:                  1.035s
  Time for path formula creation:        0.968s
Time for strengthen operator:            0.088s
Time for prec operator:                  6.432s
  Time for abstraction:                  6.132s (Max:     0.014s, Count: 17230)
    Boolean abstraction:                 1.733s
    Solving time:                        1.186s (Max:     0.013s)
    Model enumeration time:              0.153s
    Time for BDD construction:           0.199s (Max:     0.012s)
Time for merge operator:                 0.049s
Time for coverage check:                 0.049s
  Time for BDD entailment checks:        0.048s
Total time for SMT solver (w/o itp):     1.339s

Number of path formula cache hits:   60640 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.838s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1197
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5819 (count: 21745, min: 0, max: 703, avg: 0.27)
Time for BDD node cleanup:                             0.033s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.264s
Automaton transfers with branching:                0
Automaton transfer successors:                        65783 (count: 65783, min: 1, max: 1, avg: 1.00) [1 x 65783]

CPA algorithm statistics
------------------------
Number of iterations:            49938
Max size of waitlist:            53
Average size of waitlist:        10
Number of computed successors:   55723
Max successors for one state:    2
Number of times merged:          1483
Number of times stopped:         2287
Number of times breaked:         84

Total time for CPA algorithm:        10.053s (Max:     1.483s)
  Time for choose from waitlist:      0.084s
  Time for precision adjustment:      6.945s
  Time for transfer relation:         2.273s
  Time for merge operator:            0.111s
  Time for stop operator:             0.160s
  Time for adding to reached set:     0.098s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   84
Avg. length of target path (in blocks):                3655 (count: 84, min: 21, max: 80, avg: 43.51)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.310s
  Counterexample analysis:                             0.897s (Max:     0.026s, Calls: 84)
    Refinement sat check:                              0.331s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.063s
  Precision update:                                    0.118s
  ARG update:                                          0.160s

Length of refined path (in blocks):                    3089 (count: 84, min: 13, max: 77, avg: 36.77)
Number of affected states:                             1934 (count: 84, min: 3, max: 68, avg: 23.02)
Length (states) of path with itp 'true':               1071 (count: 84, min: 0, max: 44, avg: 12.75)
Length (states) of path with itp non-trivial itp:      1934 (count: 84, min: 3, max: 68, avg: 23.02)
Length (states) of path with itp 'false':                84 (count: 84, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         124 (count: 84, min: 0, max: 4, avg: 1.48)
Equal non-trivial interpolants along paths:            1726 (count: 84, min: 2, max: 65, avg: 20.55)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                84
Number of successful refinements:     84
Number of failed refinements:         0
Max. size of reached set before ref.: 5923
Max. size of reached set after ref.:  4014
Avg. size of reached set before ref.: 906.24
Avg. size of reached set after ref.:  367.17

Total time for CEGAR algorithm:      11.570s
Time for refinements:                 1.492s
Average time for refinement:          0.017s
Max time for refinement:              0.057s

Code Coverage
-----------------------------
  Function coverage:      0.694
  Visited lines:          145
  Total lines:            434
  Line coverage:          0.334
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     620
Number of CFA edges:             671
Number of relevant variables:    116
Number of functions:             36
Number of loops:                 5
Size of reached set:             5499
  Number of reached locations:   195 (31%)
    Avg states per location:     28
    Max states per location:     162 (at node N0)
  Number of reached functions:   25 (69%)
  Number of partitions:          5360
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N289 (after line 508), Function test called from node N129, stack depth 3 [2c61e062], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.141s
  Time for loading CPAs:          0.545s
  Time for loading parser:        0.495s
  Time for CFA construction:      0.991s
    Time for parsing file(s):     0.321s
    Time for AST to CFA:          0.253s
    Time for CFA sanity check:    0.059s
    Time for post-processing:     0.215s
      Time for var class.:        0.102s
Time for Analysis:               11.570s
CPU time for analysis:           11.580s
Time for analyzing result:        0.004s
Total time for CPAchecker:       13.713s
Total CPU time for CPAchecker:   13.720s
Time for statistics:              0.135s

Time for Garbage Collector:       0.257s (in 34 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     41MB (    39 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8069MB (  7695 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
