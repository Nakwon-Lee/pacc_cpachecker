scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_aiw6vcdg/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 127: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 159: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 173: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 275: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 408: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 417: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 472: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 549: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            15982 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15674 (98%)
  Because of loop head:            230 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         78 (0%)
  Times precision was empty:       2066 (13%)
  Times precision was {false}:     140 (1%)
  Times result was cached:         11636 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2140 (13%)
  Times result was 'false':        2499 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         5754
  BDD entailment checks:           2766
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          17
Number of abstraction locations:          54
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         61647
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 27.04
Number of irrelevant predicates:          18377 (30%)
Number of preds handled by boolean abs:   7532 (12%)
  Total number of models for allsat:      2411
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.13

Time for post operator:                  0.922s
  Time for path formula creation:        0.865s
Time for strengthen operator:            0.069s
Time for prec operator:                  6.195s
  Time for abstraction:                  5.903s (Max:     0.017s, Count: 15982)
    Boolean abstraction:                 1.654s
    Solving time:                        1.169s (Max:     0.013s)
    Model enumeration time:              0.150s
    Time for BDD construction:           0.136s (Max:     0.010s)
Time for merge operator:                 0.077s
Time for coverage check:                 0.033s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     1.319s

Number of path formula cache hits:   56598 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.779s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1180
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5716 (count: 19843, min: 0, max: 690, avg: 0.29)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.254s
Automaton transfers with branching:                0
Automaton transfer successors:                        61372 (count: 61372, min: 1, max: 1, avg: 1.00) [1 x 61372]

CPA algorithm statistics
------------------------
Number of iterations:            46659
Max size of waitlist:            53
Average size of waitlist:        9
Number of computed successors:   52236
Max successors for one state:    2
Number of times merged:          1494
Number of times stopped:         2225
Number of times breaked:         78

Total time for CPA algorithm:         9.722s (Max:     1.274s)
  Time for choose from waitlist:      0.052s
  Time for precision adjustment:      6.671s
  Time for transfer relation:         2.133s
  Time for merge operator:            0.140s
  Time for stop operator:             0.141s
  Time for adding to reached set:     0.152s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   78
Avg. length of target path (in blocks):                3329 (count: 78, min: 21, max: 80, avg: 42.68)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.299s
  Counterexample analysis:                             0.925s (Max:     0.025s, Calls: 78)
    Refinement sat check:                              0.324s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.073s
  Precision update:                                    0.092s
  ARG update:                                          0.134s

Length of refined path (in blocks):                    2736 (count: 78, min: 13, max: 69, avg: 35.08)
Number of affected states:                             1787 (count: 78, min: 3, max: 68, avg: 22.91)
Length (states) of path with itp 'true':                871 (count: 78, min: 0, max: 39, avg: 11.17)
Length (states) of path with itp non-trivial itp:      1787 (count: 78, min: 3, max: 68, avg: 22.91)
Length (states) of path with itp 'false':                78 (count: 78, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         121 (count: 78, min: 0, max: 4, avg: 1.55)
Equal non-trivial interpolants along paths:            1588 (count: 78, min: 2, max: 65, avg: 20.36)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                78
Number of successful refinements:     78
Number of failed refinements:         0
Max. size of reached set before ref.: 5567
Max. size of reached set after ref.:  3708
Avg. size of reached set before ref.: 869.51
Avg. size of reached set after ref.:  328.33

Total time for CEGAR algorithm:      11.235s
Time for refinements:                 1.472s
Average time for refinement:          0.018s
Max time for refinement:              0.051s

Code Coverage
-----------------------------
  Function coverage:      0.694
  Visited lines:          145
  Total lines:            434
  Line coverage:          0.334
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     620
Number of CFA edges:             671
Number of relevant variables:    116
Number of functions:             36
Number of loops:                 5
Size of reached set:             5301
  Number of reached locations:   195 (31%)
    Avg states per location:     27
    Max states per location:     153 (at node N0)
  Number of reached functions:   25 (69%)
  Number of partitions:          5179
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N289 (after line 508), Function test called from node N129, stack depth 3 [2a0dda9e], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.151s
  Time for loading CPAs:          0.535s
  Time for loading parser:        0.494s
  Time for CFA construction:      1.003s
    Time for parsing file(s):     0.328s
    Time for AST to CFA:          0.260s
    Time for CFA sanity check:    0.061s
    Time for post-processing:     0.233s
      Time for var class.:        0.117s
Time for Analysis:               11.235s
CPU time for analysis:           11.230s
Time for analyzing result:        0.004s
Total time for CPAchecker:       13.389s
Total CPU time for CPAchecker:   13.380s
Time for statistics:              0.137s

Time for Garbage Collector:       0.258s (in 32 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     40MB (    38 MiB) avg;     70MB (    67 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8069MB (  7695 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
