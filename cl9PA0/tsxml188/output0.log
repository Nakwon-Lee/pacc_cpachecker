scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_n44t2w52/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 127: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 159: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 173: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 275: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 408: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 417: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 472: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 549: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            35894 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  35304 (98%)
  Because of loop head:            481 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         109 (0%)
  Times precision was empty:       4553 (13%)
  Times precision was {false}:     222 (1%)
  Times result was cached:         27061 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4058 (11%)
  Times result was 'false':        4244 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         17307
  BDD entailment checks:           10025
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          18
Number of abstraction locations:          54
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         132662
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 31.00
Number of irrelevant predicates:          53740 (41%)
Number of preds handled by boolean abs:   12970 (10%)
  Total number of models for allsat:      4670
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.15

Time for post operator:                  1.414s
  Time for path formula creation:        1.340s
Time for strengthen operator:            0.195s
Time for prec operator:                 10.112s
  Time for abstraction:                  9.735s (Max:     0.018s, Count: 35894)
    Boolean abstraction:                 2.472s
    Solving time:                        1.879s (Max:     0.013s)
    Model enumeration time:              0.236s
    Time for BDD construction:           0.151s (Max:     0.010s)
Time for merge operator:                 0.051s
Time for coverage check:                 0.040s
  Time for BDD entailment checks:        0.037s
Total time for SMT solver (w/o itp):     2.115s

Number of path formula cache hits:   125700 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.139s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1412
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        9379 (count: 42442, min: 0, max: 452, avg: 0.22)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.304s
Automaton transfers with branching:                0
Automaton transfer successors:                       137889 (count: 137889, min: 1, max: 1, avg: 1.00) [1 x 137889]

CPA algorithm statistics
------------------------
Number of iterations:            106038
Max size of waitlist:            97
Average size of waitlist:        33
Number of computed successors:   118515
Max successors for one state:    2
Number of times merged:          3641
Number of times stopped:         6086
Number of times breaked:         109

Total time for CPA algorithm:        15.399s (Max:     1.085s)
  Time for choose from waitlist:      0.106s
  Time for precision adjustment:     10.854s
  Time for transfer relation:         3.269s
  Time for merge operator:            0.153s
  Time for stop operator:             0.226s
  Time for adding to reached set:     0.192s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   109
Avg. length of target path (in blocks):                5193 (count: 109, min: 21, max: 118, avg: 47.64)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.519s
  Counterexample analysis:                             1.068s (Max:     0.023s, Calls: 109)
    Refinement sat check:                              0.419s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.049s
  Precision update:                                    0.105s
  ARG update:                                          0.247s

Length of refined path (in blocks):                    4366 (count: 109, min: 13, max: 102, avg: 40.06)
Number of affected states:                             2629 (count: 109, min: 11, max: 67, avg: 24.12)
Length (states) of path with itp 'true':               1628 (count: 109, min: 0, max: 78, avg: 14.94)
Length (states) of path with itp non-trivial itp:      2629 (count: 109, min: 11, max: 67, avg: 24.12)
Length (states) of path with itp 'false':               109 (count: 109, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         130 (count: 109, min: 0, max: 4, avg: 1.19)
Equal non-trivial interpolants along paths:            2390 (count: 109, min: 7, max: 66, avg: 21.93)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                109
Number of successful refinements:     109
Number of failed refinements:         0
Max. size of reached set before ref.: 6289
Max. size of reached set after ref.:  5951
Avg. size of reached set before ref.: 2043.58
Avg. size of reached set after ref.:  1141.72

Total time for CEGAR algorithm:      17.311s
Time for refinements:                 1.805s
Average time for refinement:          0.016s
Max time for refinement:              0.062s

Code Coverage
-----------------------------
  Function coverage:      0.694
  Visited lines:          145
  Total lines:            434
  Line coverage:          0.334
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     620
Number of CFA edges:             671
Number of relevant variables:    116
Number of functions:             36
Number of loops:                 5
Size of reached set:             9884
  Number of reached locations:   195 (31%)
    Avg states per location:     50
    Max states per location:     318 (at node N0)
  Number of reached functions:   25 (69%)
  Number of partitions:          9475
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N289 (after line 508), Function test called from node N129, stack depth 3 [2831ae4b], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.253s
  Time for loading CPAs:          0.562s
  Time for loading parser:        0.475s
  Time for CFA construction:      1.078s
    Time for parsing file(s):     0.385s
    Time for AST to CFA:          0.250s
    Time for CFA sanity check:    0.059s
    Time for post-processing:     0.226s
      Time for var class.:        0.111s
Time for Analysis:               17.311s
CPU time for analysis:           17.310s
Time for analyzing result:        0.007s
Total time for CPAchecker:       19.567s
Total CPU time for CPAchecker:   19.560s
Time for statistics:              0.198s

Time for Garbage Collector:       0.494s (in 64 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 78MB (    74 MiB) max;     45MB (    43 MiB) avg;     82MB (    79 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
