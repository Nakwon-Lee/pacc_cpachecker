scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7o2gb_vv/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 127: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 159: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 173: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 275: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 408: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 417: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 472: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 549: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            9364 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  9170 (98%)
  Because of loop head:            137 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         57 (1%)
  Times precision was empty:       1561 (17%)
  Times precision was {false}:     147 (2%)
  Times result was cached:         6134 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1522 (16%)
  Times result was 'false':        1305 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         3186
  BDD entailment checks:           1320
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          15
Number of abstraction locations:          54
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         32389
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 19.41
Number of irrelevant predicates:          9806 (30%)
Number of preds handled by boolean abs:   4598 (14%)
  Total number of models for allsat:      1727
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.13

Time for post operator:                  0.865s
  Time for path formula creation:        0.826s
Time for strengthen operator:            0.079s
Time for prec operator:                  5.152s
  Time for abstraction:                  4.920s (Max:     0.019s, Count: 9364)
    Boolean abstraction:                 1.375s
    Solving time:                        1.047s (Max:     0.018s)
    Model enumeration time:              0.129s
    Time for BDD construction:           0.134s (Max:     0.012s)
Time for merge operator:                 0.044s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     1.176s

Number of path formula cache hits:   31593 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.754s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               780
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3865 (count: 13588, min: 0, max: 349, avg: 0.28)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.200s
Automaton transfers with branching:                0
Automaton transfer successors:                        36383 (count: 36383, min: 1, max: 1, avg: 1.00) [1 x 36383]

CPA algorithm statistics
------------------------
Number of iterations:            27537
Max size of waitlist:            42
Average size of waitlist:        9
Number of computed successors:   30837
Max successors for one state:    2
Number of times merged:          933
Number of times stopped:         1336
Number of times breaked:         57

Total time for CPA algorithm:         8.044s (Max:     1.127s)
  Time for choose from waitlist:      0.048s
  Time for precision adjustment:      5.486s
  Time for transfer relation:         1.824s
  Time for merge operator:            0.138s
  Time for stop operator:             0.124s
  Time for adding to reached set:     0.089s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   57
Avg. length of target path (in blocks):                2526 (count: 57, min: 22, max: 99, avg: 44.32)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.904s
  Counterexample analysis:                             0.615s (Max:     0.028s, Calls: 57)
    Refinement sat check:                              0.219s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.056s
  Precision update:                                    0.056s
  ARG update:                                          0.098s

Length of refined path (in blocks):                    2119 (count: 57, min: 13, max: 88, avg: 37.18)
Number of affected states:                             1454 (count: 57, min: 8, max: 87, avg: 25.51)
Length (states) of path with itp 'true':                608 (count: 57, min: 0, max: 57, avg: 10.67)
Length (states) of path with itp non-trivial itp:      1454 (count: 57, min: 8, max: 87, avg: 25.51)
Length (states) of path with itp 'false':                57 (count: 57, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          70 (count: 57, min: 0, max: 3, avg: 1.23)
Equal non-trivial interpolants along paths:            1327 (count: 57, min: 7, max: 84, avg: 23.28)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                57
Number of successful refinements:     57
Number of failed refinements:         0
Max. size of reached set before ref.: 1901
Max. size of reached set after ref.:  821
Avg. size of reached set before ref.: 641.68
Avg. size of reached set after ref.:  214.46

Total time for CEGAR algorithm:       9.048s
Time for refinements:                 0.997s
Average time for refinement:          0.017s
Max time for refinement:              0.047s

Code Coverage
-----------------------------
  Function coverage:      0.694
  Visited lines:          145
  Total lines:            434
  Line coverage:          0.334
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     620
Number of CFA edges:             671
Number of relevant variables:    116
Number of functions:             36
Number of loops:                 5
Size of reached set:             3845
  Number of reached locations:   195 (31%)
    Avg states per location:     19
    Max states per location:     118 (at node N0)
  Number of reached functions:   25 (69%)
  Number of partitions:          3740
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N272 (before lines 486-531), Function test called from node N129, stack depth 3 [1b131102], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.069s
  Time for loading CPAs:          0.566s
  Time for loading parser:        0.492s
  Time for CFA construction:      0.882s
    Time for parsing file(s):     0.326s
    Time for AST to CFA:          0.208s
    Time for CFA sanity check:    0.052s
    Time for post-processing:     0.174s
      Time for var class.:        0.067s
Time for Analysis:                9.049s
CPU time for analysis:            9.040s
Time for analyzing result:        0.011s
Total time for CPAchecker:       11.121s
Total CPU time for CPAchecker:   11.110s
Time for statistics:              0.123s

Time for Garbage Collector:       0.160s (in 20 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     40MB (    38 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8066MB (  7692 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
