scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product28_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dhleyphv/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 179: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 302: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 906: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 952: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 743: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            13161 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12965 (99%)
  Because of loop head:            157 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         39 (0%)
  Times precision was empty:       3492 (27%)
  Times precision was {false}:     140 (1%)
  Times result was cached:         9018 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      511 (4%)
  Times result was 'false':        870 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         4668
  BDD entailment checks:           2644
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          8
Number of abstraction locations:          41
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         17303
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 26.58
Number of irrelevant predicates:          8739 (51%)
Number of preds handled by boolean abs:   1078 (6%)
  Total number of models for allsat:      583
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.14

Time for post operator:                  1.119s
  Time for path formula creation:        1.044s
Time for strengthen operator:            0.097s
Time for prec operator:                  2.957s
  Time for abstraction:                  2.661s (Max:     0.014s, Count: 13161)
    Boolean abstraction:                 0.427s
    Solving time:                        0.237s (Max:     0.012s)
    Model enumeration time:              0.030s
    Time for BDD construction:           0.097s (Max:     0.012s)
Time for merge operator:                 0.032s
Time for coverage check:                 0.044s
  Time for BDD entailment checks:        0.040s
Total time for SMT solver (w/o itp):     0.267s

Number of path formula cache hits:   49165 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.813s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               312
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         991 (count: 10080, min: 0, max: 219, avg: 0.10)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.228s
Automaton transfers with branching:                0
Automaton transfer successors:                        52099 (count: 52099, min: 1, max: 1, avg: 1.00) [1 x 52099]

CPA algorithm statistics
------------------------
Number of iterations:            40352
Max size of waitlist:            85
Average size of waitlist:        32
Number of computed successors:   45043
Max successors for one state:    2
Number of times merged:          1012
Number of times stopped:         2569
Number of times breaked:         39

Total time for CPA algorithm:         6.745s (Max:     0.542s)
  Time for choose from waitlist:      0.113s
  Time for precision adjustment:      3.401s
  Time for transfer relation:         2.340s
  Time for merge operator:            0.112s
  Time for stop operator:             0.165s
  Time for adding to reached set:     0.178s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   39
Avg. length of target path (in blocks):                1210 (count: 39, min: 21, max: 49, avg: 31.03)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.551s
  Counterexample analysis:                             0.239s (Max:     0.014s, Calls: 39)
    Refinement sat check:                              0.145s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.044s
  Precision update:                                    0.030s
  ARG update:                                          0.205s

Length of refined path (in blocks):                     895 (count: 39, min: 15, max: 38, avg: 22.95)
Number of affected states:                              565 (count: 39, min: 2, max: 37, avg: 14.49)
Length (states) of path with itp 'true':                291 (count: 39, min: 0, max: 19, avg: 7.46)
Length (states) of path with itp non-trivial itp:       565 (count: 39, min: 2, max: 37, avg: 14.49)
Length (states) of path with itp 'false':                39 (count: 39, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 39, min: 0, max: 1, avg: 0.08)
Equal non-trivial interpolants along paths:             523 (count: 39, min: 1, max: 36, avg: 13.41)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                39
Number of successful refinements:     39
Number of failed refinements:         0
Max. size of reached set before ref.: 2509
Max. size of reached set after ref.:  983
Avg. size of reached set before ref.: 1284.33
Avg. size of reached set after ref.:  249.51

Total time for CEGAR algorithm:       7.415s
Time for refinements:                 0.646s
Average time for refinement:          0.016s
Max time for refinement:              0.047s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          111
  Total lines:            436
  Line coverage:          0.255
  Visited conditions:     32
  Total conditions:       70
  Condition coverage:     0.457

CPAchecker general statistics
-----------------------------
Number of program locations:     627
Number of CFA edges:             673
Number of relevant variables:    113
Number of functions:             38
Number of loops:                 5
Size of reached set:             1247
  Number of reached locations:   149 (24%)
    Avg states per location:     8
    Max states per location:     47 (at node N249)
  Number of reached functions:   19 (50%)
  Number of partitions:          1231
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N277 (before lines 504-518), Function cleanup called from node N241, stack depth 4 [62e3dba0], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          2.025s
  Time for loading CPAs:          0.597s
  Time for loading parser:        0.434s
  Time for CFA construction:      0.907s
    Time for parsing file(s):     0.326s
    Time for AST to CFA:          0.217s
    Time for CFA sanity check:    0.069s
    Time for post-processing:     0.179s
      Time for var class.:        0.069s
Time for Analysis:                7.415s
CPU time for analysis:            7.400s
Time for analyzing result:        0.001s
Total time for CPAchecker:        9.442s
Total CPU time for CPAchecker:    9.430s
Time for statistics:              0.080s

Time for Garbage Collector:       0.161s (in 19 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     40MB (    38 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     31MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8001MB (  7630 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
