scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product28_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4_hbdjwq/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 179: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 302: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 906: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 952: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 743: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4296 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4204 (98%)
  Because of loop head:            61 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         31 (1%)
  Times precision was empty:       745 (17%)
  Times precision was {false}:     102 (2%)
  Times result was cached:         3029 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      420 (10%)
  Times result was 'false':        602 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         1362
  BDD entailment checks:           696
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          41
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         8485
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 16.25
Number of irrelevant predicates:          2079 (25%)
Number of preds handled by boolean abs:   1067 (13%)
  Total number of models for allsat:      455
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  0.618s
  Time for path formula creation:        0.575s
Time for strengthen operator:            0.045s
Time for prec operator:                  1.947s
  Time for abstraction:                  1.779s (Max:     0.015s, Count: 4296)
    Boolean abstraction:                 0.399s
    Solving time:                        0.259s (Max:     0.012s)
    Model enumeration time:              0.024s
    Time for BDD construction:           0.088s (Max:     0.008s)
Time for merge operator:                 0.027s
Time for coverage check:                 0.023s
  Time for BDD entailment checks:        0.022s
Total time for SMT solver (w/o itp):     0.283s

Number of path formula cache hits:   16535 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.518s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               306
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         906 (count: 4593, min: 0, max: 293, avg: 0.20)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.188s
Automaton transfers with branching:                0
Automaton transfer successors:                        17215 (count: 17215, min: 1, max: 1, avg: 1.00) [1 x 17215]

CPA algorithm statistics
------------------------
Number of iterations:            13281
Max size of waitlist:            35
Average size of waitlist:        12
Number of computed successors:   15057
Max successors for one state:    2
Number of times merged:          333
Number of times stopped:         707
Number of times breaked:         31

Total time for CPA algorithm:         3.905s (Max:     0.429s)
  Time for choose from waitlist:      0.021s
  Time for precision adjustment:      2.181s
  Time for transfer relation:         1.347s
  Time for merge operator:            0.059s
  Time for stop operator:             0.079s
  Time for adding to reached set:     0.066s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   31
Avg. length of target path (in blocks):                1015 (count: 31, min: 22, max: 61, avg: 32.74)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.425s
  Counterexample analysis:                             0.245s (Max:     0.017s, Calls: 31)
    Refinement sat check:                              0.125s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.036s
  Precision update:                                    0.013s
  ARG update:                                          0.083s

Length of refined path (in blocks):                     795 (count: 31, min: 16, max: 47, avg: 25.65)
Number of affected states:                              576 (count: 31, min: 2, max: 44, avg: 18.58)
Length (states) of path with itp 'true':                188 (count: 31, min: 0, max: 33, avg: 6.06)
Length (states) of path with itp non-trivial itp:       576 (count: 31, min: 2, max: 44, avg: 18.58)
Length (states) of path with itp 'false':                31 (count: 31, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 31, min: 0, max: 1, avg: 0.16)
Equal non-trivial interpolants along paths:             540 (count: 31, min: 1, max: 42, avg: 17.42)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 865
Max. size of reached set after ref.:  586
Avg. size of reached set before ref.: 530.55
Avg. size of reached set after ref.:  120.61

Total time for CEGAR algorithm:       4.408s
Time for refinements:                 0.494s
Average time for refinement:          0.015s
Max time for refinement:              0.047s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          111
  Total lines:            436
  Line coverage:          0.255
  Visited conditions:     32
  Total conditions:       70
  Condition coverage:     0.457

CPAchecker general statistics
-----------------------------
Number of program locations:     627
Number of CFA edges:             673
Number of relevant variables:    113
Number of functions:             38
Number of loops:                 5
Size of reached set:             1041
  Number of reached locations:   149 (24%)
    Avg states per location:     6
    Max states per location:     33 (at node N88)
  Number of reached functions:   19 (50%)
  Number of partitions:          1018
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N99 (before line 215), Function timeShift called from node N230, stack depth 4 [665ed71a], stack [main, runTest, test, timeShift]])
  Number of target states:       0

Time for analysis setup:          2.187s
  Time for loading CPAs:          0.567s
  Time for loading parser:        0.503s
  Time for CFA construction:      1.005s
    Time for parsing file(s):     0.328s
    Time for AST to CFA:          0.291s
    Time for CFA sanity check:    0.083s
    Time for post-processing:     0.205s
      Time for var class.:        0.084s
Time for Analysis:                4.408s
CPU time for analysis:            4.400s
Time for analyzing result:        0.002s
Total time for CPAchecker:        6.598s
Total CPU time for CPAchecker:    6.600s
Time for statistics:              0.078s

Time for Garbage Collector:       0.111s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     36MB (    34 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     29MB (    27 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8052MB (  7679 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
