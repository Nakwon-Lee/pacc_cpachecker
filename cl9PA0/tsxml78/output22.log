scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product28_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pf_2c8y8/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 179: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 302: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 906: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 952: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 743: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            11237 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11060 (98%)
  Because of loop head:            128 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         49 (0%)
  Times precision was empty:       2595 (23%)
  Times precision was {false}:     165 (1%)
  Times result was cached:         7737 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      740 (7%)
  Times result was 'false':        878 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         4532
  BDD entailment checks:           2946
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          8
Number of abstraction locations:          41
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         30252
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 33.43
Number of irrelevant predicates:          14934 (49%)
Number of preds handled by boolean abs:   2005 (7%)
  Total number of models for allsat:      787
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.06

Time for post operator:                  1.106s
  Time for path formula creation:        1.059s
Time for strengthen operator:            0.071s
Time for prec operator:                  3.562s
  Time for abstraction:                  3.293s (Max:     0.022s, Count: 11237)
    Boolean abstraction:                 0.587s
    Solving time:                        0.432s (Max:     0.013s)
    Model enumeration time:              0.053s
    Time for BDD construction:           0.102s (Max:     0.010s)
Time for merge operator:                 0.060s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.032s
Total time for SMT solver (w/o itp):     0.485s

Number of path formula cache hits:   37678 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.934s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               376
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1696 (count: 11000, min: 0, max: 197, avg: 0.15)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.215s
Automaton transfers with branching:                0
Automaton transfer successors:                        41323 (count: 41323, min: 1, max: 1, avg: 1.00) [1 x 41323]

CPA algorithm statistics
------------------------
Number of iterations:            33648
Max size of waitlist:            40
Average size of waitlist:        16
Number of computed successors:   37423
Max successors for one state:    2
Number of times merged:          793
Number of times stopped:         2124
Number of times breaked:         49

Total time for CPA algorithm:         7.263s (Max:     0.776s)
  Time for choose from waitlist:      0.059s
  Time for precision adjustment:      4.096s
  Time for transfer relation:         2.296s
  Time for merge operator:            0.139s
  Time for stop operator:             0.177s
  Time for adding to reached set:     0.143s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   49
Avg. length of target path (in blocks):                1574 (count: 49, min: 22, max: 61, avg: 32.12)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.526s
  Counterexample analysis:                             0.340s (Max:     0.019s, Calls: 49)
    Refinement sat check:                              0.127s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.023s
  ARG update:                                          0.132s

Length of refined path (in blocks):                    1235 (count: 49, min: 15, max: 47, avg: 25.20)
Number of affected states:                              737 (count: 49, min: 2, max: 44, avg: 15.04)
Length (states) of path with itp 'true':                449 (count: 49, min: 0, max: 33, avg: 9.16)
Length (states) of path with itp non-trivial itp:       737 (count: 49, min: 2, max: 44, avg: 15.04)
Length (states) of path with itp 'false':                49 (count: 49, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 49, min: 0, max: 1, avg: 0.10)
Equal non-trivial interpolants along paths:             683 (count: 49, min: 1, max: 42, avg: 13.94)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                49
Number of successful refinements:     49
Number of failed refinements:         0
Max. size of reached set before ref.: 1412
Max. size of reached set after ref.:  582
Avg. size of reached set before ref.: 923.94
Avg. size of reached set after ref.:  235.35

Total time for CEGAR algorithm:       7.926s
Time for refinements:                 0.622s
Average time for refinement:          0.012s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.474
  Visited lines:          95
  Total lines:            436
  Line coverage:          0.218
  Visited conditions:     30
  Total conditions:       70
  Condition coverage:     0.429

CPAchecker general statistics
-----------------------------
Number of program locations:     627
Number of CFA edges:             673
Number of relevant variables:    113
Number of functions:             38
Number of loops:                 5
Size of reached set:             681
  Number of reached locations:   128 (20%)
    Avg states per location:     5
    Max states per location:     20 (at node N88)
  Number of reached functions:   18 (47%)
  Number of partitions:          665
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N99 (before line 215), Function timeShift called from node N230, stack depth 4 [2ee6196f], stack [main, runTest, test, timeShift]])
  Number of target states:       0

Time for analysis setup:          2.551s
  Time for loading CPAs:          0.630s
  Time for loading parser:        0.624s
  Time for CFA construction:      1.135s
    Time for parsing file(s):     0.350s
    Time for AST to CFA:          0.298s
    Time for CFA sanity check:    0.088s
    Time for post-processing:     0.251s
      Time for var class.:        0.090s
Time for Analysis:                7.927s
CPU time for analysis:            7.930s
Time for analyzing result:        0.001s
Total time for CPAchecker:       10.483s
Total CPU time for CPAchecker:   10.480s
Time for statistics:              0.066s

Time for Garbage Collector:       0.206s (in 20 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    59 MiB) max;     39MB (    37 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8059MB (  7686 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
