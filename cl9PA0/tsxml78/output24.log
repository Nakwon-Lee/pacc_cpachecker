scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product28_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ioq70aqn/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 179: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 302: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 906: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 952: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 743: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3579 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3462 (97%)
  Because of loop head:            85 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         32 (1%)
  Times precision was empty:       509 (14%)
  Times precision was {false}:     88 (2%)
  Times result was cached:         2531 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      451 (13%)
  Times result was 'false':        513 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         1054
  BDD entailment checks:           644
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          41
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         9709
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 18.01
Number of irrelevant predicates:          2084 (21%)
Number of preds handled by boolean abs:   1130 (12%)
  Total number of models for allsat:      493
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  0.575s
  Time for path formula creation:        0.543s
Time for strengthen operator:            0.027s
Time for prec operator:                  1.604s
  Time for abstraction:                  1.496s (Max:     0.014s, Count: 3579)
    Boolean abstraction:                 0.315s
    Solving time:                        0.215s (Max:     0.013s)
    Model enumeration time:              0.030s
    Time for BDD construction:           0.049s (Max:     0.012s)
Time for merge operator:                 0.024s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):     0.245s

Number of path formula cache hits:   12560 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.506s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               293
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         780 (count: 4417, min: 0, max: 273, avg: 0.18)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.106s
Automaton transfers with branching:                0
Automaton transfer successors:                        13647 (count: 13647, min: 1, max: 1, avg: 1.00) [1 x 13647]

CPA algorithm statistics
------------------------
Number of iterations:            10768
Max size of waitlist:            18
Average size of waitlist:        7
Number of computed successors:   12055
Max successors for one state:    2
Number of times merged:          205
Number of times stopped:         523
Number of times breaked:         32

Total time for CPA algorithm:         3.288s (Max:     0.405s)
  Time for choose from waitlist:      0.039s
  Time for precision adjustment:      1.829s
  Time for transfer relation:         1.100s
  Time for merge operator:            0.046s
  Time for stop operator:             0.092s
  Time for adding to reached set:     0.063s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   32
Avg. length of target path (in blocks):                1013 (count: 32, min: 21, max: 61, avg: 31.66)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.371s
  Counterexample analysis:                             0.251s (Max:     0.019s, Calls: 32)
    Refinement sat check:                              0.093s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.011s
  ARG update:                                          0.051s

Length of refined path (in blocks):                     766 (count: 32, min: 15, max: 47, avg: 23.94)
Number of affected states:                              555 (count: 32, min: 2, max: 44, avg: 17.34)
Length (states) of path with itp 'true':                179 (count: 32, min: 0, max: 33, avg: 5.59)
Length (states) of path with itp non-trivial itp:       555 (count: 32, min: 2, max: 44, avg: 17.34)
Length (states) of path with itp 'false':                32 (count: 32, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           6 (count: 32, min: 0, max: 1, avg: 0.19)
Equal non-trivial interpolants along paths:             517 (count: 32, min: 1, max: 42, avg: 16.16)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                32
Number of successful refinements:     32
Number of failed refinements:         0
Max. size of reached set before ref.: 632
Max. size of reached set after ref.:  538
Avg. size of reached set before ref.: 360.22
Avg. size of reached set after ref.:  58.34

Total time for CEGAR algorithm:       3.722s
Time for refinements:                 0.426s
Average time for refinement:          0.013s
Max time for refinement:              0.038s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          111
  Total lines:            436
  Line coverage:          0.255
  Visited conditions:     32
  Total conditions:       70
  Condition coverage:     0.457

CPAchecker general statistics
-----------------------------
Number of program locations:     627
Number of CFA edges:             673
Number of relevant variables:    113
Number of functions:             38
Number of loops:                 5
Size of reached set:             1360
  Number of reached locations:   149 (24%)
    Avg states per location:     9
    Max states per location:     44 (at node N88)
  Number of reached functions:   19 (50%)
  Number of partitions:          1326
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N99 (before line 215), Function timeShift called from node N230, stack depth 4 [15f861ee], stack [main, runTest, test, timeShift]])
  Number of target states:       0

Time for analysis setup:          1.996s
  Time for loading CPAs:          0.483s
  Time for loading parser:        0.470s
  Time for CFA construction:      0.944s
    Time for parsing file(s):     0.310s
    Time for AST to CFA:          0.239s
    Time for CFA sanity check:    0.058s
    Time for post-processing:     0.224s
      Time for var class.:        0.110s
Time for Analysis:                3.722s
CPU time for analysis:            3.720s
Time for analyzing result:        0.002s
Total time for CPAchecker:        5.720s
Total CPU time for CPAchecker:    5.710s
Time for statistics:              0.084s

Time for Garbage Collector:       0.095s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     35MB (    34 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     28MB (    27 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8048MB (  7676 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
