scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product26_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_59ft0zlv/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 270: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 302: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 311: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 640: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 686: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 795: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 804: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 859: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 477: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3110 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3047 (98%)
  Because of loop head:            48 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15 (0%)
  Times precision was empty:       574 (18%)
  Times precision was {false}:     93 (3%)
  Times result was cached:         2117 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      326 (10%)
  Times result was 'false':        150 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         1261
  BDD entailment checks:           633
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          35
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         7241
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 17.28
Number of irrelevant predicates:          3425 (47%)
Number of preds handled by boolean abs:   733 (10%)
  Total number of models for allsat:      355
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  0.547s
  Time for path formula creation:        0.534s
Time for strengthen operator:            0.053s
Time for prec operator:                  1.293s
  Time for abstraction:                  1.154s (Max:     0.013s, Count: 3110)
    Boolean abstraction:                 0.205s
    Solving time:                        0.114s (Max:     0.013s)
    Model enumeration time:              0.024s
    Time for BDD construction:           0.039s (Max:     0.008s)
Time for merge operator:                 0.016s
Time for coverage check:                 0.033s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     0.138s

Number of path formula cache hits:   8830 (62%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.483s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               271
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         671 (count: 3731, min: 0, max: 279, avg: 0.18)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.138s
Automaton transfers with branching:                0
Automaton transfer successors:                        12278 (count: 12278, min: 1, max: 1, avg: 1.00) [1 x 12278]

CPA algorithm statistics
------------------------
Number of iterations:            9536
Max size of waitlist:            52
Average size of waitlist:        21
Number of computed successors:   10737
Max successors for one state:    2
Number of times merged:          314
Number of times stopped:         657
Number of times breaked:         15

Total time for CPA algorithm:         2.944s (Max:     0.514s)
  Time for choose from waitlist:      0.025s
  Time for precision adjustment:      1.480s
  Time for transfer relation:         1.059s
  Time for merge operator:            0.094s
  Time for stop operator:             0.079s
  Time for adding to reached set:     0.061s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   15
Avg. length of target path (in blocks):                 652 (count: 15, min: 25, max: 54, avg: 43.47)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.209s
  Counterexample analysis:                             0.128s (Max:     0.019s, Calls: 15)
    Refinement sat check:                              0.052s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.010s
  ARG update:                                          0.035s

Length of refined path (in blocks):                     391 (count: 15, min: 15, max: 41, avg: 26.07)
Number of affected states:                              306 (count: 15, min: 13, max: 40, avg: 20.40)
Length (states) of path with itp 'true':                 70 (count: 15, min: 0, max: 21, avg: 4.67)
Length (states) of path with itp non-trivial itp:       306 (count: 15, min: 13, max: 40, avg: 20.40)
Length (states) of path with itp 'false':                15 (count: 15, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 15, min: 0, max: 1, avg: 0.33)
Equal non-trivial interpolants along paths:             286 (count: 15, min: 12, max: 38, avg: 19.07)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15
Number of successful refinements:     15
Number of failed refinements:         0
Max. size of reached set before ref.: 1895
Max. size of reached set after ref.:  318
Avg. size of reached set before ref.: 694.87
Avg. size of reached set after ref.:  73.20

Total time for CEGAR algorithm:       3.209s
Time for refinements:                 0.265s
Average time for refinement:          0.017s
Max time for refinement:              0.046s

Code Coverage
-----------------------------
  Function coverage:      0.459
  Visited lines:          91
  Total lines:            431
  Line coverage:          0.211
  Visited conditions:     28
  Total conditions:       68
  Condition coverage:     0.412

CPAchecker general statistics
-----------------------------
Number of program locations:     617
Number of CFA edges:             661
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             606
  Number of reached locations:   120 (19%)
    Avg states per location:     5
    Max states per location:     22 (at node N29)
  Number of reached functions:   17 (46%)
  Number of partitions:          598
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N594 (before lines 881-928), Function test called from node N97, stack depth 3 [6cd2cb2], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.714s
  Time for loading CPAs:          0.425s
  Time for loading parser:        0.384s
  Time for CFA construction:      0.815s
    Time for parsing file(s):     0.282s
    Time for AST to CFA:          0.225s
    Time for CFA sanity check:    0.039s
    Time for post-processing:     0.163s
      Time for var class.:        0.062s
Time for Analysis:                3.215s
CPU time for analysis:            3.220s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.932s
Total CPU time for CPAchecker:    4.930s
Time for statistics:              0.059s

Time for Garbage Collector:       0.084s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     37MB (    35 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7989MB (  7619 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
