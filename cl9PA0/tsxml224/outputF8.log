scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product26_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_w3eqxt8z/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 270: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 302: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 311: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 640: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 686: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 795: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 804: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 859: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 477: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2801 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2692 (96%)
  Because of loop head:            80 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29 (1%)
  Times precision was empty:       403 (14%)
  Times precision was {false}:     89 (3%)
  Times result was cached:         1938 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      371 (13%)
  Times result was 'false':        375 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         971
  BDD entailment checks:           471
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          38
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         7282
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 15.83
Number of irrelevant predicates:          1774 (24%)
Number of preds handled by boolean abs:   879 (12%)
  Total number of models for allsat:      403
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  0.489s
  Time for path formula creation:        0.484s
Time for strengthen operator:            0.030s
Time for prec operator:                  1.839s
  Time for abstraction:                  1.740s (Max:     0.018s, Count: 2801)
    Boolean abstraction:                 0.494s
    Solving time:                        0.337s (Max:     0.013s)
    Model enumeration time:              0.045s
    Time for BDD construction:           0.037s (Max:     0.010s)
Time for merge operator:                 0.022s
Time for coverage check:                 0.013s
  Time for BDD entailment checks:        0.012s
Total time for SMT solver (w/o itp):     0.382s

Number of path formula cache hits:   9791 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.425s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               290
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         777 (count: 3680, min: 0, max: 300, avg: 0.21)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.103s
Automaton transfers with branching:                0
Automaton transfer successors:                        10900 (count: 10900, min: 1, max: 1, avg: 1.00) [1 x 10900]

CPA algorithm statistics
------------------------
Number of iterations:            8597
Max size of waitlist:            14
Average size of waitlist:        5
Number of computed successors:   9607
Max successors for one state:    2
Number of times merged:          250
Number of times stopped:         459
Number of times breaked:         29

Total time for CPA algorithm:         3.489s (Max:     0.208s)
  Time for choose from waitlist:      0.041s
  Time for precision adjustment:      2.078s
  Time for transfer relation:         1.064s
  Time for merge operator:            0.058s
  Time for stop operator:             0.045s
  Time for adding to reached set:     0.075s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   29
Avg. length of target path (in blocks):                 952 (count: 29, min: 21, max: 61, avg: 32.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.416s
  Counterexample analysis:                             0.265s (Max:     0.020s, Calls: 29)
    Refinement sat check:                              0.139s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.016s
  Precision update:                                    0.027s
  ARG update:                                          0.080s

Length of refined path (in blocks):                     731 (count: 29, min: 15, max: 47, avg: 25.21)
Number of affected states:                              512 (count: 29, min: 2, max: 44, avg: 17.66)
Length (states) of path with itp 'true':                190 (count: 29, min: 0, max: 33, avg: 6.55)
Length (states) of path with itp non-trivial itp:       512 (count: 29, min: 2, max: 44, avg: 17.66)
Length (states) of path with itp 'false':                29 (count: 29, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 29, min: 0, max: 1, avg: 0.17)
Equal non-trivial interpolants along paths:             478 (count: 29, min: 1, max: 42, avg: 16.48)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 588
Max. size of reached set after ref.:  437
Avg. size of reached set before ref.: 352.79
Avg. size of reached set after ref.:  71.59

Total time for CEGAR algorithm:       3.956s
Time for refinements:                 0.462s
Average time for refinement:          0.015s
Max time for refinement:              0.035s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          107
  Total lines:            431
  Line coverage:          0.248
  Visited conditions:     30
  Total conditions:       68
  Condition coverage:     0.441

CPAchecker general statistics
-----------------------------
Number of program locations:     617
Number of CFA edges:             661
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             619
  Number of reached locations:   141 (23%)
    Avg states per location:     4
    Max states per location:     20 (at node N487)
  Number of reached functions:   18 (49%)
  Number of partitions:          611
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N594 (before lines 881-928), Function test called from node N97, stack depth 3 [5e9bf744], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.840s
  Time for loading CPAs:          0.487s
  Time for loading parser:        0.466s
  Time for CFA construction:      0.815s
    Time for parsing file(s):     0.267s
    Time for AST to CFA:          0.230s
    Time for CFA sanity check:    0.054s
    Time for post-processing:     0.158s
      Time for var class.:        0.055s
Time for Analysis:                3.956s
CPU time for analysis:            3.950s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.799s
Total CPU time for CPAchecker:    5.790s
Time for statistics:              0.057s

Time for Garbage Collector:       0.080s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     37MB (    35 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     29MB (    27 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7989MB (  7619 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
