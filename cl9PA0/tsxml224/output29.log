scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product26_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6gq9s_0i/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 270: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 302: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 311: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 640: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 686: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 795: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 804: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 859: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 477: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            10223 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10101 (99%)
  Because of loop head:            91 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         31 (0%)
  Times precision was empty:       2359 (23%)
  Times precision was {false}:     119 (1%)
  Times result was cached:         7231 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      514 (5%)
  Times result was 'false':        442 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         4721
  BDD entailment checks:           2563
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          38
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         16747
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 26.46
Number of irrelevant predicates:          7434 (44%)
Number of preds handled by boolean abs:   1068 (6%)
  Total number of models for allsat:      569
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.11

Time for post operator:                  1.014s
  Time for path formula creation:        0.972s
Time for strengthen operator:            0.077s
Time for prec operator:                  2.518s
  Time for abstraction:                  2.278s (Max:     0.014s, Count: 10223)
    Boolean abstraction:                 0.416s
    Solving time:                        0.232s (Max:     0.013s)
    Model enumeration time:              0.059s
    Time for BDD construction:           0.081s (Max:     0.011s)
Time for merge operator:                 0.043s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     0.291s

Number of path formula cache hits:   39790 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.793s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               274
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1147 (count: 8720, min: 0, max: 214, avg: 0.13)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.219s
Automaton transfers with branching:                0
Automaton transfer successors:                        41613 (count: 41613, min: 1, max: 1, avg: 1.00) [1 x 41613]

CPA algorithm statistics
------------------------
Number of iterations:            31719
Max size of waitlist:            80
Average size of waitlist:        35
Number of computed successors:   35743
Max successors for one state:    2
Number of times merged:          1079
Number of times stopped:         2500
Number of times breaked:         31

Total time for CPA algorithm:         5.929s (Max:     0.665s)
  Time for choose from waitlist:      0.050s
  Time for precision adjustment:      2.955s
  Time for transfer relation:         2.146s
  Time for merge operator:            0.196s
  Time for stop operator:             0.126s
  Time for adding to reached set:     0.163s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   31
Avg. length of target path (in blocks):                 941 (count: 31, min: 21, max: 40, avg: 30.35)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.432s
  Counterexample analysis:                             0.194s (Max:     0.021s, Calls: 31)
    Refinement sat check:                              0.079s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.059s
  Precision update:                                    0.021s
  ARG update:                                          0.132s

Length of refined path (in blocks):                     722 (count: 31, min: 15, max: 39, avg: 23.29)
Number of affected states:                              491 (count: 31, min: 2, max: 38, avg: 15.84)
Length (states) of path with itp 'true':                200 (count: 31, min: 0, max: 19, avg: 6.45)
Length (states) of path with itp non-trivial itp:       491 (count: 31, min: 2, max: 38, avg: 15.84)
Length (states) of path with itp 'false':                31 (count: 31, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 31, min: 0, max: 1, avg: 0.10)
Equal non-trivial interpolants along paths:             457 (count: 31, min: 1, max: 36, avg: 14.74)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 1902
Max. size of reached set after ref.:  454
Avg. size of reached set before ref.: 1148.29
Avg. size of reached set after ref.:  114.84

Total time for CEGAR algorithm:       6.438s
Time for refinements:                 0.502s
Average time for refinement:          0.016s
Max time for refinement:              0.064s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          107
  Total lines:            431
  Line coverage:          0.248
  Visited conditions:     30
  Total conditions:       68
  Condition coverage:     0.441

CPAchecker general statistics
-----------------------------
Number of program locations:     617
Number of CFA edges:             661
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             765
  Number of reached locations:   141 (23%)
    Avg states per location:     5
    Max states per location:     26 (at node N29)
  Number of reached functions:   18 (49%)
  Number of partitions:          759
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N594 (before lines 881-928), Function test called from node N97, stack depth 3 [71ef979e], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.785s
  Time for loading CPAs:          0.446s
  Time for loading parser:        0.403s
  Time for CFA construction:      0.819s
    Time for parsing file(s):     0.260s
    Time for AST to CFA:          0.211s
    Time for CFA sanity check:    0.060s
    Time for post-processing:     0.177s
      Time for var class.:        0.082s
Time for Analysis:                6.438s
CPU time for analysis:            6.440s
Time for analyzing result:        0.000s
Total time for CPAchecker:        8.227s
Total CPU time for CPAchecker:    8.230s
Time for statistics:              0.054s

Time for Garbage Collector:       0.143s (in 17 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     39MB (    37 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     31MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   8000MB (  7630 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
