scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product23_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5nv0r790/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 493: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 735: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 744: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 799: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 829: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 852: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 949: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 330: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            6809 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6706 (98%)
  Because of loop head:            74 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29 (0%)
  Times precision was empty:       2312 (34%)
  Times precision was {false}:     99 (1%)
  Times result was cached:         4068 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      330 (5%)
  Times result was 'false':        618 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         1990
  BDD entailment checks:           1054
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          8
Number of abstraction locations:          42
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         11875
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 27.68
Number of irrelevant predicates:          5989 (50%)
Number of preds handled by boolean abs:   709 (6%)
  Total number of models for allsat:      354
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  0.611s
  Time for path formula creation:        0.563s
Time for strengthen operator:            0.055s
Time for prec operator:                  1.507s
  Time for abstraction:                  1.352s (Max:     0.014s, Count: 6809)
    Boolean abstraction:                 0.228s
    Solving time:                        0.125s (Max:     0.012s)
    Model enumeration time:              0.023s
    Time for BDD construction:           0.054s (Max:     0.008s)
Time for merge operator:                 0.046s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):     0.148s

Number of path formula cache hits:   22094 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.504s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               282
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         760 (count: 5954, min: 0, max: 142, avg: 0.13)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.129s
Automaton transfers with branching:                0
Automaton transfer successors:                        25050 (count: 25050, min: 1, max: 1, avg: 1.00) [1 x 25050]

CPA algorithm statistics
------------------------
Number of iterations:            20165
Max size of waitlist:            22
Average size of waitlist:        11
Number of computed successors:   22383
Max successors for one state:    2
Number of times merged:          468
Number of times stopped:         1304
Number of times breaked:         29

Total time for CPA algorithm:         3.655s (Max:     0.683s)
  Time for choose from waitlist:      0.071s
  Time for precision adjustment:      1.784s
  Time for transfer relation:         1.338s
  Time for merge operator:            0.074s
  Time for stop operator:             0.107s
  Time for adding to reached set:     0.088s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   29
Avg. length of target path (in blocks):                1190 (count: 29, min: 23, max: 69, avg: 41.03)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.359s
  Counterexample analysis:                             0.195s (Max:     0.019s, Calls: 29)
    Refinement sat check:                              0.064s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.039s
  ARG update:                                          0.078s

Length of refined path (in blocks):                     831 (count: 29, min: 15, max: 53, avg: 28.66)
Number of affected states:                              597 (count: 29, min: 2, max: 50, avg: 20.59)
Length (states) of path with itp 'true':                205 (count: 29, min: 0, max: 37, avg: 7.07)
Length (states) of path with itp non-trivial itp:       597 (count: 29, min: 2, max: 50, avg: 20.59)
Length (states) of path with itp 'false':                29 (count: 29, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 29, min: 0, max: 1, avg: 0.17)
Equal non-trivial interpolants along paths:             563 (count: 29, min: 1, max: 48, avg: 19.41)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 1381
Max. size of reached set after ref.:  643
Avg. size of reached set before ref.: 826.79
Avg. size of reached set after ref.:  141.10

Total time for CEGAR algorithm:       4.086s
Time for refinements:                 0.426s
Average time for refinement:          0.014s
Max time for refinement:              0.056s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          96
  Total lines:            436
  Line coverage:          0.220
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     626
Number of CFA edges:             675
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             577
  Number of reached locations:   131 (21%)
    Avg states per location:     4
    Max states per location:     18 (at node N63)
  Number of reached functions:   18 (49%)
  Number of partitions:          571
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N399 (before lines 565-612), Function test called from node N616, stack depth 3 [6cb1da13], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.779s
  Time for loading CPAs:          0.462s
  Time for loading parser:        0.388s
  Time for CFA construction:      0.794s
    Time for parsing file(s):     0.275s
    Time for AST to CFA:          0.192s
    Time for CFA sanity check:    0.071s
    Time for post-processing:     0.166s
      Time for var class.:        0.066s
Time for Analysis:                4.095s
CPU time for analysis:            4.090s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.877s
Total CPU time for CPAchecker:    5.870s
Time for statistics:              0.047s

Time for Garbage Collector:       0.099s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     36MB (    34 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     29MB (    28 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8055MB (  7682 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
