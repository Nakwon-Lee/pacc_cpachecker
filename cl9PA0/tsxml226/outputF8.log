scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product23_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_q330fcy_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 493: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 735: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 744: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 799: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 829: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 852: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 949: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 330: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4147 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3991 (96%)
  Because of loop head:            127 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29 (1%)
  Times precision was empty:       458 (11%)
  Times precision was {false}:     157 (4%)
  Times result was cached:         2738 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      794 (19%)
  Times result was 'false':        594 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         2265
  BDD entailment checks:           1483
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          8
Number of abstraction locations:          42
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         12676
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 13.33
Number of irrelevant predicates:          4205 (33%)
Number of preds handled by boolean abs:   2180 (17%)
  Total number of models for allsat:      863
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  0.548s
  Time for path formula creation:        0.511s
Time for strengthen operator:            0.026s
Time for prec operator:                  2.162s
  Time for abstraction:                  2.051s (Max:     0.014s, Count: 4147)
    Boolean abstraction:                 0.530s
    Solving time:                        0.336s (Max:     0.013s)
    Model enumeration time:              0.087s
    Time for BDD construction:           0.041s (Max:     0.008s)
Time for merge operator:                 0.039s
Time for coverage check:                 0.015s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     0.423s

Number of path formula cache hits:   11643 (62%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.486s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               371
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1753 (count: 7720, min: 0, max: 397, avg: 0.23)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.104s
Automaton transfers with branching:                0
Automaton transfer successors:                        16526 (count: 16526, min: 1, max: 1, avg: 1.00) [1 x 16526]

CPA algorithm statistics
------------------------
Number of iterations:            13040
Max size of waitlist:            31
Average size of waitlist:        10
Number of computed successors:   14829
Max successors for one state:    2
Number of times merged:          391
Number of times stopped:         805
Number of times breaked:         29

Total time for CPA algorithm:         3.867s (Max:     0.293s)
  Time for choose from waitlist:      0.030s
  Time for precision adjustment:      2.383s
  Time for transfer relation:         1.096s
  Time for merge operator:            0.085s
  Time for stop operator:             0.096s
  Time for adding to reached set:     0.051s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   29
Avg. length of target path (in blocks):                1519 (count: 29, min: 21, max: 75, avg: 52.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.336s
  Counterexample analysis:                             0.221s (Max:     0.016s, Calls: 29)
    Refinement sat check:                              0.104s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.026s
  Precision update:                                    0.032s
  ARG update:                                          0.033s

Length of refined path (in blocks):                    1013 (count: 29, min: 15, max: 51, avg: 34.93)
Number of affected states:                              739 (count: 29, min: 9, max: 39, avg: 25.48)
Length (states) of path with itp 'true':                245 (count: 29, min: 0, max: 23, avg: 8.45)
Length (states) of path with itp non-trivial itp:       739 (count: 29, min: 9, max: 39, avg: 25.48)
Length (states) of path with itp 'false':                29 (count: 29, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 29, min: 0, max: 2, avg: 0.14)
Equal non-trivial interpolants along paths:             706 (count: 29, min: 8, max: 36, avg: 24.34)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 1323
Max. size of reached set after ref.:  673
Avg. size of reached set before ref.: 550.24
Avg. size of reached set after ref.:  136.45

Total time for CEGAR algorithm:       4.250s
Time for refinements:                 0.380s
Average time for refinement:          0.013s
Max time for refinement:              0.030s

Code Coverage
-----------------------------
  Function coverage:      0.514
  Visited lines:          112
  Total lines:            436
  Line coverage:          0.257
  Visited conditions:     34
  Total conditions:       72
  Condition coverage:     0.472

CPAchecker general statistics
-----------------------------
Number of program locations:     626
Number of CFA edges:             675
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             1431
  Number of reached locations:   152 (24%)
    Avg states per location:     9
    Max states per location:     48 (at node N63)
  Number of reached functions:   19 (51%)
  Number of partitions:          1392
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N399 (before lines 565-612), Function test called from node N616, stack depth 3 [58a7a58d], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.920s
  Time for loading CPAs:          0.467s
  Time for loading parser:        0.471s
  Time for CFA construction:      0.860s
    Time for parsing file(s):     0.316s
    Time for AST to CFA:          0.214s
    Time for CFA sanity check:    0.068s
    Time for post-processing:     0.160s
      Time for var class.:        0.054s
Time for Analysis:                4.250s
CPU time for analysis:            4.260s
Time for analyzing result:        0.005s
Total time for CPAchecker:        6.173s
Total CPU time for CPAchecker:    6.170s
Time for statistics:              0.073s

Time for Garbage Collector:       0.094s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     38MB (    36 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     29MB (    28 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   7991MB (  7621 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
