scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product23_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_arsdi3y3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 493: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 735: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 744: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 799: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 829: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 852: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 949: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 330: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4872 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4765 (98%)
  Because of loop head:            82 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25 (1%)
  Times precision was empty:       1674 (34%)
  Times precision was {false}:     177 (4%)
  Times result was cached:         2383 (49%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      638 (13%)
  Times result was 'false':        379 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         2102
  BDD entailment checks:           1118
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          8
Number of abstraction locations:          39
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         9462
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 11.61
Number of irrelevant predicates:          4221 (45%)
Number of preds handled by boolean abs:   1713 (18%)
  Total number of models for allsat:      717
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.12

Time for post operator:                  0.692s
  Time for path formula creation:        0.672s
Time for strengthen operator:            0.027s
Time for prec operator:                  1.939s
  Time for abstraction:                  1.840s (Max:     0.013s, Count: 4872)
    Boolean abstraction:                 0.489s
    Solving time:                        0.319s (Max:     0.013s)
    Model enumeration time:              0.041s
    Time for BDD construction:           0.089s (Max:     0.012s)
Time for merge operator:                 0.063s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.032s
Total time for SMT solver (w/o itp):     0.360s

Number of path formula cache hits:   11325 (53%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.634s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               417
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1624 (count: 7737, min: 0, max: 379, avg: 0.21)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.118s
Automaton transfers with branching:                0
Automaton transfer successors:                        19151 (count: 19151, min: 1, max: 1, avg: 1.00) [1 x 19151]

CPA algorithm statistics
------------------------
Number of iterations:            14638
Max size of waitlist:            104
Average size of waitlist:        29
Number of computed successors:   16907
Max successors for one state:    2
Number of times merged:          492
Number of times stopped:         922
Number of times breaked:         25

Total time for CPA algorithm:         4.082s (Max:     0.341s)
  Time for choose from waitlist:      0.036s
  Time for precision adjustment:      2.242s
  Time for transfer relation:         1.328s
  Time for merge operator:            0.091s
  Time for stop operator:             0.133s
  Time for adding to reached set:     0.056s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   25
Avg. length of target path (in blocks):                1089 (count: 25, min: 21, max: 68, avg: 43.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.320s
  Counterexample analysis:                             0.184s (Max:     0.014s, Calls: 25)
    Refinement sat check:                              0.090s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.031s
  Precision update:                                    0.029s
  ARG update:                                          0.057s

Length of refined path (in blocks):                     616 (count: 25, min: 15, max: 34, avg: 24.64)
Number of affected states:                              417 (count: 25, min: 9, max: 33, avg: 16.68)
Length (states) of path with itp 'true':                174 (count: 25, min: 0, max: 19, avg: 6.96)
Length (states) of path with itp non-trivial itp:       417 (count: 25, min: 9, max: 33, avg: 16.68)
Length (states) of path with itp 'false':                25 (count: 25, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 25, min: 0, max: 1, avg: 0.08)
Equal non-trivial interpolants along paths:             390 (count: 25, min: 8, max: 32, avg: 15.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 1344
Max. size of reached set after ref.:  727
Avg. size of reached set before ref.: 781.68
Avg. size of reached set after ref.:  192.28

Total time for CEGAR algorithm:       4.454s
Time for refinements:                 0.369s
Average time for refinement:          0.014s
Max time for refinement:              0.039s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          96
  Total lines:            436
  Line coverage:          0.220
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     626
Number of CFA edges:             675
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             872
  Number of reached locations:   131 (21%)
    Avg states per location:     6
    Max states per location:     25 (at node N63)
  Number of reached functions:   18 (49%)
  Number of partitions:          848
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N399 (before lines 565-612), Function test called from node N616, stack depth 3 [61d527ac], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.861s
  Time for loading CPAs:          0.458s
  Time for loading parser:        0.462s
  Time for CFA construction:      0.867s
    Time for parsing file(s):     0.314s
    Time for AST to CFA:          0.204s
    Time for CFA sanity check:    0.047s
    Time for post-processing:     0.190s
      Time for var class.:        0.088s
Time for Analysis:                4.454s
CPU time for analysis:            4.450s
Time for analyzing result:        0.001s
Total time for CPAchecker:        6.318s
Total CPU time for CPAchecker:    6.320s
Time for statistics:              0.068s

Time for Garbage Collector:       0.103s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     36MB (    35 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    28 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   7991MB (  7621 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
