scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product18_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_x367_dr2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 273: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 796: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 890: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 922: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 931: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 633: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2005 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1962 (98%)
  Because of loop head:            33 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (0%)
  Times precision was empty:       465 (23%)
  Times precision was {false}:     50 (2%)
  Times result was cached:         1435 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      55 (3%)
  Times result was 'false':        156 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         635
  BDD entailment checks:           273
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          3
Number of abstraction locations:          41
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         1576
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 15.01
Number of irrelevant predicates:          389 (25%)
Number of preds handled by boolean abs:   59 (4%)
  Total number of models for allsat:      66
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.20

Time for post operator:                  0.314s
  Time for path formula creation:        0.298s
Time for strengthen operator:            0.024s
Time for prec operator:                  0.505s
  Time for abstraction:                  0.443s (Max:     0.013s, Count: 2005)
    Boolean abstraction:                 0.053s
    Solving time:                        0.042s (Max:     0.012s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.011s (Max:     0.008s)
Time for merge operator:                 0.007s
Time for coverage check:                 0.007s
  Time for BDD entailment checks:        0.007s
Total time for SMT solver (w/o itp):     0.044s

Number of path formula cache hits:   6494 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.261s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         123 (count: 1332, min: 0, max: 64, avg: 0.09)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.049s
Automaton transfers with branching:                0
Automaton transfer successors:                         7488 (count: 7488, min: 1, max: 1, avg: 1.00) [1 x 7488]

CPA algorithm statistics
------------------------
Number of iterations:            5835
Max size of waitlist:            16
Average size of waitlist:        7
Number of computed successors:   6477
Max successors for one state:    2
Number of times merged:          181
Number of times stopped:         397
Number of times breaked:         10

Total time for CPA algorithm:         1.652s (Max:     0.330s)
  Time for choose from waitlist:      0.025s
  Time for precision adjustment:      0.669s
  Time for transfer relation:         0.748s
  Time for merge operator:            0.050s
  Time for stop operator:             0.053s
  Time for adding to reached set:     0.030s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                 435 (count: 10, min: 31, max: 66, avg: 43.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.179s
  Counterexample analysis:                             0.105s (Max:     0.025s, Calls: 10)
    Refinement sat check:                              0.035s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.010s
  Precision update:                                    0.003s
  ARG update:                                          0.037s

Length of refined path (in blocks):                     297 (count: 10, min: 20, max: 50, avg: 29.70)
Number of affected states:                              287 (count: 10, min: 19, max: 49, avg: 28.70)
Length (states) of path with itp 'true':                  0 (count: 10, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       287 (count: 10, min: 19, max: 49, avg: 28.70)
Length (states) of path with itp 'false':                10 (count: 10, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 10, min: 0, max: 1, avg: 0.10)
Equal non-trivial interpolants along paths:             276 (count: 10, min: 18, max: 48, avg: 27.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 920
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 537.60
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.867s
Time for refinements:                 0.210s
Average time for refinement:          0.021s
Max time for refinement:              0.048s

Code Coverage
-----------------------------
  Function coverage:      0.514
  Visited lines:          107
  Total lines:            426
  Line coverage:          0.251
  Visited conditions:     30
  Total conditions:       66
  Condition coverage:     0.455

CPAchecker general statistics
-----------------------------
Number of program locations:     610
Number of CFA edges:             653
Number of relevant variables:    110
Number of functions:             37
Number of loops:                 5
Size of reached set:             579
  Number of reached locations:   143 (23%)
    Avg states per location:     4
    Max states per location:     24 (at node N243)
  Number of reached functions:   19 (51%)
  Number of partitions:          579
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          1.983s
  Time for loading CPAs:          0.499s
  Time for loading parser:        0.474s
  Time for CFA construction:      0.885s
    Time for parsing file(s):     0.282s
    Time for AST to CFA:          0.245s
    Time for CFA sanity check:    0.048s
    Time for post-processing:     0.173s
      Time for var class.:        0.059s
Time for Analysis:                1.868s
CPU time for analysis:            1.870s
Time for analyzing result:        0.000s
Total time for CPAchecker:        3.854s
Total CPU time for CPAchecker:    3.850s
Time for statistics:              0.072s

Time for Garbage Collector:       0.070s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 54MB (    51 MiB) max;     32MB (    30 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     26MB (    24 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   7974MB (  7604 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
