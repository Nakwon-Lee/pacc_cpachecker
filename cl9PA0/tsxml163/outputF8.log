scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product18_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7oee5ak3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 273: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 796: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 890: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 922: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 931: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 633: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2474 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2417 (98%)
  Because of loop head:            37 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         20 (1%)
  Times precision was empty:       363 (15%)
  Times precision was {false}:     88 (4%)
  Times result was cached:         1758 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      265 (11%)
  Times result was 'false':        197 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         887
  BDD entailment checks:           367
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          5
Number of abstraction locations:          41
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         4510
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 12.78
Number of irrelevant predicates:          1506 (33%)
Number of preds handled by boolean abs:   494 (11%)
  Total number of models for allsat:      286
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  0.394s
  Time for path formula creation:        0.380s
Time for strengthen operator:            0.053s
Time for prec operator:                  1.230s
  Time for abstraction:                  1.130s (Max:     0.014s, Count: 2474)
    Boolean abstraction:                 0.175s
    Solving time:                        0.116s (Max:     0.008s)
    Model enumeration time:              0.009s
    Time for BDD construction:           0.037s (Max:     0.008s)
Time for merge operator:                 0.014s
Time for coverage check:                 0.018s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):     0.125s

Number of path formula cache hits:   7132 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.351s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               238
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         510 (count: 2843, min: 0, max: 210, avg: 0.18)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.076s
Automaton transfers with branching:                0
Automaton transfer successors:                         9374 (count: 9374, min: 1, max: 1, avg: 1.00) [1 x 9374]

CPA algorithm statistics
------------------------
Number of iterations:            7251
Max size of waitlist:            16
Average size of waitlist:        6
Number of computed successors:   8092
Max successors for one state:    2
Number of times merged:          260
Number of times stopped:         503
Number of times breaked:         20

Total time for CPA algorithm:         2.543s (Max:     0.278s)
  Time for choose from waitlist:      0.016s
  Time for precision adjustment:      1.406s
  Time for transfer relation:         0.821s
  Time for merge operator:            0.055s
  Time for stop operator:             0.093s
  Time for adding to reached set:     0.044s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   20
Avg. length of target path (in blocks):                 826 (count: 20, min: 26, max: 58, avg: 41.30)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.239s
  Counterexample analysis:                             0.128s (Max:     0.015s, Calls: 20)
    Refinement sat check:                              0.053s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.044s
  Precision update:                                    0.027s
  ARG update:                                          0.027s

Length of refined path (in blocks):                     604 (count: 20, min: 20, max: 50, avg: 30.20)
Number of affected states:                              455 (count: 20, min: 15, max: 49, avg: 22.75)
Length (states) of path with itp 'true':                129 (count: 20, min: 0, max: 19, avg: 6.45)
Length (states) of path with itp non-trivial itp:       455 (count: 20, min: 15, max: 49, avg: 22.75)
Length (states) of path with itp 'false':                20 (count: 20, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 20, min: 0, max: 1, avg: 0.05)
Equal non-trivial interpolants along paths:             434 (count: 20, min: 14, max: 48, avg: 21.70)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                20
Number of successful refinements:     20
Number of failed refinements:         0
Max. size of reached set before ref.: 825
Max. size of reached set after ref.:  560
Avg. size of reached set before ref.: 531.90
Avg. size of reached set after ref.:  187.60

Total time for CEGAR algorithm:       2.845s
Time for refinements:                 0.299s
Average time for refinement:          0.014s
Max time for refinement:              0.040s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          91
  Total lines:            426
  Line coverage:          0.214
  Visited conditions:     28
  Total conditions:       66
  Condition coverage:     0.424

CPAchecker general statistics
-----------------------------
Number of program locations:     610
Number of CFA edges:             653
Number of relevant variables:    110
Number of functions:             37
Number of loops:                 5
Size of reached set:             507
  Number of reached locations:   122 (20%)
    Avg states per location:     4
    Max states per location:     18 (at node N243)
  Number of reached functions:   18 (49%)
  Number of partitions:          502
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N9 (before lines 55-102), Function test called from node N214, stack depth 3 [7a388990], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.994s
  Time for loading CPAs:          0.501s
  Time for loading parser:        0.447s
  Time for CFA construction:      0.907s
    Time for parsing file(s):     0.306s
    Time for AST to CFA:          0.253s
    Time for CFA sanity check:    0.054s
    Time for post-processing:     0.186s
      Time for var class.:        0.072s
Time for Analysis:                2.846s
CPU time for analysis:            2.840s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.843s
Total CPU time for CPAchecker:    4.840s
Time for statistics:              0.065s

Time for Garbage Collector:       0.085s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    54 MiB) max;     34MB (    33 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7984MB (  7614 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
