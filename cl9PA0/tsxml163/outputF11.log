scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product18_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tvzangzb/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 273: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 796: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 890: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 922: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 931: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 633: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3429 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3368 (98%)
  Because of loop head:            45 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (0%)
  Times precision was empty:       1211 (35%)
  Times precision was {false}:     67 (2%)
  Times result was cached:         2060 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      91 (3%)
  Times result was 'false':        222 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         1154
  BDD entailment checks:           518
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          4
Number of abstraction locations:          41
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         3181
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 20.13
Number of irrelevant predicates:          1298 (41%)
Number of preds handled by boolean abs:   109 (3%)
  Total number of models for allsat:      104
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.14

Time for post operator:                  0.482s
  Time for path formula creation:        0.467s
Time for strengthen operator:            0.051s
Time for prec operator:                  0.866s
  Time for abstraction:                  0.760s (Max:     0.017s, Count: 3429)
    Boolean abstraction:                 0.129s
    Solving time:                        0.071s (Max:     0.013s)
    Model enumeration time:              0.012s
    Time for BDD construction:           0.027s (Max:     0.008s)
Time for merge operator:                 0.020s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     0.083s

Number of path formula cache hits:   12702 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.404s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         161 (count: 2653, min: 0, max: 59, avg: 0.06)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.051s
Automaton transfers with branching:                0
Automaton transfer successors:                        12815 (count: 12815, min: 1, max: 1, avg: 1.00) [1 x 12815]

CPA algorithm statistics
------------------------
Number of iterations:            10100
Max size of waitlist:            23
Average size of waitlist:        9
Number of computed successors:   11177
Max successors for one state:    2
Number of times merged:          318
Number of times stopped:         716
Number of times breaked:         16

Total time for CPA algorithm:         2.593s (Max:     0.508s)
  Time for choose from waitlist:      0.075s
  Time for precision adjustment:      1.139s
  Time for transfer relation:         1.002s
  Time for merge operator:            0.092s
  Time for stop operator:             0.061s
  Time for adding to reached set:     0.068s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                 507 (count: 16, min: 25, max: 50, avg: 31.69)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.249s
  Counterexample analysis:                             0.130s (Max:     0.022s, Calls: 16)
    Refinement sat check:                              0.044s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.025s
  Precision update:                                    0.005s
  ARG update:                                          0.061s

Length of refined path (in blocks):                     391 (count: 16, min: 19, max: 42, avg: 24.44)
Number of affected states:                              333 (count: 16, min: 6, max: 41, avg: 20.81)
Length (states) of path with itp 'true':                 42 (count: 16, min: 0, max: 14, avg: 2.63)
Length (states) of path with itp non-trivial itp:       333 (count: 16, min: 6, max: 41, avg: 20.81)
Length (states) of path with itp 'false':                16 (count: 16, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 16, min: 0, max: 1, avg: 0.06)
Equal non-trivial interpolants along paths:             316 (count: 16, min: 5, max: 40, avg: 19.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 1094
Max. size of reached set after ref.:  518
Avg. size of reached set before ref.: 672.31
Avg. size of reached set after ref.:  88.50

Total time for CEGAR algorithm:       2.890s
Time for refinements:                 0.295s
Average time for refinement:          0.018s
Max time for refinement:              0.060s

Code Coverage
-----------------------------
  Function coverage:      0.514
  Visited lines:          107
  Total lines:            426
  Line coverage:          0.251
  Visited conditions:     30
  Total conditions:       66
  Condition coverage:     0.455

CPAchecker general statistics
-----------------------------
Number of program locations:     610
Number of CFA edges:             653
Number of relevant variables:    110
Number of functions:             37
Number of loops:                 5
Size of reached set:             899
  Number of reached locations:   143 (23%)
    Avg states per location:     6
    Max states per location:     36 (at node N243)
  Number of reached functions:   19 (51%)
  Number of partitions:          897
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N9 (before lines 55-102), Function test called from node N214, stack depth 3 [30cafd13], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.141s
  Time for loading CPAs:          0.585s
  Time for loading parser:        0.490s
  Time for CFA construction:      0.957s
    Time for parsing file(s):     0.305s
    Time for AST to CFA:          0.266s
    Time for CFA sanity check:    0.068s
    Time for post-processing:     0.218s
      Time for var class.:        0.099s
Time for Analysis:                2.891s
CPU time for analysis:            2.900s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.036s
Total CPU time for CPAchecker:    5.040s
Time for statistics:              0.082s

Time for Garbage Collector:       0.092s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     34MB (    33 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     27MB (    26 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7983MB (  7613 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
