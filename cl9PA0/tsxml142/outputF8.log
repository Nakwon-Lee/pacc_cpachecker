scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product36_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__p39z0ad/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 187: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 196: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 251: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 640: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 810: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 908: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 940: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 954: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            12734 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12517 (98%)
  Because of loop head:            179 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         38 (0%)
  Times precision was empty:       437 (3%)
  Times precision was {false}:     339 (3%)
  Times result was cached:         6842 (54%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5116 (40%)
  Times result was 'false':        2248 (18%)
Number of strengthen sat checks:   0
Number of coverage checks:         7881
  BDD entailment checks:           5745
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          20
Number of abstraction locations:          49
Max number of predicates per location:    16
Avg number of predicates per location:    7
Total predicates per abstraction:         84907
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 15.56
Number of irrelevant predicates:          9172 (11%)
Number of preds handled by boolean abs:   33297 (39%)
  Total number of models for allsat:      5680
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.11

Time for post operator:                  1.528s
  Time for path formula creation:        1.459s
Time for strengthen operator:            0.069s
Time for prec operator:                 13.981s
  Time for abstraction:                 13.630s (Max:     0.032s, Count: 12734)
    Boolean abstraction:                 4.681s
    Solving time:                        3.435s (Max:     0.018s)
    Model enumeration time:              0.398s
    Time for BDD construction:           0.235s (Max:     0.013s)
Time for merge operator:                 0.061s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):     3.833s

Number of path formula cache hits:   19290 (37%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.323s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               3329
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       15299 (count: 41265, min: 0, max: 1000, avg: 0.37)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.212s
Automaton transfers with branching:                0
Automaton transfer successors:                        47904 (count: 47904, min: 1, max: 1, avg: 1.00) [1 x 47904]

CPA algorithm statistics
------------------------
Number of iterations:            37590
Max size of waitlist:            51
Average size of waitlist:        23
Number of computed successors:   42366
Max successors for one state:    2
Number of times merged:          1068
Number of times stopped:         1989
Number of times breaked:         38

Total time for CPA algorithm:        18.206s (Max:     1.450s)
  Time for choose from waitlist:      0.090s
  Time for precision adjustment:     14.484s
  Time for transfer relation:         2.800s
  Time for merge operator:            0.181s
  Time for stop operator:             0.146s
  Time for adding to reached set:     0.145s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   38
Avg. length of target path (in blocks):                4046 (count: 38, min: 25, max: 177, avg: 106.47)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.539s
  Counterexample analysis:                             1.213s (Max:     0.084s, Calls: 38)
    Refinement sat check:                              0.374s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.055s
  Precision update:                                    0.033s
  ARG update:                                          0.155s

Length of refined path (in blocks):                    2816 (count: 38, min: 19, max: 153, avg: 74.11)
Number of affected states:                             1403 (count: 38, min: 3, max: 96, avg: 36.92)
Length (states) of path with itp 'true':               1375 (count: 38, min: 0, max: 105, avg: 36.18)
Length (states) of path with itp non-trivial itp:      1403 (count: 38, min: 3, max: 96, avg: 36.92)
Length (states) of path with itp 'false':                38 (count: 38, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          33 (count: 38, min: 0, max: 6, avg: 0.87)
Equal non-trivial interpolants along paths:            1332 (count: 38, min: 2, max: 95, avg: 35.05)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                38
Number of successful refinements:     38
Number of failed refinements:         0
Max. size of reached set before ref.: 3656
Max. size of reached set after ref.:  2492
Avg. size of reached set before ref.: 1249.13
Avg. size of reached set after ref.:  337.97

Total time for CEGAR algorithm:      19.952s
Time for refinements:                 1.728s
Average time for refinement:          0.045s
Max time for refinement:              0.097s

Code Coverage
-----------------------------
  Function coverage:      0.632
  Visited lines:          123
  Total lines:            434
  Line coverage:          0.283
  Visited conditions:     38
  Total conditions:       70
  Condition coverage:     0.543

CPAchecker general statistics
-----------------------------
Number of program locations:     623
Number of CFA edges:             669
Number of relevant variables:    110
Number of functions:             38
Number of loops:                 5
Size of reached set:             3506
  Number of reached locations:   168 (27%)
    Avg states per location:     20
    Max states per location:     93 (at node N553)
  Number of reached functions:   24 (63%)
  Number of partitions:          3442
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N444 (before lines 657-706), Function test called from node N524, stack depth 3 [4ab4f6d7], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.495s
  Time for loading CPAs:          0.776s
  Time for loading parser:        0.455s
  Time for CFA construction:      1.010s
    Time for parsing file(s):     0.346s
    Time for AST to CFA:          0.264s
    Time for CFA sanity check:    0.069s
    Time for post-processing:     0.211s
      Time for var class.:        0.080s
Time for Analysis:               19.952s
CPU time for analysis:           19.940s
Time for analyzing result:        0.003s
Total time for CPAchecker:       22.451s
Total CPU time for CPAchecker:   22.440s
Time for statistics:              0.132s

Time for Garbage Collector:       0.405s (in 41 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     43MB (    41 MiB) avg;     73MB (    70 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
