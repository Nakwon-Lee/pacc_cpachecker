scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product36_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ys9hdlpq/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 187: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 196: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 251: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 640: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 810: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 908: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 940: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 954: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            12613 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12429 (99%)
  Because of loop head:            99 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         85 (1%)
  Times precision was empty:       706 (6%)
  Times precision was {false}:     248 (2%)
  Times result was cached:         8011 (64%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3648 (29%)
  Times result was 'false':        1740 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         8281
  BDD entailment checks:           5787
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          20
Number of abstraction locations:          49
Max number of predicates per location:    14
Avg number of predicates per location:    6
Total predicates per abstraction:         68480
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 17.58
Number of irrelevant predicates:          16161 (24%)
Number of preds handled by boolean abs:   20861 (30%)
  Total number of models for allsat:      5765
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.58

Time for post operator:                  1.086s
  Time for path formula creation:        1.050s
Time for strengthen operator:            0.071s
Time for prec operator:                  9.550s
  Time for abstraction:                  9.279s (Max:     0.021s, Count: 12613)
    Boolean abstraction:                 3.064s
    Solving time:                        2.187s (Max:     0.013s)
    Model enumeration time:              0.322s
    Time for BDD construction:           0.220s (Max:     0.012s)
Time for merge operator:                 0.096s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     2.509s

Number of path formula cache hits:   33968 (62%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.941s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               3131
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       10991 (count: 31586, min: 0, max: 701, avg: 0.35)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.202s
Automaton transfers with branching:                0
Automaton transfer successors:                        47602 (count: 47602, min: 1, max: 1, avg: 1.00) [1 x 47602]

CPA algorithm statistics
------------------------
Number of iterations:            37140
Max size of waitlist:            21
Average size of waitlist:        7
Number of computed successors:   41695
Max successors for one state:    2
Number of times merged:          1247
Number of times stopped:         2630
Number of times breaked:         85

Total time for CPA algorithm:        13.115s (Max:     0.665s)
  Time for choose from waitlist:      0.053s
  Time for precision adjustment:     10.019s
  Time for transfer relation:         2.208s
  Time for merge operator:            0.168s
  Time for stop operator:             0.201s
  Time for adding to reached set:     0.139s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   85
Avg. length of target path (in blocks):                4557 (count: 85, min: 26, max: 117, avg: 53.61)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.190s
  Counterexample analysis:                             0.838s (Max:     0.041s, Calls: 85)
    Refinement sat check:                              0.336s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.073s
  Precision update:                                    0.059s
  ARG update:                                          0.150s

Length of refined path (in blocks):                    3556 (count: 85, min: 14, max: 108, avg: 41.84)
Number of affected states:                             1700 (count: 85, min: 1, max: 53, avg: 20.00)
Length (states) of path with itp 'true':               1771 (count: 85, min: 0, max: 66, avg: 20.84)
Length (states) of path with itp non-trivial itp:      1700 (count: 85, min: 1, max: 53, avg: 20.00)
Length (states) of path with itp 'false':                85 (count: 85, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          40 (count: 85, min: 0, max: 4, avg: 0.47)
Equal non-trivial interpolants along paths:            1575 (count: 85, min: 0, max: 52, avg: 18.53)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                85
Number of successful refinements:     85
Number of failed refinements:         0
Max. size of reached set before ref.: 3042
Max. size of reached set after ref.:  2184
Avg. size of reached set before ref.: 1290.31
Avg. size of reached set after ref.:  881.39

Total time for CEGAR algorithm:      14.543s
Time for refinements:                 1.372s
Average time for refinement:          0.016s
Max time for refinement:              0.053s

Code Coverage
-----------------------------
  Function coverage:      0.632
  Visited lines:          123
  Total lines:            434
  Line coverage:          0.283
  Visited conditions:     38
  Total conditions:       70
  Condition coverage:     0.543

CPAchecker general statistics
-----------------------------
Number of program locations:     623
Number of CFA edges:             669
Number of relevant variables:    110
Number of functions:             38
Number of loops:                 5
Size of reached set:             2568
  Number of reached locations:   168 (27%)
    Avg states per location:     15
    Max states per location:     71 (at node N553)
  Number of reached functions:   24 (63%)
  Number of partitions:          2523
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N444 (before lines 657-706), Function test called from node N524, stack depth 3 [3d7d920b], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.042s
  Time for loading CPAs:          0.578s
  Time for loading parser:        0.420s
  Time for CFA construction:      0.940s
    Time for parsing file(s):     0.335s
    Time for AST to CFA:          0.257s
    Time for CFA sanity check:    0.060s
    Time for post-processing:     0.183s
      Time for var class.:        0.069s
Time for Analysis:               14.543s
CPU time for analysis:           14.540s
Time for analyzing result:        0.002s
Total time for CPAchecker:       16.588s
Total CPU time for CPAchecker:   16.590s
Time for statistics:              0.107s

Time for Garbage Collector:       0.288s (in 35 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     42MB (    40 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
