scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product36_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pz5zsj_5/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 187: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 196: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 251: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 640: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 810: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 908: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 940: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 954: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            58837 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  58221 (99%)
  Because of loop head:            495 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         121 (0%)
  Times precision was empty:       3320 (6%)
  Times precision was {false}:     458 (1%)
  Times result was cached:         46520 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8539 (15%)
  Times result was 'false':        8041 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         51666
  BDD entailment checks:           41954
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          20
Number of abstraction locations:          49
Max number of predicates per location:    11
Avg number of predicates per location:    6
Total predicates per abstraction:         293990
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 32.68
Number of irrelevant predicates:          111879 (38%)
Number of preds handled by boolean abs:   40536 (14%)
  Total number of models for allsat:      11344
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.33

Time for post operator:                  2.118s
  Time for path formula creation:        2.005s
Time for strengthen operator:            0.192s
Time for prec operator:                 18.712s
  Time for abstraction:                 17.947s (Max:     0.018s, Count: 58837)
    Boolean abstraction:                 4.651s
    Solving time:                        3.475s (Max:     0.013s)
    Model enumeration time:              0.463s
    Time for BDD construction:           0.255s (Max:     0.013s)
Time for merge operator:                 0.083s
Time for coverage check:                 0.056s
  Time for BDD entailment checks:        0.045s
Total time for SMT solver (w/o itp):     3.938s

Number of path formula cache hits:   190578 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.527s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               2928
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       20498 (count: 101352, min: 0, max: 603, avg: 0.20)
Time for BDD node cleanup:                             0.026s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.433s
Automaton transfers with branching:                0
Automaton transfer successors:                       216959 (count: 216959, min: 1, max: 1, avg: 1.00) [1 x 216959]

CPA algorithm statistics
------------------------
Number of iterations:            169536
Max size of waitlist:            57
Average size of waitlist:        25
Number of computed successors:   190541
Max successors for one state:    2
Number of times merged:          4856
Number of times stopped:         12104
Number of times breaked:         121

Total time for CPA algorithm:        25.817s (Max:     0.956s)
  Time for choose from waitlist:      0.131s
  Time for precision adjustment:     19.774s
  Time for transfer relation:         4.290s
  Time for merge operator:            0.267s
  Time for stop operator:             0.334s
  Time for adding to reached set:     0.324s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   121
Avg. length of target path (in blocks):                7162 (count: 121, min: 25, max: 117, avg: 59.19)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.914s
  Counterexample analysis:                             1.289s (Max:     0.043s, Calls: 121)
    Refinement sat check:                              0.489s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.061s
  Precision update:                                    0.078s
  ARG update:                                          0.391s

Length of refined path (in blocks):                    5238 (count: 121, min: 14, max: 108, avg: 43.29)
Number of affected states:                             2429 (count: 121, min: 1, max: 61, avg: 20.07)
Length (states) of path with itp 'true':               2688 (count: 121, min: 0, max: 61, avg: 22.21)
Length (states) of path with itp non-trivial itp:      2429 (count: 121, min: 1, max: 61, avg: 20.07)
Length (states) of path with itp 'false':               121 (count: 121, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         106 (count: 121, min: 0, max: 4, avg: 0.88)
Equal non-trivial interpolants along paths:            2202 (count: 121, min: 0, max: 60, avg: 18.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                121
Number of successful refinements:     121
Number of failed refinements:         0
Max. size of reached set before ref.: 6324
Max. size of reached set after ref.:  5845
Avg. size of reached set before ref.: 3053.12
Avg. size of reached set after ref.:  1664.67

Total time for CEGAR algorithm:      28.203s
Time for refinements:                 2.249s
Average time for refinement:          0.018s
Max time for refinement:              0.063s

Code Coverage
-----------------------------
  Function coverage:      0.632
  Visited lines:          123
  Total lines:            434
  Line coverage:          0.283
  Visited conditions:     38
  Total conditions:       70
  Condition coverage:     0.543

CPAchecker general statistics
-----------------------------
Number of program locations:     623
Number of CFA edges:             669
Number of relevant variables:    110
Number of functions:             38
Number of loops:                 5
Size of reached set:             2395
  Number of reached locations:   168 (27%)
    Avg states per location:     14
    Max states per location:     60 (at node N553)
  Number of reached functions:   24 (63%)
  Number of partitions:          2357
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N461 (after line 679), Function test called from node N524, stack depth 3 [6c43787d], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.138s
  Time for loading CPAs:          0.591s
  Time for loading parser:        0.507s
  Time for CFA construction:      0.934s
    Time for parsing file(s):     0.341s
    Time for AST to CFA:          0.236s
    Time for CFA sanity check:    0.055s
    Time for post-processing:     0.212s
      Time for var class.:        0.091s
Time for Analysis:               28.203s
CPU time for analysis:           28.200s
Time for analyzing result:        0.001s
Total time for CPAchecker:       30.345s
Total CPU time for CPAchecker:   30.330s
Time for statistics:              0.092s

Time for Garbage Collector:       0.950s (in 126 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 87MB (    83 MiB) max;     52MB (    50 MiB) avg;     92MB (    88 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8016MB (  7644 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
