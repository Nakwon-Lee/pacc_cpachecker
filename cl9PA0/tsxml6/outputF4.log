scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product20_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9imqh4d7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 149: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 316: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 325: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 380: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 452: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 493: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 813: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 859: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 871: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 894: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 650: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2158 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2104 (97%)
  Because of loop head:            41 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (1%)
  Times precision was empty:       418 (19%)
  Times precision was {false}:     56 (3%)
  Times result was cached:         1606 (74%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      78 (4%)
  Times result was 'false':        269 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         462
  BDD entailment checks:           328
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          4
Number of abstraction locations:          39
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         2214
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 16.52
Number of irrelevant predicates:          682 (31%)
Number of preds handled by boolean abs:   92 (4%)
  Total number of models for allsat:      84
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  0.292s
  Time for path formula creation:        0.274s
Time for strengthen operator:            0.033s
Time for prec operator:                  0.782s
  Time for abstraction:                  0.671s (Max:     0.014s, Count: 2158)
    Boolean abstraction:                 0.052s
    Solving time:                        0.046s (Max:     0.009s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.010s (Max:     0.004s)
Time for merge operator:                 0.010s
Time for coverage check:                 0.007s
  Time for BDD entailment checks:        0.007s
Total time for SMT solver (w/o itp):     0.048s

Number of path formula cache hits:   7364 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.213s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         149 (count: 1536, min: 0, max: 88, avg: 0.10)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.093s
Automaton transfers with branching:                0
Automaton transfer successors:                         7895 (count: 7895, min: 1, max: 1, avg: 1.00) [1 x 7895]

CPA algorithm statistics
------------------------
Number of iterations:            6161
Max size of waitlist:            19
Average size of waitlist:        6
Number of computed successors:   6911
Max successors for one state:    2
Number of times merged:          67
Number of times stopped:         346
Number of times breaked:         13

Total time for CPA algorithm:         2.027s (Max:     0.288s)
  Time for choose from waitlist:      0.035s
  Time for precision adjustment:      1.020s
  Time for transfer relation:         0.736s
  Time for merge operator:            0.028s
  Time for stop operator:             0.038s
  Time for adding to reached set:     0.041s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 348 (count: 13, min: 21, max: 36, avg: 26.77)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.158s
  Counterexample analysis:                             0.099s (Max:     0.023s, Calls: 13)
    Refinement sat check:                              0.042s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.010s
  ARG update:                                          0.024s

Length of refined path (in blocks):                     244 (count: 13, min: 13, max: 28, avg: 18.77)
Number of affected states:                              231 (count: 13, min: 12, max: 27, avg: 17.77)
Length (states) of path with itp 'true':                  0 (count: 13, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       231 (count: 13, min: 12, max: 27, avg: 17.77)
Length (states) of path with itp 'false':                13 (count: 13, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 13, min: 0, max: 1, avg: 0.08)
Equal non-trivial interpolants along paths:             217 (count: 13, min: 11, max: 26, avg: 16.69)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 821
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 421.38
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.230s
Time for refinements:                 0.203s
Average time for refinement:          0.015s
Max time for refinement:              0.046s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          103
  Total lines:            423
  Line coverage:          0.243
  Visited conditions:     30
  Total conditions:       66
  Condition coverage:     0.455

CPAchecker general statistics
-----------------------------
Number of program locations:     604
Number of CFA edges:             647
Number of relevant variables:    109
Number of functions:             36
Number of loops:                 5
Size of reached set:             858
  Number of reached locations:   139 (23%)
    Avg states per location:     6
    Max states per location:     40 (at node N599)
  Number of reached functions:   18 (50%)
  Number of partitions:          856
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N80 (before lines 165-214), Function test called from node N52, stack depth 3 [1b2df3aa], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.931s
  Time for loading CPAs:          0.530s
  Time for loading parser:        0.428s
  Time for CFA construction:      0.857s
    Time for parsing file(s):     0.314s
    Time for AST to CFA:          0.207s
    Time for CFA sanity check:    0.046s
    Time for post-processing:     0.174s
      Time for var class.:        0.063s
Time for Analysis:                2.230s
CPU time for analysis:            2.230s
Time for analyzing result:        0.002s
Total time for CPAchecker:        4.163s
Total CPU time for CPAchecker:    4.160s
Time for statistics:              0.075s

Time for Garbage Collector:       0.103s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     34MB (    33 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     26MB (    25 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8041MB (  7668 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
