scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product20_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uv9q_czc/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 149: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 316: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 325: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 380: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 452: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 493: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 813: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 859: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 871: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 894: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 650: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            6226 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6038 (97%)
  Because of loop head:            152 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36 (1%)
  Times precision was empty:       507 (8%)
  Times precision was {false}:     137 (2%)
  Times result was cached:         4759 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      823 (13%)
  Times result was 'false':        885 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         2978
  BDD entailment checks:           2696
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          39
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         16740
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 17.44
Number of irrelevant predicates:          4695 (28%)
Number of preds handled by boolean abs:   1968 (12%)
  Total number of models for allsat:      857
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  0.766s
  Time for path formula creation:        0.722s
Time for strengthen operator:            0.053s
Time for prec operator:                  2.778s
  Time for abstraction:                  2.614s (Max:     0.018s, Count: 6226)
    Boolean abstraction:                 0.579s
    Solving time:                        0.413s (Max:     0.013s)
    Model enumeration time:              0.038s
    Time for BDD construction:           0.071s (Max:     0.012s)
Time for merge operator:                 0.007s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):     0.451s

Number of path formula cache hits:   18191 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.629s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               298
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1714 (count: 9023, min: 0, max: 384, avg: 0.19)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.275s
Automaton transfers with branching:                0
Automaton transfer successors:                        22074 (count: 22074, min: 1, max: 1, avg: 1.00) [1 x 22074]

CPA algorithm statistics
------------------------
Number of iterations:            17271
Max size of waitlist:            28
Average size of waitlist:        14
Number of computed successors:   19463
Max successors for one state:    2
Number of times merged:          141
Number of times stopped:         850
Number of times breaked:         36

Total time for CPA algorithm:         5.176s (Max:     0.426s)
  Time for choose from waitlist:      0.037s
  Time for precision adjustment:      3.080s
  Time for transfer relation:         1.609s
  Time for merge operator:            0.048s
  Time for stop operator:             0.111s
  Time for adding to reached set:     0.057s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                2022 (count: 36, min: 19, max: 86, avg: 56.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.555s
  Counterexample analysis:                             0.339s (Max:     0.018s, Calls: 36)
    Refinement sat check:                              0.155s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.051s
  Precision update:                                    0.039s
  ARG update:                                          0.073s

Length of refined path (in blocks):                    1257 (count: 36, min: 13, max: 62, avg: 34.92)
Number of affected states:                              710 (count: 36, min: 2, max: 50, avg: 19.72)
Length (states) of path with itp 'true':                511 (count: 36, min: 0, max: 34, avg: 14.19)
Length (states) of path with itp non-trivial itp:       710 (count: 36, min: 2, max: 50, avg: 19.72)
Length (states) of path with itp 'false':                36 (count: 36, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 36, min: 0, max: 1, avg: 0.11)
Equal non-trivial interpolants along paths:             670 (count: 36, min: 1, max: 49, avg: 18.61)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     36
Number of failed refinements:         0
Max. size of reached set before ref.: 1464
Max. size of reached set after ref.:  1050
Avg. size of reached set before ref.: 787.58
Avg. size of reached set after ref.:  331.81

Total time for CEGAR algorithm:       5.845s
Time for refinements:                 0.661s
Average time for refinement:          0.018s
Max time for refinement:              0.040s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          103
  Total lines:            423
  Line coverage:          0.243
  Visited conditions:     30
  Total conditions:       66
  Condition coverage:     0.455

CPAchecker general statistics
-----------------------------
Number of program locations:     604
Number of CFA edges:             647
Number of relevant variables:    109
Number of functions:             36
Number of loops:                 5
Size of reached set:             1321
  Number of reached locations:   139 (23%)
    Avg states per location:     9
    Max states per location:     55 (at node N113)
  Number of reached functions:   18 (50%)
  Number of partitions:          1276
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N80 (before lines 165-214), Function test called from node N52, stack depth 3 [1a59500b], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.157s
  Time for loading CPAs:          0.548s
  Time for loading parser:        0.525s
  Time for CFA construction:      0.969s
    Time for parsing file(s):     0.328s
    Time for AST to CFA:          0.246s
    Time for CFA sanity check:    0.089s
    Time for post-processing:     0.208s
      Time for var class.:        0.083s
Time for Analysis:                5.846s
CPU time for analysis:            5.850s
Time for analyzing result:        0.001s
Total time for CPAchecker:        8.007s
Total CPU time for CPAchecker:    8.010s
Time for statistics:              0.092s

Time for Garbage Collector:       0.161s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     37MB (    36 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8056MB (  7683 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
