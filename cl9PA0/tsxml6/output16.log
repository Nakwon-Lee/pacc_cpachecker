scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product20_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_en7r7ewm/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 149: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 316: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 325: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 380: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 452: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 493: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 813: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 859: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 871: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 894: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 650: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2410 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2325 (96%)
  Because of loop head:            61 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24 (1%)
  Times precision was empty:       462 (19%)
  Times precision was {false}:     57 (2%)
  Times result was cached:         1705 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      186 (8%)
  Times result was 'false':        361 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         375
  BDD entailment checks:           249
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          39
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         4975
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 20.47
Number of irrelevant predicates:          1121 (23%)
Number of preds handled by boolean abs:   355 (7%)
  Total number of models for allsat:      212
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.14

Time for post operator:                  0.287s
  Time for path formula creation:        0.276s
Time for strengthen operator:            0.042s
Time for prec operator:                  1.132s
  Time for abstraction:                  1.033s (Max:     0.017s, Count: 2410)
    Boolean abstraction:                 0.239s
    Solving time:                        0.142s (Max:     0.012s)
    Model enumeration time:              0.023s
    Time for BDD construction:           0.049s (Max:     0.008s)
Time for merge operator:                 0.013s
Time for coverage check:                 0.006s
  Time for BDD entailment checks:        0.006s
Total time for SMT solver (w/o itp):     0.165s

Number of path formula cache hits:   8158 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.256s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               245
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         384 (count: 2261, min: 0, max: 214, avg: 0.17)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.065s
Automaton transfers with branching:                0
Automaton transfer successors:                         8671 (count: 8671, min: 1, max: 1, avg: 1.00) [1 x 8671]

CPA algorithm statistics
------------------------
Number of iterations:            6816
Max size of waitlist:            15
Average size of waitlist:        6
Number of computed successors:   7610
Max successors for one state:    2
Number of times merged:          63
Number of times stopped:         234
Number of times breaked:         24

Total time for CPA algorithm:         2.308s (Max:     0.218s)
  Time for choose from waitlist:      0.010s
  Time for precision adjustment:      1.327s
  Time for transfer relation:         0.727s
  Time for merge operator:            0.019s
  Time for stop operator:             0.072s
  Time for adding to reached set:     0.044s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                 664 (count: 24, min: 19, max: 46, avg: 27.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.272s
  Counterexample analysis:                             0.186s (Max:     0.022s, Calls: 24)
    Refinement sat check:                              0.068s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.022s
  Precision update:                                    0.015s
  ARG update:                                          0.036s

Length of refined path (in blocks):                     507 (count: 24, min: 13, max: 43, avg: 21.13)
Number of affected states:                              457 (count: 24, min: 11, max: 42, avg: 19.04)
Length (states) of path with itp 'true':                 26 (count: 24, min: 0, max: 13, avg: 1.08)
Length (states) of path with itp non-trivial itp:       457 (count: 24, min: 11, max: 42, avg: 19.04)
Length (states) of path with itp 'false':                24 (count: 24, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           6 (count: 24, min: 0, max: 1, avg: 0.25)
Equal non-trivial interpolants along paths:             427 (count: 24, min: 10, max: 40, avg: 17.79)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 547
Max. size of reached set after ref.:  129
Avg. size of reached set before ref.: 269.50
Avg. size of reached set after ref.:  13.50

Total time for CEGAR algorithm:       2.628s
Time for refinements:                 0.319s
Average time for refinement:          0.013s
Max time for refinement:              0.039s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          103
  Total lines:            423
  Line coverage:          0.243
  Visited conditions:     30
  Total conditions:       66
  Condition coverage:     0.455

CPAchecker general statistics
-----------------------------
Number of program locations:     604
Number of CFA edges:             647
Number of relevant variables:    109
Number of functions:             36
Number of loops:                 5
Size of reached set:             872
  Number of reached locations:   139 (23%)
    Avg states per location:     6
    Max states per location:     34 (at node N599)
  Number of reached functions:   18 (50%)
  Number of partitions:          861
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N80 (before lines 165-214), Function test called from node N52, stack depth 3 [9b5f3c7], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.279s
  Time for loading CPAs:          0.587s
  Time for loading parser:        0.503s
  Time for CFA construction:      1.048s
    Time for parsing file(s):     0.371s
    Time for AST to CFA:          0.241s
    Time for CFA sanity check:    0.069s
    Time for post-processing:     0.247s
      Time for var class.:        0.116s
Time for Analysis:                2.629s
CPU time for analysis:            2.630s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.915s
Total CPU time for CPAchecker:    4.920s
Time for statistics:              0.077s

Time for Garbage Collector:       0.089s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     34MB (    32 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8039MB (  7667 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
