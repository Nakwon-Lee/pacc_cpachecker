scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product20_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_g6u0khpm/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 149: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 316: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 325: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 380: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 452: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 493: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 813: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 859: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 871: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 894: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 650: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3464 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3387 (98%)
  Because of loop head:            55 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         22 (1%)
  Times precision was empty:       1043 (30%)
  Times precision was {false}:     71 (2%)
  Times result was cached:         2230 (64%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      120 (3%)
  Times result was 'false':        383 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         783
  BDD entailment checks:           517
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          39
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         4566
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 23.91
Number of irrelevant predicates:          1994 (44%)
Number of preds handled by boolean abs:   159 (3%)
  Total number of models for allsat:      132
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.10

Time for post operator:                  0.389s
  Time for path formula creation:        0.362s
Time for strengthen operator:            0.061s
Time for prec operator:                  1.040s
  Time for abstraction:                  0.906s (Max:     0.014s, Count: 3464)
    Boolean abstraction:                 0.117s
    Solving time:                        0.082s (Max:     0.012s)
    Model enumeration time:              0.005s
    Time for BDD construction:           0.024s (Max:     0.006s)
Time for merge operator:                 0.016s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     0.087s

Number of path formula cache hits:   12018 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.324s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               213
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         201 (count: 2692, min: 0, max: 98, avg: 0.07)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.107s
Automaton transfers with branching:                0
Automaton transfer successors:                        12511 (count: 12511, min: 1, max: 1, avg: 1.00) [1 x 12511]

CPA algorithm statistics
------------------------
Number of iterations:            9833
Max size of waitlist:            21
Average size of waitlist:        9
Number of computed successors:   10945
Max successors for one state:    2
Number of times merged:          133
Number of times stopped:         513
Number of times breaked:         22

Total time for CPA algorithm:         2.591s (Max:     0.264s)
  Time for choose from waitlist:      0.044s
  Time for precision adjustment:      1.230s
  Time for transfer relation:         0.948s
  Time for merge operator:            0.068s
  Time for stop operator:             0.125s
  Time for adding to reached set:     0.081s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   22
Avg. length of target path (in blocks):                 538 (count: 22, min: 19, max: 38, avg: 24.45)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.325s
  Counterexample analysis:                             0.181s (Max:     0.018s, Calls: 22)
    Refinement sat check:                              0.075s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.026s
  Precision update:                                    0.022s
  ARG update:                                          0.074s

Length of refined path (in blocks):                     394 (count: 22, min: 13, max: 30, avg: 17.91)
Number of affected states:                              336 (count: 22, min: 2, max: 29, avg: 15.27)
Length (states) of path with itp 'true':                 36 (count: 22, min: 0, max: 12, avg: 1.64)
Length (states) of path with itp non-trivial itp:       336 (count: 22, min: 2, max: 29, avg: 15.27)
Length (states) of path with itp 'false':                22 (count: 22, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 22, min: 0, max: 1, avg: 0.23)
Equal non-trivial interpolants along paths:             309 (count: 22, min: 1, max: 28, avg: 14.05)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 974
Max. size of reached set after ref.:  283
Avg. size of reached set before ref.: 453.18
Avg. size of reached set after ref.:  38.95

Total time for CEGAR algorithm:       2.975s
Time for refinements:                 0.383s
Average time for refinement:          0.017s
Max time for refinement:              0.051s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          103
  Total lines:            423
  Line coverage:          0.243
  Visited conditions:     30
  Total conditions:       66
  Condition coverage:     0.455

CPAchecker general statistics
-----------------------------
Number of program locations:     604
Number of CFA edges:             647
Number of relevant variables:    109
Number of functions:             36
Number of loops:                 5
Size of reached set:             937
  Number of reached locations:   139 (23%)
    Avg states per location:     6
    Max states per location:     43 (at node N599)
  Number of reached functions:   18 (50%)
  Number of partitions:          933
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N80 (before lines 165-214), Function test called from node N52, stack depth 3 [7bc2ae16], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.017s
  Time for loading CPAs:          0.508s
  Time for loading parser:        0.524s
  Time for CFA construction:      0.875s
    Time for parsing file(s):     0.318s
    Time for AST to CFA:          0.194s
    Time for CFA sanity check:    0.059s
    Time for post-processing:     0.206s
      Time for var class.:        0.102s
Time for Analysis:                2.975s
CPU time for analysis:            2.980s
Time for analyzing result:        0.006s
Total time for CPAchecker:        4.997s
Total CPU time for CPAchecker:    5.000s
Time for statistics:              0.057s

Time for Garbage Collector:       0.091s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    57 MiB) max;     35MB (    33 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7984MB (  7614 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
