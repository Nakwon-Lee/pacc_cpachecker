scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product33_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2v3qy64v/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 581: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 636: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 674: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 772: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 830: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 862: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 876: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            10996 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10809 (98%)
  Because of loop head:            144 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         43 (0%)
  Times precision was empty:       1583 (14%)
  Times precision was {false}:     147 (1%)
  Times result was cached:         7291 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1975 (18%)
  Times result was 'false':        1187 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         6729
  BDD entailment checks:           3237
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          17
Number of abstraction locations:          43
Max number of predicates per location:    9
Avg number of predicates per location:    5
Total predicates per abstraction:         49551
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 23.35
Number of irrelevant predicates:          17730 (36%)
Number of preds handled by boolean abs:   8435 (17%)
  Total number of models for allsat:      2949
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.49

Time for post operator:                  1.036s
  Time for path formula creation:        0.974s
Time for strengthen operator:            0.110s
Time for prec operator:                  6.736s
  Time for abstraction:                  6.448s (Max:     0.046s, Count: 10996)
    Boolean abstraction:                 1.937s
    Solving time:                        1.331s (Max:     0.045s)
    Model enumeration time:              0.175s
    Time for BDD construction:           0.226s (Max:     0.012s)
Time for merge operator:                 0.085s
Time for coverage check:                 0.038s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     1.506s

Number of path formula cache hits:   38533 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.860s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1589
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5993 (count: 18505, min: 0, max: 561, avg: 0.32)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.289s
Automaton transfers with branching:                0
Automaton transfer successors:                        44376 (count: 44376, min: 1, max: 1, avg: 1.00) [1 x 44376]

CPA algorithm statistics
------------------------
Number of iterations:            34556
Max size of waitlist:            48
Average size of waitlist:        15
Number of computed successors:   38768
Max successors for one state:    2
Number of times merged:          1746
Number of times stopped:         2600
Number of times breaked:         43

Total time for CPA algorithm:        10.189s (Max:     0.653s)
  Time for choose from waitlist:      0.085s
  Time for precision adjustment:      7.167s
  Time for transfer relation:         2.126s
  Time for merge operator:            0.196s
  Time for stop operator:             0.152s
  Time for adding to reached set:     0.136s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   43
Avg. length of target path (in blocks):                2255 (count: 43, min: 25, max: 108, avg: 52.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.775s
  Counterexample analysis:                             0.449s (Max:     0.023s, Calls: 43)
    Refinement sat check:                              0.208s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.050s
  Precision update:                                    0.079s
  ARG update:                                          0.141s

Length of refined path (in blocks):                    1641 (count: 43, min: 14, max: 75, avg: 38.16)
Number of affected states:                             1039 (count: 43, min: 1, max: 44, avg: 24.16)
Length (states) of path with itp 'true':                559 (count: 43, min: 0, max: 47, avg: 13.00)
Length (states) of path with itp non-trivial itp:      1039 (count: 43, min: 1, max: 44, avg: 24.16)
Length (states) of path with itp 'false':                43 (count: 43, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          15 (count: 43, min: 0, max: 2, avg: 0.35)
Equal non-trivial interpolants along paths:             981 (count: 43, min: 0, max: 43, avg: 22.81)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                43
Number of successful refinements:     43
Number of failed refinements:         0
Max. size of reached set before ref.: 2564
Max. size of reached set after ref.:  1464
Avg. size of reached set before ref.: 1144.98
Avg. size of reached set after ref.:  370.02

Total time for CEGAR algorithm:      11.112s
Time for refinements:                 0.905s
Average time for refinement:          0.021s
Max time for refinement:              0.054s

Code Coverage
-----------------------------
  Function coverage:      0.583
  Visited lines:          113
  Total lines:            426
  Line coverage:          0.265
  Visited conditions:     36
  Total conditions:       68
  Condition coverage:     0.529

CPAchecker general statistics
-----------------------------
Number of program locations:     607
Number of CFA edges:             651
Number of relevant variables:    110
Number of functions:             36
Number of loops:                 5
Size of reached set:             1659
  Number of reached locations:   152 (25%)
    Avg states per location:     10
    Max states per location:     44 (at node N600)
  Number of reached functions:   21 (58%)
  Number of partitions:          1618
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N326 (after line 442), Function test called from node N502, stack depth 3 [4d4600fb], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.908s
  Time for loading CPAs:          0.511s
  Time for loading parser:        0.412s
  Time for CFA construction:      0.822s
    Time for parsing file(s):     0.277s
    Time for AST to CFA:          0.205s
    Time for CFA sanity check:    0.049s
    Time for post-processing:     0.181s
      Time for var class.:        0.074s
Time for Analysis:               11.113s
CPU time for analysis:           11.110s
Time for analyzing result:        0.001s
Total time for CPAchecker:       13.024s
Total CPU time for CPAchecker:   13.010s
Time for statistics:              0.092s

Time for Garbage Collector:       0.263s (in 26 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     40MB (    38 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8021MB (  7649 MiB) max;   8007MB (  7636 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
