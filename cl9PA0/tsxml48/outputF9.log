scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product33_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_as7qe6j0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 581: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 636: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 674: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 772: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 830: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 862: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 876: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4450 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4357 (98%)
  Because of loop head:            53 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         40 (1%)
  Times precision was empty:       290 (7%)
  Times precision was {false}:     117 (3%)
  Times result was cached:         2852 (64%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1191 (27%)
  Times result was 'false':        571 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         2788
  BDD entailment checks:           1294
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          17
Number of abstraction locations:          43
Max number of predicates per location:    9
Avg number of predicates per location:    5
Total predicates per abstraction:         21182
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 16.19
Number of irrelevant predicates:          5875 (28%)
Number of preds handled by boolean abs:   5251 (25%)
  Total number of models for allsat:      1699
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.43

Time for post operator:                  0.726s
  Time for path formula creation:        0.697s
Time for strengthen operator:            0.046s
Time for prec operator:                  3.961s
  Time for abstraction:                  3.810s (Max:     0.017s, Count: 4450)
    Boolean abstraction:                 1.238s
    Solving time:                        0.858s (Max:     0.013s)
    Model enumeration time:              0.136s
    Time for BDD construction:           0.102s (Max:     0.012s)
Time for merge operator:                 0.027s
Time for coverage check:                 0.027s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     0.994s

Number of path formula cache hits:   12604 (60%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.651s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1479
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4062 (count: 10187, min: 0, max: 727, avg: 0.40)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.143s
Automaton transfers with branching:                0
Automaton transfer successors:                        18213 (count: 18213, min: 1, max: 1, avg: 1.00) [1 x 18213]

CPA algorithm statistics
------------------------
Number of iterations:            14102
Max size of waitlist:            14
Average size of waitlist:        4
Number of computed successors:   15902
Max successors for one state:    2
Number of times merged:          747
Number of times stopped:         1082
Number of times breaked:         40

Total time for CPA algorithm:         6.216s (Max:     0.402s)
  Time for choose from waitlist:      0.045s
  Time for precision adjustment:      4.257s
  Time for transfer relation:         1.426s
  Time for merge operator:            0.103s
  Time for stop operator:             0.125s
  Time for adding to reached set:     0.063s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   40
Avg. length of target path (in blocks):                2012 (count: 40, min: 26, max: 96, avg: 50.30)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.610s
  Counterexample analysis:                             0.427s (Max:     0.022s, Calls: 40)
    Refinement sat check:                              0.205s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.063s
  Precision update:                                    0.041s
  ARG update:                                          0.046s

Length of refined path (in blocks):                    1514 (count: 40, min: 14, max: 82, avg: 37.85)
Number of affected states:                              794 (count: 40, min: 1, max: 44, avg: 19.85)
Length (states) of path with itp 'true':                680 (count: 40, min: 0, max: 64, avg: 17.00)
Length (states) of path with itp non-trivial itp:       794 (count: 40, min: 1, max: 44, avg: 19.85)
Length (states) of path with itp 'false':                40 (count: 40, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          13 (count: 40, min: 0, max: 2, avg: 0.32)
Equal non-trivial interpolants along paths:             741 (count: 40, min: 0, max: 41, avg: 18.52)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                40
Number of successful refinements:     40
Number of failed refinements:         0
Max. size of reached set before ref.: 1717
Max. size of reached set after ref.:  1459
Avg. size of reached set before ref.: 776.68
Avg. size of reached set after ref.:  465.25

Total time for CEGAR algorithm:       6.981s
Time for refinements:                 0.737s
Average time for refinement:          0.018s
Max time for refinement:              0.043s

Code Coverage
-----------------------------
  Function coverage:      0.583
  Visited lines:          113
  Total lines:            426
  Line coverage:          0.265
  Visited conditions:     36
  Total conditions:       68
  Condition coverage:     0.529

CPAchecker general statistics
-----------------------------
Number of program locations:     607
Number of CFA edges:             651
Number of relevant variables:    110
Number of functions:             36
Number of loops:                 5
Size of reached set:             1793
  Number of reached locations:   152 (25%)
    Avg states per location:     11
    Max states per location:     56 (at node N600)
  Number of reached functions:   21 (58%)
  Number of partitions:          1745
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N309 (before lines 420-465), Function test called from node N502, stack depth 3 [6842c101], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.267s
  Time for loading CPAs:          0.592s
  Time for loading parser:        0.574s
  Time for CFA construction:      1.006s
    Time for parsing file(s):     0.375s
    Time for AST to CFA:          0.235s
    Time for CFA sanity check:    0.071s
    Time for post-processing:     0.200s
      Time for var class.:        0.078s
Time for Analysis:                6.988s
CPU time for analysis:            6.990s
Time for analyzing result:        0.002s
Total time for CPAchecker:        9.258s
Total CPU time for CPAchecker:    9.260s
Time for statistics:              0.080s

Time for Garbage Collector:       0.142s (in 14 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     38MB (    37 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     31MB (    29 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8088MB (  7714 MiB) max;   8059MB (  7685 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
