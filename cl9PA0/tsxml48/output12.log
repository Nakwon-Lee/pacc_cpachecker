scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product33_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_l36zzirt/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 581: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 636: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 674: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 772: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 830: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 862: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 876: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            15292 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14980 (98%)
  Because of loop head:            242 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         70 (0%)
  Times precision was empty:       527 (3%)
  Times precision was {false}:     223 (1%)
  Times result was cached:         12004 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2538 (17%)
  Times result was 'false':        1687 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         8904
  BDD entailment checks:           4736
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          19
Number of abstraction locations:          46
Max number of predicates per location:    11
Avg number of predicates per location:    5
Total predicates per abstraction:         84436
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 30.58
Number of irrelevant predicates:          31716 (38%)
Number of preds handled by boolean abs:   12547 (15%)
  Total number of models for allsat:      5091
  Max number of models for allsat:        8
  Avg number of models for allsat:        2.01

Time for post operator:                  1.191s
  Time for path formula creation:        1.133s
Time for strengthen operator:            0.062s
Time for prec operator:                  8.925s
  Time for abstraction:                  8.586s (Max:     0.027s, Count: 15292)
    Boolean abstraction:                 2.720s
    Solving time:                        1.922s (Max:     0.013s)
    Model enumeration time:              0.337s
    Time for BDD construction:           0.232s (Max:     0.012s)
Time for merge operator:                 0.101s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     2.259s

Number of path formula cache hits:   52315 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.954s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               2088
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7388 (count: 22787, min: 0, max: 680, avg: 0.32)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.248s
Automaton transfers with branching:                0
Automaton transfer successors:                        60424 (count: 60424, min: 1, max: 1, avg: 1.00) [1 x 60424]

CPA algorithm statistics
------------------------
Number of iterations:            46209
Max size of waitlist:            33
Average size of waitlist:        13
Number of computed successors:   52067
Max successors for one state:    2
Number of times merged:          2084
Number of times stopped:         3820
Number of times breaked:         70

Total time for CPA algorithm:        12.788s (Max:     0.850s)
  Time for choose from waitlist:      0.077s
  Time for precision adjustment:      9.466s
  Time for transfer relation:         2.385s
  Time for merge operator:            0.211s
  Time for stop operator:             0.142s
  Time for adding to reached set:     0.142s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   70
Avg. length of target path (in blocks):                4367 (count: 70, min: 25, max: 100, avg: 62.39)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.181s
  Counterexample analysis:                             0.825s (Max:     0.045s, Calls: 70)
    Refinement sat check:                              0.381s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.075s
  Precision update:                                    0.048s
  ARG update:                                          0.130s

Length of refined path (in blocks):                    3356 (count: 70, min: 14, max: 86, avg: 47.94)
Number of affected states:                             1303 (count: 70, min: 1, max: 54, avg: 18.61)
Length (states) of path with itp 'true':               1983 (count: 70, min: 0, max: 64, avg: 28.33)
Length (states) of path with itp non-trivial itp:      1303 (count: 70, min: 1, max: 54, avg: 18.61)
Length (states) of path with itp 'false':                70 (count: 70, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          15 (count: 70, min: 0, max: 3, avg: 0.21)
Equal non-trivial interpolants along paths:            1218 (count: 70, min: 0, max: 51, avg: 17.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                70
Number of successful refinements:     70
Number of failed refinements:         0
Max. size of reached set before ref.: 2221
Max. size of reached set after ref.:  1784
Avg. size of reached set before ref.: 1338.60
Avg. size of reached set after ref.:  692.76

Total time for CEGAR algorithm:      14.223s
Time for refinements:                 1.370s
Average time for refinement:          0.019s
Max time for refinement:              0.057s

Code Coverage
-----------------------------
  Function coverage:      0.611
  Visited lines:          129
  Total lines:            426
  Line coverage:          0.303
  Visited conditions:     38
  Total conditions:       68
  Condition coverage:     0.559

CPAchecker general statistics
-----------------------------
Number of program locations:     607
Number of CFA edges:             651
Number of relevant variables:    110
Number of functions:             36
Number of loops:                 5
Size of reached set:             1352
  Number of reached locations:   173 (29%)
    Avg states per location:     7
    Max states per location:     40 (at node N600)
  Number of reached functions:   22 (61%)
  Number of partitions:          1333
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N309 (before lines 420-465), Function test called from node N502, stack depth 3 [2102eb7a], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.318s
  Time for loading CPAs:          0.624s
  Time for loading parser:        0.534s
  Time for CFA construction:      1.078s
    Time for parsing file(s):     0.341s
    Time for AST to CFA:          0.296s
    Time for CFA sanity check:    0.075s
    Time for post-processing:     0.231s
      Time for var class.:        0.104s
Time for Analysis:               14.224s
CPU time for analysis:           14.230s
Time for analyzing result:        0.001s
Total time for CPAchecker:       16.545s
Total CPU time for CPAchecker:   16.550s
Time for statistics:              0.085s

Time for Garbage Collector:       0.334s (in 39 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     42MB (    40 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8071MB (  7697 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
