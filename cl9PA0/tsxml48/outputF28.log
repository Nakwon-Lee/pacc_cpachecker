scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product33_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nb8za0sz/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 581: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 636: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 674: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 772: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 830: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 862: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 876: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            19608 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  19284 (98%)
  Because of loop head:            269 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         55 (0%)
  Times precision was empty:       1735 (9%)
  Times precision was {false}:     196 (1%)
  Times result was cached:         15538 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2139 (11%)
  Times result was 'false':        2324 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         13350
  BDD entailment checks:           7984
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          17
Number of abstraction locations:          43
Max number of predicates per location:    9
Avg number of predicates per location:    5
Total predicates per abstraction:         90401
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 38.72
Number of irrelevant predicates:          39865 (44%)
Number of preds handled by boolean abs:   8735 (10%)
  Total number of models for allsat:      3374
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.58

Time for post operator:                  1.255s
  Time for path formula creation:        1.178s
Time for strengthen operator:            0.085s
Time for prec operator:                  6.733s
  Time for abstraction:                  6.457s (Max:     0.021s, Count: 19608)
    Boolean abstraction:                 1.643s
    Solving time:                        1.184s (Max:     0.013s)
    Model enumeration time:              0.151s
    Time for BDD construction:           0.110s (Max:     0.010s)
Time for merge operator:                 0.059s
Time for coverage check:                 0.028s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):     1.335s

Number of path formula cache hits:   71704 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.014s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1603
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6094 (count: 24634, min: 0, max: 694, avg: 0.25)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.221s
Automaton transfers with branching:                0
Automaton transfer successors:                        76218 (count: 76218, min: 1, max: 1, avg: 1.00) [1 x 76218]

CPA algorithm statistics
------------------------
Number of iterations:            58966
Max size of waitlist:            44
Average size of waitlist:        15
Number of computed successors:   66552
Max successors for one state:    2
Number of times merged:          2683
Number of times stopped:         4748
Number of times breaked:         55

Total time for CPA algorithm:        10.690s (Max:     1.098s)
  Time for choose from waitlist:      0.075s
  Time for precision adjustment:      7.316s
  Time for transfer relation:         2.433s
  Time for merge operator:            0.184s
  Time for stop operator:             0.146s
  Time for adding to reached set:     0.128s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   55
Avg. length of target path (in blocks):                3108 (count: 55, min: 25, max: 94, avg: 56.51)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.890s
  Counterexample analysis:                             0.575s (Max:     0.019s, Calls: 55)
    Refinement sat check:                              0.277s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.036s
  Precision update:                                    0.029s
  ARG update:                                          0.195s

Length of refined path (in blocks):                    2193 (count: 55, min: 14, max: 80, avg: 39.87)
Number of affected states:                             1158 (count: 55, min: 1, max: 44, avg: 21.05)
Length (states) of path with itp 'true':                980 (count: 55, min: 0, max: 62, avg: 17.82)
Length (states) of path with itp non-trivial itp:      1158 (count: 55, min: 1, max: 44, avg: 21.05)
Length (states) of path with itp 'false':                55 (count: 55, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          13 (count: 55, min: 0, max: 2, avg: 0.24)
Equal non-trivial interpolants along paths:            1090 (count: 55, min: 0, max: 41, avg: 19.82)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                55
Number of successful refinements:     55
Number of failed refinements:         0
Max. size of reached set before ref.: 3803
Max. size of reached set after ref.:  2217
Avg. size of reached set before ref.: 1528.89
Avg. size of reached set after ref.:  474.82

Total time for CEGAR algorithm:      11.718s
Time for refinements:                 1.002s
Average time for refinement:          0.018s
Max time for refinement:              0.045s

Code Coverage
-----------------------------
  Function coverage:      0.583
  Visited lines:          113
  Total lines:            426
  Line coverage:          0.265
  Visited conditions:     36
  Total conditions:       68
  Condition coverage:     0.529

CPAchecker general statistics
-----------------------------
Number of program locations:     607
Number of CFA edges:             651
Number of relevant variables:    110
Number of functions:             36
Number of loops:                 5
Size of reached set:             1507
  Number of reached locations:   152 (25%)
    Avg states per location:     9
    Max states per location:     42 (at node N600)
  Number of reached functions:   21 (58%)
  Number of partitions:          1468
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N309 (before lines 420-465), Function test called from node N502, stack depth 3 [4015c65b], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.044s
  Time for loading CPAs:          0.511s
  Time for loading parser:        0.524s
  Time for CFA construction:      0.918s
    Time for parsing file(s):     0.317s
    Time for AST to CFA:          0.207s
    Time for CFA sanity check:    0.047s
    Time for post-processing:     0.186s
      Time for var class.:        0.067s
Time for Analysis:               11.718s
CPU time for analysis:           11.710s
Time for analyzing result:        0.001s
Total time for CPAchecker:       13.764s
Total CPU time for CPAchecker:   13.740s
Time for statistics:              0.093s

Time for Garbage Collector:       0.307s (in 42 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     42MB (    40 MiB) avg;     68MB (    65 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8067MB (  7694 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
