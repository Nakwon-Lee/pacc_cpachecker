scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product33_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qowt4ovc/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 581: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 636: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 674: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 772: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 830: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 862: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 876: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            5121 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5001 (98%)
  Because of loop head:            73 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         47 (1%)
  Times precision was empty:       318 (6%)
  Times precision was {false}:     121 (2%)
  Times result was cached:         3384 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1298 (25%)
  Times result was 'false':        659 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         3439
  BDD entailment checks:           1713
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          17
Number of abstraction locations:          43
Max number of predicates per location:    9
Avg number of predicates per location:    5
Total predicates per abstraction:         25025
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 17.64
Number of irrelevant predicates:          6458 (26%)
Number of preds handled by boolean abs:   5786 (23%)
  Total number of models for allsat:      1845
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.42

Time for post operator:                  0.799s
  Time for path formula creation:        0.767s
Time for strengthen operator:            0.059s
Time for prec operator:                  4.175s
  Time for abstraction:                  4.071s (Max:     0.019s, Count: 5121)
    Boolean abstraction:                 1.325s
    Solving time:                        0.917s (Max:     0.016s)
    Model enumeration time:              0.136s
    Time for BDD construction:           0.093s (Max:     0.010s)
Time for merge operator:                 0.028s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     1.053s

Number of path formula cache hits:   15527 (64%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.720s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1544
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4395 (count: 11323, min: 0, max: 596, avg: 0.39)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.143s
Automaton transfers with branching:                0
Automaton transfer successors:                        20956 (count: 20956, min: 1, max: 1, avg: 1.00) [1 x 20956]

CPA algorithm statistics
------------------------
Number of iterations:            16294
Max size of waitlist:            14
Average size of waitlist:        5
Number of computed successors:   18366
Max successors for one state:    2
Number of times merged:          863
Number of times stopped:         1260
Number of times breaked:         47

Total time for CPA algorithm:         6.755s (Max:     0.462s)
  Time for choose from waitlist:      0.080s
  Time for precision adjustment:      4.482s
  Time for transfer relation:         1.568s
  Time for merge operator:            0.143s
  Time for stop operator:             0.105s
  Time for adding to reached set:     0.098s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   47
Avg. length of target path (in blocks):                2398 (count: 47, min: 26, max: 77, avg: 51.02)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.698s
  Counterexample analysis:                             0.527s (Max:     0.029s, Calls: 47)
    Refinement sat check:                              0.246s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.030s
  Precision update:                                    0.055s
  ARG update:                                          0.044s

Length of refined path (in blocks):                    1802 (count: 47, min: 14, max: 63, avg: 38.34)
Number of affected states:                              915 (count: 47, min: 1, max: 44, avg: 19.47)
Length (states) of path with itp 'true':                840 (count: 47, min: 0, max: 49, avg: 17.87)
Length (states) of path with itp non-trivial itp:       915 (count: 47, min: 1, max: 44, avg: 19.47)
Length (states) of path with itp 'false':                47 (count: 47, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          14 (count: 47, min: 0, max: 2, avg: 0.30)
Equal non-trivial interpolants along paths:             854 (count: 47, min: 0, max: 41, avg: 18.17)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                47
Number of successful refinements:     47
Number of failed refinements:         0
Max. size of reached set before ref.: 1720
Max. size of reached set after ref.:  1351
Avg. size of reached set before ref.: 776.32
Avg. size of reached set after ref.:  470.26

Total time for CEGAR algorithm:       7.596s
Time for refinements:                 0.828s
Average time for refinement:          0.017s
Max time for refinement:              0.042s

Code Coverage
-----------------------------
  Function coverage:      0.583
  Visited lines:          113
  Total lines:            426
  Line coverage:          0.265
  Visited conditions:     36
  Total conditions:       68
  Condition coverage:     0.529

CPAchecker general statistics
-----------------------------
Number of program locations:     607
Number of CFA edges:             651
Number of relevant variables:    110
Number of functions:             36
Number of loops:                 5
Size of reached set:             2063
  Number of reached locations:   152 (25%)
    Avg states per location:     13
    Max states per location:     58 (at node N600)
  Number of reached functions:   21 (58%)
  Number of partitions:          2011
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N326 (after line 442), Function test called from node N502, stack depth 3 [47569167], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.110s
  Time for loading CPAs:          0.555s
  Time for loading parser:        0.537s
  Time for CFA construction:      0.904s
    Time for parsing file(s):     0.286s
    Time for AST to CFA:          0.234s
    Time for CFA sanity check:    0.070s
    Time for post-processing:     0.206s
      Time for var class.:        0.079s
Time for Analysis:                7.596s
CPU time for analysis:            7.590s
Time for analyzing result:        0.001s
Total time for CPAchecker:        9.714s
Total CPU time for CPAchecker:    9.700s
Time for statistics:              0.088s

Time for Garbage Collector:       0.159s (in 16 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     39MB (    37 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     31MB (    30 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7999MB (  7628 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
