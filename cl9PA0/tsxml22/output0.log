scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product30_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ukgt5hgm/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 182: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 191: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 413: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 933: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 965: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 974: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 570: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            6582 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6482 (98%)
  Because of loop head:            75 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25 (0%)
  Times precision was empty:       2584 (39%)
  Times precision was {false}:     89 (1%)
  Times result was cached:         3658 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      251 (4%)
  Times result was 'false':        471 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         1719
  BDD entailment checks:           775
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          5
Number of abstraction locations:          44
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         6148
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 18.08
Number of irrelevant predicates:          2380 (39%)
Number of preds handled by boolean abs:   406 (7%)
  Total number of models for allsat:      271
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  0.576s
  Time for path formula creation:        0.531s
Time for strengthen operator:            0.055s
Time for prec operator:                  1.400s
  Time for abstraction:                  1.218s (Max:     0.014s, Count: 6582)
    Boolean abstraction:                 0.220s
    Solving time:                        0.151s (Max:     0.012s)
    Model enumeration time:              0.024s
    Time for BDD construction:           0.043s (Max:     0.008s)
Time for merge operator:                 0.022s
Time for coverage check:                 0.016s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     0.175s

Number of path formula cache hits:   22045 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.485s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               219
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         369 (count: 5398, min: 0, max: 158, avg: 0.07)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.188s
Automaton transfers with branching:                0
Automaton transfer successors:                        23810 (count: 23810, min: 1, max: 1, avg: 1.00) [1 x 23810]

CPA algorithm statistics
------------------------
Number of iterations:            18260
Max size of waitlist:            51
Average size of waitlist:        18
Number of computed successors:   20279
Max successors for one state:    2
Number of times merged:          472
Number of times stopped:         1031
Number of times breaked:         25

Total time for CPA algorithm:         3.642s (Max:     0.496s)
  Time for choose from waitlist:      0.056s
  Time for precision adjustment:      1.712s
  Time for transfer relation:         1.396s
  Time for merge operator:            0.072s
  Time for stop operator:             0.119s
  Time for adding to reached set:     0.113s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   25
Avg. length of target path (in blocks):                 914 (count: 25, min: 25, max: 67, avg: 36.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.369s
  Counterexample analysis:                             0.200s (Max:     0.016s, Calls: 25)
    Refinement sat check:                              0.066s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.027s
  Precision update:                                    0.028s
  ARG update:                                          0.087s

Length of refined path (in blocks):                     650 (count: 25, min: 19, max: 54, avg: 26.00)
Number of affected states:                              491 (count: 25, min: 6, max: 53, avg: 19.64)
Length (states) of path with itp 'true':                134 (count: 25, min: 0, max: 19, avg: 5.36)
Length (states) of path with itp non-trivial itp:       491 (count: 25, min: 6, max: 53, avg: 19.64)
Length (states) of path with itp 'false':                25 (count: 25, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 25, min: 0, max: 1, avg: 0.04)
Equal non-trivial interpolants along paths:             465 (count: 25, min: 5, max: 52, avg: 18.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 1620
Max. size of reached set after ref.:  915
Avg. size of reached set before ref.: 917.04
Avg. size of reached set after ref.:  215.28

Total time for CEGAR algorithm:       4.084s
Time for refinements:                 0.441s
Average time for refinement:          0.017s
Max time for refinement:              0.056s

Code Coverage
-----------------------------
  Function coverage:      0.513
  Visited lines:          111
  Total lines:            439
  Line coverage:          0.253
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     635
Number of CFA edges:             685
Number of relevant variables:    116
Number of functions:             39
Number of loops:                 5
Size of reached set:             1234
  Number of reached locations:   150 (24%)
    Avg states per location:     8
    Max states per location:     42 (at node N172)
  Number of reached functions:   20 (51%)
  Number of partitions:          1220
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N527 (before lines 803-817), Function cleanup called from node N159, stack depth 4 [5f93ec02], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          1.864s
  Time for loading CPAs:          0.544s
  Time for loading parser:        0.413s
  Time for CFA construction:      0.842s
    Time for parsing file(s):     0.284s
    Time for AST to CFA:          0.199s
    Time for CFA sanity check:    0.061s
    Time for post-processing:     0.194s
      Time for var class.:        0.077s
Time for Analysis:                4.084s
CPU time for analysis:            4.090s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.950s
Total CPU time for CPAchecker:    5.950s
Time for statistics:              0.082s

Time for Garbage Collector:       0.104s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     37MB (    36 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     29MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8055MB (  7682 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
