scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product30_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_oxmqm24p/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 182: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 191: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 413: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 933: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 965: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 974: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 570: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2731 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2670 (98%)
  Because of loop head:            44 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         17 (1%)
  Times precision was empty:       555 (20%)
  Times precision was {false}:     64 (2%)
  Times result was cached:         1861 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      251 (9%)
  Times result was 'false':        285 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         873
  BDD entailment checks:           481
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          5
Number of abstraction locations:          44
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         4254
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 13.50
Number of irrelevant predicates:          1310 (31%)
Number of preds handled by boolean abs:   441 (10%)
  Total number of models for allsat:      265
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.06

Time for post operator:                  0.411s
  Time for path formula creation:        0.377s
Time for strengthen operator:            0.015s
Time for prec operator:                  1.127s
  Time for abstraction:                  0.997s (Max:     0.016s, Count: 2731)
    Boolean abstraction:                 0.238s
    Solving time:                        0.142s (Max:     0.009s)
    Model enumeration time:              0.031s
    Time for BDD construction:           0.035s (Max:     0.007s)
Time for merge operator:                 0.015s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     0.173s

Number of path formula cache hits:   7138 (62%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.350s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               224
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         396 (count: 2925, min: 0, max: 161, avg: 0.14)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.117s
Automaton transfers with branching:                0
Automaton transfer successors:                         9917 (count: 9917, min: 1, max: 1, avg: 1.00) [1 x 9917]

CPA algorithm statistics
------------------------
Number of iterations:            7722
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   8574
Max successors for one state:    2
Number of times merged:          196
Number of times stopped:         454
Number of times breaked:         17

Total time for CPA algorithm:         2.481s (Max:     0.266s)
  Time for choose from waitlist:      0.026s
  Time for precision adjustment:      1.256s
  Time for transfer relation:         0.926s
  Time for merge operator:            0.039s
  Time for stop operator:             0.082s
  Time for adding to reached set:     0.041s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   17
Avg. length of target path (in blocks):                 665 (count: 17, min: 26, max: 62, avg: 39.12)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.219s
  Counterexample analysis:                             0.104s (Max:     0.015s, Calls: 17)
    Refinement sat check:                              0.035s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.024s
  ARG update:                                          0.031s

Length of refined path (in blocks):                     492 (count: 17, min: 20, max: 54, avg: 28.94)
Number of affected states:                              404 (count: 17, min: 13, max: 53, avg: 23.76)
Length (states) of path with itp 'true':                 71 (count: 17, min: 0, max: 19, avg: 4.18)
Length (states) of path with itp non-trivial itp:       404 (count: 17, min: 13, max: 53, avg: 23.76)
Length (states) of path with itp 'false':                17 (count: 17, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 17, min: 0, max: 1, avg: 0.06)
Equal non-trivial interpolants along paths:             386 (count: 17, min: 12, max: 52, avg: 22.71)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                17
Number of successful refinements:     17
Number of failed refinements:         0
Max. size of reached set before ref.: 880
Max. size of reached set after ref.:  595
Avg. size of reached set before ref.: 551.24
Avg. size of reached set after ref.:  143.94

Total time for CEGAR algorithm:       2.759s
Time for refinements:                 0.276s
Average time for refinement:          0.016s
Max time for refinement:              0.036s

Code Coverage
-----------------------------
  Function coverage:      0.513
  Visited lines:          111
  Total lines:            439
  Line coverage:          0.253
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     635
Number of CFA edges:             685
Number of relevant variables:    116
Number of functions:             39
Number of loops:                 5
Size of reached set:             912
  Number of reached locations:   150 (24%)
    Avg states per location:     6
    Max states per location:     32 (at node N172)
  Number of reached functions:   20 (51%)
  Number of partitions:          898
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N130 (before lines 271-318), Function test called from node N567, stack depth 3 [5dbbb292], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.170s
  Time for loading CPAs:          0.548s
  Time for loading parser:        0.425s
  Time for CFA construction:      1.069s
    Time for parsing file(s):     0.347s
    Time for AST to CFA:          0.256s
    Time for CFA sanity check:    0.065s
    Time for post-processing:     0.272s
      Time for var class.:        0.126s
Time for Analysis:                2.760s
CPU time for analysis:            2.760s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.933s
Total CPU time for CPAchecker:    4.920s
Time for statistics:              0.080s

Time for Garbage Collector:       0.085s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 55MB (    52 MiB) max;     33MB (    31 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7986MB (  7616 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
