scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product43_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gf38eyt3/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 508: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 694: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 758: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 822: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 854: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 953: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            33964 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  33512 (99%)
  Because of loop head:            377 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         75 (0%)
  Times precision was empty:       3477 (10%)
  Times precision was {false}:     450 (1%)
  Times result was cached:         24012 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6025 (18%)
  Times result was 'false':        3721 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         25900
  BDD entailment checks:           18112
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          22
Number of abstraction locations:          53
Max number of predicates per location:    11
Avg number of predicates per location:    6
Total predicates per abstraction:         174757
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 26.99
Number of irrelevant predicates:          69953 (40%)
Number of preds handled by boolean abs:   28764 (16%)
  Total number of models for allsat:      9227
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.53

Time for post operator:                  1.499s
  Time for path formula creation:        1.415s
Time for strengthen operator:            0.170s
Time for prec operator:                 14.872s
  Time for abstraction:                 14.369s (Max:     0.020s, Count: 33964)
    Boolean abstraction:                 4.162s
    Solving time:                        3.089s (Max:     0.013s)
    Model enumeration time:              0.426s
    Time for BDD construction:           0.275s (Max:     0.012s)
Time for merge operator:                 0.100s
Time for coverage check:                 0.046s
  Time for BDD entailment checks:        0.032s
Total time for SMT solver (w/o itp):     3.515s

Number of path formula cache hits:   113444 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.159s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               4068
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       17070 (count: 62828, min: 0, max: 1007, avg: 0.27)
Time for BDD node cleanup:                             0.034s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.305s
Automaton transfers with branching:                0
Automaton transfer successors:                       131195 (count: 131195, min: 1, max: 1, avg: 1.00) [1 x 131195]

CPA algorithm statistics
------------------------
Number of iterations:            102370
Max size of waitlist:            83
Average size of waitlist:        25
Number of computed successors:   114532
Max successors for one state:    2
Number of times merged:          3894
Number of times stopped:         7571
Number of times breaked:         75

Total time for CPA algorithm:        20.422s (Max:     1.560s)
  Time for choose from waitlist:      0.134s
  Time for precision adjustment:     15.674s
  Time for transfer relation:         3.229s
  Time for merge operator:            0.247s
  Time for stop operator:             0.292s
  Time for adding to reached set:     0.221s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   75
Avg. length of target path (in blocks):                4717 (count: 75, min: 25, max: 143, avg: 62.89)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.175s
  Counterexample analysis:                             0.745s (Max:     0.023s, Calls: 75)
    Refinement sat check:                              0.325s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.047s
  Precision update:                                    0.065s
  ARG update:                                          0.278s

Length of refined path (in blocks):                    3356 (count: 75, min: 14, max: 109, avg: 44.75)
Number of affected states:                             1712 (count: 75, min: 1, max: 69, avg: 22.83)
Length (states) of path with itp 'true':               1569 (count: 75, min: 0, max: 88, avg: 20.92)
Length (states) of path with itp non-trivial itp:      1712 (count: 75, min: 1, max: 69, avg: 22.83)
Length (states) of path with itp 'false':                75 (count: 75, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          49 (count: 75, min: 0, max: 3, avg: 0.65)
Equal non-trivial interpolants along paths:            1588 (count: 75, min: 0, max: 68, avg: 21.17)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                75
Number of successful refinements:     75
Number of failed refinements:         0
Max. size of reached set before ref.: 6162
Max. size of reached set after ref.:  5799
Avg. size of reached set before ref.: 2662.04
Avg. size of reached set after ref.:  1340.80

Total time for CEGAR algorithm:      21.912s
Time for refinements:                 1.415s
Average time for refinement:          0.018s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          131
  Total lines:            436
  Line coverage:          0.300
  Visited conditions:     40
  Total conditions:       72
  Condition coverage:     0.556

CPAchecker general statistics
-----------------------------
Number of program locations:     627
Number of CFA edges:             675
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             4148
  Number of reached locations:   179 (29%)
    Avg states per location:     23
    Max states per location:     115 (at node N590)
  Number of reached functions:   26 (68%)
  Number of partitions:          4043
    Avg size of partitions:      1
    Max size of partitions:      14 (with key [N375 (before lines 523-570), Function test called from node N347, stack depth 3 [6c6c901d], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.259s
  Time for loading CPAs:          0.560s
  Time for loading parser:        0.489s
  Time for CFA construction:      1.093s
    Time for parsing file(s):     0.357s
    Time for AST to CFA:          0.318s
    Time for CFA sanity check:    0.064s
    Time for post-processing:     0.212s
      Time for var class.:        0.090s
Time for Analysis:               21.912s
CPU time for analysis:           21.900s
Time for analyzing result:        0.003s
Total time for CPAchecker:       24.174s
Total CPU time for CPAchecker:   24.160s
Time for statistics:              0.121s

Time for Garbage Collector:       0.582s (in 76 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 78MB (    74 MiB) max;     47MB (    45 MiB) avg;     83MB (    79 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    32 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8076MB (  7702 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
