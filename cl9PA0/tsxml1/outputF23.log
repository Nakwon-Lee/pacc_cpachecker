scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product43_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uouswiil/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 508: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 694: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 758: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 822: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 854: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 953: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            11337 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11133 (98%)
  Because of loop head:            125 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         79 (1%)
  Times precision was empty:       594 (5%)
  Times precision was {false}:     239 (2%)
  Times result was cached:         7322 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3182 (28%)
  Times result was 'false':        1486 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         8042
  BDD entailment checks:           5398
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          22
Number of abstraction locations:          53
Max number of predicates per location:    11
Avg number of predicates per location:    6
Total predicates per abstraction:         61476
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 17.97
Number of irrelevant predicates:          17067 (28%)
Number of preds handled by boolean abs:   16104 (26%)
  Total number of models for allsat:      4746
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.49

Time for post operator:                  1.010s
  Time for path formula creation:        0.971s
Time for strengthen operator:            0.063s
Time for prec operator:                  8.419s
  Time for abstraction:                  8.242s (Max:     0.024s, Count: 11337)
    Boolean abstraction:                 2.715s
    Solving time:                        1.872s (Max:     0.013s)
    Model enumeration time:              0.291s
    Time for BDD construction:           0.209s (Max:     0.015s)
Time for merge operator:                 0.043s
Time for coverage check:                 0.027s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     2.163s

Number of path formula cache hits:   33077 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.807s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               3193
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       10036 (count: 28228, min: 0, max: 753, avg: 0.36)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.241s
Automaton transfers with branching:                0
Automaton transfer successors:                        43985 (count: 43985, min: 1, max: 1, avg: 1.00) [1 x 43985]

CPA algorithm statistics
------------------------
Number of iterations:            34366
Max size of waitlist:            21
Average size of waitlist:        7
Number of computed successors:   38486
Max successors for one state:    2
Number of times merged:          1322
Number of times stopped:         2436
Number of times breaked:         79

Total time for CPA algorithm:        11.719s (Max:     0.428s)
  Time for choose from waitlist:      0.092s
  Time for precision adjustment:      8.892s
  Time for transfer relation:         2.069s
  Time for merge operator:            0.095s
  Time for stop operator:             0.149s
  Time for adding to reached set:     0.107s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   79
Avg. length of target path (in blocks):                4641 (count: 79, min: 26, max: 118, avg: 58.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.023s
  Counterexample analysis:                             0.755s (Max:     0.026s, Calls: 79)
    Refinement sat check:                              0.357s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.081s
  Precision update:                                    0.065s
  ARG update:                                          0.084s

Length of refined path (in blocks):                    3509 (count: 79, min: 14, max: 109, avg: 44.42)
Number of affected states:                             1719 (count: 79, min: 1, max: 67, avg: 21.76)
Length (states) of path with itp 'true':               1711 (count: 79, min: 0, max: 80, avg: 21.66)
Length (states) of path with itp non-trivial itp:      1719 (count: 79, min: 1, max: 67, avg: 21.76)
Length (states) of path with itp 'false':                79 (count: 79, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          46 (count: 79, min: 0, max: 3, avg: 0.58)
Equal non-trivial interpolants along paths:            1594 (count: 79, min: 0, max: 66, avg: 20.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                79
Number of successful refinements:     79
Number of failed refinements:         0
Max. size of reached set before ref.: 3895
Max. size of reached set after ref.:  3546
Avg. size of reached set before ref.: 1302.32
Avg. size of reached set after ref.:  911.24

Total time for CEGAR algorithm:      12.947s
Time for refinements:                 1.184s
Average time for refinement:          0.014s
Max time for refinement:              0.034s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          131
  Total lines:            436
  Line coverage:          0.300
  Visited conditions:     40
  Total conditions:       72
  Condition coverage:     0.556

CPAchecker general statistics
-----------------------------
Number of program locations:     627
Number of CFA edges:             675
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             3670
  Number of reached locations:   179 (29%)
    Avg states per location:     20
    Max states per location:     101 (at node N590)
  Number of reached functions:   26 (68%)
  Number of partitions:          3576
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N375 (before lines 523-570), Function test called from node N347, stack depth 3 [31e90355], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.146s
  Time for loading CPAs:          0.487s
  Time for loading parser:        0.463s
  Time for CFA construction:      1.051s
    Time for parsing file(s):     0.395s
    Time for AST to CFA:          0.280s
    Time for CFA sanity check:    0.067s
    Time for post-processing:     0.195s
      Time for var class.:        0.083s
Time for Analysis:               12.947s
CPU time for analysis:           12.940s
Time for analyzing result:        0.002s
Total time for CPAchecker:       15.096s
Total CPU time for CPAchecker:   15.080s
Time for statistics:              0.095s

Time for Garbage Collector:       0.248s (in 31 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     41MB (    39 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8071MB (  7697 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
