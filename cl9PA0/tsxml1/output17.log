scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product43_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_drg6jybn/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 508: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 694: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 758: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 822: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 854: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 953: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            20563 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20185 (98%)
  Because of loop head:            279 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         99 (0%)
  Times precision was empty:       2161 (11%)
  Times precision was {false}:     296 (1%)
  Times result was cached:         14124 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3982 (19%)
  Times result was 'false':        2231 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         14241
  BDD entailment checks:           9699
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          22
Number of abstraction locations:          53
Max number of predicates per location:    11
Avg number of predicates per location:    6
Total predicates per abstraction:         102691
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 24.00
Number of irrelevant predicates:          36425 (35%)
Number of preds handled by boolean abs:   18824 (18%)
  Total number of models for allsat:      5982
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.50

Time for post operator:                  1.241s
  Time for path formula creation:        1.146s
Time for strengthen operator:            0.106s
Time for prec operator:                 10.297s
  Time for abstraction:                 10.002s (Max:     0.022s, Count: 20563)
    Boolean abstraction:                 3.022s
    Solving time:                        2.119s (Max:     0.013s)
    Model enumeration time:              0.355s
    Time for BDD construction:           0.235s (Max:     0.012s)
Time for merge operator:                 0.066s
Time for coverage check:                 0.039s
  Time for BDD entailment checks:        0.039s
Total time for SMT solver (w/o itp):     2.474s

Number of path formula cache hits:   65889 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.989s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               3418
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       12325 (count: 39627, min: 0, max: 763, avg: 0.31)
Time for BDD node cleanup:                             0.026s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.252s
Automaton transfers with branching:                0
Automaton transfer successors:                        77939 (count: 77939, min: 1, max: 1, avg: 1.00) [1 x 77939]

CPA algorithm statistics
------------------------
Number of iterations:            61673
Max size of waitlist:            24
Average size of waitlist:        10
Number of computed successors:   68661
Max successors for one state:    2
Number of times merged:          2271
Number of times stopped:         4270
Number of times breaked:         99

Total time for CPA algorithm:        14.867s (Max:     0.604s)
  Time for choose from waitlist:      0.085s
  Time for precision adjustment:     11.033s
  Time for transfer relation:         2.689s
  Time for merge operator:            0.170s
  Time for stop operator:             0.188s
  Time for adding to reached set:     0.225s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   99
Avg. length of target path (in blocks):                6418 (count: 99, min: 25, max: 118, avg: 64.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.485s
  Counterexample analysis:                             1.114s (Max:     0.030s, Calls: 99)
    Refinement sat check:                              0.507s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.045s
  Precision update:                                    0.061s
  ARG update:                                          0.175s

Length of refined path (in blocks):                    4833 (count: 99, min: 14, max: 109, avg: 48.82)
Number of affected states:                             1837 (count: 99, min: 1, max: 55, avg: 18.56)
Length (states) of path with itp 'true':               2897 (count: 99, min: 0, max: 78, avg: 29.26)
Length (states) of path with itp non-trivial itp:      1837 (count: 99, min: 1, max: 55, avg: 18.56)
Length (states) of path with itp 'false':                99 (count: 99, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          53 (count: 99, min: 0, max: 3, avg: 0.54)
Equal non-trivial interpolants along paths:            1685 (count: 99, min: 0, max: 51, avg: 17.02)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                99
Number of successful refinements:     99
Number of failed refinements:         0
Max. size of reached set before ref.: 3996
Max. size of reached set after ref.:  3644
Avg. size of reached set before ref.: 1664.01
Avg. size of reached set after ref.:  1074.18

Total time for CEGAR algorithm:      16.653s
Time for refinements:                 1.711s
Average time for refinement:          0.017s
Max time for refinement:              0.052s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          131
  Total lines:            436
  Line coverage:          0.300
  Visited conditions:     40
  Total conditions:       72
  Condition coverage:     0.556

CPAchecker general statistics
-----------------------------
Number of program locations:     627
Number of CFA edges:             675
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             3768
  Number of reached locations:   179 (29%)
    Avg states per location:     21
    Max states per location:     101 (at node N590)
  Number of reached functions:   26 (68%)
  Number of partitions:          3674
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N392 (after line 545), Function test called from node N347, stack depth 3 [48b5a380], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.969s
  Time for loading CPAs:          0.457s
  Time for loading parser:        0.464s
  Time for CFA construction:      0.927s
    Time for parsing file(s):     0.328s
    Time for AST to CFA:          0.223s
    Time for CFA sanity check:    0.052s
    Time for post-processing:     0.202s
      Time for var class.:        0.082s
Time for Analysis:               16.654s
CPU time for analysis:           16.640s
Time for analyzing result:        0.003s
Total time for CPAchecker:       18.625s
Total CPU time for CPAchecker:   18.610s
Time for statistics:              0.115s

Time for Garbage Collector:       0.353s (in 48 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     42MB (    40 MiB) avg;     70MB (    67 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
