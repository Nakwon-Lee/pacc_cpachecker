scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product22_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8439f4lx/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 203: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 212: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 267: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 493: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 813: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 859: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 907: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 948: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 650: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2388 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2346 (98%)
  Because of loop head:            29 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (1%)
  Times precision was empty:       451 (19%)
  Times precision was {false}:     58 (2%)
  Times result was cached:         1800 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      79 (3%)
  Times result was 'false':        254 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         685
  BDD entailment checks:           261
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          4
Number of abstraction locations:          44
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         2717
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 19.83
Number of irrelevant predicates:          984 (36%)
Number of preds handled by boolean abs:   92 (3%)
  Total number of models for allsat:      91
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.15

Time for post operator:                  0.347s
  Time for path formula creation:        0.328s
Time for strengthen operator:            0.025s
Time for prec operator:                  0.732s
  Time for abstraction:                  0.656s (Max:     0.017s, Count: 2388)
    Boolean abstraction:                 0.074s
    Solving time:                        0.064s (Max:     0.017s)
    Model enumeration time:              0.007s
    Time for BDD construction:           0.019s (Max:     0.008s)
Time for merge operator:                 0.003s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.014s
Total time for SMT solver (w/o itp):     0.071s

Number of path formula cache hits:   8556 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.305s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         137 (count: 1510, min: 0, max: 96, avg: 0.09)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.104s
Automaton transfers with branching:                0
Automaton transfer successors:                         8972 (count: 8972, min: 1, max: 1, avg: 1.00) [1 x 8972]

CPA algorithm statistics
------------------------
Number of iterations:            6846
Max size of waitlist:            15
Average size of waitlist:        5
Number of computed successors:   7653
Max successors for one state:    2
Number of times merged:          212
Number of times stopped:         441
Number of times breaked:         13

Total time for CPA algorithm:         2.005s (Max:     0.304s)
  Time for choose from waitlist:      0.018s
  Time for precision adjustment:      0.918s
  Time for transfer relation:         0.822s
  Time for merge operator:            0.030s
  Time for stop operator:             0.059s
  Time for adding to reached set:     0.048s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 440 (count: 13, min: 25, max: 50, avg: 33.85)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.221s
  Counterexample analysis:                             0.132s (Max:     0.026s, Calls: 13)
    Refinement sat check:                              0.045s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.006s
  ARG update:                                          0.039s

Length of refined path (in blocks):                     334 (count: 13, min: 19, max: 42, avg: 25.69)
Number of affected states:                              321 (count: 13, min: 18, max: 41, avg: 24.69)
Length (states) of path with itp 'true':                  0 (count: 13, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       321 (count: 13, min: 18, max: 41, avg: 24.69)
Length (states) of path with itp 'false':                13 (count: 13, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 13, min: 0, max: 1, avg: 0.08)
Equal non-trivial interpolants along paths:             307 (count: 13, min: 17, max: 40, avg: 23.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 810
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 469.23
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.249s
Time for refinements:                 0.243s
Average time for refinement:          0.018s
Max time for refinement:              0.051s

Code Coverage
-----------------------------
  Function coverage:      0.526
  Visited lines:          111
  Total lines:            434
  Line coverage:          0.256
  Visited conditions:     32
  Total conditions:       70
  Condition coverage:     0.457

CPAchecker general statistics
-----------------------------
Number of program locations:     625
Number of CFA edges:             673
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             898
  Number of reached locations:   150 (24%)
    Avg states per location:     5
    Max states per location:     34 (at node N145)
  Number of reached functions:   20 (53%)
  Number of partitions:          897
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N172 (before lines 343-390), Function test called from node N251, stack depth 3 [f0a66bd], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.028s
  Time for loading CPAs:          0.504s
  Time for loading parser:        0.573s
  Time for CFA construction:      0.881s
    Time for parsing file(s):     0.305s
    Time for AST to CFA:          0.189s
    Time for CFA sanity check:    0.068s
    Time for post-processing:     0.218s
      Time for var class.:        0.097s
Time for Analysis:                2.249s
CPU time for analysis:            2.250s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.280s
Total CPU time for CPAchecker:    4.270s
Time for statistics:              0.069s

Time for Garbage Collector:       0.081s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    54 MiB) max;     34MB (    32 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     26MB (    25 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   7973MB (  7604 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
