scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product46_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_v11tze1n/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 193: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 513: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 559: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 611: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 643: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 657: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 669: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 692: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 838: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 847: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 902: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 350: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            27584 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  27277 (99%)
  Because of loop head:            191 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         116 (0%)
  Times precision was empty:       638 (2%)
  Times precision was {false}:     478 (2%)
  Times result was cached:         17339 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9129 (33%)
  Times result was 'false':        4136 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         21806
  BDD entailment checks:           15674
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          28
Number of abstraction locations:          57
Max number of predicates per location:    14
Avg number of predicates per location:    8
Total predicates per abstraction:         189400
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 19.71
Number of irrelevant predicates:          39480 (21%)
Number of preds handled by boolean abs:   60850 (32%)
  Total number of models for allsat:      12257
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.34

Time for post operator:                  1.628s
  Time for path formula creation:        1.541s
Time for strengthen operator:            0.154s
Time for prec operator:                 20.915s
  Time for abstraction:                 20.532s (Max:     0.036s, Count: 27584)
    Boolean abstraction:                 7.108s
    Solving time:                        5.333s (Max:     0.023s)
    Model enumeration time:              0.595s
    Time for BDD construction:           0.305s (Max:     0.012s)
Time for merge operator:                 0.085s
Time for coverage check:                 0.056s
  Time for BDD entailment checks:        0.051s
Total time for SMT solver (w/o itp):     5.928s

Number of path formula cache hits:   81416 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.307s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               6160
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       26922 (count: 78413, min: 0, max: 1411, avg: 0.34)
Time for BDD node cleanup:                             0.026s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.368s
Automaton transfers with branching:                0
Automaton transfer successors:                       103994 (count: 103994, min: 1, max: 1, avg: 1.00) [1 x 103994]

CPA algorithm statistics
------------------------
Number of iterations:            80654
Max size of waitlist:            29
Average size of waitlist:        8
Number of computed successors:   90312
Max successors for one state:    2
Number of times merged:          3066
Number of times stopped:         5115
Number of times breaked:         116

Total time for CPA algorithm:        26.195s (Max:     2.065s)
  Time for choose from waitlist:      0.101s
  Time for precision adjustment:     21.624s
  Time for transfer relation:         3.385s
  Time for merge operator:            0.176s
  Time for stop operator:             0.245s
  Time for adding to reached set:     0.247s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   116
Avg. length of target path (in blocks):                8664 (count: 116, min: 26, max: 141, avg: 74.69)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.132s
  Counterexample analysis:                             1.630s (Max:     0.050s, Calls: 116)
    Refinement sat check:                              0.564s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.068s
  Precision update:                                    0.108s
  ARG update:                                          0.229s

Length of refined path (in blocks):                    7169 (count: 116, min: 14, max: 119, avg: 61.80)
Number of affected states:                             3166 (count: 116, min: 1, max: 81, avg: 27.29)
Length (states) of path with itp 'true':               3887 (count: 116, min: 0, max: 88, avg: 33.51)
Length (states) of path with itp non-trivial itp:      3166 (count: 116, min: 1, max: 81, avg: 27.29)
Length (states) of path with itp 'false':               116 (count: 116, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         146 (count: 116, min: 0, max: 5, avg: 1.26)
Equal non-trivial interpolants along paths:            2904 (count: 116, min: 0, max: 77, avg: 25.03)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                116
Number of successful refinements:     116
Number of failed refinements:         0
Max. size of reached set before ref.: 5217
Max. size of reached set after ref.:  3819
Avg. size of reached set before ref.: 2181.10
Avg. size of reached set after ref.:  1538.16

Total time for CEGAR algorithm:      28.824s
Time for refinements:                 2.466s
Average time for refinement:          0.021s
Max time for refinement:              0.061s

Code Coverage
-----------------------------
  Function coverage:      0.692
  Visited lines:          137
  Total lines:            442
  Line coverage:          0.310
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     638
Number of CFA edges:             689
Number of relevant variables:    116
Number of functions:             39
Number of loops:                 5
Size of reached set:             6481
  Number of reached locations:   187 (29%)
    Avg states per location:     34
    Max states per location:     161 (at node N10)
  Number of reached functions:   27 (69%)
  Number of partitions:          6363
    Avg size of partitions:      1
    Max size of partitions:      25 (with key [N634 (after line 946), Function test called from node N75, stack depth 3 [69fb83e3], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.228s
  Time for loading CPAs:          0.592s
  Time for loading parser:        0.482s
  Time for CFA construction:      0.996s
    Time for parsing file(s):     0.318s
    Time for AST to CFA:          0.298s
    Time for CFA sanity check:    0.061s
    Time for post-processing:     0.196s
      Time for var class.:        0.081s
Time for Analysis:               28.824s
CPU time for analysis:           28.820s
Time for analyzing result:        0.005s
Total time for CPAchecker:       31.054s
Total CPU time for CPAchecker:   31.050s
Time for statistics:              0.150s

Time for Garbage Collector:       0.655s (in 84 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 75MB (    72 MiB) max;     47MB (    44 MiB) avg;     81MB (    77 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     34MB (    33 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8154MB (  7777 MiB) max;   8087MB (  7712 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
