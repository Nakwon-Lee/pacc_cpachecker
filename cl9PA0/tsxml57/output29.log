scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product46_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yymi85ei/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 193: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 513: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 559: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 611: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 643: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 657: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 669: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 692: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 838: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 847: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 902: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 350: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            29863 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  29500 (99%)
  Because of loop head:            243 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         120 (0%)
  Times precision was empty:       924 (3%)
  Times precision was {false}:     481 (2%)
  Times result was cached:         18964 (64%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9494 (32%)
  Times result was 'false':        4529 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         24598
  BDD entailment checks:           18216
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          28
Number of abstraction locations:          57
Max number of predicates per location:    14
Avg number of predicates per location:    8
Total predicates per abstraction:         204244
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 20.48
Number of irrelevant predicates:          42740 (21%)
Number of preds handled by boolean abs:   63878 (31%)
  Total number of models for allsat:      12595
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.33

Time for post operator:                  1.509s
  Time for path formula creation:        1.463s
Time for strengthen operator:            0.107s
Time for prec operator:                 19.928s
  Time for abstraction:                 19.473s (Max:     0.018s, Count: 29863)
    Boolean abstraction:                 6.689s
    Solving time:                        4.837s (Max:     0.013s)
    Model enumeration time:              0.663s
    Time for BDD construction:           0.325s (Max:     0.009s)
Time for merge operator:                 0.055s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     5.500s

Number of path formula cache hits:   85983 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.260s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               6310
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       27184 (count: 83465, min: 0, max: 1227, avg: 0.33)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.321s
Automaton transfers with branching:                0
Automaton transfer successors:                       112292 (count: 112292, min: 1, max: 1, avg: 1.00) [1 x 112292]

CPA algorithm statistics
------------------------
Number of iterations:            87301
Max size of waitlist:            23
Average size of waitlist:        9
Number of computed successors:   97708
Max successors for one state:    2
Number of times merged:          3191
Number of times stopped:         5536
Number of times breaked:         120

Total time for CPA algorithm:        24.871s (Max:     1.885s)
  Time for choose from waitlist:      0.074s
  Time for precision adjustment:     20.589s
  Time for transfer relation:         3.107s
  Time for merge operator:            0.215s
  Time for stop operator:             0.198s
  Time for adding to reached set:     0.159s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   120
Avg. length of target path (in blocks):                8673 (count: 120, min: 26, max: 141, avg: 72.28)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.001s
  Counterexample analysis:                             1.507s (Max:     0.040s, Calls: 120)
    Refinement sat check:                              0.592s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.016s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.052s
  Precision update:                                    0.113s
  ARG update:                                          0.206s

Length of refined path (in blocks):                    7031 (count: 120, min: 14, max: 117, avg: 58.59)
Number of affected states:                             3045 (count: 120, min: 1, max: 81, avg: 25.38)
Length (states) of path with itp 'true':               3866 (count: 120, min: 0, max: 86, avg: 32.22)
Length (states) of path with itp non-trivial itp:      3045 (count: 120, min: 1, max: 81, avg: 25.38)
Length (states) of path with itp 'false':               120 (count: 120, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         136 (count: 120, min: 0, max: 5, avg: 1.13)
Equal non-trivial interpolants along paths:            2789 (count: 120, min: 0, max: 77, avg: 23.24)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                120
Number of successful refinements:     120
Number of failed refinements:         0
Max. size of reached set before ref.: 5434
Max. size of reached set after ref.:  4387
Avg. size of reached set before ref.: 2126.13
Avg. size of reached set after ref.:  1450.30

Total time for CEGAR algorithm:      27.287s
Time for refinements:                 2.281s
Average time for refinement:          0.019s
Max time for refinement:              0.053s

Code Coverage
-----------------------------
  Function coverage:      0.692
  Visited lines:          137
  Total lines:            442
  Line coverage:          0.310
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     638
Number of CFA edges:             689
Number of relevant variables:    116
Number of functions:             39
Number of loops:                 5
Size of reached set:             6545
  Number of reached locations:   187 (29%)
    Avg states per location:     35
    Max states per location:     163 (at node N10)
  Number of reached functions:   27 (69%)
  Number of partitions:          6426
    Avg size of partitions:      1
    Max size of partitions:      26 (with key [N634 (after line 946), Function test called from node N75, stack depth 3 [44aabccd], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.116s
  Time for loading CPAs:          0.585s
  Time for loading parser:        0.436s
  Time for CFA construction:      0.966s
    Time for parsing file(s):     0.322s
    Time for AST to CFA:          0.241s
    Time for CFA sanity check:    0.074s
    Time for post-processing:     0.200s
      Time for var class.:        0.091s
Time for Analysis:               27.288s
CPU time for analysis:           27.290s
Time for analyzing result:        0.004s
Total time for CPAchecker:       29.407s
Total CPU time for CPAchecker:   29.400s
Time for statistics:              0.140s

Time for Garbage Collector:       0.630s (in 90 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 78MB (    75 MiB) max;     48MB (    46 MiB) avg;     83MB (    79 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    33 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8021MB (  7650 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
