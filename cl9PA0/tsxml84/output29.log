scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_mgr8l1ne/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 261: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 270: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 325: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 389: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 421: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 430: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 897: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 958: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 981: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4819 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4746 (98%)
  Because of loop head:            57 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (0%)
  Times precision was empty:       1537 (32%)
  Times precision was {false}:     74 (2%)
  Times result was cached:         3078 (64%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      130 (3%)
  Times result was 'false':        366 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         1493
  BDD entailment checks:           623
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          4
Number of abstraction locations:          45
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         4873
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 23.89
Number of irrelevant predicates:          2144 (44%)
Number of preds handled by boolean abs:   155 (3%)
  Total number of models for allsat:      155
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.19

Time for post operator:                  0.643s
  Time for path formula creation:        0.575s
Time for strengthen operator:            0.058s
Time for prec operator:                  1.167s
  Time for abstraction:                  1.005s (Max:     0.016s, Count: 4819)
    Boolean abstraction:                 0.103s
    Solving time:                        0.049s (Max:     0.006s)
    Model enumeration time:              0.005s
    Time for BDD construction:           0.034s (Max:     0.010s)
Time for merge operator:                 0.020s
Time for coverage check:                 0.019s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):     0.054s

Number of path formula cache hits:   16196 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.501s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         285 (count: 3365, min: 0, max: 97, avg: 0.08)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.123s
Automaton transfers with branching:                0
Automaton transfer successors:                        18019 (count: 18019, min: 1, max: 1, avg: 1.00) [1 x 18019]

CPA algorithm statistics
------------------------
Number of iterations:            13826
Max size of waitlist:            61
Average size of waitlist:        18
Number of computed successors:   15694
Max successors for one state:    2
Number of times merged:          435
Number of times stopped:         905
Number of times breaked:         16

Total time for CPA algorithm:         3.159s (Max:     0.478s)
  Time for choose from waitlist:      0.031s
  Time for precision adjustment:      1.412s
  Time for transfer relation:         1.272s
  Time for merge operator:            0.079s
  Time for stop operator:             0.095s
  Time for adding to reached set:     0.069s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                 520 (count: 16, min: 25, max: 50, avg: 32.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.244s
  Counterexample analysis:                             0.135s (Max:     0.016s, Calls: 16)
    Refinement sat check:                              0.059s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.020s
  ARG update:                                          0.063s

Length of refined path (in blocks):                     393 (count: 16, min: 15, max: 42, avg: 24.56)
Number of affected states:                              377 (count: 16, min: 14, max: 41, avg: 23.56)
Length (states) of path with itp 'true':                  0 (count: 16, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       377 (count: 16, min: 14, max: 41, avg: 23.56)
Length (states) of path with itp 'false':                16 (count: 16, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 16, min: 0, max: 1, avg: 0.13)
Equal non-trivial interpolants along paths:             359 (count: 16, min: 13, max: 40, avg: 22.44)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 1326
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 837.25
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.447s
Time for refinements:                 0.288s
Average time for refinement:          0.018s
Max time for refinement:              0.043s

Code Coverage
-----------------------------
  Function coverage:      0.513
  Visited lines:          112
  Total lines:            441
  Line coverage:          0.254
  Visited conditions:     34
  Total conditions:       74
  Condition coverage:     0.459

CPAchecker general statistics
-----------------------------
Number of program locations:     639
Number of CFA edges:             691
Number of relevant variables:    116
Number of functions:             39
Number of loops:                 5
Size of reached set:             1076
  Number of reached locations:   154 (24%)
    Avg states per location:     6
    Max states per location:     38 (at node N606)
  Number of reached functions:   20 (51%)
  Number of partitions:          1073
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N15 (before lines 64-111), Function test called from node N277, stack depth 3 [8bde368], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.128s
  Time for loading CPAs:          0.513s
  Time for loading parser:        0.479s
  Time for CFA construction:      1.002s
    Time for parsing file(s):     0.353s
    Time for AST to CFA:          0.262s
    Time for CFA sanity check:    0.076s
    Time for post-processing:     0.182s
      Time for var class.:        0.084s
Time for Analysis:                3.448s
CPU time for analysis:            3.450s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.580s
Total CPU time for CPAchecker:    5.580s
Time for statistics:              0.077s

Time for Garbage Collector:       0.122s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     35MB (    33 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8047MB (  7675 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
