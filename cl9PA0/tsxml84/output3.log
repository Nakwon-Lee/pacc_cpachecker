scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_taraacww/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 261: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 270: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 325: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 389: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 421: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 430: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 897: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 958: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 981: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4154 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4042 (97%)
  Because of loop head:            88 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24 (1%)
  Times precision was empty:       328 (8%)
  Times precision was {false}:     101 (2%)
  Times result was cached:         3331 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      394 (9%)
  Times result was 'false':        482 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         1552
  BDD entailment checks:           874
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          5
Number of abstraction locations:          45
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         8180
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 16.53
Number of irrelevant predicates:          2192 (27%)
Number of preds handled by boolean abs:   716 (9%)
  Total number of models for allsat:      421
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  0.566s
  Time for path formula creation:        0.543s
Time for strengthen operator:            0.036s
Time for prec operator:                  1.811s
  Time for abstraction:                  1.669s (Max:     0.018s, Count: 4154)
    Boolean abstraction:                 0.375s
    Solving time:                        0.245s (Max:     0.017s)
    Model enumeration time:              0.032s
    Time for BDD construction:           0.087s (Max:     0.013s)
Time for merge operator:                 0.016s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):     0.277s

Number of path formula cache hits:   11332 (64%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.476s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               229
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         852 (count: 4163, min: 0, max: 249, avg: 0.20)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.134s
Automaton transfers with branching:                0
Automaton transfer successors:                        15315 (count: 15315, min: 1, max: 1, avg: 1.00) [1 x 15315]

CPA algorithm statistics
------------------------
Number of iterations:            11883
Max size of waitlist:            26
Average size of waitlist:        9
Number of computed successors:   13384
Max successors for one state:    2
Number of times merged:          339
Number of times stopped:         757
Number of times breaked:         24

Total time for CPA algorithm:         3.659s (Max:     0.341s)
  Time for choose from waitlist:      0.021s
  Time for precision adjustment:      2.037s
  Time for transfer relation:         1.203s
  Time for merge operator:            0.068s
  Time for stop operator:             0.093s
  Time for adding to reached set:     0.094s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                1354 (count: 24, min: 25, max: 76, avg: 56.42)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.363s
  Counterexample analysis:                             0.224s (Max:     0.018s, Calls: 24)
    Refinement sat check:                              0.090s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.032s
  Precision update:                                    0.013s
  ARG update:                                          0.062s

Length of refined path (in blocks):                     790 (count: 24, min: 19, max: 42, avg: 32.92)
Number of affected states:                              574 (count: 24, min: 13, max: 41, avg: 23.92)
Length (states) of path with itp 'true':                192 (count: 24, min: 0, max: 18, avg: 8.00)
Length (states) of path with itp non-trivial itp:       574 (count: 24, min: 13, max: 41, avg: 23.92)
Length (states) of path with itp 'false':                24 (count: 24, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 24, min: 0, max: 1, avg: 0.04)
Equal non-trivial interpolants along paths:             549 (count: 24, min: 12, max: 40, avg: 22.88)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 1043
Max. size of reached set after ref.:  510
Avg. size of reached set before ref.: 600.00
Avg. size of reached set after ref.:  130.92

Total time for CEGAR algorithm:       4.090s
Time for refinements:                 0.423s
Average time for refinement:          0.017s
Max time for refinement:              0.038s

Code Coverage
-----------------------------
  Function coverage:      0.513
  Visited lines:          112
  Total lines:            441
  Line coverage:          0.254
  Visited conditions:     34
  Total conditions:       74
  Condition coverage:     0.459

CPAchecker general statistics
-----------------------------
Number of program locations:     639
Number of CFA edges:             691
Number of relevant variables:    116
Number of functions:             39
Number of loops:                 5
Size of reached set:             888
  Number of reached locations:   154 (24%)
    Avg states per location:     5
    Max states per location:     32 (at node N606)
  Number of reached functions:   20 (51%)
  Number of partitions:          879
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N15 (before lines 64-111), Function test called from node N277, stack depth 3 [a240452], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.162s
  Time for loading CPAs:          0.577s
  Time for loading parser:        0.471s
  Time for CFA construction:      0.965s
    Time for parsing file(s):     0.342s
    Time for AST to CFA:          0.232s
    Time for CFA sanity check:    0.080s
    Time for post-processing:     0.194s
      Time for var class.:        0.071s
Time for Analysis:                4.090s
CPU time for analysis:            4.090s
Time for analyzing result:        0.001s
Total time for CPAchecker:        6.256s
Total CPU time for CPAchecker:    6.250s
Time for statistics:              0.067s

Time for Garbage Collector:       0.101s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     37MB (    35 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     29MB (    28 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8051MB (  7678 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
