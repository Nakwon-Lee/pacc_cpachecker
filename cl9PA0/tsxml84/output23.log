scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0tp0xcha/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 261: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 270: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 325: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 389: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 421: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 430: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 897: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 958: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 981: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2063 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2014 (98%)
  Because of loop head:            35 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (1%)
  Times precision was empty:       332 (16%)
  Times precision was {false}:     49 (2%)
  Times result was cached:         1592 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      90 (4%)
  Times result was 'false':        244 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         539
  BDD entailment checks:           213
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          4
Number of abstraction locations:          45
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         2426
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 17.45
Number of irrelevant predicates:          750 (31%)
Number of preds handled by boolean abs:   106 (4%)
  Total number of models for allsat:      106
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.18

Time for post operator:                  0.313s
  Time for path formula creation:        0.306s
Time for strengthen operator:            0.042s
Time for prec operator:                  0.697s
  Time for abstraction:                  0.619s (Max:     0.020s, Count: 2063)
    Boolean abstraction:                 0.061s
    Solving time:                        0.048s (Max:     0.005s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.014s (Max:     0.007s)
Time for merge operator:                 0.003s
Time for coverage check:                 0.009s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):     0.048s

Number of path formula cache hits:   6987 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.266s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         187 (count: 1365, min: 0, max: 131, avg: 0.14)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.067s
Automaton transfers with branching:                0
Automaton transfer successors:                         7691 (count: 7691, min: 1, max: 1, avg: 1.00) [1 x 7691]

CPA algorithm statistics
------------------------
Number of iterations:            5936
Max size of waitlist:            13
Average size of waitlist:        6
Number of computed successors:   6633
Max successors for one state:    2
Number of times merged:          163
Number of times stopped:         352
Number of times breaked:         14

Total time for CPA algorithm:         1.824s (Max:     0.159s)
  Time for choose from waitlist:      0.028s
  Time for precision adjustment:      0.831s
  Time for transfer relation:         0.750s
  Time for merge operator:            0.020s
  Time for stop operator:             0.030s
  Time for adding to reached set:     0.058s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14
Avg. length of target path (in blocks):                 471 (count: 14, min: 25, max: 50, avg: 33.64)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.148s
  Counterexample analysis:                             0.086s (Max:     0.018s, Calls: 14)
    Refinement sat check:                              0.037s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.023s
  Precision update:                                    0.009s
  ARG update:                                          0.026s

Length of refined path (in blocks):                     349 (count: 14, min: 15, max: 42, avg: 24.93)
Number of affected states:                              335 (count: 14, min: 14, max: 41, avg: 23.93)
Length (states) of path with itp 'true':                  0 (count: 14, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       335 (count: 14, min: 14, max: 41, avg: 23.93)
Length (states) of path with itp 'false':                14 (count: 14, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 14, min: 0, max: 1, avg: 0.07)
Equal non-trivial interpolants along paths:             320 (count: 14, min: 13, max: 40, avg: 22.86)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 729
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 369.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.013s
Time for refinements:                 0.182s
Average time for refinement:          0.013s
Max time for refinement:              0.040s

Code Coverage
-----------------------------
  Function coverage:      0.513
  Visited lines:          112
  Total lines:            441
  Line coverage:          0.254
  Visited conditions:     34
  Total conditions:       74
  Condition coverage:     0.459

CPAchecker general statistics
-----------------------------
Number of program locations:     639
Number of CFA edges:             691
Number of relevant variables:    116
Number of functions:             39
Number of loops:                 5
Size of reached set:             914
  Number of reached locations:   154 (24%)
    Avg states per location:     5
    Max states per location:     34 (at node N606)
  Number of reached functions:   20 (51%)
  Number of partitions:          913
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N15 (before lines 64-111), Function test called from node N277, stack depth 3 [135a8c6f], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.140s
  Time for loading CPAs:          0.565s
  Time for loading parser:        0.463s
  Time for CFA construction:      1.000s
    Time for parsing file(s):     0.322s
    Time for AST to CFA:          0.290s
    Time for CFA sanity check:    0.054s
    Time for post-processing:     0.204s
      Time for var class.:        0.082s
Time for Analysis:                2.013s
CPU time for analysis:            2.020s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.156s
Total CPU time for CPAchecker:    4.160s
Time for statistics:              0.077s

Time for Garbage Collector:       0.088s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 55MB (    53 MiB) max;     32MB (    31 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     26MB (    25 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     28MB (    26 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7976MB (  7606 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
