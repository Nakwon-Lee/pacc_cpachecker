scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product32_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ej8n2do1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 260: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 324: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 483: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 532: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 564: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 573: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 932: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 978: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 769: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            10894 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10769 (99%)
  Because of loop head:            94 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         31 (0%)
  Times precision was empty:       2783 (26%)
  Times precision was {false}:     119 (1%)
  Times result was cached:         7606 (70%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      386 (4%)
  Times result was 'false':        615 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         4555
  BDD entailment checks:           2679
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          44
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         15330
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 30.36
Number of irrelevant predicates:          7743 (51%)
Number of preds handled by boolean abs:   670 (4%)
  Total number of models for allsat:      458
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.19

Time for post operator:                  0.987s
  Time for path formula creation:        0.921s
Time for strengthen operator:            0.106s
Time for prec operator:                  2.419s
  Time for abstraction:                  2.146s (Max:     0.015s, Count: 10894)
    Boolean abstraction:                 0.349s
    Solving time:                        0.208s (Max:     0.013s)
    Model enumeration time:              0.029s
    Time for BDD construction:           0.053s (Max:     0.013s)
Time for merge operator:                 0.053s
Time for coverage check:                 0.046s
  Time for BDD entailment checks:        0.043s
Total time for SMT solver (w/o itp):     0.237s

Number of path formula cache hits:   39502 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.774s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               247
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         862 (count: 8461, min: 0, max: 126, avg: 0.10)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.226s
Automaton transfers with branching:                0
Automaton transfer successors:                        43505 (count: 43505, min: 1, max: 1, avg: 1.00) [1 x 43505]

CPA algorithm statistics
------------------------
Number of iterations:            33609
Max size of waitlist:            98
Average size of waitlist:        37
Number of computed successors:   38247
Max successors for one state:    2
Number of times merged:          938
Number of times stopped:         2476
Number of times breaked:         31

Total time for CPA algorithm:         5.533s (Max:     0.450s)
  Time for choose from waitlist:      0.096s
  Time for precision adjustment:      2.783s
  Time for transfer relation:         1.989s
  Time for merge operator:            0.091s
  Time for stop operator:             0.170s
  Time for adding to reached set:     0.098s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   31
Avg. length of target path (in blocks):                 889 (count: 31, min: 21, max: 38, avg: 28.68)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.472s
  Counterexample analysis:                             0.231s (Max:     0.017s, Calls: 31)
    Refinement sat check:                              0.103s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.037s
  Precision update:                                    0.020s
  ARG update:                                          0.144s

Length of refined path (in blocks):                     670 (count: 31, min: 15, max: 33, avg: 21.61)
Number of affected states:                              472 (count: 31, min: 2, max: 32, avg: 15.23)
Length (states) of path with itp 'true':                167 (count: 31, min: 0, max: 19, avg: 5.39)
Length (states) of path with itp non-trivial itp:       472 (count: 31, min: 2, max: 32, avg: 15.23)
Length (states) of path with itp 'false':                31 (count: 31, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 31, min: 0, max: 1, avg: 0.10)
Equal non-trivial interpolants along paths:             438 (count: 31, min: 1, max: 30, avg: 14.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 1982
Max. size of reached set after ref.:  367
Avg. size of reached set before ref.: 1171.35
Avg. size of reached set after ref.:  75.52

Total time for CEGAR algorithm:       6.090s
Time for refinements:                 0.554s
Average time for refinement:          0.017s
Max time for refinement:              0.054s

Code Coverage
-----------------------------
  Function coverage:      0.513
  Visited lines:          115
  Total lines:            444
  Line coverage:          0.259
  Visited conditions:     34
  Total conditions:       74
  Condition coverage:     0.459

CPAchecker general statistics
-----------------------------
Number of program locations:     642
Number of CFA edges:             693
Number of relevant variables:    114
Number of functions:             39
Number of loops:                 5
Size of reached set:             1186
  Number of reached locations:   156 (24%)
    Avg states per location:     7
    Max states per location:     43 (at node N330)
  Number of reached functions:   20 (51%)
  Number of partitions:          1182
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N15 (before lines 65-114), Function test called from node N224, stack depth 3 [4a2eb2e], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.204s
  Time for loading CPAs:          0.628s
  Time for loading parser:        0.486s
  Time for CFA construction:      0.977s
    Time for parsing file(s):     0.347s
    Time for AST to CFA:          0.239s
    Time for CFA sanity check:    0.061s
    Time for post-processing:     0.210s
      Time for var class.:        0.085s
Time for Analysis:                6.091s
CPU time for analysis:            6.090s
Time for analyzing result:        0.000s
Total time for CPAchecker:        8.297s
Total CPU time for CPAchecker:    8.300s
Time for statistics:              0.076s

Time for Garbage Collector:       0.155s (in 18 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     39MB (    37 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     30MB (    29 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8059MB (  7686 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
