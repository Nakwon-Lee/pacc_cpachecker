scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product32_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wydf_nft/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 260: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 324: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 483: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 532: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 564: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 573: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 932: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 978: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 769: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            15372 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15170 (99%)
  Because of loop head:            160 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         42 (0%)
  Times precision was empty:       4721 (31%)
  Times precision was {false}:     145 (1%)
  Times result was cached:         9988 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      518 (3%)
  Times result was 'false':        1262 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         4394
  BDD entailment checks:           2492
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          8
Number of abstraction locations:          44
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         18445
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 27.82
Number of irrelevant predicates:          9127 (49%)
Number of preds handled by boolean abs:   1099 (6%)
  Total number of models for allsat:      590
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.14

Time for post operator:                  1.021s
  Time for path formula creation:        0.951s
Time for strengthen operator:            0.063s
Time for prec operator:                  2.955s
  Time for abstraction:                  2.643s (Max:     0.017s, Count: 15372)
    Boolean abstraction:                 0.376s
    Solving time:                        0.254s (Max:     0.012s)
    Model enumeration time:              0.019s
    Time for BDD construction:           0.089s (Max:     0.009s)
Time for merge operator:                 0.057s
Time for coverage check:                 0.059s
  Time for BDD entailment checks:        0.056s
Total time for SMT solver (w/o itp):     0.273s

Number of path formula cache hits:   55176 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.829s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               312
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1155 (count: 11226, min: 0, max: 208, avg: 0.10)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.262s
Automaton transfers with branching:                0
Automaton transfer successors:                        58151 (count: 58151, min: 1, max: 1, avg: 1.00) [1 x 58151]

CPA algorithm statistics
------------------------
Number of iterations:            44812
Max size of waitlist:            84
Average size of waitlist:        36
Number of computed successors:   50203
Max successors for one state:    2
Number of times merged:          951
Number of times stopped:         2464
Number of times breaked:         42

Total time for CPA algorithm:         6.728s (Max:     0.610s)
  Time for choose from waitlist:      0.153s
  Time for precision adjustment:      3.449s
  Time for transfer relation:         2.311s
  Time for merge operator:            0.112s
  Time for stop operator:             0.160s
  Time for adding to reached set:     0.183s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   42
Avg. length of target path (in blocks):                1318 (count: 42, min: 21, max: 51, avg: 31.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.542s
  Counterexample analysis:                             0.229s (Max:     0.013s, Calls: 42)
    Refinement sat check:                              0.095s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.030s
  Precision update:                                    0.058s
  ARG update:                                          0.190s

Length of refined path (in blocks):                     987 (count: 42, min: 15, max: 42, avg: 23.50)
Number of affected states:                              619 (count: 42, min: 2, max: 41, avg: 14.74)
Length (states) of path with itp 'true':                326 (count: 42, min: 0, max: 19, avg: 7.76)
Length (states) of path with itp non-trivial itp:       619 (count: 42, min: 2, max: 41, avg: 14.74)
Length (states) of path with itp 'false':                42 (count: 42, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 42, min: 0, max: 1, avg: 0.07)
Equal non-trivial interpolants along paths:             574 (count: 42, min: 1, max: 40, avg: 13.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                42
Number of successful refinements:     42
Number of failed refinements:         0
Max. size of reached set before ref.: 2620
Max. size of reached set after ref.:  1395
Avg. size of reached set before ref.: 1379.71
Avg. size of reached set after ref.:  305.29

Total time for CEGAR algorithm:       7.397s
Time for refinements:                 0.657s
Average time for refinement:          0.015s
Max time for refinement:              0.072s

Code Coverage
-----------------------------
  Function coverage:      0.513
  Visited lines:          115
  Total lines:            444
  Line coverage:          0.259
  Visited conditions:     34
  Total conditions:       74
  Condition coverage:     0.459

CPAchecker general statistics
-----------------------------
Number of program locations:     642
Number of CFA edges:             693
Number of relevant variables:    114
Number of functions:             39
Number of loops:                 5
Size of reached set:             1352
  Number of reached locations:   156 (24%)
    Avg states per location:     8
    Max states per location:     47 (at node N330)
  Number of reached functions:   20 (51%)
  Number of partitions:          1336
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N184 (before lines 362-376), Function cleanup called from node N45, stack depth 4 [54e8ba11], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          2.398s
  Time for loading CPAs:          0.619s
  Time for loading parser:        0.495s
  Time for CFA construction:      1.063s
    Time for parsing file(s):     0.369s
    Time for AST to CFA:          0.268s
    Time for CFA sanity check:    0.067s
    Time for post-processing:     0.216s
      Time for var class.:        0.094s
Time for Analysis:                7.397s
CPU time for analysis:            7.390s
Time for analyzing result:        0.002s
Total time for CPAchecker:        9.798s
Total CPU time for CPAchecker:    9.800s
Time for statistics:              0.082s

Time for Garbage Collector:       0.208s (in 22 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     38MB (    36 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     31MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8063MB (  7689 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
