scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product32_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fiu6q7gj/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 260: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 324: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 483: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 532: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 564: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 573: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 932: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 978: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 769: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            9614 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  9494 (99%)
  Because of loop head:            86 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         34 (0%)
  Times precision was empty:       3095 (32%)
  Times precision was {false}:     116 (1%)
  Times result was cached:         6009 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      394 (4%)
  Times result was 'false':        886 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         2539
  BDD entailment checks:           1541
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          8
Number of abstraction locations:          44
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         17642
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 34.59
Number of irrelevant predicates:          9207 (52%)
Number of preds handled by boolean abs:   846 (5%)
  Total number of models for allsat:      417
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.06

Time for post operator:                  0.771s
  Time for path formula creation:        0.716s
Time for strengthen operator:            0.080s
Time for prec operator:                  2.137s
  Time for abstraction:                  1.917s (Max:     0.016s, Count: 9614)
    Boolean abstraction:                 0.342s
    Solving time:                        0.227s (Max:     0.013s)
    Model enumeration time:              0.017s
    Time for BDD construction:           0.045s (Max:     0.009s)
Time for merge operator:                 0.037s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     0.244s

Number of path formula cache hits:   30826 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.633s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               282
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         883 (count: 7702, min: 0, max: 144, avg: 0.11)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.224s
Automaton transfers with branching:                0
Automaton transfer successors:                        34571 (count: 34571, min: 1, max: 1, avg: 1.00) [1 x 34571]

CPA algorithm statistics
------------------------
Number of iterations:            27809
Max size of waitlist:            26
Average size of waitlist:        14
Number of computed successors:   30821
Max successors for one state:    2
Number of times merged:          499
Number of times stopped:         1710
Number of times breaked:         34

Total time for CPA algorithm:         4.924s (Max:     0.840s)
  Time for choose from waitlist:      0.065s
  Time for precision adjustment:      2.570s
  Time for transfer relation:         1.713s
  Time for merge operator:            0.116s
  Time for stop operator:             0.124s
  Time for adding to reached set:     0.107s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   34
Avg. length of target path (in blocks):                1380 (count: 34, min: 23, max: 69, avg: 40.59)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.452s
  Counterexample analysis:                             0.233s (Max:     0.019s, Calls: 34)
    Refinement sat check:                              0.096s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.050s
  Precision update:                                    0.037s
  ARG update:                                          0.109s

Length of refined path (in blocks):                     954 (count: 34, min: 15, max: 53, avg: 28.06)
Number of affected states:                              678 (count: 34, min: 2, max: 50, avg: 19.94)
Length (states) of path with itp 'true':                242 (count: 34, min: 0, max: 37, avg: 7.12)
Length (states) of path with itp non-trivial itp:       678 (count: 34, min: 2, max: 50, avg: 19.94)
Length (states) of path with itp 'false':                34 (count: 34, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           6 (count: 34, min: 0, max: 1, avg: 0.18)
Equal non-trivial interpolants along paths:             638 (count: 34, min: 1, max: 48, avg: 18.76)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                34
Number of successful refinements:     34
Number of failed refinements:         0
Max. size of reached set before ref.: 1633
Max. size of reached set after ref.:  790
Avg. size of reached set before ref.: 989.00
Avg. size of reached set after ref.:  180.24

Total time for CEGAR algorithm:       5.507s
Time for refinements:                 0.576s
Average time for refinement:          0.016s
Max time for refinement:              0.080s

Code Coverage
-----------------------------
  Function coverage:      0.487
  Visited lines:          99
  Total lines:            444
  Line coverage:          0.223
  Visited conditions:     32
  Total conditions:       74
  Condition coverage:     0.432

CPAchecker general statistics
-----------------------------
Number of program locations:     642
Number of CFA edges:             693
Number of relevant variables:    114
Number of functions:             39
Number of loops:                 5
Size of reached set:             728
  Number of reached locations:   135 (21%)
    Avg states per location:     5
    Max states per location:     24 (at node N330)
  Number of reached functions:   19 (49%)
  Number of partitions:          720
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N15 (before lines 65-114), Function test called from node N224, stack depth 3 [eba003e], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.210s
  Time for loading CPAs:          0.482s
  Time for loading parser:        0.526s
  Time for CFA construction:      1.068s
    Time for parsing file(s):     0.377s
    Time for AST to CFA:          0.254s
    Time for CFA sanity check:    0.083s
    Time for post-processing:     0.233s
      Time for var class.:        0.109s
Time for Analysis:                5.507s
CPU time for analysis:            5.510s
Time for analyzing result:        0.001s
Total time for CPAchecker:        7.721s
Total CPU time for CPAchecker:    7.720s
Time for statistics:              0.071s

Time for Garbage Collector:       0.141s (in 16 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     38MB (    36 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    28 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8056MB (  7683 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
