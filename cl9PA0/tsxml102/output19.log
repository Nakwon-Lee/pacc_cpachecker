scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product40_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__a8ksa56/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 166: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 175: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 230: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 645: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 691: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 863: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 886: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 966: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 980: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 482: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            43763 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  43087 (98%)
  Because of loop head:            592 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         84 (0%)
  Times precision was empty:       2594 (6%)
  Times precision was {false}:     520 (1%)
  Times result was cached:         33296 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7353 (17%)
  Times result was 'false':        5992 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         25697
  BDD entailment checks:           19445
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          22
Number of abstraction locations:          60
Max number of predicates per location:    14
Avg number of predicates per location:    6
Total predicates per abstraction:         229000
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 29.09
Number of irrelevant predicates:          91450 (40%)
Number of preds handled by boolean abs:   38902 (17%)
  Total number of models for allsat:      11276
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.53

Time for post operator:                  1.807s
  Time for path formula creation:        1.685s
Time for strengthen operator:            0.198s
Time for prec operator:                 18.718s
  Time for abstraction:                 18.087s (Max:     0.046s, Count: 43763)
    Boolean abstraction:                 5.062s
    Solving time:                        3.591s (Max:     0.036s)
    Model enumeration time:              0.552s
    Time for BDD construction:           0.355s (Max:     0.013s)
Time for merge operator:                 0.080s
Time for coverage check:                 0.062s
  Time for BDD entailment checks:        0.053s
Total time for SMT solver (w/o itp):     4.143s

Number of path formula cache hits:   141229 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.370s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               4494
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       20763 (count: 72759, min: 0, max: 1056, avg: 0.29)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.466s
Automaton transfers with branching:                0
Automaton transfer successors:                       158365 (count: 158365, min: 1, max: 1, avg: 1.00) [1 x 158365]

CPA algorithm statistics
------------------------
Number of iterations:            122525
Max size of waitlist:            86
Average size of waitlist:        34
Number of computed successors:   138138
Max successors for one state:    2
Number of times merged:          3126
Number of times stopped:         7786
Number of times breaked:         84

Total time for CPA algorithm:        25.571s (Max:     1.877s)
  Time for choose from waitlist:      0.159s
  Time for precision adjustment:     19.718s
  Time for transfer relation:         4.179s
  Time for merge operator:            0.199s
  Time for stop operator:             0.324s
  Time for adding to reached set:     0.284s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   84
Avg. length of target path (in blocks):                4369 (count: 84, min: 25, max: 108, avg: 52.01)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.494s
  Counterexample analysis:                             0.879s (Max:     0.038s, Calls: 84)
    Refinement sat check:                              0.356s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.086s
  Precision update:                                    0.094s
  ARG update:                                          0.368s

Length of refined path (in blocks):                    3498 (count: 84, min: 15, max: 98, avg: 41.64)
Number of affected states:                             1779 (count: 84, min: 6, max: 73, avg: 21.18)
Length (states) of path with itp 'true':               1635 (count: 84, min: 0, max: 55, avg: 19.46)
Length (states) of path with itp non-trivial itp:      1779 (count: 84, min: 6, max: 73, avg: 21.18)
Length (states) of path with itp 'false':                84 (count: 84, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          61 (count: 84, min: 0, max: 5, avg: 0.73)
Equal non-trivial interpolants along paths:            1634 (count: 84, min: 5, max: 70, avg: 19.45)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                84
Number of successful refinements:     84
Number of failed refinements:         0
Max. size of reached set before ref.: 9011
Max. size of reached set after ref.:  7988
Avg. size of reached set before ref.: 2857.88
Avg. size of reached set after ref.:  1415.46

Total time for CEGAR algorithm:      27.537s
Time for refinements:                 1.829s
Average time for refinement:          0.021s
Max time for refinement:              0.063s

Code Coverage
-----------------------------
  Function coverage:      0.718
  Visited lines:          145
  Total lines:            442
  Line coverage:          0.328
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     638
Number of CFA edges:             689
Number of relevant variables:    115
Number of functions:             39
Number of loops:                 5
Size of reached set:             3198
  Number of reached locations:   198 (31%)
    Avg states per location:     16
    Max states per location:     70 (at node N8)
  Number of reached functions:   28 (72%)
  Number of partitions:          3140
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N146 (after line 292), Function test called from node N537, stack depth 3 [77b8e646], stack [main, runTest, test]])
  Number of target states:       0
  Size of final wait list        23

Time for analysis setup:          2.283s
  Time for loading CPAs:          0.557s
  Time for loading parser:        0.520s
  Time for CFA construction:      1.040s
    Time for parsing file(s):     0.401s
    Time for AST to CFA:          0.248s
    Time for CFA sanity check:    0.066s
    Time for post-processing:     0.187s
      Time for var class.:        0.070s
Time for Analysis:               27.537s
CPU time for analysis:           27.550s
Total time for CPAchecker:       29.823s
Total CPU time for CPAchecker:   29.830s
Time for statistics:              0.103s

Time for Garbage Collector:       0.884s (in 94 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 95MB (    91 MiB) max;     51MB (    49 MiB) avg;     99MB (    95 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     34MB (    32 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8154MB (  7776 MiB) max;   8079MB (  7704 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
