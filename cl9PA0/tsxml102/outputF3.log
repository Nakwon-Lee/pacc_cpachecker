scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product40_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_17lld9ed/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 166: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 175: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 230: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 645: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 691: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 863: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 886: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 966: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 980: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 482: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            30777 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  30444 (99%)
  Because of loop head:            207 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         126 (0%)
  Times precision was empty:       1188 (4%)
  Times precision was {false}:     544 (2%)
  Times result was cached:         18562 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10483 (34%)
  Times result was 'false':        4993 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         28517
  BDD entailment checks:           23333
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          24
Number of abstraction locations:          57
Max number of predicates per location:    16
Avg number of predicates per location:    8
Total predicates per abstraction:         212812
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 19.30
Number of irrelevant predicates:          43519 (20%)
Number of preds handled by boolean abs:   74987 (35%)
  Total number of models for allsat:      16337
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.56

Time for post operator:                  1.471s
  Time for path formula creation:        1.413s
Time for strengthen operator:            0.123s
Time for prec operator:                 21.456s
  Time for abstraction:                 21.041s (Max:     0.021s, Count: 30777)
    Boolean abstraction:                 7.448s
    Solving time:                        5.474s (Max:     0.013s)
    Model enumeration time:              0.729s
    Time for BDD construction:           0.359s (Max:     0.012s)
Time for merge operator:                 0.082s
Time for coverage check:                 0.053s
  Time for BDD entailment checks:        0.037s
Total time for SMT solver (w/o itp):     6.203s

Number of path formula cache hits:   81256 (62%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.217s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               9712
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       33643 (count: 96906, min: 0, max: 1328, avg: 0.35)
Time for BDD node cleanup:                             0.027s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.312s
Automaton transfers with branching:                0
Automaton transfer successors:                       114126 (count: 114126, min: 1, max: 1, avg: 1.00) [1 x 114126]

CPA algorithm statistics
------------------------
Number of iterations:            89512
Max size of waitlist:            36
Average size of waitlist:        10
Number of computed successors:   100373
Max successors for one state:    2
Number of times merged:          2592
Number of times stopped:         5471
Number of times breaked:         126

Total time for CPA algorithm:        26.575s (Max:     2.216s)
  Time for choose from waitlist:      0.063s
  Time for precision adjustment:     22.262s
  Time for transfer relation:         3.086s
  Time for merge operator:            0.194s
  Time for stop operator:             0.206s
  Time for adding to reached set:     0.229s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   126
Avg. length of target path (in blocks):                7637 (count: 126, min: 26, max: 123, avg: 60.61)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.777s
  Counterexample analysis:                             1.366s (Max:     0.041s, Calls: 126)
    Refinement sat check:                              0.490s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.042s
  Precision update:                                    0.062s
  ARG update:                                          0.216s

Length of refined path (in blocks):                    6457 (count: 126, min: 14, max: 103, avg: 51.25)
Number of affected states:                             3040 (count: 126, min: 1, max: 90, avg: 24.13)
Length (states) of path with itp 'true':               3291 (count: 126, min: 0, max: 80, avg: 26.12)
Length (states) of path with itp non-trivial itp:      3040 (count: 126, min: 1, max: 90, avg: 24.13)
Length (states) of path with itp 'false':               126 (count: 126, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         119 (count: 126, min: 0, max: 5, avg: 0.94)
Equal non-trivial interpolants along paths:            2795 (count: 126, min: 0, max: 87, avg: 22.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                126
Number of successful refinements:     126
Number of failed refinements:         0
Max. size of reached set before ref.: 7706
Max. size of reached set after ref.:  3703
Avg. size of reached set before ref.: 2125.38
Avg. size of reached set after ref.:  1485.65

Total time for CEGAR algorithm:      28.740s
Time for refinements:                 2.033s
Average time for refinement:          0.016s
Max time for refinement:              0.061s

Code Coverage
-----------------------------
  Function coverage:      0.692
  Visited lines:          137
  Total lines:            442
  Line coverage:          0.310
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     638
Number of CFA edges:             689
Number of relevant variables:    115
Number of functions:             39
Number of loops:                 5
Size of reached set:             9304
  Number of reached locations:   188 (29%)
    Avg states per location:     49
    Max states per location:     228 (at node N472)
  Number of reached functions:   27 (69%)
  Number of partitions:          9131
    Avg size of partitions:      1
    Max size of partitions:      30 (with key [N146 (after line 292), Function test called from node N537, stack depth 3 [31ab9b80], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.063s
  Time for loading CPAs:          0.509s
  Time for loading parser:        0.455s
  Time for CFA construction:      0.957s
    Time for parsing file(s):     0.358s
    Time for AST to CFA:          0.229s
    Time for CFA sanity check:    0.069s
    Time for post-processing:     0.191s
      Time for var class.:        0.079s
Time for Analysis:               28.740s
CPU time for analysis:           28.730s
Time for analyzing result:        0.006s
Total time for CPAchecker:       30.807s
Total CPU time for CPAchecker:   30.790s
Time for statistics:              0.175s

Time for Garbage Collector:       0.737s (in 93 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 87MB (    83 MiB) max;     49MB (    47 MiB) avg;     91MB (    87 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     34MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8153MB (  7775 MiB) max;   8090MB (  7716 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
