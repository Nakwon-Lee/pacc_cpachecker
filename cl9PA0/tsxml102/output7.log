scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product40_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rncz7rv6/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 166: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 175: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 230: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 645: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 691: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 863: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 886: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 966: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 980: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 482: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            19566 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  19223 (98%)
  Because of loop head:            288 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         55 (0%)
  Times precision was empty:       540 (3%)
  Times precision was {false}:     487 (2%)
  Times result was cached:         9998 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8541 (44%)
  Times result was 'false':        3522 (18%)
Number of strengthen sat checks:   0
Number of coverage checks:         12228
  BDD entailment checks:           9540
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          25
Number of abstraction locations:          57
Max number of predicates per location:    17
Avg number of predicates per location:    8
Total predicates per abstraction:         128575
Max number of predicates per abstraction: 17
Avg number of predicates per abstraction: 14.24
Number of irrelevant predicates:          19671 (15%)
Number of preds handled by boolean abs:   54656 (43%)
  Total number of models for allsat:      8856
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.04

Time for post operator:                  1.499s
  Time for path formula creation:        1.452s
Time for strengthen operator:            0.121s
Time for prec operator:                 17.475s
  Time for abstraction:                 17.187s (Max:     0.019s, Count: 19566)
    Boolean abstraction:                 6.036s
    Solving time:                        4.597s (Max:     0.014s)
    Model enumeration time:              0.482s
    Time for BDD construction:           0.215s (Max:     0.011s)
Time for merge operator:                 0.089s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):     5.079s

Number of path formula cache hits:   35516 (45%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.315s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               5118
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       26851 (count: 68824, min: 0, max: 1365, avg: 0.39)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.253s
Automaton transfers with branching:                0
Automaton transfer successors:                        71113 (count: 71113, min: 1, max: 1, avg: 1.00) [1 x 71113]

CPA algorithm statistics
------------------------
Number of iterations:            55505
Max size of waitlist:            68
Average size of waitlist:        29
Number of computed successors:   62511
Max successors for one state:    2
Number of times merged:          1344
Number of times stopped:         2333
Number of times breaked:         55

Total time for CPA algorithm:        21.822s (Max:     2.751s)
  Time for choose from waitlist:      0.053s
  Time for precision adjustment:     18.005s
  Time for transfer relation:         2.761s
  Time for merge operator:            0.165s
  Time for stop operator:             0.209s
  Time for adding to reached set:     0.158s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   55
Avg. length of target path (in blocks):                9183 (count: 55, min: 25, max: 283, avg: 166.96)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.588s
  Counterexample analysis:                             2.232s (Max:     0.130s, Calls: 55)
    Refinement sat check:                              0.598s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.023s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.076s
  Precision update:                                    0.060s
  ARG update:                                          0.130s

Length of refined path (in blocks):                    5735 (count: 55, min: 19, max: 225, avg: 104.27)
Number of affected states:                             2333 (count: 55, min: 3, max: 153, avg: 42.42)
Length (states) of path with itp 'true':               3347 (count: 55, min: 0, max: 202, avg: 60.85)
Length (states) of path with itp non-trivial itp:      2333 (count: 55, min: 3, max: 153, avg: 42.42)
Length (states) of path with itp 'false':                55 (count: 55, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          56 (count: 55, min: 0, max: 6, avg: 1.02)
Equal non-trivial interpolants along paths:            2222 (count: 55, min: 2, max: 150, avg: 40.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                55
Number of successful refinements:     55
Number of failed refinements:         0
Max. size of reached set before ref.: 3374
Max. size of reached set after ref.:  2096
Avg. size of reached set before ref.: 1452.58
Avg. size of reached set after ref.:  530.40

Total time for CEGAR algorithm:      24.607s
Time for refinements:                 2.755s
Average time for refinement:          0.050s
Max time for refinement:              0.147s

Code Coverage
-----------------------------
  Function coverage:      0.692
  Visited lines:          137
  Total lines:            442
  Line coverage:          0.310
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     638
Number of CFA edges:             689
Number of relevant variables:    115
Number of functions:             39
Number of loops:                 5
Size of reached set:             5937
  Number of reached locations:   188 (29%)
    Avg states per location:     31
    Max states per location:     135 (at node N472)
  Number of reached functions:   27 (69%)
  Number of partitions:          5829
    Avg size of partitions:      1
    Max size of partitions:      16 (with key [N146 (after line 292), Function test called from node N537, stack depth 3 [12443b10], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.260s
  Time for loading CPAs:          0.612s
  Time for loading parser:        0.455s
  Time for CFA construction:      1.058s
    Time for parsing file(s):     0.375s
    Time for AST to CFA:          0.258s
    Time for CFA sanity check:    0.084s
    Time for post-processing:     0.208s
      Time for var class.:        0.090s
Time for Analysis:               24.607s
CPU time for analysis:           24.590s
Time for analyzing result:        0.004s
Total time for CPAchecker:       26.870s
Total CPU time for CPAchecker:   26.850s
Time for statistics:              0.129s

Time for Garbage Collector:       0.504s (in 60 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    69 MiB) max;     45MB (    43 MiB) avg;     78MB (    75 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    33 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8154MB (  7776 MiB) max;   8088MB (  7714 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
