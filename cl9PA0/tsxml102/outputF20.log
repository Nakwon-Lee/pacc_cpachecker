scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product40_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_aoyblyw4/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 166: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 175: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 230: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 645: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 691: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 863: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 886: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 966: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 980: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 482: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            27582 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  27204 (99%)
  Because of loop head:            256 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         122 (0%)
  Times precision was empty:       962 (3%)
  Times precision was {false}:     528 (2%)
  Times result was cached:         18750 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7342 (27%)
  Times result was 'false':        4531 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         23947
  BDD entailment checks:           19161
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          23
Number of abstraction locations:          57
Max number of predicates per location:    14
Avg number of predicates per location:    7
Total predicates per abstraction:         171113
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 21.74
Number of irrelevant predicates:          40867 (24%)
Number of preds handled by boolean abs:   43968 (26%)
  Total number of models for allsat:      8769
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.19

Time for post operator:                  1.319s
  Time for path formula creation:        1.268s
Time for strengthen operator:            0.122s
Time for prec operator:                 16.936s
  Time for abstraction:                 16.568s (Max:     0.025s, Count: 27582)
    Boolean abstraction:                 5.191s
    Solving time:                        3.845s (Max:     0.013s)
    Model enumeration time:              0.430s
    Time for BDD construction:           0.266s (Max:     0.012s)
Time for merge operator:                 0.078s
Time for coverage check:                 0.059s
  Time for BDD entailment checks:        0.047s
Total time for SMT solver (w/o itp):     4.275s

Number of path formula cache hits:   78438 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.109s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               4995
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       21071 (count: 70661, min: 0, max: 956, avg: 0.30)
Time for BDD node cleanup:                             0.020s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.253s
Automaton transfers with branching:                0
Automaton transfer successors:                       101462 (count: 101462, min: 1, max: 1, avg: 1.00) [1 x 101462]

CPA algorithm statistics
------------------------
Number of iterations:            79446
Max size of waitlist:            33
Average size of waitlist:        7
Number of computed successors:   88995
Max successors for one state:    2
Number of times merged:          2393
Number of times stopped:         4871
Number of times breaked:         122

Total time for CPA algorithm:        21.711s (Max:     1.274s)
  Time for choose from waitlist:      0.098s
  Time for precision adjustment:     17.651s
  Time for transfer relation:         2.943s
  Time for merge operator:            0.195s
  Time for stop operator:             0.206s
  Time for adding to reached set:     0.179s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   122
Avg. length of target path (in blocks):                7506 (count: 122, min: 25, max: 127, avg: 61.52)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.896s
  Counterexample analysis:                             1.409s (Max:     0.054s, Calls: 122)
    Refinement sat check:                              0.515s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.080s
  Precision update:                                    0.065s
  ARG update:                                          0.213s

Length of refined path (in blocks):                    6286 (count: 122, min: 14, max: 117, avg: 51.52)
Number of affected states:                             2841 (count: 122, min: 1, max: 73, avg: 23.29)
Length (states) of path with itp 'true':               3323 (count: 122, min: 0, max: 78, avg: 27.24)
Length (states) of path with itp non-trivial itp:      2841 (count: 122, min: 1, max: 73, avg: 23.29)
Length (states) of path with itp 'false':               122 (count: 122, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         132 (count: 122, min: 0, max: 4, avg: 1.08)
Equal non-trivial interpolants along paths:            2587 (count: 122, min: 0, max: 70, avg: 21.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                122
Number of successful refinements:     122
Number of failed refinements:         0
Max. size of reached set before ref.: 6367
Max. size of reached set after ref.:  3980
Avg. size of reached set before ref.: 2228.96
Avg. size of reached set after ref.:  1619.75

Total time for CEGAR algorithm:      24.113s
Time for refinements:                 2.243s
Average time for refinement:          0.018s
Max time for refinement:              0.072s

Code Coverage
-----------------------------
  Function coverage:      0.692
  Visited lines:          137
  Total lines:            442
  Line coverage:          0.310
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     638
Number of CFA edges:             689
Number of relevant variables:    115
Number of functions:             39
Number of loops:                 5
Size of reached set:             5271
  Number of reached locations:   188 (29%)
    Avg states per location:     28
    Max states per location:     145 (at node N472)
  Number of reached functions:   27 (69%)
  Number of partitions:          5145
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N129 (before lines 270-319), Function test called from node N537, stack depth 3 [26400876], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.082s
  Time for loading CPAs:          0.536s
  Time for loading parser:        0.486s
  Time for CFA construction:      0.946s
    Time for parsing file(s):     0.320s
    Time for AST to CFA:          0.241s
    Time for CFA sanity check:    0.054s
    Time for post-processing:     0.200s
      Time for var class.:        0.088s
Time for Analysis:               24.113s
CPU time for analysis:           24.120s
Time for analyzing result:        0.003s
Total time for CPAchecker:       26.198s
Total CPU time for CPAchecker:   26.200s
Time for statistics:              0.149s

Time for Garbage Collector:       0.573s (in 75 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 76MB (    72 MiB) max;     47MB (    45 MiB) avg;     81MB (    77 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     34MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8153MB (  7775 MiB) max;   8078MB (  7704 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
