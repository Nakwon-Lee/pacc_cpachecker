scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product46_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nl4gehm8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 642: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 778: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 787: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 231: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            45161 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  44545 (99%)
  Because of loop head:            527 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         89 (0%)
  Times precision was empty:       4381 (10%)
  Times precision was {false}:     239 (1%)
  Times result was cached:         37345 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3196 (7%)
  Times result was 'false':        4211 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         20015
  BDD entailment checks:           10183
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          11
Number of abstraction locations:          56
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         136796
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 39.82
Number of irrelevant predicates:          48519 (35%)
Number of preds handled by boolean abs:   9317 (7%)
  Total number of models for allsat:      3503
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.10

Time for post operator:                  1.888s
  Time for path formula creation:        1.772s
Time for strengthen operator:            0.220s
Time for prec operator:                  8.561s
  Time for abstraction:                  8.029s (Max:     0.023s, Count: 45161)
    Boolean abstraction:                 1.632s
    Solving time:                        1.114s (Max:     0.012s)
    Model enumeration time:              0.156s
    Time for BDD construction:           0.161s (Max:     0.012s)
Time for merge operator:                 0.112s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.042s
Total time for SMT solver (w/o itp):     1.270s

Number of path formula cache hits:   160976 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.408s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               624
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6856 (count: 37109, min: 0, max: 310, avg: 0.18)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.393s
Automaton transfers with branching:                0
Automaton transfer successors:                       178192 (count: 178192, min: 1, max: 1, avg: 1.00) [1 x 178192]

CPA algorithm statistics
------------------------
Number of iterations:            137491
Max size of waitlist:            118
Average size of waitlist:        44
Number of computed successors:   153726
Max successors for one state:    2
Number of times merged:          4916
Number of times stopped:         8621
Number of times breaked:         89

Total time for CPA algorithm:        15.035s (Max:     0.941s)
  Time for choose from waitlist:      0.130s
  Time for precision adjustment:      9.513s
  Time for transfer relation:         3.988s
  Time for merge operator:            0.238s
  Time for stop operator:             0.205s
  Time for adding to reached set:     0.271s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   89
Avg. length of target path (in blocks):                4000 (count: 89, min: 21, max: 85, avg: 44.94)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.137s
  Counterexample analysis:                             0.606s (Max:     0.022s, Calls: 89)
    Refinement sat check:                              0.271s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.017s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.061s
  Precision update:                                    0.061s
  ARG update:                                          0.342s

Length of refined path (in blocks):                    3198 (count: 89, min: 15, max: 71, avg: 35.93)
Number of affected states:                             1792 (count: 89, min: 2, max: 53, avg: 20.13)
Length (states) of path with itp 'true':               1317 (count: 89, min: 0, max: 51, avg: 14.80)
Length (states) of path with itp non-trivial itp:      1792 (count: 89, min: 2, max: 53, avg: 20.13)
Length (states) of path with itp 'false':                89 (count: 89, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          12 (count: 89, min: 0, max: 3, avg: 0.13)
Equal non-trivial interpolants along paths:            1691 (count: 89, min: 1, max: 51, avg: 19.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                89
Number of successful refinements:     89
Number of failed refinements:         0
Max. size of reached set before ref.: 8204
Max. size of reached set after ref.:  4523
Avg. size of reached set before ref.: 2339.24
Avg. size of reached set after ref.:  855.34

Total time for CEGAR algorithm:      16.465s
Time for refinements:                 1.347s
Average time for refinement:          0.015s
Max time for refinement:              0.046s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          150
  Total lines:            442
  Line coverage:          0.339
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     635
Number of CFA edges:             685
Number of relevant variables:    114
Number of functions:             38
Number of loops:                 5
Size of reached set:             8828
  Number of reached locations:   203 (32%)
    Avg states per location:     43
    Max states per location:     199 (at node N349)
  Number of reached functions:   26 (68%)
  Number of partitions:          8538
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N394 (before lines 557-571), Function cleanup called from node N643, stack depth 4 [17cbaa2e], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          1.973s
  Time for loading CPAs:          0.525s
  Time for loading parser:        0.437s
  Time for CFA construction:      0.893s
    Time for parsing file(s):     0.280s
    Time for AST to CFA:          0.244s
    Time for CFA sanity check:    0.062s
    Time for post-processing:     0.194s
      Time for var class.:        0.076s
Time for Analysis:               16.465s
CPU time for analysis:           16.460s
Time for analyzing result:        0.005s
Total time for CPAchecker:       18.449s
Total CPU time for CPAchecker:   18.450s
Time for statistics:              0.185s

Time for Garbage Collector:       0.635s (in 75 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 75MB (    72 MiB) max;     45MB (    43 MiB) avg;     89MB (    85 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    32 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
