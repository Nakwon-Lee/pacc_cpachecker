scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product46_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_f0k97u1x/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 642: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 778: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 787: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 231: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7779 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7592 (98%)
  Because of loop head:            138 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         49 (1%)
  Times precision was empty:       555 (7%)
  Times precision was {false}:     111 (1%)
  Times result was cached:         5619 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1494 (19%)
  Times result was 'false':        988 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         3356
  BDD entailment checks:           1990
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          11
Number of abstraction locations:          56
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         27932
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 17.40
Number of irrelevant predicates:          6514 (23%)
Number of preds handled by boolean abs:   4422 (16%)
  Total number of models for allsat:      1506
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  0.946s
  Time for path formula creation:        0.889s
Time for strengthen operator:            0.048s
Time for prec operator:                  4.439s
  Time for abstraction:                  4.227s (Max:     0.025s, Count: 7779)
    Boolean abstraction:                 1.117s
    Solving time:                        0.756s (Max:     0.013s)
    Model enumeration time:              0.106s
    Time for BDD construction:           0.125s (Max:     0.012s)
Time for merge operator:                 0.053s
Time for coverage check:                 0.037s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     0.862s

Number of path formula cache hits:   23275 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.805s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               518
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3403 (count: 12528, min: 0, max: 392, avg: 0.27)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.231s
Automaton transfers with branching:                0
Automaton transfer successors:                        29920 (count: 29920, min: 1, max: 1, avg: 1.00) [1 x 29920]

CPA algorithm statistics
------------------------
Number of iterations:            23629
Max size of waitlist:            23
Average size of waitlist:        7
Number of computed successors:   26198
Max successors for one state:    2
Number of times merged:          683
Number of times stopped:         1311
Number of times breaked:         49

Total time for CPA algorithm:         7.322s (Max:     0.827s)
  Time for choose from waitlist:      0.055s
  Time for precision adjustment:      4.740s
  Time for transfer relation:         1.855s
  Time for merge operator:            0.129s
  Time for stop operator:             0.154s
  Time for adding to reached set:     0.113s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   49
Avg. length of target path (in blocks):                2509 (count: 49, min: 21, max: 103, avg: 51.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.685s
  Counterexample analysis:                             0.458s (Max:     0.023s, Calls: 49)
    Refinement sat check:                              0.177s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.029s
  ARG update:                                          0.118s

Length of refined path (in blocks):                    1841 (count: 49, min: 15, max: 79, avg: 37.57)
Number of affected states:                             1113 (count: 49, min: 4, max: 70, avg: 22.71)
Length (states) of path with itp 'true':                679 (count: 49, min: 0, max: 53, avg: 13.86)
Length (states) of path with itp non-trivial itp:      1113 (count: 49, min: 4, max: 70, avg: 22.71)
Length (states) of path with itp 'false':                49 (count: 49, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          10 (count: 49, min: 0, max: 2, avg: 0.20)
Equal non-trivial interpolants along paths:            1054 (count: 49, min: 3, max: 68, avg: 21.51)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                49
Number of successful refinements:     49
Number of failed refinements:         0
Max. size of reached set before ref.: 2673
Max. size of reached set after ref.:  2240
Avg. size of reached set before ref.: 801.49
Avg. size of reached set after ref.:  361.65

Total time for CEGAR algorithm:       8.153s
Time for refinements:                 0.817s
Average time for refinement:          0.016s
Max time for refinement:              0.031s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          150
  Total lines:            442
  Line coverage:          0.339
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     635
Number of CFA edges:             685
Number of relevant variables:    114
Number of functions:             38
Number of loops:                 5
Size of reached set:             2348
  Number of reached locations:   203 (32%)
    Avg states per location:     11
    Max states per location:     58 (at node N460)
  Number of reached functions:   26 (68%)
  Number of partitions:          2261
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N464 (before line 675), Function timeShift called from node N633, stack depth 4 [6e212f38], stack [main, runTest, test, timeShift]])
  Number of target states:       0

Time for analysis setup:          2.165s
  Time for loading CPAs:          0.572s
  Time for loading parser:        0.500s
  Time for CFA construction:      1.005s
    Time for parsing file(s):     0.351s
    Time for AST to CFA:          0.225s
    Time for CFA sanity check:    0.068s
    Time for post-processing:     0.201s
      Time for var class.:        0.078s
Time for Analysis:                8.154s
CPU time for analysis:            8.150s
Time for analyzing result:        0.001s
Total time for CPAchecker:       10.321s
Total CPU time for CPAchecker:   10.310s
Time for statistics:              0.089s

Time for Garbage Collector:       0.159s (in 18 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     39MB (    37 MiB) avg;     67MB (    63 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    30 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8063MB (  7690 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
