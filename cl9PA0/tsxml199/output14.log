scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product46_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gm4grfh4/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 642: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 778: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 787: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 231: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            65950 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  64944 (98%)
  Because of loop head:            785 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         221 (0%)
  Times precision was empty:       2121 (3%)
  Times precision was {false}:     280 (0%)
  Times result was cached:         59603 (90%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3946 (6%)
  Times result was 'false':        9176 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         34614
  BDD entailment checks:           22714
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          11
Number of abstraction locations:          56
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         287755
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 68.09
Number of irrelevant predicates:          103890 (36%)
Number of preds handled by boolean abs:   11779 (4%)
  Total number of models for allsat:      4108
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  1.741s
  Time for path formula creation:        1.642s
Time for strengthen operator:            0.192s
Time for prec operator:                 13.160s
  Time for abstraction:                 12.676s (Max:     0.024s, Count: 65950)
    Boolean abstraction:                 2.476s
    Solving time:                        1.826s (Max:     0.013s)
    Model enumeration time:              0.256s
    Time for BDD construction:           0.214s (Max:     0.012s)
Time for merge operator:                 0.115s
Time for coverage check:                 0.051s
  Time for BDD entailment checks:        0.039s
Total time for SMT solver (w/o itp):     2.082s

Number of path formula cache hits:   264436 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.306s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               546
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8211 (count: 51019, min: 0, max: 407, avg: 0.16)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.363s
Automaton transfers with branching:                0
Automaton transfer successors:                       252478 (count: 252478, min: 1, max: 1, avg: 1.00) [1 x 252478]

CPA algorithm statistics
------------------------
Number of iterations:            199604
Max size of waitlist:            27
Average size of waitlist:        12
Number of computed successors:   222128
Max successors for one state:    2
Number of times merged:          5950
Number of times stopped:         11222
Number of times breaked:         221

Total time for CPA algorithm:        19.370s (Max:     0.492s)
  Time for choose from waitlist:      0.074s
  Time for precision adjustment:     14.186s
  Time for transfer relation:         3.768s
  Time for merge operator:            0.264s
  Time for stop operator:             0.274s
  Time for adding to reached set:     0.188s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   221
Avg. length of target path (in blocks):               19823 (count: 221, min: 21, max: 138, avg: 89.70)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.969s
  Counterexample analysis:                             2.306s (Max:     0.026s, Calls: 221)
    Refinement sat check:                              0.948s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.073s
  Precision update:                                    0.093s
  ARG update:                                          0.353s

Length of refined path (in blocks):                   15791 (count: 221, min: 15, max: 122, avg: 71.45)
Number of affected states:                             7895 (count: 221, min: 2, max: 77, avg: 35.72)
Length (states) of path with itp 'true':               7675 (count: 221, min: 0, max: 68, avg: 34.73)
Length (states) of path with itp non-trivial itp:      7895 (count: 221, min: 2, max: 77, avg: 35.72)
Length (states) of path with itp 'false':               221 (count: 221, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          58 (count: 221, min: 0, max: 2, avg: 0.26)
Equal non-trivial interpolants along paths:            7616 (count: 221, min: 1, max: 75, avg: 34.46)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                221
Number of successful refinements:     221
Number of failed refinements:         0
Max. size of reached set before ref.: 2896
Max. size of reached set after ref.:  1620
Avg. size of reached set before ref.: 1445.20
Avg. size of reached set after ref.:  540.14

Total time for CEGAR algorithm:      22.735s
Time for refinements:                 3.309s
Average time for refinement:          0.014s
Max time for refinement:              0.041s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          150
  Total lines:            442
  Line coverage:          0.339
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     635
Number of CFA edges:             685
Number of relevant variables:    114
Number of functions:             38
Number of loops:                 5
Size of reached set:             1714
  Number of reached locations:   203 (32%)
    Avg states per location:     8
    Max states per location:     44 (at node N460)
  Number of reached functions:   26 (68%)
  Number of partitions:          1653
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N464 (before line 675), Function timeShift called from node N391, stack depth 5 [a342a69], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0

Time for analysis setup:          2.065s
  Time for loading CPAs:          0.517s
  Time for loading parser:        0.448s
  Time for CFA construction:      0.985s
    Time for parsing file(s):     0.287s
    Time for AST to CFA:          0.234s
    Time for CFA sanity check:    0.085s
    Time for post-processing:     0.268s
      Time for var class.:        0.116s
Time for Analysis:               22.735s
CPU time for analysis:           22.730s
Time for analyzing result:        0.001s
Total time for CPAchecker:       24.804s
Total CPU time for CPAchecker:   24.790s
Time for statistics:              0.075s

Time for Garbage Collector:       0.739s (in 126 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     45MB (    43 MiB) avg;     73MB (    69 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8011MB (  7640 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
