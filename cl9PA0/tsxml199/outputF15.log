scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product46_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_e5f40q4f/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 642: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 778: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 787: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 231: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            19334 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  18920 (98%)
  Because of loop head:            348 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         66 (0%)
  Times precision was empty:       820 (4%)
  Times precision was {false}:     196 (1%)
  Times result was cached:         14823 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3495 (18%)
  Times result was 'false':        2349 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         10734
  BDD entailment checks:           7554
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          11
Number of abstraction locations:          56
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         76675
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 20.77
Number of irrelevant predicates:          21400 (28%)
Number of preds handled by boolean abs:   11758 (15%)
  Total number of models for allsat:      3550
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  1.217s
  Time for path formula creation:        1.155s
Time for strengthen operator:            0.123s
Time for prec operator:                  8.320s
  Time for abstraction:                  7.974s (Max:     0.024s, Count: 19334)
    Boolean abstraction:                 2.036s
    Solving time:                        1.562s (Max:     0.013s)
    Model enumeration time:              0.177s
    Time for BDD construction:           0.107s (Max:     0.008s)
Time for merge operator:                 0.061s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     1.739s

Number of path formula cache hits:   57579 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.076s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               717
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7384 (count: 31120, min: 0, max: 449, avg: 0.24)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.315s
Automaton transfers with branching:                0
Automaton transfer successors:                        72873 (count: 72873, min: 1, max: 1, avg: 1.00) [1 x 72873]

CPA algorithm statistics
------------------------
Number of iterations:            57655
Max size of waitlist:            26
Average size of waitlist:        7
Number of computed successors:   63581
Max successors for one state:    2
Number of times merged:          1590
Number of times stopped:         3402
Number of times breaked:         66

Total time for CPA algorithm:        12.596s (Max:     0.657s)
  Time for choose from waitlist:      0.083s
  Time for precision adjustment:      8.887s
  Time for transfer relation:         2.670s
  Time for merge operator:            0.169s
  Time for stop operator:             0.129s
  Time for adding to reached set:     0.165s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   66
Avg. length of target path (in blocks):                3819 (count: 66, min: 21, max: 95, avg: 57.86)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.004s
  Counterexample analysis:                             0.656s (Max:     0.025s, Calls: 66)
    Refinement sat check:                              0.269s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.061s
  Precision update:                                    0.054s
  ARG update:                                          0.180s

Length of refined path (in blocks):                    2826 (count: 66, min: 15, max: 79, avg: 42.82)
Number of affected states:                             1601 (count: 66, min: 2, max: 70, avg: 24.26)
Length (states) of path with itp 'true':               1159 (count: 66, min: 0, max: 55, avg: 17.56)
Length (states) of path with itp non-trivial itp:      1601 (count: 66, min: 2, max: 70, avg: 24.26)
Length (states) of path with itp 'false':                66 (count: 66, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          10 (count: 66, min: 0, max: 2, avg: 0.15)
Equal non-trivial interpolants along paths:            1525 (count: 66, min: 1, max: 68, avg: 23.11)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                66
Number of successful refinements:     66
Number of failed refinements:         0
Max. size of reached set before ref.: 4162
Max. size of reached set after ref.:  2932
Avg. size of reached set before ref.: 1307.53
Avg. size of reached set after ref.:  494.21

Total time for CEGAR algorithm:      13.777s
Time for refinements:                 1.144s
Average time for refinement:          0.017s
Max time for refinement:              0.050s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          150
  Total lines:            442
  Line coverage:          0.339
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     635
Number of CFA edges:             685
Number of relevant variables:    114
Number of functions:             38
Number of loops:                 5
Size of reached set:             4152
  Number of reached locations:   203 (32%)
    Avg states per location:     20
    Max states per location:     97 (at node N349)
  Number of reached functions:   26 (68%)
  Number of partitions:          3997
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N614 (before lines 912-959), Function test called from node N434, stack depth 3 [4f843511], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.086s
  Time for loading CPAs:          0.518s
  Time for loading parser:        0.478s
  Time for CFA construction:      0.984s
    Time for parsing file(s):     0.359s
    Time for AST to CFA:          0.263s
    Time for CFA sanity check:    0.052s
    Time for post-processing:     0.191s
      Time for var class.:        0.072s
Time for Analysis:               13.777s
CPU time for analysis:           13.780s
Time for analyzing result:        0.009s
Total time for CPAchecker:       15.867s
Total CPU time for CPAchecker:   15.860s
Time for statistics:              0.124s

Time for Garbage Collector:       0.324s (in 40 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    64 MiB) max;     41MB (    39 MiB) avg;     70MB (    67 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
