scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product46_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zbag0frn/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 642: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 778: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 787: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 231: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            50454 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  49576 (98%)
  Because of loop head:            655 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         223 (0%)
  Times precision was empty:       1937 (4%)
  Times precision was {false}:     370 (1%)
  Times result was cached:         42043 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6104 (12%)
  Times result was 'false':        6393 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         38178
  BDD entailment checks:           26624
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          10
Number of abstraction locations:          56
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         210619
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 32.53
Number of irrelevant predicates:          60831 (29%)
Number of preds handled by boolean abs:   20676 (10%)
  Total number of models for allsat:      6535
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.07

Time for post operator:                  1.943s
  Time for path formula creation:        1.837s
Time for strengthen operator:            0.205s
Time for prec operator:                 14.407s
  Time for abstraction:                 13.816s (Max:     0.022s, Count: 50454)
    Boolean abstraction:                 3.289s
    Solving time:                        2.538s (Max:     0.013s)
    Model enumeration time:              0.245s
    Time for BDD construction:           0.177s (Max:     0.012s)
Time for merge operator:                 0.090s
Time for coverage check:                 0.066s
  Time for BDD entailment checks:        0.048s
Total time for SMT solver (w/o itp):     2.783s

Number of path formula cache hits:   180700 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.492s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               735
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       12774 (count: 68570, min: 0, max: 632, avg: 0.19)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.423s
Automaton transfers with branching:                0
Automaton transfer successors:                       200350 (count: 200350, min: 1, max: 1, avg: 1.00) [1 x 200350]

CPA algorithm statistics
------------------------
Number of iterations:            155932
Max size of waitlist:            85
Average size of waitlist:        35
Number of computed successors:   176996
Max successors for one state:    2
Number of times merged:          5777
Number of times stopped:         10545
Number of times breaked:         223

Total time for CPA algorithm:        21.276s (Max:     0.786s)
  Time for choose from waitlist:      0.127s
  Time for precision adjustment:     15.433s
  Time for transfer relation:         4.234s
  Time for merge operator:            0.257s
  Time for stop operator:             0.333s
  Time for adding to reached set:     0.231s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   223
Avg. length of target path (in blocks):               17563 (count: 223, min: 21, max: 128, avg: 78.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.768s
  Counterexample analysis:                             2.067s (Max:     0.023s, Calls: 223)
    Refinement sat check:                              0.943s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.072s
  Precision update:                                    0.110s
  ARG update:                                          0.381s

Length of refined path (in blocks):                   12785 (count: 223, min: 15, max: 91, avg: 57.33)
Number of affected states:                             2993 (count: 223, min: 2, max: 59, avg: 13.42)
Length (states) of path with itp 'true':               9569 (count: 223, min: 0, max: 87, avg: 42.91)
Length (states) of path with itp non-trivial itp:      2993 (count: 223, min: 2, max: 59, avg: 13.42)
Length (states) of path with itp 'false':               223 (count: 223, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           9 (count: 223, min: 0, max: 3, avg: 0.04)
Equal non-trivial interpolants along paths:            2761 (count: 223, min: 1, max: 58, avg: 12.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                223
Number of successful refinements:     223
Number of failed refinements:         0
Max. size of reached set before ref.: 6026
Max. size of reached set after ref.:  5367
Avg. size of reached set before ref.: 3174.14
Avg. size of reached set after ref.:  2477.77

Total time for CEGAR algorithm:      25.128s
Time for refinements:                 3.458s
Average time for refinement:          0.015s
Max time for refinement:              0.045s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          150
  Total lines:            442
  Line coverage:          0.339
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     635
Number of CFA edges:             685
Number of relevant variables:    114
Number of functions:             38
Number of loops:                 5
Size of reached set:             4768
  Number of reached locations:   203 (32%)
    Avg states per location:     23
    Max states per location:     120 (at node N470)
  Number of reached functions:   26 (68%)
  Number of partitions:          4602
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N464 (before line 675), Function timeShift called from node N633, stack depth 4 [4149024d], stack [main, runTest, test, timeShift]])
  Number of target states:       0

Time for analysis setup:          1.953s
  Time for loading CPAs:          0.501s
  Time for loading parser:        0.449s
  Time for CFA construction:      0.873s
    Time for parsing file(s):     0.324s
    Time for AST to CFA:          0.192s
    Time for CFA sanity check:    0.064s
    Time for post-processing:     0.181s
      Time for var class.:        0.070s
Time for Analysis:               25.129s
CPU time for analysis:           25.120s
Time for analyzing result:        0.003s
Total time for CPAchecker:       27.084s
Total CPU time for CPAchecker:   27.070s
Time for statistics:              0.125s

Time for Garbage Collector:       0.815s (in 106 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 91MB (    86 MiB) max;     51MB (    48 MiB) avg;     94MB (    90 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    33 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8012MB (  7641 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
