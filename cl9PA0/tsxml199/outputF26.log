scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product46_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hs3j0c2h/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 642: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 778: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 787: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 231: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            22071 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21749 (99%)
  Because of loop head:            269 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         53 (0%)
  Times precision was empty:       2227 (10%)
  Times precision was {false}:     177 (1%)
  Times result was cached:         17288 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2379 (11%)
  Times result was 'false':        2497 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         9779
  BDD entailment checks:           6041
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          11
Number of abstraction locations:          56
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         68033
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 26.62
Number of irrelevant predicates:          23075 (34%)
Number of preds handled by boolean abs:   6978 (10%)
  Total number of models for allsat:      2417
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  1.297s
  Time for path formula creation:        1.241s
Time for strengthen operator:            0.138s
Time for prec operator:                  6.620s
  Time for abstraction:                  6.191s (Max:     0.027s, Count: 22071)
    Boolean abstraction:                 1.422s
    Solving time:                        0.965s (Max:     0.013s)
    Model enumeration time:              0.127s
    Time for BDD construction:           0.165s (Max:     0.009s)
Time for merge operator:                 0.096s
Time for coverage check:                 0.048s
  Time for BDD entailment checks:        0.045s
Total time for SMT solver (w/o itp):     1.092s

Number of path formula cache hits:   62367 (64%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.069s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               679
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5603 (count: 24367, min: 0, max: 420, avg: 0.23)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.243s
Automaton transfers with branching:                0
Automaton transfer successors:                        83299 (count: 83299, min: 1, max: 1, avg: 1.00) [1 x 83299]

CPA algorithm statistics
------------------------
Number of iterations:            65938
Max size of waitlist:            24
Average size of waitlist:        10
Number of computed successors:   72942
Max successors for one state:    2
Number of times merged:          1869
Number of times stopped:         4113
Number of times breaked:         53

Total time for CPA algorithm:        11.100s (Max:     0.850s)
  Time for choose from waitlist:      0.109s
  Time for precision adjustment:      7.195s
  Time for transfer relation:         2.712s
  Time for merge operator:            0.181s
  Time for stop operator:             0.220s
  Time for adding to reached set:     0.165s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   53
Avg. length of target path (in blocks):                3259 (count: 53, min: 29, max: 99, avg: 61.49)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.889s
  Counterexample analysis:                             0.517s (Max:     0.021s, Calls: 53)
    Refinement sat check:                              0.217s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.049s
  Precision update:                                    0.048s
  ARG update:                                          0.234s

Length of refined path (in blocks):                    2352 (count: 53, min: 16, max: 77, avg: 44.38)
Number of affected states:                             1476 (count: 53, min: 4, max: 72, avg: 27.85)
Length (states) of path with itp 'true':                823 (count: 53, min: 0, max: 65, avg: 15.53)
Length (states) of path with itp non-trivial itp:      1476 (count: 53, min: 4, max: 72, avg: 27.85)
Length (states) of path with itp 'false':                53 (count: 53, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          12 (count: 53, min: 0, max: 3, avg: 0.23)
Equal non-trivial interpolants along paths:            1411 (count: 53, min: 3, max: 70, avg: 26.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                53
Number of successful refinements:     53
Number of failed refinements:         0
Max. size of reached set before ref.: 4228
Max. size of reached set after ref.:  2104
Avg. size of reached set before ref.: 1776.51
Avg. size of reached set after ref.:  575.55

Total time for CEGAR algorithm:      12.191s
Time for refinements:                 1.053s
Average time for refinement:          0.019s
Max time for refinement:              0.060s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          150
  Total lines:            442
  Line coverage:          0.339
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     635
Number of CFA edges:             685
Number of relevant variables:    114
Number of functions:             38
Number of loops:                 5
Size of reached set:             2682
  Number of reached locations:   203 (32%)
    Avg states per location:     13
    Max states per location:     70 (at node N349)
  Number of reached functions:   26 (68%)
  Number of partitions:          2600
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N636 (after line 944), Function test called from node N434, stack depth 3 [2ff9e11e], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.996s
  Time for loading CPAs:          0.505s
  Time for loading parser:        0.447s
  Time for CFA construction:      0.910s
    Time for parsing file(s):     0.341s
    Time for AST to CFA:          0.212s
    Time for CFA sanity check:    0.063s
    Time for post-processing:     0.199s
      Time for var class.:        0.079s
Time for Analysis:               12.191s
CPU time for analysis:           12.190s
Time for analyzing result:        0.002s
Total time for CPAchecker:       14.190s
Total CPU time for CPAchecker:   14.190s
Time for statistics:              0.094s

Time for Garbage Collector:       0.299s (in 39 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     43MB (    41 MiB) avg;     72MB (    68 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8007MB (  7636 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
