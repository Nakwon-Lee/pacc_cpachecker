scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product34_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__6gg4uum/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 449: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 504: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 536: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 717: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 935: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 240: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7508 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7375 (98%)
  Because of loop head:            73 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         60 (1%)
  Times precision was empty:       427 (6%)
  Times precision was {false}:     147 (2%)
  Times result was cached:         5126 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1808 (24%)
  Times result was 'false':        973 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         4484
  BDD entailment checks:           2524
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          17
Number of abstraction locations:          45
Max number of predicates per location:    9
Avg number of predicates per location:    5
Total predicates per abstraction:         36645
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 18.74
Number of irrelevant predicates:          9152 (25%)
Number of preds handled by boolean abs:   8509 (23%)
  Total number of models for allsat:      2566
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.42

Time for post operator:                  0.973s
  Time for path formula creation:        0.924s
Time for strengthen operator:            0.058s
Time for prec operator:                  5.777s
  Time for abstraction:                  5.566s (Max:     0.017s, Count: 7508)
    Boolean abstraction:                 1.941s
    Solving time:                        1.290s (Max:     0.013s)
    Model enumeration time:              0.214s
    Time for BDD construction:           0.163s (Max:     0.012s)
Time for merge operator:                 0.074s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     1.504s

Number of path formula cache hits:   21974 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.821s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1552
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5365 (count: 15510, min: 0, max: 520, avg: 0.35)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.197s
Automaton transfers with branching:                0
Automaton transfer successors:                        29351 (count: 29351, min: 1, max: 1, avg: 1.00) [1 x 29351]

CPA algorithm statistics
------------------------
Number of iterations:            22731
Max size of waitlist:            15
Average size of waitlist:        5
Number of computed successors:   25550
Max successors for one state:    2
Number of times merged:          980
Number of times stopped:         1698
Number of times breaked:         60

Total time for CPA algorithm:         8.661s (Max:     0.487s)
  Time for choose from waitlist:      0.034s
  Time for precision adjustment:      6.201s
  Time for transfer relation:         1.829s
  Time for merge operator:            0.170s
  Time for stop operator:             0.100s
  Time for adding to reached set:     0.068s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   60
Avg. length of target path (in blocks):                3158 (count: 60, min: 26, max: 95, avg: 52.63)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.944s
  Counterexample analysis:                             0.674s (Max:     0.025s, Calls: 60)
    Refinement sat check:                              0.294s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.040s
  Precision update:                                    0.089s
  ARG update:                                          0.085s

Length of refined path (in blocks):                    2361 (count: 60, min: 14, max: 75, avg: 39.35)
Number of affected states:                             1077 (count: 60, min: 1, max: 44, avg: 17.95)
Length (states) of path with itp 'true':               1224 (count: 60, min: 0, max: 64, avg: 20.40)
Length (states) of path with itp non-trivial itp:      1077 (count: 60, min: 1, max: 44, avg: 17.95)
Length (states) of path with itp 'false':                60 (count: 60, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          19 (count: 60, min: 0, max: 2, avg: 0.32)
Equal non-trivial interpolants along paths:             998 (count: 60, min: 0, max: 41, avg: 16.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                60
Number of successful refinements:     60
Number of failed refinements:         0
Max. size of reached set before ref.: 2366
Max. size of reached set after ref.:  1556
Avg. size of reached set before ref.: 1004.13
Avg. size of reached set after ref.:  657.03

Total time for CEGAR algorithm:       9.756s
Time for refinements:                 1.075s
Average time for refinement:          0.017s
Max time for refinement:              0.038s

Code Coverage
-----------------------------
  Function coverage:      0.595
  Visited lines:          116
  Total lines:            429
  Line coverage:          0.270
  Visited conditions:     36
  Total conditions:       68
  Condition coverage:     0.529

CPAchecker general statistics
-----------------------------
Number of program locations:     613
Number of CFA edges:             657
Number of relevant variables:    110
Number of functions:             37
Number of loops:                 5
Size of reached set:             2054
  Number of reached locations:   156 (25%)
    Avg states per location:     13
    Max states per location:     56 (at node N540)
  Number of reached functions:   22 (59%)
  Number of partitions:          2002
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N419 (after line 589), Function test called from node N605, stack depth 3 [294bb6ae], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.140s
  Time for loading CPAs:          0.538s
  Time for loading parser:        0.517s
  Time for CFA construction:      0.985s
    Time for parsing file(s):     0.329s
    Time for AST to CFA:          0.263s
    Time for CFA sanity check:    0.073s
    Time for post-processing:     0.201s
      Time for var class.:        0.074s
Time for Analysis:                9.756s
CPU time for analysis:            9.760s
Time for analyzing result:        0.014s
Total time for CPAchecker:       11.901s
Total CPU time for CPAchecker:   11.900s
Time for statistics:              0.087s

Time for Garbage Collector:       0.195s (in 21 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     40MB (    38 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     32MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8067MB (  7693 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
