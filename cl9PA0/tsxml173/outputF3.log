scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product34_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pyca7pb0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 449: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 504: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 536: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 717: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 935: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 240: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            24163 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  23804 (99%)
  Because of loop head:            269 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         90 (0%)
  Times precision was empty:       2367 (10%)
  Times precision was {false}:     273 (1%)
  Times result was cached:         17346 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4177 (17%)
  Times result was 'false':        2325 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         15393
  BDD entailment checks:           9227
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          17
Number of abstraction locations:          45
Max number of predicates per location:    9
Avg number of predicates per location:    5
Total predicates per abstraction:         116291
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 26.13
Number of irrelevant predicates:          42226 (36%)
Number of preds handled by boolean abs:   18647 (16%)
  Total number of models for allsat:      6382
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.53

Time for post operator:                  1.446s
  Time for path formula creation:        1.370s
Time for strengthen operator:            0.097s
Time for prec operator:                 11.398s
  Time for abstraction:                 11.063s (Max:     0.018s, Count: 24163)
    Boolean abstraction:                 3.175s
    Solving time:                        2.289s (Max:     0.013s)
    Model enumeration time:              0.348s
    Time for BDD construction:           0.181s (Max:     0.012s)
Time for merge operator:                 0.116s
Time for coverage check:                 0.022s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     2.637s

Number of path formula cache hits:   81647 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.162s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               2007
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       10652 (count: 39459, min: 0, max: 647, avg: 0.27)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.285s
Automaton transfers with branching:                0
Automaton transfer successors:                        94576 (count: 94576, min: 1, max: 1, avg: 1.00) [1 x 94576]

CPA algorithm statistics
------------------------
Number of iterations:            73421
Max size of waitlist:            67
Average size of waitlist:        23
Number of computed successors:   82054
Max successors for one state:    2
Number of times merged:          3083
Number of times stopped:         5269
Number of times breaked:         90

Total time for CPA algorithm:        16.165s (Max:     1.034s)
  Time for choose from waitlist:      0.111s
  Time for precision adjustment:     12.076s
  Time for transfer relation:         2.907s
  Time for merge operator:            0.240s
  Time for stop operator:             0.169s
  Time for adding to reached set:     0.191s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   90
Avg. length of target path (in blocks):                4580 (count: 90, min: 25, max: 85, avg: 50.89)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.292s
  Counterexample analysis:                             0.827s (Max:     0.022s, Calls: 90)
    Refinement sat check:                              0.400s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.054s
  Precision update:                                    0.065s
  ARG update:                                          0.269s

Length of refined path (in blocks):                    3420 (count: 90, min: 14, max: 72, avg: 38.00)
Number of affected states:                             1498 (count: 90, min: 1, max: 44, avg: 16.64)
Length (states) of path with itp 'true':               1832 (count: 90, min: 0, max: 60, avg: 20.36)
Length (states) of path with itp non-trivial itp:      1498 (count: 90, min: 1, max: 44, avg: 16.64)
Length (states) of path with itp 'false':                90 (count: 90, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          23 (count: 90, min: 0, max: 2, avg: 0.26)
Equal non-trivial interpolants along paths:            1385 (count: 90, min: 0, max: 41, avg: 15.39)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                90
Number of successful refinements:     90
Number of failed refinements:         0
Max. size of reached set before ref.: 3740
Max. size of reached set after ref.:  2713
Avg. size of reached set before ref.: 1717.86
Avg. size of reached set after ref.:  911.13

Total time for CEGAR algorithm:      17.765s
Time for refinements:                 1.502s
Average time for refinement:          0.016s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.595
  Visited lines:          116
  Total lines:            429
  Line coverage:          0.270
  Visited conditions:     36
  Total conditions:       68
  Condition coverage:     0.529

CPAchecker general statistics
-----------------------------
Number of program locations:     613
Number of CFA edges:             657
Number of relevant variables:    110
Number of functions:             37
Number of loops:                 5
Size of reached set:             1856
  Number of reached locations:   156 (25%)
    Avg states per location:     11
    Max states per location:     51 (at node N540)
  Number of reached functions:   22 (59%)
  Number of partitions:          1810
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N402 (before lines 567-614), Function test called from node N605, stack depth 3 [73021987], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.181s
  Time for loading CPAs:          0.652s
  Time for loading parser:        0.440s
  Time for CFA construction:      1.003s
    Time for parsing file(s):     0.318s
    Time for AST to CFA:          0.251s
    Time for CFA sanity check:    0.071s
    Time for post-processing:     0.245s
      Time for var class.:        0.159s
Time for Analysis:               17.766s
CPU time for analysis:           17.770s
Time for analyzing result:        0.001s
Total time for CPAchecker:       19.950s
Total CPU time for CPAchecker:   19.950s
Time for statistics:              0.086s

Time for Garbage Collector:       0.411s (in 56 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     43MB (    41 MiB) avg;     71MB (    68 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     33MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7700 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
