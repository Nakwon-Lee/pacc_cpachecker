scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product34_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9kgn9qmr/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 449: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 504: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 536: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 717: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 935: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 240: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            9897 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  9732 (98%)
  Because of loop head:            86 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         79 (1%)
  Times precision was empty:       413 (4%)
  Times precision was {false}:     129 (1%)
  Times result was cached:         7135 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2220 (22%)
  Times result was 'false':        1082 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         6135
  BDD entailment checks:           3393
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          17
Number of abstraction locations:          45
Max number of predicates per location:    9
Avg number of predicates per location:    5
Total predicates per abstraction:         49627
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 21.13
Number of irrelevant predicates:          16729 (34%)
Number of preds handled by boolean abs:   9765 (20%)
  Total number of models for allsat:      3315
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.49

Time for post operator:                  0.881s
  Time for path formula creation:        0.858s
Time for strengthen operator:            0.059s
Time for prec operator:                  6.657s
  Time for abstraction:                  6.412s (Max:     0.018s, Count: 9897)
    Boolean abstraction:                 1.997s
    Solving time:                        1.431s (Max:     0.014s)
    Model enumeration time:              0.209s
    Time for BDD construction:           0.138s (Max:     0.012s)
Time for merge operator:                 0.043s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):     1.640s

Number of path formula cache hits:   33628 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.757s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1886
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6650 (count: 18887, min: 0, max: 542, avg: 0.35)
Time for BDD node cleanup:                             0.020s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.219s
Automaton transfers with branching:                0
Automaton transfer successors:                        38922 (count: 38922, min: 1, max: 1, avg: 1.00) [1 x 38922]

CPA algorithm statistics
------------------------
Number of iterations:            30208
Max size of waitlist:            16
Average size of waitlist:        6
Number of computed successors:   33932
Max successors for one state:    2
Number of times merged:          1371
Number of times stopped:         2218
Number of times breaked:         79

Total time for CPA algorithm:         9.655s (Max:     0.537s)
  Time for choose from waitlist:      0.054s
  Time for precision adjustment:      7.068s
  Time for transfer relation:         1.800s
  Time for merge operator:            0.149s
  Time for stop operator:             0.142s
  Time for adding to reached set:     0.131s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   79
Avg. length of target path (in blocks):                4350 (count: 79, min: 26, max: 78, avg: 55.06)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.106s
  Counterexample analysis:                             0.757s (Max:     0.026s, Calls: 79)
    Refinement sat check:                              0.337s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.087s
  Precision update:                                    0.057s
  ARG update:                                          0.158s

Length of refined path (in blocks):                    3339 (count: 79, min: 14, max: 63, avg: 42.27)
Number of affected states:                             1410 (count: 79, min: 1, max: 44, avg: 17.85)
Length (states) of path with itp 'true':               1850 (count: 79, min: 0, max: 43, avg: 23.42)
Length (states) of path with itp non-trivial itp:      1410 (count: 79, min: 1, max: 44, avg: 17.85)
Length (states) of path with itp 'false':                79 (count: 79, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          15 (count: 79, min: 0, max: 2, avg: 0.19)
Equal non-trivial interpolants along paths:            1316 (count: 79, min: 0, max: 43, avg: 16.66)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                79
Number of successful refinements:     79
Number of failed refinements:         0
Max. size of reached set before ref.: 2345
Max. size of reached set after ref.:  1377
Avg. size of reached set before ref.: 933.96
Avg. size of reached set after ref.:  569.57

Total time for CEGAR algorithm:      10.962s
Time for refinements:                 1.277s
Average time for refinement:          0.016s
Max time for refinement:              0.061s

Code Coverage
-----------------------------
  Function coverage:      0.595
  Visited lines:          116
  Total lines:            429
  Line coverage:          0.270
  Visited conditions:     36
  Total conditions:       68
  Condition coverage:     0.529

CPAchecker general statistics
-----------------------------
Number of program locations:     613
Number of CFA edges:             657
Number of relevant variables:    110
Number of functions:             37
Number of loops:                 5
Size of reached set:             1846
  Number of reached locations:   156 (25%)
    Avg states per location:     11
    Max states per location:     50 (at node N442)
  Number of reached functions:   22 (59%)
  Number of partitions:          1814
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N424 (after line 599), Function test called from node N605, stack depth 3 [4d6c42e], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.297s
  Time for loading CPAs:          0.637s
  Time for loading parser:        0.514s
  Time for CFA construction:      1.048s
    Time for parsing file(s):     0.378s
    Time for AST to CFA:          0.222s
    Time for CFA sanity check:    0.057s
    Time for post-processing:     0.267s
      Time for var class.:        0.124s
Time for Analysis:               10.962s
CPU time for analysis:           10.970s
Time for analyzing result:        0.001s
Total time for CPAchecker:       13.261s
Total CPU time for CPAchecker:   13.260s
Time for statistics:              0.085s

Time for Garbage Collector:       0.219s (in 26 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     40MB (    38 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8004MB (  7633 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
