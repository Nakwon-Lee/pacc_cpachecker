scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product41_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qf5yjg3i/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 190: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 199: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 254: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 438: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 452: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 914: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 705: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            37427 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  36765 (98%)
  Because of loop head:            527 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         135 (0%)
  Times precision was empty:       3351 (9%)
  Times precision was {false}:     370 (1%)
  Times result was cached:         30121 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3585 (10%)
  Times result was 'false':        4225 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         27487
  BDD entailment checks:           17423
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          16
Number of abstraction locations:          48
Max number of predicates per location:    8
Avg number of predicates per location:    5
Total predicates per abstraction:         175294
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 44.32
Number of irrelevant predicates:          80599 (46%)
Number of preds handled by boolean abs:   14175 (8%)
  Total number of models for allsat:      4524
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.26

Time for post operator:                  1.502s
  Time for path formula creation:        1.420s
Time for strengthen operator:            0.168s
Time for prec operator:                  9.909s
  Time for abstraction:                  9.478s (Max:     0.024s, Count: 37427)
    Boolean abstraction:                 2.165s
    Solving time:                        1.683s (Max:     0.015s)
    Model enumeration time:              0.180s
    Time for BDD construction:           0.135s (Max:     0.009s)
Time for merge operator:                 0.088s
Time for coverage check:                 0.028s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):     1.863s

Number of path formula cache hits:   146133 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.229s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1845
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        9052 (count: 46278, min: 0, max: 676, avg: 0.20)
Time for BDD node cleanup:                             0.020s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.310s
Automaton transfers with branching:                0
Automaton transfer successors:                       153301 (count: 153301, min: 1, max: 1, avg: 1.00) [1 x 153301]

CPA algorithm statistics
------------------------
Number of iterations:            113767
Max size of waitlist:            107
Average size of waitlist:        29
Number of computed successors:   130172
Max successors for one state:    2
Number of times merged:          5032
Number of times stopped:         7701
Number of times breaked:         135

Total time for CPA algorithm:        15.289s (Max:     0.378s)
  Time for choose from waitlist:      0.082s
  Time for precision adjustment:     10.811s
  Time for transfer relation:         3.255s
  Time for merge operator:            0.216s
  Time for stop operator:             0.167s
  Time for adding to reached set:     0.199s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   135
Avg. length of target path (in blocks):                6326 (count: 135, min: 21, max: 104, avg: 46.86)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.810s
  Counterexample analysis:                             1.214s (Max:     0.023s, Calls: 135)
    Refinement sat check:                              0.438s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.056s
  Precision update:                                    0.077s
  ARG update:                                          0.377s

Length of refined path (in blocks):                    5113 (count: 135, min: 13, max: 76, avg: 37.87)
Number of affected states:                             2692 (count: 135, min: 10, max: 60, avg: 19.94)
Length (states) of path with itp 'true':               2286 (count: 135, min: 0, max: 48, avg: 16.93)
Length (states) of path with itp non-trivial itp:      2692 (count: 135, min: 10, max: 60, avg: 19.94)
Length (states) of path with itp 'false':               135 (count: 135, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         161 (count: 135, min: 0, max: 4, avg: 1.19)
Equal non-trivial interpolants along paths:            2396 (count: 135, min: 6, max: 58, avg: 17.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                135
Number of successful refinements:     135
Number of failed refinements:         0
Max. size of reached set before ref.: 5370
Max. size of reached set after ref.:  4328
Avg. size of reached set before ref.: 1684.44
Avg. size of reached set after ref.:  837.57

Total time for CEGAR algorithm:      17.436s
Time for refinements:                 2.069s
Average time for refinement:          0.015s
Max time for refinement:              0.054s

Code Coverage
-----------------------------
  Function coverage:      0.657
  Visited lines:          135
  Total lines:            426
  Line coverage:          0.317
  Visited conditions:     40
  Total conditions:       70
  Condition coverage:     0.571

CPAchecker general statistics
-----------------------------
Number of program locations:     605
Number of CFA edges:             651
Number of relevant variables:    115
Number of functions:             35
Number of loops:                 5
Size of reached set:             3919
  Number of reached locations:   179 (30%)
    Avg states per location:     21
    Max states per location:     166 (at node N164)
  Number of reached functions:   23 (66%)
  Number of partitions:          3794
    Avg size of partitions:      1
    Max size of partitions:      11 (with key [N150 (after line 293), Function test called from node N293, stack depth 3 [15c69b7], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.057s
  Time for loading CPAs:          0.500s
  Time for loading parser:        0.495s
  Time for CFA construction:      0.974s
    Time for parsing file(s):     0.364s
    Time for AST to CFA:          0.266s
    Time for CFA sanity check:    0.065s
    Time for post-processing:     0.173s
      Time for var class.:        0.065s
Time for Analysis:               17.437s
CPU time for analysis:           17.440s
Time for analyzing result:        0.001s
Total time for CPAchecker:       19.496s
Total CPU time for CPAchecker:   19.490s
Time for statistics:              0.107s

Time for Garbage Collector:       0.481s (in 73 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    67 MiB) max;     44MB (    42 MiB) avg;     75MB (    72 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     33MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
