scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product41_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1yfhcjro/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 190: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 199: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 254: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 438: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 452: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 914: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 705: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            15590 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15253 (98%)
  Because of loop head:            251 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         86 (1%)
  Times precision was empty:       946 (6%)
  Times precision was {false}:     155 (1%)
  Times result was cached:         12333 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2156 (14%)
  Times result was 'false':        1515 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         9084
  BDD entailment checks:           6618
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          15
Number of abstraction locations:          48
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         61026
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 26.41
Number of irrelevant predicates:          27131 (44%)
Number of preds handled by boolean abs:   6824 (11%)
  Total number of models for allsat:      2721
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.26

Time for post operator:                  0.788s
  Time for path formula creation:        0.717s
Time for strengthen operator:            0.072s
Time for prec operator:                  6.206s
  Time for abstraction:                  5.907s (Max:     0.017s, Count: 15590)
    Boolean abstraction:                 1.553s
    Solving time:                        1.120s (Max:     0.013s)
    Model enumeration time:              0.141s
    Time for BDD construction:           0.148s (Max:     0.010s)
Time for merge operator:                 0.047s
Time for coverage check:                 0.023s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     1.261s

Number of path formula cache hits:   56081 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.615s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1151
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5805 (count: 22223, min: 0, max: 593, avg: 0.26)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.252s
Automaton transfers with branching:                0
Automaton transfer successors:                        58670 (count: 58670, min: 1, max: 1, avg: 1.00) [1 x 58670]

CPA algorithm statistics
------------------------
Number of iterations:            45366
Max size of waitlist:            20
Average size of waitlist:        8
Number of computed successors:   50238
Max successors for one state:    2
Number of times merged:          1233
Number of times stopped:         3043
Number of times breaked:         86

Total time for CPA algorithm:         9.529s (Max:     0.400s)
  Time for choose from waitlist:      0.102s
  Time for precision adjustment:      6.635s
  Time for transfer relation:         1.974s
  Time for merge operator:            0.151s
  Time for stop operator:             0.136s
  Time for adding to reached set:     0.174s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   86
Avg. length of target path (in blocks):                4682 (count: 86, min: 23, max: 112, avg: 54.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.158s
  Counterexample analysis:                             0.785s (Max:     0.019s, Calls: 86)
    Refinement sat check:                              0.327s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.047s
  Precision update:                                    0.098s
  ARG update:                                          0.149s

Length of refined path (in blocks):                    3723 (count: 86, min: 14, max: 84, avg: 43.29)
Number of affected states:                             1752 (count: 86, min: 10, max: 66, avg: 20.37)
Length (states) of path with itp 'true':               1885 (count: 86, min: 0, max: 58, avg: 21.92)
Length (states) of path with itp non-trivial itp:      1752 (count: 86, min: 10, max: 66, avg: 20.37)
Length (states) of path with itp 'false':                86 (count: 86, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          46 (count: 86, min: 0, max: 3, avg: 0.53)
Equal non-trivial interpolants along paths:            1620 (count: 86, min: 6, max: 64, avg: 18.84)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                86
Number of successful refinements:     86
Number of failed refinements:         0
Max. size of reached set before ref.: 3133
Max. size of reached set after ref.:  2356
Avg. size of reached set before ref.: 1172.51
Avg. size of reached set after ref.:  671.69

Total time for CEGAR algorithm:      10.956s
Time for refinements:                 1.367s
Average time for refinement:          0.015s
Max time for refinement:              0.048s

Code Coverage
-----------------------------
  Function coverage:      0.657
  Visited lines:          135
  Total lines:            426
  Line coverage:          0.317
  Visited conditions:     40
  Total conditions:       70
  Condition coverage:     0.571

CPAchecker general statistics
-----------------------------
Number of program locations:     605
Number of CFA edges:             651
Number of relevant variables:    115
Number of functions:             35
Number of loops:                 5
Size of reached set:             2610
  Number of reached locations:   179 (30%)
    Avg states per location:     14
    Max states per location:     120 (at node N164)
  Number of reached functions:   23 (66%)
  Number of partitions:          2529
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N133 (before lines 271-316), Function test called from node N293, stack depth 3 [65ff5e07], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.992s
  Time for loading CPAs:          0.543s
  Time for loading parser:        0.471s
  Time for CFA construction:      0.865s
    Time for parsing file(s):     0.296s
    Time for AST to CFA:          0.227s
    Time for CFA sanity check:    0.057s
    Time for post-processing:     0.182s
      Time for var class.:        0.080s
Time for Analysis:               10.957s
CPU time for analysis:           10.960s
Time for analyzing result:        0.001s
Total time for CPAchecker:       12.952s
Total CPU time for CPAchecker:   12.950s
Time for statistics:              0.095s

Time for Garbage Collector:       0.208s (in 31 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     42MB (    40 MiB) avg;     68MB (    65 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8068MB (  7694 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
