scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product41_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hmfxzucj/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 190: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 199: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 254: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 438: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 452: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 914: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 705: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            14395 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14095 (98%)
  Because of loop head:            193 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         107 (1%)
  Times precision was empty:       1952 (14%)
  Times precision was {false}:     167 (1%)
  Times result was cached:         10354 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1922 (13%)
  Times result was 'false':        1720 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         6802
  BDD entailment checks:           3952
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          16
Number of abstraction locations:          48
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         50787
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 24.31
Number of irrelevant predicates:          18423 (36%)
Number of preds handled by boolean abs:   6349 (13%)
  Total number of models for allsat:      2190
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.14

Time for post operator:                  1.070s
  Time for path formula creation:        1.007s
Time for strengthen operator:            0.106s
Time for prec operator:                  5.680s
  Time for abstraction:                  5.386s (Max:     0.020s, Count: 14395)
    Boolean abstraction:                 1.510s
    Solving time:                        1.038s (Max:     0.013s)
    Model enumeration time:              0.171s
    Time for BDD construction:           0.109s (Max:     0.012s)
Time for merge operator:                 0.046s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     1.209s

Number of path formula cache hits:   51492 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.845s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1136
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5308 (count: 19332, min: 0, max: 675, avg: 0.27)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.248s
Automaton transfers with branching:                0
Automaton transfer successors:                        56528 (count: 56528, min: 1, max: 1, avg: 1.00) [1 x 56528]

CPA algorithm statistics
------------------------
Number of iterations:            42863
Max size of waitlist:            49
Average size of waitlist:        11
Number of computed successors:   47883
Max successors for one state:    2
Number of times merged:          1425
Number of times stopped:         2262
Number of times breaked:         107

Total time for CPA algorithm:         9.246s (Max:     0.943s)
  Time for choose from waitlist:      0.071s
  Time for precision adjustment:      6.194s
  Time for transfer relation:         2.234s
  Time for merge operator:            0.125s
  Time for stop operator:             0.185s
  Time for adding to reached set:     0.174s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   107
Avg. length of target path (in blocks):                5146 (count: 107, min: 21, max: 102, avg: 48.09)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.843s
  Counterexample analysis:                             1.287s (Max:     0.023s, Calls: 107)
    Refinement sat check:                              0.523s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.097s
  Precision update:                                    0.136s
  ARG update:                                          0.211s

Length of refined path (in blocks):                    4434 (count: 107, min: 13, max: 84, avg: 41.44)
Number of affected states:                             2149 (count: 107, min: 10, max: 66, avg: 20.08)
Length (states) of path with itp 'true':               2178 (count: 107, min: 0, max: 58, avg: 20.36)
Length (states) of path with itp non-trivial itp:      2149 (count: 107, min: 10, max: 66, avg: 20.08)
Length (states) of path with itp 'false':               107 (count: 107, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         120 (count: 107, min: 0, max: 4, avg: 1.12)
Equal non-trivial interpolants along paths:            1922 (count: 107, min: 6, max: 65, avg: 17.96)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                107
Number of successful refinements:     107
Number of failed refinements:         0
Max. size of reached set before ref.: 2139
Max. size of reached set after ref.:  1641
Avg. size of reached set before ref.: 826.36
Avg. size of reached set after ref.:  480.84

Total time for CEGAR algorithm:      11.356s
Time for refinements:                 2.052s
Average time for refinement:          0.019s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.657
  Visited lines:          135
  Total lines:            426
  Line coverage:          0.317
  Visited conditions:     40
  Total conditions:       70
  Condition coverage:     0.571

CPAchecker general statistics
-----------------------------
Number of program locations:     605
Number of CFA edges:             651
Number of relevant variables:    115
Number of functions:             35
Number of loops:                 5
Size of reached set:             6932
  Number of reached locations:   179 (30%)
    Avg states per location:     38
    Max states per location:     301 (at node N164)
  Number of reached functions:   23 (66%)
  Number of partitions:          6608
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N150 (after line 293), Function test called from node N293, stack depth 3 [642c407d], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.173s
  Time for loading CPAs:          0.498s
  Time for loading parser:        0.543s
  Time for CFA construction:      1.017s
    Time for parsing file(s):     0.390s
    Time for AST to CFA:          0.237s
    Time for CFA sanity check:    0.073s
    Time for post-processing:     0.196s
      Time for var class.:        0.057s
Time for Analysis:               11.356s
CPU time for analysis:           11.360s
Time for analyzing result:        0.004s
Total time for CPAchecker:       13.533s
Total CPU time for CPAchecker:   13.530s
Time for statistics:              0.130s

Time for Garbage Collector:       0.235s (in 29 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     41MB (    39 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     32MB (    31 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8067MB (  7693 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
