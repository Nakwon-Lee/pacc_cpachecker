scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product41_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7ui41rio/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 190: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 199: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 254: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 438: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 452: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 914: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 705: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            21674 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21268 (98%)
  Because of loop head:            310 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         96 (0%)
  Times precision was empty:       1879 (9%)
  Times precision was {false}:     162 (1%)
  Times result was cached:         16538 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3095 (14%)
  Times result was 'false':        2463 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         16000
  BDD entailment checks:           12082
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          16
Number of abstraction locations:          48
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         85678
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 26.31
Number of irrelevant predicates:          32345 (38%)
Number of preds handled by boolean abs:   10963 (13%)
  Total number of models for allsat:      3490
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.13

Time for post operator:                  1.067s
  Time for path formula creation:        1.012s
Time for strengthen operator:            0.118s
Time for prec operator:                  7.748s
  Time for abstraction:                  7.410s (Max:     0.027s, Count: 21674)
    Boolean abstraction:                 2.022s
    Solving time:                        1.499s (Max:     0.013s)
    Model enumeration time:              0.169s
    Time for BDD construction:           0.148s (Max:     0.012s)
Time for merge operator:                 0.047s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     1.668s

Number of path formula cache hits:   70466 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.882s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1372
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7895 (count: 34618, min: 0, max: 479, avg: 0.23)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.289s
Automaton transfers with branching:                0
Automaton transfer successors:                        81231 (count: 81231, min: 1, max: 1, avg: 1.00) [1 x 81231]

CPA algorithm statistics
------------------------
Number of iterations:            63716
Max size of waitlist:            25
Average size of waitlist:        9
Number of computed successors:   70650
Max successors for one state:    2
Number of times merged:          1959
Number of times stopped:         4034
Number of times breaked:         96

Total time for CPA algorithm:        11.879s (Max:     0.539s)
  Time for choose from waitlist:      0.110s
  Time for precision adjustment:      8.379s
  Time for transfer relation:         2.468s
  Time for merge operator:            0.142s
  Time for stop operator:             0.222s
  Time for adding to reached set:     0.159s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   96
Avg. length of target path (in blocks):                4535 (count: 96, min: 21, max: 92, avg: 47.24)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.447s
  Counterexample analysis:                             1.018s (Max:     0.028s, Calls: 96)
    Refinement sat check:                              0.390s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.093s
  Precision update:                                    0.086s
  ARG update:                                          0.171s

Length of refined path (in blocks):                    3753 (count: 96, min: 13, max: 78, avg: 39.09)
Number of affected states:                             1913 (count: 96, min: 10, max: 66, avg: 19.93)
Length (states) of path with itp 'true':               1744 (count: 96, min: 0, max: 60, avg: 18.17)
Length (states) of path with itp non-trivial itp:      1913 (count: 96, min: 10, max: 66, avg: 19.93)
Length (states) of path with itp 'false':                96 (count: 96, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          99 (count: 96, min: 0, max: 4, avg: 1.03)
Equal non-trivial interpolants along paths:            1718 (count: 96, min: 6, max: 65, avg: 17.90)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                96
Number of successful refinements:     96
Number of failed refinements:         0
Max. size of reached set before ref.: 3680
Max. size of reached set after ref.:  2024
Avg. size of reached set before ref.: 1236.47
Avg. size of reached set after ref.:  602.30

Total time for CEGAR algorithm:      13.540s
Time for refinements:                 1.617s
Average time for refinement:          0.016s
Max time for refinement:              0.058s

Code Coverage
-----------------------------
  Function coverage:      0.629
  Visited lines:          119
  Total lines:            426
  Line coverage:          0.279
  Visited conditions:     38
  Total conditions:       70
  Condition coverage:     0.543

CPAchecker general statistics
-----------------------------
Number of program locations:     605
Number of CFA edges:             651
Number of relevant variables:    115
Number of functions:             35
Number of loops:                 5
Size of reached set:             3274
  Number of reached locations:   158 (26%)
    Avg states per location:     20
    Max states per location:     127 (at node N164)
  Number of reached functions:   22 (63%)
  Number of partitions:          3135
    Avg size of partitions:      1
    Max size of partitions:      11 (with key [N150 (after line 293), Function test called from node N293, stack depth 3 [321aaff0], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.051s
  Time for loading CPAs:          0.603s
  Time for loading parser:        0.458s
  Time for CFA construction:      0.898s
    Time for parsing file(s):     0.315s
    Time for AST to CFA:          0.221s
    Time for CFA sanity check:    0.060s
    Time for post-processing:     0.193s
      Time for var class.:        0.074s
Time for Analysis:               13.541s
CPU time for analysis:           13.530s
Time for analyzing result:        0.002s
Total time for CPAchecker:       15.594s
Total CPU time for CPAchecker:   15.580s
Time for statistics:              0.100s

Time for Garbage Collector:       0.310s (in 42 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     42MB (    40 MiB) avg;     70MB (    67 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8007MB (  7636 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
