scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product41_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pueye3h8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 190: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 199: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 254: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 438: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 452: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 914: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 705: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            9834 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  9592 (98%)
  Because of loop head:            190 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         52 (1%)
  Times precision was empty:       519 (5%)
  Times precision was {false}:     124 (1%)
  Times result was cached:         7154 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2037 (21%)
  Times result was 'false':        1297 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         5023
  BDD entailment checks:           3573
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          15
Number of abstraction locations:          48
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         40652
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 18.81
Number of irrelevant predicates:          13994 (34%)
Number of preds handled by boolean abs:   6764 (17%)
  Total number of models for allsat:      2212
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.09

Time for post operator:                  0.862s
  Time for path formula creation:        0.829s
Time for strengthen operator:            0.042s
Time for prec operator:                  5.599s
  Time for abstraction:                  5.347s (Max:     0.029s, Count: 9834)
    Boolean abstraction:                 1.593s
    Solving time:                        1.182s (Max:     0.013s)
    Model enumeration time:              0.146s
    Time for BDD construction:           0.120s (Max:     0.008s)
Time for merge operator:                 0.025s
Time for coverage check:                 0.036s
  Time for BDD entailment checks:        0.035s
Total time for SMT solver (w/o itp):     1.328s

Number of path formula cache hits:   28756 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.706s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1176
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5661 (count: 17949, min: 0, max: 521, avg: 0.32)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.191s
Automaton transfers with branching:                0
Automaton transfer successors:                        37083 (count: 37083, min: 1, max: 1, avg: 1.00) [1 x 37083]

CPA algorithm statistics
------------------------
Number of iterations:            28627
Max size of waitlist:            23
Average size of waitlist:        8
Number of computed successors:   31709
Max successors for one state:    2
Number of times merged:          725
Number of times stopped:         1515
Number of times breaked:         52

Total time for CPA algorithm:         8.424s (Max:     0.910s)
  Time for choose from waitlist:      0.032s
  Time for precision adjustment:      5.981s
  Time for transfer relation:         1.777s
  Time for merge operator:            0.093s
  Time for stop operator:             0.164s
  Time for adding to reached set:     0.122s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   52
Avg. length of target path (in blocks):                2254 (count: 52, min: 22, max: 92, avg: 43.35)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.740s
  Counterexample analysis:                             0.493s (Max:     0.024s, Calls: 52)
    Refinement sat check:                              0.212s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.046s
  Precision update:                                    0.039s
  ARG update:                                          0.100s

Length of refined path (in blocks):                    1800 (count: 52, min: 14, max: 67, avg: 34.62)
Number of affected states:                             1214 (count: 52, min: 10, max: 66, avg: 23.35)
Length (states) of path with itp 'true':                534 (count: 52, min: 0, max: 41, avg: 10.27)
Length (states) of path with itp non-trivial itp:      1214 (count: 52, min: 10, max: 66, avg: 23.35)
Length (states) of path with itp 'false':                52 (count: 52, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          52 (count: 52, min: 0, max: 3, avg: 1.00)
Equal non-trivial interpolants along paths:            1110 (count: 52, min: 6, max: 65, avg: 21.35)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                52
Number of successful refinements:     52
Number of failed refinements:         0
Max. size of reached set before ref.: 3926
Max. size of reached set after ref.:  1729
Avg. size of reached set before ref.: 833.21
Avg. size of reached set after ref.:  332.94

Total time for CEGAR algorithm:       9.308s
Time for refinements:                 0.854s
Average time for refinement:          0.016s
Max time for refinement:              0.042s

Code Coverage
-----------------------------
  Function coverage:      0.657
  Visited lines:          135
  Total lines:            426
  Line coverage:          0.317
  Visited conditions:     40
  Total conditions:       70
  Condition coverage:     0.571

CPAchecker general statistics
-----------------------------
Number of program locations:     605
Number of CFA edges:             651
Number of relevant variables:    115
Number of functions:             35
Number of loops:                 5
Size of reached set:             2884
  Number of reached locations:   179 (30%)
    Avg states per location:     16
    Max states per location:     121 (at node N164)
  Number of reached functions:   23 (66%)
  Number of partitions:          2792
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N133 (before lines 271-316), Function test called from node N293, stack depth 3 [248ad8a1], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.040s
  Time for loading CPAs:          0.522s
  Time for loading parser:        0.510s
  Time for CFA construction:      0.876s
    Time for parsing file(s):     0.323s
    Time for AST to CFA:          0.214s
    Time for CFA sanity check:    0.066s
    Time for post-processing:     0.173s
      Time for var class.:        0.057s
Time for Analysis:                9.309s
CPU time for analysis:            9.300s
Time for analyzing result:        0.002s
Total time for CPAchecker:       11.351s
Total CPU time for CPAchecker:   11.330s
Time for statistics:              0.070s

Time for Garbage Collector:       0.182s (in 22 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     40MB (    38 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8066MB (  7692 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
