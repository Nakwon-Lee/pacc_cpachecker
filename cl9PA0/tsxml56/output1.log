scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product41_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_y2xmrpcj/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 190: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 199: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 254: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 438: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 452: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 914: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 705: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            12826 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12550 (98%)
  Because of loop head:            182 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         94 (1%)
  Times precision was empty:       1779 (14%)
  Times precision was {false}:     150 (1%)
  Times result was cached:         9061 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1836 (14%)
  Times result was 'false':        1567 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         6161
  BDD entailment checks:           3407
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          16
Number of abstraction locations:          48
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         46412
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 23.37
Number of irrelevant predicates:          16101 (35%)
Number of preds handled by boolean abs:   6179 (13%)
  Total number of models for allsat:      2078
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.13

Time for post operator:                  1.144s
  Time for path formula creation:        1.085s
Time for strengthen operator:            0.063s
Time for prec operator:                  5.999s
  Time for abstraction:                  5.730s (Max:     0.020s, Count: 12826)
    Boolean abstraction:                 1.477s
    Solving time:                        1.073s (Max:     0.013s)
    Model enumeration time:              0.118s
    Time for BDD construction:           0.122s (Max:     0.012s)
Time for merge operator:                 0.044s
Time for coverage check:                 0.019s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     1.191s

Number of path formula cache hits:   45151 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.976s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1113
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5095 (count: 18011, min: 0, max: 639, avg: 0.28)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.237s
Automaton transfers with branching:                0
Automaton transfer successors:                        50731 (count: 50731, min: 1, max: 1, avg: 1.00) [1 x 50731]

CPA algorithm statistics
------------------------
Number of iterations:            38551
Max size of waitlist:            44
Average size of waitlist:        10
Number of computed successors:   43161
Max successors for one state:    2
Number of times merged:          1377
Number of times stopped:         2083
Number of times breaked:         94

Total time for CPA algorithm:         9.405s (Max:     1.191s)
  Time for choose from waitlist:      0.102s
  Time for precision adjustment:      6.388s
  Time for transfer relation:         2.176s
  Time for merge operator:            0.135s
  Time for stop operator:             0.144s
  Time for adding to reached set:     0.112s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   94
Avg. length of target path (in blocks):                4387 (count: 94, min: 21, max: 102, avg: 46.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.390s
  Counterexample analysis:                             1.044s (Max:     0.029s, Calls: 94)
    Refinement sat check:                              0.392s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.066s
  Precision update:                                    0.119s
  ARG update:                                          0.086s

Length of refined path (in blocks):                    3725 (count: 94, min: 13, max: 84, avg: 39.63)
Number of affected states:                             1922 (count: 94, min: 10, max: 66, avg: 20.45)
Length (states) of path with itp 'true':               1709 (count: 94, min: 0, max: 58, avg: 18.18)
Length (states) of path with itp non-trivial itp:      1922 (count: 94, min: 10, max: 66, avg: 20.45)
Length (states) of path with itp 'false':                94 (count: 94, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         114 (count: 94, min: 0, max: 4, avg: 1.21)
Equal non-trivial interpolants along paths:            1714 (count: 94, min: 6, max: 65, avg: 18.23)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                94
Number of successful refinements:     94
Number of failed refinements:         0
Max. size of reached set before ref.: 2062
Max. size of reached set after ref.:  1640
Avg. size of reached set before ref.: 792.21
Avg. size of reached set after ref.:  443.98

Total time for CEGAR algorithm:      10.960s
Time for refinements:                 1.515s
Average time for refinement:          0.016s
Max time for refinement:              0.043s

Code Coverage
-----------------------------
  Function coverage:      0.657
  Visited lines:          135
  Total lines:            426
  Line coverage:          0.317
  Visited conditions:     40
  Total conditions:       70
  Condition coverage:     0.571

CPAchecker general statistics
-----------------------------
Number of program locations:     605
Number of CFA edges:             651
Number of relevant variables:    115
Number of functions:             35
Number of loops:                 5
Size of reached set:             6778
  Number of reached locations:   179 (30%)
    Avg states per location:     37
    Max states per location:     295 (at node N164)
  Number of reached functions:   23 (66%)
  Number of partitions:          6462
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N150 (after line 293), Function test called from node N293, stack depth 3 [7aa1e86b], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.026s
  Time for loading CPAs:          0.539s
  Time for loading parser:        0.460s
  Time for CFA construction:      0.903s
    Time for parsing file(s):     0.305s
    Time for AST to CFA:          0.241s
    Time for CFA sanity check:    0.052s
    Time for post-processing:     0.190s
      Time for var class.:        0.076s
Time for Analysis:               10.960s
CPU time for analysis:           10.970s
Time for analyzing result:        0.009s
Total time for CPAchecker:       12.990s
Total CPU time for CPAchecker:   12.990s
Time for statistics:              0.169s

Time for Garbage Collector:       0.224s (in 27 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     41MB (    39 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8022MB (  7651 MiB) max;   8006MB (  7635 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
