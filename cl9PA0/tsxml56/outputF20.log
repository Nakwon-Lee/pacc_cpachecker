scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product41_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_aqpt6zwv/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 190: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 199: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 254: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 438: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 452: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 914: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 705: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            28718 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  28153 (98%)
  Because of loop head:            440 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         125 (0%)
  Times precision was empty:       3266 (11%)
  Times precision was {false}:     214 (1%)
  Times result was cached:         22239 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2999 (10%)
  Times result was 'false':        2763 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         16263
  BDD entailment checks:           9375
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          17
Number of abstraction locations:          48
Max number of predicates per location:    8
Avg number of predicates per location:    5
Total predicates per abstraction:         103671
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 32.27
Number of irrelevant predicates:          43516 (42%)
Number of preds handled by boolean abs:   10003 (10%)
  Total number of models for allsat:      3354
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.12

Time for post operator:                  1.267s
  Time for path formula creation:        1.203s
Time for strengthen operator:            0.145s
Time for prec operator:                  8.830s
  Time for abstraction:                  8.454s (Max:     0.022s, Count: 28718)
    Boolean abstraction:                 2.202s
    Solving time:                        1.631s (Max:     0.013s)
    Model enumeration time:              0.180s
    Time for BDD construction:           0.199s (Max:     0.012s)
Time for merge operator:                 0.065s
Time for coverage check:                 0.048s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     1.811s

Number of path formula cache hits:   108300 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.989s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1796
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8287 (count: 33710, min: 0, max: 870, avg: 0.25)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.335s
Automaton transfers with branching:                0
Automaton transfer successors:                       114338 (count: 114338, min: 1, max: 1, avg: 1.00) [1 x 114338]

CPA algorithm statistics
------------------------
Number of iterations:            87883
Max size of waitlist:            84
Average size of waitlist:        29
Number of computed successors:   98279
Max successors for one state:    2
Number of times merged:          3444
Number of times stopped:         5597
Number of times breaked:         125

Total time for CPA algorithm:        14.186s (Max:     0.588s)
  Time for choose from waitlist:      0.136s
  Time for precision adjustment:      9.700s
  Time for transfer relation:         3.068s
  Time for merge operator:            0.229s
  Time for stop operator:             0.207s
  Time for adding to reached set:     0.260s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   125
Avg. length of target path (in blocks):                5563 (count: 125, min: 21, max: 98, avg: 44.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.598s
  Counterexample analysis:                             1.136s (Max:     0.021s, Calls: 125)
    Refinement sat check:                              0.448s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.061s
  Precision update:                                    0.066s
  ARG update:                                          0.244s

Length of refined path (in blocks):                    4747 (count: 125, min: 13, max: 84, avg: 37.98)
Number of affected states:                             2467 (count: 125, min: 10, max: 60, avg: 19.74)
Length (states) of path with itp 'true':               2155 (count: 125, min: 0, max: 58, avg: 17.24)
Length (states) of path with itp non-trivial itp:      2467 (count: 125, min: 10, max: 60, avg: 19.74)
Length (states) of path with itp 'false':               125 (count: 125, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         158 (count: 125, min: 0, max: 4, avg: 1.26)
Equal non-trivial interpolants along paths:            2184 (count: 125, min: 6, max: 58, avg: 17.47)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                125
Number of successful refinements:     125
Number of failed refinements:         0
Max. size of reached set before ref.: 5005
Max. size of reached set after ref.:  4475
Avg. size of reached set before ref.: 1766.69
Avg. size of reached set after ref.:  1102.46

Total time for CEGAR algorithm:      16.233s
Time for refinements:                 1.932s
Average time for refinement:          0.015s
Max time for refinement:              0.057s

Code Coverage
-----------------------------
  Function coverage:      0.657
  Visited lines:          135
  Total lines:            426
  Line coverage:          0.317
  Visited conditions:     40
  Total conditions:       70
  Condition coverage:     0.571

CPAchecker general statistics
-----------------------------
Number of program locations:     605
Number of CFA edges:             651
Number of relevant variables:    115
Number of functions:             35
Number of loops:                 5
Size of reached set:             6892
  Number of reached locations:   179 (30%)
    Avg states per location:     38
    Max states per location:     284 (at node N164)
  Number of reached functions:   23 (66%)
  Number of partitions:          6577
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N150 (after line 293), Function test called from node N293, stack depth 3 [231918f7], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.091s
  Time for loading CPAs:          0.512s
  Time for loading parser:        0.468s
  Time for CFA construction:      0.978s
    Time for parsing file(s):     0.355s
    Time for AST to CFA:          0.242s
    Time for CFA sanity check:    0.050s
    Time for post-processing:     0.219s
      Time for var class.:        0.103s
Time for Analysis:               16.233s
CPU time for analysis:           16.220s
Time for analyzing result:        0.005s
Total time for CPAchecker:       18.328s
Total CPU time for CPAchecker:   18.310s
Time for statistics:              0.149s

Time for Garbage Collector:       0.390s (in 53 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     44MB (    41 MiB) avg;     73MB (    70 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    32 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   8008MB (  7637 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
