scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product41_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_g19vg6_z/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 190: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 199: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 254: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 438: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 452: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 914: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 705: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            12557 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12313 (98%)
  Because of loop head:            161 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         83 (1%)
  Times precision was empty:       1339 (11%)
  Times precision was {false}:     152 (1%)
  Times result was cached:         9270 (74%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1796 (14%)
  Times result was 'false':        1406 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         7217
  BDD entailment checks:           4425
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          15
Number of abstraction locations:          48
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         50819
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 26.09
Number of irrelevant predicates:          19685 (39%)
Number of preds handled by boolean abs:   5961 (12%)
  Total number of models for allsat:      2259
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.26

Time for post operator:                  0.892s
  Time for path formula creation:        0.861s
Time for strengthen operator:            0.096s
Time for prec operator:                  6.134s
  Time for abstraction:                  5.860s (Max:     0.048s, Count: 12557)
    Boolean abstraction:                 1.483s
    Solving time:                        1.123s (Max:     0.013s)
    Model enumeration time:              0.118s
    Time for BDD construction:           0.113s (Max:     0.009s)
Time for merge operator:                 0.067s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     1.241s

Number of path formula cache hits:   46669 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.763s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1134
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4998 (count: 18299, min: 0, max: 577, avg: 0.27)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.319s
Automaton transfers with branching:                0
Automaton transfer successors:                        49466 (count: 49466, min: 1, max: 1, avg: 1.00) [1 x 49466]

CPA algorithm statistics
------------------------
Number of iterations:            37535
Max size of waitlist:            34
Average size of waitlist:        9
Number of computed successors:   42055
Max successors for one state:    2
Number of times merged:          1396
Number of times stopped:         2259
Number of times breaked:         83

Total time for CPA algorithm:         9.731s (Max:     0.569s)
  Time for choose from waitlist:      0.104s
  Time for precision adjustment:      6.546s
  Time for transfer relation:         2.187s
  Time for merge operator:            0.211s
  Time for stop operator:             0.186s
  Time for adding to reached set:     0.152s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   83
Avg. length of target path (in blocks):                4367 (count: 83, min: 22, max: 119, avg: 52.61)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.342s
  Counterexample analysis:                             0.968s (Max:     0.035s, Calls: 83)
    Refinement sat check:                              0.413s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.067s
  Precision update:                                    0.095s
  ARG update:                                          0.139s

Length of refined path (in blocks):                    3507 (count: 83, min: 13, max: 88, avg: 42.25)
Number of affected states:                             1795 (count: 83, min: 10, max: 66, avg: 21.63)
Length (states) of path with itp 'true':               1629 (count: 83, min: 0, max: 70, avg: 19.63)
Length (states) of path with itp non-trivial itp:      1795 (count: 83, min: 10, max: 66, avg: 21.63)
Length (states) of path with itp 'false':                83 (count: 83, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          76 (count: 83, min: 0, max: 3, avg: 0.92)
Equal non-trivial interpolants along paths:            1636 (count: 83, min: 6, max: 65, avg: 19.71)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                83
Number of successful refinements:     83
Number of failed refinements:         0
Max. size of reached set before ref.: 3450
Max. size of reached set after ref.:  2673
Avg. size of reached set before ref.: 1026.77
Avg. size of reached set after ref.:  590.84

Total time for CEGAR algorithm:      11.329s
Time for refinements:                 1.522s
Average time for refinement:          0.018s
Max time for refinement:              0.043s

Code Coverage
-----------------------------
  Function coverage:      0.657
  Visited lines:          135
  Total lines:            426
  Line coverage:          0.317
  Visited conditions:     40
  Total conditions:       70
  Condition coverage:     0.571

CPAchecker general statistics
-----------------------------
Number of program locations:     605
Number of CFA edges:             651
Number of relevant variables:    115
Number of functions:             35
Number of loops:                 5
Size of reached set:             2209
  Number of reached locations:   179 (30%)
    Avg states per location:     12
    Max states per location:     90 (at node N164)
  Number of reached functions:   23 (66%)
  Number of partitions:          2106
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N35 (before line 112), Function timeShift called from node N152, stack depth 4 [5e7558ef], stack [main, runTest, test, timeShift]])
  Number of target states:       0

Time for analysis setup:          1.992s
  Time for loading CPAs:          0.575s
  Time for loading parser:        0.511s
  Time for CFA construction:      0.815s
    Time for parsing file(s):     0.308s
    Time for AST to CFA:          0.194s
    Time for CFA sanity check:    0.056s
    Time for post-processing:     0.174s
      Time for var class.:        0.077s
Time for Analysis:               11.329s
CPU time for analysis:           11.310s
Time for analyzing result:        0.001s
Total time for CPAchecker:       13.326s
Total CPU time for CPAchecker:   13.310s
Time for statistics:              0.101s

Time for Garbage Collector:       0.215s (in 27 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     41MB (    39 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8005MB (  7634 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
