scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product41_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pkdal42a/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 190: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 199: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 254: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 438: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 452: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 914: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 705: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            21797 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21388 (98%)
  Because of loop head:            310 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         99 (0%)
  Times precision was empty:       1919 (9%)
  Times precision was {false}:     162 (1%)
  Times result was cached:         16621 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3095 (14%)
  Times result was 'false':        2471 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         16041
  BDD entailment checks:           12123
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          16
Number of abstraction locations:          48
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         85913
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 26.38
Number of irrelevant predicates:          32480 (38%)
Number of preds handled by boolean abs:   10963 (13%)
  Total number of models for allsat:      3490
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.13

Time for post operator:                  1.225s
  Time for path formula creation:        1.130s
Time for strengthen operator:            0.084s
Time for prec operator:                  8.178s
  Time for abstraction:                  7.749s (Max:     0.037s, Count: 21797)
    Boolean abstraction:                 2.091s
    Solving time:                        1.629s (Max:     0.013s)
    Model enumeration time:              0.184s
    Time for BDD construction:           0.132s (Max:     0.010s)
Time for merge operator:                 0.067s
Time for coverage check:                 0.043s
  Time for BDD entailment checks:        0.038s
Total time for SMT solver (w/o itp):     1.813s

Number of path formula cache hits:   71027 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.017s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1372
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7887 (count: 34699, min: 0, max: 471, avg: 0.23)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.328s
Automaton transfers with branching:                0
Automaton transfer successors:                        81677 (count: 81677, min: 1, max: 1, avg: 1.00) [1 x 81677]

CPA algorithm statistics
------------------------
Number of iterations:            64039
Max size of waitlist:            25
Average size of waitlist:        8
Number of computed successors:   71003
Max successors for one state:    2
Number of times merged:          1959
Number of times stopped:         4064
Number of times breaked:         99

Total time for CPA algorithm:        12.696s (Max:     0.604s)
  Time for choose from waitlist:      0.099s
  Time for precision adjustment:      8.843s
  Time for transfer relation:         2.715s
  Time for merge operator:            0.188s
  Time for stop operator:             0.185s
  Time for adding to reached set:     0.220s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   99
Avg. length of target path (in blocks):                4646 (count: 99, min: 21, max: 92, avg: 46.93)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.476s
  Counterexample analysis:                             1.018s (Max:     0.021s, Calls: 99)
    Refinement sat check:                              0.396s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.084s
  Precision update:                                    0.093s
  ARG update:                                          0.208s

Length of refined path (in blocks):                    3861 (count: 99, min: 13, max: 78, avg: 39.00)
Number of affected states:                             1943 (count: 99, min: 10, max: 66, avg: 19.63)
Length (states) of path with itp 'true':               1819 (count: 99, min: 0, max: 60, avg: 18.37)
Length (states) of path with itp non-trivial itp:      1943 (count: 99, min: 10, max: 66, avg: 19.63)
Length (states) of path with itp 'false':                99 (count: 99, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         102 (count: 99, min: 0, max: 4, avg: 1.03)
Equal non-trivial interpolants along paths:            1742 (count: 99, min: 6, max: 65, avg: 17.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                99
Number of successful refinements:     99
Number of failed refinements:         0
Max. size of reached set before ref.: 3680
Max. size of reached set after ref.:  2024
Avg. size of reached set before ref.: 1193.21
Avg. size of reached set after ref.:  575.08

Total time for CEGAR algorithm:      14.483s
Time for refinements:                 1.732s
Average time for refinement:          0.017s
Max time for refinement:              0.052s

Code Coverage
-----------------------------
  Function coverage:      0.629
  Visited lines:          119
  Total lines:            426
  Line coverage:          0.279
  Visited conditions:     38
  Total conditions:       70
  Condition coverage:     0.543

CPAchecker general statistics
-----------------------------
Number of program locations:     605
Number of CFA edges:             651
Number of relevant variables:    115
Number of functions:             35
Number of loops:                 5
Size of reached set:             3274
  Number of reached locations:   158 (26%)
    Avg states per location:     20
    Max states per location:     127 (at node N164)
  Number of reached functions:   22 (63%)
  Number of partitions:          3135
    Avg size of partitions:      1
    Max size of partitions:      11 (with key [N150 (after line 293), Function test called from node N293, stack depth 3 [74dc7276], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.134s
  Time for loading CPAs:          0.542s
  Time for loading parser:        0.475s
  Time for CFA construction:      0.950s
    Time for parsing file(s):     0.387s
    Time for AST to CFA:          0.200s
    Time for CFA sanity check:    0.056s
    Time for post-processing:     0.197s
      Time for var class.:        0.080s
Time for Analysis:               14.484s
CPU time for analysis:           14.470s
Time for analyzing result:        0.003s
Total time for CPAchecker:       16.622s
Total CPU time for CPAchecker:   16.610s
Time for statistics:              0.108s

Time for Garbage Collector:       0.345s (in 43 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     43MB (    41 MiB) avg;     71MB (    68 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8022MB (  7651 MiB) max;   8008MB (  7637 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
