scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product41_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ts1u51cl/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 190: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 199: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 254: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 438: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 452: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 914: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 705: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            16856 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  16529 (98%)
  Because of loop head:            256 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         71 (0%)
  Times precision was empty:       546 (3%)
  Times precision was {false}:     139 (1%)
  Times result was cached:         13150 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3021 (18%)
  Times result was 'false':        2230 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         12307
  BDD entailment checks:           9577
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          15
Number of abstraction locations:          48
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         75095
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 23.76
Number of irrelevant predicates:          26257 (35%)
Number of preds handled by boolean abs:   10556 (14%)
  Total number of models for allsat:      3272
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.08

Time for post operator:                  1.186s
  Time for path formula creation:        1.104s
Time for strengthen operator:            0.116s
Time for prec operator:                  8.476s
  Time for abstraction:                  8.166s (Max:     0.022s, Count: 16856)
    Boolean abstraction:                 2.461s
    Solving time:                        1.870s (Max:     0.013s)
    Model enumeration time:              0.165s
    Time for BDD construction:           0.166s (Max:     0.012s)
Time for merge operator:                 0.043s
Time for coverage check:                 0.044s
  Time for BDD entailment checks:        0.041s
Total time for SMT solver (w/o itp):     2.035s

Number of path formula cache hits:   49941 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.022s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1181
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7460 (count: 29995, min: 0, max: 523, avg: 0.25)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.260s
Automaton transfers with branching:                0
Automaton transfer successors:                        63294 (count: 63294, min: 1, max: 1, avg: 1.00) [1 x 63294]

CPA algorithm statistics
------------------------
Number of iterations:            48981
Max size of waitlist:            22
Average size of waitlist:        7
Number of computed successors:   54428
Max successors for one state:    2
Number of times merged:          1365
Number of times stopped:         2902
Number of times breaked:         71

Total time for CPA algorithm:        12.234s (Max:     0.859s)
  Time for choose from waitlist:      0.083s
  Time for precision adjustment:      8.953s
  Time for transfer relation:         2.351s
  Time for merge operator:            0.146s
  Time for stop operator:             0.145s
  Time for adding to reached set:     0.151s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   71
Avg. length of target path (in blocks):                4111 (count: 71, min: 21, max: 138, avg: 57.90)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.230s
  Counterexample analysis:                             0.822s (Max:     0.027s, Calls: 71)
    Refinement sat check:                              0.396s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.048s
  Precision update:                                    0.096s
  ARG update:                                          0.182s

Length of refined path (in blocks):                    2847 (count: 71, min: 13, max: 71, avg: 40.10)
Number of affected states:                             1593 (count: 71, min: 3, max: 66, avg: 22.44)
Length (states) of path with itp 'true':               1183 (count: 71, min: 0, max: 53, avg: 16.66)
Length (states) of path with itp non-trivial itp:      1593 (count: 71, min: 3, max: 66, avg: 22.44)
Length (states) of path with itp 'false':                71 (count: 71, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          52 (count: 71, min: 0, max: 3, avg: 0.73)
Equal non-trivial interpolants along paths:            1470 (count: 71, min: 2, max: 65, avg: 20.70)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                71
Number of successful refinements:     71
Number of failed refinements:         0
Max. size of reached set before ref.: 2881
Max. size of reached set after ref.:  1659
Avg. size of reached set before ref.: 1160.55
Avg. size of reached set after ref.:  502.69

Total time for CEGAR algorithm:      13.621s
Time for refinements:                 1.359s
Average time for refinement:          0.019s
Max time for refinement:              0.049s

Code Coverage
-----------------------------
  Function coverage:      0.629
  Visited lines:          119
  Total lines:            426
  Line coverage:          0.279
  Visited conditions:     38
  Total conditions:       70
  Condition coverage:     0.543

CPAchecker general statistics
-----------------------------
Number of program locations:     605
Number of CFA edges:             651
Number of relevant variables:    115
Number of functions:             35
Number of loops:                 5
Size of reached set:             2589
  Number of reached locations:   158 (26%)
    Avg states per location:     16
    Max states per location:     110 (at node N164)
  Number of reached functions:   22 (63%)
  Number of partitions:          2469
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N150 (after line 293), Function test called from node N293, stack depth 3 [30817a0f], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.888s
  Time for loading CPAs:          0.496s
  Time for loading parser:        0.410s
  Time for CFA construction:      0.894s
    Time for parsing file(s):     0.342s
    Time for AST to CFA:          0.189s
    Time for CFA sanity check:    0.043s
    Time for post-processing:     0.205s
      Time for var class.:        0.100s
Time for Analysis:               13.621s
CPU time for analysis:           13.620s
Time for analyzing result:        0.002s
Total time for CPAchecker:       15.512s
Total CPU time for CPAchecker:   15.510s
Time for statistics:              0.103s

Time for Garbage Collector:       0.292s (in 36 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     42MB (    40 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     33MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8008MB (  7637 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
