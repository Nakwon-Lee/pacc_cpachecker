scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product32_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_s0n6om2f/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 457: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 513: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 536: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 771: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 780: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2404 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2348 (98%)
  Because of loop head:            42 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (1%)
  Times precision was empty:       457 (19%)
  Times precision was {false}:     56 (2%)
  Times result was cached:         1813 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      78 (3%)
  Times result was 'false':        331 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         476
  BDD entailment checks:           334
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          4
Number of abstraction locations:          42
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         2439
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 18.20
Number of irrelevant predicates:          760 (31%)
Number of preds handled by boolean abs:   92 (4%)
  Total number of models for allsat:      84
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  0.339s
  Time for path formula creation:        0.327s
Time for strengthen operator:            0.030s
Time for prec operator:                  0.689s
  Time for abstraction:                  0.604s (Max:     0.019s, Count: 2404)
    Boolean abstraction:                 0.084s
    Solving time:                        0.067s (Max:     0.008s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.020s (Max:     0.008s)
Time for merge operator:                 0.018s
Time for coverage check:                 0.031s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     0.071s

Number of path formula cache hits:   8153 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.297s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         137 (count: 1581, min: 0, max: 86, avg: 0.09)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.093s
Automaton transfers with branching:                0
Automaton transfer successors:                         8685 (count: 8685, min: 1, max: 1, avg: 1.00) [1 x 8685]

CPA algorithm statistics
------------------------
Number of iterations:            6782
Max size of waitlist:            19
Average size of waitlist:        6
Number of computed successors:   7617
Max successors for one state:    2
Number of times merged:          71
Number of times stopped:         354
Number of times breaked:         14

Total time for CPA algorithm:         1.930s (Max:     0.266s)
  Time for choose from waitlist:      0.022s
  Time for precision adjustment:      0.836s
  Time for transfer relation:         0.784s
  Time for merge operator:            0.039s
  Time for stop operator:             0.074s
  Time for adding to reached set:     0.058s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14
Avg. length of target path (in blocks):                 383 (count: 14, min: 21, max: 38, avg: 27.36)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.193s
  Counterexample analysis:                             0.111s (Max:     0.018s, Calls: 14)
    Refinement sat check:                              0.057s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.009s
  ARG update:                                          0.044s

Length of refined path (in blocks):                     265 (count: 14, min: 13, max: 30, avg: 18.93)
Number of affected states:                              251 (count: 14, min: 12, max: 29, avg: 17.93)
Length (states) of path with itp 'true':                  0 (count: 14, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       251 (count: 14, min: 12, max: 29, avg: 17.93)
Length (states) of path with itp 'false':                14 (count: 14, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 14, min: 0, max: 1, avg: 0.07)
Equal non-trivial interpolants along paths:             236 (count: 14, min: 11, max: 28, avg: 16.86)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 877
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 431.43
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.146s
Time for refinements:                 0.216s
Average time for refinement:          0.015s
Max time for refinement:              0.039s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          107
  Total lines:            436
  Line coverage:          0.245
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     629
Number of CFA edges:             679
Number of relevant variables:    113
Number of functions:             38
Number of loops:                 5
Size of reached set:             935
  Number of reached locations:   146 (23%)
    Avg states per location:     6
    Max states per location:     40 (at node N382)
  Number of reached functions:   19 (50%)
  Number of partitions:          933
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N406 (before lines 582-631), Function test called from node N620, stack depth 3 [7ae0cc89], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.083s
  Time for loading CPAs:          0.550s
  Time for loading parser:        0.460s
  Time for CFA construction:      0.967s
    Time for parsing file(s):     0.312s
    Time for AST to CFA:          0.257s
    Time for CFA sanity check:    0.081s
    Time for post-processing:     0.205s
      Time for var class.:        0.073s
Time for Analysis:                2.146s
CPU time for analysis:            2.150s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.233s
Total CPU time for CPAchecker:    4.230s
Time for statistics:              0.067s

Time for Garbage Collector:       0.081s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     33MB (    31 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     26MB (    25 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8035MB (  7663 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
