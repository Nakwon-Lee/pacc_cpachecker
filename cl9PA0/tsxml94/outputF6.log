scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product32_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9gaovayp/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 457: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 513: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 536: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 771: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 780: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4780 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4700 (98%)
  Because of loop head:            57 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (0%)
  Times precision was empty:       1905 (40%)
  Times precision was {false}:     71 (1%)
  Times result was cached:         2682 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      122 (3%)
  Times result was 'false':        488 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         1034
  BDD entailment checks:           686
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          42
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         5285
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 27.38
Number of irrelevant predicates:          2400 (45%)
Number of preds handled by boolean abs:   161 (3%)
  Total number of models for allsat:      136
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.11

Time for post operator:                  0.589s
  Time for path formula creation:        0.583s
Time for strengthen operator:            0.046s
Time for prec operator:                  1.004s
  Time for abstraction:                  0.875s (Max:     0.015s, Count: 4780)
    Boolean abstraction:                 0.139s
    Solving time:                        0.113s (Max:     0.013s)
    Model enumeration time:              0.005s
    Time for BDD construction:           0.034s (Max:     0.009s)
Time for merge operator:                 0.010s
Time for coverage check:                 0.014s
  Time for BDD entailment checks:        0.013s
Total time for SMT solver (w/o itp):     0.118s

Number of path formula cache hits:   16228 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.470s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               213
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         266 (count: 3737, min: 0, max: 86, avg: 0.07)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.099s
Automaton transfers with branching:                0
Automaton transfer successors:                        17012 (count: 17012, min: 1, max: 1, avg: 1.00) [1 x 17012]

CPA algorithm statistics
------------------------
Number of iterations:            13415
Max size of waitlist:            22
Average size of waitlist:        10
Number of computed successors:   14845
Max successors for one state:    2
Number of times merged:          174
Number of times stopped:         719
Number of times breaked:         23

Total time for CPA algorithm:         2.866s (Max:     0.357s)
  Time for choose from waitlist:      0.034s
  Time for precision adjustment:      1.288s
  Time for transfer relation:         1.188s
  Time for merge operator:            0.040s
  Time for stop operator:             0.066s
  Time for adding to reached set:     0.082s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   23
Avg. length of target path (in blocks):                 573 (count: 23, min: 19, max: 38, avg: 24.91)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.300s
  Counterexample analysis:                             0.175s (Max:     0.017s, Calls: 23)
    Refinement sat check:                              0.073s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.012s
  ARG update:                                          0.070s

Length of refined path (in blocks):                     415 (count: 23, min: 13, max: 30, avg: 18.04)
Number of affected states:                              356 (count: 23, min: 2, max: 29, avg: 15.48)
Length (states) of path with itp 'true':                 36 (count: 23, min: 0, max: 12, avg: 1.57)
Length (states) of path with itp non-trivial itp:       356 (count: 23, min: 2, max: 29, avg: 15.48)
Length (states) of path with itp 'false':                23 (count: 23, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 23, min: 0, max: 1, avg: 0.22)
Equal non-trivial interpolants along paths:             328 (count: 23, min: 1, max: 28, avg: 14.26)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                23
Number of successful refinements:     23
Number of failed refinements:         0
Max. size of reached set before ref.: 1089
Max. size of reached set after ref.:  419
Avg. size of reached set before ref.: 603.43
Avg. size of reached set after ref.:  55.13

Total time for CEGAR algorithm:       3.239s
Time for refinements:                 0.371s
Average time for refinement:          0.016s
Max time for refinement:              0.052s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          107
  Total lines:            436
  Line coverage:          0.245
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     629
Number of CFA edges:             679
Number of relevant variables:    113
Number of functions:             38
Number of loops:                 5
Size of reached set:             1028
  Number of reached locations:   146 (23%)
    Avg states per location:     7
    Max states per location:     43 (at node N382)
  Number of reached functions:   19 (50%)
  Number of partitions:          1024
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N406 (before lines 582-631), Function test called from node N620, stack depth 3 [1786150f], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.059s
  Time for loading CPAs:          0.541s
  Time for loading parser:        0.527s
  Time for CFA construction:      0.897s
    Time for parsing file(s):     0.325s
    Time for AST to CFA:          0.183s
    Time for CFA sanity check:    0.040s
    Time for post-processing:     0.218s
      Time for var class.:        0.086s
Time for Analysis:                3.239s
CPU time for analysis:            3.240s
Time for analyzing result:        0.002s
Total time for CPAchecker:        5.306s
Total CPU time for CPAchecker:    5.310s
Time for statistics:              0.088s

Time for Garbage Collector:       0.100s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     35MB (    33 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8042MB (  7670 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
