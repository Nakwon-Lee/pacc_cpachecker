scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product32_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pc696lp8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 457: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 513: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 536: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 771: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 780: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3984 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3915 (98%)
  Because of loop head:            39 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         30 (1%)
  Times precision was empty:       1376 (35%)
  Times precision was {false}:     77 (2%)
  Times result was cached:         2318 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      213 (5%)
  Times result was 'false':        489 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         623
  BDD entailment checks:           343
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          42
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         5575
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 19.22
Number of irrelevant predicates:          1884 (34%)
Number of preds handled by boolean abs:   384 (7%)
  Total number of models for allsat:      239
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.12

Time for post operator:                  0.459s
  Time for path formula creation:        0.425s
Time for strengthen operator:            0.028s
Time for prec operator:                  1.203s
  Time for abstraction:                  1.117s (Max:     0.020s, Count: 3984)
    Boolean abstraction:                 0.193s
    Solving time:                        0.109s (Max:     0.012s)
    Model enumeration time:              0.026s
    Time for BDD construction:           0.036s (Max:     0.007s)
Time for merge operator:                 0.014s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     0.135s

Number of path formula cache hits:   13806 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.364s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               235
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         453 (count: 3493, min: 0, max: 210, avg: 0.13)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.113s
Automaton transfers with branching:                0
Automaton transfer successors:                        14586 (count: 14586, min: 1, max: 1, avg: 1.00) [1 x 14586]

CPA algorithm statistics
------------------------
Number of iterations:            10947
Max size of waitlist:            42
Average size of waitlist:        16
Number of computed successors:   12366
Max successors for one state:    2
Number of times merged:          140
Number of times stopped:         380
Number of times breaked:         30

Total time for CPA algorithm:         2.959s (Max:     0.376s)
  Time for choose from waitlist:      0.032s
  Time for precision adjustment:      1.457s
  Time for transfer relation:         1.091s
  Time for merge operator:            0.066s
  Time for stop operator:             0.128s
  Time for adding to reached set:     0.017s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   30
Avg. length of target path (in blocks):                 879 (count: 30, min: 20, max: 60, avg: 29.30)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.360s
  Counterexample analysis:                             0.216s (Max:     0.016s, Calls: 30)
    Refinement sat check:                              0.081s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.017s
  ARG update:                                          0.053s

Length of refined path (in blocks):                     618 (count: 30, min: 14, max: 41, avg: 20.60)
Number of affected states:                              440 (count: 30, min: 2, max: 40, avg: 14.67)
Length (states) of path with itp 'true':                148 (count: 30, min: 0, max: 14, avg: 4.93)
Length (states) of path with itp non-trivial itp:       440 (count: 30, min: 2, max: 40, avg: 14.67)
Length (states) of path with itp 'false':                30 (count: 30, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 30, min: 0, max: 1, avg: 0.13)
Equal non-trivial interpolants along paths:             406 (count: 30, min: 1, max: 39, avg: 13.53)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                30
Number of successful refinements:     30
Number of failed refinements:         0
Max. size of reached set before ref.: 1001
Max. size of reached set after ref.:  536
Avg. size of reached set before ref.: 484.67
Avg. size of reached set after ref.:  141.97

Total time for CEGAR algorithm:       3.395s
Time for refinements:                 0.431s
Average time for refinement:          0.014s
Max time for refinement:              0.041s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          107
  Total lines:            436
  Line coverage:          0.245
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     629
Number of CFA edges:             679
Number of relevant variables:    113
Number of functions:             38
Number of loops:                 5
Size of reached set:             1217
  Number of reached locations:   146 (23%)
    Avg states per location:     8
    Max states per location:     46 (at node N382)
  Number of reached functions:   19 (50%)
  Number of partitions:          1199
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N406 (before lines 582-631), Function test called from node N620, stack depth 3 [52856ff9], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.103s
  Time for loading CPAs:          0.497s
  Time for loading parser:        0.506s
  Time for CFA construction:      1.001s
    Time for parsing file(s):     0.333s
    Time for AST to CFA:          0.242s
    Time for CFA sanity check:    0.078s
    Time for post-processing:     0.239s
      Time for var class.:        0.111s
Time for Analysis:                3.396s
CPU time for analysis:            3.390s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.502s
Total CPU time for CPAchecker:    5.500s
Time for statistics:              0.091s

Time for Garbage Collector:       0.092s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    55 MiB) max;     35MB (    33 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8047MB (  7674 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
