scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product32_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yc5g3dsd/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 457: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 513: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 536: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 771: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 780: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3681 (29% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3601 (98%)
  Because of loop head:            57 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (1%)
  Times precision was empty:       977 (27%)
  Times precision was {false}:     71 (2%)
  Times result was cached:         2511 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      122 (3%)
  Times result was 'false':        473 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         640
  BDD entailment checks:           436
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          42
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         5028
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 26.05
Number of irrelevant predicates:          2209 (44%)
Number of preds handled by boolean abs:   162 (3%)
  Total number of models for allsat:      136
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.11

Time for post operator:                  0.432s
  Time for path formula creation:        0.423s
Time for strengthen operator:            0.044s
Time for prec operator:                  0.946s
  Time for abstraction:                  0.856s (Max:     0.015s, Count: 3681)
    Boolean abstraction:                 0.112s
    Solving time:                        0.073s (Max:     0.009s)
    Model enumeration time:              0.005s
    Time for BDD construction:           0.020s (Max:     0.006s)
Time for merge operator:                 0.011s
Time for coverage check:                 0.016s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):     0.078s

Number of path formula cache hits:   12357 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.374s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               213
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         270 (count: 2559, min: 0, max: 108, avg: 0.11)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.132s
Automaton transfers with branching:                0
Automaton transfer successors:                        12884 (count: 12884, min: 1, max: 1, avg: 1.00) [1 x 12884]

CPA algorithm statistics
------------------------
Number of iterations:            10049
Max size of waitlist:            26
Average size of waitlist:        9
Number of computed successors:   11246
Max successors for one state:    2
Number of times merged:          102
Number of times stopped:         423
Number of times breaked:         23

Total time for CPA algorithm:         2.536s (Max:     0.283s)
  Time for choose from waitlist:      0.015s
  Time for precision adjustment:      1.144s
  Time for transfer relation:         1.026s
  Time for merge operator:            0.047s
  Time for stop operator:             0.064s
  Time for adding to reached set:     0.084s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   23
Avg. length of target path (in blocks):                 566 (count: 23, min: 19, max: 36, avg: 24.61)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.252s
  Counterexample analysis:                             0.153s (Max:     0.021s, Calls: 23)
    Refinement sat check:                              0.058s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.035s
  Precision update:                                    0.013s
  ARG update:                                          0.040s

Length of refined path (in blocks):                     408 (count: 23, min: 13, max: 28, avg: 17.74)
Number of affected states:                              349 (count: 23, min: 2, max: 27, avg: 15.17)
Length (states) of path with itp 'true':                 36 (count: 23, min: 0, max: 12, avg: 1.57)
Length (states) of path with itp non-trivial itp:       349 (count: 23, min: 2, max: 27, avg: 15.17)
Length (states) of path with itp 'false':                23 (count: 23, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 23, min: 0, max: 1, avg: 0.22)
Equal non-trivial interpolants along paths:             321 (count: 23, min: 1, max: 26, avg: 13.96)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                23
Number of successful refinements:     23
Number of failed refinements:         0
Max. size of reached set before ref.: 1019
Max. size of reached set after ref.:  249
Avg. size of reached set before ref.: 438.30
Avg. size of reached set after ref.:  32.96

Total time for CEGAR algorithm:       2.847s
Time for refinements:                 0.303s
Average time for refinement:          0.013s
Max time for refinement:              0.041s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          107
  Total lines:            436
  Line coverage:          0.245
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     629
Number of CFA edges:             679
Number of relevant variables:    113
Number of functions:             38
Number of loops:                 5
Size of reached set:             1028
  Number of reached locations:   146 (23%)
    Avg states per location:     7
    Max states per location:     43 (at node N382)
  Number of reached functions:   19 (50%)
  Number of partitions:          1024
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N406 (before lines 582-631), Function test called from node N620, stack depth 3 [322b09da], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.210s
  Time for loading CPAs:          0.574s
  Time for loading parser:        0.529s
  Time for CFA construction:      0.983s
    Time for parsing file(s):     0.336s
    Time for AST to CFA:          0.229s
    Time for CFA sanity check:    0.067s
    Time for post-processing:     0.211s
      Time for var class.:        0.096s
Time for Analysis:                2.848s
CPU time for analysis:            2.850s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.061s
Total CPU time for CPAchecker:    5.050s
Time for statistics:              0.074s

Time for Garbage Collector:       0.122s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    56 MiB) max;     33MB (    32 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8038MB (  7665 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
