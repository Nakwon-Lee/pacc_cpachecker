scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product38_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__vzignia/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 278: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 333: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 661: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 812: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 861: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 893: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 907: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            23277 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  22795 (98%)
  Because of loop head:            319 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         163 (1%)
  Times precision was empty:       2297 (10%)
  Times precision was {false}:     189 (1%)
  Times result was cached:         16732 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4059 (17%)
  Times result was 'false':        3334 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         11394
  BDD entailment checks:           8154
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          15
Number of abstraction locations:          53
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         87263
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 20.54
Number of irrelevant predicates:          30458 (35%)
Number of preds handled by boolean abs:   14382 (16%)
  Total number of models for allsat:      4220
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.04

Time for post operator:                  1.124s
  Time for path formula creation:        1.037s
Time for strengthen operator:            0.137s
Time for prec operator:                  8.327s
  Time for abstraction:                  7.952s (Max:     0.016s, Count: 23277)
    Boolean abstraction:                 2.152s
    Solving time:                        1.583s (Max:     0.013s)
    Model enumeration time:              0.155s
    Time for BDD construction:           0.203s (Max:     0.012s)
Time for merge operator:                 0.057s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.022s
Total time for SMT solver (w/o itp):     1.738s

Number of path formula cache hits:   74810 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.909s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               992
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8609 (count: 37053, min: 0, max: 617, avg: 0.23)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.322s
Automaton transfers with branching:                0
Automaton transfer successors:                        86108 (count: 86108, min: 1, max: 1, avg: 1.00) [1 x 86108]

CPA algorithm statistics
------------------------
Number of iterations:            66628
Max size of waitlist:            23
Average size of waitlist:        11
Number of computed successors:   74023
Max successors for one state:    2
Number of times merged:          1620
Number of times stopped:         3749
Number of times breaked:         163

Total time for CPA algorithm:        12.424s (Max:     0.706s)
  Time for choose from waitlist:      0.090s
  Time for precision adjustment:      8.889s
  Time for transfer relation:         2.523s
  Time for merge operator:            0.165s
  Time for stop operator:             0.207s
  Time for adding to reached set:     0.206s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   163
Avg. length of target path (in blocks):                7150 (count: 163, min: 23, max: 129, avg: 43.87)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.304s
  Counterexample analysis:                             1.799s (Max:     0.029s, Calls: 163)
    Refinement sat check:                              0.642s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.086s
  Precision update:                                    0.128s
  ARG update:                                          0.189s

Length of refined path (in blocks):                    5828 (count: 163, min: 14, max: 77, avg: 35.75)
Number of affected states:                             2734 (count: 163, min: 2, max: 66, avg: 16.77)
Length (states) of path with itp 'true':               2931 (count: 163, min: 0, max: 47, avg: 17.98)
Length (states) of path with itp non-trivial itp:      2734 (count: 163, min: 2, max: 66, avg: 16.77)
Length (states) of path with itp 'false':               163 (count: 163, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         212 (count: 163, min: 0, max: 3, avg: 1.30)
Equal non-trivial interpolants along paths:            2359 (count: 163, min: 1, max: 64, avg: 14.47)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                163
Number of successful refinements:     163
Number of failed refinements:         0
Max. size of reached set before ref.: 4590
Max. size of reached set after ref.:  3789
Avg. size of reached set before ref.: 1088.02
Avg. size of reached set after ref.:  701.20

Total time for CEGAR algorithm:      15.123s
Time for refinements:                 2.602s
Average time for refinement:          0.015s
Max time for refinement:              0.066s

Code Coverage
-----------------------------
  Function coverage:      0.694
  Visited lines:          143
  Total lines:            432
  Line coverage:          0.331
  Visited conditions:     42
  Total conditions:       72
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     616
Number of CFA edges:             665
Number of relevant variables:    115
Number of functions:             36
Number of loops:                 5
Size of reached set:             3889
  Number of reached locations:   191 (31%)
    Avg states per location:     20
    Max states per location:     116 (at node N609)
  Number of reached functions:   25 (69%)
  Number of partitions:          3780
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N60 (after line 138), Function test called from node N527, stack depth 3 [58703290], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.306s
  Time for loading CPAs:          0.560s
  Time for loading parser:        0.579s
  Time for CFA construction:      1.058s
    Time for parsing file(s):     0.337s
    Time for AST to CFA:          0.286s
    Time for CFA sanity check:    0.067s
    Time for post-processing:     0.231s
      Time for var class.:        0.099s
Time for Analysis:               15.123s
CPU time for analysis:           15.110s
Time for analyzing result:        0.002s
Total time for CPAchecker:       17.436s
Total CPU time for CPAchecker:   17.420s
Time for statistics:              0.116s

Time for Garbage Collector:       0.344s (in 45 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    67 MiB) max;     42MB (    40 MiB) avg;     74MB (    70 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8070MB (  7696 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
