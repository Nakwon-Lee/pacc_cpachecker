scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product38_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dm7q6qzz/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 278: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 333: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 661: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 812: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 861: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 893: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 907: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            13760 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13423 (98%)
  Because of loop head:            278 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         59 (0%)
  Times precision was empty:       676 (5%)
  Times precision was {false}:     144 (1%)
  Times result was cached:         10508 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2432 (18%)
  Times result was 'false':        2250 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         5780
  BDD entailment checks:           3930
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          14
Number of abstraction locations:          53
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         54801
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 21.27
Number of irrelevant predicates:          15550 (28%)
Number of preds handled by boolean abs:   7626 (14%)
  Total number of models for allsat:      2503
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.03

Time for post operator:                  1.212s
  Time for path formula creation:        1.122s
Time for strengthen operator:            0.070s
Time for prec operator:                  6.872s
  Time for abstraction:                  6.598s (Max:     0.021s, Count: 13760)
    Boolean abstraction:                 1.690s
    Solving time:                        1.276s (Max:     0.013s)
    Model enumeration time:              0.162s
    Time for BDD construction:           0.099s (Max:     0.012s)
Time for merge operator:                 0.024s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     1.438s

Number of path formula cache hits:   41345 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.962s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               711
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5453 (count: 20896, min: 0, max: 438, avg: 0.26)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.211s
Automaton transfers with branching:                0
Automaton transfer successors:                        50968 (count: 50968, min: 1, max: 1, avg: 1.00) [1 x 50968]

CPA algorithm statistics
------------------------
Number of iterations:            39334
Max size of waitlist:            18
Average size of waitlist:        7
Number of computed successors:   43697
Max successors for one state:    2
Number of times merged:          925
Number of times stopped:         1802
Number of times breaked:         59

Total time for CPA algorithm:        10.525s (Max:     0.890s)
  Time for choose from waitlist:      0.078s
  Time for precision adjustment:      7.349s
  Time for transfer relation:         2.311s
  Time for merge operator:            0.100s
  Time for stop operator:             0.195s
  Time for adding to reached set:     0.139s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   59
Avg. length of target path (in blocks):                2504 (count: 59, min: 21, max: 74, avg: 42.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.896s
  Counterexample analysis:                             0.567s (Max:     0.023s, Calls: 59)
    Refinement sat check:                              0.234s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.054s
  Precision update:                                    0.081s
  ARG update:                                          0.147s

Length of refined path (in blocks):                    2026 (count: 59, min: 13, max: 67, avg: 34.34)
Number of affected states:                             1435 (count: 59, min: 2, max: 66, avg: 24.32)
Length (states) of path with itp 'true':                532 (count: 59, min: 0, max: 33, avg: 9.02)
Length (states) of path with itp non-trivial itp:      1435 (count: 59, min: 2, max: 66, avg: 24.32)
Length (states) of path with itp 'false':                59 (count: 59, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          57 (count: 59, min: 0, max: 3, avg: 0.97)
Equal non-trivial interpolants along paths:            1319 (count: 59, min: 1, max: 64, avg: 22.36)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                59
Number of successful refinements:     59
Number of failed refinements:         0
Max. size of reached set before ref.: 5222
Max. size of reached set after ref.:  3720
Avg. size of reached set before ref.: 1122.75
Avg. size of reached set after ref.:  520.81

Total time for CEGAR algorithm:      11.628s
Time for refinements:                 1.067s
Average time for refinement:          0.018s
Max time for refinement:              0.057s

Code Coverage
-----------------------------
  Function coverage:      0.694
  Visited lines:          143
  Total lines:            432
  Line coverage:          0.331
  Visited conditions:     42
  Total conditions:       72
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     616
Number of CFA edges:             665
Number of relevant variables:    115
Number of functions:             36
Number of loops:                 5
Size of reached set:             4132
  Number of reached locations:   191 (31%)
    Avg states per location:     21
    Max states per location:     135 (at node N609)
  Number of reached functions:   25 (69%)
  Number of partitions:          4001
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N55 (after line 125), Function test called from node N527, stack depth 3 [4643d88c], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.165s
  Time for loading CPAs:          0.548s
  Time for loading parser:        0.485s
  Time for CFA construction:      1.015s
    Time for parsing file(s):     0.338s
    Time for AST to CFA:          0.247s
    Time for CFA sanity check:    0.055s
    Time for post-processing:     0.219s
      Time for var class.:        0.089s
Time for Analysis:               11.629s
CPU time for analysis:           11.620s
Time for analyzing result:        0.003s
Total time for CPAchecker:       13.801s
Total CPU time for CPAchecker:   13.790s
Time for statistics:              0.115s

Time for Garbage Collector:       0.288s (in 29 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     40MB (    38 MiB) avg;     71MB (    68 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8089MB (  7715 MiB) max;   8069MB (  7696 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
