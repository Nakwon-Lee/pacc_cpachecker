scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product38_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0fj1z4wj/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 278: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 333: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 661: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 812: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 861: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 893: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 907: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            22400 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21981 (98%)
  Because of loop head:            298 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         121 (1%)
  Times precision was empty:       4393 (20%)
  Times precision was {false}:     200 (1%)
  Times result was cached:         15515 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2292 (10%)
  Times result was 'false':        2841 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         9574
  BDD entailment checks:           5862
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          15
Number of abstraction locations:          53
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         67439
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 27.06
Number of irrelevant predicates:          25281 (37%)
Number of preds handled by boolean abs:   7069 (10%)
  Total number of models for allsat:      2401
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.05

Time for post operator:                  1.248s
  Time for path formula creation:        1.125s
Time for strengthen operator:            0.140s
Time for prec operator:                  6.928s
  Time for abstraction:                  6.526s (Max:     0.015s, Count: 22400)
    Boolean abstraction:                 1.570s
    Solving time:                        1.146s (Max:     0.013s)
    Model enumeration time:              0.132s
    Time for BDD construction:           0.143s (Max:     0.012s)
Time for merge operator:                 0.066s
Time for coverage check:                 0.070s
  Time for BDD entailment checks:        0.069s
Total time for SMT solver (w/o itp):     1.278s

Number of path formula cache hits:   78027 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.961s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               936
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5299 (count: 26393, min: 0, max: 493, avg: 0.20)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.236s
Automaton transfers with branching:                0
Automaton transfer successors:                        83698 (count: 83698, min: 1, max: 1, avg: 1.00) [1 x 83698]

CPA algorithm statistics
------------------------
Number of iterations:            65913
Max size of waitlist:            24
Average size of waitlist:        10
Number of computed successors:   73054
Max successors for one state:    2
Number of times merged:          1856
Number of times stopped:         3938
Number of times breaked:         121

Total time for CPA algorithm:        11.152s (Max:     0.881s)
  Time for choose from waitlist:      0.059s
  Time for precision adjustment:      7.542s
  Time for transfer relation:         2.583s
  Time for merge operator:            0.194s
  Time for stop operator:             0.242s
  Time for adding to reached set:     0.145s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   121
Avg. length of target path (in blocks):                4523 (count: 121, min: 21, max: 89, avg: 37.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.747s
  Counterexample analysis:                             1.216s (Max:     0.026s, Calls: 121)
    Refinement sat check:                              0.528s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.121s
  Precision update:                                    0.145s
  ARG update:                                          0.206s

Length of refined path (in blocks):                    3814 (count: 121, min: 13, max: 75, avg: 31.52)
Number of affected states:                             2025 (count: 121, min: 2, max: 66, avg: 16.74)
Length (states) of path with itp 'true':               1668 (count: 121, min: 0, max: 51, avg: 13.79)
Length (states) of path with itp non-trivial itp:      2025 (count: 121, min: 2, max: 66, avg: 16.74)
Length (states) of path with itp 'false':               121 (count: 121, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         165 (count: 121, min: 0, max: 4, avg: 1.36)
Equal non-trivial interpolants along paths:            1739 (count: 121, min: 1, max: 64, avg: 14.37)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                121
Number of successful refinements:     121
Number of failed refinements:         0
Max. size of reached set before ref.: 6030
Max. size of reached set after ref.:  4244
Avg. size of reached set before ref.: 1145.78
Avg. size of reached set after ref.:  653.18

Total time for CEGAR algorithm:      13.279s
Time for refinements:                 2.043s
Average time for refinement:          0.016s
Max time for refinement:              0.069s

Code Coverage
-----------------------------
  Function coverage:      0.694
  Visited lines:          143
  Total lines:            432
  Line coverage:          0.331
  Visited conditions:     42
  Total conditions:       72
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     616
Number of CFA edges:             665
Number of relevant variables:    115
Number of functions:             36
Number of loops:                 5
Size of reached set:             6672
  Number of reached locations:   191 (31%)
    Avg states per location:     34
    Max states per location:     195 (at node N72)
  Number of reached functions:   25 (69%)
  Number of partitions:          6482
    Avg size of partitions:      1
    Max size of partitions:      11 (with key [N50 (after line 115), Function test called from node N527, stack depth 3 [7d4d30ac], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.311s
  Time for loading CPAs:          0.604s
  Time for loading parser:        0.535s
  Time for CFA construction:      1.069s
    Time for parsing file(s):     0.360s
    Time for AST to CFA:          0.291s
    Time for CFA sanity check:    0.067s
    Time for post-processing:     0.222s
      Time for var class.:        0.091s
Time for Analysis:               13.279s
CPU time for analysis:           13.280s
Time for analyzing result:        0.009s
Total time for CPAchecker:       15.594s
Total CPU time for CPAchecker:   15.590s
Time for statistics:              0.145s

Time for Garbage Collector:       0.281s (in 38 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     41MB (    39 MiB) avg;     72MB (    68 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8069MB (  7695 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
