scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product38_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vbp_qg4q/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 278: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 333: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 661: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 812: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 861: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 893: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 907: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            18776 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  18388 (98%)
  Because of loop head:            258 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         130 (1%)
  Times precision was empty:       2508 (13%)
  Times precision was {false}:     241 (1%)
  Times result was cached:         13613 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2414 (13%)
  Times result was 'false':        2787 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         7912
  BDD entailment checks:           5152
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          15
Number of abstraction locations:          53
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         64133
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 24.16
Number of irrelevant predicates:          21241 (33%)
Number of preds handled by boolean abs:   7534 (12%)
  Total number of models for allsat:      2522
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.04

Time for post operator:                  1.034s
  Time for path formula creation:        0.956s
Time for strengthen operator:            0.113s
Time for prec operator:                  6.979s
  Time for abstraction:                  6.616s (Max:     0.019s, Count: 18776)
    Boolean abstraction:                 1.745s
    Solving time:                        1.317s (Max:     0.013s)
    Model enumeration time:              0.116s
    Time for BDD construction:           0.152s (Max:     0.011s)
Time for merge operator:                 0.041s
Time for coverage check:                 0.038s
  Time for BDD entailment checks:        0.035s
Total time for SMT solver (w/o itp):     1.433s

Number of path formula cache hits:   60082 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.868s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               923
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5569 (count: 24646, min: 0, max: 517, avg: 0.23)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.314s
Automaton transfers with branching:                0
Automaton transfer successors:                        70718 (count: 70718, min: 1, max: 1, avg: 1.00) [1 x 70718]

CPA algorithm statistics
------------------------
Number of iterations:            54074
Max size of waitlist:            57
Average size of waitlist:        14
Number of computed successors:   60401
Max successors for one state:    2
Number of times merged:          1380
Number of times stopped:         2516
Number of times breaked:         130

Total time for CPA algorithm:        10.970s (Max:     1.162s)
  Time for choose from waitlist:      0.101s
  Time for precision adjustment:      7.572s
  Time for transfer relation:         2.466s
  Time for merge operator:            0.137s
  Time for stop operator:             0.163s
  Time for adding to reached set:     0.187s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   130
Avg. length of target path (in blocks):                5184 (count: 130, min: 21, max: 76, avg: 39.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.700s
  Counterexample analysis:                             1.175s (Max:     0.022s, Calls: 130)
    Refinement sat check:                              0.447s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.076s
  Precision update:                                    0.127s
  ARG update:                                          0.239s

Length of refined path (in blocks):                    4468 (count: 130, min: 13, max: 71, avg: 34.37)
Number of affected states:                             2215 (count: 130, min: 2, max: 66, avg: 17.04)
Length (states) of path with itp 'true':               2123 (count: 130, min: 0, max: 51, avg: 16.33)
Length (states) of path with itp non-trivial itp:      2215 (count: 130, min: 2, max: 66, avg: 17.04)
Length (states) of path with itp 'false':               130 (count: 130, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         167 (count: 130, min: 0, max: 4, avg: 1.28)
Equal non-trivial interpolants along paths:            1918 (count: 130, min: 1, max: 64, avg: 14.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                130
Number of successful refinements:     130
Number of failed refinements:         0
Max. size of reached set before ref.: 7281
Max. size of reached set after ref.:  4176
Avg. size of reached set before ref.: 981.30
Avg. size of reached set after ref.:  616.15

Total time for CEGAR algorithm:      12.993s
Time for refinements:                 1.913s
Average time for refinement:          0.014s
Max time for refinement:              0.052s

Code Coverage
-----------------------------
  Function coverage:      0.694
  Visited lines:          143
  Total lines:            432
  Line coverage:          0.331
  Visited conditions:     42
  Total conditions:       72
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     616
Number of CFA edges:             665
Number of relevant variables:    115
Number of functions:             36
Number of loops:                 5
Size of reached set:             7630
  Number of reached locations:   191 (31%)
    Avg states per location:     39
    Max states per location:     234 (at node N609)
  Number of reached functions:   25 (69%)
  Number of partitions:          7363
    Avg size of partitions:      1
    Max size of partitions:      11 (with key [N50 (after line 115), Function test called from node N527, stack depth 3 [3275f900], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.148s
  Time for loading CPAs:          0.571s
  Time for loading parser:        0.538s
  Time for CFA construction:      0.950s
    Time for parsing file(s):     0.315s
    Time for AST to CFA:          0.223s
    Time for CFA sanity check:    0.088s
    Time for post-processing:     0.199s
      Time for var class.:        0.077s
Time for Analysis:               12.994s
CPU time for analysis:           12.990s
Time for analyzing result:        0.006s
Total time for CPAchecker:       15.145s
Total CPU time for CPAchecker:   15.150s
Time for statistics:              0.178s

Time for Garbage Collector:       0.271s (in 36 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     41MB (    39 MiB) avg;     73MB (    70 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8069MB (  7695 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
