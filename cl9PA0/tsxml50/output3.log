scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product30_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8lj36xza/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 417: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 543: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 596: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 628: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 637: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 840: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 849: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4197 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4093 (98%)
  Because of loop head:            76 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         28 (1%)
  Times precision was empty:       1439 (34%)
  Times precision was {false}:     116 (3%)
  Times result was cached:         2206 (53%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      436 (10%)
  Times result was 'false':        407 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         1311
  BDD entailment checks:           501
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          41
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         6368
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 11.54
Number of irrelevant predicates:          2387 (37%)
Number of preds handled by boolean abs:   917 (14%)
  Total number of models for allsat:      474
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  0.689s
  Time for path formula creation:        0.671s
Time for strengthen operator:            0.051s
Time for prec operator:                  1.739s
  Time for abstraction:                  1.587s (Max:     0.034s, Count: 4197)
    Boolean abstraction:                 0.392s
    Solving time:                        0.224s (Max:     0.012s)
    Model enumeration time:              0.054s
    Time for BDD construction:           0.099s (Max:     0.010s)
Time for merge operator:                 0.039s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     0.278s

Number of path formula cache hits:   11123 (60%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.628s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               280
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         844 (count: 5270, min: 0, max: 349, avg: 0.16)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.166s
Automaton transfers with branching:                0
Automaton transfer successors:                        16290 (count: 16290, min: 1, max: 1, avg: 1.00) [1 x 16290]

CPA algorithm statistics
------------------------
Number of iterations:            12266
Max size of waitlist:            75
Average size of waitlist:        20
Number of computed successors:   14203
Max successors for one state:    2
Number of times merged:          405
Number of times stopped:         675
Number of times breaked:         28

Total time for CPA algorithm:         4.002s (Max:     0.453s)
  Time for choose from waitlist:      0.039s
  Time for precision adjustment:      1.996s
  Time for transfer relation:         1.469s
  Time for merge operator:            0.118s
  Time for stop operator:             0.082s
  Time for adding to reached set:     0.088s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   28
Avg. length of target path (in blocks):                1043 (count: 28, min: 21, max: 68, avg: 37.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.412s
  Counterexample analysis:                             0.243s (Max:     0.018s, Calls: 28)
    Refinement sat check:                              0.118s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.025s
  ARG update:                                          0.091s

Length of refined path (in blocks):                     695 (count: 28, min: 15, max: 49, avg: 24.82)
Number of affected states:                              506 (count: 28, min: 2, max: 48, avg: 18.07)
Length (states) of path with itp 'true':                161 (count: 28, min: 0, max: 25, avg: 5.75)
Length (states) of path with itp non-trivial itp:       506 (count: 28, min: 2, max: 48, avg: 18.07)
Length (states) of path with itp 'false':                28 (count: 28, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 28, min: 0, max: 1, avg: 0.07)
Equal non-trivial interpolants along paths:             476 (count: 28, min: 1, max: 46, avg: 17.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 1250
Max. size of reached set after ref.:  274
Avg. size of reached set before ref.: 495.29
Avg. size of reached set after ref.:  62.54

Total time for CEGAR algorithm:       4.523s
Time for refinements:                 0.507s
Average time for refinement:          0.018s
Max time for refinement:              0.050s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          111
  Total lines:            439
  Line coverage:          0.253
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     632
Number of CFA edges:             681
Number of relevant variables:    114
Number of functions:             38
Number of loops:                 5
Size of reached set:             1005
  Number of reached locations:   148 (23%)
    Avg states per location:     6
    Max states per location:     31 (at node N620)
  Number of reached functions:   19 (50%)
  Number of partitions:          996
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N457 (before lines 652-699), Function test called from node N371, stack depth 3 [571db8b4], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.223s
  Time for loading CPAs:          0.567s
  Time for loading parser:        0.484s
  Time for CFA construction:      1.049s
    Time for parsing file(s):     0.335s
    Time for AST to CFA:          0.254s
    Time for CFA sanity check:    0.093s
    Time for post-processing:     0.245s
      Time for var class.:        0.135s
Time for Analysis:                4.523s
CPU time for analysis:            4.530s
Time for analyzing result:        0.009s
Total time for CPAchecker:        6.748s
Total CPU time for CPAchecker:    6.750s
Time for statistics:              0.074s

Time for Garbage Collector:       0.126s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     36MB (    35 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     29MB (    28 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8053MB (  7680 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
