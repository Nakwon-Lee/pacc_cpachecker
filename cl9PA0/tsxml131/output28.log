scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product46_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_m9mb2oi1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 257: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 312: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 454: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 538: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 570: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 584: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 950: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 741: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            9131 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8893 (97%)
  Because of loop head:            190 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         48 (1%)
  Times precision was empty:       637 (7%)
  Times precision was {false}:     128 (1%)
  Times result was cached:         7045 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1321 (14%)
  Times result was 'false':        1286 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         3701
  BDD entailment checks:           2583
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          9
Number of abstraction locations:          54
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         23428
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 16.17
Number of irrelevant predicates:          6945 (30%)
Number of preds handled by boolean abs:   3213 (14%)
  Total number of models for allsat:      1235
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.93

Time for post operator:                  0.837s
  Time for path formula creation:        0.785s
Time for strengthen operator:            0.081s
Time for prec operator:                  3.813s
  Time for abstraction:                  3.612s (Max:     0.024s, Count: 9131)
    Boolean abstraction:                 0.884s
    Solving time:                        0.664s (Max:     0.013s)
    Model enumeration time:              0.077s
    Time for BDD construction:           0.099s (Max:     0.010s)
Time for merge operator:                 0.039s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     0.741s

Number of path formula cache hits:   27557 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.718s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               329
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2646 (count: 12175, min: 0, max: 419, avg: 0.22)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.165s
Automaton transfers with branching:                0
Automaton transfer successors:                        33065 (count: 33065, min: 1, max: 1, avg: 1.00) [1 x 33065]

CPA algorithm statistics
------------------------
Number of iterations:            25843
Max size of waitlist:            18
Average size of waitlist:        6
Number of computed successors:   28656
Max successors for one state:    2
Number of times merged:          559
Number of times stopped:         1296
Number of times breaked:         48

Total time for CPA algorithm:         6.532s (Max:     0.781s)
  Time for choose from waitlist:      0.065s
  Time for precision adjustment:      4.142s
  Time for transfer relation:         1.697s
  Time for merge operator:            0.097s
  Time for stop operator:             0.139s
  Time for adding to reached set:     0.106s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   48
Avg. length of target path (in blocks):                2172 (count: 48, min: 19, max: 79, avg: 45.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.709s
  Counterexample analysis:                             0.486s (Max:     0.023s, Calls: 48)
    Refinement sat check:                              0.199s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.057s
  Precision update:                                    0.031s
  ARG update:                                          0.101s

Length of refined path (in blocks):                    1852 (count: 48, min: 13, max: 78, avg: 38.58)
Number of affected states:                              860 (count: 48, min: 2, max: 62, avg: 17.92)
Length (states) of path with itp 'true':                944 (count: 48, min: 0, max: 70, avg: 19.67)
Length (states) of path with itp non-trivial itp:       860 (count: 48, min: 2, max: 62, avg: 17.92)
Length (states) of path with itp 'false':                48 (count: 48, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          25 (count: 48, min: 0, max: 3, avg: 0.52)
Equal non-trivial interpolants along paths:             787 (count: 48, min: 1, max: 59, avg: 16.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                48
Number of successful refinements:     48
Number of failed refinements:         0
Max. size of reached set before ref.: 3906
Max. size of reached set after ref.:  2500
Avg. size of reached set before ref.: 1225.65
Avg. size of reached set after ref.:  796.98

Total time for CEGAR algorithm:       7.432s
Time for refinements:                 0.854s
Average time for refinement:          0.017s
Max time for refinement:              0.035s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          142
  Total lines:            434
  Line coverage:          0.327
  Visited conditions:     42
  Total conditions:       72
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     622
Number of CFA edges:             671
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             5499
  Number of reached locations:   193 (31%)
    Avg states per location:     28
    Max states per location:     147 (at node N296)
  Number of reached functions:   25 (68%)
  Number of partitions:          5295
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N31 (after line 87), Function test called from node N207, stack depth 3 [50b010d4], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.230s
  Time for loading CPAs:          0.548s
  Time for loading parser:        0.517s
  Time for CFA construction:      1.064s
    Time for parsing file(s):     0.379s
    Time for AST to CFA:          0.240s
    Time for CFA sanity check:    0.083s
    Time for post-processing:     0.245s
      Time for var class.:        0.115s
Time for Analysis:                7.432s
CPU time for analysis:            7.420s
Time for analyzing result:        0.008s
Total time for CPAchecker:        9.665s
Total CPU time for CPAchecker:    9.650s
Time for statistics:              0.132s

Time for Garbage Collector:       0.151s (in 18 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     38MB (    37 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     31MB (    30 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8062MB (  7688 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
