scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product46_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_v5j88vwo/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 257: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 312: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 454: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 538: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 570: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 584: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 950: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 741: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            12364 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12179 (99%)
  Because of loop head:            141 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         44 (0%)
  Times precision was empty:       697 (6%)
  Times precision was {false}:     140 (1%)
  Times result was cached:         9795 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1732 (14%)
  Times result was 'false':        1504 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         4740
  BDD entailment checks:           3006
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          10
Number of abstraction locations:          54
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         39913
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 21.32
Number of irrelevant predicates:          12182 (31%)
Number of preds handled by boolean abs:   4702 (12%)
  Total number of models for allsat:      1719
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.99

Time for post operator:                  1.173s
  Time for path formula creation:        1.134s
Time for strengthen operator:            0.059s
Time for prec operator:                  5.201s
  Time for abstraction:                  4.922s (Max:     0.019s, Count: 12364)
    Boolean abstraction:                 1.282s
    Solving time:                        0.934s (Max:     0.017s)
    Model enumeration time:              0.156s
    Time for BDD construction:           0.106s (Max:     0.008s)
Time for merge operator:                 0.086s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     1.090s

Number of path formula cache hits:   34439 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.053s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               429
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3751 (count: 15468, min: 0, max: 491, avg: 0.24)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.217s
Automaton transfers with branching:                0
Automaton transfer successors:                        45259 (count: 45259, min: 1, max: 1, avg: 1.00) [1 x 45259]

CPA algorithm statistics
------------------------
Number of iterations:            35528
Max size of waitlist:            19
Average size of waitlist:        7
Number of computed successors:   39081
Max successors for one state:    2
Number of times merged:          867
Number of times stopped:         1802
Number of times breaked:         44

Total time for CPA algorithm:         8.725s (Max:     0.777s)
  Time for choose from waitlist:      0.069s
  Time for precision adjustment:      5.668s
  Time for transfer relation:         2.186s
  Time for merge operator:            0.171s
  Time for stop operator:             0.155s
  Time for adding to reached set:     0.097s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   44
Avg. length of target path (in blocks):                1923 (count: 44, min: 20, max: 86, avg: 43.70)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.724s
  Counterexample analysis:                             0.450s (Max:     0.019s, Calls: 44)
    Refinement sat check:                              0.204s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.045s
  Precision update:                                    0.079s
  ARG update:                                          0.113s

Length of refined path (in blocks):                    1591 (count: 44, min: 14, max: 61, avg: 36.16)
Number of affected states:                             1047 (count: 44, min: 3, max: 60, avg: 23.80)
Length (states) of path with itp 'true':                500 (count: 44, min: 0, max: 49, avg: 11.36)
Length (states) of path with itp non-trivial itp:      1047 (count: 44, min: 3, max: 60, avg: 23.80)
Length (states) of path with itp 'false':                44 (count: 44, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          21 (count: 44, min: 0, max: 2, avg: 0.48)
Equal non-trivial interpolants along paths:             982 (count: 44, min: 2, max: 58, avg: 22.32)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                44
Number of successful refinements:     44
Number of failed refinements:         0
Max. size of reached set before ref.: 4754
Max. size of reached set after ref.:  2964
Avg. size of reached set before ref.: 1283.32
Avg. size of reached set after ref.:  537.61

Total time for CEGAR algorithm:       9.603s
Time for refinements:                 0.845s
Average time for refinement:          0.019s
Max time for refinement:              0.038s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          142
  Total lines:            434
  Line coverage:          0.327
  Visited conditions:     42
  Total conditions:       72
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     622
Number of CFA edges:             671
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             2965
  Number of reached locations:   193 (31%)
    Avg states per location:     15
    Max states per location:     75 (at node N296)
  Number of reached functions:   25 (68%)
  Number of partitions:          2876
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N9 (before lines 55-102), Function test called from node N207, stack depth 3 [2cfd91b9], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.144s
  Time for loading CPAs:          0.551s
  Time for loading parser:        0.492s
  Time for CFA construction:      0.956s
    Time for parsing file(s):     0.369s
    Time for AST to CFA:          0.218s
    Time for CFA sanity check:    0.060s
    Time for post-processing:     0.207s
      Time for var class.:        0.086s
Time for Analysis:                9.603s
CPU time for analysis:            9.600s
Time for analyzing result:        0.003s
Total time for CPAchecker:       11.751s
Total CPU time for CPAchecker:   11.750s
Time for statistics:              0.081s

Time for Garbage Collector:       0.195s (in 24 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    62 MiB) max;     41MB (    39 MiB) avg;     68MB (    65 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     32MB (    30 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8067MB (  7693 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
