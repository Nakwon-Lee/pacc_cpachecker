scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product46_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lwd4td6i/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 257: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 312: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 454: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 538: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 570: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 584: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 950: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 741: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            8745 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8524 (97%)
  Because of loop head:            177 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         44 (1%)
  Times precision was empty:       623 (7%)
  Times precision was {false}:     143 (2%)
  Times result was cached:         7145 (82%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      834 (10%)
  Times result was 'false':        1122 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         3066
  BDD entailment checks:           1932
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          9
Number of abstraction locations:          54
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         22354
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 22.88
Number of irrelevant predicates:          7563 (34%)
Number of preds handled by boolean abs:   1855 (8%)
  Total number of models for allsat:      864
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  0.712s
  Time for path formula creation:        0.678s
Time for strengthen operator:            0.048s
Time for prec operator:                  3.149s
  Time for abstraction:                  2.954s (Max:     0.023s, Count: 8745)
    Boolean abstraction:                 0.630s
    Solving time:                        0.442s (Max:     0.013s)
    Model enumeration time:              0.040s
    Time for BDD construction:           0.056s (Max:     0.009s)
Time for merge operator:                 0.027s
Time for coverage check:                 0.023s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     0.482s

Number of path formula cache hits:   29459 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.609s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               312
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1778 (count: 8704, min: 0, max: 408, avg: 0.20)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.280s
Automaton transfers with branching:                0
Automaton transfer successors:                        31828 (count: 31828, min: 1, max: 1, avg: 1.00) [1 x 31828]

CPA algorithm statistics
------------------------
Number of iterations:            25001
Max size of waitlist:            15
Average size of waitlist:        5
Number of computed successors:   27645
Max successors for one state:    2
Number of times merged:          567
Number of times stopped:         1264
Number of times breaked:         44

Total time for CPA algorithm:         5.881s (Max:     0.573s)
  Time for choose from waitlist:      0.032s
  Time for precision adjustment:      3.473s
  Time for transfer relation:         1.705s
  Time for merge operator:            0.095s
  Time for stop operator:             0.127s
  Time for adding to reached set:     0.151s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   44
Avg. length of target path (in blocks):                1900 (count: 44, min: 19, max: 76, avg: 43.18)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.619s
  Counterexample analysis:                             0.401s (Max:     0.019s, Calls: 44)
    Refinement sat check:                              0.165s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.025s
  Precision update:                                    0.049s
  ARG update:                                          0.108s

Length of refined path (in blocks):                    1436 (count: 44, min: 13, max: 63, avg: 32.64)
Number of affected states:                              911 (count: 44, min: 2, max: 62, avg: 20.70)
Length (states) of path with itp 'true':                481 (count: 44, min: 0, max: 49, avg: 10.93)
Length (states) of path with itp non-trivial itp:       911 (count: 44, min: 2, max: 62, avg: 20.70)
Length (states) of path with itp 'false':                44 (count: 44, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          22 (count: 44, min: 0, max: 2, avg: 0.50)
Equal non-trivial interpolants along paths:             845 (count: 44, min: 1, max: 59, avg: 19.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                44
Number of successful refinements:     44
Number of failed refinements:         0
Max. size of reached set before ref.: 3245
Max. size of reached set after ref.:  3137
Avg. size of reached set before ref.: 1139.64
Avg. size of reached set after ref.:  654.66

Total time for CEGAR algorithm:       6.639s
Time for refinements:                 0.735s
Average time for refinement:          0.016s
Max time for refinement:              0.033s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          142
  Total lines:            434
  Line coverage:          0.327
  Visited conditions:     42
  Total conditions:       72
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     622
Number of CFA edges:             671
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             3921
  Number of reached locations:   193 (31%)
    Avg states per location:     20
    Max states per location:     104 (at node N296)
  Number of reached functions:   25 (68%)
  Number of partitions:          3781
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N9 (before lines 55-102), Function test called from node N207, stack depth 3 [76d9fe26], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.023s
  Time for loading CPAs:          0.520s
  Time for loading parser:        0.424s
  Time for CFA construction:      0.941s
    Time for parsing file(s):     0.301s
    Time for AST to CFA:          0.251s
    Time for CFA sanity check:    0.076s
    Time for post-processing:     0.202s
      Time for var class.:        0.086s
Time for Analysis:                6.639s
CPU time for analysis:            6.630s
Time for analyzing result:        0.015s
Total time for CPAchecker:        8.665s
Total CPU time for CPAchecker:    8.650s
Time for statistics:              0.114s

Time for Garbage Collector:       0.146s (in 16 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     39MB (    38 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     31MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8064MB (  7690 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
