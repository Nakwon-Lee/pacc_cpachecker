scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product46_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_c9mgvlv2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 257: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 312: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 454: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 538: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 570: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 584: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 950: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 741: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            15700 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15435 (98%)
  Because of loop head:            207 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         58 (0%)
  Times precision was empty:       634 (4%)
  Times precision was {false}:     188 (1%)
  Times result was cached:         12496 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2382 (15%)
  Times result was 'false':        1877 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         6929
  BDD entailment checks:           4673
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          10
Number of abstraction locations:          54
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         49109
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 19.11
Number of irrelevant predicates:          14596 (30%)
Number of preds handled by boolean abs:   6383 (13%)
  Total number of models for allsat:      2335
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.98

Time for post operator:                  1.042s
  Time for path formula creation:        1.006s
Time for strengthen operator:            0.090s
Time for prec operator:                  6.327s
  Time for abstraction:                  6.009s (Max:     0.025s, Count: 15700)
    Boolean abstraction:                 1.409s
    Solving time:                        1.007s (Max:     0.012s)
    Model enumeration time:              0.108s
    Time for BDD construction:           0.148s (Max:     0.011s)
Time for merge operator:                 0.052s
Time for coverage check:                 0.014s
  Time for BDD entailment checks:        0.012s
Total time for SMT solver (w/o itp):     1.115s

Number of path formula cache hits:   40026 (60%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.895s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               477
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5196 (count: 21182, min: 0, max: 362, avg: 0.25)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.213s
Automaton transfers with branching:                0
Automaton transfer successors:                        57737 (count: 57737, min: 1, max: 1, avg: 1.00) [1 x 57737]

CPA algorithm statistics
------------------------
Number of iterations:            45381
Max size of waitlist:            19
Average size of waitlist:        7
Number of computed successors:   50112
Max successors for one state:    2
Number of times merged:          1128
Number of times stopped:         2554
Number of times breaked:         58

Total time for CPA algorithm:         9.836s (Max:     0.597s)
  Time for choose from waitlist:      0.050s
  Time for precision adjustment:      6.784s
  Time for transfer relation:         2.154s
  Time for merge operator:            0.141s
  Time for stop operator:             0.136s
  Time for adding to reached set:     0.168s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   58
Avg. length of target path (in blocks):                3441 (count: 58, min: 21, max: 129, avg: 59.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.976s
  Counterexample analysis:                             0.632s (Max:     0.037s, Calls: 58)
    Refinement sat check:                              0.257s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.049s
  Precision update:                                    0.063s
  ARG update:                                          0.182s

Length of refined path (in blocks):                    2376 (count: 58, min: 14, max: 63, avg: 40.97)
Number of affected states:                             1084 (count: 58, min: 3, max: 62, avg: 18.69)
Length (states) of path with itp 'true':               1234 (count: 58, min: 0, max: 49, avg: 21.28)
Length (states) of path with itp non-trivial itp:      1084 (count: 58, min: 3, max: 62, avg: 18.69)
Length (states) of path with itp 'false':                58 (count: 58, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          25 (count: 58, min: 0, max: 3, avg: 0.43)
Equal non-trivial interpolants along paths:            1001 (count: 58, min: 2, max: 59, avg: 17.26)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                58
Number of successful refinements:     58
Number of failed refinements:         0
Max. size of reached set before ref.: 5156
Max. size of reached set after ref.:  3375
Avg. size of reached set before ref.: 2049.02
Avg. size of reached set after ref.:  1321.91

Total time for CEGAR algorithm:      11.111s
Time for refinements:                 1.210s
Average time for refinement:          0.020s
Max time for refinement:              0.075s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          142
  Total lines:            434
  Line coverage:          0.327
  Visited conditions:     42
  Total conditions:       72
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     622
Number of CFA edges:             671
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             3510
  Number of reached locations:   193 (31%)
    Avg states per location:     18
    Max states per location:     82 (at node N296)
  Number of reached functions:   25 (68%)
  Number of partitions:          3432
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N9 (before lines 55-102), Function test called from node N207, stack depth 3 [77a14911], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.254s
  Time for loading CPAs:          0.604s
  Time for loading parser:        0.522s
  Time for CFA construction:      1.024s
    Time for parsing file(s):     0.389s
    Time for AST to CFA:          0.249s
    Time for CFA sanity check:    0.064s
    Time for post-processing:     0.182s
      Time for var class.:        0.065s
Time for Analysis:               11.112s
CPU time for analysis:           11.110s
Time for analyzing result:        0.003s
Total time for CPAchecker:       13.369s
Total CPU time for CPAchecker:   13.360s
Time for statistics:              0.106s

Time for Garbage Collector:       0.288s (in 30 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     42MB (    40 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8068MB (  7695 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
