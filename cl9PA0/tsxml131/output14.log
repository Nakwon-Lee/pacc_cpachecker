scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product46_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yymd47eb/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 257: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 312: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 454: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 538: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 570: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 584: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 950: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 741: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            21132 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20805 (98%)
  Because of loop head:            239 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         88 (0%)
  Times precision was empty:       1096 (5%)
  Times precision was {false}:     194 (1%)
  Times result was cached:         17536 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2306 (11%)
  Times result was 'false':        3217 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         10792
  BDD entailment checks:           7364
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          10
Number of abstraction locations:          51
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         75344
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 30.14
Number of irrelevant predicates:          21075 (28%)
Number of preds handled by boolean abs:   6519 (9%)
  Total number of models for allsat:      2278
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.99

Time for post operator:                  1.422s
  Time for path formula creation:        1.349s
Time for strengthen operator:            0.131s
Time for prec operator:                  7.914s
  Time for abstraction:                  7.534s (Max:     0.023s, Count: 21132)
    Boolean abstraction:                 1.789s
    Solving time:                        1.219s (Max:     0.013s)
    Model enumeration time:              0.178s
    Time for BDD construction:           0.158s (Max:     0.012s)
Time for merge operator:                 0.064s
Time for coverage check:                 0.057s
  Time for BDD entailment checks:        0.053s
Total time for SMT solver (w/o itp):     1.397s

Number of path formula cache hits:   70534 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.220s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               457
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4992 (count: 24243, min: 0, max: 488, avg: 0.21)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.260s
Automaton transfers with branching:                0
Automaton transfer successors:                        78506 (count: 78506, min: 1, max: 1, avg: 1.00) [1 x 78506]

CPA algorithm statistics
------------------------
Number of iterations:            60435
Max size of waitlist:            57
Average size of waitlist:        21
Number of computed successors:   68467
Max successors for one state:    2
Number of times merged:          1714
Number of times stopped:         3508
Number of times breaked:         88

Total time for CPA algorithm:        12.538s (Max:     0.717s)
  Time for choose from waitlist:      0.155s
  Time for precision adjustment:      8.422s
  Time for transfer relation:         2.848s
  Time for merge operator:            0.154s
  Time for stop operator:             0.203s
  Time for adding to reached set:     0.194s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   88
Avg. length of target path (in blocks):                5572 (count: 88, min: 23, max: 90, avg: 63.32)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.342s
  Counterexample analysis:                             0.860s (Max:     0.025s, Calls: 88)
    Refinement sat check:                              0.437s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.043s
  Precision update:                                    0.106s
  ARG update:                                          0.206s

Length of refined path (in blocks):                    3957 (count: 88, min: 14, max: 65, avg: 44.97)
Number of affected states:                             1828 (count: 88, min: 2, max: 52, avg: 20.77)
Length (states) of path with itp 'true':               2041 (count: 88, min: 0, max: 47, avg: 23.19)
Length (states) of path with itp non-trivial itp:      1828 (count: 88, min: 2, max: 52, avg: 20.77)
Length (states) of path with itp 'false':                88 (count: 88, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          10 (count: 88, min: 0, max: 3, avg: 0.11)
Equal non-trivial interpolants along paths:            1730 (count: 88, min: 1, max: 50, avg: 19.66)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                88
Number of successful refinements:     88
Number of failed refinements:         0
Max. size of reached set before ref.: 2743
Max. size of reached set after ref.:  2593
Avg. size of reached set before ref.: 1669.42
Avg. size of reached set after ref.:  1003.52

Total time for CEGAR algorithm:      14.233s
Time for refinements:                 1.606s
Average time for refinement:          0.018s
Max time for refinement:              0.048s

Code Coverage
-----------------------------
  Function coverage:      0.649
  Visited lines:          126
  Total lines:            434
  Line coverage:          0.290
  Visited conditions:     40
  Total conditions:       72
  Condition coverage:     0.556

CPAchecker general statistics
-----------------------------
Number of program locations:     622
Number of CFA edges:             671
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             3144
  Number of reached locations:   172 (28%)
    Avg states per location:     18
    Max states per location:     71 (at node N256)
  Number of reached functions:   24 (65%)
  Number of partitions:          3039
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N9 (before lines 55-102), Function test called from node N207, stack depth 3 [2a7554df], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.234s
  Time for loading CPAs:          0.566s
  Time for loading parser:        0.539s
  Time for CFA construction:      0.989s
    Time for parsing file(s):     0.368s
    Time for AST to CFA:          0.239s
    Time for CFA sanity check:    0.065s
    Time for post-processing:     0.200s
      Time for var class.:        0.077s
Time for Analysis:               14.234s
CPU time for analysis:           14.240s
Time for analyzing result:        0.002s
Total time for CPAchecker:       16.471s
Total CPU time for CPAchecker:   16.470s
Time for statistics:              0.106s

Time for Garbage Collector:       0.333s (in 40 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     43MB (    41 MiB) avg;     69MB (    65 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8006MB (  7635 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
