scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product46_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pfwqrpnh/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 257: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 312: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 454: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 538: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 570: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 584: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 950: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 741: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7085 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6917 (98%)
  Because of loop head:            130 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         38 (1%)
  Times precision was empty:       561 (8%)
  Times precision was {false}:     104 (1%)
  Times result was cached:         5703 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      717 (10%)
  Times result was 'false':        1046 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         2249
  BDD entailment checks:           1377
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          9
Number of abstraction locations:          54
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         19410
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 23.64
Number of irrelevant predicates:          4440 (23%)
Number of preds handled by boolean abs:   1629 (8%)
  Total number of models for allsat:      717
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  0.648s
  Time for path formula creation:        0.608s
Time for strengthen operator:            0.052s
Time for prec operator:                  2.680s
  Time for abstraction:                  2.489s (Max:     0.017s, Count: 7085)
    Boolean abstraction:                 0.541s
    Solving time:                        0.379s (Max:     0.013s)
    Model enumeration time:              0.049s
    Time for BDD construction:           0.046s (Max:     0.005s)
Time for merge operator:                 0.024s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     0.428s

Number of path formula cache hits:   23874 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.562s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               307
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1528 (count: 7318, min: 0, max: 314, avg: 0.21)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.156s
Automaton transfers with branching:                0
Automaton transfer successors:                        25618 (count: 25618, min: 1, max: 1, avg: 1.00) [1 x 25618]

CPA algorithm statistics
------------------------
Number of iterations:            20126
Max size of waitlist:            14
Average size of waitlist:        6
Number of computed successors:   22246
Max successors for one state:    2
Number of times merged:          436
Number of times stopped:         877
Number of times breaked:         38

Total time for CPA algorithm:         5.011s (Max:     0.469s)
  Time for choose from waitlist:      0.039s
  Time for precision adjustment:      3.011s
  Time for transfer relation:         1.460s
  Time for merge operator:            0.081s
  Time for stop operator:             0.113s
  Time for adding to reached set:     0.102s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   38
Avg. length of target path (in blocks):                1608 (count: 38, min: 19, max: 76, avg: 42.32)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.562s
  Counterexample analysis:                             0.369s (Max:     0.019s, Calls: 38)
    Refinement sat check:                              0.159s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.045s
  Precision update:                                    0.037s
  ARG update:                                          0.087s

Length of refined path (in blocks):                    1322 (count: 38, min: 13, max: 60, avg: 34.79)
Number of affected states:                              879 (count: 38, min: 4, max: 58, avg: 23.13)
Length (states) of path with itp 'true':                405 (count: 38, min: 0, max: 49, avg: 10.66)
Length (states) of path with itp non-trivial itp:       879 (count: 38, min: 4, max: 58, avg: 23.13)
Length (states) of path with itp 'false':                38 (count: 38, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          22 (count: 38, min: 0, max: 2, avg: 0.58)
Equal non-trivial interpolants along paths:             819 (count: 38, min: 3, max: 55, avg: 21.55)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                38
Number of successful refinements:     38
Number of failed refinements:         0
Max. size of reached set before ref.: 3017
Max. size of reached set after ref.:  2480
Avg. size of reached set before ref.: 950.29
Avg. size of reached set after ref.:  483.26

Total time for CEGAR algorithm:       5.704s
Time for refinements:                 0.683s
Average time for refinement:          0.017s
Max time for refinement:              0.040s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          142
  Total lines:            434
  Line coverage:          0.327
  Visited conditions:     42
  Total conditions:       72
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     622
Number of CFA edges:             671
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             2577
  Number of reached locations:   193 (31%)
    Avg states per location:     13
    Max states per location:     71 (at node N48)
  Number of reached functions:   25 (68%)
  Number of partitions:          2492
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N31 (after line 87), Function test called from node N207, stack depth 3 [6771efaa], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.212s
  Time for loading CPAs:          0.659s
  Time for loading parser:        0.510s
  Time for CFA construction:      0.907s
    Time for parsing file(s):     0.314s
    Time for AST to CFA:          0.213s
    Time for CFA sanity check:    0.070s
    Time for post-processing:     0.191s
      Time for var class.:        0.078s
Time for Analysis:                5.704s
CPU time for analysis:            5.700s
Time for analyzing result:        0.006s
Total time for CPAchecker:        7.920s
Total CPU time for CPAchecker:    7.910s
Time for statistics:              0.097s

Time for Garbage Collector:       0.134s (in 14 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    57 MiB) max;     38MB (    36 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8058MB (  7685 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
