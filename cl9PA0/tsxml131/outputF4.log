scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product46_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6ijdfayg/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 257: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 312: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 454: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 538: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 570: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 584: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 950: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 741: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            13535 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13264 (98%)
  Because of loop head:            221 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         50 (0%)
  Times precision was empty:       1019 (8%)
  Times precision was {false}:     177 (1%)
  Times result was cached:         11025 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1314 (10%)
  Times result was 'false':        1561 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         5568
  BDD entailment checks:           3814
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          9
Number of abstraction locations:          54
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         35894
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 24.07
Number of irrelevant predicates:          11702 (33%)
Number of preds handled by boolean abs:   3066 (9%)
  Total number of models for allsat:      1359
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  0.937s
  Time for path formula creation:        0.875s
Time for strengthen operator:            0.130s
Time for prec operator:                  4.164s
  Time for abstraction:                  3.858s (Max:     0.019s, Count: 13535)
    Boolean abstraction:                 0.844s
    Solving time:                        0.637s (Max:     0.013s)
    Model enumeration time:              0.069s
    Time for BDD construction:           0.074s (Max:     0.012s)
Time for merge operator:                 0.090s
Time for coverage check:                 0.038s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):     0.706s

Number of path formula cache hits:   41570 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.777s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               312
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2600 (count: 14161, min: 0, max: 340, avg: 0.18)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.175s
Automaton transfers with branching:                0
Automaton transfer successors:                        48943 (count: 48943, min: 1, max: 1, avg: 1.00) [1 x 48943]

CPA algorithm statistics
------------------------
Number of iterations:            38512
Max size of waitlist:            20
Average size of waitlist:        7
Number of computed successors:   42381
Max successors for one state:    2
Number of times merged:          877
Number of times stopped:         2086
Number of times breaked:         50

Total time for CPA algorithm:         7.611s (Max:     0.528s)
  Time for choose from waitlist:      0.063s
  Time for precision adjustment:      4.571s
  Time for transfer relation:         2.123s
  Time for merge operator:            0.149s
  Time for stop operator:             0.159s
  Time for adding to reached set:     0.153s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   50
Avg. length of target path (in blocks):                2233 (count: 50, min: 19, max: 76, avg: 44.66)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.689s
  Counterexample analysis:                             0.408s (Max:     0.020s, Calls: 50)
    Refinement sat check:                              0.200s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.069s
  Precision update:                                    0.084s
  ARG update:                                          0.096s

Length of refined path (in blocks):                    1723 (count: 50, min: 13, max: 61, avg: 34.46)
Number of affected states:                              918 (count: 50, min: 2, max: 60, avg: 18.36)
Length (states) of path with itp 'true':                755 (count: 50, min: 0, max: 49, avg: 15.10)
Length (states) of path with itp non-trivial itp:       918 (count: 50, min: 2, max: 60, avg: 18.36)
Length (states) of path with itp 'false':                50 (count: 50, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          24 (count: 50, min: 0, max: 2, avg: 0.48)
Equal non-trivial interpolants along paths:             844 (count: 50, min: 1, max: 57, avg: 16.88)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                50
Number of successful refinements:     50
Number of failed refinements:         0
Max. size of reached set before ref.: 7081
Max. size of reached set after ref.:  6692
Avg. size of reached set before ref.: 2223.78
Avg. size of reached set after ref.:  1573.16

Total time for CEGAR algorithm:       8.589s
Time for refinements:                 0.924s
Average time for refinement:          0.018s
Max time for refinement:              0.038s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          142
  Total lines:            434
  Line coverage:          0.327
  Visited conditions:     42
  Total conditions:       72
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     622
Number of CFA edges:             671
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             6204
  Number of reached locations:   193 (31%)
    Avg states per location:     32
    Max states per location:     167 (at node N296)
  Number of reached functions:   25 (68%)
  Number of partitions:          5969
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N168 (before lines 335-349), Function cleanup called from node N38, stack depth 4 [524d3e47], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          2.052s
  Time for loading CPAs:          0.518s
  Time for loading parser:        0.438s
  Time for CFA construction:      0.992s
    Time for parsing file(s):     0.339s
    Time for AST to CFA:          0.251s
    Time for CFA sanity check:    0.057s
    Time for post-processing:     0.190s
      Time for var class.:        0.078s
Time for Analysis:                8.589s
CPU time for analysis:            8.580s
Time for analyzing result:        0.004s
Total time for CPAchecker:       10.645s
Total CPU time for CPAchecker:   10.630s
Time for statistics:              0.135s

Time for Garbage Collector:       0.219s (in 23 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     39MB (    38 MiB) avg;     71MB (    68 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    30 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8066MB (  7692 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
