scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product46_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5x1vna9a/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 257: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 312: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 454: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 538: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 570: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 584: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 950: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 741: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            14332 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14134 (99%)
  Because of loop head:            159 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         39 (0%)
  Times precision was empty:       2019 (14%)
  Times precision was {false}:     110 (1%)
  Times result was cached:         11271 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      932 (7%)
  Times result was 'false':        1612 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         4920
  BDD entailment checks:           2484
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          10
Number of abstraction locations:          54
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         36079
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 34.62
Number of irrelevant predicates:          10283 (29%)
Number of preds handled by boolean abs:   2192 (6%)
  Total number of models for allsat:      974
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.05

Time for post operator:                  0.887s
  Time for path formula creation:        0.834s
Time for strengthen operator:            0.088s
Time for prec operator:                  4.476s
  Time for abstraction:                  4.122s (Max:     0.028s, Count: 14332)
    Boolean abstraction:                 0.873s
    Solving time:                        0.634s (Max:     0.016s)
    Model enumeration time:              0.088s
    Time for BDD construction:           0.068s (Max:     0.010s)
Time for merge operator:                 0.042s
Time for coverage check:                 0.023s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     0.722s

Number of path formula cache hits:   53793 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.732s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               308
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2038 (count: 11261, min: 0, max: 375, avg: 0.18)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.242s
Automaton transfers with branching:                0
Automaton transfer successors:                        54440 (count: 54440, min: 1, max: 1, avg: 1.00) [1 x 54440]

CPA algorithm statistics
------------------------
Number of iterations:            41839
Max size of waitlist:            57
Average size of waitlist:        14
Number of computed successors:   46387
Max successors for one state:    2
Number of times merged:          1218
Number of times stopped:         2147
Number of times breaked:         39

Total time for CPA algorithm:         7.973s (Max:     0.729s)
  Time for choose from waitlist:      0.113s
  Time for precision adjustment:      4.846s
  Time for transfer relation:         2.083s
  Time for merge operator:            0.108s
  Time for stop operator:             0.196s
  Time for adding to reached set:     0.180s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   39
Avg. length of target path (in blocks):                1553 (count: 39, min: 19, max: 70, avg: 39.82)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.686s
  Counterexample analysis:                             0.392s (Max:     0.020s, Calls: 39)
    Refinement sat check:                              0.165s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.047s
  Precision update:                                    0.053s
  ARG update:                                          0.157s

Length of refined path (in blocks):                    1270 (count: 39, min: 13, max: 61, avg: 32.56)
Number of affected states:                              962 (count: 39, min: 2, max: 60, avg: 24.67)
Length (states) of path with itp 'true':                269 (count: 39, min: 0, max: 47, avg: 6.90)
Length (states) of path with itp non-trivial itp:       962 (count: 39, min: 2, max: 60, avg: 24.67)
Length (states) of path with itp 'false':                39 (count: 39, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          25 (count: 39, min: 0, max: 3, avg: 0.64)
Equal non-trivial interpolants along paths:             898 (count: 39, min: 1, max: 57, avg: 23.03)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                39
Number of successful refinements:     39
Number of failed refinements:         0
Max. size of reached set before ref.: 4025
Max. size of reached set after ref.:  3638
Avg. size of reached set before ref.: 1451.21
Avg. size of reached set after ref.:  464.03

Total time for CEGAR algorithm:       8.866s
Time for refinements:                 0.860s
Average time for refinement:          0.022s
Max time for refinement:              0.045s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          142
  Total lines:            434
  Line coverage:          0.327
  Visited conditions:     42
  Total conditions:       72
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     622
Number of CFA edges:             671
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             4129
  Number of reached locations:   193 (31%)
    Avg states per location:     21
    Max states per location:     98 (at node N296)
  Number of reached functions:   25 (68%)
  Number of partitions:          4027
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N31 (after line 87), Function test called from node N207, stack depth 3 [2e61a2ff], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.401s
  Time for loading CPAs:          0.670s
  Time for loading parser:        0.529s
  Time for CFA construction:      1.053s
    Time for parsing file(s):     0.352s
    Time for AST to CFA:          0.278s
    Time for CFA sanity check:    0.072s
    Time for post-processing:     0.224s
      Time for var class.:        0.094s
Time for Analysis:                8.866s
CPU time for analysis:            8.870s
Time for analyzing result:        0.010s
Total time for CPAchecker:       11.271s
Total CPU time for CPAchecker:   11.260s
Time for statistics:              0.125s

Time for Garbage Collector:       0.222s (in 24 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     39MB (    37 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     31MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     33MB (    32 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8065MB (  7691 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
