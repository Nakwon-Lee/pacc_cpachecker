scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product41_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fyasir30/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 174: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 188: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 291: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 411: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 466: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 897: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 909: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 932: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            39324 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  38565 (98%)
  Because of loop head:            672 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         87 (0%)
  Times precision was empty:       1346 (3%)
  Times precision was {false}:     351 (1%)
  Times result was cached:         32868 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4759 (12%)
  Times result was 'false':        4726 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         30379
  BDD entailment checks:           19811
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          22
Number of abstraction locations:          52
Max number of predicates per location:    11
Avg number of predicates per location:    6
Total predicates per abstraction:         223676
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 43.77
Number of irrelevant predicates:          95611 (43%)
Number of preds handled by boolean abs:   24026 (11%)
  Total number of models for allsat:      7120
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.50

Time for post operator:                  1.582s
  Time for path formula creation:        1.474s
Time for strengthen operator:            0.190s
Time for prec operator:                 13.632s
  Time for abstraction:                 13.091s (Max:     0.023s, Count: 39324)
    Boolean abstraction:                 3.504s
    Solving time:                        2.542s (Max:     0.013s)
    Model enumeration time:              0.406s
    Time for BDD construction:           0.244s (Max:     0.012s)
Time for merge operator:                 0.079s
Time for coverage check:                 0.045s
  Time for BDD entailment checks:        0.042s
Total time for SMT solver (w/o itp):     2.948s

Number of path formula cache hits:   144282 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.164s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               3278
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       14273 (count: 54336, min: 0, max: 646, avg: 0.26)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.287s
Automaton transfers with branching:                0
Automaton transfer successors:                       152871 (count: 152871, min: 1, max: 1, avg: 1.00) [1 x 152871]

CPA algorithm statistics
------------------------
Number of iterations:            117924
Max size of waitlist:            55
Average size of waitlist:        20
Number of computed successors:   132535
Max successors for one state:    2
Number of times merged:          5284
Number of times stopped:         8984
Number of times breaked:         87

Total time for CPA algorithm:        19.043s (Max:     1.001s)
  Time for choose from waitlist:      0.084s
  Time for precision adjustment:     14.447s
  Time for transfer relation:         3.252s
  Time for merge operator:            0.208s
  Time for stop operator:             0.233s
  Time for adding to reached set:     0.209s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   87
Avg. length of target path (in blocks):                6024 (count: 87, min: 25, max: 114, avg: 69.24)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.493s
  Counterexample analysis:                             1.041s (Max:     0.053s, Calls: 87)
    Refinement sat check:                              0.443s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.071s
  Precision update:                                    0.056s
  ARG update:                                          0.279s

Length of refined path (in blocks):                    5081 (count: 87, min: 14, max: 111, avg: 58.40)
Number of affected states:                             2265 (count: 87, min: 1, max: 55, avg: 26.03)
Length (states) of path with itp 'true':               2729 (count: 87, min: 0, max: 82, avg: 31.37)
Length (states) of path with itp non-trivial itp:      2265 (count: 87, min: 1, max: 55, avg: 26.03)
Length (states) of path with itp 'false':                87 (count: 87, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          88 (count: 87, min: 0, max: 3, avg: 1.01)
Equal non-trivial interpolants along paths:            2090 (count: 87, min: 0, max: 51, avg: 24.02)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                87
Number of successful refinements:     87
Number of failed refinements:         0
Max. size of reached set before ref.: 5883
Max. size of reached set after ref.:  4312
Avg. size of reached set before ref.: 3139.02
Avg. size of reached set after ref.:  1806.22

Total time for CEGAR algorithm:      20.937s
Time for refinements:                 1.773s
Average time for refinement:          0.020s
Max time for refinement:              0.066s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          140
  Total lines:            431
  Line coverage:          0.325
  Visited conditions:     40
  Total conditions:       70
  Condition coverage:     0.571

CPAchecker general statistics
-----------------------------
Number of program locations:     617
Number of CFA edges:             663
Number of relevant variables:    115
Number of functions:             37
Number of loops:                 5
Size of reached set:             2872
  Number of reached locations:   188 (30%)
    Avg states per location:     15
    Max states per location:     79 (at node N10)
  Number of reached functions:   25 (68%)
  Number of partitions:          2802
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N284 (after line 502), Function test called from node N138, stack depth 3 [67c784a6], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.114s
  Time for loading CPAs:          0.518s
  Time for loading parser:        0.456s
  Time for CFA construction:      1.002s
    Time for parsing file(s):     0.338s
    Time for AST to CFA:          0.233s
    Time for CFA sanity check:    0.049s
    Time for post-processing:     0.248s
      Time for var class.:        0.116s
Time for Analysis:               20.938s
CPU time for analysis:           20.920s
Time for analyzing result:        0.002s
Total time for CPAchecker:       23.059s
Total CPU time for CPAchecker:   23.040s
Time for statistics:              0.086s

Time for Garbage Collector:       0.664s (in 90 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 81MB (    77 MiB) max;     48MB (    46 MiB) avg;     84MB (    80 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8076MB (  7702 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
