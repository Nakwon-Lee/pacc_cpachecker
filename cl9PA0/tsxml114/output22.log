scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product41_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bvntb3n4/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 174: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 188: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 291: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 411: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 466: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 897: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 909: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 932: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            13191 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12968 (98%)
  Because of loop head:            135 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         88 (1%)
  Times precision was empty:       503 (4%)
  Times precision was {false}:     341 (3%)
  Times result was cached:         8307 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4040 (31%)
  Times result was 'false':        1527 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         11491
  BDD entailment checks:           7163
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          22
Number of abstraction locations:          52
Max number of predicates per location:    13
Avg number of predicates per location:    7
Total predicates per abstraction:         84005
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 19.17
Number of irrelevant predicates:          25202 (30%)
Number of preds handled by boolean abs:   22128 (26%)
  Total number of models for allsat:      6059
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.50

Time for post operator:                  1.086s
  Time for path formula creation:        1.004s
Time for strengthen operator:            0.072s
Time for prec operator:                 10.512s
  Time for abstraction:                 10.239s (Max:     0.017s, Count: 13191)
    Boolean abstraction:                 3.459s
    Solving time:                        2.460s (Max:     0.013s)
    Model enumeration time:              0.397s
    Time for BDD construction:           0.207s (Max:     0.011s)
Time for merge operator:                 0.049s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.022s
Total time for SMT solver (w/o itp):     2.857s

Number of path formula cache hits:   49992 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.871s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               5725
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       16001 (count: 37191, min: 0, max: 991, avg: 0.43)
Time for BDD node cleanup:                             0.020s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.237s
Automaton transfers with branching:                0
Automaton transfer successors:                        53422 (count: 53422, min: 1, max: 1, avg: 1.00) [1 x 53422]

CPA algorithm statistics
------------------------
Number of iterations:            41378
Max size of waitlist:            31
Average size of waitlist:        7
Number of computed successors:   46468
Max successors for one state:    2
Number of times merged:          2164
Number of times stopped:         3079
Number of times breaked:         88

Total time for CPA algorithm:        13.967s (Max:     0.582s)
  Time for choose from waitlist:      0.078s
  Time for precision adjustment:     10.938s
  Time for transfer relation:         2.130s
  Time for merge operator:            0.197s
  Time for stop operator:             0.154s
  Time for adding to reached set:     0.140s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   88
Avg. length of target path (in blocks):                5964 (count: 88, min: 26, max: 124, avg: 67.77)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.371s
  Counterexample analysis:                             0.974s (Max:     0.033s, Calls: 88)
    Refinement sat check:                              0.457s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.057s
  Precision update:                                    0.083s
  ARG update:                                          0.186s

Length of refined path (in blocks):                    4257 (count: 88, min: 14, max: 86, avg: 48.38)
Number of affected states:                             2118 (count: 88, min: 1, max: 71, avg: 24.07)
Length (states) of path with itp 'true':               2051 (count: 88, min: 0, max: 57, avg: 23.31)
Length (states) of path with itp non-trivial itp:      2118 (count: 88, min: 1, max: 71, avg: 24.07)
Length (states) of path with itp 'false':                88 (count: 88, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          44 (count: 88, min: 0, max: 3, avg: 0.50)
Equal non-trivial interpolants along paths:            1986 (count: 88, min: 0, max: 68, avg: 22.57)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                88
Number of successful refinements:     88
Number of failed refinements:         0
Max. size of reached set before ref.: 3431
Max. size of reached set after ref.:  3142
Avg. size of reached set before ref.: 954.69
Avg. size of reached set after ref.:  514.76

Total time for CEGAR algorithm:      15.575s
Time for refinements:                 1.532s
Average time for refinement:          0.017s
Max time for refinement:              0.049s

Code Coverage
-----------------------------
  Function coverage:      0.649
  Visited lines:          124
  Total lines:            431
  Line coverage:          0.288
  Visited conditions:     38
  Total conditions:       70
  Condition coverage:     0.543

CPAchecker general statistics
-----------------------------
Number of program locations:     617
Number of CFA edges:             663
Number of relevant variables:    115
Number of functions:             37
Number of loops:                 5
Size of reached set:             3149
  Number of reached locations:   167 (27%)
    Avg states per location:     18
    Max states per location:     89 (at node N10)
  Number of reached functions:   24 (65%)
  Number of partitions:          3065
    Avg size of partitions:      1
    Max size of partitions:      13 (with key [N284 (after line 502), Function test called from node N138, stack depth 3 [d5d9730], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.202s
  Time for loading CPAs:          0.547s
  Time for loading parser:        0.581s
  Time for CFA construction:      0.960s
    Time for parsing file(s):     0.349s
    Time for AST to CFA:          0.209s
    Time for CFA sanity check:    0.065s
    Time for post-processing:     0.221s
      Time for var class.:        0.097s
Time for Analysis:               15.575s
CPU time for analysis:           15.570s
Time for analyzing result:        0.001s
Total time for CPAchecker:       17.780s
Total CPU time for CPAchecker:   17.770s
Time for statistics:              0.116s

Time for Garbage Collector:       0.277s (in 39 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     42MB (    40 MiB) avg;     68MB (    65 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8071MB (  7697 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
