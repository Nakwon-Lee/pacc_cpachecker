scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product41_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_n27qc2ea/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 174: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 188: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 291: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 411: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 466: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 897: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 909: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 932: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            25293 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  24872 (98%)
  Because of loop head:            344 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         77 (0%)
  Times precision was empty:       482 (2%)
  Times precision was {false}:     390 (2%)
  Times result was cached:         19551 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4870 (19%)
  Times result was 'false':        2922 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         15935
  BDD entailment checks:           8913
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          22
Number of abstraction locations:          52
Max number of predicates per location:    13
Avg number of predicates per location:    6
Total predicates per abstraction:         151842
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 28.87
Number of irrelevant predicates:          61838 (41%)
Number of preds handled by boolean abs:   25667 (17%)
  Total number of models for allsat:      7759
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.59

Time for post operator:                  1.492s
  Time for path formula creation:        1.429s
Time for strengthen operator:            0.173s
Time for prec operator:                 15.129s
  Time for abstraction:                 14.619s (Max:     0.033s, Count: 25293)
    Boolean abstraction:                 4.394s
    Solving time:                        3.164s (Max:     0.019s)
    Model enumeration time:              0.487s
    Time for BDD construction:           0.308s (Max:     0.012s)
Time for merge operator:                 0.100s
Time for coverage check:                 0.049s
  Time for BDD entailment checks:        0.042s
Total time for SMT solver (w/o itp):     3.651s

Number of path formula cache hits:   89629 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.171s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               4054
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       15358 (count: 43474, min: 0, max: 981, avg: 0.35)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.363s
Automaton transfers with branching:                0
Automaton transfer successors:                       100195 (count: 100195, min: 1, max: 1, avg: 1.00) [1 x 100195]

CPA algorithm statistics
------------------------
Number of iterations:            76969
Max size of waitlist:            44
Average size of waitlist:        17
Number of computed successors:   86483
Max successors for one state:    2
Number of times merged:          3511
Number of times stopped:         6130
Number of times breaked:         77

Total time for CPA algorithm:        20.384s (Max:     1.665s)
  Time for choose from waitlist:      0.110s
  Time for precision adjustment:     15.870s
  Time for transfer relation:         3.085s
  Time for merge operator:            0.283s
  Time for stop operator:             0.225s
  Time for adding to reached set:     0.239s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   77
Avg. length of target path (in blocks):                5843 (count: 77, min: 29, max: 137, avg: 75.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.490s
  Counterexample analysis:                             1.005s (Max:     0.038s, Calls: 77)
    Refinement sat check:                              0.457s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.034s
  Precision update:                                    0.107s
  ARG update:                                          0.234s

Length of refined path (in blocks):                    4301 (count: 77, min: 14, max: 118, avg: 55.86)
Number of affected states:                             1692 (count: 77, min: 1, max: 75, avg: 21.97)
Length (states) of path with itp 'true':               2532 (count: 77, min: 0, max: 97, avg: 32.88)
Length (states) of path with itp non-trivial itp:      1692 (count: 77, min: 1, max: 75, avg: 21.97)
Length (states) of path with itp 'false':                77 (count: 77, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          25 (count: 77, min: 0, max: 3, avg: 0.32)
Equal non-trivial interpolants along paths:            1590 (count: 77, min: 0, max: 74, avg: 20.65)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                77
Number of successful refinements:     77
Number of failed refinements:         0
Max. size of reached set before ref.: 4114
Max. size of reached set after ref.:  3728
Avg. size of reached set before ref.: 2335.36
Avg. size of reached set after ref.:  1359.60

Total time for CEGAR algorithm:      22.245s
Time for refinements:                 1.770s
Average time for refinement:          0.022s
Max time for refinement:              0.047s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          140
  Total lines:            431
  Line coverage:          0.325
  Visited conditions:     40
  Total conditions:       70
  Condition coverage:     0.571

CPAchecker general statistics
-----------------------------
Number of program locations:     617
Number of CFA edges:             663
Number of relevant variables:    115
Number of functions:             37
Number of loops:                 5
Size of reached set:             2298
  Number of reached locations:   188 (30%)
    Avg states per location:     12
    Max states per location:     60 (at node N10)
  Number of reached functions:   25 (68%)
  Number of partitions:          2256
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N267 (before lines 480-525), Function test called from node N138, stack depth 3 [18d0c042], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.242s
  Time for loading CPAs:          0.634s
  Time for loading parser:        0.517s
  Time for CFA construction:      0.969s
    Time for parsing file(s):     0.355s
    Time for AST to CFA:          0.222s
    Time for CFA sanity check:    0.073s
    Time for post-processing:     0.201s
      Time for var class.:        0.070s
Time for Analysis:               22.245s
CPU time for analysis:           22.240s
Time for analyzing result:        0.006s
Total time for CPAchecker:       24.490s
Total CPU time for CPAchecker:   24.470s
Time for statistics:              0.099s

Time for Garbage Collector:       0.501s (in 65 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    70 MiB) max;     45MB (    43 MiB) avg;     76MB (    73 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8076MB (  7702 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
