scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xoxq7ifq/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 257: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 266: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 321: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 351: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 374: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 694: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 740: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 876: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 925: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 957: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 966: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 531: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            9345 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  9228 (99%)
  Because of loop head:            90 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         27 (0%)
  Times precision was empty:       2945 (32%)
  Times precision was {false}:     89 (1%)
  Times result was cached:         6001 (64%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      310 (3%)
  Times result was 'false':        557 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         3885
  BDD entailment checks:           1955
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          42
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         12428
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 31.15
Number of irrelevant predicates:          6344 (51%)
Number of preds handled by boolean abs:   546 (4%)
  Total number of models for allsat:      382
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.23

Time for post operator:                  1.023s
  Time for path formula creation:        0.966s
Time for strengthen operator:            0.117s
Time for prec operator:                  2.202s
  Time for abstraction:                  1.941s (Max:     0.020s, Count: 9345)
    Boolean abstraction:                 0.343s
    Solving time:                        0.217s (Max:     0.016s)
    Model enumeration time:              0.036s
    Time for BDD construction:           0.084s (Max:     0.012s)
Time for merge operator:                 0.084s
Time for coverage check:                 0.028s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     0.253s

Number of path formula cache hits:   34195 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.849s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               239
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         706 (count: 7289, min: 0, max: 173, avg: 0.10)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.225s
Automaton transfers with branching:                0
Automaton transfer successors:                        37488 (count: 37488, min: 1, max: 1, avg: 1.00) [1 x 37488]

CPA algorithm statistics
------------------------
Number of iterations:            28677
Max size of waitlist:            104
Average size of waitlist:        39
Number of computed successors:   32899
Max successors for one state:    2
Number of times merged:          965
Number of times stopped:         2038
Number of times breaked:         27

Total time for CPA algorithm:         5.625s (Max:     0.621s)
  Time for choose from waitlist:      0.075s
  Time for precision adjustment:      2.572s
  Time for transfer relation:         2.192s
  Time for merge operator:            0.151s
  Time for stop operator:             0.158s
  Time for adding to reached set:     0.173s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   27
Avg. length of target path (in blocks):                 779 (count: 27, min: 21, max: 38, avg: 28.85)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.446s
  Counterexample analysis:                             0.175s (Max:     0.016s, Calls: 27)
    Refinement sat check:                              0.073s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.087s
  Precision update:                                    0.037s
  ARG update:                                          0.119s

Length of refined path (in blocks):                     585 (count: 27, min: 15, max: 33, avg: 21.67)
Number of affected states:                              434 (count: 27, min: 9, max: 32, avg: 16.07)
Length (states) of path with itp 'true':                124 (count: 27, min: 0, max: 19, avg: 4.59)
Length (states) of path with itp non-trivial itp:       434 (count: 27, min: 9, max: 32, avg: 16.07)
Length (states) of path with itp 'false':                27 (count: 27, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 27, min: 0, max: 1, avg: 0.11)
Equal non-trivial interpolants along paths:             404 (count: 27, min: 8, max: 30, avg: 14.96)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                27
Number of successful refinements:     27
Number of failed refinements:         0
Max. size of reached set before ref.: 1758
Max. size of reached set after ref.:  358
Avg. size of reached set before ref.: 1141.19
Avg. size of reached set after ref.:  59.96

Total time for CEGAR algorithm:       6.147s
Time for refinements:                 0.517s
Average time for refinement:          0.019s
Max time for refinement:              0.076s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          112
  Total lines:            441
  Line coverage:          0.254
  Visited conditions:     34
  Total conditions:       74
  Condition coverage:     0.459

CPAchecker general statistics
-----------------------------
Number of program locations:     636
Number of CFA edges:             687
Number of relevant variables:    114
Number of functions:             38
Number of loops:                 5
Size of reached set:             1112
  Number of reached locations:   152 (24%)
    Avg states per location:     7
    Max states per location:     41 (at node N500)
  Number of reached functions:   19 (50%)
  Number of partitions:          1108
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N9 (before lines 55-102), Function test called from node N568, stack depth 3 [6314b195], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.291s
  Time for loading CPAs:          0.565s
  Time for loading parser:        0.486s
  Time for CFA construction:      1.116s
    Time for parsing file(s):     0.376s
    Time for AST to CFA:          0.272s
    Time for CFA sanity check:    0.077s
    Time for post-processing:     0.252s
      Time for var class.:        0.124s
Time for Analysis:                6.147s
CPU time for analysis:            6.150s
Time for analyzing result:        0.001s
Total time for CPAchecker:        8.442s
Total CPU time for CPAchecker:    8.440s
Time for statistics:              0.074s

Time for Garbage Collector:       0.147s (in 16 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     37MB (    35 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     30MB (    28 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8059MB (  7686 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
