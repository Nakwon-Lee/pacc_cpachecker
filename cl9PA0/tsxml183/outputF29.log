scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product20_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yo8um3fo/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 457: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 564: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 696: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 869: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 924: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2799 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2750 (98%)
  Because of loop head:            37 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (0%)
  Times precision was empty:       677 (24%)
  Times precision was {false}:     58 (2%)
  Times result was cached:         2000 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      64 (2%)
  Times result was 'false':        227 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         783
  BDD entailment checks:           397
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          3
Number of abstraction locations:          44
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         2164
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 17.74
Number of irrelevant predicates:          590 (27%)
Number of preds handled by boolean abs:   68 (3%)
  Total number of models for allsat:      78
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.22

Time for post operator:                  0.422s
  Time for path formula creation:        0.409s
Time for strengthen operator:            0.030s
Time for prec operator:                  0.646s
  Time for abstraction:                  0.582s (Max:     0.014s, Count: 2799)
    Boolean abstraction:                 0.061s
    Solving time:                        0.061s (Max:     0.008s)
    Model enumeration time:              0.006s
    Time for BDD construction:           0.011s (Max:     0.008s)
Time for merge operator:                 0.017s
Time for coverage check:                 0.015s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     0.067s

Number of path formula cache hits:   9116 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.376s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         145 (count: 1762, min: 0, max: 64, avg: 0.08)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.111s
Automaton transfers with branching:                0
Automaton transfer successors:                        10206 (count: 10206, min: 1, max: 1, avg: 1.00) [1 x 10206]

CPA algorithm statistics
------------------------
Number of iterations:            8025
Max size of waitlist:            20
Average size of waitlist:        9
Number of computed successors:   8895
Max successors for one state:    2
Number of times merged:          193
Number of times stopped:         507
Number of times breaked:         12

Total time for CPA algorithm:         2.168s (Max:     0.543s)
  Time for choose from waitlist:      0.014s
  Time for precision adjustment:      0.873s
  Time for transfer relation:         0.941s
  Time for merge operator:            0.056s
  Time for stop operator:             0.070s
  Time for adding to reached set:     0.046s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                 511 (count: 12, min: 31, max: 66, avg: 42.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.203s
  Counterexample analysis:                             0.095s (Max:     0.015s, Calls: 12)
    Refinement sat check:                              0.042s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.010s
  Precision update:                                    0.012s
  ARG update:                                          0.069s

Length of refined path (in blocks):                     333 (count: 12, min: 15, max: 50, avg: 27.75)
Number of affected states:                              321 (count: 12, min: 14, max: 49, avg: 26.75)
Length (states) of path with itp 'true':                  0 (count: 12, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       321 (count: 12, min: 14, max: 49, avg: 26.75)
Length (states) of path with itp 'false':                12 (count: 12, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 12, min: 0, max: 1, avg: 0.08)
Equal non-trivial interpolants along paths:             308 (count: 12, min: 13, max: 48, avg: 25.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 1133
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 626.83
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.397s
Time for refinements:                 0.228s
Average time for refinement:          0.019s
Max time for refinement:              0.049s

Code Coverage
-----------------------------
  Function coverage:      0.526
  Visited lines:          111
  Total lines:            431
  Line coverage:          0.258
  Visited conditions:     32
  Total conditions:       68
  Condition coverage:     0.471

CPAchecker general statistics
-----------------------------
Number of program locations:     620
Number of CFA edges:             665
Number of relevant variables:    110
Number of functions:             38
Number of loops:                 5
Size of reached set:             676
  Number of reached locations:   151 (24%)
    Avg states per location:     4
    Max states per location:     28 (at node N368)
  Number of reached functions:   20 (53%)
  Number of partitions:          676
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.139s
  Time for loading CPAs:          0.539s
  Time for loading parser:        0.522s
  Time for CFA construction:      0.959s
    Time for parsing file(s):     0.343s
    Time for AST to CFA:          0.212s
    Time for CFA sanity check:    0.080s
    Time for post-processing:     0.203s
      Time for var class.:        0.073s
Time for Analysis:                2.397s
CPU time for analysis:            2.390s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.539s
Total CPU time for CPAchecker:    4.530s
Time for statistics:              0.065s

Time for Garbage Collector:       0.094s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     34MB (    32 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     26MB (    25 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8033MB (  7661 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
