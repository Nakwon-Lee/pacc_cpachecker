scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product20_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_m8lem5nt/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 457: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 564: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 696: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 869: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 924: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3441 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3378 (98%)
  Because of loop head:            39 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24 (1%)
  Times precision was empty:       525 (15%)
  Times precision was {false}:     109 (3%)
  Times result was cached:         2499 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      308 (9%)
  Times result was 'false':        259 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         1089
  BDD entailment checks:           613
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          5
Number of abstraction locations:          44
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         5929
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 14.22
Number of irrelevant predicates:          2340 (39%)
Number of preds handled by boolean abs:   562 (9%)
  Total number of models for allsat:      333
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  0.589s
  Time for path formula creation:        0.568s
Time for strengthen operator:            0.032s
Time for prec operator:                  1.684s
  Time for abstraction:                  1.539s (Max:     0.015s, Count: 3441)
    Boolean abstraction:                 0.335s
    Solving time:                        0.219s (Max:     0.012s)
    Model enumeration time:              0.034s
    Time for BDD construction:           0.059s (Max:     0.009s)
Time for merge operator:                 0.017s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):     0.253s

Number of path formula cache hits:   9228 (63%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.491s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               240
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         571 (count: 3612, min: 0, max: 210, avg: 0.16)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.196s
Automaton transfers with branching:                0
Automaton transfer successors:                        12637 (count: 12637, min: 1, max: 1, avg: 1.00) [1 x 12637]

CPA algorithm statistics
------------------------
Number of iterations:            9878
Max size of waitlist:            16
Average size of waitlist:        7
Number of computed successors:   10982
Max successors for one state:    2
Number of times merged:          238
Number of times stopped:         675
Number of times breaked:         24

Total time for CPA algorithm:         3.534s (Max:     0.337s)
  Time for choose from waitlist:      0.033s
  Time for precision adjustment:      1.882s
  Time for transfer relation:         1.214s
  Time for merge operator:            0.059s
  Time for stop operator:             0.110s
  Time for adding to reached set:     0.067s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                 996 (count: 24, min: 26, max: 58, avg: 41.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.332s
  Counterexample analysis:                             0.183s (Max:     0.018s, Calls: 24)
    Refinement sat check:                              0.087s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.029s
  Precision update:                                    0.024s
  ARG update:                                          0.047s

Length of refined path (in blocks):                     690 (count: 24, min: 17, max: 50, avg: 28.75)
Number of affected states:                              497 (count: 24, min: 6, max: 49, avg: 20.71)
Length (states) of path with itp 'true':                169 (count: 24, min: 0, max: 19, avg: 7.04)
Length (states) of path with itp non-trivial itp:       497 (count: 24, min: 6, max: 49, avg: 20.71)
Length (states) of path with itp 'false':                24 (count: 24, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 24, min: 0, max: 1, avg: 0.04)
Equal non-trivial interpolants along paths:             472 (count: 24, min: 5, max: 48, avg: 19.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 960
Max. size of reached set after ref.:  655
Avg. size of reached set before ref.: 667.96
Avg. size of reached set after ref.:  273.29

Total time for CEGAR algorithm:       3.988s
Time for refinements:                 0.444s
Average time for refinement:          0.018s
Max time for refinement:              0.051s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          95
  Total lines:            431
  Line coverage:          0.220
  Visited conditions:     30
  Total conditions:       68
  Condition coverage:     0.441

CPAchecker general statistics
-----------------------------
Number of program locations:     620
Number of CFA edges:             665
Number of relevant variables:    110
Number of functions:             38
Number of loops:                 5
Size of reached set:             577
  Number of reached locations:   130 (21%)
    Avg states per location:     4
    Max states per location:     20 (at node N368)
  Number of reached functions:   19 (50%)
  Number of partitions:          572
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N491 (before lines 712-761), Function test called from node N463, stack depth 3 [1d7f2f0a], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.257s
  Time for loading CPAs:          0.607s
  Time for loading parser:        0.495s
  Time for CFA construction:      1.051s
    Time for parsing file(s):     0.371s
    Time for AST to CFA:          0.274s
    Time for CFA sanity check:    0.058s
    Time for post-processing:     0.219s
      Time for var class.:        0.088s
Time for Analysis:                3.989s
CPU time for analysis:            3.990s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.250s
Total CPU time for CPAchecker:    6.250s
Time for statistics:              0.062s

Time for Garbage Collector:       0.094s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     36MB (    35 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     29MB (    27 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8051MB (  7678 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
