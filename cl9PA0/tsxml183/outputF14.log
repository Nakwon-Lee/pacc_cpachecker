scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product20_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_v3xj7opo/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 457: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 564: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 696: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 869: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 924: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3747 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3678 (98%)
  Because of loop head:            45 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24 (1%)
  Times precision was empty:       596 (16%)
  Times precision was {false}:     109 (3%)
  Times result was cached:         2735 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      307 (8%)
  Times result was 'false':        298 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         1172
  BDD entailment checks:           676
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          5
Number of abstraction locations:          44
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         6656
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 16.00
Number of irrelevant predicates:          2306 (35%)
Number of preds handled by boolean abs:   567 (9%)
  Total number of models for allsat:      333
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  0.603s
  Time for path formula creation:        0.579s
Time for strengthen operator:            0.018s
Time for prec operator:                  1.452s
  Time for abstraction:                  1.370s (Max:     0.017s, Count: 3747)
    Boolean abstraction:                 0.330s
    Solving time:                        0.198s (Max:     0.013s)
    Model enumeration time:              0.031s
    Time for BDD construction:           0.048s (Max:     0.009s)
Time for merge operator:                 0.014s
Time for coverage check:                 0.013s
  Time for BDD entailment checks:        0.012s
Total time for SMT solver (w/o itp):     0.229s

Number of path formula cache hits:   10875 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.512s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               240
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         669 (count: 3751, min: 0, max: 191, avg: 0.18)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.131s
Automaton transfers with branching:                0
Automaton transfer successors:                        13692 (count: 13692, min: 1, max: 1, avg: 1.00) [1 x 13692]

CPA algorithm statistics
------------------------
Number of iterations:            10729
Max size of waitlist:            17
Average size of waitlist:        7
Number of computed successors:   11910
Max successors for one state:    2
Number of times merged:          248
Number of times stopped:         718
Number of times breaked:         24

Total time for CPA algorithm:         3.333s (Max:     0.311s)
  Time for choose from waitlist:      0.049s
  Time for precision adjustment:      1.697s
  Time for transfer relation:         1.256s
  Time for merge operator:            0.040s
  Time for stop operator:             0.091s
  Time for adding to reached set:     0.064s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                 974 (count: 24, min: 26, max: 58, avg: 40.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.316s
  Counterexample analysis:                             0.184s (Max:     0.016s, Calls: 24)
    Refinement sat check:                              0.079s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.029s
  ARG update:                                          0.060s

Length of refined path (in blocks):                     690 (count: 24, min: 17, max: 50, avg: 28.75)
Number of affected states:                              510 (count: 24, min: 6, max: 49, avg: 21.25)
Length (states) of path with itp 'true':                156 (count: 24, min: 0, max: 19, avg: 6.50)
Length (states) of path with itp non-trivial itp:       510 (count: 24, min: 6, max: 49, avg: 21.25)
Length (states) of path with itp 'false':                24 (count: 24, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 24, min: 0, max: 1, avg: 0.04)
Equal non-trivial interpolants along paths:             485 (count: 24, min: 5, max: 48, avg: 20.21)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 956
Max. size of reached set after ref.:  651
Avg. size of reached set before ref.: 654.58
Avg. size of reached set after ref.:  224.67

Total time for CEGAR algorithm:       3.745s
Time for refinements:                 0.395s
Average time for refinement:          0.016s
Max time for refinement:              0.049s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          95
  Total lines:            431
  Line coverage:          0.220
  Visited conditions:     30
  Total conditions:       68
  Condition coverage:     0.441

CPAchecker general statistics
-----------------------------
Number of program locations:     620
Number of CFA edges:             665
Number of relevant variables:    110
Number of functions:             38
Number of loops:                 5
Size of reached set:             577
  Number of reached locations:   130 (21%)
    Avg states per location:     4
    Max states per location:     20 (at node N368)
  Number of reached functions:   19 (50%)
  Number of partitions:          572
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N491 (before lines 712-761), Function test called from node N463, stack depth 3 [727dcc64], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.084s
  Time for loading CPAs:          0.549s
  Time for loading parser:        0.451s
  Time for CFA construction:      0.982s
    Time for parsing file(s):     0.363s
    Time for AST to CFA:          0.237s
    Time for CFA sanity check:    0.070s
    Time for post-processing:     0.196s
      Time for var class.:        0.075s
Time for Analysis:                3.745s
CPU time for analysis:            3.750s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.832s
Total CPU time for CPAchecker:    5.830s
Time for statistics:              0.072s

Time for Garbage Collector:       0.091s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    55 MiB) max;     35MB (    34 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8050MB (  7677 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
