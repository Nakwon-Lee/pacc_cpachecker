scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product37_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5d19lft8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 291: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 428: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 483: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 583: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 903: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 949: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 740: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            13908 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13686 (98%)
  Because of loop head:            135 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         87 (1%)
  Times precision was empty:       445 (3%)
  Times precision was {false}:     219 (2%)
  Times result was cached:         9643 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3601 (26%)
  Times result was 'false':        2211 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         9482
  BDD entailment checks:           5478
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          26
Number of abstraction locations:          52
Max number of predicates per location:    14
Avg number of predicates per location:    7
Total predicates per abstraction:         89125
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 23.33
Number of irrelevant predicates:          28976 (33%)
Number of preds handled by boolean abs:   19890 (22%)
  Total number of models for allsat:      4348
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.21

Time for post operator:                  0.945s
  Time for path formula creation:        0.924s
Time for strengthen operator:            0.098s
Time for prec operator:                 10.358s
  Time for abstraction:                 10.105s (Max:     0.017s, Count: 13908)
    Boolean abstraction:                 3.149s
    Solving time:                        2.267s (Max:     0.013s)
    Model enumeration time:              0.324s
    Time for BDD construction:           0.206s (Max:     0.012s)
Time for merge operator:                 0.057s
Time for coverage check:                 0.042s
  Time for BDD entailment checks:        0.039s
Total time for SMT solver (w/o itp):     2.591s

Number of path formula cache hits:   50723 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.835s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               5225
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       14806 (count: 32269, min: 0, max: 1239, avg: 0.46)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.200s
Automaton transfers with branching:                0
Automaton transfer successors:                        54564 (count: 54564, min: 1, max: 1, avg: 1.00) [1 x 54564]

CPA algorithm statistics
------------------------
Number of iterations:            42592
Max size of waitlist:            18
Average size of waitlist:        6
Number of computed successors:   48034
Max successors for one state:    2
Number of times merged:          2002
Number of times stopped:         2785
Number of times breaked:         87

Total time for CPA algorithm:        13.884s (Max:     1.318s)
  Time for choose from waitlist:      0.073s
  Time for precision adjustment:     10.881s
  Time for transfer relation:         2.054s
  Time for merge operator:            0.194s
  Time for stop operator:             0.187s
  Time for adding to reached set:     0.130s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   87
Avg. length of target path (in blocks):                5707 (count: 87, min: 25, max: 131, avg: 65.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.751s
  Counterexample analysis:                             1.364s (Max:     0.098s, Calls: 87)
    Refinement sat check:                              0.465s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.060s
  Precision update:                                    0.115s
  ARG update:                                          0.125s

Length of refined path (in blocks):                    4451 (count: 87, min: 14, max: 121, avg: 51.16)
Number of affected states:                             2170 (count: 87, min: 1, max: 73, avg: 24.94)
Length (states) of path with itp 'true':               2194 (count: 87, min: 0, max: 55, avg: 25.22)
Length (states) of path with itp non-trivial itp:      2170 (count: 87, min: 1, max: 73, avg: 24.94)
Length (states) of path with itp 'false':                87 (count: 87, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          81 (count: 87, min: 0, max: 7, avg: 0.93)
Equal non-trivial interpolants along paths:            2002 (count: 87, min: 0, max: 70, avg: 23.01)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                87
Number of successful refinements:     87
Number of failed refinements:         0
Max. size of reached set before ref.: 4051
Max. size of reached set after ref.:  2860
Avg. size of reached set before ref.: 886.06
Avg. size of reached set after ref.:  430.34

Total time for CEGAR algorithm:      15.870s
Time for refinements:                 1.955s
Average time for refinement:          0.022s
Max time for refinement:              0.102s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          129
  Total lines:            434
  Line coverage:          0.297
  Visited conditions:     40
  Total conditions:       72
  Condition coverage:     0.556

CPAchecker general statistics
-----------------------------
Number of program locations:     622
Number of CFA edges:             671
Number of relevant variables:    115
Number of functions:             37
Number of loops:                 5
Size of reached set:             3392
  Number of reached locations:   175 (28%)
    Avg states per location:     19
    Max states per location:     93 (at node N73)
  Number of reached functions:   25 (68%)
  Number of partitions:          3329
    Avg size of partitions:      1
    Max size of partitions:      14 (with key [N295 (after line 519), Function test called from node N138, stack depth 3 [43852953], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.109s
  Time for loading CPAs:          0.539s
  Time for loading parser:        0.456s
  Time for CFA construction:      1.009s
    Time for parsing file(s):     0.354s
    Time for AST to CFA:          0.249s
    Time for CFA sanity check:    0.063s
    Time for post-processing:     0.220s
      Time for var class.:        0.098s
Time for Analysis:               15.870s
CPU time for analysis:           15.870s
Time for analyzing result:        0.002s
Total time for CPAchecker:       17.983s
Total CPU time for CPAchecker:   17.980s
Time for statistics:              0.131s

Time for Garbage Collector:       0.291s (in 38 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    62 MiB) max;     42MB (    40 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8073MB (  7699 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
