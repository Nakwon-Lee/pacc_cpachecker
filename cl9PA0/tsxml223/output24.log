scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product37_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_mgp_3ypp/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 291: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 428: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 483: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 583: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 903: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 949: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 740: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            8541 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8364 (98%)
  Because of loop head:            143 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         34 (0%)
  Times precision was empty:       362 (4%)
  Times precision was {false}:     240 (3%)
  Times result was cached:         4134 (48%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3805 (45%)
  Times result was 'false':        1378 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         4692
  BDD entailment checks:           2506
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          27
Number of abstraction locations:          52
Max number of predicates per location:    18
Avg number of predicates per location:    9
Total predicates per abstraction:         56632
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 14.00
Number of irrelevant predicates:          10183 (18%)
Number of preds handled by boolean abs:   24556 (43%)
  Total number of models for allsat:      4976
  Max number of models for allsat:        10
  Avg number of models for allsat:        1.31

Time for post operator:                  1.077s
  Time for path formula creation:        1.048s
Time for strengthen operator:            0.058s
Time for prec operator:                 11.193s
  Time for abstraction:                 10.952s (Max:     0.023s, Count: 8541)
    Boolean abstraction:                 4.221s
    Solving time:                        3.056s (Max:     0.014s)
    Model enumeration time:              0.361s
    Time for BDD construction:           0.318s (Max:     0.013s)
Time for merge operator:                 0.078s
Time for coverage check:                 0.053s
  Time for BDD entailment checks:        0.051s
Total time for SMT solver (w/o itp):     3.417s

Number of path formula cache hits:   21042 (56%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.980s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               6716
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       18834 (count: 31894, min: 0, max: 1850, avg: 0.59)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.190s
Automaton transfers with branching:                0
Automaton transfer successors:                        32726 (count: 32726, min: 1, max: 1, avg: 1.00) [1 x 32726]

CPA algorithm statistics
------------------------
Number of iterations:            25602
Max size of waitlist:            38
Average size of waitlist:        15
Number of computed successors:   28867
Max successors for one state:    2
Number of times merged:          1093
Number of times stopped:         1481
Number of times breaked:         34

Total time for CPA algorithm:        14.282s (Max:     1.397s)
  Time for choose from waitlist:      0.102s
  Time for precision adjustment:     11.500s
  Time for transfer relation:         1.996s
  Time for merge operator:            0.187s
  Time for stop operator:             0.156s
  Time for adding to reached set:     0.097s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   34
Avg. length of target path (in blocks):                4032 (count: 34, min: 25, max: 235, avg: 118.59)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.798s
  Counterexample analysis:                             1.578s (Max:     0.309s, Calls: 34)
    Refinement sat check:                              0.356s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.035s
  Precision update:                                    0.047s
  ARG update:                                          0.076s

Length of refined path (in blocks):                    3086 (count: 34, min: 19, max: 225, avg: 90.76)
Number of affected states:                             1734 (count: 34, min: 3, max: 169, avg: 51.00)
Length (states) of path with itp 'true':               1318 (count: 34, min: 0, max: 130, avg: 38.76)
Length (states) of path with itp non-trivial itp:      1734 (count: 34, min: 3, max: 169, avg: 51.00)
Length (states) of path with itp 'false':                34 (count: 34, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          67 (count: 34, min: 0, max: 13, avg: 1.97)
Equal non-trivial interpolants along paths:            1633 (count: 34, min: 2, max: 155, avg: 48.03)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                34
Number of successful refinements:     34
Number of failed refinements:         0
Max. size of reached set before ref.: 2382
Max. size of reached set after ref.:  1002
Avg. size of reached set before ref.: 948.21
Avg. size of reached set after ref.:  252.50

Total time for CEGAR algorithm:      16.220s
Time for refinements:                 1.926s
Average time for refinement:          0.056s
Max time for refinement:              0.324s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          129
  Total lines:            434
  Line coverage:          0.297
  Visited conditions:     40
  Total conditions:       72
  Condition coverage:     0.556

CPAchecker general statistics
-----------------------------
Number of program locations:     622
Number of CFA edges:             671
Number of relevant variables:    115
Number of functions:             37
Number of loops:                 5
Size of reached set:             2355
  Number of reached locations:   175 (28%)
    Avg states per location:     13
    Max states per location:     57 (at node N171)
  Number of reached functions:   25 (68%)
  Number of partitions:          2314
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N278 (before lines 497-542), Function test called from node N138, stack depth 3 [10060f31], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.734s
  Time for loading CPAs:          0.446s
  Time for loading parser:        0.387s
  Time for CFA construction:      0.807s
    Time for parsing file(s):     0.309s
    Time for AST to CFA:          0.167s
    Time for CFA sanity check:    0.061s
    Time for post-processing:     0.176s
      Time for var class.:        0.066s
Time for Analysis:               16.220s
CPU time for analysis:           16.210s
Time for analyzing result:        0.002s
Total time for CPAchecker:       17.957s
Total CPU time for CPAchecker:   17.940s
Time for statistics:              0.087s

Time for Garbage Collector:       0.247s (in 28 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     43MB (    41 MiB) avg;     68MB (    64 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8010MB (  7639 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
