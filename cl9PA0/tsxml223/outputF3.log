scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product37_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7p3ndjd8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 291: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 428: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 483: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 583: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 903: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 949: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 740: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            13361 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13150 (98%)
  Because of loop head:            139 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         72 (1%)
  Times precision was empty:       451 (3%)
  Times precision was {false}:     309 (2%)
  Times result was cached:         7656 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4945 (37%)
  Times result was 'false':        2151 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         12829
  BDD entailment checks:           8189
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          25
Number of abstraction locations:          52
Max number of predicates per location:    15
Avg number of predicates per location:    8
Total predicates per abstraction:         90190
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 17.17
Number of irrelevant predicates:          19190 (21%)
Number of preds handled by boolean abs:   33156 (37%)
  Total number of models for allsat:      6499
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.31

Time for post operator:                  1.041s
  Time for path formula creation:        1.009s
Time for strengthen operator:            0.096s
Time for prec operator:                 11.435s
  Time for abstraction:                 11.156s (Max:     0.021s, Count: 13361)
    Boolean abstraction:                 3.929s
    Solving time:                        2.781s (Max:     0.013s)
    Model enumeration time:              0.397s
    Time for BDD construction:           0.200s (Max:     0.010s)
Time for merge operator:                 0.070s
Time for coverage check:                 0.028s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     3.178s

Number of path formula cache hits:   40128 (64%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.892s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               6289
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       19015 (count: 44301, min: 0, max: 1255, avg: 0.43)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.254s
Automaton transfers with branching:                0
Automaton transfer successors:                        54116 (count: 54116, min: 1, max: 1, avg: 1.00) [1 x 54116]

CPA algorithm statistics
------------------------
Number of iterations:            42131
Max size of waitlist:            23
Average size of waitlist:        7
Number of computed successors:   47697
Max successors for one state:    2
Number of times merged:          2320
Number of times stopped:         3183
Number of times breaked:         72

Total time for CPA algorithm:        14.907s (Max:     1.648s)
  Time for choose from waitlist:      0.063s
  Time for precision adjustment:     11.918s
  Time for transfer relation:         2.160s
  Time for merge operator:            0.156s
  Time for stop operator:             0.135s
  Time for adding to reached set:     0.130s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   72
Avg. length of target path (in blocks):                4428 (count: 72, min: 26, max: 112, avg: 61.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.144s
  Counterexample analysis:                             0.844s (Max:     0.045s, Calls: 72)
    Refinement sat check:                              0.336s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.063s
  Precision update:                                    0.056s
  ARG update:                                          0.110s

Length of refined path (in blocks):                    3621 (count: 72, min: 14, max: 102, avg: 50.29)
Number of affected states:                             1800 (count: 72, min: 1, max: 71, avg: 25.00)
Length (states) of path with itp 'true':               1749 (count: 72, min: 0, max: 76, avg: 24.29)
Length (states) of path with itp non-trivial itp:      1800 (count: 72, min: 1, max: 71, avg: 25.00)
Length (states) of path with itp 'false':                72 (count: 72, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          58 (count: 72, min: 0, max: 7, avg: 0.81)
Equal non-trivial interpolants along paths:            1670 (count: 72, min: 0, max: 68, avg: 23.19)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                72
Number of successful refinements:     72
Number of failed refinements:         0
Max. size of reached set before ref.: 4531
Max. size of reached set after ref.:  3642
Avg. size of reached set before ref.: 1457.47
Avg. size of reached set after ref.:  946.10

Total time for CEGAR algorithm:      16.256s
Time for refinements:                 1.306s
Average time for refinement:          0.018s
Max time for refinement:              0.066s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          129
  Total lines:            434
  Line coverage:          0.297
  Visited conditions:     40
  Total conditions:       72
  Condition coverage:     0.556

CPAchecker general statistics
-----------------------------
Number of program locations:     622
Number of CFA edges:             671
Number of relevant variables:    115
Number of functions:             37
Number of loops:                 5
Size of reached set:             5545
  Number of reached locations:   175 (28%)
    Avg states per location:     31
    Max states per location:     145 (at node N73)
  Number of reached functions:   25 (68%)
  Number of partitions:          5438
    Avg size of partitions:      1
    Max size of partitions:      23 (with key [N295 (after line 519), Function test called from node N138, stack depth 3 [49f6e8a2], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.127s
  Time for loading CPAs:          0.486s
  Time for loading parser:        0.540s
  Time for CFA construction:      0.969s
    Time for parsing file(s):     0.402s
    Time for AST to CFA:          0.199s
    Time for CFA sanity check:    0.051s
    Time for post-processing:     0.186s
      Time for var class.:        0.070s
Time for Analysis:               16.257s
CPU time for analysis:           16.260s
Time for analyzing result:        0.004s
Total time for CPAchecker:       18.387s
Total CPU time for CPAchecker:   18.380s
Time for statistics:              0.127s

Time for Garbage Collector:       0.358s (in 42 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     43MB (    41 MiB) avg;     73MB (    70 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8072MB (  7698 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
