scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product37_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vre7cpkj/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 291: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 428: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 483: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 583: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 903: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 949: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 740: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            15481 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15249 (99%)
  Because of loop head:            140 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         92 (1%)
  Times precision was empty:       567 (4%)
  Times precision was {false}:     344 (2%)
  Times result was cached:         9228 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5342 (35%)
  Times result was 'false':        2386 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         13006
  BDD entailment checks:           7998
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          24
Number of abstraction locations:          52
Max number of predicates per location:    14
Avg number of predicates per location:    8
Total predicates per abstraction:         102383
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 18.01
Number of irrelevant predicates:          26496 (26%)
Number of preds handled by boolean abs:   34054 (33%)
  Total number of models for allsat:      7355
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.38

Time for post operator:                  1.047s
  Time for path formula creation:        0.990s
Time for strengthen operator:            0.076s
Time for prec operator:                 13.417s
  Time for abstraction:                 13.143s (Max:     0.024s, Count: 15481)
    Boolean abstraction:                 4.399s
    Solving time:                        3.202s (Max:     0.013s)
    Model enumeration time:              0.410s
    Time for BDD construction:           0.288s (Max:     0.012s)
Time for merge operator:                 0.059s
Time for coverage check:                 0.074s
  Time for BDD entailment checks:        0.069s
Total time for SMT solver (w/o itp):     3.612s

Number of path formula cache hits:   45400 (63%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.879s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               6447
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       19675 (count: 46709, min: 0, max: 1572, avg: 0.42)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.300s
Automaton transfers with branching:                0
Automaton transfer successors:                        61891 (count: 61891, min: 1, max: 1, avg: 1.00) [1 x 61891]

CPA algorithm statistics
------------------------
Number of iterations:            48081
Max size of waitlist:            26
Average size of waitlist:        7
Number of computed successors:   54311
Max successors for one state:    2
Number of times merged:          2504
Number of times stopped:         3411
Number of times breaked:         92

Total time for CPA algorithm:        17.380s (Max:     2.036s)
  Time for choose from waitlist:      0.067s
  Time for precision adjustment:     13.936s
  Time for transfer relation:         2.375s
  Time for merge operator:            0.174s
  Time for stop operator:             0.229s
  Time for adding to reached set:     0.171s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   92
Avg. length of target path (in blocks):                6247 (count: 92, min: 25, max: 135, avg: 67.90)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.683s
  Counterexample analysis:                             1.330s (Max:     0.052s, Calls: 92)
    Refinement sat check:                              0.509s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.081s
  Precision update:                                    0.064s
  ARG update:                                          0.151s

Length of refined path (in blocks):                    5367 (count: 92, min: 14, max: 128, avg: 58.34)
Number of affected states:                             2144 (count: 92, min: 1, max: 94, avg: 23.30)
Length (states) of path with itp 'true':               3131 (count: 92, min: 0, max: 105, avg: 34.03)
Length (states) of path with itp non-trivial itp:      2144 (count: 92, min: 1, max: 94, avg: 23.30)
Length (states) of path with itp 'false':                92 (count: 92, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          79 (count: 92, min: 0, max: 5, avg: 0.86)
Equal non-trivial interpolants along paths:            1973 (count: 92, min: 0, max: 91, avg: 21.45)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                92
Number of successful refinements:     92
Number of failed refinements:         0
Max. size of reached set before ref.: 4357
Max. size of reached set after ref.:  2879
Avg. size of reached set before ref.: 1362.00
Avg. size of reached set after ref.:  896.86

Total time for CEGAR algorithm:      19.419s
Time for refinements:                 1.961s
Average time for refinement:          0.021s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          129
  Total lines:            434
  Line coverage:          0.297
  Visited conditions:     40
  Total conditions:       72
  Condition coverage:     0.556

CPAchecker general statistics
-----------------------------
Number of program locations:     622
Number of CFA edges:             671
Number of relevant variables:    115
Number of functions:             37
Number of loops:                 5
Size of reached set:             5722
  Number of reached locations:   175 (28%)
    Avg states per location:     32
    Max states per location:     159 (at node N73)
  Number of reached functions:   25 (68%)
  Number of partitions:          5604
    Avg size of partitions:      1
    Max size of partitions:      20 (with key [N295 (after line 519), Function test called from node N138, stack depth 3 [6c5abd8f], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.227s
  Time for loading CPAs:          0.553s
  Time for loading parser:        0.485s
  Time for CFA construction:      0.990s
    Time for parsing file(s):     0.368s
    Time for AST to CFA:          0.220s
    Time for CFA sanity check:    0.052s
    Time for post-processing:     0.204s
      Time for var class.:        0.083s
Time for Analysis:               19.419s
CPU time for analysis:           19.430s
Time for analyzing result:        0.016s
Total time for CPAchecker:       21.649s
Total CPU time for CPAchecker:   21.650s
Time for statistics:              0.142s

Time for Garbage Collector:       0.414s (in 48 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     43MB (    41 MiB) avg;     73MB (    69 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
