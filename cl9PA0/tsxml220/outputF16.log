scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product37_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_u94favl7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 140: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 506: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 628: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 637: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 692: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 806: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 838: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 852: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 907: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 297: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            11966 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11746 (98%)
  Because of loop head:            176 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         44 (0%)
  Times precision was empty:       1025 (9%)
  Times precision was {false}:     99 (1%)
  Times result was cached:         8704 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2138 (18%)
  Times result was 'false':        2231 (19%)
Number of strengthen sat checks:   0
Number of coverage checks:         6323
  BDD entailment checks:           3199
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          14
Number of abstraction locations:          51
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         40704
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 18.20
Number of irrelevant predicates:          13944 (34%)
Number of preds handled by boolean abs:   6911 (17%)
  Total number of models for allsat:      2237
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.05

Time for post operator:                  1.190s
  Time for path formula creation:        1.108s
Time for strengthen operator:            0.103s
Time for prec operator:                  6.244s
  Time for abstraction:                  5.989s (Max:     0.017s, Count: 11966)
    Boolean abstraction:                 1.649s
    Solving time:                        1.163s (Max:     0.013s)
    Model enumeration time:              0.142s
    Time for BDD construction:           0.181s (Max:     0.012s)
Time for merge operator:                 0.106s
Time for coverage check:                 0.028s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     1.305s

Number of path formula cache hits:   36764 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.008s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               732
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4913 (count: 18510, min: 0, max: 597, avg: 0.27)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.246s
Automaton transfers with branching:                0
Automaton transfer successors:                        47294 (count: 47294, min: 1, max: 1, avg: 1.00) [1 x 47294]

CPA algorithm statistics
------------------------
Number of iterations:            35869
Max size of waitlist:            57
Average size of waitlist:        15
Number of computed successors:   41340
Max successors for one state:    2
Number of times merged:          1562
Number of times stopped:         2189
Number of times breaked:         44

Total time for CPA algorithm:         9.984s (Max:     0.727s)
  Time for choose from waitlist:      0.116s
  Time for precision adjustment:      6.682s
  Time for transfer relation:         2.295s
  Time for merge operator:            0.230s
  Time for stop operator:             0.165s
  Time for adding to reached set:     0.159s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   44
Avg. length of target path (in blocks):                2412 (count: 44, min: 21, max: 136, avg: 54.82)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.830s
  Counterexample analysis:                             0.489s (Max:     0.028s, Calls: 44)
    Refinement sat check:                              0.225s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.044s
  Precision update:                                    0.068s
  ARG update:                                          0.189s

Length of refined path (in blocks):                    1685 (count: 44, min: 13, max: 92, avg: 38.30)
Number of affected states:                             1185 (count: 44, min: 9, max: 78, avg: 26.93)
Length (states) of path with itp 'true':                456 (count: 44, min: 0, max: 72, avg: 10.36)
Length (states) of path with itp non-trivial itp:      1185 (count: 44, min: 9, max: 78, avg: 26.93)
Length (states) of path with itp 'false':                44 (count: 44, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          17 (count: 44, min: 0, max: 2, avg: 0.39)
Equal non-trivial interpolants along paths:            1124 (count: 44, min: 8, max: 77, avg: 25.55)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                44
Number of successful refinements:     44
Number of failed refinements:         0
Max. size of reached set before ref.: 2092
Max. size of reached set after ref.:  1375
Avg. size of reached set before ref.: 1005.20
Avg. size of reached set after ref.:  202.36

Total time for CEGAR algorithm:      10.935s
Time for refinements:                 0.944s
Average time for refinement:          0.021s
Max time for refinement:              0.045s

Code Coverage
-----------------------------
  Function coverage:      0.686
  Visited lines:          140
  Total lines:            429
  Line coverage:          0.326
  Visited conditions:     42
  Total conditions:       72
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     610
Number of CFA edges:             659
Number of relevant variables:    115
Number of functions:             35
Number of loops:                 5
Size of reached set:             1596
  Number of reached locations:   187 (31%)
    Avg states per location:     8
    Max states per location:     48 (at node N579)
  Number of reached functions:   24 (69%)
  Number of partitions:          1535
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N376 (before line 542), Function timeShift called from node N4, stack depth 5 [bb510b], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0

Time for analysis setup:          1.841s
  Time for loading CPAs:          0.497s
  Time for loading parser:        0.451s
  Time for CFA construction:      0.805s
    Time for parsing file(s):     0.288s
    Time for AST to CFA:          0.177s
    Time for CFA sanity check:    0.059s
    Time for post-processing:     0.187s
      Time for var class.:        0.076s
Time for Analysis:               10.945s
CPU time for analysis:           10.950s
Time for analyzing result:        0.001s
Total time for CPAchecker:       12.788s
Total CPU time for CPAchecker:   12.780s
Time for statistics:              0.069s

Time for Garbage Collector:       0.197s (in 24 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     41MB (    39 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8005MB (  7635 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
