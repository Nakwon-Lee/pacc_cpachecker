scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product37_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7q_pc6rg/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 140: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 506: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 628: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 637: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 692: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 806: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 838: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 852: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 907: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 297: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            15515 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15140 (98%)
  Because of loop head:            295 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         80 (1%)
  Times precision was empty:       2410 (16%)
  Times precision was {false}:     177 (1%)
  Times result was cached:         11140 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1788 (12%)
  Times result was 'false':        2144 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         7205
  BDD entailment checks:           4285
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          15
Number of abstraction locations:          51
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         51543
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 26.23
Number of irrelevant predicates:          18479 (36%)
Number of preds handled by boolean abs:   5495 (11%)
  Total number of models for allsat:      1923
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.08

Time for post operator:                  0.941s
  Time for path formula creation:        0.887s
Time for strengthen operator:            0.105s
Time for prec operator:                  5.479s
  Time for abstraction:                  5.213s (Max:     0.021s, Count: 15515)
    Boolean abstraction:                 1.376s
    Solving time:                        0.899s (Max:     0.013s)
    Model enumeration time:              0.167s
    Time for BDD construction:           0.170s (Max:     0.012s)
Time for merge operator:                 0.080s
Time for coverage check:                 0.042s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     1.066s

Number of path formula cache hits:   53981 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.774s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               944
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4539 (count: 19411, min: 0, max: 441, avg: 0.23)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.241s
Automaton transfers with branching:                0
Automaton transfer successors:                        58852 (count: 58852, min: 1, max: 1, avg: 1.00) [1 x 58852]

CPA algorithm statistics
------------------------
Number of iterations:            46161
Max size of waitlist:            18
Average size of waitlist:        7
Number of computed successors:   51303
Max successors for one state:    2
Number of times merged:          1460
Number of times stopped:         2694
Number of times breaked:         80

Total time for CPA algorithm:         9.128s (Max:     0.787s)
  Time for choose from waitlist:      0.094s
  Time for precision adjustment:      6.062s
  Time for transfer relation:         2.105s
  Time for merge operator:            0.175s
  Time for stop operator:             0.208s
  Time for adding to reached set:     0.122s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   80
Avg. length of target path (in blocks):                3274 (count: 80, min: 21, max: 89, avg: 40.92)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.131s
  Counterexample analysis:                             0.759s (Max:     0.023s, Calls: 80)
    Refinement sat check:                              0.275s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.075s
  Precision update:                                    0.087s
  ARG update:                                          0.143s

Length of refined path (in blocks):                    2760 (count: 80, min: 13, max: 75, avg: 34.50)
Number of affected states:                             1674 (count: 80, min: 3, max: 66, avg: 20.92)
Length (states) of path with itp 'true':               1006 (count: 80, min: 0, max: 51, avg: 12.57)
Length (states) of path with itp non-trivial itp:      1674 (count: 80, min: 3, max: 66, avg: 20.92)
Length (states) of path with itp 'false':                80 (count: 80, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         105 (count: 80, min: 0, max: 4, avg: 1.31)
Equal non-trivial interpolants along paths:            1489 (count: 80, min: 2, max: 64, avg: 18.61)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                80
Number of successful refinements:     80
Number of failed refinements:         0
Max. size of reached set before ref.: 5127
Max. size of reached set after ref.:  3926
Avg. size of reached set before ref.: 866.15
Avg. size of reached set after ref.:  369.00

Total time for CEGAR algorithm:      10.446s
Time for refinements:                 1.291s
Average time for refinement:          0.016s
Max time for refinement:              0.045s

Code Coverage
-----------------------------
  Function coverage:      0.686
  Visited lines:          140
  Total lines:            429
  Line coverage:          0.326
  Visited conditions:     42
  Total conditions:       72
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     610
Number of CFA edges:             659
Number of relevant variables:    115
Number of functions:             35
Number of loops:                 5
Size of reached set:             6694
  Number of reached locations:   187 (31%)
    Avg states per location:     35
    Max states per location:     215 (at node N579)
  Number of reached functions:   24 (69%)
  Number of partitions:          6470
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N496 (after line 728), Function test called from node N46, stack depth 3 [1a8bbf04], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.150s
  Time for loading CPAs:          0.535s
  Time for loading parser:        0.481s
  Time for CFA construction:      0.983s
    Time for parsing file(s):     0.355s
    Time for AST to CFA:          0.232s
    Time for CFA sanity check:    0.067s
    Time for post-processing:     0.193s
      Time for var class.:        0.075s
Time for Analysis:               10.446s
CPU time for analysis:           10.440s
Time for analyzing result:        0.004s
Total time for CPAchecker:       12.598s
Total CPU time for CPAchecker:   12.600s
Time for statistics:              0.121s

Time for Garbage Collector:       0.234s (in 29 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     41MB (    39 MiB) avg;     71MB (    67 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     32MB (    31 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8068MB (  7694 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
