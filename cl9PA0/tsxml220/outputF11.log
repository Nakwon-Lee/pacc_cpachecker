scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product37_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_y3xomy0d/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 140: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 506: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 628: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 637: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 692: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 806: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 838: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 852: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 907: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 297: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            11543 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11321 (98%)
  Because of loop head:            138 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         84 (1%)
  Times precision was empty:       1325 (11%)
  Times precision was {false}:     185 (2%)
  Times result was cached:         8216 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1817 (16%)
  Times result was 'false':        1710 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         4942
  BDD entailment checks:           2452
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          15
Number of abstraction locations:          51
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         44976
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 22.47
Number of irrelevant predicates:          16654 (37%)
Number of preds handled by boolean abs:   6045 (13%)
  Total number of models for allsat:      1953
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.07

Time for post operator:                  0.990s
  Time for path formula creation:        0.961s
Time for strengthen operator:            0.070s
Time for prec operator:                  5.465s
  Time for abstraction:                  5.232s (Max:     0.025s, Count: 11543)
    Boolean abstraction:                 1.277s
    Solving time:                        1.004s (Max:     0.013s)
    Model enumeration time:              0.087s
    Time for BDD construction:           0.115s (Max:     0.012s)
Time for merge operator:                 0.050s
Time for coverage check:                 0.031s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     1.091s

Number of path formula cache hits:   37937 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.874s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1098
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5064 (count: 16737, min: 0, max: 512, avg: 0.30)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.239s
Automaton transfers with branching:                0
Automaton transfer successors:                        45453 (count: 45453, min: 1, max: 1, avg: 1.00) [1 x 45453]

CPA algorithm statistics
------------------------
Number of iterations:            34634
Max size of waitlist:            42
Average size of waitlist:        10
Number of computed successors:   38984
Max successors for one state:    2
Number of times merged:          1245
Number of times stopped:         1820
Number of times breaked:         84

Total time for CPA algorithm:         8.841s (Max:     1.009s)
  Time for choose from waitlist:      0.066s
  Time for precision adjustment:      5.896s
  Time for transfer relation:         2.145s
  Time for merge operator:            0.120s
  Time for stop operator:             0.142s
  Time for adding to reached set:     0.171s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   84
Avg. length of target path (in blocks):                3584 (count: 84, min: 22, max: 74, avg: 42.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.033s
  Counterexample analysis:                             0.736s (Max:     0.022s, Calls: 84)
    Refinement sat check:                              0.312s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.048s
  Precision update:                                    0.054s
  ARG update:                                          0.131s

Length of refined path (in blocks):                    2886 (count: 84, min: 14, max: 67, avg: 34.36)
Number of affected states:                             1713 (count: 84, min: 3, max: 66, avg: 20.39)
Length (states) of path with itp 'true':               1089 (count: 84, min: 0, max: 39, avg: 12.96)
Length (states) of path with itp non-trivial itp:      1713 (count: 84, min: 3, max: 66, avg: 20.39)
Length (states) of path with itp 'false':                84 (count: 84, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          80 (count: 84, min: 0, max: 3, avg: 0.95)
Equal non-trivial interpolants along paths:            1549 (count: 84, min: 2, max: 64, avg: 18.44)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                84
Number of successful refinements:     84
Number of failed refinements:         0
Max. size of reached set before ref.: 3347
Max. size of reached set after ref.:  1023
Avg. size of reached set before ref.: 765.00
Avg. size of reached set after ref.:  383.43

Total time for CEGAR algorithm:      10.046s
Time for refinements:                 1.170s
Average time for refinement:          0.013s
Max time for refinement:              0.069s

Code Coverage
-----------------------------
  Function coverage:      0.686
  Visited lines:          140
  Total lines:            429
  Line coverage:          0.326
  Visited conditions:     42
  Total conditions:       72
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     610
Number of CFA edges:             659
Number of relevant variables:    115
Number of functions:             35
Number of loops:                 5
Size of reached set:             3403
  Number of reached locations:   187 (31%)
    Avg states per location:     18
    Max states per location:     116 (at node N579)
  Number of reached functions:   24 (69%)
  Number of partitions:          3288
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N479 (before lines 706-751), Function test called from node N46, stack depth 3 [56e92cdf], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.061s
  Time for loading CPAs:          0.639s
  Time for loading parser:        0.450s
  Time for CFA construction:      0.860s
    Time for parsing file(s):     0.286s
    Time for AST to CFA:          0.240s
    Time for CFA sanity check:    0.051s
    Time for post-processing:     0.175s
      Time for var class.:        0.070s
Time for Analysis:               10.046s
CPU time for analysis:           10.040s
Time for analyzing result:        0.002s
Total time for CPAchecker:       12.110s
Total CPU time for CPAchecker:   12.100s
Time for statistics:              0.100s

Time for Garbage Collector:       0.215s (in 25 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     40MB (    38 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8004MB (  7633 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
