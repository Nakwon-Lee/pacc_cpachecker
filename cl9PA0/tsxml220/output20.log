scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product37_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tfd7zi79/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 140: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 506: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 628: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 637: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 692: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 806: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 838: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 852: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 907: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 297: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            31706 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  31188 (98%)
  Because of loop head:            416 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         102 (0%)
  Times precision was empty:       2437 (8%)
  Times precision was {false}:     197 (1%)
  Times result was cached:         25344 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3728 (12%)
  Times result was 'false':        5101 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         22997
  BDD entailment checks:           15647
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          16
Number of abstraction locations:          48
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         119224
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 30.38
Number of irrelevant predicates:          48199 (40%)
Number of preds handled by boolean abs:   11828 (10%)
  Total number of models for allsat:      3959
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.06

Time for post operator:                  1.567s
  Time for path formula creation:        1.487s
Time for strengthen operator:            0.136s
Time for prec operator:                  9.937s
  Time for abstraction:                  9.525s (Max:     0.023s, Count: 31706)
    Boolean abstraction:                 2.341s
    Solving time:                        1.800s (Max:     0.015s)
    Model enumeration time:              0.192s
    Time for BDD construction:           0.187s (Max:     0.012s)
Time for merge operator:                 0.124s
Time for coverage check:                 0.040s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     1.992s

Number of path formula cache hits:   110060 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.248s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1143
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8532 (count: 42946, min: 0, max: 389, avg: 0.20)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.356s
Automaton transfers with branching:                0
Automaton transfer successors:                       123865 (count: 123865, min: 1, max: 1, avg: 1.00) [1 x 123865]

CPA algorithm statistics
------------------------
Number of iterations:            94706
Max size of waitlist:            69
Average size of waitlist:        20
Number of computed successors:   108247
Max successors for one state:    2
Number of times merged:          3675
Number of times stopped:         6521
Number of times breaked:         102

Total time for CPA algorithm:        15.344s (Max:     0.416s)
  Time for choose from waitlist:      0.096s
  Time for precision adjustment:     10.741s
  Time for transfer relation:         3.221s
  Time for merge operator:            0.236s
  Time for stop operator:             0.216s
  Time for adding to reached set:     0.258s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   102
Avg. length of target path (in blocks):                5566 (count: 102, min: 21, max: 100, avg: 54.57)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.538s
  Counterexample analysis:                             0.985s (Max:     0.024s, Calls: 102)
    Refinement sat check:                              0.470s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.091s
  Precision update:                                    0.095s
  ARG update:                                          0.287s

Length of refined path (in blocks):                    4181 (count: 102, min: 13, max: 73, avg: 40.99)
Number of affected states:                             2318 (count: 102, min: 10, max: 55, avg: 22.73)
Length (states) of path with itp 'true':               1761 (count: 102, min: 0, max: 53, avg: 17.26)
Length (states) of path with itp non-trivial itp:      2318 (count: 102, min: 10, max: 55, avg: 22.73)
Length (states) of path with itp 'false':               102 (count: 102, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          45 (count: 102, min: 0, max: 3, avg: 0.44)
Equal non-trivial interpolants along paths:            2171 (count: 102, min: 7, max: 54, avg: 21.28)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                102
Number of successful refinements:     102
Number of failed refinements:         0
Max. size of reached set before ref.: 4192
Max. size of reached set after ref.:  1809
Avg. size of reached set before ref.: 1350.65
Avg. size of reached set after ref.:  421.79

Total time for CEGAR algorithm:      17.147s
Time for refinements:                 1.769s
Average time for refinement:          0.017s
Max time for refinement:              0.048s

Code Coverage
-----------------------------
  Function coverage:      0.657
  Visited lines:          124
  Total lines:            429
  Line coverage:          0.289
  Visited conditions:     40
  Total conditions:       72
  Condition coverage:     0.556

CPAchecker general statistics
-----------------------------
Number of program locations:     610
Number of CFA edges:             659
Number of relevant variables:    115
Number of functions:             35
Number of loops:                 5
Size of reached set:             1883
  Number of reached locations:   166 (27%)
    Avg states per location:     11
    Max states per location:     53 (at node N372)
  Number of reached functions:   23 (66%)
  Number of partitions:          1829
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N479 (before lines 706-751), Function test called from node N46, stack depth 3 [488d4571], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.906s
  Time for loading CPAs:          0.481s
  Time for loading parser:        0.438s
  Time for CFA construction:      0.871s
    Time for parsing file(s):     0.316s
    Time for AST to CFA:          0.222s
    Time for CFA sanity check:    0.040s
    Time for post-processing:     0.177s
      Time for var class.:        0.074s
Time for Analysis:               17.147s
CPU time for analysis:           17.150s
Time for analyzing result:        0.002s
Total time for CPAchecker:       19.056s
Total CPU time for CPAchecker:   19.050s
Time for statistics:              0.082s

Time for Garbage Collector:       0.442s (in 58 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     44MB (    41 MiB) avg;     71MB (    68 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     34MB (    32 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
