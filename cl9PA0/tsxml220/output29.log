scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product37_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9khu9ufn/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 140: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 506: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 628: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 637: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 692: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 806: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 838: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 852: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 907: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 297: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            6256 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6079 (97%)
  Because of loop head:            141 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36 (1%)
  Times precision was empty:       502 (8%)
  Times precision was {false}:     109 (2%)
  Times result was cached:         3665 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1980 (32%)
  Times result was 'false':        928 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         3289
  BDD entailment checks:           2003
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          14
Number of abstraction locations:          48
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         25334
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 12.13
Number of irrelevant predicates:          7611 (30%)
Number of preds handled by boolean abs:   6595 (26%)
  Total number of models for allsat:      1959
  Max number of models for allsat:        3
  Avg number of models for allsat:        0.99

Time for post operator:                  0.990s
  Time for path formula creation:        0.872s
Time for strengthen operator:            0.065s
Time for prec operator:                  5.010s
  Time for abstraction:                  4.817s (Max:     0.019s, Count: 6256)
    Boolean abstraction:                 1.571s
    Solving time:                        1.063s (Max:     0.013s)
    Model enumeration time:              0.157s
    Time for BDD construction:           0.157s (Max:     0.018s)
Time for merge operator:                 0.064s
Time for coverage check:                 0.014s
  Time for BDD entailment checks:        0.012s
Total time for SMT solver (w/o itp):     1.220s

Number of path formula cache hits:   13694 (50%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.803s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               725
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4554 (count: 15501, min: 0, max: 650, avg: 0.29)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.170s
Automaton transfers with branching:                0
Automaton transfer successors:                        24158 (count: 24158, min: 1, max: 1, avg: 1.00) [1 x 24158]

CPA algorithm statistics
------------------------
Number of iterations:            18591
Max size of waitlist:            37
Average size of waitlist:        12
Number of computed successors:   21008
Max successors for one state:    2
Number of times merged:          643
Number of times stopped:         999
Number of times breaked:         36

Total time for CPA algorithm:         7.690s (Max:     0.811s)
  Time for choose from waitlist:      0.046s
  Time for precision adjustment:      5.297s
  Time for transfer relation:         1.762s
  Time for merge operator:            0.171s
  Time for stop operator:             0.090s
  Time for adding to reached set:     0.069s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                3073 (count: 36, min: 21, max: 181, avg: 85.36)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.772s
  Counterexample analysis:                             0.574s (Max:     0.038s, Calls: 36)
    Refinement sat check:                              0.231s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.046s
  Precision update:                                    0.042s
  ARG update:                                          0.067s

Length of refined path (in blocks):                    2131 (count: 36, min: 13, max: 164, avg: 59.19)
Number of affected states:                             1272 (count: 36, min: 3, max: 103, avg: 35.33)
Length (states) of path with itp 'true':                823 (count: 36, min: 0, max: 80, avg: 22.86)
Length (states) of path with itp non-trivial itp:      1272 (count: 36, min: 3, max: 103, avg: 35.33)
Length (states) of path with itp 'false':                36 (count: 36, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          13 (count: 36, min: 0, max: 2, avg: 0.36)
Equal non-trivial interpolants along paths:            1223 (count: 36, min: 2, max: 100, avg: 33.97)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     36
Number of failed refinements:         0
Max. size of reached set before ref.: 1982
Max. size of reached set after ref.:  1485
Avg. size of reached set before ref.: 800.64
Avg. size of reached set after ref.:  312.03

Total time for CEGAR algorithm:       8.573s
Time for refinements:                 0.878s
Average time for refinement:          0.024s
Max time for refinement:              0.057s

Code Coverage
-----------------------------
  Function coverage:      0.657
  Visited lines:          124
  Total lines:            429
  Line coverage:          0.289
  Visited conditions:     40
  Total conditions:       72
  Condition coverage:     0.556

CPAchecker general statistics
-----------------------------
Number of program locations:     610
Number of CFA edges:             659
Number of relevant variables:    115
Number of functions:             35
Number of loops:                 5
Size of reached set:             1492
  Number of reached locations:   166 (27%)
    Avg states per location:     8
    Max states per location:     42 (at node N579)
  Number of reached functions:   23 (66%)
  Number of partitions:          1447
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N479 (before lines 706-751), Function test called from node N46, stack depth 3 [6655f3cd], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.850s
  Time for loading CPAs:          0.487s
  Time for loading parser:        0.403s
  Time for CFA construction:      0.853s
    Time for parsing file(s):     0.305s
    Time for AST to CFA:          0.192s
    Time for CFA sanity check:    0.054s
    Time for post-processing:     0.188s
      Time for var class.:        0.089s
Time for Analysis:                8.573s
CPU time for analysis:            8.570s
Time for analyzing result:        0.001s
Total time for CPAchecker:       10.426s
Total CPU time for CPAchecker:   10.420s
Time for statistics:              0.070s

Time for Garbage Collector:       0.145s (in 16 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     40MB (    38 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     32MB (    30 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8003MB (  7633 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
