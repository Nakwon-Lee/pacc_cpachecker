scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product37_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xfguiyjr/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 140: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 506: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 628: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 637: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 692: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 806: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 838: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 852: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 907: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 297: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            16162 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15798 (98%)
  Because of loop head:            287 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         77 (0%)
  Times precision was empty:       2916 (18%)
  Times precision was {false}:     176 (1%)
  Times result was cached:         11385 (70%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1685 (10%)
  Times result was 'false':        2137 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         7278
  BDD entailment checks:           4118
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          15
Number of abstraction locations:          51
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         51214
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 27.52
Number of irrelevant predicates:          18977 (37%)
Number of preds handled by boolean abs:   5110 (10%)
  Total number of models for allsat:      1835
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.09

Time for post operator:                  0.892s
  Time for path formula creation:        0.808s
Time for strengthen operator:            0.094s
Time for prec operator:                  5.455s
  Time for abstraction:                  5.116s (Max:     0.014s, Count: 16162)
    Boolean abstraction:                 1.262s
    Solving time:                        0.907s (Max:     0.013s)
    Model enumeration time:              0.124s
    Time for BDD construction:           0.080s (Max:     0.010s)
Time for merge operator:                 0.055s
Time for coverage check:                 0.027s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     1.031s

Number of path formula cache hits:   57226 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.714s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               937
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4327 (count: 19167, min: 0, max: 418, avg: 0.23)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.230s
Automaton transfers with branching:                0
Automaton transfer successors:                        61591 (count: 61591, min: 1, max: 1, avg: 1.00) [1 x 61591]

CPA algorithm statistics
------------------------
Number of iterations:            48464
Max size of waitlist:            19
Average size of waitlist:        8
Number of computed successors:   53866
Max successors for one state:    2
Number of times merged:          1580
Number of times stopped:         2952
Number of times breaked:         77

Total time for CPA algorithm:         8.988s (Max:     1.019s)
  Time for choose from waitlist:      0.069s
  Time for precision adjustment:      5.974s
  Time for transfer relation:         2.063s
  Time for merge operator:            0.156s
  Time for stop operator:             0.130s
  Time for adding to reached set:     0.188s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   77
Avg. length of target path (in blocks):                3175 (count: 77, min: 21, max: 89, avg: 41.23)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.086s
  Counterexample analysis:                             0.768s (Max:     0.022s, Calls: 77)
    Refinement sat check:                              0.323s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.048s
  Precision update:                                    0.079s
  ARG update:                                          0.155s

Length of refined path (in blocks):                    2664 (count: 77, min: 13, max: 75, avg: 34.60)
Number of affected states:                             1644 (count: 77, min: 3, max: 66, avg: 21.35)
Length (states) of path with itp 'true':                943 (count: 77, min: 0, max: 51, avg: 12.25)
Length (states) of path with itp non-trivial itp:      1644 (count: 77, min: 3, max: 66, avg: 21.35)
Length (states) of path with itp 'false':                77 (count: 77, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         102 (count: 77, min: 0, max: 4, avg: 1.32)
Equal non-trivial interpolants along paths:            1465 (count: 77, min: 2, max: 64, avg: 19.03)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                77
Number of successful refinements:     77
Number of failed refinements:         0
Max. size of reached set before ref.: 5090
Max. size of reached set after ref.:  3806
Avg. size of reached set before ref.: 982.53
Avg. size of reached set after ref.:  431.17

Total time for CEGAR algorithm:      10.254s
Time for refinements:                 1.232s
Average time for refinement:          0.016s
Max time for refinement:              0.061s

Code Coverage
-----------------------------
  Function coverage:      0.686
  Visited lines:          140
  Total lines:            429
  Line coverage:          0.326
  Visited conditions:     42
  Total conditions:       72
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     610
Number of CFA edges:             659
Number of relevant variables:    115
Number of functions:             35
Number of loops:                 5
Size of reached set:             6323
  Number of reached locations:   187 (31%)
    Avg states per location:     33
    Max states per location:     198 (at node N579)
  Number of reached functions:   24 (69%)
  Number of partitions:          6140
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N496 (after line 728), Function test called from node N46, stack depth 3 [31725f55], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.850s
  Time for loading CPAs:          0.466s
  Time for loading parser:        0.476s
  Time for CFA construction:      0.841s
    Time for parsing file(s):     0.298s
    Time for AST to CFA:          0.213s
    Time for CFA sanity check:    0.051s
    Time for post-processing:     0.167s
      Time for var class.:        0.069s
Time for Analysis:               10.254s
CPU time for analysis:           10.250s
Time for analyzing result:        0.005s
Total time for CPAchecker:       12.109s
Total CPU time for CPAchecker:   12.100s
Time for statistics:              0.141s

Time for Garbage Collector:       0.215s (in 29 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     40MB (    38 MiB) avg;     68MB (    65 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8068MB (  7694 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
