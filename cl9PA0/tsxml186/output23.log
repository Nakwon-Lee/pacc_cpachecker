scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product21_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_paeal29d/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 535: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 619: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 628: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 640: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 853: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 908: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2375 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2309 (97%)
  Because of loop head:            50 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (1%)
  Times precision was empty:       593 (25%)
  Times precision was {false}:     65 (3%)
  Times result was cached:         1431 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      286 (12%)
  Times result was 'false':        189 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         1131
  BDD entailment checks:           403
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          34
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         4928
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 14.04
Number of irrelevant predicates:          1572 (32%)
Number of preds handled by boolean abs:   730 (15%)
  Total number of models for allsat:      297
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  0.407s
  Time for path formula creation:        0.395s
Time for strengthen operator:            0.028s
Time for prec operator:                  1.169s
  Time for abstraction:                  1.089s (Max:     0.017s, Count: 2375)
    Boolean abstraction:                 0.274s
    Solving time:                        0.199s (Max:     0.013s)
    Model enumeration time:              0.020s
    Time for BDD construction:           0.054s (Max:     0.008s)
Time for merge operator:                 0.016s
Time for coverage check:                 0.016s
  Time for BDD entailment checks:        0.014s
Total time for SMT solver (w/o itp):     0.219s

Number of path formula cache hits:   6539 (59%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.380s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               295
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         635 (count: 3171, min: 0, max: 345, avg: 0.20)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.069s
Automaton transfers with branching:                0
Automaton transfer successors:                         9632 (count: 9632, min: 1, max: 1, avg: 1.00) [1 x 9632]

CPA algorithm statistics
------------------------
Number of iterations:            7425
Max size of waitlist:            70
Average size of waitlist:        18
Number of computed successors:   8567
Max successors for one state:    2
Number of times merged:          364
Number of times stopped:         503
Number of times breaked:         16

Total time for CPA algorithm:         2.579s (Max:     0.304s)
  Time for choose from waitlist:      0.024s
  Time for precision adjustment:      1.407s
  Time for transfer relation:         0.823s
  Time for merge operator:            0.036s
  Time for stop operator:             0.084s
  Time for adding to reached set:     0.085s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                 614 (count: 16, min: 23, max: 58, avg: 38.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.224s
  Counterexample analysis:                             0.124s (Max:     0.015s, Calls: 16)
    Refinement sat check:                              0.069s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.036s
  ARG update:                                          0.040s

Length of refined path (in blocks):                     399 (count: 16, min: 13, max: 35, avg: 24.94)
Number of affected states:                              337 (count: 16, min: 12, max: 34, avg: 21.06)
Length (states) of path with itp 'true':                 46 (count: 16, min: 0, max: 12, avg: 2.88)
Length (states) of path with itp non-trivial itp:       337 (count: 16, min: 12, max: 34, avg: 21.06)
Length (states) of path with itp 'false':                16 (count: 16, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 16, min: 0, max: 1, avg: 0.25)
Equal non-trivial interpolants along paths:             317 (count: 16, min: 11, max: 32, avg: 19.81)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 941
Max. size of reached set after ref.:  205
Avg. size of reached set before ref.: 515.38
Avg. size of reached set after ref.:  47.06

Total time for CEGAR algorithm:       2.856s
Time for refinements:                 0.264s
Average time for refinement:          0.016s
Max time for refinement:              0.037s

Code Coverage
-----------------------------
  Function coverage:      0.457
  Visited lines:          84
  Total lines:            423
  Line coverage:          0.199
  Visited conditions:     28
  Total conditions:       68
  Condition coverage:     0.412

CPAchecker general statistics
-----------------------------
Number of program locations:     603
Number of CFA edges:             649
Number of relevant variables:    112
Number of functions:             35
Number of loops:                 5
Size of reached set:             383
  Number of reached locations:   113 (19%)
    Avg states per location:     3
    Max states per location:     10 (at node N509)
  Number of reached functions:   16 (46%)
  Number of partitions:          377
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N471 (before lines 677-722), Function test called from node N361, stack depth 3 [7b8ea1db], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.062s
  Time for loading CPAs:          0.552s
  Time for loading parser:        0.455s
  Time for CFA construction:      0.949s
    Time for parsing file(s):     0.308s
    Time for AST to CFA:          0.266s
    Time for CFA sanity check:    0.056s
    Time for post-processing:     0.196s
      Time for var class.:        0.076s
Time for Analysis:                2.857s
CPU time for analysis:            2.860s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.921s
Total CPU time for CPAchecker:    4.910s
Time for statistics:              0.058s

Time for Garbage Collector:       0.077s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    55 MiB) max;     34MB (    33 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8042MB (  7669 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
