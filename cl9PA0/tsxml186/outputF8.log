scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product21_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_o5q576ya/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 535: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 619: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 628: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 640: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 853: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 908: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2571 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2495 (97%)
  Because of loop head:            52 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24 (1%)
  Times precision was empty:       528 (21%)
  Times precision was {false}:     65 (3%)
  Times result was cached:         1747 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      231 (9%)
  Times result was 'false':        375 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         713
  BDD entailment checks:           319
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          37
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         5801
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 19.60
Number of irrelevant predicates:          1770 (31%)
Number of preds handled by boolean abs:   535 (9%)
  Total number of models for allsat:      252
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  0.503s
  Time for path formula creation:        0.485s
Time for strengthen operator:            0.025s
Time for prec operator:                  1.319s
  Time for abstraction:                  1.175s (Max:     0.014s, Count: 2571)
    Boolean abstraction:                 0.257s
    Solving time:                        0.153s (Max:     0.012s)
    Model enumeration time:              0.022s
    Time for BDD construction:           0.026s (Max:     0.007s)
Time for merge operator:                 0.022s
Time for coverage check:                 0.018s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):     0.175s

Number of path formula cache hits:   7291 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.435s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               283
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         500 (count: 2699, min: 0, max: 219, avg: 0.19)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.146s
Automaton transfers with branching:                0
Automaton transfer successors:                         9526 (count: 9526, min: 1, max: 1, avg: 1.00) [1 x 9526]

CPA algorithm statistics
------------------------
Number of iterations:            7476
Max size of waitlist:            14
Average size of waitlist:        5
Number of computed successors:   8356
Max successors for one state:    2
Number of times merged:          197
Number of times stopped:         371
Number of times breaked:         24

Total time for CPA algorithm:         2.888s (Max:     0.315s)
  Time for choose from waitlist:      0.026s
  Time for precision adjustment:      1.540s
  Time for transfer relation:         1.049s
  Time for merge operator:            0.046s
  Time for stop operator:             0.071s
  Time for adding to reached set:     0.070s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                 787 (count: 24, min: 20, max: 52, avg: 32.79)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.338s
  Counterexample analysis:                             0.185s (Max:     0.023s, Calls: 24)
    Refinement sat check:                              0.084s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.042s
  Precision update:                                    0.019s
  ARG update:                                          0.060s

Length of refined path (in blocks):                     603 (count: 24, min: 14, max: 49, avg: 25.13)
Number of affected states:                              497 (count: 24, min: 13, max: 48, avg: 20.71)
Length (states) of path with itp 'true':                 82 (count: 24, min: 0, max: 13, avg: 3.42)
Length (states) of path with itp non-trivial itp:       497 (count: 24, min: 13, max: 48, avg: 20.71)
Length (states) of path with itp 'false':                24 (count: 24, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 24, min: 0, max: 1, avg: 0.21)
Equal non-trivial interpolants along paths:             468 (count: 24, min: 12, max: 46, avg: 19.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 628
Max. size of reached set after ref.:  281
Avg. size of reached set before ref.: 350.92
Avg. size of reached set after ref.:  61.17

Total time for CEGAR algorithm:       3.269s
Time for refinements:                 0.381s
Average time for refinement:          0.015s
Max time for refinement:              0.036s

Code Coverage
-----------------------------
  Function coverage:      0.457
  Visited lines:          84
  Total lines:            423
  Line coverage:          0.199
  Visited conditions:     28
  Total conditions:       68
  Condition coverage:     0.412

CPAchecker general statistics
-----------------------------
Number of program locations:     603
Number of CFA edges:             649
Number of relevant variables:    112
Number of functions:             35
Number of loops:                 5
Size of reached set:             657
  Number of reached locations:   113 (19%)
    Avg states per location:     5
    Max states per location:     20 (at node N300)
  Number of reached functions:   16 (46%)
  Number of partitions:          645
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N471 (before lines 677-722), Function test called from node N361, stack depth 3 [1961d75a], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.137s
  Time for loading CPAs:          0.556s
  Time for loading parser:        0.528s
  Time for CFA construction:      0.953s
    Time for parsing file(s):     0.325s
    Time for AST to CFA:          0.244s
    Time for CFA sanity check:    0.041s
    Time for post-processing:     0.195s
      Time for var class.:        0.074s
Time for Analysis:                3.269s
CPU time for analysis:            3.280s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.413s
Total CPU time for CPAchecker:    5.420s
Time for statistics:              0.055s

Time for Garbage Collector:       0.085s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     35MB (    34 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8040MB (  7668 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
