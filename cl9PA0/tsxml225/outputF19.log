scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product47_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jz8160_3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 89: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 112: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 166: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 212: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 348: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 412: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 861: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 957: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            6406 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6253 (98%)
  Because of loop head:            114 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         39 (1%)
  Times precision was empty:       600 (9%)
  Times precision was {false}:     103 (2%)
  Times result was cached:         5024 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      679 (11%)
  Times result was 'false':        917 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         1970
  BDD entailment checks:           1176
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          9
Number of abstraction locations:          55
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         17007
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 21.75
Number of irrelevant predicates:          3925 (23%)
Number of preds handled by boolean abs:   1509 (9%)
  Total number of models for allsat:      695
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  0.756s
  Time for path formula creation:        0.711s
Time for strengthen operator:            0.074s
Time for prec operator:                  3.193s
  Time for abstraction:                  3.012s (Max:     0.022s, Count: 6406)
    Boolean abstraction:                 0.742s
    Solving time:                        0.516s (Max:     0.013s)
    Model enumeration time:              0.107s
    Time for BDD construction:           0.086s (Max:     0.012s)
Time for merge operator:                 0.023s
Time for coverage check:                 0.036s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):     0.623s

Number of path formula cache hits:   20646 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.658s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               307
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1506 (count: 6867, min: 0, max: 314, avg: 0.22)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.211s
Automaton transfers with branching:                0
Automaton transfer successors:                        23306 (count: 23306, min: 1, max: 1, avg: 1.00) [1 x 23306]

CPA algorithm statistics
------------------------
Number of iterations:            18366
Max size of waitlist:            14
Average size of waitlist:        6
Number of computed successors:   20295
Max successors for one state:    2
Number of times merged:          397
Number of times stopped:         788
Number of times breaked:         39

Total time for CPA algorithm:         5.845s (Max:     0.605s)
  Time for choose from waitlist:      0.054s
  Time for precision adjustment:      3.504s
  Time for transfer relation:         1.717s
  Time for merge operator:            0.090s
  Time for stop operator:             0.133s
  Time for adding to reached set:     0.093s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   39
Avg. length of target path (in blocks):                1642 (count: 39, min: 19, max: 76, avg: 42.10)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.704s
  Counterexample analysis:                             0.465s (Max:     0.024s, Calls: 39)
    Refinement sat check:                              0.251s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.042s
  Precision update:                                    0.066s
  ARG update:                                          0.094s

Length of refined path (in blocks):                    1326 (count: 39, min: 13, max: 60, avg: 34.00)
Number of affected states:                              828 (count: 39, min: 3, max: 58, avg: 21.23)
Length (states) of path with itp 'true':                459 (count: 39, min: 0, max: 47, avg: 11.77)
Length (states) of path with itp non-trivial itp:       828 (count: 39, min: 3, max: 58, avg: 21.23)
Length (states) of path with itp 'false':                39 (count: 39, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          17 (count: 39, min: 0, max: 2, avg: 0.44)
Equal non-trivial interpolants along paths:             772 (count: 39, min: 2, max: 55, avg: 19.79)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                39
Number of successful refinements:     39
Number of failed refinements:         0
Max. size of reached set before ref.: 2853
Max. size of reached set after ref.:  2395
Avg. size of reached set before ref.: 1006.31
Avg. size of reached set after ref.:  590.90

Total time for CEGAR algorithm:       6.727s
Time for refinements:                 0.831s
Average time for refinement:          0.021s
Max time for refinement:              0.050s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          144
  Total lines:            436
  Line coverage:          0.330
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     626
Number of CFA edges:             677
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             2390
  Number of reached locations:   198 (32%)
    Avg states per location:     12
    Max states per location:     61 (at node N115)
  Number of reached functions:   25 (68%)
  Number of partitions:          2314
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N241 (before lines 442-489), Function test called from node N619, stack depth 3 [5f8da82], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.840s
  Time for loading CPAs:          0.471s
  Time for loading parser:        0.406s
  Time for CFA construction:      0.855s
    Time for parsing file(s):     0.304s
    Time for AST to CFA:          0.228s
    Time for CFA sanity check:    0.055s
    Time for post-processing:     0.163s
      Time for var class.:        0.057s
Time for Analysis:                6.727s
CPU time for analysis:            6.730s
Time for analyzing result:        0.002s
Total time for CPAchecker:        8.569s
Total CPU time for CPAchecker:    8.570s
Time for statistics:              0.121s

Time for Garbage Collector:       0.152s (in 14 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     37MB (    35 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     31MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   8000MB (  7630 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
