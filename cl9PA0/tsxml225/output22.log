scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product47_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9wfee8pq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 89: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 112: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 166: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 212: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 348: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 412: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 861: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 957: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            9837 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  9575 (97%)
  Because of loop head:            211 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         51 (1%)
  Times precision was empty:       752 (8%)
  Times precision was {false}:     134 (1%)
  Times result was cached:         8096 (82%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      855 (9%)
  Times result was 'false':        1310 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         3591
  BDD entailment checks:           2331
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          9
Number of abstraction locations:          55
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         24987
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 25.26
Number of irrelevant predicates:          8477 (34%)
Number of preds handled by boolean abs:   1901 (8%)
  Total number of models for allsat:      884
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  0.686s
  Time for path formula creation:        0.659s
Time for strengthen operator:            0.062s
Time for prec operator:                  3.288s
  Time for abstraction:                  3.052s (Max:     0.021s, Count: 9837)
    Boolean abstraction:                 0.632s
    Solving time:                        0.467s (Max:     0.013s)
    Model enumeration time:              0.052s
    Time for BDD construction:           0.078s (Max:     0.009s)
Time for merge operator:                 0.027s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     0.519s

Number of path formula cache hits:   34583 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.551s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               320
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1933 (count: 9312, min: 0, max: 435, avg: 0.21)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.252s
Automaton transfers with branching:                0
Automaton transfer successors:                        35939 (count: 35939, min: 1, max: 1, avg: 1.00) [1 x 35939]

CPA algorithm statistics
------------------------
Number of iterations:            28322
Max size of waitlist:            17
Average size of waitlist:        6
Number of computed successors:   31396
Max successors for one state:    2
Number of times merged:          630
Number of times stopped:         1460
Number of times breaked:         51

Total time for CPA algorithm:         6.164s (Max:     0.482s)
  Time for choose from waitlist:      0.053s
  Time for precision adjustment:      3.639s
  Time for transfer relation:         1.769s
  Time for merge operator:            0.093s
  Time for stop operator:             0.129s
  Time for adding to reached set:     0.166s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   51
Avg. length of target path (in blocks):                2241 (count: 51, min: 19, max: 76, avg: 43.94)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.752s
  Counterexample analysis:                             0.481s (Max:     0.022s, Calls: 51)
    Refinement sat check:                              0.221s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.063s
  Precision update:                                    0.046s
  ARG update:                                          0.111s

Length of refined path (in blocks):                    1653 (count: 51, min: 13, max: 63, avg: 32.41)
Number of affected states:                              940 (count: 51, min: 2, max: 62, avg: 18.43)
Length (states) of path with itp 'true':                662 (count: 51, min: 0, max: 45, avg: 12.98)
Length (states) of path with itp non-trivial itp:       940 (count: 51, min: 2, max: 62, avg: 18.43)
Length (states) of path with itp 'false':                51 (count: 51, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          22 (count: 51, min: 0, max: 3, avg: 0.43)
Equal non-trivial interpolants along paths:             867 (count: 51, min: 1, max: 59, avg: 17.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                51
Number of successful refinements:     51
Number of failed refinements:         0
Max. size of reached set before ref.: 3122
Max. size of reached set after ref.:  2969
Avg. size of reached set before ref.: 1366.47
Avg. size of reached set after ref.:  873.18

Total time for CEGAR algorithm:       7.201s
Time for refinements:                 0.982s
Average time for refinement:          0.019s
Max time for refinement:              0.043s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          144
  Total lines:            436
  Line coverage:          0.330
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     626
Number of CFA edges:             677
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             3469
  Number of reached locations:   198 (32%)
    Avg states per location:     17
    Max states per location:     91 (at node N70)
  Number of reached functions:   25 (68%)
  Number of partitions:          3354
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N241 (before lines 442-489), Function test called from node N619, stack depth 3 [78333d5a], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.787s
  Time for loading CPAs:          0.475s
  Time for loading parser:        0.395s
  Time for CFA construction:      0.844s
    Time for parsing file(s):     0.316s
    Time for AST to CFA:          0.204s
    Time for CFA sanity check:    0.063s
    Time for post-processing:     0.158s
      Time for var class.:        0.054s
Time for Analysis:                7.201s
CPU time for analysis:            7.190s
Time for analyzing result:        0.004s
Total time for CPAchecker:        8.990s
Total CPU time for CPAchecker:    8.980s
Time for statistics:              0.137s

Time for Garbage Collector:       0.163s (in 18 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    59 MiB) max;     39MB (    37 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     31MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8002MB (  7631 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
