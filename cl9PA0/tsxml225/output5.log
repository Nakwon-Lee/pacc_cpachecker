scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product47_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jjotr5jj/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 89: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 112: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 166: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 212: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 348: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 412: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 861: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 957: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            25339 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  24957 (98%)
  Because of loop head:            302 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         80 (0%)
  Times precision was empty:       4281 (17%)
  Times precision was {false}:     170 (1%)
  Times result was cached:         19642 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1246 (5%)
  Times result was 'false':        2608 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         9517
  BDD entailment checks:           5399
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          10
Number of abstraction locations:          55
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         58970
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 41.65
Number of irrelevant predicates:          23041 (39%)
Number of preds handled by boolean abs:   2770 (5%)
  Total number of models for allsat:      1383
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.11

Time for post operator:                  1.121s
  Time for path formula creation:        1.056s
Time for strengthen operator:            0.086s
Time for prec operator:                  4.764s
  Time for abstraction:                  4.416s (Max:     0.021s, Count: 25339)
    Boolean abstraction:                 0.821s
    Solving time:                        0.561s (Max:     0.012s)
    Model enumeration time:              0.067s
    Time for BDD construction:           0.124s (Max:     0.012s)
Time for merge operator:                 0.071s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.022s
Total time for SMT solver (w/o itp):     0.628s

Number of path formula cache hits:   93785 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.866s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               365
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2810 (count: 18733, min: 0, max: 288, avg: 0.15)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.262s
Automaton transfers with branching:                0
Automaton transfer successors:                        94927 (count: 94927, min: 1, max: 1, avg: 1.00) [1 x 94927]

CPA algorithm statistics
------------------------
Number of iterations:            73617
Max size of waitlist:            64
Average size of waitlist:        29
Number of computed successors:   81989
Max successors for one state:    2
Number of times merged:          2059
Number of times stopped:         4317
Number of times breaked:         80

Total time for CPA algorithm:         8.891s (Max:     0.537s)
  Time for choose from waitlist:      0.114s
  Time for precision adjustment:      5.309s
  Time for transfer relation:         2.524s
  Time for merge operator:            0.185s
  Time for stop operator:             0.147s
  Time for adding to reached set:     0.158s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   80
Avg. length of target path (in blocks):                3631 (count: 80, min: 19, max: 85, avg: 45.39)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.979s
  Counterexample analysis:                             0.583s (Max:     0.021s, Calls: 80)
    Refinement sat check:                              0.242s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.053s
  Precision update:                                    0.050s
  ARG update:                                          0.226s

Length of refined path (in blocks):                    2754 (count: 80, min: 13, max: 61, avg: 34.42)
Number of affected states:                             1296 (count: 80, min: 2, max: 60, avg: 16.20)
Length (states) of path with itp 'true':               1378 (count: 80, min: 0, max: 47, avg: 17.23)
Length (states) of path with itp non-trivial itp:      1296 (count: 80, min: 2, max: 60, avg: 16.20)
Length (states) of path with itp 'false':                80 (count: 80, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          24 (count: 80, min: 0, max: 2, avg: 0.30)
Equal non-trivial interpolants along paths:            1192 (count: 80, min: 1, max: 57, avg: 14.90)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                80
Number of successful refinements:     80
Number of failed refinements:         0
Max. size of reached set before ref.: 4729
Max. size of reached set after ref.:  3806
Avg. size of reached set before ref.: 2250.29
Avg. size of reached set after ref.:  1359.90

Total time for CEGAR algorithm:      10.131s
Time for refinements:                 1.160s
Average time for refinement:          0.014s
Max time for refinement:              0.050s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          144
  Total lines:            436
  Line coverage:          0.330
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     626
Number of CFA edges:             677
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             3834
  Number of reached locations:   198 (32%)
    Avg states per location:     19
    Max states per location:     89 (at node N70)
  Number of reached functions:   25 (68%)
  Number of partitions:          3730
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N241 (before lines 442-489), Function test called from node N619, stack depth 3 [4c762584], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.842s
  Time for loading CPAs:          0.476s
  Time for loading parser:        0.466s
  Time for CFA construction:      0.814s
    Time for parsing file(s):     0.290s
    Time for AST to CFA:          0.208s
    Time for CFA sanity check:    0.052s
    Time for post-processing:     0.175s
      Time for var class.:        0.060s
Time for Analysis:               10.131s
CPU time for analysis:           10.120s
Time for analyzing result:        0.002s
Total time for CPAchecker:       11.980s
Total CPU time for CPAchecker:   11.970s
Time for statistics:              0.105s

Time for Garbage Collector:       0.263s (in 38 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     41MB (    39 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     32MB (    30 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8004MB (  7633 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
