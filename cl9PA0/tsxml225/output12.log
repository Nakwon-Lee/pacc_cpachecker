scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product47_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wa3zx945/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 89: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 112: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 166: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 212: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 348: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 412: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 861: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 957: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            54244 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  53314 (98%)
  Because of loop head:            705 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         225 (0%)
  Times precision was empty:       3251 (6%)
  Times precision was {false}:     345 (1%)
  Times result was cached:         47321 (87%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3327 (6%)
  Times result was 'false':        7970 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         29717
  BDD entailment checks:           21327
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          10
Number of abstraction locations:          55
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         162648
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 44.29
Number of irrelevant predicates:          56838 (35%)
Number of preds handled by boolean abs:   8561 (5%)
  Total number of models for allsat:      3208
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.96

Time for post operator:                  1.511s
  Time for path formula creation:        1.399s
Time for strengthen operator:            0.157s
Time for prec operator:                  9.342s
  Time for abstraction:                  8.910s (Max:     0.018s, Count: 54244)
    Boolean abstraction:                 1.572s
    Solving time:                        1.201s (Max:     0.013s)
    Model enumeration time:              0.122s
    Time for BDD construction:           0.135s (Max:     0.010s)
Time for merge operator:                 0.076s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     1.323s

Number of path formula cache hits:   206742 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.155s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               437
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6946 (count: 48280, min: 0, max: 319, avg: 0.14)
Time for BDD node cleanup:                             0.020s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.483s
Automaton transfers with branching:                0
Automaton transfer successors:                       204340 (count: 204340, min: 1, max: 1, avg: 1.00) [1 x 204340]

CPA algorithm statistics
------------------------
Number of iterations:            157735
Max size of waitlist:            87
Average size of waitlist:        30
Number of computed successors:   179118
Max successors for one state:    2
Number of times merged:          4195
Number of times stopped:         9933
Number of times breaked:         225

Total time for CPA algorithm:        15.593s (Max:     0.620s)
  Time for choose from waitlist:      0.105s
  Time for precision adjustment:     10.316s
  Time for transfer relation:         3.801s
  Time for merge operator:            0.223s
  Time for stop operator:             0.241s
  Time for adding to reached set:     0.259s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   225
Avg. length of target path (in blocks):               12580 (count: 225, min: 19, max: 111, avg: 55.91)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.035s
  Counterexample analysis:                             1.491s (Max:     0.019s, Calls: 225)
    Refinement sat check:                              0.761s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.050s
  Precision update:                                    0.076s
  ARG update:                                          0.330s

Length of refined path (in blocks):                   10294 (count: 225, min: 13, max: 88, avg: 45.75)
Number of affected states:                             2786 (count: 225, min: 2, max: 71, avg: 12.38)
Length (states) of path with itp 'true':               7283 (count: 225, min: 0, max: 84, avg: 32.37)
Length (states) of path with itp non-trivial itp:      2786 (count: 225, min: 2, max: 71, avg: 12.38)
Length (states) of path with itp 'false':               225 (count: 225, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          49 (count: 225, min: 0, max: 3, avg: 0.22)
Equal non-trivial interpolants along paths:            2512 (count: 225, min: 1, max: 70, avg: 11.16)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                225
Number of successful refinements:     225
Number of failed refinements:         0
Max. size of reached set before ref.: 3797
Max. size of reached set after ref.:  3451
Avg. size of reached set before ref.: 2568.80
Avg. size of reached set after ref.:  1881.15

Total time for CEGAR algorithm:      18.344s
Time for refinements:                 2.503s
Average time for refinement:          0.011s
Max time for refinement:              0.037s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          144
  Total lines:            436
  Line coverage:          0.330
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     626
Number of CFA edges:             677
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             6495
  Number of reached locations:   198 (32%)
    Avg states per location:     32
    Max states per location:     171 (at node N70)
  Number of reached functions:   25 (68%)
  Number of partitions:          6297
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N241 (before lines 442-489), Function test called from node N619, stack depth 3 [7959b411], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.847s
  Time for loading CPAs:          0.498s
  Time for loading parser:        0.406s
  Time for CFA construction:      0.846s
    Time for parsing file(s):     0.283s
    Time for AST to CFA:          0.237s
    Time for CFA sanity check:    0.034s
    Time for post-processing:     0.179s
      Time for var class.:        0.064s
Time for Analysis:               18.345s
CPU time for analysis:           18.340s
Time for analyzing result:        0.004s
Total time for CPAchecker:       20.195s
Total CPU time for CPAchecker:   20.190s
Time for statistics:              0.107s

Time for Garbage Collector:       0.561s (in 87 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     44MB (    42 MiB) avg;     78MB (    74 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    32 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8011MB (  7640 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
