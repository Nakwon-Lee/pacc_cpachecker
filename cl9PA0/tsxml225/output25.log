scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product47_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gh6ihzr6/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 89: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 112: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 166: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 212: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 348: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 412: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 861: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 957: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            65927 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  64495 (98%)
  Because of loop head:            1130 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         302 (0%)
  Times precision was empty:       2340 (4%)
  Times precision was {false}:     229 (0%)
  Times result was cached:         59886 (91%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3472 (5%)
  Times result was 'false':        10393 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         41651
  BDD entailment checks:           32197
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          10
Number of abstraction locations:          55
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         241820
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 65.34
Number of irrelevant predicates:          74413 (31%)
Number of preds handled by boolean abs:   9713 (4%)
  Total number of models for allsat:      3544
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  1.507s
  Time for path formula creation:        1.394s
Time for strengthen operator:            0.175s
Time for prec operator:                 11.644s
  Time for abstraction:                 11.141s (Max:     0.017s, Count: 65927)
    Boolean abstraction:                 1.821s
    Solving time:                        1.401s (Max:     0.014s)
    Model enumeration time:              0.163s
    Time for BDD construction:           0.111s (Max:     0.012s)
Time for merge operator:                 0.061s
Time for coverage check:                 0.037s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):     1.564s

Number of path formula cache hits:   256547 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.049s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               492
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7302 (count: 58352, min: 0, max: 405, avg: 0.13)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.483s
Automaton transfers with branching:                0
Automaton transfer successors:                       247793 (count: 247793, min: 1, max: 1, avg: 1.00) [1 x 247793]

CPA algorithm statistics
------------------------
Number of iterations:            194878
Max size of waitlist:            30
Average size of waitlist:        13
Number of computed successors:   219125
Max successors for one state:    2
Number of times merged:          4727
Number of times stopped:         10993
Number of times breaked:         302

Total time for CPA algorithm:        17.592s (Max:     0.380s)
  Time for choose from waitlist:      0.096s
  Time for precision adjustment:     12.588s
  Time for transfer relation:         3.608s
  Time for merge operator:            0.192s
  Time for stop operator:             0.268s
  Time for adding to reached set:     0.293s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   302
Avg. length of target path (in blocks):               25160 (count: 302, min: 19, max: 156, avg: 83.31)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.291s
  Counterexample analysis:                             2.583s (Max:     0.021s, Calls: 302)
    Refinement sat check:                              1.214s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.075s
  Precision update:                                    0.114s
  ARG update:                                          0.335s

Length of refined path (in blocks):                   17911 (count: 302, min: 13, max: 122, avg: 59.31)
Number of affected states:                             6557 (count: 302, min: 2, max: 87, avg: 21.71)
Length (states) of path with itp 'true':              11052 (count: 302, min: 0, max: 84, avg: 36.60)
Length (states) of path with itp non-trivial itp:      6557 (count: 302, min: 2, max: 87, avg: 21.71)
Length (states) of path with itp 'false':               302 (count: 302, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          27 (count: 302, min: 0, max: 2, avg: 0.09)
Equal non-trivial interpolants along paths:            6228 (count: 302, min: 1, max: 86, avg: 20.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                302
Number of successful refinements:     302
Number of failed refinements:         0
Max. size of reached set before ref.: 2318
Max. size of reached set after ref.:  1591
Avg. size of reached set before ref.: 1315.87
Avg. size of reached set after ref.:  667.81

Total time for CEGAR algorithm:      21.360s
Time for refinements:                 3.625s
Average time for refinement:          0.012s
Max time for refinement:              0.036s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          144
  Total lines:            436
  Line coverage:          0.330
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     626
Number of CFA edges:             677
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             2025
  Number of reached locations:   198 (32%)
    Avg states per location:     10
    Max states per location:     55 (at node N0)
  Number of reached functions:   25 (68%)
  Number of partitions:          1946
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N241 (before lines 442-489), Function test called from node N619, stack depth 3 [5da2bb8e], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.909s
  Time for loading CPAs:          0.479s
  Time for loading parser:        0.419s
  Time for CFA construction:      0.890s
    Time for parsing file(s):     0.323s
    Time for AST to CFA:          0.231s
    Time for CFA sanity check:    0.065s
    Time for post-processing:     0.175s
      Time for var class.:        0.063s
Time for Analysis:               21.360s
CPU time for analysis:           21.360s
Time for analyzing result:        0.002s
Total time for CPAchecker:       23.272s
Total CPU time for CPAchecker:   23.260s
Time for statistics:              0.099s

Time for Garbage Collector:       0.644s (in 117 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     45MB (    43 MiB) avg;     73MB (    69 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    33 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8011MB (  7640 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
