scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product47_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qh3cupe4/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 89: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 112: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 166: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 212: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 348: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 412: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 861: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 957: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            12986 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12786 (98%)
  Because of loop head:            152 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         48 (0%)
  Times precision was empty:       2155 (17%)
  Times precision was {false}:     128 (1%)
  Times result was cached:         9723 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      980 (8%)
  Times result was 'false':        1511 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         4563
  BDD entailment checks:           2255
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          9
Number of abstraction locations:          55
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         30839
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 27.83
Number of irrelevant predicates:          9474 (31%)
Number of preds handled by boolean abs:   2235 (7%)
  Total number of models for allsat:      1044
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  0.989s
  Time for path formula creation:        0.909s
Time for strengthen operator:            0.086s
Time for prec operator:                  4.428s
  Time for abstraction:                  4.127s (Max:     0.029s, Count: 12986)
    Boolean abstraction:                 0.941s
    Solving time:                        0.655s (Max:     0.013s)
    Model enumeration time:              0.063s
    Time for BDD construction:           0.132s (Max:     0.012s)
Time for merge operator:                 0.031s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     0.718s

Number of path formula cache hits:   47825 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.808s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               301
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2167 (count: 11436, min: 0, max: 387, avg: 0.19)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.274s
Automaton transfers with branching:                0
Automaton transfer successors:                        49653 (count: 49653, min: 1, max: 1, avg: 1.00) [1 x 49653]

CPA algorithm statistics
------------------------
Number of iterations:            38066
Max size of waitlist:            58
Average size of waitlist:        14
Number of computed successors:   42517
Max successors for one state:    2
Number of times merged:          1154
Number of times stopped:         2020
Number of times breaked:         48

Total time for CPA algorithm:         8.367s (Max:     0.723s)
  Time for choose from waitlist:      0.135s
  Time for precision adjustment:      4.901s
  Time for transfer relation:         2.347s
  Time for merge operator:            0.110s
  Time for stop operator:             0.208s
  Time for adding to reached set:     0.164s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   48
Avg. length of target path (in blocks):                1940 (count: 48, min: 19, max: 72, avg: 40.42)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.782s
  Counterexample analysis:                             0.469s (Max:     0.021s, Calls: 48)
    Refinement sat check:                              0.236s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.045s
  Precision update:                                    0.048s
  ARG update:                                          0.192s

Length of refined path (in blocks):                    1582 (count: 48, min: 13, max: 63, avg: 32.96)
Number of affected states:                              899 (count: 48, min: 3, max: 62, avg: 18.73)
Length (states) of path with itp 'true':                635 (count: 48, min: 0, max: 45, avg: 13.23)
Length (states) of path with itp non-trivial itp:       899 (count: 48, min: 3, max: 62, avg: 18.73)
Length (states) of path with itp 'false':                48 (count: 48, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          22 (count: 48, min: 0, max: 3, avg: 0.46)
Equal non-trivial interpolants along paths:             829 (count: 48, min: 2, max: 59, avg: 17.27)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                48
Number of successful refinements:     48
Number of failed refinements:         0
Max. size of reached set before ref.: 4100
Max. size of reached set after ref.:  3740
Avg. size of reached set before ref.: 1841.19
Avg. size of reached set after ref.:  1112.27

Total time for CEGAR algorithm:       9.403s
Time for refinements:                 0.981s
Average time for refinement:          0.020s
Max time for refinement:              0.054s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          144
  Total lines:            436
  Line coverage:          0.330
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     626
Number of CFA edges:             677
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             3999
  Number of reached locations:   198 (32%)
    Avg states per location:     20
    Max states per location:     95 (at node N70)
  Number of reached functions:   25 (68%)
  Number of partitions:          3900
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N241 (before lines 442-489), Function test called from node N619, stack depth 3 [5fea6cdb], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.462s
  Time for loading CPAs:          0.599s
  Time for loading parser:        0.579s
  Time for CFA construction:      1.117s
    Time for parsing file(s):     0.381s
    Time for AST to CFA:          0.272s
    Time for CFA sanity check:    0.055s
    Time for post-processing:     0.261s
      Time for var class.:        0.128s
Time for Analysis:                9.404s
CPU time for analysis:            9.410s
Time for analyzing result:        0.002s
Total time for CPAchecker:       11.869s
Total CPU time for CPAchecker:   11.860s
Time for statistics:              0.102s

Time for Garbage Collector:       0.208s (in 23 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     39MB (    37 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     31MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     33MB (    32 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8064MB (  7690 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
