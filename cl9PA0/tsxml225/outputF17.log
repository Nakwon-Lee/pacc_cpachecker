scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product47_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1t_5rv2f/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 89: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 112: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 166: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 212: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 348: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 412: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 861: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 957: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            25601 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  25090 (98%)
  Because of loop head:            389 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         122 (0%)
  Times precision was empty:       1804 (7%)
  Times precision was {false}:     304 (1%)
  Times result was cached:         20440 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3053 (12%)
  Times result was 'false':        3542 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         14443
  BDD entailment checks:           9893
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          10
Number of abstraction locations:          55
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         80617
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 24.01
Number of irrelevant predicates:          27533 (34%)
Number of preds handled by boolean abs:   8431 (10%)
  Total number of models for allsat:      2961
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.97

Time for post operator:                  1.449s
  Time for path formula creation:        1.356s
Time for strengthen operator:            0.102s
Time for prec operator:                  7.095s
  Time for abstraction:                  6.670s (Max:     0.021s, Count: 25601)
    Boolean abstraction:                 1.640s
    Solving time:                        1.216s (Max:     0.013s)
    Model enumeration time:              0.117s
    Time for BDD construction:           0.140s (Max:     0.012s)
Time for merge operator:                 0.068s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     1.333s

Number of path formula cache hits:   78229 (69%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.190s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               453
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6496 (count: 32528, min: 0, max: 346, avg: 0.20)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.341s
Automaton transfers with branching:                0
Automaton transfer successors:                        98180 (count: 98180, min: 1, max: 1, avg: 1.00) [1 x 98180]

CPA algorithm statistics
------------------------
Number of iterations:            76523
Max size of waitlist:            69
Average size of waitlist:        22
Number of computed successors:   86917
Max successors for one state:    2
Number of times merged:          2275
Number of times stopped:         4893
Number of times breaked:         122

Total time for CPA algorithm:        11.718s (Max:     0.585s)
  Time for choose from waitlist:      0.121s
  Time for precision adjustment:      7.723s
  Time for transfer relation:         2.964s
  Time for merge operator:            0.146s
  Time for stop operator:             0.120s
  Time for adding to reached set:     0.243s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   122
Avg. length of target path (in blocks):                8160 (count: 122, min: 19, max: 111, avg: 66.89)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.402s
  Counterexample analysis:                             1.011s (Max:     0.022s, Calls: 122)
    Refinement sat check:                              0.518s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.043s
  Precision update:                                    0.095s
  ARG update:                                          0.157s

Length of refined path (in blocks):                    5804 (count: 122, min: 13, max: 88, avg: 47.57)
Number of affected states:                             1636 (count: 122, min: 3, max: 71, avg: 13.41)
Length (states) of path with itp 'true':               4046 (count: 122, min: 0, max: 84, avg: 33.16)
Length (states) of path with itp non-trivial itp:      1636 (count: 122, min: 3, max: 71, avg: 13.41)
Length (states) of path with itp 'false':               122 (count: 122, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          13 (count: 122, min: 0, max: 3, avg: 0.11)
Equal non-trivial interpolants along paths:            1501 (count: 122, min: 2, max: 70, avg: 12.30)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                122
Number of successful refinements:     122
Number of failed refinements:         0
Max. size of reached set before ref.: 4543
Max. size of reached set after ref.:  4262
Avg. size of reached set before ref.: 2082.12
Avg. size of reached set after ref.:  1457.55

Total time for CEGAR algorithm:      13.514s
Time for refinements:                 1.685s
Average time for refinement:          0.013s
Max time for refinement:              0.040s

Code Coverage
-----------------------------
  Function coverage:      0.649
  Visited lines:          128
  Total lines:            436
  Line coverage:          0.294
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     626
Number of CFA edges:             677
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             2285
  Number of reached locations:   177 (28%)
    Avg states per location:     12
    Max states per location:     49 (at node N70)
  Number of reached functions:   24 (65%)
  Number of partitions:          2239
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N241 (before lines 442-489), Function test called from node N619, stack depth 3 [188b224d], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.815s
  Time for loading CPAs:          0.456s
  Time for loading parser:        0.425s
  Time for CFA construction:      0.835s
    Time for parsing file(s):     0.320s
    Time for AST to CFA:          0.178s
    Time for CFA sanity check:    0.060s
    Time for post-processing:     0.165s
      Time for var class.:        0.062s
Time for Analysis:               13.515s
CPU time for analysis:           13.510s
Time for analyzing result:        0.001s
Total time for CPAchecker:       15.333s
Total CPU time for CPAchecker:   15.330s
Time for statistics:              0.076s

Time for Garbage Collector:       0.343s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     44MB (    42 MiB) avg;     73MB (    70 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     33MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   8008MB (  7637 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
