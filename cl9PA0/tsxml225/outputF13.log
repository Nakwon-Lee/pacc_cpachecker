scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product47_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_mb1_wg04/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 89: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 112: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 166: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 212: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 348: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 412: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 861: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 957: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            13099 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12900 (98%)
  Because of loop head:            151 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         48 (0%)
  Times precision was empty:       774 (6%)
  Times precision was {false}:     154 (1%)
  Times result was cached:         10164 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2007 (15%)
  Times result was 'false':        1604 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         4946
  BDD entailment checks:           3124
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          10
Number of abstraction locations:          55
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         42085
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 19.47
Number of irrelevant predicates:          13198 (31%)
Number of preds handled by boolean abs:   5458 (13%)
  Total number of models for allsat:      1992
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.99

Time for post operator:                  1.284s
  Time for path formula creation:        1.237s
Time for strengthen operator:            0.080s
Time for prec operator:                  6.134s
  Time for abstraction:                  5.812s (Max:     0.017s, Count: 13099)
    Boolean abstraction:                 1.466s
    Solving time:                        1.101s (Max:     0.013s)
    Model enumeration time:              0.103s
    Time for BDD construction:           0.133s (Max:     0.012s)
Time for merge operator:                 0.064s
Time for coverage check:                 0.018s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     1.204s

Number of path formula cache hits:   32514 (59%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.125s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               431
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4057 (count: 17409, min: 0, max: 380, avg: 0.23)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.278s
Automaton transfers with branching:                0
Automaton transfer successors:                        48102 (count: 48102, min: 1, max: 1, avg: 1.00) [1 x 48102]

CPA algorithm statistics
------------------------
Number of iterations:            37884
Max size of waitlist:            20
Average size of waitlist:        8
Number of computed successors:   41715
Max successors for one state:    2
Number of times merged:          911
Number of times stopped:         1954
Number of times breaked:         48

Total time for CPA algorithm:        10.173s (Max:     0.766s)
  Time for choose from waitlist:      0.060s
  Time for precision adjustment:      6.763s
  Time for transfer relation:         2.537s
  Time for merge operator:            0.145s
  Time for stop operator:             0.158s
  Time for adding to reached set:     0.171s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   48
Avg. length of target path (in blocks):                2156 (count: 48, min: 20, max: 86, avg: 44.92)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.729s
  Counterexample analysis:                             0.457s (Max:     0.025s, Calls: 48)
    Refinement sat check:                              0.198s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.037s
  Precision update:                                    0.033s
  ARG update:                                          0.133s

Length of refined path (in blocks):                    1750 (count: 48, min: 14, max: 61, avg: 36.46)
Number of affected states:                             1040 (count: 48, min: 3, max: 60, avg: 21.67)
Length (states) of path with itp 'true':                662 (count: 48, min: 0, max: 57, avg: 13.79)
Length (states) of path with itp non-trivial itp:      1040 (count: 48, min: 3, max: 60, avg: 21.67)
Length (states) of path with itp 'false':                48 (count: 48, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          16 (count: 48, min: 0, max: 2, avg: 0.33)
Equal non-trivial interpolants along paths:             976 (count: 48, min: 2, max: 58, avg: 20.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                48
Number of successful refinements:     48
Number of failed refinements:         0
Max. size of reached set before ref.: 4284
Max. size of reached set after ref.:  2729
Avg. size of reached set before ref.: 1397.85
Avg. size of reached set after ref.:  660.71

Total time for CEGAR algorithm:      11.051s
Time for refinements:                 0.856s
Average time for refinement:          0.017s
Max time for refinement:              0.073s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          144
  Total lines:            436
  Line coverage:          0.330
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     626
Number of CFA edges:             677
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             2775
  Number of reached locations:   198 (32%)
    Avg states per location:     14
    Max states per location:     66 (at node N70)
  Number of reached functions:   25 (68%)
  Number of partitions:          2696
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N241 (before lines 442-489), Function test called from node N619, stack depth 3 [139e291e], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.991s
  Time for loading CPAs:          0.586s
  Time for loading parser:        0.422s
  Time for CFA construction:      0.852s
    Time for parsing file(s):     0.292s
    Time for AST to CFA:          0.236s
    Time for CFA sanity check:    0.035s
    Time for post-processing:     0.172s
      Time for var class.:        0.057s
Time for Analysis:               11.052s
CPU time for analysis:           11.040s
Time for analyzing result:        0.003s
Total time for CPAchecker:       13.046s
Total CPU time for CPAchecker:   13.030s
Time for statistics:              0.112s

Time for Garbage Collector:       0.249s (in 25 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     42MB (    40 MiB) avg;     69MB (    65 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     32MB (    31 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8088MB (  7714 MiB) max;   8071MB (  7697 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
