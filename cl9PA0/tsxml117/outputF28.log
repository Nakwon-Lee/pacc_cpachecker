scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product29_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ydc524tr/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 186: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 241: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 470: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 493: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 542: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 574: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 583: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 903: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 949: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 740: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            6470 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6347 (98%)
  Because of loop head:            91 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         32 (0%)
  Times precision was empty:       1761 (27%)
  Times precision was {false}:     85 (1%)
  Times result was cached:         4241 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      383 (6%)
  Times result was 'false':        492 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         2978
  BDD entailment checks:           1122
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          8
Number of abstraction locations:          39
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         10465
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 22.36
Number of irrelevant predicates:          4662 (45%)
Number of preds handled by boolean abs:   859 (8%)
  Total number of models for allsat:      423
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.10

Time for post operator:                  0.705s
  Time for path formula creation:        0.675s
Time for strengthen operator:            0.047s
Time for prec operator:                  1.950s
  Time for abstraction:                  1.754s (Max:     0.014s, Count: 6470)
    Boolean abstraction:                 0.437s
    Solving time:                        0.298s (Max:     0.013s)
    Model enumeration time:              0.049s
    Time for BDD construction:           0.073s (Max:     0.008s)
Time for merge operator:                 0.027s
Time for coverage check:                 0.028s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     0.347s

Number of path formula cache hits:   22814 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.628s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               287
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         871 (count: 5759, min: 0, max: 222, avg: 0.15)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.231s
Automaton transfers with branching:                0
Automaton transfer successors:                        26635 (count: 26635, min: 1, max: 1, avg: 1.00) [1 x 26635]

CPA algorithm statistics
------------------------
Number of iterations:            20257
Max size of waitlist:            88
Average size of waitlist:        28
Number of computed successors:   23366
Max successors for one state:    2
Number of times merged:          928
Number of times stopped:         1479
Number of times breaked:         32

Total time for CPA algorithm:         4.485s (Max:     0.389s)
  Time for choose from waitlist:      0.036s
  Time for precision adjustment:      2.339s
  Time for transfer relation:         1.570s
  Time for merge operator:            0.066s
  Time for stop operator:             0.098s
  Time for adding to reached set:     0.104s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   32
Avg. length of target path (in blocks):                1066 (count: 32, min: 21, max: 59, avg: 33.31)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.407s
  Counterexample analysis:                             0.229s (Max:     0.017s, Calls: 32)
    Refinement sat check:                              0.090s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.037s
  Precision update:                                    0.014s
  ARG update:                                          0.091s

Length of refined path (in blocks):                     786 (count: 32, min: 15, max: 43, avg: 24.56)
Number of affected states:                              544 (count: 32, min: 9, max: 42, avg: 17.00)
Length (states) of path with itp 'true':                210 (count: 32, min: 0, max: 19, avg: 6.56)
Length (states) of path with itp non-trivial itp:       544 (count: 32, min: 9, max: 42, avg: 17.00)
Length (states) of path with itp 'false':                32 (count: 32, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 32, min: 0, max: 1, avg: 0.06)
Equal non-trivial interpolants along paths:             510 (count: 32, min: 8, max: 40, avg: 15.94)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                32
Number of successful refinements:     32
Number of failed refinements:         0
Max. size of reached set before ref.: 1117
Max. size of reached set after ref.:  368
Avg. size of reached set before ref.: 726.06
Avg. size of reached set after ref.:  81.72

Total time for CEGAR algorithm:       4.978s
Time for refinements:                 0.493s
Average time for refinement:          0.015s
Max time for refinement:              0.050s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          108
  Total lines:            436
  Line coverage:          0.248
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     626
Number of CFA edges:             675
Number of relevant variables:    114
Number of functions:             37
Number of loops:                 5
Size of reached set:             777
  Number of reached locations:   144 (23%)
    Avg states per location:     5
    Max states per location:     23 (at node N232)
  Number of reached functions:   18 (49%)
  Number of partitions:          772
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N124 (before lines 258-303), Function test called from node N208, stack depth 3 [3f2f6818], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.043s
  Time for loading CPAs:          0.523s
  Time for loading parser:        0.450s
  Time for CFA construction:      0.984s
    Time for parsing file(s):     0.316s
    Time for AST to CFA:          0.272s
    Time for CFA sanity check:    0.073s
    Time for post-processing:     0.219s
      Time for var class.:        0.110s
Time for Analysis:                4.982s
CPU time for analysis:            4.980s
Time for analyzing result:        0.001s
Total time for CPAchecker:        7.028s
Total CPU time for CPAchecker:    7.020s
Time for statistics:              0.065s

Time for Garbage Collector:       0.110s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     36MB (    35 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     29MB (    28 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8056MB (  7683 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
