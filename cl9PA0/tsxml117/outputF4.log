scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product29_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vadp4sp0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 186: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 241: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 470: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 493: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 542: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 574: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 583: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 903: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 949: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 740: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7094 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6937 (98%)
  Because of loop head:            124 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         33 (0%)
  Times precision was empty:       2635 (37%)
  Times precision was {false}:     92 (1%)
  Times result was cached:         3900 (55%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      467 (7%)
  Times result was 'false':        689 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         2655
  BDD entailment checks:           1301
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          8
Number of abstraction locations:          39
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         11570
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 20.70
Number of irrelevant predicates:          4229 (37%)
Number of preds handled by boolean abs:   1260 (11%)
  Total number of models for allsat:      488
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  0.732s
  Time for path formula creation:        0.668s
Time for strengthen operator:            0.052s
Time for prec operator:                  2.127s
  Time for abstraction:                  1.968s (Max:     0.014s, Count: 7094)
    Boolean abstraction:                 0.466s
    Solving time:                        0.262s (Max:     0.011s)
    Model enumeration time:              0.044s
    Time for BDD construction:           0.084s (Max:     0.010s)
Time for merge operator:                 0.031s
Time for coverage check:                 0.045s
  Time for BDD entailment checks:        0.035s
Total time for SMT solver (w/o itp):     0.306s

Number of path formula cache hits:   25484 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.620s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               351
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1180 (count: 7355, min: 0, max: 319, avg: 0.16)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.175s
Automaton transfers with branching:                0
Automaton transfer successors:                        27064 (count: 27064, min: 1, max: 1, avg: 1.00) [1 x 27064]

CPA algorithm statistics
------------------------
Number of iterations:            21584
Max size of waitlist:            21
Average size of waitlist:        8
Number of computed successors:   23975
Max successors for one state:    2
Number of times merged:          677
Number of times stopped:         1524
Number of times breaked:         33

Total time for CPA algorithm:         4.633s (Max:     0.711s)
  Time for choose from waitlist:      0.059s
  Time for precision adjustment:      2.472s
  Time for transfer relation:         1.515s
  Time for merge operator:            0.119s
  Time for stop operator:             0.120s
  Time for adding to reached set:     0.104s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   33
Avg. length of target path (in blocks):                1207 (count: 33, min: 21, max: 69, avg: 36.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.490s
  Counterexample analysis:                             0.275s (Max:     0.019s, Calls: 33)
    Refinement sat check:                              0.146s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.036s
  ARG update:                                          0.104s

Length of refined path (in blocks):                     890 (count: 33, min: 15, max: 53, avg: 26.97)
Number of affected states:                              635 (count: 33, min: 9, max: 50, avg: 19.24)
Length (states) of path with itp 'true':                222 (count: 33, min: 0, max: 37, avg: 6.73)
Length (states) of path with itp non-trivial itp:       635 (count: 33, min: 9, max: 50, avg: 19.24)
Length (states) of path with itp 'false':                33 (count: 33, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 33, min: 0, max: 1, avg: 0.12)
Equal non-trivial interpolants along paths:             598 (count: 33, min: 8, max: 48, avg: 18.12)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                33
Number of successful refinements:     33
Number of failed refinements:         0
Max. size of reached set before ref.: 1276
Max. size of reached set after ref.:  503
Avg. size of reached set before ref.: 763.09
Avg. size of reached set after ref.:  119.82

Total time for CEGAR algorithm:       5.200s
Time for refinements:                 0.556s
Average time for refinement:          0.016s
Max time for refinement:              0.069s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          108
  Total lines:            436
  Line coverage:          0.248
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     626
Number of CFA edges:             675
Number of relevant variables:    114
Number of functions:             37
Number of loops:                 5
Size of reached set:             535
  Number of reached locations:   144 (23%)
    Avg states per location:     3
    Max states per location:     14 (at node N7)
  Number of reached functions:   18 (49%)
  Number of partitions:          526
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N124 (before lines 258-303), Function test called from node N208, stack depth 3 [42cef0af], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.120s
  Time for loading CPAs:          0.524s
  Time for loading parser:        0.524s
  Time for CFA construction:      0.982s
    Time for parsing file(s):     0.340s
    Time for AST to CFA:          0.240s
    Time for CFA sanity check:    0.084s
    Time for post-processing:     0.202s
      Time for var class.:        0.083s
Time for Analysis:                5.201s
CPU time for analysis:            5.200s
Time for analyzing result:        0.000s
Total time for CPAchecker:        7.325s
Total CPU time for CPAchecker:    7.320s
Time for statistics:              0.073s

Time for Garbage Collector:       0.118s (in 14 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    55 MiB) max;     36MB (    35 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     29MB (    28 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8056MB (  7683 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
