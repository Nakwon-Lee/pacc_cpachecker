scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product29_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lxv2hexq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 186: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 241: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 470: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 493: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 542: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 574: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 583: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 903: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 949: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 740: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            8612 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8431 (98%)
  Because of loop head:            143 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         38 (0%)
  Times precision was empty:       2297 (27%)
  Times precision was {false}:     83 (1%)
  Times result was cached:         5859 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      373 (4%)
  Times result was 'false':        766 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         3046
  BDD entailment checks:           1170
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          8
Number of abstraction locations:          39
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         12743
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 27.95
Number of irrelevant predicates:          5609 (44%)
Number of preds handled by boolean abs:   808 (6%)
  Total number of models for allsat:      406
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  0.739s
  Time for path formula creation:        0.692s
Time for strengthen operator:            0.056s
Time for prec operator:                  2.270s
  Time for abstraction:                  2.086s (Max:     0.016s, Count: 8612)
    Boolean abstraction:                 0.384s
    Solving time:                        0.209s (Max:     0.013s)
    Model enumeration time:              0.028s
    Time for BDD construction:           0.111s (Max:     0.012s)
Time for merge operator:                 0.058s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.022s
Total time for SMT solver (w/o itp):     0.237s

Number of path formula cache hits:   32594 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.603s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               292
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         784 (count: 6249, min: 0, max: 215, avg: 0.13)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.217s
Automaton transfers with branching:                0
Automaton transfer successors:                        33868 (count: 33868, min: 1, max: 1, avg: 1.00) [1 x 33868]

CPA algorithm statistics
------------------------
Number of iterations:            26105
Max size of waitlist:            58
Average size of waitlist:        25
Number of computed successors:   29419
Max successors for one state:    2
Number of times merged:          938
Number of times stopped:         1539
Number of times breaked:         38

Total time for CPA algorithm:         5.035s (Max:     0.515s)
  Time for choose from waitlist:      0.048s
  Time for precision adjustment:      2.593s
  Time for transfer relation:         1.741s
  Time for merge operator:            0.114s
  Time for stop operator:             0.159s
  Time for adding to reached set:     0.141s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   38
Avg. length of target path (in blocks):                1236 (count: 38, min: 21, max: 50, avg: 32.53)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.481s
  Counterexample analysis:                             0.264s (Max:     0.018s, Calls: 38)
    Refinement sat check:                              0.133s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.032s
  Precision update:                                    0.032s
  ARG update:                                          0.105s

Length of refined path (in blocks):                     997 (count: 38, min: 15, max: 43, avg: 26.24)
Number of affected states:                              618 (count: 38, min: 9, max: 42, avg: 16.26)
Length (states) of path with itp 'true':                341 (count: 38, min: 0, max: 19, avg: 8.97)
Length (states) of path with itp non-trivial itp:       618 (count: 38, min: 9, max: 42, avg: 16.26)
Length (states) of path with itp 'false':                38 (count: 38, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 38, min: 0, max: 1, avg: 0.05)
Equal non-trivial interpolants along paths:             578 (count: 38, min: 8, max: 40, avg: 15.21)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                38
Number of successful refinements:     38
Number of failed refinements:         0
Max. size of reached set before ref.: 1522
Max. size of reached set after ref.:  999
Avg. size of reached set before ref.: 951.55
Avg. size of reached set after ref.:  258.08

Total time for CEGAR algorithm:       5.622s
Time for refinements:                 0.580s
Average time for refinement:          0.015s
Max time for refinement:              0.050s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          108
  Total lines:            436
  Line coverage:          0.248
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     626
Number of CFA edges:             675
Number of relevant variables:    114
Number of functions:             37
Number of loops:                 5
Size of reached set:             763
  Number of reached locations:   144 (23%)
    Avg states per location:     5
    Max states per location:     22 (at node N232)
  Number of reached functions:   18 (49%)
  Number of partitions:          758
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N124 (before lines 258-303), Function test called from node N208, stack depth 3 [7e2cebdf], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.030s
  Time for loading CPAs:          0.514s
  Time for loading parser:        0.471s
  Time for CFA construction:      0.939s
    Time for parsing file(s):     0.354s
    Time for AST to CFA:          0.201s
    Time for CFA sanity check:    0.066s
    Time for post-processing:     0.206s
      Time for var class.:        0.081s
Time for Analysis:                5.622s
CPU time for analysis:            5.630s
Time for analyzing result:        0.000s
Total time for CPAchecker:        7.655s
Total CPU time for CPAchecker:    7.660s
Time for statistics:              0.059s

Time for Garbage Collector:       0.119s (in 14 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    58 MiB) max;     38MB (    36 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8057MB (  7684 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
