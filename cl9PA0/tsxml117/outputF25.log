scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product29_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7ml6ua0j/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 186: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 241: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 470: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 493: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 542: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 574: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 583: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 903: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 949: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 740: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            6712 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6581 (98%)
  Because of loop head:            104 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         27 (0%)
  Times precision was empty:       1776 (26%)
  Times precision was {false}:     80 (1%)
  Times result was cached:         4517 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      339 (5%)
  Times result was 'false':        439 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         3049
  BDD entailment checks:           1141
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          39
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         11477
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 27.39
Number of irrelevant predicates:          5272 (46%)
Number of preds handled by boolean abs:   702 (6%)
  Total number of models for allsat:      380
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.12

Time for post operator:                  0.741s
  Time for path formula creation:        0.688s
Time for strengthen operator:            0.053s
Time for prec operator:                  1.938s
  Time for abstraction:                  1.759s (Max:     0.014s, Count: 6712)
    Boolean abstraction:                 0.336s
    Solving time:                        0.196s (Max:     0.009s)
    Model enumeration time:              0.015s
    Time for BDD construction:           0.065s (Max:     0.011s)
Time for merge operator:                 0.042s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.022s
Total time for SMT solver (w/o itp):     0.211s

Number of path formula cache hits:   25194 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.585s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               269
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         702 (count: 5455, min: 0, max: 228, avg: 0.13)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.132s
Automaton transfers with branching:                0
Automaton transfer successors:                        27609 (count: 27609, min: 1, max: 1, avg: 1.00) [1 x 27609]

CPA algorithm statistics
------------------------
Number of iterations:            21033
Max size of waitlist:            78
Average size of waitlist:        30
Number of computed successors:   24230
Max successors for one state:    2
Number of times merged:          954
Number of times stopped:         1519
Number of times breaked:         27

Total time for CPA algorithm:         4.446s (Max:     0.371s)
  Time for choose from waitlist:      0.084s
  Time for precision adjustment:      2.311s
  Time for transfer relation:         1.431s
  Time for merge operator:            0.116s
  Time for stop operator:             0.109s
  Time for adding to reached set:     0.071s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   27
Avg. length of target path (in blocks):                 850 (count: 27, min: 21, max: 44, avg: 31.48)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.341s
  Counterexample analysis:                             0.176s (Max:     0.017s, Calls: 27)
    Refinement sat check:                              0.086s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.016s
  Precision update:                                    0.034s
  ARG update:                                          0.087s

Length of refined path (in blocks):                     644 (count: 27, min: 15, max: 43, avg: 23.85)
Number of affected states:                              476 (count: 27, min: 9, max: 42, avg: 17.63)
Length (states) of path with itp 'true':                141 (count: 27, min: 0, max: 19, avg: 5.22)
Length (states) of path with itp non-trivial itp:       476 (count: 27, min: 9, max: 42, avg: 17.63)
Length (states) of path with itp 'false':                27 (count: 27, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 27, min: 0, max: 1, avg: 0.11)
Equal non-trivial interpolants along paths:             446 (count: 27, min: 8, max: 40, avg: 16.52)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                27
Number of successful refinements:     27
Number of failed refinements:         0
Max. size of reached set before ref.: 1238
Max. size of reached set after ref.:  285
Avg. size of reached set before ref.: 862.59
Avg. size of reached set after ref.:  65.96

Total time for CEGAR algorithm:       4.852s
Time for refinements:                 0.405s
Average time for refinement:          0.015s
Max time for refinement:              0.038s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          108
  Total lines:            436
  Line coverage:          0.248
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     626
Number of CFA edges:             675
Number of relevant variables:    114
Number of functions:             37
Number of loops:                 5
Size of reached set:             764
  Number of reached locations:   144 (23%)
    Avg states per location:     5
    Max states per location:     24 (at node N232)
  Number of reached functions:   18 (49%)
  Number of partitions:          758
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N124 (before lines 258-303), Function test called from node N208, stack depth 3 [56a34c0e], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.211s
  Time for loading CPAs:          0.565s
  Time for loading parser:        0.459s
  Time for CFA construction:      1.051s
    Time for parsing file(s):     0.347s
    Time for AST to CFA:          0.295s
    Time for CFA sanity check:    0.080s
    Time for post-processing:     0.207s
      Time for var class.:        0.090s
Time for Analysis:                4.852s
CPU time for analysis:            4.850s
Time for analyzing result:        0.001s
Total time for CPAchecker:        7.066s
Total CPU time for CPAchecker:    7.050s
Time for statistics:              0.077s

Time for Garbage Collector:       0.113s (in 14 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     36MB (    34 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     29MB (    28 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8055MB (  7682 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
