scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product29_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pqow5avw/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 186: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 241: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 470: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 493: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 542: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 574: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 583: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 903: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 949: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 740: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4606 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4521 (98%)
  Because of loop head:            61 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24 (1%)
  Times precision was empty:       1537 (33%)
  Times precision was {false}:     77 (2%)
  Times result was cached:         2719 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      273 (6%)
  Times result was 'false':        415 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         1512
  BDD entailment checks:           620
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          39
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         8017
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 22.91
Number of irrelevant predicates:          3784 (47%)
Number of preds handled by boolean abs:   599 (7%)
  Total number of models for allsat:      303
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.11

Time for post operator:                  0.535s
  Time for path formula creation:        0.508s
Time for strengthen operator:            0.073s
Time for prec operator:                  1.422s
  Time for abstraction:                  1.275s (Max:     0.017s, Count: 4606)
    Boolean abstraction:                 0.267s
    Solving time:                        0.124s (Max:     0.009s)
    Model enumeration time:              0.029s
    Time for BDD construction:           0.087s (Max:     0.010s)
Time for merge operator:                 0.043s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     0.153s

Number of path formula cache hits:   15244 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.467s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               264
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         696 (count: 4275, min: 0, max: 186, avg: 0.16)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.142s
Automaton transfers with branching:                0
Automaton transfer successors:                        17407 (count: 17407, min: 1, max: 1, avg: 1.00) [1 x 17407]

CPA algorithm statistics
------------------------
Number of iterations:            13922
Max size of waitlist:            19
Average size of waitlist:        9
Number of computed successors:   15492
Max successors for one state:    2
Number of times merged:          446
Number of times stopped:         945
Number of times breaked:         24

Total time for CPA algorithm:         3.475s (Max:     0.649s)
  Time for choose from waitlist:      0.065s
  Time for precision adjustment:      1.721s
  Time for transfer relation:         1.211s
  Time for merge operator:            0.117s
  Time for stop operator:             0.100s
  Time for adding to reached set:     0.070s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                1029 (count: 24, min: 28, max: 69, avg: 42.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.377s
  Counterexample analysis:                             0.204s (Max:     0.021s, Calls: 24)
    Refinement sat check:                              0.113s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.036s
  Precision update:                                    0.050s
  ARG update:                                          0.074s

Length of refined path (in blocks):                     737 (count: 24, min: 16, max: 53, avg: 30.71)
Number of affected states:                              545 (count: 24, min: 13, max: 50, avg: 22.71)
Length (states) of path with itp 'true':                168 (count: 24, min: 0, max: 37, avg: 7.00)
Length (states) of path with itp non-trivial itp:       545 (count: 24, min: 13, max: 50, avg: 22.71)
Length (states) of path with itp 'false':                24 (count: 24, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 24, min: 0, max: 1, avg: 0.21)
Equal non-trivial interpolants along paths:             516 (count: 24, min: 12, max: 48, avg: 21.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 1096
Max. size of reached set after ref.:  479
Avg. size of reached set before ref.: 677.75
Avg. size of reached set after ref.:  109.83

Total time for CEGAR algorithm:       3.903s
Time for refinements:                 0.426s
Average time for refinement:          0.017s
Max time for refinement:              0.046s

Code Coverage
-----------------------------
  Function coverage:      0.459
  Visited lines:          92
  Total lines:            436
  Line coverage:          0.211
  Visited conditions:     30
  Total conditions:       72
  Condition coverage:     0.417

CPAchecker general statistics
-----------------------------
Number of program locations:     626
Number of CFA edges:             675
Number of relevant variables:    114
Number of functions:             37
Number of loops:                 5
Size of reached set:             503
  Number of reached locations:   123 (20%)
    Avg states per location:     4
    Max states per location:     16 (at node N232)
  Number of reached functions:   17 (46%)
  Number of partitions:          498
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N124 (before lines 258-303), Function test called from node N208, stack depth 3 [1fec9d33], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.232s
  Time for loading CPAs:          0.543s
  Time for loading parser:        0.514s
  Time for CFA construction:      1.015s
    Time for parsing file(s):     0.296s
    Time for AST to CFA:          0.276s
    Time for CFA sanity check:    0.058s
    Time for post-processing:     0.249s
      Time for var class.:        0.097s
Time for Analysis:                3.911s
CPU time for analysis:            3.920s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.146s
Total CPU time for CPAchecker:    6.150s
Time for statistics:              0.057s

Time for Garbage Collector:       0.106s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     36MB (    35 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     28MB (    27 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8048MB (  7676 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
