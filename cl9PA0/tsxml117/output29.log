scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product29_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fx4te3xe/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 186: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 241: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 470: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 493: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 542: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 574: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 583: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 903: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 949: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 740: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2572 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2480 (96%)
  Because of loop head:            66 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         26 (1%)
  Times precision was empty:       456 (18%)
  Times precision was {false}:     71 (3%)
  Times result was cached:         1763 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      282 (11%)
  Times result was 'false':        364 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         849
  BDD entailment checks:           337
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          39
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         6072
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 17.20
Number of irrelevant predicates:          1559 (26%)
Number of preds handled by boolean abs:   666 (11%)
  Total number of models for allsat:      307
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  0.419s
  Time for path formula creation:        0.398s
Time for strengthen operator:            0.041s
Time for prec operator:                  1.279s
  Time for abstraction:                  1.150s (Max:     0.016s, Count: 2572)
    Boolean abstraction:                 0.244s
    Solving time:                        0.157s (Max:     0.009s)
    Model enumeration time:              0.029s
    Time for BDD construction:           0.027s (Max:     0.008s)
Time for merge operator:                 0.015s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):     0.186s

Number of path formula cache hits:   8686 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.370s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               288
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         684 (count: 2957, min: 0, max: 352, avg: 0.23)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.097s
Automaton transfers with branching:                0
Automaton transfer successors:                         9994 (count: 9994, min: 1, max: 1, avg: 1.00) [1 x 9994]

CPA algorithm statistics
------------------------
Number of iterations:            7879
Max size of waitlist:            11
Average size of waitlist:        5
Number of computed successors:   8812
Max successors for one state:    2
Number of times merged:          256
Number of times stopped:         423
Number of times breaked:         26

Total time for CPA algorithm:         2.699s (Max:     0.227s)
  Time for choose from waitlist:      0.063s
  Time for precision adjustment:      1.443s
  Time for transfer relation:         0.872s
  Time for merge operator:            0.037s
  Time for stop operator:             0.078s
  Time for adding to reached set:     0.074s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   26
Avg. length of target path (in blocks):                 913 (count: 26, min: 21, max: 69, avg: 35.12)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.352s
  Counterexample analysis:                             0.208s (Max:     0.021s, Calls: 26)
    Refinement sat check:                              0.097s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.027s
  ARG update:                                          0.077s

Length of refined path (in blocks):                     710 (count: 26, min: 15, max: 53, avg: 27.31)
Number of affected states:                              512 (count: 26, min: 9, max: 50, avg: 19.69)
Length (states) of path with itp 'true':                172 (count: 26, min: 0, max: 37, avg: 6.62)
Length (states) of path with itp non-trivial itp:       512 (count: 26, min: 9, max: 50, avg: 19.69)
Length (states) of path with itp 'false':                26 (count: 26, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 26, min: 0, max: 1, avg: 0.15)
Equal non-trivial interpolants along paths:             482 (count: 26, min: 8, max: 48, avg: 18.54)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                26
Number of successful refinements:     26
Number of failed refinements:         0
Max. size of reached set before ref.: 563
Max. size of reached set after ref.:  376
Avg. size of reached set before ref.: 348.38
Avg. size of reached set after ref.:  61.88

Total time for CEGAR algorithm:       3.111s
Time for refinements:                 0.405s
Average time for refinement:          0.015s
Max time for refinement:              0.046s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          108
  Total lines:            436
  Line coverage:          0.248
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     626
Number of CFA edges:             675
Number of relevant variables:    114
Number of functions:             37
Number of loops:                 5
Size of reached set:             577
  Number of reached locations:   144 (23%)
    Avg states per location:     4
    Max states per location:     16 (at node N7)
  Number of reached functions:   18 (49%)
  Number of partitions:          571
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N124 (before lines 258-303), Function test called from node N208, stack depth 3 [183fc2fa], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.190s
  Time for loading CPAs:          0.562s
  Time for loading parser:        0.513s
  Time for CFA construction:      0.947s
    Time for parsing file(s):     0.289s
    Time for AST to CFA:          0.262s
    Time for CFA sanity check:    0.084s
    Time for post-processing:     0.193s
      Time for var class.:        0.079s
Time for Analysis:                3.112s
CPU time for analysis:            3.110s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.306s
Total CPU time for CPAchecker:    5.300s
Time for statistics:              0.071s

Time for Garbage Collector:       0.096s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    54 MiB) max;     34MB (    32 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    26 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8044MB (  7671 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
