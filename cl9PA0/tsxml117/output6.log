scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product29_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3l16rutl/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 186: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 241: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 470: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 493: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 542: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 574: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 583: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 903: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 949: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 740: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            5326 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5202 (98%)
  Because of loop head:            87 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         37 (1%)
  Times precision was empty:       1021 (19%)
  Times precision was {false}:     88 (2%)
  Times result was cached:         3697 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      520 (10%)
  Times result was 'false':        686 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         2133
  BDD entailment checks:           857
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          8
Number of abstraction locations:          39
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         12895
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 21.21
Number of irrelevant predicates:          3861 (30%)
Number of preds handled by boolean abs:   1524 (12%)
  Total number of models for allsat:      562
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  0.634s
  Time for path formula creation:        0.562s
Time for strengthen operator:            0.092s
Time for prec operator:                  2.321s
  Time for abstraction:                  2.126s (Max:     0.019s, Count: 5326)
    Boolean abstraction:                 0.495s
    Solving time:                        0.298s (Max:     0.012s)
    Model enumeration time:              0.043s
    Time for BDD construction:           0.076s (Max:     0.009s)
Time for merge operator:                 0.024s
Time for coverage check:                 0.027s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     0.341s

Number of path formula cache hits:   19730 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.499s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               366
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1263 (count: 5598, min: 0, max: 323, avg: 0.23)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.140s
Automaton transfers with branching:                0
Automaton transfer successors:                        21656 (count: 21656, min: 1, max: 1, avg: 1.00) [1 x 21656]

CPA algorithm statistics
------------------------
Number of iterations:            16600
Max size of waitlist:            46
Average size of waitlist:        11
Number of computed successors:   18814
Max successors for one state:    2
Number of times merged:          638
Number of times stopped:         1012
Number of times breaked:         37

Total time for CPA algorithm:         4.617s (Max:     0.385s)
  Time for choose from waitlist:      0.046s
  Time for precision adjustment:      2.630s
  Time for transfer relation:         1.398s
  Time for merge operator:            0.081s
  Time for stop operator:             0.121s
  Time for adding to reached set:     0.112s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   37
Avg. length of target path (in blocks):                1387 (count: 37, min: 21, max: 69, avg: 37.49)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.526s
  Counterexample analysis:                             0.319s (Max:     0.019s, Calls: 37)
    Refinement sat check:                              0.108s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.030s
  Precision update:                                    0.036s
  ARG update:                                          0.109s

Length of refined path (in blocks):                    1017 (count: 37, min: 15, max: 53, avg: 27.49)
Number of affected states:                              695 (count: 37, min: 9, max: 50, avg: 18.78)
Length (states) of path with itp 'true':                285 (count: 37, min: 0, max: 37, avg: 7.70)
Length (states) of path with itp non-trivial itp:       695 (count: 37, min: 9, max: 50, avg: 18.78)
Length (states) of path with itp 'false':                37 (count: 37, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 37, min: 0, max: 1, avg: 0.14)
Equal non-trivial interpolants along paths:             653 (count: 37, min: 8, max: 48, avg: 17.65)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                37
Number of successful refinements:     37
Number of failed refinements:         0
Max. size of reached set before ref.: 822
Max. size of reached set after ref.:  455
Avg. size of reached set before ref.: 562.27
Avg. size of reached set after ref.:  118.30

Total time for CEGAR algorithm:       5.241s
Time for refinements:                 0.608s
Average time for refinement:          0.016s
Max time for refinement:              0.045s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          108
  Total lines:            436
  Line coverage:          0.248
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     626
Number of CFA edges:             675
Number of relevant variables:    114
Number of functions:             37
Number of loops:                 5
Size of reached set:             690
  Number of reached locations:   144 (23%)
    Avg states per location:     4
    Max states per location:     18 (at node N7)
  Number of reached functions:   18 (49%)
  Number of partitions:          677
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N124 (before lines 258-303), Function test called from node N208, stack depth 3 [727de450], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.215s
  Time for loading CPAs:          0.514s
  Time for loading parser:        0.526s
  Time for CFA construction:      0.993s
    Time for parsing file(s):     0.351s
    Time for AST to CFA:          0.223s
    Time for CFA sanity check:    0.066s
    Time for post-processing:     0.236s
      Time for var class.:        0.114s
Time for Analysis:                5.241s
CPU time for analysis:            5.230s
Time for analyzing result:        0.001s
Total time for CPAchecker:        7.459s
Total CPU time for CPAchecker:    7.450s
Time for statistics:              0.050s

Time for Garbage Collector:       0.128s (in 12 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     38MB (    36 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    28 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   7994MB (  7624 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
