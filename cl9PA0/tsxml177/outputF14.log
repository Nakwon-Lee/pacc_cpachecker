scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product18_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hjl5qlsk/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 80: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 103: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 204: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 298: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 362: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 757: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 861: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 893: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 902: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 594: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1918 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1842 (96%)
  Because of loop head:            55 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         21 (1%)
  Times precision was empty:       297 (15%)
  Times precision was {false}:     65 (3%)
  Times result was cached:         1370 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      186 (10%)
  Times result was 'false':        284 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         438
  BDD entailment checks:           226
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          36
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         4130
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 16.45
Number of irrelevant predicates:          1022 (25%)
Number of preds handled by boolean abs:   373 (9%)
  Total number of models for allsat:      203
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  0.262s
  Time for path formula creation:        0.253s
Time for strengthen operator:            0.032s
Time for prec operator:                  0.959s
  Time for abstraction:                  0.896s (Max:     0.017s, Count: 1918)
    Boolean abstraction:                 0.190s
    Solving time:                        0.128s (Max:     0.013s)
    Model enumeration time:              0.008s
    Time for BDD construction:           0.037s (Max:     0.008s)
Time for merge operator:                 0.007s
Time for coverage check:                 0.013s
  Time for BDD entailment checks:        0.013s
Total time for SMT solver (w/o itp):     0.136s

Number of path formula cache hits:   6523 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.241s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               246
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         363 (count: 2079, min: 0, max: 235, avg: 0.17)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.070s
Automaton transfers with branching:                0
Automaton transfer successors:                         7041 (count: 7041, min: 1, max: 1, avg: 1.00) [1 x 7041]

CPA algorithm statistics
------------------------
Number of iterations:            5497
Max size of waitlist:            11
Average size of waitlist:        5
Number of computed successors:   6134
Max successors for one state:    2
Number of times merged:          106
Number of times stopped:         216
Number of times breaked:         21

Total time for CPA algorithm:         2.078s (Max:     0.220s)
  Time for choose from waitlist:      0.023s
  Time for precision adjustment:      1.160s
  Time for transfer relation:         0.688s
  Time for merge operator:            0.037s
  Time for stop operator:             0.036s
  Time for adding to reached set:     0.043s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   21
Avg. length of target path (in blocks):                 593 (count: 21, min: 19, max: 46, avg: 28.24)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.260s
  Counterexample analysis:                             0.172s (Max:     0.017s, Calls: 21)
    Refinement sat check:                              0.064s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.009s
  ARG update:                                          0.036s

Length of refined path (in blocks):                     464 (count: 21, min: 13, max: 43, avg: 22.10)
Number of affected states:                              405 (count: 21, min: 2, max: 42, avg: 19.29)
Length (states) of path with itp 'true':                 38 (count: 21, min: 0, max: 13, avg: 1.81)
Length (states) of path with itp non-trivial itp:       405 (count: 21, min: 2, max: 42, avg: 19.29)
Length (states) of path with itp 'false':                21 (count: 21, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           6 (count: 21, min: 0, max: 1, avg: 0.29)
Equal non-trivial interpolants along paths:             378 (count: 21, min: 1, max: 40, avg: 18.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                21
Number of successful refinements:     21
Number of failed refinements:         0
Max. size of reached set before ref.: 622
Max. size of reached set after ref.:  185
Avg. size of reached set before ref.: 256.05
Avg. size of reached set after ref.:  22.24

Total time for CEGAR algorithm:       2.396s
Time for refinements:                 0.318s
Average time for refinement:          0.015s
Max time for refinement:              0.044s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          99
  Total lines:            418
  Line coverage:          0.237
  Visited conditions:     28
  Total conditions:       64
  Condition coverage:     0.438

CPAchecker general statistics
-----------------------------
Number of program locations:     594
Number of CFA edges:             635
Number of relevant variables:    109
Number of functions:             35
Number of loops:                 5
Size of reached set:             725
  Number of reached locations:   131 (22%)
    Avg states per location:     5
    Max states per location:     28 (at node N0)
  Number of reached functions:   17 (49%)
  Number of partitions:          715
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N208 (before lines 384-431), Function test called from node N85, stack depth 3 [1a0d96a5], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.102s
  Time for loading CPAs:          0.533s
  Time for loading parser:        0.493s
  Time for CFA construction:      0.999s
    Time for parsing file(s):     0.351s
    Time for AST to CFA:          0.269s
    Time for CFA sanity check:    0.069s
    Time for post-processing:     0.185s
      Time for var class.:        0.078s
Time for Analysis:                2.396s
CPU time for analysis:            2.400s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.501s
Total CPU time for CPAchecker:    4.500s
Time for statistics:              0.067s

Time for Garbage Collector:       0.086s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    54 MiB) max;     34MB (    32 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     26MB (    25 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8038MB (  7666 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
