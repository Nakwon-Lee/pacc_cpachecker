scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ixucizx7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 275: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 310: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 630: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 883: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 938: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 467: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            18380 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  17979 (98%)
  Because of loop head:            322 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         79 (0%)
  Times precision was empty:       1715 (9%)
  Times precision was {false}:     200 (1%)
  Times result was cached:         14657 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1808 (10%)
  Times result was 'false':        2895 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         10378
  BDD entailment checks:           5722
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          10
Number of abstraction locations:          49
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         58629
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 29.20
Number of irrelevant predicates:          22549 (38%)
Number of preds handled by boolean abs:   4783 (8%)
  Total number of models for allsat:      1786
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.99

Time for post operator:                  1.384s
  Time for path formula creation:        1.318s
Time for strengthen operator:            0.123s
Time for prec operator:                  6.162s
  Time for abstraction:                  5.797s (Max:     0.022s, Count: 18380)
    Boolean abstraction:                 1.260s
    Solving time:                        0.927s (Max:     0.013s)
    Model enumeration time:              0.065s
    Time for BDD construction:           0.145s (Max:     0.011s)
Time for merge operator:                 0.041s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     0.992s

Number of path formula cache hits:   65164 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.170s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               452
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3963 (count: 20476, min: 0, max: 339, avg: 0.19)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.344s
Automaton transfers with branching:                0
Automaton transfer successors:                        72361 (count: 72361, min: 1, max: 1, avg: 1.00) [1 x 72361]

CPA algorithm statistics
------------------------
Number of iterations:            55481
Max size of waitlist:            54
Average size of waitlist:        19
Number of computed successors:   63720
Max successors for one state:    2
Number of times merged:          2328
Number of times stopped:         3747
Number of times breaked:         79

Total time for CPA algorithm:        10.617s (Max:     0.454s)
  Time for choose from waitlist:      0.112s
  Time for precision adjustment:      6.640s
  Time for transfer relation:         2.954s
  Time for merge operator:            0.188s
  Time for stop operator:             0.140s
  Time for adding to reached set:     0.115s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   79
Avg. length of target path (in blocks):                4196 (count: 79, min: 19, max: 94, avg: 53.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.253s
  Counterexample analysis:                             0.813s (Max:     0.030s, Calls: 79)
    Refinement sat check:                              0.387s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.076s
  Precision update:                                    0.103s
  ARG update:                                          0.200s

Length of refined path (in blocks):                    3248 (count: 79, min: 13, max: 77, avg: 41.11)
Number of affected states:                             1858 (count: 79, min: 7, max: 65, avg: 23.52)
Length (states) of path with itp 'true':               1311 (count: 79, min: 0, max: 68, avg: 16.59)
Length (states) of path with itp non-trivial itp:      1858 (count: 79, min: 7, max: 65, avg: 23.52)
Length (states) of path with itp 'false':                79 (count: 79, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          25 (count: 79, min: 0, max: 3, avg: 0.32)
Equal non-trivial interpolants along paths:            1754 (count: 79, min: 5, max: 64, avg: 22.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                79
Number of successful refinements:     79
Number of failed refinements:         0
Max. size of reached set before ref.: 2409
Max. size of reached set after ref.:  1801
Avg. size of reached set before ref.: 1128.18
Avg. size of reached set after ref.:  434.10

Total time for CEGAR algorithm:      12.071s
Time for refinements:                 1.430s
Average time for refinement:          0.018s
Max time for refinement:              0.055s

Code Coverage
-----------------------------
  Function coverage:      0.639
  Visited lines:          123
  Total lines:            431
  Line coverage:          0.285
  Visited conditions:     40
  Total conditions:       72
  Condition coverage:     0.556

CPAchecker general statistics
-----------------------------
Number of program locations:     616
Number of CFA edges:             665
Number of relevant variables:    113
Number of functions:             36
Number of loops:                 5
Size of reached set:             2247
  Number of reached locations:   168 (27%)
    Avg states per location:     13
    Max states per location:     50 (at node N25)
  Number of reached functions:   23 (64%)
  Number of partitions:          2202
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N482 (before lines 690-735), Function test called from node N130, stack depth 3 [232a0cfd], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.278s
  Time for loading CPAs:          0.595s
  Time for loading parser:        0.494s
  Time for CFA construction:      1.066s
    Time for parsing file(s):     0.386s
    Time for AST to CFA:          0.264s
    Time for CFA sanity check:    0.067s
    Time for post-processing:     0.232s
      Time for var class.:        0.103s
Time for Analysis:               12.071s
CPU time for analysis:           12.070s
Time for analyzing result:        0.002s
Total time for CPAchecker:       14.352s
Total CPU time for CPAchecker:   14.350s
Time for statistics:              0.094s

Time for Garbage Collector:       0.297s (in 33 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     41MB (    39 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8069MB (  7695 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
