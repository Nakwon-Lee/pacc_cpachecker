scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_j_90pd6o/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 275: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 310: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 630: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 883: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 938: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 467: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            20958 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20555 (98%)
  Because of loop head:            319 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         84 (0%)
  Times precision was empty:       1973 (9%)
  Times precision was {false}:     181 (1%)
  Times result was cached:         17299 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1505 (7%)
  Times result was 'false':        3399 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         10639
  BDD entailment checks:           5741
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          10
Number of abstraction locations:          51
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         63929
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 37.92
Number of irrelevant predicates:          26322 (41%)
Number of preds handled by boolean abs:   3893 (6%)
  Total number of models for allsat:      1560
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  1.251s
  Time for path formula creation:        1.208s
Time for strengthen operator:            0.109s
Time for prec operator:                  5.147s
  Time for abstraction:                  4.880s (Max:     0.020s, Count: 20958)
    Boolean abstraction:                 0.975s
    Solving time:                        0.680s (Max:     0.013s)
    Model enumeration time:              0.050s
    Time for BDD construction:           0.128s (Max:     0.012s)
Time for merge operator:                 0.055s
Time for coverage check:                 0.053s
  Time for BDD entailment checks:        0.050s
Total time for SMT solver (w/o itp):     0.730s

Number of path formula cache hits:   73112 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.058s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               434
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3493 (count: 18837, min: 0, max: 404, avg: 0.19)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.315s
Automaton transfers with branching:                0
Automaton transfer successors:                        81804 (count: 81804, min: 1, max: 1, avg: 1.00) [1 x 81804]

CPA algorithm statistics
------------------------
Number of iterations:            62069
Max size of waitlist:            57
Average size of waitlist:        19
Number of computed successors:   71292
Max successors for one state:    2
Number of times merged:          2449
Number of times stopped:         4066
Number of times breaked:         84

Total time for CPA algorithm:         9.624s (Max:     0.427s)
  Time for choose from waitlist:      0.161s
  Time for precision adjustment:      5.714s
  Time for transfer relation:         2.701s
  Time for merge operator:            0.159s
  Time for stop operator:             0.210s
  Time for adding to reached set:     0.186s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   84
Avg. length of target path (in blocks):                4493 (count: 84, min: 19, max: 109, avg: 53.49)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.105s
  Counterexample analysis:                             0.702s (Max:     0.020s, Calls: 84)
    Refinement sat check:                              0.295s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.057s
  Precision update:                                    0.064s
  ARG update:                                          0.186s

Length of refined path (in blocks):                    3268 (count: 84, min: 13, max: 75, avg: 38.90)
Number of affected states:                             1923 (count: 84, min: 7, max: 63, avg: 22.89)
Length (states) of path with itp 'true':               1261 (count: 84, min: 0, max: 53, avg: 15.01)
Length (states) of path with itp non-trivial itp:      1923 (count: 84, min: 7, max: 63, avg: 22.89)
Length (states) of path with itp 'false':                84 (count: 84, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          22 (count: 84, min: 0, max: 3, avg: 0.26)
Equal non-trivial interpolants along paths:            1817 (count: 84, min: 5, max: 62, avg: 21.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                84
Number of successful refinements:     84
Number of failed refinements:         0
Max. size of reached set before ref.: 2298
Max. size of reached set after ref.:  1367
Avg. size of reached set before ref.: 1079.89
Avg. size of reached set after ref.:  348.70

Total time for CEGAR algorithm:      10.924s
Time for refinements:                 1.270s
Average time for refinement:          0.015s
Max time for refinement:              0.052s

Code Coverage
-----------------------------
  Function coverage:      0.639
  Visited lines:          123
  Total lines:            431
  Line coverage:          0.285
  Visited conditions:     40
  Total conditions:       72
  Condition coverage:     0.556

CPAchecker general statistics
-----------------------------
Number of program locations:     616
Number of CFA edges:             665
Number of relevant variables:    113
Number of functions:             36
Number of loops:                 5
Size of reached set:             2408
  Number of reached locations:   168 (27%)
    Avg states per location:     14
    Max states per location:     54 (at node N25)
  Number of reached functions:   23 (64%)
  Number of partitions:          2336
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N482 (before lines 690-735), Function test called from node N130, stack depth 3 [797f26ce], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.256s
  Time for loading CPAs:          0.545s
  Time for loading parser:        0.570s
  Time for CFA construction:      1.033s
    Time for parsing file(s):     0.336s
    Time for AST to CFA:          0.256s
    Time for CFA sanity check:    0.090s
    Time for post-processing:     0.236s
      Time for var class.:        0.107s
Time for Analysis:               10.924s
CPU time for analysis:           10.920s
Time for analyzing result:        0.001s
Total time for CPAchecker:       13.183s
Total CPU time for CPAchecker:   13.180s
Time for statistics:              0.099s

Time for Garbage Collector:       0.274s (in 36 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     41MB (    39 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8066MB (  7693 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
