scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bsoj3wdt/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 275: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 310: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 630: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 883: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 938: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 467: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            15920 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15558 (98%)
  Because of loop head:            291 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         71 (0%)
  Times precision was empty:       876 (6%)
  Times precision was {false}:     183 (1%)
  Times result was cached:         12511 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2350 (15%)
  Times result was 'false':        2366 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         9833
  BDD entailment checks:           5815
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          10
Number of abstraction locations:          52
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         50864
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 20.08
Number of irrelevant predicates:          14813 (29%)
Number of preds handled by boolean abs:   6495 (13%)
  Total number of models for allsat:      2192
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.93

Time for post operator:                  1.176s
  Time for path formula creation:        1.119s
Time for strengthen operator:            0.073s
Time for prec operator:                  6.443s
  Time for abstraction:                  6.037s (Max:     0.021s, Count: 15920)
    Boolean abstraction:                 1.575s
    Solving time:                        1.178s (Max:     0.013s)
    Model enumeration time:              0.124s
    Time for BDD construction:           0.147s (Max:     0.010s)
Time for merge operator:                 0.061s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     1.302s

Number of path formula cache hits:   51233 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.000s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               450
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5044 (count: 22516, min: 0, max: 449, avg: 0.22)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.247s
Automaton transfers with branching:                0
Automaton transfer successors:                        62686 (count: 62686, min: 1, max: 1, avg: 1.00) [1 x 62686]

CPA algorithm statistics
------------------------
Number of iterations:            48101
Max size of waitlist:            55
Average size of waitlist:        23
Number of computed successors:   54920
Max successors for one state:    2
Number of times merged:          2009
Number of times stopped:         3065
Number of times breaked:         71

Total time for CPA algorithm:        10.490s (Max:     0.574s)
  Time for choose from waitlist:      0.100s
  Time for precision adjustment:      6.891s
  Time for transfer relation:         2.562s
  Time for merge operator:            0.170s
  Time for stop operator:             0.159s
  Time for adding to reached set:     0.171s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   71
Avg. length of target path (in blocks):                4453 (count: 71, min: 19, max: 136, avg: 62.72)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.106s
  Counterexample analysis:                             0.749s (Max:     0.030s, Calls: 71)
    Refinement sat check:                              0.354s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.068s
  Precision update:                                    0.084s
  ARG update:                                          0.146s

Length of refined path (in blocks):                    3631 (count: 71, min: 13, max: 128, avg: 51.14)
Number of affected states:                             1459 (count: 71, min: 8, max: 92, avg: 20.55)
Length (states) of path with itp 'true':               2101 (count: 71, min: 0, max: 116, avg: 29.59)
Length (states) of path with itp non-trivial itp:      1459 (count: 71, min: 8, max: 92, avg: 20.55)
Length (states) of path with itp 'false':                71 (count: 71, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          11 (count: 71, min: 0, max: 3, avg: 0.15)
Equal non-trivial interpolants along paths:            1377 (count: 71, min: 7, max: 91, avg: 19.39)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                71
Number of successful refinements:     71
Number of failed refinements:         0
Max. size of reached set before ref.: 4472
Max. size of reached set after ref.:  3735
Avg. size of reached set before ref.: 1846.07
Avg. size of reached set after ref.:  1192.59

Total time for CEGAR algorithm:      11.878s
Time for refinements:                 1.313s
Average time for refinement:          0.018s
Max time for refinement:              0.040s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          139
  Total lines:            431
  Line coverage:          0.323
  Visited conditions:     42
  Total conditions:       72
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     616
Number of CFA edges:             665
Number of relevant variables:    113
Number of functions:             36
Number of loops:                 5
Size of reached set:             3093
  Number of reached locations:   189 (31%)
    Avg states per location:     16
    Max states per location:     69 (at node N25)
  Number of reached functions:   24 (67%)
  Number of partitions:          3015
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N482 (before lines 690-735), Function test called from node N130, stack depth 3 [3448a248], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.354s
  Time for loading CPAs:          0.600s
  Time for loading parser:        0.560s
  Time for CFA construction:      1.107s
    Time for parsing file(s):     0.345s
    Time for AST to CFA:          0.317s
    Time for CFA sanity check:    0.057s
    Time for post-processing:     0.234s
      Time for var class.:        0.100s
Time for Analysis:               11.878s
CPU time for analysis:           11.880s
Time for analyzing result:        0.003s
Total time for CPAchecker:       14.235s
Total CPU time for CPAchecker:   14.230s
Time for statistics:              0.084s

Time for Garbage Collector:       0.272s (in 31 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     41MB (    39 MiB) avg;     72MB (    68 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8067MB (  7693 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
