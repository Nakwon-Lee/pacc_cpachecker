scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ba8l9nbe/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 275: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 310: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 630: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 883: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 938: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 467: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7737 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7506 (97%)
  Because of loop head:            193 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         38 (0%)
  Times precision was empty:       489 (6%)
  Times precision was {false}:     113 (1%)
  Times result was cached:         6425 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      710 (9%)
  Times result was 'false':        1004 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         3005
  BDD entailment checks:           1739
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          9
Number of abstraction locations:          52
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         20619
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 25.05
Number of irrelevant predicates:          6722 (33%)
Number of preds handled by boolean abs:   1586 (8%)
  Total number of models for allsat:      746
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.05

Time for post operator:                  0.718s
  Time for path formula creation:        0.677s
Time for strengthen operator:            0.055s
Time for prec operator:                  2.798s
  Time for abstraction:                  2.609s (Max:     0.018s, Count: 7737)
    Boolean abstraction:                 0.482s
    Solving time:                        0.313s (Max:     0.013s)
    Model enumeration time:              0.039s
    Time for BDD construction:           0.073s (Max:     0.010s)
Time for merge operator:                 0.050s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     0.352s

Number of path formula cache hits:   27101 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.643s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               316
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1599 (count: 7438, min: 0, max: 369, avg: 0.21)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.175s
Automaton transfers with branching:                0
Automaton transfer successors:                        28750 (count: 28750, min: 1, max: 1, avg: 1.00) [1 x 28750]

CPA algorithm statistics
------------------------
Number of iterations:            22571
Max size of waitlist:            11
Average size of waitlist:        5
Number of computed successors:   25004
Max successors for one state:    2
Number of times merged:          633
Number of times stopped:         1218
Number of times breaked:         38

Total time for CPA algorithm:         5.362s (Max:     0.501s)
  Time for choose from waitlist:      0.060s
  Time for precision adjustment:      3.092s
  Time for transfer relation:         1.522s
  Time for merge operator:            0.168s
  Time for stop operator:             0.119s
  Time for adding to reached set:     0.126s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   38
Avg. length of target path (in blocks):                1686 (count: 38, min: 19, max: 76, avg: 44.37)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.492s
  Counterexample analysis:                             0.297s (Max:     0.020s, Calls: 38)
    Refinement sat check:                              0.106s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.033s
  Precision update:                                    0.028s
  ARG update:                                          0.099s

Length of refined path (in blocks):                    1218 (count: 38, min: 13, max: 63, avg: 32.05)
Number of affected states:                              868 (count: 38, min: 7, max: 62, avg: 22.84)
Length (states) of path with itp 'true':                312 (count: 38, min: 0, max: 45, avg: 8.21)
Length (states) of path with itp non-trivial itp:       868 (count: 38, min: 7, max: 62, avg: 22.84)
Length (states) of path with itp 'false':                38 (count: 38, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          21 (count: 38, min: 0, max: 3, avg: 0.55)
Equal non-trivial interpolants along paths:             809 (count: 38, min: 5, max: 59, avg: 21.29)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                38
Number of successful refinements:     38
Number of failed refinements:         0
Max. size of reached set before ref.: 2900
Max. size of reached set after ref.:  2691
Avg. size of reached set before ref.: 949.84
Avg. size of reached set after ref.:  436.92

Total time for CEGAR algorithm:       6.014s
Time for refinements:                 0.607s
Average time for refinement:          0.015s
Max time for refinement:              0.038s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          139
  Total lines:            431
  Line coverage:          0.323
  Visited conditions:     42
  Total conditions:       72
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     616
Number of CFA edges:             665
Number of relevant variables:    113
Number of functions:             36
Number of loops:                 5
Size of reached set:             3292
  Number of reached locations:   189 (31%)
    Avg states per location:     17
    Max states per location:     88 (at node N25)
  Number of reached functions:   24 (67%)
  Number of partitions:          3180
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N482 (before lines 690-735), Function test called from node N130, stack depth 3 [aeb8ee2], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.250s
  Time for loading CPAs:          0.624s
  Time for loading parser:        0.481s
  Time for CFA construction:      1.034s
    Time for parsing file(s):     0.378s
    Time for AST to CFA:          0.242s
    Time for CFA sanity check:    0.062s
    Time for post-processing:     0.215s
      Time for var class.:        0.077s
Time for Analysis:                6.015s
CPU time for analysis:            6.010s
Time for analyzing result:        0.002s
Total time for CPAchecker:        8.267s
Total CPU time for CPAchecker:    8.260s
Time for statistics:              0.105s

Time for Garbage Collector:       0.130s (in 16 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     37MB (    35 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8059MB (  7686 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
