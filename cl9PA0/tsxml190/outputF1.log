scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wbr66qkn/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 275: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 310: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 630: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 883: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 938: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 467: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            11774 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11508 (98%)
  Because of loop head:            229 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         37 (0%)
  Times precision was empty:       745 (6%)
  Times precision was {false}:     129 (1%)
  Times result was cached:         9920 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      980 (8%)
  Times result was 'false':        1391 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         5098
  BDD entailment checks:           3306
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          9
Number of abstraction locations:          52
Max number of predicates per location:    4
Avg number of predicates per location:    3
Total predicates per abstraction:         32505
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 29.31
Number of irrelevant predicates:          10152 (31%)
Number of preds handled by boolean abs:   2225 (7%)
  Total number of models for allsat:      1015
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  0.898s
  Time for path formula creation:        0.849s
Time for strengthen operator:            0.059s
Time for prec operator:                  4.101s
  Time for abstraction:                  3.841s (Max:     0.028s, Count: 11774)
    Boolean abstraction:                 0.779s
    Solving time:                        0.534s (Max:     0.014s)
    Model enumeration time:              0.068s
    Time for BDD construction:           0.095s (Max:     0.010s)
Time for merge operator:                 0.059s
Time for coverage check:                 0.044s
  Time for BDD entailment checks:        0.040s
Total time for SMT solver (w/o itp):     0.602s

Number of path formula cache hits:   37626 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.767s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               318
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2087 (count: 11094, min: 0, max: 401, avg: 0.19)
Time for BDD node cleanup:                             0.026s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.294s
Automaton transfers with branching:                0
Automaton transfer successors:                        43302 (count: 43302, min: 1, max: 1, avg: 1.00) [1 x 43302]

CPA algorithm statistics
------------------------
Number of iterations:            34039
Max size of waitlist:            14
Average size of waitlist:        6
Number of computed successors:   37498
Max successors for one state:    2
Number of times merged:          896
Number of times stopped:         1878
Number of times breaked:         37

Total time for CPA algorithm:         7.480s (Max:     0.590s)
  Time for choose from waitlist:      0.052s
  Time for precision adjustment:      4.510s
  Time for transfer relation:         2.033s
  Time for merge operator:            0.171s
  Time for stop operator:             0.188s
  Time for adding to reached set:     0.164s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   37
Avg. length of target path (in blocks):                1652 (count: 37, min: 19, max: 76, avg: 44.65)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.645s
  Counterexample analysis:                             0.348s (Max:     0.019s, Calls: 37)
    Refinement sat check:                              0.163s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.046s
  Precision update:                                    0.055s
  ARG update:                                          0.163s

Length of refined path (in blocks):                    1229 (count: 37, min: 13, max: 61, avg: 33.22)
Number of affected states:                              833 (count: 37, min: 7, max: 60, avg: 22.51)
Length (states) of path with itp 'true':                359 (count: 37, min: 0, max: 47, avg: 9.70)
Length (states) of path with itp non-trivial itp:       833 (count: 37, min: 7, max: 60, avg: 22.51)
Length (states) of path with itp 'false':                37 (count: 37, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          21 (count: 37, min: 0, max: 3, avg: 0.57)
Equal non-trivial interpolants along paths:             775 (count: 37, min: 5, max: 57, avg: 20.95)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                37
Number of successful refinements:     37
Number of failed refinements:         0
Max. size of reached set before ref.: 6228
Max. size of reached set after ref.:  5850
Avg. size of reached set before ref.: 1554.14
Avg. size of reached set after ref.:  784.68

Total time for CEGAR algorithm:       8.288s
Time for refinements:                 0.791s
Average time for refinement:          0.021s
Max time for refinement:              0.042s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          139
  Total lines:            431
  Line coverage:          0.323
  Visited conditions:     42
  Total conditions:       72
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     616
Number of CFA edges:             665
Number of relevant variables:    113
Number of functions:             36
Number of loops:                 5
Size of reached set:             5760
  Number of reached locations:   189 (31%)
    Avg states per location:     30
    Max states per location:     156 (at node N25)
  Number of reached functions:   24 (67%)
  Number of partitions:          5551
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N91 (before lines 189-203), Function cleanup called from node N510, stack depth 4 [5865b0f6], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          2.172s
  Time for loading CPAs:          0.549s
  Time for loading parser:        0.458s
  Time for CFA construction:      1.034s
    Time for parsing file(s):     0.370s
    Time for AST to CFA:          0.247s
    Time for CFA sanity check:    0.065s
    Time for post-processing:     0.233s
      Time for var class.:        0.107s
Time for Analysis:                8.288s
CPU time for analysis:            8.280s
Time for analyzing result:        0.004s
Total time for CPAchecker:       10.463s
Total CPU time for CPAchecker:   10.460s
Time for statistics:              0.146s

Time for Garbage Collector:       0.185s (in 21 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     40MB (    39 MiB) avg;     68MB (    64 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     31MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     33MB (    32 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8064MB (  7691 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
