scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sufsysaf/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 275: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 310: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 630: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 883: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 938: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 467: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            11745 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11567 (98%)
  Because of loop head:            144 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         34 (0%)
  Times precision was empty:       1761 (15%)
  Times precision was {false}:     88 (1%)
  Times result was cached:         9149 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      747 (6%)
  Times result was 'false':        1309 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         4306
  BDD entailment checks:           1976
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          10
Number of abstraction locations:          52
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         29392
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 35.20
Number of irrelevant predicates:          8423 (29%)
Number of preds handled by boolean abs:   1725 (6%)
  Total number of models for allsat:      796
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  0.808s
  Time for path formula creation:        0.720s
Time for strengthen operator:            0.098s
Time for prec operator:                  3.288s
  Time for abstraction:                  2.984s (Max:     0.015s, Count: 11745)
    Boolean abstraction:                 0.586s
    Solving time:                        0.377s (Max:     0.013s)
    Model enumeration time:              0.048s
    Time for BDD construction:           0.077s (Max:     0.010s)
Time for merge operator:                 0.049s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     0.425s

Number of path formula cache hits:   43871 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.650s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               308
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1681 (count: 9190, min: 0, max: 310, avg: 0.18)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.253s
Automaton transfers with branching:                0
Automaton transfer successors:                        45308 (count: 45308, min: 1, max: 1, avg: 1.00) [1 x 45308]

CPA algorithm statistics
------------------------
Number of iterations:            34785
Max size of waitlist:            53
Average size of waitlist:        12
Number of computed successors:   38621
Max successors for one state:    2
Number of times merged:          1165
Number of times stopped:         1863
Number of times breaked:         34

Total time for CPA algorithm:         6.535s (Max:     0.679s)
  Time for choose from waitlist:      0.086s
  Time for precision adjustment:      3.781s
  Time for transfer relation:         1.865s
  Time for merge operator:            0.124s
  Time for stop operator:             0.165s
  Time for adding to reached set:     0.135s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   34
Avg. length of target path (in blocks):                1345 (count: 34, min: 19, max: 70, avg: 39.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.557s
  Counterexample analysis:                             0.316s (Max:     0.018s, Calls: 34)
    Refinement sat check:                              0.134s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.040s
  Precision update:                                    0.021s
  ARG update:                                          0.128s

Length of refined path (in blocks):                    1087 (count: 34, min: 13, max: 61, avg: 31.97)
Number of affected states:                              888 (count: 34, min: 7, max: 60, avg: 26.12)
Length (states) of path with itp 'true':                165 (count: 34, min: 0, max: 45, avg: 4.85)
Length (states) of path with itp non-trivial itp:       888 (count: 34, min: 7, max: 60, avg: 26.12)
Length (states) of path with itp 'false':                34 (count: 34, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          21 (count: 34, min: 0, max: 3, avg: 0.62)
Equal non-trivial interpolants along paths:             833 (count: 34, min: 5, max: 57, avg: 24.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                34
Number of successful refinements:     34
Number of failed refinements:         0
Max. size of reached set before ref.: 3731
Max. size of reached set after ref.:  3138
Avg. size of reached set before ref.: 1220.79
Avg. size of reached set after ref.:  276.44

Total time for CEGAR algorithm:       7.227s
Time for refinements:                 0.661s
Average time for refinement:          0.019s
Max time for refinement:              0.038s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          139
  Total lines:            431
  Line coverage:          0.323
  Visited conditions:     42
  Total conditions:       72
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     616
Number of CFA edges:             665
Number of relevant variables:    113
Number of functions:             36
Number of loops:                 5
Size of reached set:             3342
  Number of reached locations:   189 (31%)
    Avg states per location:     17
    Max states per location:     79 (at node N25)
  Number of reached functions:   24 (67%)
  Number of partitions:          3257
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N482 (before lines 690-735), Function test called from node N130, stack depth 3 [7d151d89], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.103s
  Time for loading CPAs:          0.539s
  Time for loading parser:        0.481s
  Time for CFA construction:      0.983s
    Time for parsing file(s):     0.337s
    Time for AST to CFA:          0.242s
    Time for CFA sanity check:    0.081s
    Time for post-processing:     0.211s
      Time for var class.:        0.079s
Time for Analysis:                7.228s
CPU time for analysis:            7.230s
Time for analyzing result:        0.002s
Total time for CPAchecker:        9.333s
Total CPU time for CPAchecker:    9.330s
Time for statistics:              0.105s

Time for Garbage Collector:       0.184s (in 21 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     39MB (    37 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     31MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8062MB (  7688 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
