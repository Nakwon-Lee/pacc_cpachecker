scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_iwui98f5/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 275: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 310: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 630: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 883: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 938: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 467: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            13800 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13513 (98%)
  Because of loop head:            237 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         50 (0%)
  Times precision was empty:       579 (4%)
  Times precision was {false}:     119 (1%)
  Times result was cached:         11938 (87%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1164 (8%)
  Times result was 'false':        1646 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         5842
  BDD entailment checks:           3460
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          10
Number of abstraction locations:          52
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         43690
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 34.05
Number of irrelevant predicates:          14441 (33%)
Number of preds handled by boolean abs:   3054 (7%)
  Total number of models for allsat:      1225
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.05

Time for post operator:                  1.277s
  Time for path formula creation:        1.211s
Time for strengthen operator:            0.076s
Time for prec operator:                  5.174s
  Time for abstraction:                  4.831s (Max:     0.026s, Count: 13800)
    Boolean abstraction:                 0.937s
    Solving time:                        0.613s (Max:     0.013s)
    Model enumeration time:              0.082s
    Time for BDD construction:           0.099s (Max:     0.012s)
Time for merge operator:                 0.062s
Time for coverage check:                 0.044s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):     0.695s

Number of path formula cache hits:   44308 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.080s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               423
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2732 (count: 12191, min: 0, max: 327, avg: 0.22)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.243s
Automaton transfers with branching:                0
Automaton transfer successors:                        51846 (count: 51846, min: 1, max: 1, avg: 1.00) [1 x 51846]

CPA algorithm statistics
------------------------
Number of iterations:            40761
Max size of waitlist:            13
Average size of waitlist:        5
Number of computed successors:   45093
Max successors for one state:    2
Number of times merged:          1191
Number of times stopped:         2459
Number of times breaked:         50

Total time for CPA algorithm:         9.059s (Max:     0.483s)
  Time for choose from waitlist:      0.066s
  Time for precision adjustment:      5.587s
  Time for transfer relation:         2.401s
  Time for merge operator:            0.161s
  Time for stop operator:             0.196s
  Time for adding to reached set:     0.151s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   50
Avg. length of target path (in blocks):                2550 (count: 50, min: 19, max: 90, avg: 51.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.886s
  Counterexample analysis:                             0.532s (Max:     0.020s, Calls: 50)
    Refinement sat check:                              0.271s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.077s
  Precision update:                                    0.063s
  ARG update:                                          0.157s

Length of refined path (in blocks):                    1754 (count: 50, min: 13, max: 63, avg: 35.08)
Number of affected states:                             1168 (count: 50, min: 3, max: 62, avg: 23.36)
Length (states) of path with itp 'true':                536 (count: 50, min: 0, max: 45, avg: 10.72)
Length (states) of path with itp non-trivial itp:      1168 (count: 50, min: 3, max: 62, avg: 23.36)
Length (states) of path with itp 'false':                50 (count: 50, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          21 (count: 50, min: 0, max: 3, avg: 0.42)
Equal non-trivial interpolants along paths:            1097 (count: 50, min: 2, max: 59, avg: 21.94)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                50
Number of successful refinements:     50
Number of failed refinements:         0
Max. size of reached set before ref.: 3652
Max. size of reached set after ref.:  2495
Avg. size of reached set before ref.: 1414.10
Avg. size of reached set after ref.:  644.16

Total time for CEGAR algorithm:      10.168s
Time for refinements:                 1.064s
Average time for refinement:          0.021s
Max time for refinement:              0.043s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          139
  Total lines:            431
  Line coverage:          0.323
  Visited conditions:     42
  Total conditions:       72
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     616
Number of CFA edges:             665
Number of relevant variables:    113
Number of functions:             36
Number of loops:                 5
Size of reached set:             2492
  Number of reached locations:   189 (31%)
    Avg states per location:     13
    Max states per location:     58 (at node N25)
  Number of reached functions:   24 (67%)
  Number of partitions:          2445
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N482 (before lines 690-735), Function test called from node N130, stack depth 3 [5a8f777], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.160s
  Time for loading CPAs:          0.570s
  Time for loading parser:        0.516s
  Time for CFA construction:      0.961s
    Time for parsing file(s):     0.369s
    Time for AST to CFA:          0.229s
    Time for CFA sanity check:    0.079s
    Time for post-processing:     0.168s
      Time for var class.:        0.080s
Time for Analysis:               10.169s
CPU time for analysis:           10.170s
Time for analyzing result:        0.002s
Total time for CPAchecker:       12.332s
Total CPU time for CPAchecker:   12.330s
Time for statistics:              0.090s

Time for Garbage Collector:       0.219s (in 27 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    59 MiB) max;     39MB (    37 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8068MB (  7694 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
