scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4c04csdz/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 275: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 310: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 630: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 883: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 938: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 467: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            10476 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10284 (98%)
  Because of loop head:            161 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         31 (0%)
  Times precision was empty:       1534 (15%)
  Times precision was {false}:     96 (1%)
  Times result was cached:         8121 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      725 (7%)
  Times result was 'false':        1181 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         3949
  BDD entailment checks:           1787
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          9
Number of abstraction locations:          52
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         26151
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 31.85
Number of irrelevant predicates:          7630 (29%)
Number of preds handled by boolean abs:   1635 (6%)
  Total number of models for allsat:      781
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  0.749s
  Time for path formula creation:        0.690s
Time for strengthen operator:            0.072s
Time for prec operator:                  3.345s
  Time for abstraction:                  3.145s (Max:     0.017s, Count: 10476)
    Boolean abstraction:                 0.614s
    Solving time:                        0.479s (Max:     0.013s)
    Model enumeration time:              0.039s
    Time for BDD construction:           0.085s (Max:     0.012s)
Time for merge operator:                 0.035s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     0.518s

Number of path formula cache hits:   38313 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.616s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               299
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1690 (count: 8694, min: 0, max: 328, avg: 0.19)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.156s
Automaton transfers with branching:                0
Automaton transfer successors:                        40427 (count: 40427, min: 1, max: 1, avg: 1.00) [1 x 40427]

CPA algorithm statistics
------------------------
Number of iterations:            31111
Max size of waitlist:            53
Average size of waitlist:        11
Number of computed successors:   34648
Max successors for one state:    2
Number of times merged:          1081
Number of times stopped:         1751
Number of times breaked:         31

Total time for CPA algorithm:         6.272s (Max:     0.735s)
  Time for choose from waitlist:      0.088s
  Time for precision adjustment:      3.794s
  Time for transfer relation:         1.705s
  Time for merge operator:            0.112s
  Time for stop operator:             0.150s
  Time for adding to reached set:     0.157s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   31
Avg. length of target path (in blocks):                1206 (count: 31, min: 19, max: 72, avg: 38.90)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.523s
  Counterexample analysis:                             0.307s (Max:     0.020s, Calls: 31)
    Refinement sat check:                              0.126s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.063s
  ARG update:                                          0.120s

Length of refined path (in blocks):                     976 (count: 31, min: 13, max: 63, avg: 31.48)
Number of affected states:                              804 (count: 31, min: 7, max: 62, avg: 25.94)
Length (states) of path with itp 'true':                141 (count: 31, min: 0, max: 45, avg: 4.55)
Length (states) of path with itp non-trivial itp:       804 (count: 31, min: 7, max: 62, avg: 25.94)
Length (states) of path with itp 'false':                31 (count: 31, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          20 (count: 31, min: 0, max: 3, avg: 0.65)
Equal non-trivial interpolants along paths:             753 (count: 31, min: 5, max: 59, avg: 24.29)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 3791
Max. size of reached set after ref.:  3004
Avg. size of reached set before ref.: 1169.52
Avg. size of reached set after ref.:  254.19

Total time for CEGAR algorithm:       6.913s
Time for refinements:                 0.621s
Average time for refinement:          0.020s
Max time for refinement:              0.045s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          139
  Total lines:            431
  Line coverage:          0.323
  Visited conditions:     42
  Total conditions:       72
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     616
Number of CFA edges:             665
Number of relevant variables:    113
Number of functions:             36
Number of loops:                 5
Size of reached set:             3342
  Number of reached locations:   189 (31%)
    Avg states per location:     17
    Max states per location:     79 (at node N25)
  Number of reached functions:   24 (67%)
  Number of partitions:          3257
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N482 (before lines 690-735), Function test called from node N130, stack depth 3 [9be1984], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.021s
  Time for loading CPAs:          0.507s
  Time for loading parser:        0.436s
  Time for CFA construction:      0.956s
    Time for parsing file(s):     0.341s
    Time for AST to CFA:          0.213s
    Time for CFA sanity check:    0.073s
    Time for post-processing:     0.207s
      Time for var class.:        0.096s
Time for Analysis:                6.913s
CPU time for analysis:            6.900s
Time for analyzing result:        0.003s
Total time for CPAchecker:        8.938s
Total CPU time for CPAchecker:    8.930s
Time for statistics:              0.117s

Time for Garbage Collector:       0.154s (in 20 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     38MB (    37 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     31MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   7999MB (  7629 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
