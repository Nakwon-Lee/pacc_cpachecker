scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product37_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rszu9gix/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 169: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 224: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 381: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 413: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 427: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 756: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 802: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 902: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 914: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 937: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 593: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            24949 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  24517 (98%)
  Because of loop head:            339 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         93 (0%)
  Times precision was empty:       3354 (13%)
  Times precision was {false}:     233 (1%)
  Times result was cached:         18798 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2564 (10%)
  Times result was 'false':        2672 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         13325
  BDD entailment checks:           6037
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          12
Number of abstraction locations:          50
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         78788
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 28.17
Number of irrelevant predicates:          31354 (40%)
Number of preds handled by boolean abs:   8568 (11%)
  Total number of models for allsat:      2572
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  1.570s
  Time for path formula creation:        1.501s
Time for strengthen operator:            0.103s
Time for prec operator:                  7.600s
  Time for abstraction:                  7.160s (Max:     0.025s, Count: 24949)
    Boolean abstraction:                 1.715s
    Solving time:                        1.235s (Max:     0.014s)
    Model enumeration time:              0.129s
    Time for BDD construction:           0.162s (Max:     0.013s)
Time for merge operator:                 0.099s
Time for coverage check:                 0.053s
  Time for BDD entailment checks:        0.052s
Total time for SMT solver (w/o itp):     1.364s

Number of path formula cache hits:   90196 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.232s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               803
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6000 (count: 27348, min: 0, max: 476, avg: 0.22)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.401s
Automaton transfers with branching:                0
Automaton transfer successors:                       102833 (count: 102833, min: 1, max: 1, avg: 1.00) [1 x 102833]

CPA algorithm statistics
------------------------
Number of iterations:            79743
Max size of waitlist:            96
Average size of waitlist:        28
Number of computed successors:   89731
Max successors for one state:    2
Number of times merged:          3644
Number of times stopped:         5752
Number of times breaked:         93

Total time for CPA algorithm:        13.283s (Max:     0.603s)
  Time for choose from waitlist:      0.140s
  Time for precision adjustment:      8.340s
  Time for transfer relation:         3.365s
  Time for merge operator:            0.316s
  Time for stop operator:             0.288s
  Time for adding to reached set:     0.237s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   93
Avg. length of target path (in blocks):                4382 (count: 93, min: 21, max: 95, avg: 47.12)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.228s
  Counterexample analysis:                             0.751s (Max:     0.021s, Calls: 93)
    Refinement sat check:                              0.367s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.067s
  Precision update:                                    0.060s
  ARG update:                                          0.256s

Length of refined path (in blocks):                    3573 (count: 93, min: 15, max: 57, avg: 38.42)
Number of affected states:                             1584 (count: 93, min: 3, max: 50, avg: 17.03)
Length (states) of path with itp 'true':               1896 (count: 93, min: 0, max: 45, avg: 20.39)
Length (states) of path with itp non-trivial itp:      1584 (count: 93, min: 3, max: 50, avg: 17.03)
Length (states) of path with itp 'false':                93 (count: 93, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          33 (count: 93, min: 0, max: 3, avg: 0.35)
Equal non-trivial interpolants along paths:            1458 (count: 93, min: 2, max: 47, avg: 15.68)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                93
Number of successful refinements:     93
Number of failed refinements:         0
Max. size of reached set before ref.: 4815
Max. size of reached set after ref.:  3937
Avg. size of reached set before ref.: 1687.42
Avg. size of reached set after ref.:  834.56

Total time for CEGAR algorithm:      14.868s
Time for refinements:                 1.516s
Average time for refinement:          0.016s
Max time for refinement:              0.053s

Code Coverage
-----------------------------
  Function coverage:      0.639
  Visited lines:          126
  Total lines:            434
  Line coverage:          0.290
  Visited conditions:     40
  Total conditions:       72
  Condition coverage:     0.556

CPAchecker general statistics
-----------------------------
Number of program locations:     619
Number of CFA edges:             667
Number of relevant variables:    113
Number of functions:             36
Number of loops:                 5
Size of reached set:             1992
  Number of reached locations:   170 (27%)
    Avg states per location:     11
    Max states per location:     42 (at node N7)
  Number of reached functions:   23 (64%)
  Number of partitions:          1957
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N114 (before lines 241-286), Function test called from node N587, stack depth 3 [25358a90], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.385s
  Time for loading CPAs:          0.597s
  Time for loading parser:        0.537s
  Time for CFA construction:      1.106s
    Time for parsing file(s):     0.397s
    Time for AST to CFA:          0.281s
    Time for CFA sanity check:    0.065s
    Time for post-processing:     0.216s
      Time for var class.:        0.093s
Time for Analysis:               14.869s
CPU time for analysis:           14.860s
Time for analyzing result:        0.001s
Total time for CPAchecker:       17.258s
Total CPU time for CPAchecker:   17.260s
Time for statistics:              0.068s

Time for Garbage Collector:       0.385s (in 45 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     43MB (    41 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8071MB (  7697 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
