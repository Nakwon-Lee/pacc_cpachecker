scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product37_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9888ovo5/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 169: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 224: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 381: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 413: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 427: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 756: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 802: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 902: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 914: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 937: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 593: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            16049 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15779 (98%)
  Because of loop head:            183 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         87 (1%)
  Times precision was empty:       1534 (10%)
  Times precision was {false}:     157 (1%)
  Times result was cached:         12161 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2197 (14%)
  Times result was 'false':        2068 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         9685
  BDD entailment checks:           5257
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          10
Number of abstraction locations:          51
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         58149
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 24.70
Number of irrelevant predicates:          18131 (31%)
Number of preds handled by boolean abs:   7048 (12%)
  Total number of models for allsat:      2266
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  1.070s
  Time for path formula creation:        1.018s
Time for strengthen operator:            0.103s
Time for prec operator:                  6.412s
  Time for abstraction:                  6.114s (Max:     0.018s, Count: 16049)
    Boolean abstraction:                 1.515s
    Solving time:                        1.092s (Max:     0.013s)
    Model enumeration time:              0.141s
    Time for BDD construction:           0.160s (Max:     0.009s)
Time for merge operator:                 0.098s
Time for coverage check:                 0.031s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     1.233s

Number of path formula cache hits:   56585 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.893s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               645
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4855 (count: 21586, min: 0, max: 358, avg: 0.22)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.303s
Automaton transfers with branching:                0
Automaton transfer successors:                        66277 (count: 66277, min: 1, max: 1, avg: 1.00) [1 x 66277]

CPA algorithm statistics
------------------------
Number of iterations:            51712
Max size of waitlist:            57
Average size of waitlist:        13
Number of computed successors:   58085
Max successors for one state:    2
Number of times merged:          2214
Number of times stopped:         3349
Number of times breaked:         87

Total time for CPA algorithm:        10.455s (Max:     0.595s)
  Time for choose from waitlist:      0.068s
  Time for precision adjustment:      6.967s
  Time for transfer relation:         2.466s
  Time for merge operator:            0.221s
  Time for stop operator:             0.169s
  Time for adding to reached set:     0.121s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   87
Avg. length of target path (in blocks):                4480 (count: 87, min: 21, max: 89, avg: 51.49)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.198s
  Counterexample analysis:                             0.804s (Max:     0.030s, Calls: 87)
    Refinement sat check:                              0.369s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.060s
  Precision update:                                    0.098s
  ARG update:                                          0.176s

Length of refined path (in blocks):                    3443 (count: 87, min: 15, max: 65, avg: 39.57)
Number of affected states:                             1527 (count: 87, min: 3, max: 62, avg: 17.55)
Length (states) of path with itp 'true':               1829 (count: 87, min: 0, max: 47, avg: 21.02)
Length (states) of path with itp non-trivial itp:      1527 (count: 87, min: 3, max: 62, avg: 17.55)
Length (states) of path with itp 'false':                87 (count: 87, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          23 (count: 87, min: 0, max: 2, avg: 0.26)
Equal non-trivial interpolants along paths:            1417 (count: 87, min: 2, max: 60, avg: 16.29)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                87
Number of successful refinements:     87
Number of failed refinements:         0
Max. size of reached set before ref.: 2897
Max. size of reached set after ref.:  1392
Avg. size of reached set before ref.: 1077.25
Avg. size of reached set after ref.:  502.23

Total time for CEGAR algorithm:      11.894s
Time for refinements:                 1.363s
Average time for refinement:          0.015s
Max time for refinement:              0.047s

Code Coverage
-----------------------------
  Function coverage:      0.639
  Visited lines:          126
  Total lines:            434
  Line coverage:          0.290
  Visited conditions:     40
  Total conditions:       72
  Condition coverage:     0.556

CPAchecker general statistics
-----------------------------
Number of program locations:     619
Number of CFA edges:             667
Number of relevant variables:    113
Number of functions:             36
Number of loops:                 5
Size of reached set:             2642
  Number of reached locations:   170 (27%)
    Avg states per location:     15
    Max states per location:     67 (at node N7)
  Number of reached functions:   23 (64%)
  Number of partitions:          2553
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N114 (before lines 241-286), Function test called from node N587, stack depth 3 [62f5d1ea], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.140s
  Time for loading CPAs:          0.551s
  Time for loading parser:        0.468s
  Time for CFA construction:      1.039s
    Time for parsing file(s):     0.379s
    Time for AST to CFA:          0.225s
    Time for CFA sanity check:    0.063s
    Time for post-processing:     0.229s
      Time for var class.:        0.115s
Time for Analysis:               11.895s
CPU time for analysis:           11.880s
Time for analyzing result:        0.003s
Total time for CPAchecker:       14.039s
Total CPU time for CPAchecker:   14.020s
Time for statistics:              0.152s

Time for Garbage Collector:       0.268s (in 33 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     41MB (    39 MiB) avg;     68MB (    65 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8006MB (  7635 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
