scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product29_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_f7_viz2s/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 179: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 280: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 428: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 483: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 914: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 705: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1893 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1830 (97%)
  Because of loop head:            45 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18 (1%)
  Times precision was empty:       557 (29%)
  Times precision was {false}:     46 (2%)
  Times result was cached:         1185 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      105 (6%)
  Times result was 'false':        128 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         678
  BDD entailment checks:           134
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          4
Number of abstraction locations:          42
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         2310
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 15.30
Number of irrelevant predicates:          736 (32%)
Number of preds handled by boolean abs:   149 (6%)
  Total number of models for allsat:      114
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  0.452s
  Time for path formula creation:        0.431s
Time for strengthen operator:            0.019s
Time for prec operator:                  0.826s
  Time for abstraction:                  0.712s (Max:     0.017s, Count: 1893)
    Boolean abstraction:                 0.117s
    Solving time:                        0.098s (Max:     0.012s)
    Model enumeration time:              0.006s
    Time for BDD construction:           0.005s (Max:     0.001s)
Time for merge operator:                 0.027s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     0.104s

Number of path formula cache hits:   5626 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.396s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               214
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         154 (count: 1588, min: 0, max: 110, avg: 0.10)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.067s
Automaton transfers with branching:                0
Automaton transfer successors:                         7298 (count: 7298, min: 1, max: 1, avg: 1.00) [1 x 7298]

CPA algorithm statistics
------------------------
Number of iterations:            5642
Max size of waitlist:            26
Average size of waitlist:        8
Number of computed successors:   6396
Max successors for one state:    2
Number of times merged:          272
Number of times stopped:         359
Number of times breaked:         18

Total time for CPA algorithm:         2.094s (Max:     0.287s)
  Time for choose from waitlist:      0.027s
  Time for precision adjustment:      0.964s
  Time for transfer relation:         0.829s
  Time for merge operator:            0.060s
  Time for stop operator:             0.071s
  Time for adding to reached set:     0.036s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   18
Avg. length of target path (in blocks):                 722 (count: 18, min: 25, max: 50, avg: 40.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.262s
  Counterexample analysis:                             0.165s (Max:     0.022s, Calls: 18)
    Refinement sat check:                              0.094s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.036s
  Precision update:                                    0.008s
  ARG update:                                          0.032s

Length of refined path (in blocks):                     488 (count: 18, min: 19, max: 42, avg: 27.11)
Number of affected states:                              430 (count: 18, min: 17, max: 41, avg: 23.89)
Length (states) of path with itp 'true':                 40 (count: 18, min: 0, max: 20, avg: 2.22)
Length (states) of path with itp non-trivial itp:       430 (count: 18, min: 17, max: 41, avg: 23.89)
Length (states) of path with itp 'false':                18 (count: 18, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 18, min: 0, max: 1, avg: 0.06)
Equal non-trivial interpolants along paths:             411 (count: 18, min: 16, max: 40, avg: 22.83)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                18
Number of successful refinements:     18
Number of failed refinements:         0
Max. size of reached set before ref.: 513
Max. size of reached set after ref.:  195
Avg. size of reached set before ref.: 328.06
Avg. size of reached set after ref.:  24.33

Total time for CEGAR algorithm:       2.409s
Time for refinements:                 0.313s
Average time for refinement:          0.017s
Max time for refinement:              0.041s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          108
  Total lines:            436
  Line coverage:          0.248
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     629
Number of CFA edges:             679
Number of relevant variables:    116
Number of functions:             38
Number of loops:                 5
Size of reached set:             443
  Number of reached locations:   146 (23%)
    Avg states per location:     3
    Max states per location:     12 (at node N620)
  Number of reached functions:   19 (50%)
  Number of partitions:          442
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N166 (before line 316), Function timeShift called from node N100, stack depth 5 [388d14e], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0

Time for analysis setup:          2.284s
  Time for loading CPAs:          0.576s
  Time for loading parser:        0.588s
  Time for CFA construction:      1.024s
    Time for parsing file(s):     0.406s
    Time for AST to CFA:          0.235s
    Time for CFA sanity check:    0.069s
    Time for post-processing:     0.208s
      Time for var class.:        0.094s
Time for Analysis:                2.410s
CPU time for analysis:            2.410s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.697s
Total CPU time for CPAchecker:    4.680s
Time for statistics:              0.067s

Time for Garbage Collector:       0.084s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 56MB (    53 MiB) max;     33MB (    31 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     26MB (    25 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8033MB (  7661 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
