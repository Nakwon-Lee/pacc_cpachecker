scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product29_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_r3ftjym7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 179: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 280: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 428: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 483: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 914: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 705: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2243 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2189 (98%)
  Because of loop head:            39 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15 (1%)
  Times precision was empty:       486 (22%)
  Times precision was {false}:     58 (3%)
  Times result was cached:         1507 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      192 (9%)
  Times result was 'false':        232 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         759
  BDD entailment checks:           373
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          5
Number of abstraction locations:          42
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         3406
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 13.62
Number of irrelevant predicates:          1037 (30%)
Number of preds handled by boolean abs:   330 (10%)
  Total number of models for allsat:      204
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.06

Time for post operator:                  0.403s
  Time for path formula creation:        0.385s
Time for strengthen operator:            0.058s
Time for prec operator:                  1.003s
  Time for abstraction:                  0.866s (Max:     0.016s, Count: 2243)
    Boolean abstraction:                 0.166s
    Solving time:                        0.105s (Max:     0.008s)
    Model enumeration time:              0.025s
    Time for BDD construction:           0.034s (Max:     0.008s)
Time for merge operator:                 0.020s
Time for coverage check:                 0.014s
  Time for BDD entailment checks:        0.012s
Total time for SMT solver (w/o itp):     0.130s

Number of path formula cache hits:   5806 (60%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.373s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               224
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         414 (count: 2359, min: 0, max: 179, avg: 0.18)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.088s
Automaton transfers with branching:                0
Automaton transfer successors:                         8294 (count: 8294, min: 1, max: 1, avg: 1.00) [1 x 8294]

CPA algorithm statistics
------------------------
Number of iterations:            6459
Max size of waitlist:            14
Average size of waitlist:        6
Number of computed successors:   7174
Max successors for one state:    2
Number of times merged:          193
Number of times stopped:         388
Number of times breaked:         15

Total time for CPA algorithm:         2.424s (Max:     0.253s)
  Time for choose from waitlist:      0.043s
  Time for precision adjustment:      1.251s
  Time for transfer relation:         0.861s
  Time for merge operator:            0.055s
  Time for stop operator:             0.056s
  Time for adding to reached set:     0.043s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   15
Avg. length of target path (in blocks):                 595 (count: 15, min: 26, max: 62, avg: 39.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.200s
  Counterexample analysis:                             0.141s (Max:     0.016s, Calls: 15)
    Refinement sat check:                              0.048s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.009s
  ARG update:                                          0.025s

Length of refined path (in blocks):                     444 (count: 15, min: 20, max: 54, avg: 29.60)
Number of affected states:                              371 (count: 15, min: 13, max: 53, avg: 24.73)
Length (states) of path with itp 'true':                 58 (count: 15, min: 0, max: 19, avg: 3.87)
Length (states) of path with itp non-trivial itp:       371 (count: 15, min: 13, max: 53, avg: 24.73)
Length (states) of path with itp 'false':                15 (count: 15, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 15, min: 0, max: 1, avg: 0.07)
Equal non-trivial interpolants along paths:             355 (count: 15, min: 12, max: 52, avg: 23.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15
Number of successful refinements:     15
Number of failed refinements:         0
Max. size of reached set before ref.: 782
Max. size of reached set after ref.:  501
Avg. size of reached set before ref.: 489.27
Avg. size of reached set after ref.:  106.40

Total time for CEGAR algorithm:       2.658s
Time for refinements:                 0.224s
Average time for refinement:          0.014s
Max time for refinement:              0.044s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          108
  Total lines:            436
  Line coverage:          0.248
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     629
Number of CFA edges:             679
Number of relevant variables:    116
Number of functions:             38
Number of loops:                 5
Size of reached set:             812
  Number of reached locations:   146 (23%)
    Avg states per location:     5
    Max states per location:     28 (at node N620)
  Number of reached functions:   19 (50%)
  Number of partitions:          799
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N279 (before lines 497-542), Function test called from node N135, stack depth 3 [3a17b2e3], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.299s
  Time for loading CPAs:          0.563s
  Time for loading parser:        0.583s
  Time for CFA construction:      1.025s
    Time for parsing file(s):     0.380s
    Time for AST to CFA:          0.238s
    Time for CFA sanity check:    0.059s
    Time for post-processing:     0.209s
      Time for var class.:        0.091s
Time for Analysis:                2.658s
CPU time for analysis:            2.660s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.960s
Total CPU time for CPAchecker:    4.950s
Time for statistics:              0.064s

Time for Garbage Collector:       0.093s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     34MB (    32 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     26MB (    25 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8035MB (  7663 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
