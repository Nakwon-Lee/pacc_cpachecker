scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product27_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_soyrmazn/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 492: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 578: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 696: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 875: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 884: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2500 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2436 (97%)
  Because of loop head:            47 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         17 (1%)
  Times precision was empty:       377 (15%)
  Times precision was {false}:     68 (3%)
  Times result was cached:         1795 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      260 (10%)
  Times result was 'false':        253 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         910
  BDD entailment checks:           494
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          5
Number of abstraction locations:          42
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         4196
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 12.79
Number of irrelevant predicates:          1257 (30%)
Number of preds handled by boolean abs:   459 (11%)
  Total number of models for allsat:      277
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  0.444s
  Time for path formula creation:        0.419s
Time for strengthen operator:            0.039s
Time for prec operator:                  1.229s
  Time for abstraction:                  1.138s (Max:     0.019s, Count: 2500)
    Boolean abstraction:                 0.231s
    Solving time:                        0.163s (Max:     0.012s)
    Model enumeration time:              0.008s
    Time for BDD construction:           0.036s (Max:     0.012s)
Time for merge operator:                 0.029s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     0.171s

Number of path formula cache hits:   7198 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.385s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               224
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         444 (count: 2838, min: 0, max: 185, avg: 0.16)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.102s
Automaton transfers with branching:                0
Automaton transfer successors:                         9314 (count: 9314, min: 1, max: 1, avg: 1.00) [1 x 9314]

CPA algorithm statistics
------------------------
Number of iterations:            7263
Max size of waitlist:            14
Average size of waitlist:        6
Number of computed successors:   8087
Max successors for one state:    2
Number of times merged:          208
Number of times stopped:         455
Number of times breaked:         17

Total time for CPA algorithm:         2.721s (Max:     0.264s)
  Time for choose from waitlist:      0.032s
  Time for precision adjustment:      1.400s
  Time for transfer relation:         0.937s
  Time for merge operator:            0.070s
  Time for stop operator:             0.080s
  Time for adding to reached set:     0.041s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   17
Avg. length of target path (in blocks):                 644 (count: 17, min: 26, max: 58, avg: 37.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.258s
  Counterexample analysis:                             0.139s (Max:     0.017s, Calls: 17)
    Refinement sat check:                              0.080s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.023s
  Precision update:                                    0.010s
  ARG update:                                          0.062s

Length of refined path (in blocks):                     469 (count: 17, min: 15, max: 50, avg: 27.59)
Number of affected states:                              381 (count: 17, min: 13, max: 49, avg: 22.41)
Length (states) of path with itp 'true':                 71 (count: 17, min: 0, max: 19, avg: 4.18)
Length (states) of path with itp non-trivial itp:       381 (count: 17, min: 13, max: 49, avg: 22.41)
Length (states) of path with itp 'false':                17 (count: 17, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 17, min: 0, max: 1, avg: 0.06)
Equal non-trivial interpolants along paths:             363 (count: 17, min: 12, max: 48, avg: 21.35)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                17
Number of successful refinements:     17
Number of failed refinements:         0
Max. size of reached set before ref.: 809
Max. size of reached set after ref.:  565
Avg. size of reached set before ref.: 519.00
Avg. size of reached set after ref.:  136.41

Total time for CEGAR algorithm:       3.037s
Time for refinements:                 0.308s
Average time for refinement:          0.018s
Max time for refinement:              0.046s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          108
  Total lines:            433
  Line coverage:          0.249
  Visited conditions:     32
  Total conditions:       70
  Condition coverage:     0.457

CPAchecker general statistics
-----------------------------
Number of program locations:     624
Number of CFA edges:             671
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             876
  Number of reached locations:   147 (24%)
    Avg states per location:     5
    Max states per location:     32 (at node N34)
  Number of reached functions:   19 (50%)
  Number of partitions:          862
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N491 (before lines 711-758), Function test called from node N463, stack depth 3 [59c500f7], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.127s
  Time for loading CPAs:          0.478s
  Time for loading parser:        0.525s
  Time for CFA construction:      1.017s
    Time for parsing file(s):     0.391s
    Time for AST to CFA:          0.239s
    Time for CFA sanity check:    0.073s
    Time for post-processing:     0.200s
      Time for var class.:        0.079s
Time for Analysis:                3.037s
CPU time for analysis:            3.030s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.167s
Total CPU time for CPAchecker:    5.160s
Time for statistics:              0.084s

Time for Garbage Collector:       0.120s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     35MB (    33 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8041MB (  7669 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
