scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product27_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_i_nwqlnz/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 492: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 578: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 696: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 875: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 884: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3281 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3226 (98%)
  Because of loop head:            42 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (0%)
  Times precision was empty:       1146 (35%)
  Times precision was {false}:     64 (2%)
  Times result was cached:         1981 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      90 (3%)
  Times result was 'false':        225 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         1090
  BDD entailment checks:           494
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          4
Number of abstraction locations:          42
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         3015
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 19.58
Number of irrelevant predicates:          1316 (44%)
Number of preds handled by boolean abs:   103 (3%)
  Total number of models for allsat:      104
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.16

Time for post operator:                  0.416s
  Time for path formula creation:        0.396s
Time for strengthen operator:            0.045s
Time for prec operator:                  0.836s
  Time for abstraction:                  0.712s (Max:     0.016s, Count: 3281)
    Boolean abstraction:                 0.098s
    Solving time:                        0.100s (Max:     0.012s)
    Model enumeration time:              0.014s
    Time for BDD construction:           0.004s (Max:     0.001s)
Time for merge operator:                 0.015s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):     0.114s

Number of path formula cache hits:   11654 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.334s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         175 (count: 2535, min: 0, max: 80, avg: 0.07)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.087s
Automaton transfers with branching:                0
Automaton transfer successors:                        12367 (count: 12367, min: 1, max: 1, avg: 1.00) [1 x 12367]

CPA algorithm statistics
------------------------
Number of iterations:            9782
Max size of waitlist:            24
Average size of waitlist:        9
Number of computed successors:   10838
Max successors for one state:    2
Number of times merged:          298
Number of times stopped:         696
Number of times breaked:         13

Total time for CPA algorithm:         2.373s (Max:     0.448s)
  Time for choose from waitlist:      0.050s
  Time for precision adjustment:      1.049s
  Time for transfer relation:         0.951s
  Time for merge operator:            0.054s
  Time for stop operator:             0.088s
  Time for adding to reached set:     0.072s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 428 (count: 13, min: 25, max: 50, avg: 32.92)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.182s
  Counterexample analysis:                             0.075s (Max:     0.020s, Calls: 13)
    Refinement sat check:                              0.024s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.014s
  ARG update:                                          0.062s

Length of refined path (in blocks):                     327 (count: 13, min: 15, max: 42, avg: 25.15)
Number of affected states:                              314 (count: 13, min: 14, max: 41, avg: 24.15)
Length (states) of path with itp 'true':                  0 (count: 13, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       314 (count: 13, min: 14, max: 41, avg: 24.15)
Length (states) of path with itp 'false':                13 (count: 13, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 13, min: 0, max: 1, avg: 0.15)
Equal non-trivial interpolants along paths:             299 (count: 13, min: 13, max: 40, avg: 23.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 1075
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 700.46
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.649s
Time for refinements:                 0.275s
Average time for refinement:          0.021s
Max time for refinement:              0.058s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          108
  Total lines:            433
  Line coverage:          0.249
  Visited conditions:     32
  Total conditions:       70
  Condition coverage:     0.457

CPAchecker general statistics
-----------------------------
Number of program locations:     624
Number of CFA edges:             671
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             851
  Number of reached locations:   147 (24%)
    Avg states per location:     5
    Max states per location:     34 (at node N34)
  Number of reached functions:   19 (50%)
  Number of partitions:          850
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N491 (before lines 711-758), Function test called from node N463, stack depth 3 [38732372], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.279s
  Time for loading CPAs:          0.554s
  Time for loading parser:        0.539s
  Time for CFA construction:      0.983s
    Time for parsing file(s):     0.352s
    Time for AST to CFA:          0.238s
    Time for CFA sanity check:    0.070s
    Time for post-processing:     0.203s
      Time for var class.:        0.076s
Time for Analysis:                2.650s
CPU time for analysis:            2.650s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.933s
Total CPU time for CPAchecker:    4.930s
Time for statistics:              0.074s

Time for Garbage Collector:       0.137s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     34MB (    32 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     27MB (    25 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8040MB (  7668 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
