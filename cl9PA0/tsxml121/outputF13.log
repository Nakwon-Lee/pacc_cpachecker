scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product27_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_76_tmqu6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 492: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 578: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 696: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 875: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 884: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3837 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3775 (98%)
  Because of loop head:            48 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (0%)
  Times precision was empty:       1173 (31%)
  Times precision was {false}:     74 (2%)
  Times result was cached:         2468 (64%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      122 (3%)
  Times result was 'false':        273 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         1314
  BDD entailment checks:           566
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          4
Number of abstraction locations:          42
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         3940
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 20.10
Number of irrelevant predicates:          1790 (45%)
Number of preds handled by boolean abs:   143 (4%)
  Total number of models for allsat:      148
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.21

Time for post operator:                  0.535s
  Time for path formula creation:        0.519s
Time for strengthen operator:            0.027s
Time for prec operator:                  0.885s
  Time for abstraction:                  0.787s (Max:     0.013s, Count: 3837)
    Boolean abstraction:                 0.103s
    Solving time:                        0.087s (Max:     0.010s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.019s (Max:     0.005s)
Time for merge operator:                 0.028s
Time for coverage check:                 0.023s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     0.091s

Number of path formula cache hits:   13188 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.484s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         251 (count: 2886, min: 0, max: 83, avg: 0.09)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.089s
Automaton transfers with branching:                0
Automaton transfer successors:                        14845 (count: 14845, min: 1, max: 1, avg: 1.00) [1 x 14845]

CPA algorithm statistics
------------------------
Number of iterations:            11228
Max size of waitlist:            42
Average size of waitlist:        14
Number of computed successors:   12682
Max successors for one state:    2
Number of times merged:          374
Number of times stopped:         805
Number of times breaked:         14

Total time for CPA algorithm:         2.575s (Max:     0.472s)
  Time for choose from waitlist:      0.035s
  Time for precision adjustment:      1.079s
  Time for transfer relation:         1.138s
  Time for merge operator:            0.065s
  Time for stop operator:             0.067s
  Time for adding to reached set:     0.053s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14
Avg. length of target path (in blocks):                 456 (count: 14, min: 25, max: 50, avg: 32.57)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.232s
  Counterexample analysis:                             0.117s (Max:     0.020s, Calls: 14)
    Refinement sat check:                              0.055s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.020s
  ARG update:                                          0.067s

Length of refined path (in blocks):                     349 (count: 14, min: 15, max: 42, avg: 24.93)
Number of affected states:                              335 (count: 14, min: 14, max: 41, avg: 23.93)
Length (states) of path with itp 'true':                  0 (count: 14, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       335 (count: 14, min: 14, max: 41, avg: 23.93)
Length (states) of path with itp 'false':                14 (count: 14, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 14, min: 0, max: 1, avg: 0.14)
Equal non-trivial interpolants along paths:             319 (count: 14, min: 13, max: 40, avg: 22.79)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 1006
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 766.29
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.842s
Time for refinements:                 0.266s
Average time for refinement:          0.019s
Max time for refinement:              0.052s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          108
  Total lines:            433
  Line coverage:          0.249
  Visited conditions:     32
  Total conditions:       70
  Condition coverage:     0.457

CPAchecker general statistics
-----------------------------
Number of program locations:     624
Number of CFA edges:             671
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             919
  Number of reached locations:   147 (24%)
    Avg states per location:     6
    Max states per location:     36 (at node N34)
  Number of reached functions:   19 (50%)
  Number of partitions:          917
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N491 (before lines 711-758), Function test called from node N463, stack depth 3 [5503c7d], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.940s
  Time for loading CPAs:          0.468s
  Time for loading parser:        0.437s
  Time for CFA construction:      0.937s
    Time for parsing file(s):     0.334s
    Time for AST to CFA:          0.224s
    Time for CFA sanity check:    0.047s
    Time for post-processing:     0.205s
      Time for var class.:        0.078s
Time for Analysis:                2.842s
CPU time for analysis:            2.830s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.785s
Total CPU time for CPAchecker:    4.770s
Time for statistics:              0.069s

Time for Garbage Collector:       0.122s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     36MB (    34 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8046MB (  7673 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
