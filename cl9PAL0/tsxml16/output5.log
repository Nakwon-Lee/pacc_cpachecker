scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--amc6821.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1ga47cql/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4685: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2214: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2214: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4668 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1364 (29%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3304 (71%)
  Times precision was empty:       347 (7%)
  Times precision was {false}:     4098 (88%)
  Times result was cached:         167 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      56 (1%)
  Times result was 'false':        3861 (83%)
Number of strengthen sat checks:   0
Number of coverage checks:         27876
  BDD entailment checks:           54
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       230
Number of predicates discovered:          31
Number of abstraction locations:          4
Max number of predicates per location:    30
Avg number of predicates per location:    8
Total predicates per abstraction:         5177
Max number of predicates per abstraction: 30
Avg number of predicates per abstraction: 1.25
Number of irrelevant predicates:          4263 (82%)
Number of preds handled by boolean abs:   894 (17%)
  Total number of models for allsat:      81
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.45

Time for post operator:                  2.567s
  Time for path formula creation:        2.477s
Time for strengthen operator:            0.185s
Time for prec operator:                 17.048s
  Time for abstraction:                 16.851s (Max:     0.703s, Count: 4668)
    Boolean abstraction:                 8.089s
    Solving time:                        8.180s (Max:     0.375s)
    Model enumeration time:              3.132s
    Time for BDD construction:           0.025s (Max:     0.014s)
Time for merge operator:                 0.670s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):    11.312s

Number of path formula cache hits:   218871 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.901s

Total number of created targets for pointer analysis: 10446
   Number of created targets for uf: *unsigned_short_int is 21
   Number of created targets for uf: *signed_int is 157
   Number of created targets for uf: *unsigned_char is 131


Number of BDD nodes:                               1557
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4429 (count: 26718, min: 0, max: 295, avg: 0.17)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.563s
  Time for transition matches:                         0.198s
  Time for transition assertions:                      0.007s
  Time for transition actions:                         0.021s
Automaton transfers with branching:                0
Automaton transfer successors:                       215293 (count: 215293, min: 1, max: 1, avg: 1.00) [1 x 215293]

CPA algorithm statistics
------------------------
Number of iterations:            136128
Max size of waitlist:            59
Average size of waitlist:        33
Number of computed successors:   154763
Max successors for one state:    2
Number of times merged:          13911
Number of times stopped:         13939
Number of times breaked:         31

Total time for CPA algorithm:        24.533s (Max:     1.985s)
  Time for choose from waitlist:      0.073s
  Time for precision adjustment:     17.855s
  Time for transfer relation:         4.898s
  Time for merge operator:            0.897s
  Time for stop operator:             0.150s
  Time for adding to reached set:     0.230s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   31
Avg. length of target path (in blocks):                 110 (count: 31, min: 2, max: 4, avg: 3.55)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.117s
  Counterexample analysis:                             0.742s (Max:     0.047s, Calls: 31)
    Refinement sat check:                              0.645s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.014s
  ARG update:                                          0.323s

Length of refined path (in blocks):                      62 (count: 31, min: 2, max: 2, avg: 2.00)
Number of affected states:                               31 (count: 31, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 31, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        31 (count: 31, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                27 (count: 31, min: 0, max: 1, avg: 0.87)
Different non-trivial interpolants along paths:           0 (count: 31, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 31, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 4721
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 4296.55
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:      25.823s
Time for refinements:                 1.289s
Average time for refinement:          0.041s
Max time for refinement:              0.070s

Code Coverage
-----------------------------
  Function coverage:      0.505
  Visited lines:          1748
  Total lines:            2330
  Line coverage:          0.750
  Visited conditions:     418
  Total conditions:       636
  Condition coverage:     0.657

CPAchecker general statistics
-----------------------------
Number of program locations:     3012
Number of CFA edges:             3419
Number of relevant variables:    446
Number of functions:             91
Number of loops:                 4
Size of reached set:             4019
  Number of reached locations:   1061 (35%)
    Avg states per location:     3
    Max states per location:     102 (at node N2288)
  Number of reached functions:   46 (51%)
  Number of partitions:          4019
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        13

Time for analysis setup:          3.970s
  Time for loading CPAs:          0.828s
  Time for loading parser:        0.466s
  Time for CFA construction:      2.573s
    Time for parsing file(s):     0.641s
    Time for AST to CFA:          0.823s
    Time for CFA sanity check:    0.221s
    Time for post-processing:     0.777s
      Time for var class.:        0.321s
Time for Analysis:               25.824s
CPU time for analysis:           25.830s
Total time for CPAchecker:       29.797s
Total CPU time for CPAchecker:   29.790s
Time for statistics:              0.124s

Time for Garbage Collector:       0.579s (in 76 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    70 MiB) max;     50MB (    48 MiB) avg;     76MB (    73 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   8010MB (  7639 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
