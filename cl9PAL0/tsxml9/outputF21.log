scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--asb100.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_oioo9p2n/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5775: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2296: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_word_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_new_dummy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2296: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            74870 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            16265 (22%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         58605 (78%)
  Times precision was empty:       1983 (3%)
  Times precision was {false}:     22627 (30%)
  Times result was cached:         49532 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      728 (1%)
  Times result was 'false':        59723 (80%)
Number of strengthen sat checks:   0
Number of coverage checks:         534734
  BDD entailment checks:           20136
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       388
Number of predicates discovered:          69
Number of abstraction locations:          6
Max number of predicates per location:    64
Avg number of predicates per location:    13
Total predicates per abstraction:         120700
Max number of predicates per abstraction: 64
Avg number of predicates per abstraction: 5.17
Number of irrelevant predicates:          97252 (81%)
Number of preds handled by boolean abs:   5738 (5%)
  Total number of models for allsat:      898
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.23

Time for post operator:                 97.593s
  Time for path formula creation:       96.327s
Time for strengthen operator:            2.555s
Time for prec operator:                121.855s
  Time for abstraction:                119.450s (Max:     1.626s, Count: 74870)
    Boolean abstraction:                31.595s
    Solving time:                       49.503s (Max:     0.494s)
    Model enumeration time:             10.660s
    Time for BDD construction:           0.065s (Max:     0.011s)
Time for merge operator:                10.087s
Time for coverage check:                 0.080s
  Time for BDD entailment checks:        0.035s
Total time for SMT solver (w/o itp):    60.163s

Number of path formula cache hits:   3859199 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    20.864s

Total number of created targets for pointer analysis: 64285
   Number of created targets for uf: *unsigned_short_int is 770
   Number of created targets for uf: *signed_long_int is 217
   Number of created targets for uf: *unsigned_long_int is 30097


Number of BDD nodes:                               16596
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       22579 (count: 169226, min: 0, max: 615, avg: 0.13)
Time for BDD node cleanup:                             0.030s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.296s
  Time for transition matches:                         2.338s
  Time for transition assertions:                      0.016s
  Time for transition actions:                         0.042s
Automaton transfers with branching:                0
Automaton transfer successors:                      3974842 (count: 3974842, min: 1, max: 1, avg: 1.00) [1 x 3974842]

CPA algorithm statistics
------------------------
Number of iterations:            2867389
Max size of waitlist:            131
Average size of waitlist:        71
Number of computed successors:   3194349
Max successors for one state:    2
Number of times merged:          257299
Number of times stopped:         261171
Number of times breaked:         1738

Total time for CPA algorithm:       279.734s (Max:    15.348s)
  Time for choose from waitlist:      0.837s
  Time for precision adjustment:    134.557s
  Time for transfer relation:       123.182s
  Time for merge operator:           12.057s
  Time for stop operator:             2.070s
  Time for adding to reached set:     2.661s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1738
Avg. length of target path (in blocks):               11324 (count: 1738, min: 2, max: 8, avg: 6.52)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 400.863s
  Counterexample analysis:                           387.177s (Max:     0.427s, Calls: 1738)
    Refinement sat check:                            339.580s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.103s
  Precision update:                                    0.212s
  ARG update:                                          4.910s

Length of refined path (in blocks):                   10803 (count: 1737, min: 2, max: 8, avg: 6.22)
Number of affected states:                             4161 (count: 1737, min: 1, max: 5, avg: 2.40)
Length (states) of path with itp 'true':               4905 (count: 1737, min: 0, max: 4, avg: 2.82)
Length (states) of path with itp non-trivial itp:      4161 (count: 1737, min: 1, max: 5, avg: 2.40)
Length (states) of path with itp 'false':               514 (count: 1737, min: 0, max: 1, avg: 0.30)
Different non-trivial interpolants along paths:           5 (count: 1737, min: 0, max: 2, avg: 0.00)
Equal non-trivial interpolants along paths:            2419 (count: 1737, min: 0, max: 3, avg: 1.39)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1738
Number of successful refinements:     1737
Number of failed refinements:         0
Max. size of reached set before ref.: 259803
Max. size of reached set after ref.:  166708
Avg. size of reached set before ref.: 90911.56
Avg. size of reached set after ref.:  89309.64

Total time for CEGAR algorithm:     896.591s
Time for refinements:               509.178s
Average time for refinement:          0.292s
Max time for refinement:              1.293s

Code Coverage
-----------------------------
  Function coverage:      0.698
  Visited lines:          2819
  Total lines:            3065
  Line coverage:          0.920
  Visited conditions:     790
  Total conditions:       902
  Condition coverage:     0.876

CPAchecker general statistics
-----------------------------
Number of program locations:     4029
Number of CFA edges:             4655
Number of relevant variables:    630
Number of functions:             129
Number of loops:                 5
Size of reached set:             167058
  Number of reached locations:   2058 (51%)
    Avg states per location:     81
    Max states per location:     3891 (at node N0)
  Number of reached functions:   90 (70%)
  Number of partitions:          166880
    Avg size of partitions:      1
    Max size of partitions:      61 (with key [N1326 (before line 4113), Function main called from node N1201, stack depth 1 [35cd68d4], stack [main]])
  Number of target states:       1
  Size of final wait list        117

Time for analysis setup:          3.778s
  Time for loading CPAs:          0.634s
  Time for loading parser:        0.470s
  Time for CFA construction:      2.599s
    Time for parsing file(s):     0.628s
    Time for AST to CFA:          0.863s
    Time for CFA sanity check:    0.173s
    Time for post-processing:     0.776s
      Time for var class.:        0.363s
Time for Analysis:              896.591s
CPU time for analysis:          896.470s
Total time for CPAchecker:      900.372s
Total CPU time for CPAchecker:  900.240s
Time for statistics:              1.247s

Time for Garbage Collector:      18.766s (in 1024 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                599MB (   571 MiB) max;    311MB (   296 MiB) avg;    608MB (   579 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           613MB (   585 MiB) max;    454MB (   433 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8926MB (  8512 MiB) max;   8552MB (  8156 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
