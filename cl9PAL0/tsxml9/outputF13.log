scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--asb100.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lql_gzz6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5775: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2296: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_word_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_new_dummy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2296: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            32378 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            6335 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         26043 (80%)
  Times precision was empty:       859 (3%)
  Times precision was {false}:     22649 (70%)
  Times result was cached:         8240 (25%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      630 (2%)
  Times result was 'false':        27809 (86%)
Number of strengthen sat checks:   0
Number of coverage checks:         202904
  BDD entailment checks:           700
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       388
Number of predicates discovered:          68
Number of abstraction locations:          5
Max number of predicates per location:    64
Avg number of predicates per location:    15
Total predicates per abstraction:         40055
Max number of predicates per abstraction: 64
Avg number of predicates per abstraction: 1.72
Number of irrelevant predicates:          32133 (80%)
Number of preds handled by boolean abs:   5136 (13%)
  Total number of models for allsat:      687
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.09

Time for post operator:                 19.201s
  Time for path formula creation:       18.728s
Time for strengthen operator:            1.100s
Time for prec operator:                786.163s
  Time for abstraction:                785.113s (Max:   680.038s, Count: 32378)
    Boolean abstraction:               716.535s
    Solving time:                       52.787s (Max:     0.709s)
    Model enumeration time:            692.663s
    Time for BDD construction:           0.701s (Max:     0.053s)
Time for merge operator:                 4.174s
Time for coverage check:                 0.019s
  Time for BDD entailment checks:        0.005s
Total time for SMT solver (w/o itp):   745.450s

Number of path formula cache hits:   1607457 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.305s

Total number of created targets for pointer analysis: 20324
   Number of created targets for uf: *unsigned_short_int is 172
   Number of created targets for uf: *signed_long_int is 433
   Number of created targets for uf: *unsigned_long_int is 1999


Number of BDD nodes:                               66785
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       21957 (count: 147999, min: 0, max: 615, avg: 0.15)
Time for BDD node cleanup:                             0.030s
Time for BDD garbage collection:                       0.077s (in 3 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.325s
  Time for transition matches:                         1.004s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.021s
Automaton transfers with branching:                0
Automaton transfer successors:                      1639805 (count: 1639805, min: 1, max: 1, avg: 1.00) [1 x 1639805]

CPA algorithm statistics
------------------------
Number of iterations:            1150070
Max size of waitlist:            189
Average size of waitlist:        54
Number of computed successors:   1283100
Max successors for one state:    2
Number of times merged:          101102
Number of times stopped:         101515
Number of times breaked:         350

Total time for CPA algorithm:       831.945s (Max:   682.752s)
  Time for choose from waitlist:      0.358s
  Time for precision adjustment:    791.407s
  Time for transfer relation:        30.891s
  Time for merge operator:            5.110s
  Time for stop operator:             1.024s
  Time for adding to reached set:     1.097s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   350
Avg. length of target path (in blocks):                1654 (count: 350, min: 2, max: 6, avg: 4.73)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  45.797s
  Counterexample analysis:                            43.014s (Max:     0.446s, Calls: 350)
    Refinement sat check:                             36.817s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.046s
  Precision update:                                    0.052s
  ARG update:                                          1.627s

Length of refined path (in blocks):                    1354 (count: 350, min: 2, max: 6, avg: 3.87)
Number of affected states:                              405 (count: 350, min: 1, max: 4, avg: 1.16)
Length (states) of path with itp 'true':                599 (count: 350, min: 0, max: 3, avg: 1.71)
Length (states) of path with itp non-trivial itp:       405 (count: 350, min: 1, max: 4, avg: 1.16)
Length (states) of path with itp 'false':               300 (count: 350, min: 0, max: 1, avg: 0.86)
Different non-trivial interpolants along paths:           6 (count: 350, min: 0, max: 3, avg: 0.02)
Equal non-trivial interpolants along paths:              49 (count: 350, min: 0, max: 3, avg: 0.14)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                350
Number of successful refinements:     350
Number of failed refinements:         0
Max. size of reached set before ref.: 62635
Max. size of reached set after ref.:  62285
Avg. size of reached set before ref.: 40195.74
Avg. size of reached set after ref.:  37064.01

Total time for CEGAR algorithm:     896.320s
Time for refinements:                55.510s
Average time for refinement:          0.158s
Max time for refinement:              0.496s

Code Coverage
-----------------------------
  Function coverage:      0.698
  Visited lines:          2769
  Total lines:            3065
  Line coverage:          0.903
  Visited conditions:     784
  Total conditions:       902
  Condition coverage:     0.869

CPAchecker general statistics
-----------------------------
Number of program locations:     4029
Number of CFA edges:             4655
Number of relevant variables:    630
Number of functions:             129
Number of loops:                 5
Size of reached set:             57670
  Number of reached locations:   2018 (50%)
    Avg states per location:     28
    Max states per location:     1292 (at node N3191)
  Number of reached functions:   90 (70%)
  Number of partitions:          57665
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1326 (before line 4113), Function main called from node N1201, stack depth 1 [216914], stack [main]])
  Number of target states:       0
  Size of final wait list        175

Time for analysis setup:          4.396s
  Time for loading CPAs:          0.725s
  Time for loading parser:        0.503s
  Time for CFA construction:      3.072s
    Time for parsing file(s):     0.692s
    Time for AST to CFA:          0.962s
    Time for CFA sanity check:    0.225s
    Time for post-processing:     1.046s
      Time for var class.:        0.404s
Time for Analysis:              896.320s
CPU time for analysis:          896.180s
Total time for CPAchecker:      900.718s
Total CPU time for CPAchecker:  900.560s
Time for statistics:              0.563s

Time for Garbage Collector:       7.786s (in 585 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                243MB (   232 MiB) max;    148MB (   142 MiB) avg;    255MB (   244 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           270MB (   257 MiB) max;    246MB (   234 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8928MB (  8514 MiB) max;   8598MB (  8200 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
