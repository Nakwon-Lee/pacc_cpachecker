scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--asb100.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_mkegt3n_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5775: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2296: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_word_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_new_dummy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2296: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5282 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            937 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4345 (82%)
  Times precision was empty:       160 (3%)
  Times precision was {false}:     2722 (52%)
  Times result was cached:         1843 (35%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      557 (11%)
  Times result was 'false':        4457 (84%)
Number of strengthen sat checks:   0
Number of coverage checks:         33034
  BDD entailment checks:           56
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       388
Number of predicates discovered:          39
Number of abstraction locations:          5
Max number of predicates per location:    36
Avg number of predicates per location:    11
Total predicates per abstraction:         8356
Max number of predicates per abstraction: 36
Avg number of predicates per abstraction: 2.55
Number of irrelevant predicates:          5213 (62%)
Number of preds handled by boolean abs:   2359 (28%)
  Total number of models for allsat:      536
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.96

Time for post operator:                  6.488s
  Time for path formula creation:        6.284s
Time for strengthen operator:            0.277s
Time for prec operator:                878.610s
  Time for abstraction:                878.296s (Max:   858.965s, Count: 5282)
    Boolean abstraction:               864.018s
    Solving time:                       10.382s (Max:     0.486s)
    Model enumeration time:            859.319s
    Time for BDD construction:           0.584s (Max:     0.038s)
Time for merge operator:                 2.616s
Time for coverage check:                 0.010s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):   869.702s

Number of path formula cache hits:   228246 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.890s

Total number of created targets for pointer analysis: 13921
   Number of created targets for uf: *unsigned_short_int is 121
   Number of created targets for uf: *signed_long_int is 289
   Number of created targets for uf: *unsigned_long_int is 1333


Number of BDD nodes:                               85404
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1696 (count: 20132, min: 0, max: 204, avg: 0.08)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.040s (in 2 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.747s
  Time for transition matches:                         0.284s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.019s
Automaton transfers with branching:                0
Automaton transfer successors:                       271687 (count: 271687, min: 1, max: 1, avg: 1.00) [1 x 271687]

CPA algorithm statistics
------------------------
Number of iterations:            188518
Max size of waitlist:            158
Average size of waitlist:        85
Number of computed successors:   210559
Max successors for one state:    2
Number of times merged:          16489
Number of times stopped:         16513
Number of times breaked:         14

Total time for CPA algorithm:       894.163s (Max:   863.919s)
  Time for choose from waitlist:      0.147s
  Time for precision adjustment:    880.023s
  Time for transfer relation:         9.744s
  Time for merge operator:            2.922s
  Time for stop operator:             0.198s
  Time for adding to reached set:     0.348s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14
Avg. length of target path (in blocks):                  66 (count: 14, min: 2, max: 8, avg: 4.71)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.068s
  Counterexample analysis:                             1.413s (Max:     0.195s, Calls: 14)
    Refinement sat check:                              1.233s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.002s
  ARG update:                                          0.551s

Length of refined path (in blocks):                      64 (count: 14, min: 2, max: 8, avg: 4.57)
Number of affected states:                               40 (count: 14, min: 1, max: 7, avg: 2.86)
Length (states) of path with itp 'true':                 10 (count: 14, min: 0, max: 3, avg: 0.71)
Length (states) of path with itp non-trivial itp:        40 (count: 14, min: 1, max: 7, avg: 2.86)
Length (states) of path with itp 'false':                 2 (count: 14, min: 0, max: 1, avg: 0.14)
Different non-trivial interpolants along paths:           1 (count: 14, min: 0, max: 1, avg: 0.07)
Equal non-trivial interpolants along paths:              25 (count: 14, min: 0, max: 6, avg: 1.79)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 31675
Max. size of reached set after ref.:  25244
Avg. size of reached set before ref.: 17908.86
Avg. size of reached set after ref.:  7171.86

Total time for CEGAR algorithm:     896.536s
Time for refinements:                 2.309s
Average time for refinement:          0.164s
Max time for refinement:              0.332s

Code Coverage
-----------------------------
  Function coverage:      0.698
  Visited lines:          2805
  Total lines:            3065
  Line coverage:          0.915
  Visited conditions:     784
  Total conditions:       902
  Condition coverage:     0.869

CPAchecker general statistics
-----------------------------
Number of program locations:     4029
Number of CFA edges:             4655
Number of relevant variables:    630
Number of functions:             129
Number of loops:                 5
Size of reached set:             39271
  Number of reached locations:   2044 (51%)
    Avg states per location:     19
    Max states per location:     896 (at node N3191)
  Number of reached functions:   90 (70%)
  Number of partitions:          39268
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1326 (before line 4113), Function main called from node N1201, stack depth 1 [216914], stack [main]])
  Number of target states:       0
  Size of final wait list        144

Time for analysis setup:          4.308s
  Time for loading CPAs:          0.779s
  Time for loading parser:        0.469s
  Time for CFA construction:      2.942s
    Time for parsing file(s):     0.651s
    Time for AST to CFA:          0.910s
    Time for CFA sanity check:    0.219s
    Time for post-processing:     1.046s
      Time for var class.:        0.405s
Time for Analysis:              896.536s
CPU time for analysis:          896.370s
Total time for CPAchecker:      900.848s
Total CPU time for CPAchecker:  900.660s
Time for statistics:              0.519s

Time for Garbage Collector:       1.728s (in 125 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                121MB (   115 MiB) max;     92MB (    88 MiB) avg;    132MB (   126 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     38MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           142MB (   135 MiB) max;    141MB (   135 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    40 MiB) avg
Total process virtual memory:   8728MB (  8324 MiB) max;   8399MB (  8010 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
