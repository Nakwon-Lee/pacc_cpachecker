scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--asb100.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ozdohz6d/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5775: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2296: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_word_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_new_dummy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2296: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2975 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            536 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2439 (82%)
  Times precision was empty:       156 (5%)
  Times precision was {false}:     2794 (94%)
  Times result was cached:         6 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      19 (1%)
  Times result was 'false':        2455 (83%)
Number of strengthen sat checks:   0
Number of coverage checks:         18177
  BDD entailment checks:           7
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       388
Number of predicates discovered:          13
Number of abstraction locations:          3
Max number of predicates per location:    12
Avg number of predicates per location:    4
Total predicates per abstraction:         2934
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 1.04
Number of irrelevant predicates:          2800 (95%)
Number of preds handled by boolean abs:   134 (5%)
  Total number of models for allsat:      25
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.32

Time for post operator:                  2.947s
  Time for path formula creation:        2.833s
Time for strengthen operator:            0.211s
Time for prec operator:                 16.260s
  Time for abstraction:                 16.048s (Max:     0.797s, Count: 2975)
    Boolean abstraction:                 4.740s
    Solving time:                        8.996s (Max:     0.447s)
    Model enumeration time:              1.595s
    Time for BDD construction:           0.030s (Max:     0.017s)
Time for merge operator:                 0.757s
Time for coverage check:                 0.006s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):    10.591s

Number of path formula cache hits:   141141 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.118s

Total number of created targets for pointer analysis: 401
   Number of created targets for uf: *unsigned_short_int is 85


Number of BDD nodes:                               388
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         619 (count: 16942, min: 0, max: 115, avg: 0.04)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.516s
  Time for transition matches:                         0.150s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                       151809 (count: 151809, min: 1, max: 1, avg: 1.00) [1 x 151809]

CPA algorithm statistics
------------------------
Number of iterations:            104573
Max size of waitlist:            73
Average size of waitlist:        62
Number of computed successors:   116879
Max successors for one state:    2
Number of times merged:          9085
Number of times stopped:         9086
Number of times breaked:         12

Total time for CPA algorithm:        24.315s (Max:     3.636s)
  Time for choose from waitlist:      0.095s
  Time for precision adjustment:     17.047s
  Time for transfer relation:         5.231s
  Time for merge operator:            0.997s
  Time for stop operator:             0.151s
  Time for adding to reached set:     0.258s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                  31 (count: 12, min: 2, max: 3, avg: 2.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.617s
  Counterexample analysis:                             0.249s (Max:     0.037s, Calls: 12)
    Refinement sat check:                              0.209s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.005s
  ARG update:                                          0.341s

Length of refined path (in blocks):                      24 (count: 12, min: 2, max: 2, avg: 2.00)
Number of affected states:                               12 (count: 12, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 12, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        12 (count: 12, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 7 (count: 12, min: 0, max: 1, avg: 0.58)
Different non-trivial interpolants along paths:           0 (count: 12, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 12, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 12503
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 8553.25
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:      25.108s
Time for refinements:                 0.792s
Average time for refinement:          0.066s
Max time for refinement:              0.115s

Code Coverage
-----------------------------
  Function coverage:      0.310
  Visited lines:          1551
  Total lines:            3065
  Line coverage:          0.506
  Visited conditions:     326
  Total conditions:       902
  Condition coverage:     0.361

CPAchecker general statistics
-----------------------------
Number of program locations:     4029
Number of CFA edges:             4655
Number of relevant variables:    630
Number of functions:             129
Number of loops:                 5
Size of reached set:             2795
  Number of reached locations:   749 (19%)
    Avg states per location:     3
    Max states per location:     67 (at node N3191)
  Number of reached functions:   40 (31%)
  Number of partitions:          2795
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        58

Time for analysis setup:          4.711s
  Time for loading CPAs:          0.900s
  Time for loading parser:        0.489s
  Time for CFA construction:      3.210s
    Time for parsing file(s):     0.735s
    Time for AST to CFA:          0.990s
    Time for CFA sanity check:    0.230s
    Time for post-processing:     1.133s
      Time for var class.:        0.432s
Time for Analysis:               25.108s
CPU time for analysis:           25.100s
Total time for CPAchecker:       29.822s
Total CPU time for CPAchecker:   29.810s
Time for statistics:              0.082s

Time for Garbage Collector:       0.818s (in 61 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                108MB (   103 MiB) max;     65MB (    62 MiB) avg;    114MB (   109 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8010MB (  7639 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
