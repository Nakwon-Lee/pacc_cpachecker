scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--staging--sbe-2t3e3--sbe-2t3e3.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2n4ygb2p/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5380: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5929: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6056: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6416: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6837: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8022: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8601: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8978: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9588: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9820: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10067: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6980: Function pointer *(hdlc->proto->type_trans) with type __be16 (*)(struct sk_buff *, struct net_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_hdlcdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_t3e3_ops_ndo_uninit_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_t3e3_ops_ndo_init_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hdlc_start_xmit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hdlc_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function try_module_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hdlc_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5470: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hdlc_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_subsys to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            59107 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            58819 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         288 (0%)
  Times precision was empty:       41605 (70%)
  Times precision was {false}:     1176 (2%)
  Times result was cached:         11243 (19%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5083 (9%)
  Times result was 'false':        11368 (19%)
Number of strengthen sat checks:   0
Number of coverage checks:         355052
  BDD entailment checks:           15162
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       2190
Number of predicates discovered:          6
Number of abstraction locations:          14
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         59090
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 9.44
Number of irrelevant predicates:          14815 (25%)
Number of preds handled by boolean abs:   14985 (25%)
  Total number of models for allsat:      945
  Max number of models for allsat:        4
  Avg number of models for allsat:        0.19

Time for post operator:                 63.951s
  Time for path formula creation:       61.670s
Time for strengthen operator:            5.266s
Time for prec operator:                647.273s
  Time for abstraction:                642.086s (Max:     1.182s, Count: 59107)
    Boolean abstraction:               424.332s
    Solving time:                      485.086s (Max:     0.651s)
    Model enumeration time:              7.564s
    Time for BDD construction:           0.067s (Max:     0.006s)
Time for merge operator:                12.722s
Time for coverage check:                 0.055s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):   492.650s

Number of path formula cache hits:   6791256 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    36.831s

Total number of created targets for pointer analysis: 270468
   Number of created targets for uf: *signed_int is 6062
   Number of created targets for uf: *unsigned_char is 193
   Number of created targets for uf: *unsigned_int is 4423


Number of BDD nodes:                               270
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6104 (count: 97861, min: 0, max: 144, avg: 0.06)
Time for BDD node cleanup:                             0.033s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.483s
  Time for transition matches:                         4.268s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      8832681 (count: 8832681, min: 1, max: 1, avg: 1.00) [1 x 8832681]

CPA algorithm statistics
------------------------
Number of iterations:            6863671
Max size of waitlist:            2728
Average size of waitlist:        733
Number of computed successors:   7078786
Max successors for one state:    2
Number of times merged:          169945
Number of times stopped:         184229
Number of times breaked:         30

Total time for CPA algorithm:       863.162s (Max:   571.804s)
  Time for choose from waitlist:      1.523s
  Time for precision adjustment:    681.409s
  Time for transfer relation:       143.149s
  Time for merge operator:           14.103s
  Time for stop operator:             4.367s
  Time for adding to reached set:     7.617s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   30
Avg. length of target path (in blocks):                 191 (count: 30, min: 2, max: 11, avg: 6.37)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  30.382s
  Counterexample analysis:                            18.244s (Max:     0.969s, Calls: 30)
    Refinement sat check:                             17.156s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.007s
  ARG update:                                         10.522s

Length of refined path (in blocks):                     177 (count: 30, min: 2, max: 11, avg: 5.90)
Number of affected states:                              147 (count: 30, min: 1, max: 10, avg: 4.90)
Length (states) of path with itp 'true':                  0 (count: 30, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       147 (count: 30, min: 1, max: 10, avg: 4.90)
Length (states) of path with itp 'false':                 6 (count: 30, min: 0, max: 1, avg: 0.20)
Different non-trivial interpolants along paths:           0 (count: 30, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             117 (count: 30, min: 0, max: 9, avg: 3.90)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                30
Number of successful refinements:     30
Number of failed refinements:         0
Max. size of reached set before ref.: 450304
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 157518.50
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:     895.693s
Time for refinements:                32.530s
Average time for refinement:          1.084s
Max time for refinement:              3.069s

Code Coverage
-----------------------------
  Function coverage:      0.432
  Visited lines:          2311
  Total lines:            3909
  Line coverage:          0.591
  Visited conditions:     478
  Total conditions:       904
  Condition coverage:     0.529

CPAchecker general statistics
-----------------------------
Number of program locations:     5265
Number of CFA edges:             6081
Number of relevant variables:    484
Number of functions:             234
Number of loops:                 32
Size of reached set:             2157875
  Size of final wait list        2725

Time for analysis setup:          4.622s
  Time for loading CPAs:          0.742s
  Time for loading parser:        0.555s
  Time for CFA construction:      3.247s
    Time for parsing file(s):     0.783s
    Time for AST to CFA:          1.256s
    Time for CFA sanity check:    0.262s
    Time for post-processing:     0.796s
      Time for var class.:        0.380s
Time for Analysis:              895.693s
CPU time for analysis:          895.590s
Total time for CPAchecker:      900.318s
Total CPU time for CPAchecker:  900.200s
Time for statistics:              8.486s

Time for Garbage Collector:      68.865s (in 708 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2481MB (  2366 MiB) max;    950MB (   906 MiB) avg;   2571MB (  2452 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          2765MB (  2636 MiB) max;   1410MB (  1344 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8798MB (  8390 MiB) max;   8380MB (  7992 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
