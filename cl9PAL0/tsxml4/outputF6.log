scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--staging--sbe-2t3e3--sbe-2t3e3.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bvb2edig/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5380: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5929: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6056: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6416: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6837: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8022: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8601: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8978: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9588: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9820: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10067: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6980: Function pointer *(hdlc->proto->type_trans) with type __be16 (*)(struct sk_buff *, struct net_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_hdlcdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_t3e3_ops_ndo_uninit_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_t3e3_ops_ndo_init_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hdlc_start_xmit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hdlc_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function try_module_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hdlc_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5470: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hdlc_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_subsys to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_hdlc_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function module_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            43701 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            43258 (99%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         443 (1%)
  Times precision was empty:       21009 (48%)
  Times precision was {false}:     249 (1%)
  Times result was cached:         16020 (37%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6423 (15%)
  Times result was 'false':        17066 (39%)
Number of strengthen sat checks:   0
Number of coverage checks:         410598
  BDD entailment checks:           3666
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       2190
Number of predicates discovered:          6
Number of abstraction locations:          21
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         64417
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 9.65
Number of irrelevant predicates:          3628 (6%)
Number of preds handled by boolean abs:   16603 (26%)
  Total number of models for allsat:      1217
  Max number of models for allsat:        4
  Avg number of models for allsat:        0.19

Time for post operator:                 56.740s
  Time for path formula creation:       54.170s
Time for strengthen operator:            6.650s
Time for prec operator:                632.044s
  Time for abstraction:                627.144s (Max:     2.772s, Count: 43701)
    Boolean abstraction:               428.258s
    Solving time:                      429.970s (Max:     1.700s)
    Model enumeration time:              7.795s
    Time for BDD construction:           0.082s (Max:     0.004s)
Time for merge operator:                10.629s
Time for coverage check:                 0.047s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):   437.766s

Number of path formula cache hits:   8907389 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    27.916s

Total number of created targets for pointer analysis: 239371
   Number of created targets for uf: *signed_int is 5202
   Number of created targets for uf: *unsigned_char is 97
   Number of created targets for uf: *unsigned_int is 5899


Number of BDD nodes:                               282
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7713 (count: 72203, min: 0, max: 136, avg: 0.11)
Time for BDD node cleanup:                             0.024s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.687s
  Time for transition matches:                         5.106s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                     10487912 (count: 10487912, min: 1, max: 1, avg: 1.00) [1 x 10487912]

CPA algorithm statistics
------------------------
Number of iterations:            8151972
Max size of waitlist:            1013
Average size of waitlist:        333
Number of computed successors:   8397610
Max successors for one state:    2
Number of times merged:          203466
Number of times stopped:         205663
Number of times breaked:         44

Total time for CPA algorithm:       852.289s (Max:   453.268s)
  Time for choose from waitlist:      1.754s
  Time for precision adjustment:    669.857s
  Time for transfer relation:       144.467s
  Time for merge operator:           12.217s
  Time for stop operator:             4.702s
  Time for adding to reached set:     7.299s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   44
Avg. length of target path (in blocks):                 335 (count: 44, min: 2, max: 11, avg: 7.61)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  40.474s
  Counterexample analysis:                            27.233s (Max:     0.927s, Calls: 44)
    Refinement sat check:                             25.692s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.015s
  ARG update:                                         12.784s

Length of refined path (in blocks):                     331 (count: 44, min: 2, max: 11, avg: 7.52)
Number of affected states:                              287 (count: 44, min: 1, max: 10, avg: 6.52)
Length (states) of path with itp 'true':                  0 (count: 44, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       287 (count: 44, min: 1, max: 10, avg: 6.52)
Length (states) of path with itp 'false':                 2 (count: 44, min: 0, max: 1, avg: 0.05)
Different non-trivial interpolants along paths:           0 (count: 44, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             243 (count: 44, min: 0, max: 9, avg: 5.52)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                44
Number of successful refinements:     44
Number of failed refinements:         0
Max. size of reached set before ref.: 272523
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 149809.91
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:     895.607s
Time for refinements:                43.318s
Average time for refinement:          0.984s
Max time for refinement:              1.623s

Code Coverage
-----------------------------
  Function coverage:      0.440
  Visited lines:          2394
  Total lines:            3909
  Line coverage:          0.612
  Visited conditions:     504
  Total conditions:       904
  Condition coverage:     0.558

CPAchecker general statistics
-----------------------------
Number of program locations:     5265
Number of CFA edges:             6081
Number of relevant variables:    484
Number of functions:             234
Number of loops:                 32
Size of reached set:             1583597
  Size of final wait list        1010

Time for analysis setup:          4.718s
  Time for loading CPAs:          0.751s
  Time for loading parser:        0.554s
  Time for CFA construction:      3.352s
    Time for parsing file(s):     0.765s
    Time for AST to CFA:          1.307s
    Time for CFA sanity check:    0.280s
    Time for post-processing:     0.859s
      Time for var class.:        0.385s
Time for Analysis:              895.607s
CPU time for analysis:          895.530s
Total time for CPAchecker:      900.328s
Total CPU time for CPAchecker:  900.240s
Time for statistics:              6.460s

Time for Garbage Collector:      71.645s (in 1345 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1845MB (  1759 MiB) max;    587MB (   560 MiB) avg;   1971MB (  1880 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          2007MB (  1914 MiB) max;    847MB (   808 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8733MB (  8328 MiB) max;   8337MB (  7951 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
