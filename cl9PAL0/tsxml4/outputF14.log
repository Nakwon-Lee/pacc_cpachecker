scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--staging--sbe-2t3e3--sbe-2t3e3.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_45vuu9t7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5380: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5929: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6056: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6416: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6837: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8022: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8601: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8978: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9588: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9820: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10067: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6980: Function pointer *(hdlc->proto->type_trans) with type __be16 (*)(struct sk_buff *, struct net_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_hdlcdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_t3e3_ops_ndo_uninit_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_t3e3_ops_ndo_init_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hdlc_start_xmit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hdlc_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function try_module_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hdlc_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5470: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hdlc_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_subsys to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_hdlc_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function module_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            73053 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            72675 (99%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         378 (1%)
  Times precision was empty:       26978 (37%)
  Times precision was {false}:     3076 (4%)
  Times result was cached:         42516 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      483 (1%)
  Times result was 'false':        35669 (49%)
Number of strengthen sat checks:   0
Number of coverage checks:         637536
  BDD entailment checks:           11262
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       2190
Number of predicates discovered:          6
Number of abstraction locations:          15
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         63501
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 17.84
Number of irrelevant predicates:          52680 (83%)
Number of preds handled by boolean abs:   851 (1%)
  Total number of models for allsat:      494
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.02

Time for post operator:                 66.801s
  Time for path formula creation:       62.260s
Time for strengthen operator:            9.296s
Time for prec operator:                529.967s
  Time for abstraction:                522.077s (Max:     2.186s, Count: 73053)
    Boolean abstraction:                54.669s
    Solving time:                      192.696s (Max:     1.249s)
    Model enumeration time:              4.698s
    Time for BDD construction:           0.037s (Max:     0.003s)
Time for merge operator:                11.262s
Time for coverage check:                 0.073s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):   197.394s

Number of path formula cache hits:   14609481 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    29.863s

Total number of created targets for pointer analysis: 210042
   Number of created targets for uf: *signed_int is 1972
   Number of created targets for uf: *unsigned_char is 12513
   Number of created targets for uf: *unsigned_int is 123


Number of BDD nodes:                               310
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1088 (count: 69046, min: 0, max: 30, avg: 0.02)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 14.121s
  Time for transition matches:                         8.143s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                     16149957 (count: 16149957, min: 1, max: 1, avg: 1.00) [1 x 16149957]

CPA algorithm statistics
------------------------
Number of iterations:            12566118
Max size of waitlist:            2408
Average size of waitlist:        359
Number of computed successors:   12945670
Max successors for one state:    2
Number of times merged:          313137
Number of times stopped:         321314
Number of times breaked:         41

Total time for CPA algorithm:       845.468s (Max:   105.110s)
  Time for choose from waitlist:      2.633s
  Time for precision adjustment:    587.838s
  Time for transfer relation:       204.165s
  Time for merge operator:           13.697s
  Time for stop operator:             6.867s
  Time for adding to reached set:    12.132s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   41
Avg. length of target path (in blocks):                 232 (count: 41, min: 2, max: 7, avg: 5.66)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  45.937s
  Counterexample analysis:                            21.309s (Max:     0.971s, Calls: 41)
    Refinement sat check:                             20.110s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.013s
  ARG update:                                         24.232s

Length of refined path (in blocks):                     203 (count: 41, min: 2, max: 7, avg: 4.95)
Number of affected states:                              162 (count: 41, min: 1, max: 6, avg: 3.95)
Length (states) of path with itp 'true':                  0 (count: 41, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       162 (count: 41, min: 1, max: 6, avg: 3.95)
Length (states) of path with itp 'false':                12 (count: 41, min: 0, max: 1, avg: 0.29)
Different non-trivial interpolants along paths:           0 (count: 41, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             121 (count: 41, min: 0, max: 5, avg: 2.95)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                41
Number of successful refinements:     41
Number of failed refinements:         0
Max. size of reached set before ref.: 521877
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 299802.95
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:     895.925s
Time for refinements:                50.456s
Average time for refinement:          1.230s
Max time for refinement:              1.962s

Code Coverage
-----------------------------
  Function coverage:      0.436
  Visited lines:          2285
  Total lines:            3909
  Line coverage:          0.585
  Visited conditions:     492
  Total conditions:       904
  Condition coverage:     0.544

CPAchecker general statistics
-----------------------------
Number of program locations:     5265
Number of CFA edges:             6081
Number of relevant variables:    484
Number of functions:             234
Number of loops:                 32
Size of reached set:             297095
  Number of reached locations:   1530 (29%)
    Avg states per location:     194
    Max states per location:     18908 (at node N912)
  Number of reached functions:   102 (44%)
  Number of partitions:          297091
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N277 (before line 5250), Function main called from node N267, stack depth 1 [f324455], stack [main]])
  Number of target states:       0
  Size of final wait list        145

Time for analysis setup:          4.409s
  Time for loading CPAs:          0.703s
  Time for loading parser:        0.479s
  Time for CFA construction:      3.128s
    Time for parsing file(s):     0.769s
    Time for AST to CFA:          1.215s
    Time for CFA sanity check:    0.217s
    Time for post-processing:     0.765s
      Time for var class.:        0.353s
Time for Analysis:              895.925s
CPU time for analysis:          895.880s
Total time for CPAchecker:      900.337s
Total CPU time for CPAchecker:  900.280s
Time for statistics:              2.090s

Time for Garbage Collector:     105.933s (in 909 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1495MB (  1426 MiB) max;    814MB (   776 MiB) avg;   1531MB (  1460 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          1612MB (  1537 MiB) max;   1215MB (  1159 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8464MB (  8072 MiB) max;   8317MB (  7931 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
