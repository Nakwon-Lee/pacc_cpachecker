scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--message--i2o--i2o_core.ko-ldv_main4_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_u48kl3_z/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4394: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5089: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5980: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6585: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7272: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7304: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7307: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7310: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8767: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8382: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8415: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8289: Function pointer *(ops->map_sg) with type int (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 2842-2843: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8242-8243: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8306: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 2876: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4475: Function pointer *(drv->notify_controller_add) with type void (*)(struct i2o_controller *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4489: Function pointer *(drv->notify_controller_remove) with type void (*)(struct i2o_controller *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4502: Function pointer *(drv->notify_device_add) with type void (*)(struct i2o_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4515: Function pointer *(drv->notify_device_remove) with type void (*)(struct i2o_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_initialize to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_name to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_slot to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8415: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_uninterruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4489: Ignoring function call through function pointer *(drv->notify_controller_remove): (*(drv->notify_controller_remove))(c); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8382: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            178204 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            172375 (97%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5829 (3%)
  Times precision was empty:       42105 (24%)
  Times precision was {false}:     4271 (2%)
  Times result was cached:         115789 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      16039 (9%)
  Times result was 'false':        55355 (31%)
Number of strengthen sat checks:   0
Number of coverage checks:         509995
  BDD entailment checks:           149699
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1007
Number of predicates discovered:          40
Number of abstraction locations:          13
Max number of predicates per location:    31
Avg number of predicates per location:    5
Total predicates per abstraction:         872474
Max number of predicates per abstraction: 30
Avg number of predicates per abstraction: 42.96
Number of irrelevant predicates:          454841 (52%)
Number of preds handled by boolean abs:   71789 (8%)
  Total number of models for allsat:      19039
  Max number of models for allsat:        28
  Avg number of models for allsat:        1.19

Time for post operator:                172.397s
  Time for path formula creation:      170.059s
Time for strengthen operator:            4.624s
Time for prec operator:                167.282s
  Time for abstraction:                163.067s (Max:     4.514s, Count: 178204)
    Boolean abstraction:                40.095s
    Solving time:                       60.756s (Max:     0.304s)
    Model enumeration time:              4.018s
    Time for BDD construction:           0.308s (Max:     0.008s)
Time for merge operator:                15.359s
Time for coverage check:                 0.284s
  Time for BDD entailment checks:        0.205s
Total time for SMT solver (w/o itp):    64.774s

Number of path formula cache hits:   3074155 (46%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   143.643s

Total number of created targets for pointer analysis: 786687
   Number of created targets for uf: *(void)* is 3
   Number of created targets for uf: *(struct___wait_queue_head)* is 13485
   Number of created targets for uf: *signed_int is 5
   Number of created targets for uf: *(char)* is 3
   Number of created targets for uf: *(struct_list_head)* is 6111
   Number of created targets for uf: *(struct_pci_dev)* is 2
   Number of created targets for uf: *(struct_kmem_cache)* is 2
   Number of created targets for uf: *unsigned_long_long_int is 28131
   Number of created targets for uf: *(struct_mempool_s)* is 2
   Number of created targets for uf: *unsigned_int is 202
   Number of created targets for uf: *unsigned_long_int is 5


Number of BDD nodes:                               50885
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       39663 (count: 321588, min: 0, max: 1821, avg: 0.12)
Time for BDD node cleanup:                             0.062s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.305s
  Time for transition matches:                         4.401s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.021s
Automaton transfers with branching:                0
Automaton transfer successors:                      6505043 (count: 6505043, min: 1, max: 1, avg: 1.00) [1 x 6505043]

CPA algorithm statistics
------------------------
Number of iterations:            3936460
Max size of waitlist:            1018
Average size of waitlist:        516
Number of computed successors:   4247260
Max successors for one state:    2
Number of times merged:          180148
Number of times stopped:         228685
Number of times breaked:         742

Total time for CPA algorithm:       443.677s (Max:    19.798s)
  Time for choose from waitlist:      1.087s
  Time for precision adjustment:    186.933s
  Time for transfer relation:       221.393s
  Time for merge operator:           17.457s
  Time for stop operator:             3.896s
  Time for adding to reached set:     5.384s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   742
Avg. length of target path (in blocks):               33051 (count: 742, min: 2, max: 69, avg: 44.54)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 204.843s
  Counterexample analysis:                           196.293s (Max:     5.915s, Calls: 742)
    Refinement sat check:                            165.163s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.031s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.122s
  Precision update:                                    0.091s
  ARG update:                                          5.954s

Length of refined path (in blocks):                   28149 (count: 742, min: 2, max: 62, avg: 37.94)
Number of affected states:                             9978 (count: 742, min: 1, max: 28, avg: 13.45)
Length (states) of path with itp 'true':              17429 (count: 742, min: 0, max: 34, avg: 23.49)
Length (states) of path with itp non-trivial itp:      9978 (count: 742, min: 1, max: 28, avg: 13.45)
Length (states) of path with itp 'false':               731 (count: 742, min: 0, max: 1, avg: 0.99)
Different non-trivial interpolants along paths:        8932 (count: 742, min: 0, max: 27, avg: 12.04)
Equal non-trivial interpolants along paths:             304 (count: 742, min: 0, max: 14, avg: 0.41)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                742
Number of successful refinements:     742
Number of failed refinements:         0
Max. size of reached set before ref.: 270422
Max. size of reached set after ref.:  265417
Avg. size of reached set before ref.: 210521.61
Avg. size of reached set after ref.:  205524.17

Total time for CEGAR algorithm:     895.174s
Time for refinements:               334.470s
Average time for refinement:          0.450s
Max time for refinement:              6.105s

Code Coverage
-----------------------------
  Function coverage:      0.341
  Visited lines:          1616
  Total lines:            4179
  Line coverage:          0.387
  Visited conditions:     308
  Total conditions:       1002
  Condition coverage:     0.307

CPAchecker general statistics
-----------------------------
Number of program locations:     5733
Number of CFA edges:             6471
Number of relevant variables:    903
Number of functions:             258
Number of loops:                 58
Size of reached set:             255114
  Number of reached locations:   1078 (19%)
    Avg states per location:     236
    Max states per location:     5512 (at node N5062)
  Number of reached functions:   88 (34%)
  Number of partitions:          254492
    Avg size of partitions:      1
    Max size of partitions:      28 (with key [N683 (before line 3541), Function i2o_iop_init_outbound_queue called from node N830, stack depth 5 [2e68f724], stack [main, i2o_pci_probe, i2o_iop_add, i2o_iop_activate, i2o_iop_init_outbound_queue]])
  Number of target states:       0
  Size of final wait list        953

Time for analysis setup:          4.811s
  Time for loading CPAs:          0.776s
  Time for loading parser:        0.563s
  Time for CFA construction:      3.350s
    Time for parsing file(s):     0.765s
    Time for AST to CFA:          1.171s
    Time for CFA sanity check:    0.328s
    Time for post-processing:     0.917s
      Time for var class.:        0.459s
Time for Analysis:              895.174s
CPU time for analysis:          895.140s
Total time for CPAchecker:      899.988s
Total CPU time for CPAchecker:  899.950s
Time for statistics:              1.979s

Time for Garbage Collector:      58.231s (in 431 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2407MB (  2296 MiB) max;   1110MB (  1059 MiB) avg;   2564MB (  2445 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:          3313MB (  3159 MiB) max;   1649MB (  1573 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   9371MB (  8937 MiB) max;   8637MB (  8237 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
