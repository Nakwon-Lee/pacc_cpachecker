scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--message--i2o--i2o_core.ko-ldv_main4_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kt36bd78/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4394: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5089: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5980: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6585: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7272: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7304: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7307: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7310: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8767: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8382: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8415: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8289: Function pointer *(ops->map_sg) with type int (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 2842-2843: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8242-8243: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8306: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 2876: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4475: Function pointer *(drv->notify_controller_add) with type void (*)(struct i2o_controller *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4489: Function pointer *(drv->notify_controller_remove) with type void (*)(struct i2o_controller *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4502: Function pointer *(drv->notify_device_add) with type void (*)(struct i2o_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4515: Function pointer *(drv->notify_device_remove) with type void (*)(struct i2o_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_initialize to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_name to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_slot to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8415: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_uninterruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8382: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_find_parent_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function allocate_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 2842-2843: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544ULL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2876: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            98360 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            93632 (95%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4728 (5%)
  Times precision was empty:       9470 (10%)
  Times precision was {false}:     706 (1%)
  Times result was cached:         20741 (21%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      67443 (69%)
  Times result was 'false':        64893 (66%)
Number of strengthen sat checks:   0
Number of coverage checks:         719164
  BDD entailment checks:           595754
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1007
Number of predicates discovered:          144
Number of abstraction locations:          15
Max number of predicates per location:    131
Avg number of predicates per location:    14
Total predicates per abstraction:         1750792
Max number of predicates per abstraction: 131
Avg number of predicates per abstraction: 25.69
Number of irrelevant predicates:          314550 (18%)
Number of preds handled by boolean abs:   917712 (52%)
  Total number of models for allsat:      378005
  Max number of models for allsat:        129
  Avg number of models for allsat:        5.60

Time for post operator:                 31.004s
  Time for path formula creation:       30.134s
Time for strengthen operator:            1.797s
Time for prec operator:                657.564s
  Time for abstraction:                655.610s (Max:     1.032s, Count: 98360)
    Boolean abstraction:               489.947s
    Solving time:                      297.944s (Max:     0.507s)
    Model enumeration time:             43.644s
    Time for BDD construction:         146.429s (Max:     0.674s)
Time for merge operator:                 3.460s
Time for coverage check:                 7.862s
  Time for BDD entailment checks:        7.771s
Total time for SMT solver (w/o itp):   341.588s

Number of path formula cache hits:   2349036 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    20.219s

Total number of created targets for pointer analysis: 65273
   Number of created targets for uf: *(void)* is 311
   Number of created targets for uf: *(struct___wait_queue_head)* is 52
   Number of created targets for uf: *(char)* is 27
   Number of created targets for uf: *signed_int is 29
   Number of created targets for uf: *(struct_list_head)* is 124
   Number of created targets for uf: *(struct_pci_dev)* is 10
   Number of created targets for uf: *(struct_kmem_cache)* is 10
   Number of created targets for uf: *unsigned_long_long_int is 35
   Number of created targets for uf: *(struct_mempool_s)* is 10
   Number of created targets for uf: *unsigned_int is 7
   Number of created targets for uf: *char is 73
   Number of created targets for uf: *unsigned_long_int is 78


Number of BDD nodes:                               476490
Size of BDD node table:                            520679
Size of BDD cache:                                 52067
Size of BDD node cleanup queue:                     1977216 (count: 1772955, min: 0, max: 8085, avg: 1.12)
Time for BDD node cleanup:                             0.551s
Time for BDD garbage collection:                      41.701s (in 5478 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.107s
  Time for transition matches:                         1.719s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.014s
Automaton transfers with branching:                0
Automaton transfer successors:                      2852006 (count: 2852006, min: 1, max: 1, avg: 1.00) [1 x 2852006]

CPA algorithm statistics
------------------------
Number of iterations:            1452583
Max size of waitlist:            124
Average size of waitlist:        97
Number of computed successors:   1591371
Max successors for one state:    2
Number of times merged:          61705
Number of times stopped:         68592
Number of times breaked:         278

Total time for CPA algorithm:       734.661s (Max:    16.656s)
  Time for choose from waitlist:      0.583s
  Time for precision adjustment:    664.857s
  Time for transfer relation:        50.287s
  Time for merge operator:            4.612s
  Time for stop operator:             9.375s
  Time for adding to reached set:     1.910s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   278
Avg. length of target path (in blocks):               21454 (count: 278, min: 2, max: 156, avg: 77.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 140.323s
  Counterexample analysis:                           136.403s (Max:     1.031s, Calls: 278)
    Refinement sat check:                            101.515s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.026s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.247s
  Precision update:                                    0.077s
  ARG update:                                          2.115s

Length of refined path (in blocks):                   19871 (count: 278, min: 2, max: 149, avg: 71.48)
Number of affected states:                            14626 (count: 278, min: 1, max: 128, avg: 52.61)
Length (states) of path with itp 'true':               4967 (count: 278, min: 0, max: 22, avg: 17.87)
Length (states) of path with itp non-trivial itp:     14626 (count: 278, min: 1, max: 128, avg: 52.61)
Length (states) of path with itp 'false':               241 (count: 278, min: 0, max: 1, avg: 0.87)
Different non-trivial interpolants along paths:       13915 (count: 278, min: 0, max: 127, avg: 50.05)
Equal non-trivial interpolants along paths:             433 (count: 278, min: 0, max: 26, avg: 1.56)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                278
Number of successful refinements:     278
Number of failed refinements:         0
Max. size of reached set before ref.: 52794
Max. size of reached set after ref.:  46679
Avg. size of reached set before ref.: 40232.90
Avg. size of reached set after ref.:  35174.42

Total time for CEGAR algorithm:     895.559s
Time for refinements:               154.024s
Average time for refinement:          0.554s
Max time for refinement:              1.144s

Code Coverage
-----------------------------
  Function coverage:      0.333
  Visited lines:          1562
  Total lines:            4179
  Line coverage:          0.374
  Visited conditions:     292
  Total conditions:       1002
  Condition coverage:     0.291

CPAchecker general statistics
-----------------------------
Number of program locations:     5733
Number of CFA edges:             6471
Number of relevant variables:    903
Number of functions:             258
Number of loops:                 58
Size of reached set:             51629
  Number of reached locations:   1023 (18%)
    Avg states per location:     50
    Max states per location:     1507 (at node N5062)
  Number of reached functions:   86 (33%)
  Number of partitions:          51495
    Avg size of partitions:      1
    Max size of partitions:      109 (with key [N683 (before line 3541), Function i2o_iop_init_outbound_queue called from node N830, stack depth 5 [d079e90], stack [main, i2o_pci_probe, i2o_iop_add, i2o_iop_activate, i2o_iop_init_outbound_queue]])
  Number of target states:       0
  Size of final wait list        112

Time for analysis setup:          4.738s
  Time for loading CPAs:          0.625s
  Time for loading parser:        0.551s
  Time for CFA construction:      3.468s
    Time for parsing file(s):     0.897s
    Time for AST to CFA:          1.186s
    Time for CFA sanity check:    0.340s
    Time for post-processing:     0.912s
      Time for var class.:        0.440s
Time for Analysis:              895.559s
CPU time for analysis:          895.440s
Total time for CPAchecker:      900.300s
Total CPU time for CPAchecker:  900.180s
Time for statistics:              0.446s

Time for Garbage Collector:      19.057s (in 958 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                526MB (   501 MiB) max;    288MB (   274 MiB) avg;    555MB (   529 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           672MB (   641 MiB) max;    444MB (   423 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:  13132MB ( 12524 MiB) max;  10865MB ( 10362 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
