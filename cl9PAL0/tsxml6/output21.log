scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2edgljrj/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4007: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3889 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            3496 (90%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         393 (10%)
  Times precision was empty:       1123 (29%)
  Times precision was {false}:     723 (19%)
  Times result was cached:         1621 (42%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      422 (11%)
  Times result was 'false':        1060 (27%)
Number of strengthen sat checks:   0
Number of coverage checks:         27306
  BDD entailment checks:           3498
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       190
Number of predicates discovered:          15
Number of abstraction locations:          8
Max number of predicates per location:    13
Avg number of predicates per location:    3
Total predicates per abstraction:         8315
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 7.26
Number of irrelevant predicates:          6691 (80%)
Number of preds handled by boolean abs:   707 (9%)
  Total number of models for allsat:      337
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.80

Time for post operator:                  4.906s
  Time for path formula creation:        4.726s
Time for strengthen operator:            0.282s
Time for prec operator:                 10.617s
  Time for abstraction:                 10.328s (Max:     0.175s, Count: 3889)
    Boolean abstraction:                 3.676s
    Solving time:                        5.356s (Max:     0.108s)
    Model enumeration time:              0.406s
    Time for BDD construction:           0.066s (Max:     0.014s)
Time for merge operator:                 1.912s
Time for coverage check:                 0.047s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     5.762s

Number of path formula cache hits:   120090 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.998s

Total number of created targets for pointer analysis: 26318
   Number of created targets for uf: *(struct_backlight_device)* is 2
   Number of created targets for uf: *(struct_dentry)* is 7
   Number of created targets for uf: *signed_int is 14
   Number of created targets for uf: *unsigned_long_long_int is 2053
   Number of created targets for uf: *(struct_platform_device)* is 4
   Number of created targets for uf: *(struct_rfkill)* is 28
   Number of created targets for uf: *unsigned_long_int is 73


Number of BDD nodes:                               791
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1536 (count: 11723, min: 0, max: 120, avg: 0.13)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.426s
Automaton transfers with branching:                0
Automaton transfer successors:                       152852 (count: 152852, min: 1, max: 1, avg: 1.00) [1 x 152852]

CPA algorithm statistics
------------------------
Number of iterations:            91449
Max size of waitlist:            38
Average size of waitlist:        15
Number of computed successors:   106504
Max successors for one state:    2
Number of times merged:          11904
Number of times stopped:         13691
Number of times breaked:         55

Total time for CPA algorithm:        22.314s (Max:     3.715s)
  Time for choose from waitlist:      0.111s
  Time for precision adjustment:     11.477s
  Time for transfer relation:         7.423s
  Time for merge operator:            2.228s
  Time for stop operator:             0.289s
  Time for adding to reached set:     0.258s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   55
Avg. length of target path (in blocks):                 459 (count: 55, min: 2, max: 13, avg: 8.35)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.252s
  Counterexample analysis:                             2.764s (Max:     0.139s, Calls: 55)
    Refinement sat check:                              2.334s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.017s
  ARG update:                                          0.374s

Length of refined path (in blocks):                     427 (count: 55, min: 2, max: 13, avg: 7.76)
Number of affected states:                               74 (count: 55, min: 1, max: 8, avg: 1.35)
Length (states) of path with itp 'true':                298 (count: 55, min: 0, max: 11, avg: 5.42)
Length (states) of path with itp non-trivial itp:        74 (count: 55, min: 1, max: 8, avg: 1.35)
Length (states) of path with itp 'false':                12 (count: 55, min: 0, max: 1, avg: 0.22)
Different non-trivial interpolants along paths:           0 (count: 55, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              19 (count: 55, min: 0, max: 7, avg: 0.35)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                55
Number of successful refinements:     55
Number of failed refinements:         0
Max. size of reached set before ref.: 19230
Max. size of reached set after ref.:  17915
Avg. size of reached set before ref.: 8620.85
Avg. size of reached set after ref.:  6953.93

Total time for CEGAR algorithm:      26.353s
Time for refinements:                 3.794s
Average time for refinement:          0.068s
Max time for refinement:              0.161s

Code Coverage
-----------------------------
  Function coverage:      0.060
  Visited lines:          839
  Total lines:            2094
  Line coverage:          0.401
  Visited conditions:     36
  Total conditions:       632
  Condition coverage:     0.057

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             71
  Number of reached locations:   71 (2%)
    Avg states per location:     1
    Max states per location:     1 (at node N0)
  Number of reached functions:   6 (6%)
  Number of partitions:          71
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        14

Time for analysis setup:          3.966s
  Time for loading CPAs:          0.811s
  Time for loading parser:        0.552s
  Time for CFA construction:      2.474s
    Time for parsing file(s):     0.732s
    Time for AST to CFA:          0.817s
    Time for CFA sanity check:    0.184s
    Time for post-processing:     0.585s
      Time for var class.:        0.236s
Time for Analysis:               26.354s
CPU time for analysis:           26.350s
Total time for CPAchecker:       30.323s
Total CPU time for CPAchecker:   30.310s
Time for statistics:              0.068s

Time for Garbage Collector:       0.802s (in 70 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                103MB (    98 MiB) max;     60MB (    57 MiB) avg;    110MB (   104 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    34 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
