scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_o5qd7ilo/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4007: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            173583 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            148872 (86%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24711 (14%)
  Times precision was empty:       13956 (8%)
  Times precision was {false}:     3566 (2%)
  Times result was cached:         144899 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      11162 (6%)
  Times result was 'false':        58692 (34%)
Number of strengthen sat checks:   0
Number of coverage checks:         1246897
  BDD entailment checks:           282337
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       190
Number of predicates discovered:          15
Number of abstraction locations:          10
Max number of predicates per location:    13
Avg number of predicates per location:    5
Total predicates per abstraction:         986709
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 67.00
Number of irrelevant predicates:          463109 (47%)
Number of preds handled by boolean abs:   36943 (4%)
  Total number of models for allsat:      9003
  Max number of models for allsat:        64
  Avg number of models for allsat:        0.81

Time for post operator:                 37.495s
  Time for path formula creation:       35.587s
Time for strengthen operator:            3.686s
Time for prec operator:                203.243s
  Time for abstraction:                199.564s (Max:     1.291s, Count: 173583)
    Boolean abstraction:                69.031s
    Solving time:                       64.189s (Max:     0.103s)
    Model enumeration time:             14.755s
    Time for BDD construction:           0.299s (Max:     0.012s)
Time for merge operator:                10.806s
Time for coverage check:                 0.349s
  Time for BDD entailment checks:        0.229s
Total time for SMT solver (w/o itp):    78.944s

Number of path formula cache hits:   6865401 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    12.470s

Total number of created targets for pointer analysis: 255962
   Number of created targets for uf: *(struct_backlight_device)* is 15
   Number of created targets for uf: *(struct_dentry)* is 70
   Number of created targets for uf: *signed_int is 184
   Number of created targets for uf: *unsigned_long_long_int is 22298
   Number of created targets for uf: *(struct_platform_device)* is 29
   Number of created targets for uf: *(struct_rfkill)* is 103
   Number of created targets for uf: *unsigned_long_int is 941


Number of BDD nodes:                               8594
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       21059 (count: 390998, min: 0, max: 244, avg: 0.05)
Time for BDD node cleanup:                             0.057s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.649s
  Time for transition matches:                         3.238s
  Time for transition assertions:                      0.010s
  Time for transition actions:                         0.049s
Automaton transfers with branching:                0
Automaton transfer successors:                      6555183 (count: 6555183, min: 1, max: 1, avg: 1.00) [1 x 6555183]

CPA algorithm statistics
------------------------
Number of iterations:            3956501
Max size of waitlist:            48
Average size of waitlist:        20
Number of computed successors:   4577312
Max successors for one state:    2
Number of times merged:          482280
Number of times stopped:         556332
Number of times breaked:         3438

Total time for CPA algorithm:       322.710s (Max:     4.228s)
  Time for choose from waitlist:      0.815s
  Time for precision adjustment:    220.233s
  Time for transfer relation:        74.106s
  Time for merge operator:           14.517s
  Time for stop operator:             3.264s
  Time for adding to reached set:     3.449s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3438
Avg. length of target path (in blocks):               39579 (count: 3438, min: 2, max: 18, avg: 11.51)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 230.492s
  Counterexample analysis:                           218.578s (Max:     0.145s, Calls: 3438)
    Refinement sat check:                            178.492s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.071s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.162s
  Precision update:                                    0.359s
  ARG update:                                          8.345s

Length of refined path (in blocks):                   39552 (count: 3438, min: 2, max: 18, avg: 11.50)
Number of affected states:                             3588 (count: 3438, min: 1, max: 8, avg: 1.04)
Length (states) of path with itp 'true':              32526 (count: 3438, min: 0, max: 16, avg: 9.46)
Length (states) of path with itp non-trivial itp:      3588 (count: 3438, min: 1, max: 8, avg: 1.04)
Length (states) of path with itp 'false':                11 (count: 3438, min: 0, max: 1, avg: 0.00)
Different non-trivial interpolants along paths:           1 (count: 3438, min: 0, max: 1, avg: 0.00)
Equal non-trivial interpolants along paths:             149 (count: 3438, min: 0, max: 7, avg: 0.04)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3438
Number of successful refinements:     3438
Number of failed refinements:         0
Max. size of reached set before ref.: 151558
Max. size of reached set after ref.:  148881
Avg. size of reached set before ref.: 62383.92
Avg. size of reached set after ref.:  61231.43

Total time for CEGAR algorithm:     897.201s
Time for refinements:               408.831s
Average time for refinement:          0.118s
Max time for refinement:              0.834s

Code Coverage
-----------------------------
  Function coverage:      0.020
  Visited lines:          774
  Total lines:            2094
  Line coverage:          0.370
  Visited conditions:     0
  Total conditions:       632
  Condition coverage:     0.000

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             8
  Number of reached locations:   8 (0%)
    Avg states per location:     1
    Max states per location:     1 (at node N1108)
  Number of reached functions:   2 (2%)
  Number of partitions:          8
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          3.248s
  Time for loading CPAs:          0.592s
  Time for loading parser:        0.474s
  Time for CFA construction:      2.107s
    Time for parsing file(s):     0.577s
    Time for AST to CFA:          0.692s
    Time for CFA sanity check:    0.150s
    Time for post-processing:     0.543s
      Time for var class.:        0.236s
Time for Analysis:              897.201s
CPU time for analysis:          897.070s
Total time for CPAchecker:      900.452s
Total CPU time for CPAchecker:  900.320s
Time for statistics:              0.045s

Time for Garbage Collector:      41.512s (in 1549 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                426MB (   406 MiB) max;    246MB (   235 MiB) avg;    435MB (   415 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           434MB (   413 MiB) max;    369MB (   352 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8570MB (  8173 MiB) max;   8362MB (  7975 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
