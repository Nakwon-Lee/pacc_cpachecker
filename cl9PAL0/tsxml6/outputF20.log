scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ctmwrp1w/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4007: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            20664 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            17914 (87%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2750 (13%)
  Times precision was empty:       1917 (9%)
  Times precision was {false}:     651 (3%)
  Times result was cached:         14642 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3454 (17%)
  Times result was 'false':        6762 (33%)
Number of strengthen sat checks:   0
Number of coverage checks:         146534
  BDD entailment checks:           11674
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       190
Number of predicates discovered:          9
Number of abstraction locations:          10
Max number of predicates per location:    8
Avg number of predicates per location:    5
Total predicates per abstraction:         98351
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 23.96
Number of irrelevant predicates:          12246 (12%)
Number of preds handled by boolean abs:   16737 (17%)
  Total number of models for allsat:      2556
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.74

Time for post operator:                 10.279s
  Time for path formula creation:        9.953s
Time for strengthen operator:            0.563s
Time for prec operator:                 40.630s
  Time for abstraction:                 40.025s (Max:     0.227s, Count: 20664)
    Boolean abstraction:                18.554s
    Solving time:                       18.759s (Max:     0.146s)
    Model enumeration time:              1.213s
    Time for BDD construction:           0.145s (Max:     0.013s)
Time for merge operator:                 4.915s
Time for coverage check:                 0.060s
  Time for BDD entailment checks:        0.047s
Total time for SMT solver (w/o itp):    19.972s

Number of path formula cache hits:   781518 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.487s

Total number of created targets for pointer analysis: 149116
   Number of created targets for uf: *(struct_backlight_device)* is 395
   Number of created targets for uf: *(struct_dentry)* is 62
   Number of created targets for uf: *signed_int is 13805
   Number of created targets for uf: *unsigned_long_long_int is 13
   Number of created targets for uf: *(struct_platform_device)* is 29
   Number of created targets for uf: *(struct_rfkill)* is 142
   Number of created targets for uf: *unsigned_long_int is 159


Number of BDD nodes:                               492
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6550 (count: 39613, min: 0, max: 117, avg: 0.17)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.033s
  Time for transition matches:                         0.524s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.014s
Automaton transfers with branching:                0
Automaton transfer successors:                       857642 (count: 857642, min: 1, max: 1, avg: 1.00) [1 x 857642]

CPA algorithm statistics
------------------------
Number of iterations:            512524
Max size of waitlist:            101
Average size of waitlist:        46
Number of computed successors:   597269
Max successors for one state:    2
Number of times merged:          67430
Number of times stopped:         75140
Number of times breaked:         216

Total time for CPA algorithm:        67.740s (Max:     2.065s)
  Time for choose from waitlist:      0.185s
  Time for precision adjustment:     43.212s
  Time for transfer relation:        16.429s
  Time for merge operator:            5.559s
  Time for stop operator:             0.589s
  Time for adding to reached set:     0.544s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   216
Avg. length of target path (in blocks):                2227 (count: 216, min: 2, max: 21, avg: 10.31)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  14.511s
  Counterexample analysis:                            13.396s (Max:     0.176s, Calls: 216)
    Refinement sat check:                             11.387s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.037s
  Precision update:                                    0.073s
  ARG update:                                          0.806s

Length of refined path (in blocks):                    2207 (count: 216, min: 2, max: 21, avg: 10.22)
Number of affected states:                              481 (count: 216, min: 1, max: 14, avg: 2.23)
Length (states) of path with itp 'true':               1510 (count: 216, min: 0, max: 19, avg: 6.99)
Length (states) of path with itp non-trivial itp:       481 (count: 216, min: 1, max: 14, avg: 2.23)
Length (states) of path with itp 'false':                 7 (count: 216, min: 0, max: 1, avg: 0.03)
Different non-trivial interpolants along paths:           3 (count: 216, min: 0, max: 1, avg: 0.01)
Equal non-trivial interpolants along paths:             262 (count: 216, min: 0, max: 13, avg: 1.21)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                216
Number of successful refinements:     216
Number of failed refinements:         0
Max. size of reached set before ref.: 34752
Max. size of reached set after ref.:  34701
Avg. size of reached set before ref.: 10085.88
Avg. size of reached set after ref.:  7862.45

Total time for CEGAR algorithm:      85.238s
Time for refinements:                16.384s
Average time for refinement:          0.075s
Max time for refinement:              0.232s

Code Coverage
-----------------------------
  Function coverage:      0.560
  Visited lines:          1730
  Total lines:            2094
  Line coverage:          0.826
  Visited conditions:     464
  Total conditions:       632
  Condition coverage:     0.734

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             35109
  Number of reached locations:   1101 (39%)
    Avg states per location:     31
    Max states per location:     667 (at node N88)
  Number of reached functions:   56 (56%)
  Number of partitions:          35103
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [7004e3d], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.338s
  Time for loading CPAs:          0.667s
  Time for loading parser:        0.440s
  Time for CFA construction:      2.138s
    Time for parsing file(s):     0.597s
    Time for AST to CFA:          0.685s
    Time for CFA sanity check:    0.146s
    Time for post-processing:     0.574s
      Time for var class.:        0.235s
Time for Analysis:               85.238s
CPU time for analysis:           85.240s
Time for analyzing result:        0.031s
Total time for CPAchecker:       88.579s
Total CPU time for CPAchecker:   88.570s
Time for statistics:              0.469s

Time for Garbage Collector:       4.123s (in 381 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                165MB (   157 MiB) max;     86MB (    82 MiB) avg;    172MB (   164 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           185MB (   176 MiB) max;    139MB (   132 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8161MB (  7783 MiB) max;   8118MB (  7742 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
