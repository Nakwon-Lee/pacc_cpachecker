scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_poizxdft/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4007: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            45065 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            38570 (86%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6495 (14%)
  Times precision was empty:       1310 (3%)
  Times precision was {false}:     2662 (6%)
  Times result was cached:         34313 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6780 (15%)
  Times result was 'false':        17674 (39%)
Number of strengthen sat checks:   0
Number of coverage checks:         311526
  BDD entailment checks:           50256
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       190
Number of predicates discovered:          15
Number of abstraction locations:          10
Max number of predicates per location:    13
Avg number of predicates per location:    7
Total predicates per abstraction:         253007
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 26.80
Number of irrelevant predicates:          92247 (36%)
Number of preds handled by boolean abs:   31531 (12%)
  Total number of models for allsat:      6333
  Max number of models for allsat:        128
  Avg number of models for allsat:        0.93

Time for post operator:                 19.576s
  Time for path formula creation:       18.889s
Time for strengthen operator:            1.108s
Time for prec operator:                109.064s
  Time for abstraction:                107.768s (Max:     2.739s, Count: 45065)
    Boolean abstraction:                55.426s
    Solving time:                       42.526s (Max:     0.127s)
    Model enumeration time:             21.287s
    Time for BDD construction:           0.254s (Max:     0.011s)
Time for merge operator:                 8.376s
Time for coverage check:                 0.125s
  Time for BDD entailment checks:        0.099s
Total time for SMT solver (w/o itp):    63.813s

Number of path formula cache hits:   1618822 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    12.219s

Total number of created targets for pointer analysis: 244463
   Number of created targets for uf: *(struct_backlight_device)* is 736
   Number of created targets for uf: *(struct_dentry)* is 85
   Number of created targets for uf: *signed_int is 25832
   Number of created targets for uf: *unsigned_long_long_int is 23
   Number of created targets for uf: *(struct_platform_device)* is 33
   Number of created targets for uf: *(struct_rfkill)* is 160
   Number of created targets for uf: *unsigned_long_int is 159


Number of BDD nodes:                               7019
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       13797 (count: 113888, min: 0, max: 150, avg: 0.12)
Time for BDD node cleanup:                             0.029s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.053s
  Time for transition matches:                         1.012s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.022s
Automaton transfers with branching:                0
Automaton transfer successors:                      1746691 (count: 1746691, min: 1, max: 1, avg: 1.00) [1 x 1746691]

CPA algorithm statistics
------------------------
Number of iterations:            1053453
Max size of waitlist:            43
Average size of waitlist:        16
Number of computed successors:   1220771
Max successors for one state:    2
Number of times merged:          130635
Number of times stopped:         147922
Number of times breaked:         659

Total time for CPA algorithm:       160.453s (Max:     4.726s)
  Time for choose from waitlist:      0.348s
  Time for precision adjustment:    114.517s
  Time for transfer relation:        31.862s
  Time for merge operator:            9.521s
  Time for stop operator:             0.992s
  Time for adding to reached set:     1.179s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   659
Avg. length of target path (in blocks):                7103 (count: 659, min: 2, max: 18, avg: 10.78)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  44.553s
  Counterexample analysis:                            42.259s (Max:     0.178s, Calls: 659)
    Refinement sat check:                             35.299s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.023s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.091s
  Precision update:                                    0.104s
  ARG update:                                          1.531s

Length of refined path (in blocks):                    7035 (count: 659, min: 2, max: 18, avg: 10.68)
Number of affected states:                              891 (count: 659, min: 1, max: 10, avg: 1.35)
Length (states) of path with itp 'true':               5485 (count: 659, min: 0, max: 16, avg: 8.32)
Length (states) of path with itp non-trivial itp:       891 (count: 659, min: 1, max: 10, avg: 1.35)
Length (states) of path with itp 'false':                18 (count: 659, min: 0, max: 1, avg: 0.03)
Different non-trivial interpolants along paths:           1 (count: 659, min: 0, max: 1, avg: 0.00)
Equal non-trivial interpolants along paths:             231 (count: 659, min: 0, max: 9, avg: 0.35)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                659
Number of successful refinements:     659
Number of failed refinements:         0
Max. size of reached set before ref.: 95025
Max. size of reached set after ref.:  94974
Avg. size of reached set before ref.: 16805.53
Avg. size of reached set after ref.:  15348.66

Total time for CEGAR algorithm:     220.929s
Time for refinements:                53.845s
Average time for refinement:          0.081s
Max time for refinement:              0.200s

Code Coverage
-----------------------------
  Function coverage:      0.560
  Visited lines:          1730
  Total lines:            2094
  Line coverage:          0.826
  Visited conditions:     464
  Total conditions:       632
  Condition coverage:     0.734

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             95096
  Number of reached locations:   1101 (39%)
    Avg states per location:     86
    Max states per location:     1887 (at node N88)
  Number of reached functions:   56 (56%)
  Number of partitions:          95087
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [7004e3d], stack [main]])
  Number of target states:       0

Time for analysis setup:          4.073s
  Time for loading CPAs:          0.768s
  Time for loading parser:        0.548s
  Time for CFA construction:      2.617s
    Time for parsing file(s):     0.763s
    Time for AST to CFA:          0.858s
    Time for CFA sanity check:    0.185s
    Time for post-processing:     0.647s
      Time for var class.:        0.268s
Time for Analysis:              220.929s
CPU time for analysis:          220.890s
Time for analyzing result:        0.082s
Total time for CPAchecker:      225.007s
Total CPU time for CPAchecker:  224.960s
Time for statistics:              1.056s

Time for Garbage Collector:      10.365s (in 774 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                241MB (   230 MiB) max;    108MB (   103 MiB) avg;    249MB (   237 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           270MB (   257 MiB) max;    163MB (   155 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8301MB (  7917 MiB) max;   8122MB (  7746 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
