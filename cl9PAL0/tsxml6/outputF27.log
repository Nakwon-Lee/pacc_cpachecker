scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nggems1u/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4007: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            146232 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            125486 (86%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         20746 (14%)
  Times precision was empty:       11877 (8%)
  Times precision was {false}:     3730 (3%)
  Times result was cached:         118717 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      11908 (8%)
  Times result was 'false':        49364 (34%)
Number of strengthen sat checks:   0
Number of coverage checks:         1029471
  BDD entailment checks:           214371
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       190
Number of predicates discovered:          15
Number of abstraction locations:          10
Max number of predicates per location:    13
Avg number of predicates per location:    6
Total predicates per abstraction:         810309
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 51.82
Number of irrelevant predicates:          451575 (56%)
Number of preds handled by boolean abs:   39574 (5%)
  Total number of models for allsat:      9329
  Max number of models for allsat:        128
  Avg number of models for allsat:        0.78

Time for post operator:                 35.833s
  Time for path formula creation:       34.212s
Time for strengthen operator:            3.160s
Time for prec operator:                186.147s
  Time for abstraction:                182.969s (Max:     2.203s, Count: 146232)
    Boolean abstraction:                70.022s
    Solving time:                       65.537s (Max:     0.099s)
    Model enumeration time:             14.409s
    Time for BDD construction:           0.237s (Max:     0.012s)
Time for merge operator:                 9.640s
Time for coverage check:                 0.324s
  Time for BDD entailment checks:        0.206s
Total time for SMT solver (w/o itp):    79.946s

Number of path formula cache hits:   5770244 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    12.006s

Total number of created targets for pointer analysis: 227788
   Number of created targets for uf: *(struct_backlight_device)* is 13
   Number of created targets for uf: *(struct_dentry)* is 60
   Number of created targets for uf: *signed_int is 150
   Number of created targets for uf: *unsigned_long_long_int is 19405
   Number of created targets for uf: *(struct_platform_device)* is 25
   Number of created targets for uf: *(struct_rfkill)* is 97
   Number of created targets for uf: *unsigned_long_int is 800


Number of BDD nodes:                               8696
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       22137 (count: 326474, min: 0, max: 225, avg: 0.07)
Time for BDD node cleanup:                             0.055s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.255s
  Time for transition matches:                         2.696s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.034s
Automaton transfers with branching:                0
Automaton transfer successors:                      5528371 (count: 5528371, min: 1, max: 1, avg: 1.00) [1 x 5528371]

CPA algorithm statistics
------------------------
Number of iterations:            3336399
Max size of waitlist:            47
Average size of waitlist:        18
Number of computed successors:   3860702
Max successors for one state:    2
Number of times merged:          407550
Number of times stopped:         469785
Number of times breaked:         2935

Total time for CPA algorithm:       292.327s (Max:     4.850s)
  Time for choose from waitlist:      0.830s
  Time for precision adjustment:    200.255s
  Time for transfer relation:        67.418s
  Time for merge operator:           12.574s
  Time for stop operator:             2.773s
  Time for adding to reached set:     3.048s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2935
Avg. length of target path (in blocks):               33461 (count: 2935, min: 2, max: 15, avg: 11.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 181.810s
  Counterexample analysis:                           173.361s (Max:     0.148s, Calls: 2935)
    Refinement sat check:                            144.164s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.041s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.154s
  Precision update:                                    0.336s
  ARG update:                                          5.709s

Length of refined path (in blocks):                   33428 (count: 2935, min: 2, max: 15, avg: 11.39)
Number of affected states:                             3104 (count: 2935, min: 1, max: 8, avg: 1.06)
Length (states) of path with itp 'true':              27389 (count: 2935, min: 0, max: 13, avg: 9.33)
Length (states) of path with itp non-trivial itp:      3104 (count: 2935, min: 1, max: 8, avg: 1.06)
Length (states) of path with itp 'false':                12 (count: 2935, min: 0, max: 1, avg: 0.00)
Different non-trivial interpolants along paths:           1 (count: 2935, min: 0, max: 1, avg: 0.00)
Equal non-trivial interpolants along paths:             168 (count: 2935, min: 0, max: 7, avg: 0.06)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2935
Number of successful refinements:     2935
Number of failed refinements:         0
Max. size of reached set before ref.: 116921
Max. size of reached set after ref.:  116421
Avg. size of reached set before ref.: 50675.66
Avg. size of reached set after ref.:  49576.72

Total time for CEGAR algorithm:     692.671s
Time for refinements:               296.874s
Average time for refinement:          0.101s
Max time for refinement:              0.713s

Code Coverage
-----------------------------
  Function coverage:      0.560
  Visited lines:          1730
  Total lines:            2094
  Line coverage:          0.826
  Visited conditions:     464
  Total conditions:       632
  Condition coverage:     0.734

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             116161
  Number of reached locations:   1101 (39%)
    Avg states per location:     105
    Max states per location:     2301 (at node N88)
  Number of reached functions:   56 (56%)
  Number of partitions:          116150
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [71a3a190], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.275s
  Time for loading CPAs:          0.595s
  Time for loading parser:        0.504s
  Time for CFA construction:      2.072s
    Time for parsing file(s):     0.556s
    Time for AST to CFA:          0.720s
    Time for CFA sanity check:    0.127s
    Time for post-processing:     0.542s
      Time for var class.:        0.235s
Time for Analysis:              692.671s
CPU time for analysis:          692.550s
Time for analyzing result:        0.101s
Total time for CPAchecker:      695.948s
Total CPU time for CPAchecker:  695.820s
Time for statistics:              0.856s

Time for Garbage Collector:      31.178s (in 1409 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                383MB (   365 MiB) max;    219MB (   209 MiB) avg;    387MB (   369 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           388MB (   370 MiB) max;    326MB (   310 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8502MB (  8108 MiB) max;   8250MB (  7868 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
