scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wbcq79y3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4007: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            97464 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            84080 (86%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13384 (14%)
  Times precision was empty:       9740 (10%)
  Times precision was {false}:     3310 (3%)
  Times result was cached:         75580 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8834 (9%)
  Times result was 'false':        33500 (34%)
Number of strengthen sat checks:   0
Number of coverage checks:         673801
  BDD entailment checks:           123821
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       190
Number of predicates discovered:          15
Number of abstraction locations:          10
Max number of predicates per location:    13
Avg number of predicates per location:    6
Total predicates per abstraction:         565586
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 46.57
Number of irrelevant predicates:          264416 (47%)
Number of preds handled by boolean abs:   33666 (6%)
  Total number of models for allsat:      6749
  Max number of models for allsat:        128
  Avg number of models for allsat:        0.76

Time for post operator:                 25.988s
  Time for path formula creation:       24.950s
Time for strengthen operator:            2.729s
Time for prec operator:                149.213s
  Time for abstraction:                146.745s (Max:     2.289s, Count: 97464)
    Boolean abstraction:                63.638s
    Solving time:                       57.571s (Max:     0.125s)
    Model enumeration time:             15.343s
    Time for BDD construction:           0.239s (Max:     0.010s)
Time for merge operator:                 9.899s
Time for coverage check:                 0.172s
  Time for BDD entailment checks:        0.115s
Total time for SMT solver (w/o itp):    72.914s

Number of path formula cache hits:   3755753 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    12.139s

Total number of created targets for pointer analysis: 264346
   Number of created targets for uf: *(struct_backlight_device)* is 595
   Number of created targets for uf: *(struct_dentry)* is 68
   Number of created targets for uf: *signed_int is 29811
   Number of created targets for uf: *unsigned_long_long_int is 23
   Number of created targets for uf: *(struct_platform_device)* is 29
   Number of created targets for uf: *(struct_rfkill)* is 109
   Number of created targets for uf: *unsigned_long_int is 159


Number of BDD nodes:                               8180
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       16456 (count: 211220, min: 0, max: 172, avg: 0.08)
Time for BDD node cleanup:                             0.062s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.545s
  Time for transition matches:                         1.852s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.025s
Automaton transfers with branching:                0
Automaton transfer successors:                      3712657 (count: 3712657, min: 1, max: 1, avg: 1.00) [1 x 3712657]

CPA algorithm statistics
------------------------
Number of iterations:            2242131
Max size of waitlist:            46
Average size of waitlist:        17
Number of computed successors:   2595081
Max successors for one state:    2
Number of times merged:          274990
Number of times stopped:         316833
Number of times breaked:         1362

Total time for CPA algorithm:       230.472s (Max:     4.045s)
  Time for choose from waitlist:      0.566s
  Time for precision adjustment:    160.020s
  Time for transfer relation:        48.820s
  Time for merge operator:           12.754s
  Time for stop operator:             2.272s
  Time for adding to reached set:     2.223s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1362
Avg. length of target path (in blocks):               15151 (count: 1362, min: 2, max: 15, avg: 11.12)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  90.295s
  Counterexample analysis:                            84.976s (Max:     0.151s, Calls: 1362)
    Refinement sat check:                             69.886s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.028s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.087s
  Precision update:                                    0.148s
  ARG update:                                          3.999s

Length of refined path (in blocks):                   15112 (count: 1362, min: 2, max: 15, avg: 11.10)
Number of affected states:                             1561 (count: 1362, min: 1, max: 10, avg: 1.15)
Length (states) of path with itp 'true':              12189 (count: 1362, min: 0, max: 13, avg: 8.95)
Length (states) of path with itp non-trivial itp:      1561 (count: 1362, min: 1, max: 10, avg: 1.15)
Length (states) of path with itp 'false':                12 (count: 1362, min: 0, max: 1, avg: 0.01)
Different non-trivial interpolants along paths:           1 (count: 1362, min: 0, max: 1, avg: 0.00)
Equal non-trivial interpolants along paths:             198 (count: 1362, min: 0, max: 9, avg: 0.15)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1362
Number of successful refinements:     1362
Number of failed refinements:         0
Max. size of reached set before ref.: 126337
Max. size of reached set after ref.:  126286
Avg. size of reached set before ref.: 44991.79
Avg. size of reached set after ref.:  43436.60

Total time for CEGAR algorithm:     415.896s
Time for refinements:               139.994s
Average time for refinement:          0.102s
Max time for refinement:              0.411s

Code Coverage
-----------------------------
  Function coverage:      0.560
  Visited lines:          1730
  Total lines:            2094
  Line coverage:          0.826
  Visited conditions:     464
  Total conditions:       632
  Condition coverage:     0.734

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             126572
  Number of reached locations:   1101 (39%)
    Avg states per location:     114
    Max states per location:     2508 (at node N88)
  Number of reached functions:   56 (56%)
  Number of partitions:          126560
    Avg size of partitions:      1
    Max size of partitions:      13 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [7004e3d], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.328s
  Time for loading CPAs:          0.594s
  Time for loading parser:        0.405s
  Time for CFA construction:      2.246s
    Time for parsing file(s):     0.581s
    Time for AST to CFA:          0.871s
    Time for CFA sanity check:    0.134s
    Time for post-processing:     0.539s
      Time for var class.:        0.201s
Time for Analysis:              415.896s
CPU time for analysis:          415.820s
Time for analyzing result:        0.121s
Total time for CPAchecker:      419.227s
Total CPU time for CPAchecker:  419.150s
Time for statistics:              1.204s

Time for Garbage Collector:      21.028s (in 907 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                370MB (   353 MiB) max;    212MB (   202 MiB) avg;    375MB (   358 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           377MB (   359 MiB) max;    313MB (   298 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8369MB (  7982 MiB) max;   8184MB (  7805 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
