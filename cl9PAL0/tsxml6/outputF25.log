scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_23_jqq7z/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4007: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            11401 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            10047 (88%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1354 (12%)
  Times precision was empty:       1083 (9%)
  Times precision was {false}:     776 (7%)
  Times result was cached:         8234 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1308 (11%)
  Times result was 'false':        4322 (38%)
Number of strengthen sat checks:   0
Number of coverage checks:         97877
  BDD entailment checks:           5667
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       190
Number of predicates discovered:          14
Number of abstraction locations:          10
Max number of predicates per location:    12
Avg number of predicates per location:    6
Total predicates per abstraction:         53534
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 25.69
Number of irrelevant predicates:          15625 (29%)
Number of preds handled by boolean abs:   5882 (11%)
  Total number of models for allsat:      1438
  Max number of models for allsat:        128
  Avg number of models for allsat:        1.10

Time for post operator:                  5.324s
  Time for path formula creation:        5.112s
Time for strengthen operator:            0.382s
Time for prec operator:                 25.856s
  Time for abstraction:                 25.430s (Max:     2.827s, Count: 11401)
    Boolean abstraction:                14.459s
    Solving time:                        7.877s (Max:     0.125s)
    Model enumeration time:              7.620s
    Time for BDD construction:           0.087s (Max:     0.010s)
Time for merge operator:                 2.200s
Time for coverage check:                 0.045s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):    15.497s

Number of path formula cache hits:   525138 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.505s

Total number of created targets for pointer analysis: 46851
   Number of created targets for uf: *(struct_backlight_device)* is 149
   Number of created targets for uf: *(struct_dentry)* is 20
   Number of created targets for uf: *signed_int is 4788
   Number of created targets for uf: *unsigned_long_long_int is 3529
   Number of created targets for uf: *(struct_platform_device)* is 9
   Number of created targets for uf: *(struct_rfkill)* is 25
   Number of created targets for uf: *unsigned_long_int is 499


Number of BDD nodes:                               4156
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3338 (count: 21038, min: 0, max: 116, avg: 0.16)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.836s
  Time for transition matches:                         0.406s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.026s
Automaton transfers with branching:                0
Automaton transfer successors:                       533999 (count: 533999, min: 1, max: 1, avg: 1.00) [1 x 533999]

CPA algorithm statistics
------------------------
Number of iterations:            313359
Max size of waitlist:            114
Average size of waitlist:        40
Number of computed successors:   369860
Max successors for one state:    2
Number of times merged:          46105
Number of times stopped:         48651
Number of times breaked:         84

Total time for CPA algorithm:        42.261s (Max:     8.996s)
  Time for choose from waitlist:      0.138s
  Time for precision adjustment:     27.886s
  Time for transfer relation:         9.777s
  Time for merge operator:            2.693s
  Time for stop operator:             0.384s
  Time for adding to reached set:     0.490s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   84
Avg. length of target path (in blocks):                 630 (count: 84, min: 2, max: 14, avg: 7.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.551s
  Counterexample analysis:                             3.851s (Max:     0.104s, Calls: 84)
    Refinement sat check:                              3.256s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.038s
  Precision update:                                    0.044s
  ARG update:                                          0.533s

Length of refined path (in blocks):                     612 (count: 84, min: 2, max: 14, avg: 7.29)
Number of affected states:                              244 (count: 84, min: 1, max: 8, avg: 2.90)
Length (states) of path with itp 'true':                284 (count: 84, min: 0, max: 12, avg: 3.38)
Length (states) of path with itp non-trivial itp:       244 (count: 84, min: 1, max: 8, avg: 2.90)
Length (states) of path with itp 'false':                 9 (count: 84, min: 0, max: 1, avg: 0.11)
Different non-trivial interpolants along paths:           2 (count: 84, min: 0, max: 1, avg: 0.02)
Equal non-trivial interpolants along paths:             158 (count: 84, min: 0, max: 7, avg: 1.88)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                84
Number of successful refinements:     84
Number of failed refinements:         0
Max. size of reached set before ref.: 28971
Max. size of reached set after ref.:  28903
Avg. size of reached set before ref.: 13712.63
Avg. size of reached set after ref.:  10327.64

Total time for CEGAR algorithm:      48.232s
Time for refinements:                 5.468s
Average time for refinement:          0.065s
Max time for refinement:              0.123s

Code Coverage
-----------------------------
  Function coverage:      0.560
  Visited lines:          1730
  Total lines:            2094
  Line coverage:          0.826
  Visited conditions:     464
  Total conditions:       632
  Condition coverage:     0.734

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             32549
  Number of reached locations:   1101 (39%)
    Avg states per location:     29
    Max states per location:     645 (at node N88)
  Number of reached functions:   56 (56%)
  Number of partitions:          32546
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [7004e3d], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.483s
  Time for loading CPAs:          0.738s
  Time for loading parser:        0.443s
  Time for CFA construction:      2.211s
    Time for parsing file(s):     0.589s
    Time for AST to CFA:          0.720s
    Time for CFA sanity check:    0.147s
    Time for post-processing:     0.619s
      Time for var class.:        0.273s
Time for Analysis:               48.232s
CPU time for analysis:           48.230s
Time for analyzing result:        0.024s
Total time for CPAchecker:       51.718s
Total CPU time for CPAchecker:   51.700s
Time for statistics:              0.364s

Time for Garbage Collector:       1.877s (in 213 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                119MB (   114 MiB) max;     67MB (    63 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     36MB (    35 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8014MB (  7642 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
