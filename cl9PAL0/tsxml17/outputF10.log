scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--mfd--sm501.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8753h4a0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5817: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5244: Function pointer *(pd->set_power) with type int (*)(struct device *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5207: Function pointer *(pd->get_power) with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5207: Ignoring function call through function pointer *(pd->get_power): tmp___0 = (*(pd->get_power))(sm->dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5244: Ignoring function call through function pointer *(pd->set_power): (*(pd->set_power))(sm->dev, (unsigned int)on); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function platform_get_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            62747 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            51135 (81%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11612 (19%)
  Times precision was empty:       565 (1%)
  Times precision was {false}:     1780 (3%)
  Times result was cached:         55483 (88%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4919 (8%)
  Times result was 'false':        16749 (27%)
Number of strengthen sat checks:   0
Number of coverage checks:         435330
  BDD entailment checks:           57760
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       386
Number of predicates discovered:          9
Number of abstraction locations:          11
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         270259
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 40.34
Number of irrelevant predicates:          74835 (28%)
Number of preds handled by boolean abs:   19007 (7%)
  Total number of models for allsat:      5067
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.03

Time for post operator:                 42.646s
  Time for path formula creation:       41.460s
Time for strengthen operator:            2.310s
Time for prec operator:                199.350s
  Time for abstraction:                197.311s (Max:     1.215s, Count: 62747)
    Boolean abstraction:               112.147s
    Solving time:                      121.509s (Max:     0.174s)
    Model enumeration time:             10.550s
    Time for BDD construction:           0.187s (Max:     0.012s)
Time for merge operator:                 8.808s
Time for coverage check:                 0.105s
  Time for BDD entailment checks:        0.062s
Total time for SMT solver (w/o itp):   132.059s

Number of path formula cache hits:   3151468 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    27.792s

Total number of created targets for pointer analysis: 486128
   Number of created targets for uf: *(void)* is 30744
   Number of created targets for uf: *signed_int is 289
   Number of created targets for uf: *(struct_sm501_platdata)* is 13
   Number of created targets for uf: *(struct_list_head)* is 70
   Number of created targets for uf: *signed_long_int is 81
   Number of created targets for uf: *(struct_resource)* is 42718
   Number of created targets for uf: *unsigned_char_:_1 is 1392
   Number of created targets for uf: *unsigned_long_long_int is 27539
   Number of created targets for uf: *(struct_device)* is 13
   Number of created targets for uf: *unsigned_int is 91
   Number of created targets for uf: *unsigned_long_int is 41


Number of BDD nodes:                               641
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        9938 (count: 100491, min: 0, max: 167, avg: 0.10)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.671s
  Time for transition matches:                         1.895s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.026s
Automaton transfers with branching:                0
Automaton transfer successors:                      3923498 (count: 3923498, min: 1, max: 1, avg: 1.00) [1 x 3923498]

CPA algorithm statistics
------------------------
Number of iterations:            2440493
Max size of waitlist:            1066
Average size of waitlist:        459
Number of computed successors:   2678396
Max successors for one state:    2
Number of times merged:          188785
Number of times stopped:         211473
Number of times breaked:         1508

Total time for CPA algorithm:       296.944s (Max:    59.756s)
  Time for choose from waitlist:      0.575s
  Time for precision adjustment:    212.086s
  Time for transfer relation:        66.215s
  Time for merge operator:           10.314s
  Time for stop operator:             1.709s
  Time for adding to reached set:     2.423s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1508
Avg. length of target path (in blocks):                9618 (count: 1508, min: 2, max: 9, avg: 6.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 113.804s
  Counterexample analysis:                           109.122s (Max:     0.267s, Calls: 1508)
    Refinement sat check:                             93.354s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.015s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.080s
  Precision update:                                    0.157s
  ARG update:                                          2.766s

Length of refined path (in blocks):                    9607 (count: 1508, min: 2, max: 9, avg: 6.37)
Number of affected states:                             1624 (count: 1508, min: 1, max: 8, avg: 1.08)
Length (states) of path with itp 'true':               6475 (count: 1508, min: 0, max: 7, avg: 4.29)
Length (states) of path with itp non-trivial itp:      1624 (count: 1508, min: 1, max: 8, avg: 1.08)
Length (states) of path with itp 'false':                 8 (count: 1508, min: 0, max: 1, avg: 0.01)
Different non-trivial interpolants along paths:           0 (count: 1508, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             116 (count: 1508, min: 0, max: 7, avg: 0.08)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1508
Number of successful refinements:     1508
Number of failed refinements:         0
Max. size of reached set before ref.: 310820
Max. size of reached set after ref.:  310798
Avg. size of reached set before ref.: 84158.80
Avg. size of reached set after ref.:  83046.17

Total time for CEGAR algorithm:     596.684s
Time for refinements:               208.862s
Average time for refinement:          0.138s
Max time for refinement:              0.593s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          1899
  Total lines:            2197
  Line coverage:          0.864
  Visited conditions:     316
  Total conditions:       440
  Condition coverage:     0.718

CPAchecker general statistics
-----------------------------
Number of program locations:     2964
Number of CFA edges:             3321
Number of relevant variables:    321
Number of functions:             114
Number of loops:                 12
Size of reached set:             772331
  Number of reached locations:   1143 (39%)
    Avg states per location:     675
    Max states per location:     10043 (at node N26)
  Number of reached functions:   78 (68%)
  Number of partitions:          772326
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1737 (before line 5563), Function main called from node N1722, stack depth 1 [7dd00705], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.637s
  Time for loading CPAs:          0.668s
  Time for loading parser:        0.570s
  Time for CFA construction:      2.293s
    Time for parsing file(s):     0.596s
    Time for AST to CFA:          0.740s
    Time for CFA sanity check:    0.166s
    Time for post-processing:     0.653s
      Time for var class.:        0.296s
Time for Analysis:              596.684s
CPU time for analysis:          596.610s
Time for analyzing result:        0.503s
Total time for CPAchecker:      600.331s
Total CPU time for CPAchecker:  600.240s
Time for statistics:              4.296s

Time for Garbage Collector:      29.098s (in 1091 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1078MB (  1028 MiB) max;    263MB (   251 MiB) avg;   1130MB (  1077 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1232MB (  1175 MiB) max;    392MB (   373 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8298MB (  7913 MiB) max;   8179MB (  7800 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
