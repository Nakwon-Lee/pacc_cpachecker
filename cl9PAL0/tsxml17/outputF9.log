scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--mfd--sm501.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0xilrysz/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5817: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5244: Function pointer *(pd->set_power) with type int (*)(struct device *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5207: Function pointer *(pd->get_power) with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5207: Ignoring function call through function pointer *(pd->get_power): tmp___0 = (*(pd->get_power))(sm->dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5244: Ignoring function call through function pointer *(pd->set_power): (*(pd->set_power))(sm->dev, (unsigned int)on); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function platform_get_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            35860 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            32015 (89%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3845 (11%)
  Times precision was empty:       1233 (3%)
  Times precision was {false}:     592 (2%)
  Times result was cached:         31892 (89%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2143 (6%)
  Times result was 'false':        6559 (18%)
Number of strengthen sat checks:   0
Number of coverage checks:         250632
  BDD entailment checks:           26218
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       386
Number of predicates discovered:          7
Number of abstraction locations:          11
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         149184
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 54.55
Number of irrelevant predicates:          19593 (13%)
Number of preds handled by boolean abs:   8000 (5%)
  Total number of models for allsat:      2095
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.98

Time for post operator:                 20.092s
  Time for path formula creation:       19.478s
Time for strengthen operator:            1.312s
Time for prec operator:                 83.221s
  Time for abstraction:                 81.895s (Max:     0.310s, Count: 35860)
    Boolean abstraction:                43.728s
    Solving time:                       45.194s (Max:     0.204s)
    Model enumeration time:              3.905s
    Time for BDD construction:           0.106s (Max:     0.008s)
Time for merge operator:                 3.802s
Time for coverage check:                 0.071s
  Time for BDD entailment checks:        0.042s
Total time for SMT solver (w/o itp):    49.099s

Number of path formula cache hits:   2040960 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.439s

Total number of created targets for pointer analysis: 125513
   Number of created targets for uf: *(void)* is 7736
   Number of created targets for uf: *signed_int is 71
   Number of created targets for uf: *(struct_sm501_platdata)* is 4
   Number of created targets for uf: *(struct_list_head)* is 50
   Number of created targets for uf: *signed_long_int is 21
   Number of created targets for uf: *(struct_resource)* is 10744
   Number of created targets for uf: *unsigned_char_:_1 is 353
   Number of created targets for uf: *unsigned_long_long_int is 6670
   Number of created targets for uf: *(struct_device)* is 4
   Number of created targets for uf: *unsigned_int is 22
   Number of created targets for uf: *unsigned_long_int is 11


Number of BDD nodes:                               282
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4289 (count: 44697, min: 0, max: 133, avg: 0.10)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.417s
  Time for transition matches:                         1.266s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.028s
Automaton transfers with branching:                0
Automaton transfer successors:                      2223797 (count: 2223797, min: 1, max: 1, avg: 1.00) [1 x 2223797]

CPA algorithm statistics
------------------------
Number of iterations:            1372501
Max size of waitlist:            118
Average size of waitlist:        34
Number of computed successors:   1511286
Max successors for one state:    2
Number of times merged:          112207
Number of times stopped:         129946
Number of times breaked:         39

Total time for CPA algorithm:       136.383s (Max:    36.050s)
  Time for choose from waitlist:      0.371s
  Time for precision adjustment:     90.615s
  Time for transfer relation:        35.209s
  Time for merge operator:            4.754s
  Time for stop operator:             1.109s
  Time for adding to reached set:     1.909s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   39
Avg. length of target path (in blocks):                 204 (count: 39, min: 2, max: 9, avg: 5.23)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.598s
  Counterexample analysis:                             2.550s (Max:     0.119s, Calls: 39)
    Refinement sat check:                              2.225s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.012s
  ARG update:                                          1.943s

Length of refined path (in blocks):                     202 (count: 39, min: 2, max: 9, avg: 5.18)
Number of affected states:                              161 (count: 39, min: 1, max: 8, avg: 4.13)
Length (states) of path with itp 'true':                  2 (count: 39, min: 0, max: 2, avg: 0.05)
Length (states) of path with itp non-trivial itp:       161 (count: 39, min: 1, max: 8, avg: 4.13)
Length (states) of path with itp 'false':                 1 (count: 39, min: 0, max: 1, avg: 0.03)
Different non-trivial interpolants along paths:           0 (count: 39, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             122 (count: 39, min: 0, max: 7, avg: 3.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                39
Number of successful refinements:     39
Number of failed refinements:         0
Max. size of reached set before ref.: 83617
Max. size of reached set after ref.:  6690
Avg. size of reached set before ref.: 29508.49
Avg. size of reached set after ref.:  179.33

Total time for CEGAR algorithm:     141.612s
Time for refinements:                 5.207s
Average time for refinement:          0.133s
Max time for refinement:              0.292s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          1899
  Total lines:            2197
  Line coverage:          0.864
  Visited conditions:     316
  Total conditions:       440
  Condition coverage:     0.718

CPAchecker general statistics
-----------------------------
Number of program locations:     2964
Number of CFA edges:             3321
Number of relevant variables:    321
Number of functions:             114
Number of loops:                 12
Size of reached set:             230945
  Number of reached locations:   1143 (39%)
    Avg states per location:     202
    Max states per location:     3003 (at node N26)
  Number of reached functions:   78 (68%)
  Number of partitions:          230944
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1737 (before line 5563), Function main called from node N1722, stack depth 1 [7dd00705], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.133s
  Time for loading CPAs:          0.608s
  Time for loading parser:        0.411s
  Time for CFA construction:      2.021s
    Time for parsing file(s):     0.605s
    Time for AST to CFA:          0.659s
    Time for CFA sanity check:    0.132s
    Time for post-processing:     0.500s
      Time for var class.:        0.256s
Time for Analysis:              141.614s
CPU time for analysis:          141.610s
Time for analyzing result:        0.201s
Total time for CPAchecker:      144.749s
Total CPU time for CPAchecker:  144.730s
Time for statistics:              1.888s

Time for Garbage Collector:      10.790s (in 554 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                352MB (   336 MiB) max;    131MB (   125 MiB) avg;    371MB (   354 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           378MB (   360 MiB) max;    201MB (   192 MiB) avg
Allocated non-heap memory:        41MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8091MB (  7716 MiB) max;   8038MB (  7666 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
