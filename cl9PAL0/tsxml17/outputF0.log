scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--mfd--sm501.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rpdk6uzt/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5817: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5244: Function pointer *(pd->set_power) with type int (*)(struct device *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5207: Function pointer *(pd->get_power) with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5207: Ignoring function call through function pointer *(pd->get_power): tmp___0 = (*(pd->get_power))(sm->dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5244: Ignoring function call through function pointer *(pd->set_power): (*(pd->set_power))(sm->dev, (unsigned int)on); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function platform_get_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            35015 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            30425 (87%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4590 (13%)
  Times precision was empty:       4045 (12%)
  Times precision was {false}:     835 (2%)
  Times result was cached:         26252 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3883 (11%)
  Times result was 'false':        7284 (21%)
Number of strengthen sat checks:   0
Number of coverage checks:         255185
  BDD entailment checks:           38017
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       386
Number of predicates discovered:          9
Number of abstraction locations:          11
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         133890
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 28.38
Number of irrelevant predicates:          25143 (19%)
Number of preds handled by boolean abs:   15804 (12%)
  Total number of models for allsat:      4043
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.04

Time for post operator:                 39.440s
  Time for path formula creation:       38.866s
Time for strengthen operator:            1.469s
Time for prec operator:                145.350s
  Time for abstraction:                143.942s (Max:     0.364s, Count: 35015)
    Boolean abstraction:                94.119s
    Solving time:                       94.427s (Max:     0.227s)
    Model enumeration time:              9.425s
    Time for BDD construction:           0.160s (Max:     0.012s)
Time for merge operator:                 9.217s
Time for coverage check:                 0.059s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):   103.852s

Number of path formula cache hits:   1343005 (58%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    31.382s

Total number of created targets for pointer analysis: 502544
   Number of created targets for uf: *(void)* is 32949
   Number of created targets for uf: *signed_int is 287
   Number of created targets for uf: *(struct_sm501_platdata)* is 13
   Number of created targets for uf: *(struct_list_head)* is 83
   Number of created targets for uf: *signed_long_int is 83
   Number of created targets for uf: *(struct_resource)* is 45543
   Number of created targets for uf: *unsigned_char_:_1 is 1450
   Number of created targets for uf: *unsigned_long_long_int is 28487
   Number of created targets for uf: *(struct_device)* is 13
   Number of created targets for uf: *unsigned_int is 84
   Number of created targets for uf: *unsigned_long_int is 40


Number of BDD nodes:                               553
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7854 (count: 71669, min: 0, max: 138, avg: 0.11)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.592s
  Time for transition matches:                         1.393s
  Time for transition assertions:                      0.012s
  Time for transition actions:                         0.029s
Automaton transfers with branching:                0
Automaton transfer successors:                      2239799 (count: 2239799, min: 1, max: 1, avg: 1.00) [1 x 2239799]

CPA algorithm statistics
------------------------
Number of iterations:            1370506
Max size of waitlist:            243
Average size of waitlist:        108
Number of computed successors:   1506777
Max successors for one state:    2
Number of times merged:          108584
Number of times stopped:         122384
Number of times breaked:         262

Total time for CPA algorithm:       225.151s (Max:    45.111s)
  Time for choose from waitlist:      0.336s
  Time for precision adjustment:    152.920s
  Time for transfer relation:        56.237s
  Time for merge operator:           10.282s
  Time for stop operator:             1.194s
  Time for adding to reached set:     1.458s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   262
Avg. length of target path (in blocks):                1810 (count: 262, min: 2, max: 11, avg: 6.91)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  21.164s
  Counterexample analysis:                            19.672s (Max:     0.142s, Calls: 262)
    Refinement sat check:                             17.217s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.033s
  Precision update:                                    0.054s
  ARG update:                                          1.100s

Length of refined path (in blocks):                    1800 (count: 262, min: 2, max: 11, avg: 6.87)
Number of affected states:                              411 (count: 262, min: 1, max: 10, avg: 1.57)
Length (states) of path with itp 'true':               1127 (count: 262, min: 0, max: 7, avg: 4.30)
Length (states) of path with itp non-trivial itp:       411 (count: 262, min: 1, max: 10, avg: 1.57)
Length (states) of path with itp 'false':                 5 (count: 262, min: 0, max: 1, avg: 0.02)
Different non-trivial interpolants along paths:           0 (count: 262, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             149 (count: 262, min: 0, max: 9, avg: 0.57)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                262
Number of successful refinements:     262
Number of failed refinements:         0
Max. size of reached set before ref.: 419659
Max. size of reached set after ref.:  419637
Avg. size of reached set before ref.: 200675.71
Avg. size of reached set after ref.:  198367.39

Total time for CEGAR algorithm:     326.198s
Time for refinements:                61.318s
Average time for refinement:          0.234s
Max time for refinement:              0.517s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          1899
  Total lines:            2197
  Line coverage:          0.864
  Visited conditions:     316
  Total conditions:       440
  Condition coverage:     0.718

CPAchecker general statistics
-----------------------------
Number of program locations:     2964
Number of CFA edges:             3321
Number of relevant variables:    321
Number of functions:             114
Number of loops:                 12
Size of reached set:             772331
  Number of reached locations:   1143 (39%)
    Avg states per location:     675
    Max states per location:     10043 (at node N26)
  Number of reached functions:   78 (68%)
  Number of partitions:          772326
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1737 (before line 5563), Function main called from node N1722, stack depth 1 [7dd00705], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.666s
  Time for loading CPAs:          0.755s
  Time for loading parser:        0.422s
  Time for CFA construction:      2.381s
    Time for parsing file(s):     0.679s
    Time for AST to CFA:          0.805s
    Time for CFA sanity check:    0.156s
    Time for post-processing:     0.591s
      Time for var class.:        0.295s
Time for Analysis:              326.198s
CPU time for analysis:          326.170s
Time for analyzing result:        0.543s
Total time for CPAchecker:      329.871s
Total CPU time for CPAchecker:  329.840s
Time for statistics:              4.963s

Time for Garbage Collector:      21.035s (in 621 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1186MB (  1131 MiB) max;    318MB (   303 MiB) avg;   1221MB (  1164 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1579MB (  1506 MiB) max;    477MB (   455 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8158MB (  7780 MiB) max;   8095MB (  7720 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
