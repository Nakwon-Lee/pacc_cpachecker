scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--mfd--sm501.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kf0v5tnl/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5817: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5244: Function pointer *(pd->set_power) with type int (*)(struct device *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5207: Function pointer *(pd->get_power) with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5207: Ignoring function call through function pointer *(pd->get_power): tmp___0 = (*(pd->get_power))(sm->dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5244: Ignoring function call through function pointer *(pd->set_power): (*(pd->set_power))(sm->dev, (unsigned int)on); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function platform_get_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            218177 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            196187 (90%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         21990 (10%)
  Times precision was empty:       306 (0%)
  Times precision was {false}:     2452 (1%)
  Times result was cached:         204601 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10818 (5%)
  Times result was 'false':        33796 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         1665193
  BDD entailment checks:           358105
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       386
Number of predicates discovered:          9
Number of abstraction locations:          11
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         833460
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 62.81
Number of irrelevant predicates:          398071 (48%)
Number of preds handled by boolean abs:   29659 (4%)
  Total number of models for allsat:      11561
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.07

Time for post operator:                 78.999s
  Time for path formula creation:       75.578s
Time for strengthen operator:            7.581s
Time for prec operator:                457.162s
  Time for abstraction:                450.679s (Max:     1.918s, Count: 218177)
    Boolean abstraction:               255.534s
    Solving time:                      253.642s (Max:     0.184s)
    Model enumeration time:             25.177s
    Time for BDD construction:           0.302s (Max:     0.010s)
Time for merge operator:                14.967s
Time for coverage check:                 0.407s
  Time for BDD entailment checks:        0.247s
Total time for SMT solver (w/o itp):   278.819s

Number of path formula cache hits:   12679353 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    29.201s

Total number of created targets for pointer analysis: 490698
   Number of created targets for uf: *(void)* is 32705
   Number of created targets for uf: *signed_int is 293
   Number of created targets for uf: *(struct_sm501_platdata)* is 10
   Number of created targets for uf: *(struct_list_head)* is 60
   Number of created targets for uf: *signed_long_int is 79
   Number of created targets for uf: *(struct_resource)* is 45457
   Number of created targets for uf: *unsigned_char_:_1 is 1476
   Number of created targets for uf: *unsigned_long_long_int is 27320
   Number of created targets for uf: *(struct_device)* is 10
   Number of created targets for uf: *unsigned_int is 72
   Number of created targets for uf: *unsigned_long_int is 29


Number of BDD nodes:                               569
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       21652 (count: 444034, min: 0, max: 408, avg: 0.05)
Time for BDD node cleanup:                             0.069s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.430s
  Time for transition matches:                         6.408s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.034s
Automaton transfers with branching:                0
Automaton transfer successors:                     12827572 (count: 12827572, min: 1, max: 1, avg: 1.00) [1 x 12827572]

CPA algorithm statistics
------------------------
Number of iterations:            7975679
Max size of waitlist:            506
Average size of waitlist:        181
Number of computed successors:   8783981
Max successors for one state:    2
Number of times merged:          653544
Number of times stopped:         772043
Number of times breaked:         1029

Total time for CPA algorithm:       688.000s (Max:    58.284s)
  Time for choose from waitlist:      1.397s
  Time for precision adjustment:    493.530s
  Time for transfer relation:       150.410s
  Time for merge operator:           19.134s
  Time for stop operator:             5.853s
  Time for adding to reached set:     6.451s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1029
Avg. length of target path (in blocks):                6706 (count: 1029, min: 2, max: 11, avg: 6.52)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  90.286s
  Counterexample analysis:                            72.617s (Max:     0.184s, Calls: 1029)
    Refinement sat check:                             62.799s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.019s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.069s
  Precision update:                                    0.126s
  ARG update:                                         16.370s

Length of refined path (in blocks):                    6695 (count: 1029, min: 2, max: 11, avg: 6.51)
Number of affected states:                             1133 (count: 1029, min: 1, max: 8, avg: 1.10)
Length (states) of path with itp 'true':               4533 (count: 1029, min: 0, max: 9, avg: 4.41)
Length (states) of path with itp non-trivial itp:      1133 (count: 1029, min: 1, max: 8, avg: 1.10)
Length (states) of path with itp 'false':                 8 (count: 1029, min: 0, max: 1, avg: 0.01)
Different non-trivial interpolants along paths:           0 (count: 1029, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             104 (count: 1029, min: 0, max: 7, avg: 0.10)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1029
Number of successful refinements:     1029
Number of failed refinements:         0
Max. size of reached set before ref.: 465639
Max. size of reached set after ref.:  397969
Avg. size of reached set before ref.: 75340.70
Avg. size of reached set after ref.:  67812.43

Total time for CEGAR algorithm:     896.703s
Time for refinements:               153.846s
Average time for refinement:          0.149s
Max time for refinement:              1.914s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          1899
  Total lines:            2197
  Line coverage:          0.864
  Visited conditions:     316
  Total conditions:       440
  Condition coverage:     0.718

CPAchecker general statistics
-----------------------------
Number of program locations:     2964
Number of CFA edges:             3321
Number of relevant variables:    321
Number of functions:             114
Number of loops:                 12
Size of reached set:             231554
  Number of reached locations:   1143 (39%)
    Avg states per location:     202
    Max states per location:     3646 (at node N26)
  Number of reached functions:   78 (68%)
  Number of partitions:          231548
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N1737 (before line 5563), Function main called from node N1722, stack depth 1 [7dd00705], stack [main]])
  Number of target states:       0
  Size of final wait list        298

Time for analysis setup:          3.232s
  Time for loading CPAs:          0.591s
  Time for loading parser:        0.421s
  Time for CFA construction:      2.152s
    Time for parsing file(s):     0.574s
    Time for AST to CFA:          0.770s
    Time for CFA sanity check:    0.164s
    Time for post-processing:     0.510s
      Time for var class.:        0.241s
Time for Analysis:              896.703s
CPU time for analysis:          896.660s
Total time for CPAchecker:      899.938s
Total CPU time for CPAchecker:  899.890s
Time for statistics:              1.628s

Time for Garbage Collector:      71.345s (in 910 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1320MB (  1259 MiB) max;    620MB (   592 MiB) avg;   1360MB (  1297 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1349MB (  1286 MiB) max;    940MB (   897 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8494MB (  8100 MiB) max;   8223MB (  7842 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
