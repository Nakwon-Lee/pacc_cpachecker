scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--mfd--sm501.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_f8yd098e/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5817: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5244: Function pointer *(pd->set_power) with type int (*)(struct device *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5207: Function pointer *(pd->get_power) with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5207: Ignoring function call through function pointer *(pd->get_power): tmp___0 = (*(pd->get_power))(sm->dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5244: Ignoring function call through function pointer *(pd->set_power): (*(pd->set_power))(sm->dev, (unsigned int)on); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function platform_get_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            98718 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            87718 (89%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11000 (11%)
  Times precision was empty:       1118 (1%)
  Times precision was {false}:     1886 (2%)
  Times result was cached:         92809 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2905 (3%)
  Times result was 'false':        15123 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         771733
  BDD entailment checks:           191653
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       386
Number of predicates discovered:          9
Number of abstraction locations:          11
Max number of predicates per location:    7
Avg number of predicates per location:    2
Total predicates per abstraction:         295597
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 61.70
Number of irrelevant predicates:          228907 (77%)
Number of preds handled by boolean abs:   4244 (1%)
  Total number of models for allsat:      3063
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.05

Time for post operator:                 68.261s
  Time for path formula creation:       66.604s
Time for strengthen operator:            3.438s
Time for prec operator:                179.860s
  Time for abstraction:                176.611s (Max:     1.566s, Count: 98718)
    Boolean abstraction:                78.884s
    Solving time:                       95.346s (Max:     0.209s)
    Model enumeration time:              7.551s
    Time for BDD construction:           0.128s (Max:     0.010s)
Time for merge operator:                16.885s
Time for coverage check:                 0.205s
  Time for BDD entailment checks:        0.127s
Total time for SMT solver (w/o itp):   102.897s

Number of path formula cache hits:   4463659 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    46.960s

Total number of created targets for pointer analysis: 851560
   Number of created targets for uf: *(void)* is 55
   Number of created targets for uf: *signed_int is 50445
   Number of created targets for uf: *(struct_sm501_platdata)* is 17
   Number of created targets for uf: *signed_long_int is 142
   Number of created targets for uf: *(struct_list_head)* is 38
   Number of created targets for uf: *(struct_resource)* is 18215
   Number of created targets for uf: *unsigned_char_:_1 is 2756
   Number of created targets for uf: *unsigned_long_long_int is 45856
   Number of created targets for uf: *(struct_device)* is 10
   Number of created targets for uf: *unsigned_int is 2137
   Number of created targets for uf: *unsigned_long_int is 29


Number of BDD nodes:                               519
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5943 (count: 221293, min: 0, max: 100, avg: 0.03)
Time for BDD node cleanup:                             0.034s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.725s
  Time for transition matches:                         3.093s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.023s
Automaton transfers with branching:                0
Automaton transfer successors:                      5748663 (count: 5748663, min: 1, max: 1, avg: 1.00) [1 x 5748663]

CPA algorithm statistics
------------------------
Number of iterations:            3581216
Max size of waitlist:            1005
Average size of waitlist:        327
Number of computed successors:   3941435
Max successors for one state:    2
Number of times merged:          290040
Number of times stopped:         342708
Number of times breaked:         1084

Total time for CPA algorithm:       332.080s (Max:    18.559s)
  Time for choose from waitlist:      0.969s
  Time for precision adjustment:    195.653s
  Time for transfer relation:       103.816s
  Time for merge operator:           19.526s
  Time for stop operator:             2.671s
  Time for adding to reached set:     3.985s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1084
Avg. length of target path (in blocks):                8159 (count: 1084, min: 2, max: 15, avg: 7.53)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  95.716s
  Counterexample analysis:                            86.893s (Max:     0.215s, Calls: 1084)
    Refinement sat check:                             75.653s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.060s
  Precision update:                                    0.099s
  ARG update:                                          7.438s

Length of refined path (in blocks):                    8148 (count: 1084, min: 2, max: 15, avg: 7.52)
Number of affected states:                             1115 (count: 1084, min: 1, max: 7, avg: 1.03)
Length (states) of path with itp 'true':               5949 (count: 1084, min: 0, max: 13, avg: 5.49)
Length (states) of path with itp non-trivial itp:      1115 (count: 1084, min: 1, max: 7, avg: 1.03)
Length (states) of path with itp 'false':                 8 (count: 1084, min: 0, max: 1, avg: 0.01)
Different non-trivial interpolants along paths:           0 (count: 1084, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              31 (count: 1084, min: 0, max: 6, avg: 0.03)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1084
Number of successful refinements:     1084
Number of failed refinements:         0
Max. size of reached set before ref.: 1141302
Max. size of reached set after ref.:  1141280
Avg. size of reached set before ref.: 284964.16
Avg. size of reached set after ref.:  282711.09

Total time for CEGAR algorithm:     897.628s
Time for refinements:               338.659s
Average time for refinement:          0.312s
Max time for refinement:              3.340s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          1899
  Total lines:            2197
  Line coverage:          0.864
  Visited conditions:     316
  Total conditions:       440
  Condition coverage:     0.718

CPAchecker general statistics
-----------------------------
Number of program locations:     2964
Number of CFA edges:             3321
Number of relevant variables:    321
Number of functions:             114
Number of loops:                 12
Size of reached set:             1141280
  Size of final wait list        472

Time for analysis setup:          3.488s
  Time for loading CPAs:          0.753s
  Time for loading parser:        0.424s
  Time for CFA construction:      2.214s
    Time for parsing file(s):     0.564s
    Time for AST to CFA:          0.644s
    Time for CFA sanity check:    0.204s
    Time for post-processing:     0.687s
      Time for var class.:        0.290s
Time for Analysis:              897.628s
CPU time for analysis:          897.550s
Total time for CPAchecker:      901.119s
Total CPU time for CPAchecker:  901.040s
Time for statistics:              4.993s

Time for Garbage Collector:      52.511s (in 733 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1925MB (  1836 MiB) max;    862MB (   822 MiB) avg;   1932MB (  1843 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          2634MB (  2512 MiB) max;   1337MB (  1275 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8295MB (  7911 MiB) max;   8234MB (  7853 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
