scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--mfd--sm501.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1jt4_ax8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5817: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5244: Function pointer *(pd->set_power) with type int (*)(struct device *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5207: Function pointer *(pd->get_power) with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5207: Ignoring function call through function pointer *(pd->get_power): tmp___0 = (*(pd->get_power))(sm->dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5244: Ignoring function call through function pointer *(pd->set_power): (*(pd->set_power))(sm->dev, (unsigned int)on); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function platform_get_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            97648 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            87059 (89%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10589 (11%)
  Times precision was empty:       1118 (1%)
  Times precision was {false}:     1886 (2%)
  Times result was cached:         91741 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2903 (3%)
  Times result was 'false':        14724 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         766772
  BDD entailment checks:           191198
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       386
Number of predicates discovered:          9
Number of abstraction locations:          11
Max number of predicates per location:    7
Avg number of predicates per location:    2
Total predicates per abstraction:         293421
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 61.27
Number of irrelevant predicates:          227701 (78%)
Number of preds handled by boolean abs:   4240 (1%)
  Total number of models for allsat:      3061
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.05

Time for post operator:                 65.418s
  Time for path formula creation:       63.772s
Time for strengthen operator:            3.892s
Time for prec operator:                196.487s
  Time for abstraction:                192.423s (Max:     3.969s, Count: 97648)
    Boolean abstraction:                84.200s
    Solving time:                      101.910s (Max:     0.242s)
    Model enumeration time:              8.302s
    Time for BDD construction:           0.150s (Max:     0.008s)
Time for merge operator:                16.352s
Time for coverage check:                 0.188s
  Time for BDD entailment checks:        0.106s
Total time for SMT solver (w/o itp):   110.212s

Number of path formula cache hits:   4415119 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    44.456s

Total number of created targets for pointer analysis: 843617
   Number of created targets for uf: *(void)* is 59959
   Number of created targets for uf: *signed_int is 537
   Number of created targets for uf: *(struct_sm501_platdata)* is 10
   Number of created targets for uf: *(struct_list_head)* is 38
   Number of created targets for uf: *signed_long_int is 140
   Number of created targets for uf: *(struct_resource)* is 83405
   Number of created targets for uf: *unsigned_char_:_1 is 2723
   Number of created targets for uf: *unsigned_long_long_int is 45548
   Number of created targets for uf: *(struct_device)* is 10
   Number of created targets for uf: *unsigned_int is 72
   Number of created targets for uf: *unsigned_long_int is 29


Number of BDD nodes:                               519
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5927 (count: 220826, min: 0, max: 100, avg: 0.03)
Time for BDD node cleanup:                             0.055s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.274s
  Time for transition matches:                         3.295s
  Time for transition assertions:                      0.014s
  Time for transition actions:                         0.024s
Automaton transfers with branching:                0
Automaton transfer successors:                      5675868 (count: 5675868, min: 1, max: 1, avg: 1.00) [1 x 5675868]

CPA algorithm statistics
------------------------
Number of iterations:            3533607
Max size of waitlist:            1005
Average size of waitlist:        326
Number of computed successors:   3890724
Max successors for one state:    2
Number of times merged:          287787
Number of times stopped:         340204
Number of times breaked:         1069

Total time for CPA algorithm:       351.819s (Max:    20.445s)
  Time for choose from waitlist:      0.859s
  Time for precision adjustment:    216.879s
  Time for transfer relation:       102.729s
  Time for merge operator:           18.786s
  Time for stop operator:             2.591s
  Time for adding to reached set:     4.242s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1069
Avg. length of target path (in blocks):                8003 (count: 1069, min: 2, max: 15, avg: 7.49)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  97.425s
  Counterexample analysis:                            90.713s (Max:     0.222s, Calls: 1069)
    Refinement sat check:                             79.058s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.015s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.057s
  Precision update:                                    0.121s
  ARG update:                                          5.165s

Length of refined path (in blocks):                    7980 (count: 1068, min: 2, max: 15, avg: 7.47)
Number of affected states:                             1099 (count: 1068, min: 1, max: 7, avg: 1.03)
Length (states) of path with itp 'true':               5813 (count: 1068, min: 0, max: 13, avg: 5.44)
Length (states) of path with itp non-trivial itp:      1099 (count: 1068, min: 1, max: 7, avg: 1.03)
Length (states) of path with itp 'false':                 8 (count: 1068, min: 0, max: 1, avg: 0.01)
Different non-trivial interpolants along paths:           0 (count: 1068, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              31 (count: 1068, min: 0, max: 6, avg: 0.03)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1069
Number of successful refinements:     1068
Number of failed refinements:         0
Max. size of reached set before ref.: 1093822
Max. size of reached set after ref.:  1093800
Avg. size of reached set before ref.: 273191.73
Avg. size of reached set after ref.:  270136.86

Total time for CEGAR algorithm:     896.589s
Time for refinements:               329.941s
Average time for refinement:          0.308s
Max time for refinement:              2.785s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          1899
  Total lines:            2197
  Line coverage:          0.864
  Visited conditions:     316
  Total conditions:       440
  Condition coverage:     0.718

CPAchecker general statistics
-----------------------------
Number of program locations:     2964
Number of CFA edges:             3321
Number of relevant variables:    321
Number of functions:             114
Number of loops:                 12
Size of reached set:             1093822
  Size of final wait list        289

Time for analysis setup:          3.995s
  Time for loading CPAs:          0.738s
  Time for loading parser:        0.572s
  Time for CFA construction:      2.597s
    Time for parsing file(s):     0.724s
    Time for AST to CFA:          0.888s
    Time for CFA sanity check:    0.161s
    Time for post-processing:     0.661s
      Time for var class.:        0.337s
Time for Analysis:              896.589s
CPU time for analysis:          896.540s
Total time for CPAchecker:      900.591s
Total CPU time for CPAchecker:  900.530s
Time for statistics:              4.220s

Time for Garbage Collector:      51.784s (in 714 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1995MB (  1903 MiB) max;    930MB (   887 MiB) avg;   2097MB (  1999 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          2212MB (  2110 MiB) max;   1337MB (  1275 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8228MB (  7847 MiB) max;   8164MB (  7785 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
