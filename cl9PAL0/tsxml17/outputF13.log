scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--mfd--sm501.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_m93m__eh/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5817: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5244: Function pointer *(pd->set_power) with type int (*)(struct device *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5207: Function pointer *(pd->get_power) with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5207: Ignoring function call through function pointer *(pd->get_power): tmp___0 = (*(pd->get_power))(sm->dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5244: Ignoring function call through function pointer *(pd->set_power): (*(pd->set_power))(sm->dev, (unsigned int)on); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function platform_get_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            101141 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            89996 (89%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11145 (11%)
  Times precision was empty:       239 (0%)
  Times precision was {false}:     1697 (2%)
  Times result was cached:         93265 (92%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5940 (6%)
  Times result was 'false':        17554 (17%)
Number of strengthen sat checks:   0
Number of coverage checks:         730690
  BDD entailment checks:           111212
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       386
Number of predicates discovered:          9
Number of abstraction locations:          11
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         401277
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 52.54
Number of irrelevant predicates:          165596 (41%)
Number of preds handled by boolean abs:   17655 (4%)
  Total number of models for allsat:      6187
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.04

Time for post operator:                 33.907s
  Time for path formula creation:       32.091s
Time for strengthen operator:            3.353s
Time for prec operator:                227.199s
  Time for abstraction:                223.966s (Max:     0.683s, Count: 101141)
    Boolean abstraction:               127.246s
    Solving time:                      131.992s (Max:     0.166s)
    Model enumeration time:             11.927s
    Time for BDD construction:           0.218s (Max:     0.009s)
Time for merge operator:                 5.572s
Time for coverage check:                 0.137s
  Time for BDD entailment checks:        0.083s
Total time for SMT solver (w/o itp):   143.919s

Number of path formula cache hits:   6074053 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    14.009s

Total number of created targets for pointer analysis: 212693
   Number of created targets for uf: *(void)* is 106
   Number of created targets for uf: *signed_int is 11697
   Number of created targets for uf: *(struct_sm501_platdata)* is 30
   Number of created targets for uf: *signed_long_int is 35
   Number of created targets for uf: *(struct_list_head)* is 55
   Number of created targets for uf: *(struct_resource)* is 4292
   Number of created targets for uf: *unsigned_char_:_1 is 653
   Number of created targets for uf: *unsigned_long_long_int is 11662
   Number of created targets for uf: *(struct_device)* is 7
   Number of created targets for uf: *unsigned_int is 685
   Number of created targets for uf: *unsigned_long_int is 20


Number of BDD nodes:                               537
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       11936 (count: 158743, min: 0, max: 186, avg: 0.08)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.951s
  Time for transition matches:                         2.865s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.034s
Automaton transfers with branching:                0
Automaton transfer successors:                      6113377 (count: 6113377, min: 1, max: 1, avg: 1.00) [1 x 6113377]

CPA algorithm statistics
------------------------
Number of iterations:            3795767
Max size of waitlist:            218
Average size of waitlist:        116
Number of computed successors:   4178355
Max successors for one state:    2
Number of times merged:          309739
Number of times stopped:         362672
Number of times breaked:         372

Total time for CPA algorithm:       338.832s (Max:    42.300s)
  Time for choose from waitlist:      1.021s
  Time for precision adjustment:    245.760s
  Time for transfer relation:        71.352s
  Time for merge operator:            7.840s
  Time for stop operator:             2.683s
  Time for adding to reached set:     3.945s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   372
Avg. length of target path (in blocks):                2076 (count: 372, min: 2, max: 11, avg: 5.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  31.629s
  Counterexample analysis:                            24.617s (Max:     0.218s, Calls: 372)
    Refinement sat check:                             21.411s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.043s
  Precision update:                                    0.072s
  ARG update:                                          6.455s

Length of refined path (in blocks):                    2065 (count: 372, min: 2, max: 11, avg: 5.55)
Number of affected states:                              517 (count: 372, min: 1, max: 10, avg: 1.39)
Length (states) of path with itp 'true':               1176 (count: 372, min: 0, max: 8, avg: 3.16)
Length (states) of path with itp non-trivial itp:       517 (count: 372, min: 1, max: 10, avg: 1.39)
Length (states) of path with itp 'false':                 8 (count: 372, min: 0, max: 1, avg: 0.02)
Different non-trivial interpolants along paths:           1 (count: 372, min: 0, max: 1, avg: 0.00)
Equal non-trivial interpolants along paths:             144 (count: 372, min: 0, max: 9, avg: 0.39)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                372
Number of successful refinements:     372
Number of failed refinements:         0
Max. size of reached set before ref.: 157822
Max. size of reached set after ref.:  155809
Avg. size of reached set before ref.: 46880.11
Avg. size of reached set after ref.:  37505.06

Total time for CEGAR algorithm:     393.170s
Time for refinements:                44.091s
Average time for refinement:          0.118s
Max time for refinement:              0.561s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          1899
  Total lines:            2197
  Line coverage:          0.864
  Visited conditions:     316
  Total conditions:       440
  Condition coverage:     0.718

CPAchecker general statistics
-----------------------------
Number of program locations:     2964
Number of CFA edges:             3321
Number of relevant variables:    321
Number of functions:             114
Number of loops:                 12
Size of reached set:             310610
  Number of reached locations:   1143 (39%)
    Avg states per location:     271
    Max states per location:     4070 (at node N26)
  Number of reached functions:   78 (68%)
  Number of partitions:          310608
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1737 (before line 5563), Function main called from node N1722, stack depth 1 [d176a31], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.788s
  Time for loading CPAs:          0.653s
  Time for loading parser:        0.410s
  Time for CFA construction:      2.624s
    Time for parsing file(s):     0.743s
    Time for AST to CFA:          0.851s
    Time for CFA sanity check:    0.171s
    Time for post-processing:     0.709s
      Time for var class.:        0.356s
Time for Analysis:              393.170s
CPU time for analysis:          393.090s
Time for analyzing result:        0.213s
Total time for CPAchecker:      396.964s
Total CPU time for CPAchecker:  396.880s
Time for statistics:              1.895s

Time for Garbage Collector:      27.671s (in 757 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                469MB (   448 MiB) max;    249MB (   238 MiB) avg;    490MB (   468 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           490MB (   467 MiB) max;    384MB (   366 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8230MB (  7848 MiB) max;   8116MB (  7740 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
