scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--mfd--sm501.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_j7va7ngt/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5817: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5244: Function pointer *(pd->set_power) with type int (*)(struct device *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5207: Function pointer *(pd->get_power) with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5207: Ignoring function call through function pointer *(pd->get_power): tmp___0 = (*(pd->get_power))(sm->dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5244: Ignoring function call through function pointer *(pd->set_power): (*(pd->set_power))(sm->dev, (unsigned int)on); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function platform_get_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            159985 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            144123 (90%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15862 (10%)
  Times precision was empty:       247 (0%)
  Times precision was {false}:     1994 (1%)
  Times result was cached:         151399 (95%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6345 (4%)
  Times result was 'false':        25328 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         1160837
  BDD entailment checks:           195875
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       386
Number of predicates discovered:          9
Number of abstraction locations:          11
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         636142
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 76.29
Number of irrelevant predicates:          279863 (44%)
Number of preds handled by boolean abs:   18288 (3%)
  Total number of models for allsat:      6745
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.06

Time for post operator:                 65.834s
  Time for path formula creation:       63.578s
Time for strengthen operator:            5.144s
Time for prec operator:                262.941s
  Time for abstraction:                258.490s (Max:     1.430s, Count: 159985)
    Boolean abstraction:               129.761s
    Solving time:                      135.882s (Max:     0.160s)
    Model enumeration time:             12.164s
    Time for BDD construction:           0.190s (Max:     0.010s)
Time for merge operator:                13.332s
Time for coverage check:                 0.235s
  Time for BDD entailment checks:        0.132s
Total time for SMT solver (w/o itp):   148.046s

Number of path formula cache hits:   9246276 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    24.710s

Total number of created targets for pointer analysis: 405245
   Number of created targets for uf: *(void)* is 106
   Number of created targets for uf: *signed_int is 20497
   Number of created targets for uf: *(struct_sm501_platdata)* is 30
   Number of created targets for uf: *signed_long_int is 63
   Number of created targets for uf: *(struct_list_head)* is 55
   Number of created targets for uf: *(struct_resource)* is 7672
   Number of created targets for uf: *unsigned_char_:_1 is 1173
   Number of created targets for uf: *unsigned_long_long_int is 22984
   Number of created targets for uf: *(struct_device)* is 7
   Number of created targets for uf: *unsigned_int is 1005
   Number of created targets for uf: *unsigned_long_int is 20


Number of BDD nodes:                               537
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       12890 (count: 253535, min: 0, max: 250, avg: 0.05)
Time for BDD node cleanup:                             0.029s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.415s
  Time for transition matches:                         4.480s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.022s
Automaton transfers with branching:                0
Automaton transfer successors:                      9458384 (count: 9458384, min: 1, max: 1, avg: 1.00) [1 x 9458384]

CPA algorithm statistics
------------------------
Number of iterations:            5876040
Max size of waitlist:            396
Average size of waitlist:        159
Number of computed successors:   6472304
Max successors for one state:    2
Number of times merged:          482481
Number of times stopped:         569335
Number of times breaked:         537

Total time for CPA algorithm:       439.818s (Max:    41.355s)
  Time for choose from waitlist:      1.359s
  Time for precision adjustment:    286.393s
  Time for transfer relation:       118.332s
  Time for merge operator:           16.386s
  Time for stop operator:             4.016s
  Time for adding to reached set:     5.545s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   537
Avg. length of target path (in blocks):                3261 (count: 537, min: 2, max: 11, avg: 6.07)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  42.810s
  Counterexample analysis:                            32.306s (Max:     0.165s, Calls: 537)
    Refinement sat check:                             27.994s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.035s
  Precision update:                                    0.053s
  ARG update:                                          9.891s

Length of refined path (in blocks):                    3250 (count: 537, min: 2, max: 11, avg: 6.05)
Number of affected states:                              682 (count: 537, min: 1, max: 10, avg: 1.27)
Length (states) of path with itp 'true':               2031 (count: 537, min: 0, max: 9, avg: 3.78)
Length (states) of path with itp non-trivial itp:       682 (count: 537, min: 1, max: 10, avg: 1.27)
Length (states) of path with itp 'false':                 8 (count: 537, min: 0, max: 1, avg: 0.01)
Different non-trivial interpolants along paths:           1 (count: 537, min: 0, max: 1, avg: 0.00)
Equal non-trivial interpolants along paths:             144 (count: 537, min: 0, max: 9, avg: 0.27)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                537
Number of successful refinements:     537
Number of failed refinements:         0
Max. size of reached set before ref.: 326002
Max. size of reached set after ref.:  323991
Avg. size of reached set before ref.: 65300.45
Avg. size of reached set after ref.:  54933.53

Total time for CEGAR algorithm:     525.095s
Time for refinements:                66.191s
Average time for refinement:          0.123s
Max time for refinement:              1.357s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          1899
  Total lines:            2197
  Line coverage:          0.864
  Visited conditions:     316
  Total conditions:       440
  Condition coverage:     0.718

CPAchecker general statistics
-----------------------------
Number of program locations:     2964
Number of CFA edges:             3321
Number of relevant variables:    321
Number of functions:             114
Number of loops:                 12
Size of reached set:             310610
  Number of reached locations:   1143 (39%)
    Avg states per location:     271
    Max states per location:     4070 (at node N26)
  Number of reached functions:   78 (68%)
  Number of partitions:          310608
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1737 (before line 5563), Function main called from node N1722, stack depth 1 [d176a31], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.101s
  Time for loading CPAs:          0.562s
  Time for loading parser:        0.396s
  Time for CFA construction:      2.060s
    Time for parsing file(s):     0.584s
    Time for AST to CFA:          0.665s
    Time for CFA sanity check:    0.148s
    Time for post-processing:     0.535s
      Time for var class.:        0.283s
Time for Analysis:              525.096s
CPU time for analysis:          525.040s
Time for analyzing result:        0.194s
Total time for CPAchecker:      528.200s
Total CPU time for CPAchecker:  528.140s
Time for statistics:              2.207s

Time for Garbage Collector:      41.954s (in 759 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                936MB (   893 MiB) max;    438MB (   417 MiB) avg;    952MB (   908 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           951MB (   907 MiB) max;    664MB (   634 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8294MB (  7910 MiB) max;   8132MB (  7755 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
