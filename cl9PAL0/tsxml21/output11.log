scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--hwmon--applesmc.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fabbss03/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4062: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5445 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            3917 (72%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1528 (28%)
  Times precision was empty:       277 (5%)
  Times precision was {false}:     602 (11%)
  Times result was cached:         3583 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      983 (18%)
  Times result was 'false':        2317 (43%)
Number of strengthen sat checks:   0
Number of coverage checks:         9157
  BDD entailment checks:           2469
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       99
Number of predicates discovered:          8
Number of abstraction locations:          13
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         7168
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 4.52
Number of irrelevant predicates:          3374 (47%)
Number of preds handled by boolean abs:   1206 (17%)
  Total number of models for allsat:      753
  Max number of models for allsat:        8
  Avg number of models for allsat:        0.77

Time for post operator:                  3.983s
  Time for path formula creation:        3.895s
Time for strengthen operator:            0.146s
Time for prec operator:                  8.432s
  Time for abstraction:                  8.124s (Max:     0.055s, Count: 5445)
    Boolean abstraction:                 3.210s
    Solving time:                        3.793s (Max:     0.049s)
    Model enumeration time:              0.218s
    Time for BDD construction:           0.058s (Max:     0.008s)
Time for merge operator:                 0.616s
Time for coverage check:                 0.004s
  Time for BDD entailment checks:        0.004s
Total time for SMT solver (w/o itp):     4.011s

Number of path formula cache hits:   71951 (61%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.268s

Total number of created targets for pointer analysis: 15494
   Number of created targets for uf: *signed_int is 209
   Number of created targets for uf: *unsigned_char is 1425
   Number of created targets for uf: *_Bool is 7
   Number of created targets for uf: *(struct_applesmc_dev_attr)* is 73
   Number of created targets for uf: *unsigned_int is 169


Number of BDD nodes:                               257
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1723 (count: 12579, min: 0, max: 117, avg: 0.14)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.415s
Automaton transfers with branching:                0
Automaton transfer successors:                       114900 (count: 114900, min: 1, max: 1, avg: 1.00) [1 x 114900]

CPA algorithm statistics
------------------------
Number of iterations:            90572
Max size of waitlist:            45
Average size of waitlist:        33
Number of computed successors:   98287
Max successors for one state:    2
Number of times merged:          3344
Number of times stopped:         4869
Number of times breaked:         134

Total time for CPA algorithm:        16.758s (Max:     0.688s)
  Time for choose from waitlist:      0.111s
  Time for precision adjustment:      9.237s
  Time for transfer relation:         5.752s
  Time for merge operator:            0.769s
  Time for stop operator:             0.158s
  Time for adding to reached set:     0.202s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   134
Avg. length of target path (in blocks):                2443 (count: 134, min: 1, max: 30, avg: 18.23)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.616s
  Counterexample analysis:                             7.029s (Max:     0.129s, Calls: 134)
    Refinement sat check:                              6.066s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.045s
  Precision update:                                    0.052s
  ARG update:                                          0.276s

Length of refined path (in blocks):                    2439 (count: 134, min: 1, max: 30, avg: 18.20)
Number of affected states:                              514 (count: 134, min: 0, max: 9, avg: 3.84)
Length (states) of path with itp 'true':               1791 (count: 134, min: 0, max: 25, avg: 13.37)
Length (states) of path with itp non-trivial itp:       514 (count: 134, min: 0, max: 9, avg: 3.84)
Length (states) of path with itp 'false':                 2 (count: 134, min: 0, max: 1, avg: 0.01)
Different non-trivial interpolants along paths:           3 (count: 134, min: 0, max: 2, avg: 0.02)
Equal non-trivial interpolants along paths:             379 (count: 134, min: 0, max: 8, avg: 2.83)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                134
Number of successful refinements:     134
Number of failed refinements:         0
Max. size of reached set before ref.: 21853
Max. size of reached set after ref.:  19729
Avg. size of reached set before ref.: 7909.31
Avg. size of reached set after ref.:  7287.01

Total time for CEGAR algorithm:      26.371s
Time for refinements:                 8.839s
Average time for refinement:          0.065s
Max time for refinement:              0.140s

Code Coverage
-----------------------------
  Function coverage:      0.510
  Visited lines:          940
  Total lines:            1535
  Line coverage:          0.612
  Visited conditions:     158
  Total conditions:       334
  Condition coverage:     0.473

CPAchecker general statistics
-----------------------------
Number of program locations:     2092
Number of CFA edges:             2345
Number of relevant variables:    325
Number of functions:             104
Number of loops:                 14
Size of reached set:             7714
  Number of reached locations:   566 (27%)
    Avg states per location:     13
    Max states per location:     138 (at node N57)
  Number of reached functions:   53 (51%)
  Number of partitions:          7711
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1556 (before line 4006), Function main called from node N1496, stack depth 1 [107e5441], stack [main]])
  Number of target states:       0
  Size of final wait list        39

Time for analysis setup:          3.446s
  Time for loading CPAs:          0.703s
  Time for loading parser:        0.537s
  Time for CFA construction:      2.120s
    Time for parsing file(s):     0.648s
    Time for AST to CFA:          0.724s
    Time for CFA sanity check:    0.128s
    Time for post-processing:     0.482s
      Time for var class.:        0.252s
Time for Analysis:               26.371s
CPU time for analysis:           26.370s
Total time for CPAchecker:       29.820s
Total CPU time for CPAchecker:   29.820s
Time for statistics:              0.159s

Time for Garbage Collector:       0.619s (in 58 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 95MB (    91 MiB) max;     55MB (    53 MiB) avg;     98MB (    93 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    34 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8010MB (  7639 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
