scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--hwmon--applesmc.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_52fybogz/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4062: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_allocate_polled_device to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            176810 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            148524 (84%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         28286 (16%)
  Times precision was empty:       37438 (21%)
  Times precision was {false}:     1973 (1%)
  Times result was cached:         127620 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9779 (6%)
  Times result was 'false':        38857 (22%)
Number of strengthen sat checks:   0
Number of coverage checks:         203432
  BDD entailment checks:           35744
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       132
Number of predicates discovered:          11
Number of abstraction locations:          9
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         196390
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 16.71
Number of irrelevant predicates:          48093 (24%)
Number of preds handled by boolean abs:   14304 (7%)
  Total number of models for allsat:      11565
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.18

Time for post operator:                 40.605s
  Time for path formula creation:       39.673s
Time for strengthen operator:            2.084s
Time for prec operator:                113.840s
  Time for abstraction:                110.837s (Max:     4.204s, Count: 176810)
    Boolean abstraction:                56.763s
    Solving time:                       49.470s (Max:     0.171s)
    Model enumeration time:              7.987s
    Time for BDD construction:           0.249s (Max:     0.010s)
Time for merge operator:                 3.244s
Time for coverage check:                 0.075s
  Time for BDD entailment checks:        0.052s
Total time for SMT solver (w/o itp):    57.457s

Number of path formula cache hits:   2083951 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    28.805s

Total number of created targets for pointer analysis: 197793
   Number of created targets for uf: *signed_int is 40762
   Number of created targets for uf: *(char)* is 37076
   Number of created targets for uf: *unsigned_char is 13818
   Number of created targets for uf: *(struct_applesmc_entry)* is 2
   Number of created targets for uf: *_Bool is 11
   Number of created targets for uf: *signed_short_int is 632
   Number of created targets for uf: *(struct_applesmc_dev_attr)* is 34753
   Number of created targets for uf: *unsigned_int is 1465


Number of BDD nodes:                               351
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       17922 (count: 144251, min: 0, max: 371, avg: 0.12)
Time for BDD node cleanup:                             0.039s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.300s
  Time for transition matches:                         1.664s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.035s
Automaton transfers with branching:                0
Automaton transfer successors:                      2946862 (count: 2946862, min: 1, max: 1, avg: 1.00) [1 x 2946862]

CPA algorithm statistics
------------------------
Number of iterations:            2093652
Max size of waitlist:            74949
Average size of waitlist:        36514
Number of computed successors:   2310473
Max successors for one state:    2
Number of times merged:          83844
Number of times stopped:         101330
Number of times breaked:         461

Total time for CPA algorithm:       205.341s (Max:    20.946s)
  Time for choose from waitlist:      1.037s
  Time for precision adjustment:    125.637s
  Time for transfer relation:        64.342s
  Time for merge operator:            4.301s
  Time for stop operator:             1.724s
  Time for adding to reached set:     4.189s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   461
Avg. length of target path (in blocks):                7547 (count: 461, min: 1, max: 22, avg: 16.37)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  20.559s
  Counterexample analysis:                            19.918s (Max:     0.118s, Calls: 461)
    Refinement sat check:                             17.063s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.058s
  Precision update:                                    0.097s
  ARG update:                                          0.227s

Length of refined path (in blocks):                    7521 (count: 461, min: 1, max: 22, avg: 16.31)
Number of affected states:                              503 (count: 461, min: 0, max: 14, avg: 1.09)
Length (states) of path with itp 'true':               6557 (count: 461, min: 0, max: 20, avg: 14.22)
Length (states) of path with itp non-trivial itp:       503 (count: 461, min: 0, max: 14, avg: 1.09)
Length (states) of path with itp 'false':                 5 (count: 461, min: 0, max: 1, avg: 0.01)
Different non-trivial interpolants along paths:           4 (count: 461, min: 0, max: 2, avg: 0.01)
Equal non-trivial interpolants along paths:              40 (count: 461, min: 0, max: 13, avg: 0.09)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                461
Number of successful refinements:     461
Number of failed refinements:         0
Max. size of reached set before ref.: 2116321
Max. size of reached set after ref.:  2116257
Avg. size of reached set before ref.: 911621.59
Avg. size of reached set after ref.:  911504.39

Total time for CEGAR algorithm:     897.129s
Time for refinements:               368.241s
Average time for refinement:          0.798s
Max time for refinement:              2.352s

Code Coverage
-----------------------------
  Function coverage:      0.558
  Visited lines:          969
  Total lines:            1535
  Line coverage:          0.631
  Visited conditions:     156
  Total conditions:       334
  Condition coverage:     0.467

CPAchecker general statistics
-----------------------------
Number of program locations:     2092
Number of CFA edges:             2345
Number of relevant variables:    325
Number of functions:             104
Number of loops:                 14
Size of reached set:             2116257
  Size of final wait list        74945

Time for analysis setup:          3.461s
  Time for loading CPAs:          0.721s
  Time for loading parser:        0.530s
  Time for CFA construction:      2.099s
    Time for parsing file(s):     0.623s
    Time for AST to CFA:          0.717s
    Time for CFA sanity check:    0.128s
    Time for post-processing:     0.490s
      Time for var class.:        0.269s
Time for Analysis:              897.129s
CPU time for analysis:          897.100s
Total time for CPAchecker:      900.593s
Total CPU time for CPAchecker:  900.560s
Time for statistics:              8.089s

Time for Garbage Collector:      46.616s (in 407 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2410MB (  2298 MiB) max;   1306MB (  1246 MiB) avg;   2476MB (  2361 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          2696MB (  2572 MiB) max;   1895MB (  1807 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8221MB (  7840 MiB) max;   8188MB (  7808 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
