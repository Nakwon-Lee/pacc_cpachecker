scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--hwmon--applesmc.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_y0nb9j47/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4062: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_allocate_polled_device to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            97746 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            73264 (75%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24482 (25%)
  Times precision was empty:       12224 (13%)
  Times precision was {false}:     1049 (1%)
  Times result was cached:         81333 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3140 (3%)
  Times result was 'false':        35478 (36%)
Number of strengthen sat checks:   0
Number of coverage checks:         167416
  BDD entailment checks:           17422
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       132
Number of predicates discovered:          7
Number of abstraction locations:          9
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         131762
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 31.45
Number of irrelevant predicates:          65145 (49%)
Number of preds handled by boolean abs:   3976 (3%)
  Total number of models for allsat:      2715
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.86

Time for post operator:                 16.472s
  Time for path formula creation:       15.857s
Time for strengthen operator:            1.358s
Time for prec operator:                 60.920s
  Time for abstraction:                 59.345s (Max:     0.524s, Count: 97746)
    Boolean abstraction:                18.015s
    Solving time:                       18.607s (Max:     0.192s)
    Model enumeration time:              1.196s
    Time for BDD construction:           0.113s (Max:     0.009s)
Time for merge operator:                 1.579s
Time for coverage check:                 0.075s
  Time for BDD entailment checks:        0.055s
Total time for SMT solver (w/o itp):    19.803s

Number of path formula cache hits:   1992632 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.664s

Total number of created targets for pointer analysis: 61771
   Number of created targets for uf: *(char)* is 8725
   Number of created targets for uf: *signed_int is 1481
   Number of created targets for uf: *unsigned_char is 3
   Number of created targets for uf: *(struct_applesmc_entry)* is 2
   Number of created targets for uf: *_Bool is 21
   Number of created targets for uf: *unsigned_int is 415
   Number of created targets for uf: *signed_short_int is 357
   Number of created targets for uf: *(struct_applesmc_dev_attr)* is 7921


Number of BDD nodes:                               215
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5631 (count: 55540, min: 0, max: 256, avg: 0.10)
Time for BDD node cleanup:                             0.031s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.604s
  Time for transition matches:                         1.109s
  Time for transition assertions:                      0.010s
  Time for transition actions:                         0.023s
Automaton transfers with branching:                0
Automaton transfer successors:                      2150552 (count: 2150552, min: 1, max: 1, avg: 1.00) [1 x 2150552]

CPA algorithm statistics
------------------------
Number of iterations:            1510428
Max size of waitlist:            21378
Average size of waitlist:        7813
Number of computed successors:   1669750
Max successors for one state:    2
Number of times merged:          74997
Number of times stopped:         92363
Number of times breaked:         1345

Total time for CPA algorithm:       105.927s (Max:     4.602s)
  Time for choose from waitlist:      0.410s
  Time for precision adjustment:     67.380s
  Time for transfer relation:        30.456s
  Time for merge operator:            2.261s
  Time for stop operator:             1.170s
  Time for adding to reached set:     1.617s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1345
Avg. length of target path (in blocks):               16280 (count: 1345, min: 1, max: 16, avg: 12.10)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  40.346s
  Counterexample analysis:                            38.291s (Max:     0.075s, Calls: 1345)
    Refinement sat check:                             32.745s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.024s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.079s
  Precision update:                                    0.174s
  ARG update:                                          1.251s

Length of refined path (in blocks):                   16279 (count: 1345, min: 1, max: 16, avg: 12.10)
Number of affected states:                             1370 (count: 1345, min: 0, max: 8, avg: 1.02)
Length (states) of path with itp 'true':              13564 (count: 1345, min: 0, max: 14, avg: 10.08)
Length (states) of path with itp non-trivial itp:      1370 (count: 1345, min: 0, max: 8, avg: 1.02)
Length (states) of path with itp 'false':                 1 (count: 1345, min: 0, max: 1, avg: 0.00)
Different non-trivial interpolants along paths:           2 (count: 1345, min: 0, max: 2, avg: 0.00)
Equal non-trivial interpolants along paths:              25 (count: 1345, min: 0, max: 7, avg: 0.02)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1345
Number of successful refinements:     1345
Number of failed refinements:         0
Max. size of reached set before ref.: 1083942
Max. size of reached set after ref.:  1083877
Avg. size of reached set before ref.: 368272.65
Avg. size of reached set after ref.:  367933.99

Total time for CEGAR algorithm:     896.974s
Time for refinements:               427.979s
Average time for refinement:          0.318s
Max time for refinement:              2.959s

Code Coverage
-----------------------------
  Function coverage:      0.558
  Visited lines:          974
  Total lines:            1535
  Line coverage:          0.635
  Visited conditions:     156
  Total conditions:       334
  Condition coverage:     0.467

CPAchecker general statistics
-----------------------------
Number of program locations:     2092
Number of CFA edges:             2345
Number of relevant variables:    325
Number of functions:             104
Number of loops:                 14
Size of reached set:             1086420
  Size of final wait list        21377

Time for analysis setup:          3.361s
  Time for loading CPAs:          0.627s
  Time for loading parser:        0.508s
  Time for CFA construction:      2.165s
    Time for parsing file(s):     0.623s
    Time for AST to CFA:          0.691s
    Time for CFA sanity check:    0.122s
    Time for post-processing:     0.559s
      Time for var class.:        0.335s
Time for Analysis:              896.975s
CPU time for analysis:          896.940s
Total time for CPAchecker:      900.338s
Total CPU time for CPAchecker:  900.290s
Time for statistics:              4.141s

Time for Garbage Collector:      35.869s (in 896 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1222MB (  1166 MiB) max;    597MB (   569 MiB) avg;   1247MB (  1189 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1592MB (  1518 MiB) max;    908MB (   866 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8059MB (  7685 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
