scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--hwmon--applesmc.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_mryvnb5s/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4062: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_allocate_polled_device to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            25169 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            21876 (87%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3293 (13%)
  Times precision was empty:       262 (1%)
  Times precision was {false}:     351 (1%)
  Times result was cached:         23427 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1129 (4%)
  Times result was 'false':        3838 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         20025
  BDD entailment checks:           14163
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       71
Number of predicates discovered:          4
Number of abstraction locations:          8
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         57930
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 39.14
Number of irrelevant predicates:          13315 (23%)
Number of preds handled by boolean abs:   2313 (4%)
  Total number of models for allsat:      1041
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.92

Time for post operator:                  5.599s
  Time for path formula creation:        5.452s
Time for strengthen operator:            0.236s
Time for prec operator:                 13.826s
  Time for abstraction:                 13.268s (Max:     0.476s, Count: 25169)
    Boolean abstraction:                 5.096s
    Solving time:                        4.753s (Max:     0.038s)
    Model enumeration time:              0.372s
    Time for BDD construction:           0.086s (Max:     0.008s)
Time for merge operator:                 0.244s
Time for coverage check:                 0.055s
  Time for BDD entailment checks:        0.043s
Total time for SMT solver (w/o itp):     5.125s

Number of path formula cache hits:   245199 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.312s

Total number of created targets for pointer analysis: 15381
   Number of created targets for uf: *(char)* is 1187
   Number of created targets for uf: *signed_int is 1231
   Number of created targets for uf: *unsigned_char is 50
   Number of created targets for uf: *_Bool is 397
   Number of created targets for uf: *(struct_applesmc_dev_attr)* is 10153


Number of BDD nodes:                               219
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2133 (count: 23370, min: 0, max: 141, avg: 0.09)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.743s
  Time for transition matches:                         0.314s
  Time for transition assertions:                      0.017s
  Time for transition actions:                         0.019s
Automaton transfers with branching:                0
Automaton transfer successors:                       270952 (count: 270952, min: 1, max: 1, avg: 1.00) [1 x 270952]

CPA algorithm statistics
------------------------
Number of iterations:            181244
Max size of waitlist:            217
Average size of waitlist:        153
Number of computed successors:   199605
Max successors for one state:    2
Number of times merged:          2931
Number of times stopped:         14084
Number of times breaked:         16

Total time for CPA algorithm:        26.419s (Max:    22.115s)
  Time for choose from waitlist:      0.128s
  Time for precision adjustment:     15.547s
  Time for transfer relation:         8.959s
  Time for merge operator:            0.399s
  Time for stop operator:             0.361s
  Time for adding to reached set:     0.346s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                 130 (count: 16, min: 1, max: 14, avg: 8.13)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.396s
  Counterexample analysis:                             0.302s (Max:     0.034s, Calls: 16)
    Refinement sat check:                              0.240s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.016s
  Precision update:                                    0.014s
  ARG update:                                          0.039s

Length of refined path (in blocks):                     122 (count: 16, min: 1, max: 14, avg: 7.63)
Number of affected states:                               96 (count: 16, min: 0, max: 13, avg: 6.00)
Length (states) of path with itp 'true':                 10 (count: 16, min: 0, max: 6, avg: 0.63)
Length (states) of path with itp non-trivial itp:        96 (count: 16, min: 0, max: 13, avg: 6.00)
Length (states) of path with itp 'false':                 2 (count: 16, min: 0, max: 1, avg: 0.13)
Different non-trivial interpolants along paths:           0 (count: 16, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              82 (count: 16, min: 0, max: 12, avg: 5.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 2038
Max. size of reached set after ref.:  763
Avg. size of reached set before ref.: 734.31
Avg. size of reached set after ref.:  139.50

Total time for CEGAR algorithm:      26.886s
Time for refinements:                 0.465s
Average time for refinement:          0.029s
Max time for refinement:              0.054s

Code Coverage
-----------------------------
  Function coverage:      0.385
  Visited lines:          786
  Total lines:            1535
  Line coverage:          0.512
  Visited conditions:     102
  Total conditions:       334
  Condition coverage:     0.305

CPAchecker general statistics
-----------------------------
Number of program locations:     2092
Number of CFA edges:             2345
Number of relevant variables:    325
Number of functions:             104
Number of loops:                 14
Size of reached set:             172166
  Number of reached locations:   376 (18%)
    Avg states per location:     457
    Max states per location:     4966 (at node N1171)
  Number of reached functions:   40 (38%)
  Number of partitions:          172164
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1556 (before line 4006), Function main called from node N1496, stack depth 1 [107e5441], stack [main]])
  Number of target states:       0
  Size of final wait list        136

Time for analysis setup:          3.368s
  Time for loading CPAs:          0.647s
  Time for loading parser:        0.491s
  Time for CFA construction:      2.160s
    Time for parsing file(s):     0.653s
    Time for AST to CFA:          0.701s
    Time for CFA sanity check:    0.124s
    Time for post-processing:     0.530s
      Time for var class.:        0.285s
Time for Analysis:               26.886s
CPU time for analysis:           26.890s
Total time for CPAchecker:       30.258s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              1.477s

Time for Garbage Collector:       2.300s (in 87 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                199MB (   190 MiB) max;     75MB (    71 MiB) avg;    250MB (   239 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           353MB (   337 MiB) max;    143MB (   136 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    37 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8077MB (  7703 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
