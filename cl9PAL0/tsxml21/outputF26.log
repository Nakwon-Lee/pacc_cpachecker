scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--hwmon--applesmc.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_d58vg7x1/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4062: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_allocate_polled_device to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            694505 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            550087 (79%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         144418 (21%)
  Times precision was empty:       199399 (29%)
  Times precision was {false}:     2669 (0%)
  Times result was cached:         481931 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10506 (2%)
  Times result was 'false':        200169 (29%)
Number of strengthen sat checks:   0
Number of coverage checks:         573500
  BDD entailment checks:           210466
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       132
Number of predicates discovered:          8
Number of abstraction locations:          9
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         1270117
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 96.40
Number of irrelevant predicates:          147376 (12%)
Number of preds handled by boolean abs:   31827 (3%)
  Total number of models for allsat:      9131
  Max number of models for allsat:        4
  Avg number of models for allsat:        0.87

Time for post operator:                 92.522s
  Time for path formula creation:       71.000s
Time for strengthen operator:            9.353s
Time for prec operator:                365.361s
  Time for abstraction:                356.036s (Max:    18.846s, Count: 694505)
    Boolean abstraction:                52.934s
    Solving time:                       50.464s (Max:     0.299s)
    Model enumeration time:              3.302s
    Time for BDD construction:           0.245s (Max:     0.010s)
Time for merge operator:                 4.205s
Time for coverage check:                 0.214s
  Time for BDD entailment checks:        0.128s
Total time for SMT solver (w/o itp):    53.766s

Number of path formula cache hits:   9308039 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    33.948s

Total number of created targets for pointer analysis: 178422
   Number of created targets for uf: *signed_int is 29853
   Number of created targets for uf: *(char)* is 27157
   Number of created targets for uf: *unsigned_char is 18071
   Number of created targets for uf: *(struct_applesmc_entry)* is 2
   Number of created targets for uf: *_Bool is 8337
   Number of created targets for uf: *signed_short_int is 819
   Number of created targets for uf: *(struct_applesmc_dev_attr)* is 23161
   Number of created targets for uf: *unsigned_int is 1861


Number of BDD nodes:                               271
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       17872 (count: 489674, min: 0, max: 626, avg: 0.04)
Time for BDD node cleanup:                             0.069s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 29.738s
  Time for transition matches:                         5.542s
  Time for transition assertions:                      0.026s
  Time for transition actions:                         0.086s
Automaton transfers with branching:                0
Automaton transfer successors:                      9951543 (count: 9951543, min: 1, max: 1, avg: 1.00) [1 x 9951543]

CPA algorithm statistics
------------------------
Number of iterations:            7339546
Max size of waitlist:            191316
Average size of waitlist:        90479
Number of computed successors:   8004804
Max successors for one state:    2
Number of times merged:          181517
Number of times stopped:         264380
Number of times breaked:         112

Total time for CPA algorithm:       890.326s (Max:   845.267s)
  Time for choose from waitlist:      3.245s
  Time for precision adjustment:    559.161s
  Time for transfer relation:       268.847s
  Time for merge operator:            6.323s
  Time for stop operator:             5.493s
  Time for adding to reached set:    33.111s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   112
Avg. length of target path (in blocks):                1255 (count: 112, min: 1, max: 23, avg: 11.21)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.742s
  Counterexample analysis:                             3.452s (Max:     0.118s, Calls: 112)
    Refinement sat check:                              2.957s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.021s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.049s
  ARG update:                                          1.103s

Length of refined path (in blocks):                    1250 (count: 112, min: 1, max: 23, avg: 11.16)
Number of affected states:                              233 (count: 112, min: 0, max: 22, avg: 2.08)
Length (states) of path with itp 'true':                905 (count: 112, min: 0, max: 15, avg: 8.08)
Length (states) of path with itp non-trivial itp:       233 (count: 112, min: 0, max: 22, avg: 2.08)
Length (states) of path with itp 'false':                 5 (count: 112, min: 0, max: 1, avg: 0.04)
Different non-trivial interpolants along paths:           2 (count: 112, min: 0, max: 2, avg: 0.02)
Equal non-trivial interpolants along paths:             121 (count: 112, min: 0, max: 21, avg: 1.08)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                112
Number of successful refinements:     112
Number of failed refinements:         0
Max. size of reached set before ref.: 243527
Max. size of reached set after ref.:  74751
Avg. size of reached set before ref.: 34767.13
Avg. size of reached set after ref.:  31154.71

Total time for CEGAR algorithm:     900.836s
Time for refinements:                 7.961s
Average time for refinement:          0.071s
Max time for refinement:              0.717s

Code Coverage
-----------------------------
  Function coverage:      0.558
  Visited lines:          980
  Total lines:            1535
  Line coverage:          0.638
  Visited conditions:     156
  Total conditions:       334
  Condition coverage:     0.467

CPAchecker general statistics
-----------------------------
Number of program locations:     2092
Number of CFA edges:             2345
Number of relevant variables:    325
Number of functions:             104
Number of loops:                 14
Size of reached set:             7135664
  Size of final wait list        191314

Time for analysis setup:          3.341s
  Time for loading CPAs:          0.607s
  Time for loading parser:        0.489s
  Time for CFA construction:      2.174s
    Time for parsing file(s):     0.693s
    Time for AST to CFA:          0.728s
    Time for CFA sanity check:    0.107s
    Time for post-processing:     0.484s
      Time for var class.:        0.246s
Time for Analysis:              900.836s
CPU time for analysis:          900.740s
Total time for CPAchecker:      904.180s
Total CPU time for CPAchecker:  904.070s
Time for statistics:            178.222s

Time for Garbage Collector:     639.616s (in 380 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               5414MB (  5163 MiB) max;   2461MB (  2347 MiB) avg;   5414MB (  5163 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     39MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          5414MB (  5163 MiB) max;   3125MB (  2980 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8293MB (  7909 MiB) max;   8207MB (  7826 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
