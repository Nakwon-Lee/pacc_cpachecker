scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--w83781d.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0nldmx1l/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7822: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2360: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_word_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2360: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2248 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            272 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1976 (88%)
  Times precision was empty:       152 (7%)
  Times precision was {false}:     2086 (93%)
  Times result was cached:         1 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9 (0%)
  Times result was 'false':        1972 (88%)
Number of strengthen sat checks:   0
Number of coverage checks:         15464
  BDD entailment checks:           2
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       601
Number of predicates discovered:          8
Number of abstraction locations:          3
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         2126
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 1.01
Number of irrelevant predicates:          2087 (98%)
Number of preds handled by boolean abs:   39 (2%)
  Total number of models for allsat:      10
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.11

Time for post operator:                  4.761s
  Time for path formula creation:        4.655s
Time for strengthen operator:            0.161s
Time for prec operator:                 13.739s
  Time for abstraction:                 13.580s (Max:     1.095s, Count: 2248)
    Boolean abstraction:                 2.196s
    Solving time:                        7.988s (Max:     0.867s)
    Model enumeration time:              0.444s
    Time for BDD construction:           0.007s (Max:     0.007s)
Time for merge operator:                 1.626s
Time for coverage check:                 0.004s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     8.432s

Number of path formula cache hits:   84443 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.921s

Total number of created targets for pointer analysis: 383
   Number of created targets for uf: *unsigned_short_int is 15
   Number of created targets for uf: *unsigned_char is 41


Number of BDD nodes:                               233
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         144 (count: 12668, min: 0, max: 37, avg: 0.01)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.633s
  Time for transition matches:                         0.151s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.035s
Automaton transfers with branching:                0
Automaton transfer successors:                       120626 (count: 120626, min: 1, max: 1, avg: 1.00) [1 x 120626]

CPA algorithm statistics
------------------------
Number of iterations:            82519
Max size of waitlist:            108
Average size of waitlist:        97
Number of computed successors:   92965
Max successors for one state:    2
Number of times merged:          7731
Number of times stopped:         7732
Number of times breaked:         7

Total time for CPA algorithm:        24.657s (Max:    10.838s)
  Time for choose from waitlist:      0.124s
  Time for precision adjustment:     14.530s
  Time for transfer relation:         7.293s
  Time for merge operator:            1.864s
  Time for stop operator:             0.139s
  Time for adding to reached set:     0.208s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                  16 (count: 7, min: 2, max: 3, avg: 2.29)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.450s
  Counterexample analysis:                             0.208s (Max:     0.044s, Calls: 7)
    Refinement sat check:                              0.181s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.003s
  ARG update:                                          0.224s

Length of refined path (in blocks):                      14 (count: 7, min: 2, max: 2, avg: 2.00)
Number of affected states:                                7 (count: 7, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 7, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         7 (count: 7, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 2 (count: 7, min: 0, max: 1, avg: 0.29)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 7, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 27827
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 10582.29
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:      25.262s
Time for refinements:                 0.605s
Average time for refinement:          0.086s
Max time for refinement:              0.139s

Code Coverage
-----------------------------
  Function coverage:      0.520
  Visited lines:          2556
  Total lines:            4373
  Line coverage:          0.584
  Visited conditions:     574
  Total conditions:       1498
  Condition coverage:     0.383

CPAchecker general statistics
-----------------------------
Number of program locations:     5805
Number of CFA edges:             6836
Number of relevant variables:    928
Number of functions:             148
Number of loops:                 9
Size of reached set:             9242
  Number of reached locations:   1420 (24%)
    Avg states per location:     6
    Max states per location:     220 (at node N4961)
  Number of reached functions:   77 (52%)
  Number of partitions:          9242
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        89

Time for analysis setup:          5.066s
  Time for loading CPAs:          0.859s
  Time for loading parser:        0.500s
  Time for CFA construction:      3.593s
    Time for parsing file(s):     0.791s
    Time for AST to CFA:          1.225s
    Time for CFA sanity check:    0.315s
    Time for post-processing:     1.144s
      Time for var class.:        0.542s
Time for Analysis:               25.262s
CPU time for analysis:           25.260s
Total time for CPAchecker:       30.331s
Total CPU time for CPAchecker:   30.320s
Time for statistics:              0.206s

Time for Garbage Collector:       1.017s (in 64 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                123MB (   118 MiB) max;     69MB (    66 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8160MB (  7782 MiB) max;   8091MB (  7716 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
