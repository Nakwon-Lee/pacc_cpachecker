scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--w83781d.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_k_bdm7k8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7822: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2360: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_word_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2360: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_new_dummy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_chmod_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            143521 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            15103 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         128418 (89%)
  Times precision was empty:       7667 (5%)
  Times precision was {false}:     11908 (8%)
  Times result was cached:         121352 (85%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2594 (2%)
  Times result was 'false':        128651 (90%)
Number of strengthen sat checks:   0
Number of coverage checks:         1135820
  BDD entailment checks:           7224
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       857
Number of predicates discovered:          11
Number of abstraction locations:          10
Max number of predicates per location:    9
Avg number of predicates per location:    5
Total predicates per abstraction:         168984
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 11.65
Number of irrelevant predicates:          133084 (79%)
Number of preds handled by boolean abs:   10916 (6%)
  Total number of models for allsat:      2620
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.01

Time for post operator:                316.033s
  Time for path formula creation:      313.683s
Time for strengthen operator:            6.119s
Time for prec operator:                392.597s
  Time for abstraction:                388.346s (Max:     4.150s, Count: 143521)
    Boolean abstraction:               120.759s
    Solving time:                      152.741s (Max:     0.907s)
    Model enumeration time:             12.497s
    Time for BDD construction:           0.125s (Max:     0.012s)
Time for merge operator:                43.301s
Time for coverage check:                 0.115s
  Time for BDD entailment checks:        0.014s
Total time for SMT solver (w/o itp):   165.238s

Number of path formula cache hits:   5264040 (61%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   190.917s

Total number of created targets for pointer analysis: 1093828
   Number of created targets for uf: *unsigned_short_int is 302
   Number of created targets for uf: *unsigned_char is 3931
   Number of created targets for uf: *signed_long_int is 1009
   Number of created targets for uf: *unsigned_long_int is 480241


Number of BDD nodes:                               779
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5605 (count: 102226, min: 0, max: 75, avg: 0.05)
Time for BDD node cleanup:                             0.024s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.164s
  Time for transition matches:                         4.899s
  Time for transition assertions:                      0.021s
  Time for transition actions:                         0.086s
Automaton transfers with branching:                0
Automaton transfer successors:                      8250688 (count: 8250688, min: 1, max: 1, avg: 1.00) [1 x 8250688]

CPA algorithm statistics
------------------------
Number of iterations:            5855904
Max size of waitlist:            555
Average size of waitlist:        269
Number of computed successors:   6564348
Max successors for one state:    2
Number of times merged:          564298
Number of times stopped:         567012
Number of times breaked:         43

Total time for CPA algorithm:       869.709s (Max:   601.105s)
  Time for choose from waitlist:      2.211s
  Time for precision adjustment:    418.956s
  Time for transfer relation:       379.532s
  Time for merge operator:           47.990s
  Time for stop operator:             4.294s
  Time for adding to reached set:     7.365s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   43
Avg. length of target path (in blocks):                 406 (count: 43, min: 2, max: 14, avg: 9.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  20.995s
  Counterexample analysis:                            14.120s (Max:     0.600s, Calls: 43)
    Refinement sat check:                             12.571s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.016s
  Precision update:                                    0.025s
  ARG update:                                          6.383s

Length of refined path (in blocks):                     405 (count: 43, min: 2, max: 14, avg: 9.42)
Number of affected states:                              277 (count: 43, min: 1, max: 13, avg: 6.44)
Length (states) of path with itp 'true':                 85 (count: 43, min: 0, max: 10, avg: 1.98)
Length (states) of path with itp non-trivial itp:       277 (count: 43, min: 1, max: 13, avg: 6.44)
Length (states) of path with itp 'false':                 1 (count: 43, min: 0, max: 1, avg: 0.02)
Different non-trivial interpolants along paths:           5 (count: 43, min: 0, max: 2, avg: 0.12)
Equal non-trivial interpolants along paths:             229 (count: 43, min: 0, max: 12, avg: 5.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                43
Number of successful refinements:     43
Number of failed refinements:         0
Max. size of reached set before ref.: 161671
Max. size of reached set after ref.:  150051
Avg. size of reached set before ref.: 113909.88
Avg. size of reached set after ref.:  33122.70

Total time for CEGAR algorithm:     894.463s
Time for refinements:                23.759s
Average time for refinement:          0.552s
Max time for refinement:              1.126s

Code Coverage
-----------------------------
  Function coverage:      0.736
  Visited lines:          4127
  Total lines:            4373
  Line coverage:          0.944
  Visited conditions:     1386
  Total conditions:       1498
  Condition coverage:     0.925

CPAchecker general statistics
-----------------------------
Number of program locations:     5805
Number of CFA edges:             6836
Number of relevant variables:    928
Number of functions:             148
Number of loops:                 9
Size of reached set:             2394836
  Size of final wait list        47

Time for analysis setup:          5.825s
  Time for loading CPAs:          0.821s
  Time for loading parser:        0.614s
  Time for CFA construction:      4.261s
    Time for parsing file(s):     0.893s
    Time for AST to CFA:          1.128s
    Time for CFA sanity check:    0.398s
    Time for post-processing:     1.716s
      Time for var class.:        0.527s
Time for Analysis:              894.463s
CPU time for analysis:          894.340s
Total time for CPAchecker:      900.291s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              7.881s

Time for Garbage Collector:      76.459s (in 1160 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               3875MB (  3695 MiB) max;   1242MB (  1185 MiB) avg;   3966MB (  3782 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          4420MB (  4215 MiB) max;   1848MB (  1762 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8780MB (  8373 MiB) max;   8487MB (  8094 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
