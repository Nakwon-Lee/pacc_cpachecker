scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--media--i2c--cx25840--cx25840.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zizdafi1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3922: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3925: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3928: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10124: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10716: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11034: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11778: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13500: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 12633: Function pointer *(sd->v4l2_dev->notify) with type void (*)(struct v4l2_subdev *, unsigned int, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12524: Function pointer *(sd->v4l2_dev->notify) with type void (*)(struct v4l2_subdev *, unsigned int, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4030: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_device_unregister_subdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_handler_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4030: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function v4l2_i2c_subdev_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_handler_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_new_std to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_cluster to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_handler_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13338: Ignoring function call through function pointer *(sd->ops->ir->rx_s_parameters): (*(sd->ops->ir->rx_s_parameters))(sd, &default_params); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13357: Ignoring function call through function pointer *(sd->ops->ir->tx_s_parameters): (*(sd->ops->ir->tx_s_parameters))(sd, &default_params); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            89 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            5 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         84 (94%)
  Times precision was empty:       2 (2%)
  Times precision was {false}:     83 (93%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4 (4%)
  Times result was 'false':        80 (90%)
Number of strengthen sat checks:   0
Number of coverage checks:         1542
  BDD entailment checks:           0
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       843
Number of predicates discovered:          5
Number of abstraction locations:          2
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         93
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 1.07
Number of irrelevant predicates:          83 (89%)
Number of preds handled by boolean abs:   10 (11%)
  Total number of models for allsat:      4
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.470s
  Time for path formula creation:        1.436s
Time for strengthen operator:            0.035s
Time for prec operator:                  5.292s
  Time for abstraction:                  5.259s (Max:     0.791s, Count: 89)
    Boolean abstraction:                 0.039s
    Solving time:                        4.165s (Max:     0.723s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.017s (Max:     0.016s)
Time for merge operator:                 0.311s
Time for coverage check:                 0.001s
Total time for SMT solver (w/o itp):     4.165s

Number of path formula cache hits:   11776 (62%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.267s

Total number of created targets for pointer analysis: 2919
   Number of created targets for uf: *unsigned_short_int is 18
   Number of created targets for uf: *(struct_cx25840_ir_state)* is 2
   Number of created targets for uf: *enum_cx25840_video_input is 2
   Number of created targets for uf: *signed_int is 32
   Number of created targets for uf: *unsigned_char is 1466
   Number of created targets for uf: *_Bool is 31
   Number of created targets for uf: *(struct_i2c_client)* is 2
   Number of created targets for uf: *(struct_v4l2_ctrl)* is 3
   Number of created targets for uf: *enum_cx25840_audio_input is 2
   Number of created targets for uf: *unsigned_int is 37
   Number of created targets for uf: *enum_v4l2_subdev_ir_mode is 6


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          50 (count: 543, min: 0, max: 20, avg: 0.09)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.164s
Automaton transfers with branching:                0
Automaton transfer successors:                        18367 (count: 18367, min: 1, max: 1, avg: 1.00) [1 x 18367]

CPA algorithm statistics
------------------------
Number of iterations:            9379
Max size of waitlist:            44
Average size of waitlist:        35
Number of computed successors:   10371
Max successors for one state:    2
Number of times merged:          771
Number of times stopped:         771
Number of times breaked:         4

Total time for CPA algorithm:        23.548s (Max:     9.582s)
  Time for choose from waitlist:      0.013s
  Time for precision adjustment:      5.481s
  Time for transfer relation:        17.468s
  Time for merge operator:            0.374s
  Time for stop operator:             0.042s
  Time for adding to reached set:     0.058s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                   8 (count: 4, min: 2, max: 2, avg: 2.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.455s
  Counterexample analysis:                             0.395s (Max:     0.182s, Calls: 4)
    Refinement sat check:                              0.359s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.013s
  ARG update:                                          0.026s

Length of refined path (in blocks):                       8 (count: 4, min: 2, max: 2, avg: 2.00)
Number of affected states:                                4 (count: 4, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         4 (count: 4, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 0 (count: 4, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 4, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 3301
Max. size of reached set after ref.:  7
Avg. size of reached set before ref.: 1761.50
Avg. size of reached set after ref.:  7.00

Total time for CEGAR algorithm:      24.055s
Time for refinements:                 0.507s
Average time for refinement:          0.126s
Max time for refinement:              0.201s

Code Coverage
-----------------------------
  Function coverage:      0.325
  Visited lines:          1565
  Total lines:            8196
  Line coverage:          0.191
  Visited conditions:     262
  Total conditions:       1696
  Condition coverage:     0.154

CPAchecker general statistics
-----------------------------
Number of program locations:     10071
Number of CFA edges:             14220
Number of relevant variables:    916
Number of functions:             237
Number of loops:                 20
Size of reached set:             2502
  Number of reached locations:   887 (9%)
    Avg states per location:     2
    Max states per location:     55 (at node N142)
  Number of reached functions:   77 (32%)
  Number of partitions:          2502
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        40

Time for analysis setup:          6.303s
  Time for loading CPAs:          0.921s
  Time for loading parser:        0.551s
  Time for CFA construction:      4.713s
    Time for parsing file(s):     0.902s
    Time for AST to CFA:          1.529s
    Time for CFA sanity check:    0.884s
    Time for post-processing:     1.291s
      Time for var class.:        0.637s
Time for Analysis:               24.055s
CPU time for analysis:           24.050s
Total time for CPAchecker:       30.360s
Total CPU time for CPAchecker:   30.340s
Time for statistics:              0.167s

Time for Garbage Collector:       0.520s (in 33 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 81MB (    78 MiB) max;     56MB (    53 MiB) avg;     84MB (    80 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
