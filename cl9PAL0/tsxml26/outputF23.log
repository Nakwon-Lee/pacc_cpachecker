scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--regulator--isl6271a-regulator.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0tqf39uo/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 2656: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2240: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function regulator_list_voltage_linear to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rdev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_map_voltage_linear to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2240: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            920 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            450 (49%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         470 (51%)
  Times precision was empty:       22 (2%)
  Times precision was {false}:     178 (19%)
  Times result was cached:         570 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      150 (16%)
  Times result was 'false':        534 (58%)
Number of strengthen sat checks:   0
Number of coverage checks:         4332
  BDD entailment checks:           562
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       34
Number of predicates discovered:          13
Number of abstraction locations:          5
Max number of predicates per location:    10
Avg number of predicates per location:    5
Total predicates per abstraction:         3058
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 9.32
Number of irrelevant predicates:          1442 (47%)
Number of preds handled by boolean abs:   547 (18%)
  Total number of models for allsat:      217
  Max number of models for allsat:        18
  Avg number of models for allsat:        1.45

Time for post operator:                  0.914s
  Time for path formula creation:        0.883s
Time for strengthen operator:            0.074s
Time for prec operator:                  1.467s
  Time for abstraction:                  1.359s (Max:     0.030s, Count: 920)
    Boolean abstraction:                 0.350s
    Solving time:                        0.346s (Max:     0.017s)
    Model enumeration time:              0.039s
    Time for BDD construction:           0.037s (Max:     0.008s)
Time for merge operator:                 0.129s
Time for coverage check:                 0.010s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):     0.385s

Number of path formula cache hits:   23255 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.744s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               958
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         759 (count: 2806, min: 0, max: 194, avg: 0.27)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.257s
Automaton transfers with branching:                0
Automaton transfer successors:                        24721 (count: 24721, min: 1, max: 1, avg: 1.00) [1 x 24721]

CPA algorithm statistics
------------------------
Number of iterations:            17743
Max size of waitlist:            14
Average size of waitlist:        7
Number of computed successors:   20527
Max successors for one state:    2
Number of times merged:          1885
Number of times stopped:         2012
Number of times breaked:         30

Total time for CPA algorithm:         4.397s (Max:     0.374s)
  Time for choose from waitlist:      0.040s
  Time for precision adjustment:      1.779s
  Time for transfer relation:         1.961s
  Time for merge operator:            0.214s
  Time for stop operator:             0.087s
  Time for adding to reached set:     0.112s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   30
Avg. length of target path (in blocks):                 186 (count: 30, min: 2, max: 10, avg: 6.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.542s
  Counterexample analysis:                             0.387s (Max:     0.026s, Calls: 30)
    Refinement sat check:                              0.302s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.022s
  Precision update:                                    0.034s
  ARG update:                                          0.085s

Length of refined path (in blocks):                     171 (count: 30, min: 2, max: 10, avg: 5.70)
Number of affected states:                              109 (count: 30, min: 1, max: 9, avg: 3.63)
Length (states) of path with itp 'true':                 32 (count: 30, min: 0, max: 5, avg: 1.07)
Length (states) of path with itp non-trivial itp:       109 (count: 30, min: 1, max: 9, avg: 3.63)
Length (states) of path with itp 'false':                13 (count: 30, min: 0, max: 1, avg: 0.43)
Different non-trivial interpolants along paths:          18 (count: 30, min: 0, max: 2, avg: 0.60)
Equal non-trivial interpolants along paths:              61 (count: 30, min: 0, max: 8, avg: 2.03)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                30
Number of successful refinements:     30
Number of failed refinements:         0
Max. size of reached set before ref.: 1481
Max. size of reached set after ref.:  1285
Avg. size of reached set before ref.: 932.33
Avg. size of reached set after ref.:  375.60

Total time for CEGAR algorithm:       5.096s
Time for refinements:                 0.679s
Average time for refinement:          0.022s
Max time for refinement:              0.039s

Code Coverage
-----------------------------
  Function coverage:      0.404
  Visited lines:          705
  Total lines:            912
  Line coverage:          0.773
  Visited conditions:     90
  Total conditions:       182
  Condition coverage:     0.495

CPAchecker general statistics
-----------------------------
Number of program locations:     1212
Number of CFA edges:             1305
Number of relevant variables:    87
Number of functions:             57
Number of loops:                 4
Size of reached set:             1280
  Number of reached locations:   279 (23%)
    Avg states per location:     4
    Max states per location:     32 (at node N429)
  Number of reached functions:   23 (40%)
  Number of partitions:          1271
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N197 (before line 2467), Function main called from node N184, stack depth 1 [235a0c16], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.055s
  Time for loading CPAs:          0.647s
  Time for loading parser:        0.567s
  Time for CFA construction:      1.696s
    Time for parsing file(s):     0.601s
    Time for AST to CFA:          0.480s
    Time for CFA sanity check:    0.124s
    Time for post-processing:     0.354s
      Time for var class.:        0.116s
Time for Analysis:                5.096s
CPU time for analysis:            5.090s
Time for analyzing result:        0.001s
Total time for CPAchecker:        8.155s
Total CPU time for CPAchecker:    8.140s
Time for statistics:              0.067s

Time for Garbage Collector:       0.151s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    59 MiB) max;     37MB (    35 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     29MB (    28 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8052MB (  7679 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
