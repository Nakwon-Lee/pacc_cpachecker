scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--regulator--isl6271a-regulator.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ox_vt1gu/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 2656: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2240: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function regulator_list_voltage_linear to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rdev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_map_voltage_linear to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2240: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1014 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            498 (49%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         516 (51%)
  Times precision was empty:       15 (1%)
  Times precision was {false}:     189 (19%)
  Times result was cached:         620 (61%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      190 (19%)
  Times result was 'false':        583 (57%)
Number of strengthen sat checks:   0
Number of coverage checks:         4742
  BDD entailment checks:           598
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       34
Number of predicates discovered:          13
Number of abstraction locations:          5
Max number of predicates per location:    10
Avg number of predicates per location:    5
Total predicates per abstraction:         3421
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 9.03
Number of irrelevant predicates:          1522 (44%)
Number of preds handled by boolean abs:   753 (22%)
  Total number of models for allsat:      282
  Max number of models for allsat:        18
  Avg number of models for allsat:        1.48

Time for post operator:                  0.760s
  Time for path formula creation:        0.717s
Time for strengthen operator:            0.037s
Time for prec operator:                  1.752s
  Time for abstraction:                  1.638s (Max:     0.031s, Count: 1014)
    Boolean abstraction:                 0.516s
    Solving time:                        0.421s (Max:     0.016s)
    Model enumeration time:              0.052s
    Time for BDD construction:           0.087s (Max:     0.016s)
Time for merge operator:                 0.128s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):     0.473s

Number of path formula cache hits:   25380 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.634s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1008
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         843 (count: 3137, min: 0, max: 227, avg: 0.27)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.281s
Automaton transfers with branching:                0
Automaton transfer successors:                        27292 (count: 27292, min: 1, max: 1, avg: 1.00) [1 x 27292]

CPA algorithm statistics
------------------------
Number of iterations:            19600
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   22698
Max successors for one state:    2
Number of times merged:          2072
Number of times stopped:         2206
Number of times breaked:         36

Total time for CPA algorithm:         4.497s (Max:     0.523s)
  Time for choose from waitlist:      0.046s
  Time for precision adjustment:      2.060s
  Time for transfer relation:         1.775s
  Time for merge operator:            0.222s
  Time for stop operator:             0.085s
  Time for adding to reached set:     0.076s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                 217 (count: 36, min: 2, max: 10, avg: 6.03)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.730s
  Counterexample analysis:                             0.568s (Max:     0.032s, Calls: 36)
    Refinement sat check:                              0.391s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.025s
  Precision update:                                    0.030s
  ARG update:                                          0.075s

Length of refined path (in blocks):                     196 (count: 36, min: 2, max: 10, avg: 5.44)
Number of affected states:                              111 (count: 36, min: 1, max: 9, avg: 3.08)
Length (states) of path with itp 'true':                 49 (count: 36, min: 0, max: 5, avg: 1.36)
Length (states) of path with itp non-trivial itp:       111 (count: 36, min: 1, max: 9, avg: 3.08)
Length (states) of path with itp 'false':                19 (count: 36, min: 0, max: 1, avg: 0.53)
Different non-trivial interpolants along paths:          14 (count: 36, min: 0, max: 2, avg: 0.39)
Equal non-trivial interpolants along paths:              61 (count: 36, min: 0, max: 8, avg: 1.69)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     36
Number of failed refinements:         0
Max. size of reached set before ref.: 1835
Max. size of reached set after ref.:  1270
Avg. size of reached set before ref.: 907.25
Avg. size of reached set after ref.:  400.42

Total time for CEGAR algorithm:       5.341s
Time for refinements:                 0.829s
Average time for refinement:          0.023s
Max time for refinement:              0.043s

Code Coverage
-----------------------------
  Function coverage:      0.404
  Visited lines:          705
  Total lines:            912
  Line coverage:          0.773
  Visited conditions:     90
  Total conditions:       182
  Condition coverage:     0.495

CPAchecker general statistics
-----------------------------
Number of program locations:     1212
Number of CFA edges:             1305
Number of relevant variables:    87
Number of functions:             57
Number of loops:                 4
Size of reached set:             1664
  Number of reached locations:   279 (23%)
    Avg states per location:     5
    Max states per location:     40 (at node N429)
  Number of reached functions:   23 (40%)
  Number of partitions:          1651
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N197 (before line 2467), Function main called from node N184, stack depth 1 [235a0c16], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.105s
  Time for loading CPAs:          0.748s
  Time for loading parser:        0.510s
  Time for CFA construction:      1.712s
    Time for parsing file(s):     0.571s
    Time for AST to CFA:          0.463s
    Time for CFA sanity check:    0.111s
    Time for post-processing:     0.446s
      Time for var class.:        0.192s
Time for Analysis:                5.342s
CPU time for analysis:            5.340s
Time for analyzing result:        0.002s
Total time for CPAchecker:        8.449s
Total CPU time for CPAchecker:    8.450s
Time for statistics:              0.075s

Time for Garbage Collector:       0.174s (in 14 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     38MB (    36 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     30MB (    29 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8054MB (  7681 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
