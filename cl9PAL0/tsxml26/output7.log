scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--regulator--isl6271a-regulator.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uk3q07u5/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 2656: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2240: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function regulator_list_voltage_linear to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rdev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_map_voltage_linear to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2240: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            738 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            326 (44%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         412 (56%)
  Times precision was empty:       38 (5%)
  Times precision was {false}:     140 (19%)
  Times result was cached:         430 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      130 (18%)
  Times result was 'false':        433 (59%)
Number of strengthen sat checks:   0
Number of coverage checks:         3691
  BDD entailment checks:           367
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       34
Number of predicates discovered:          10
Number of abstraction locations:          5
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         1958
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 7.25
Number of irrelevant predicates:          715 (37%)
Number of preds handled by boolean abs:   478 (24%)
  Total number of models for allsat:      171
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.32

Time for post operator:                  0.801s
  Time for path formula creation:        0.761s
Time for strengthen operator:            0.055s
Time for prec operator:                  1.679s
  Time for abstraction:                  1.586s (Max:     0.028s, Count: 738)
    Boolean abstraction:                 0.324s
    Solving time:                        0.403s (Max:     0.016s)
    Model enumeration time:              0.012s
    Time for BDD construction:           0.064s (Max:     0.013s)
Time for merge operator:                 0.135s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     0.415s

Number of path formula cache hits:   19827 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.704s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               499
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         501 (count: 2173, min: 0, max: 118, avg: 0.23)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.246s
Automaton transfers with branching:                0
Automaton transfer successors:                        21118 (count: 21118, min: 1, max: 1, avg: 1.00) [1 x 21118]

CPA algorithm statistics
------------------------
Number of iterations:            15136
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   17493
Max successors for one state:    2
Number of times merged:          1662
Number of times stopped:         1766
Number of times breaked:         20

Total time for CPA algorithm:         4.259s (Max:     0.389s)
  Time for choose from waitlist:      0.085s
  Time for precision adjustment:      1.930s
  Time for transfer relation:         1.680s
  Time for merge operator:            0.255s
  Time for stop operator:             0.085s
  Time for adding to reached set:     0.061s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   20
Avg. length of target path (in blocks):                 149 (count: 20, min: 2, max: 13, avg: 7.45)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.470s
  Counterexample analysis:                             0.326s (Max:     0.030s, Calls: 20)
    Refinement sat check:                              0.206s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.010s
  Precision update:                                    0.024s
  ARG update:                                          0.082s

Length of refined path (in blocks):                     144 (count: 20, min: 2, max: 13, avg: 7.20)
Number of affected states:                              103 (count: 20, min: 1, max: 12, avg: 5.15)
Length (states) of path with itp 'true':                 21 (count: 20, min: 0, max: 7, avg: 1.05)
Length (states) of path with itp non-trivial itp:       103 (count: 20, min: 1, max: 12, avg: 5.15)
Length (states) of path with itp 'false':                 4 (count: 20, min: 0, max: 1, avg: 0.20)
Different non-trivial interpolants along paths:           6 (count: 20, min: 0, max: 2, avg: 0.30)
Equal non-trivial interpolants along paths:              77 (count: 20, min: 0, max: 11, avg: 3.85)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                20
Number of successful refinements:     20
Number of failed refinements:         0
Max. size of reached set before ref.: 1468
Max. size of reached set after ref.:  1204
Avg. size of reached set before ref.: 881.55
Avg. size of reached set after ref.:  187.40

Total time for CEGAR algorithm:       4.827s
Time for refinements:                 0.565s
Average time for refinement:          0.028s
Max time for refinement:              0.051s

Code Coverage
-----------------------------
  Function coverage:      0.404
  Visited lines:          705
  Total lines:            912
  Line coverage:          0.773
  Visited conditions:     90
  Total conditions:       182
  Condition coverage:     0.495

CPAchecker general statistics
-----------------------------
Number of program locations:     1212
Number of CFA edges:             1305
Number of relevant variables:    87
Number of functions:             57
Number of loops:                 4
Size of reached set:             1412
  Number of reached locations:   279 (23%)
    Avg states per location:     5
    Max states per location:     32 (at node N429)
  Number of reached functions:   23 (40%)
  Number of partitions:          1400
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N197 (before line 2467), Function main called from node N184, stack depth 1 [aafcffa], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.254s
  Time for loading CPAs:          0.694s
  Time for loading parser:        0.613s
  Time for CFA construction:      1.833s
    Time for parsing file(s):     0.611s
    Time for AST to CFA:          0.523s
    Time for CFA sanity check:    0.130s
    Time for post-processing:     0.426s
      Time for var class.:        0.180s
Time for Analysis:                4.827s
CPU time for analysis:            4.830s
Time for analyzing result:        0.001s
Total time for CPAchecker:        8.083s
Total CPU time for CPAchecker:    8.070s
Time for statistics:              0.076s

Time for Garbage Collector:       0.124s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     36MB (    34 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     29MB (    27 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   7990MB (  7619 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
