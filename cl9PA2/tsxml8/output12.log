scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ddv-machzwd/ddv_machzwd_inb_true-unreach-call_false-valid-memtrack.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8yjc49h_/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

none: Dead code detected: switch ((64 / 32)) {
 default:
  memset(set, -1, sizeof(sigset_t));
  break;
 case 2: set->sig[1] = -1;
 case 1: set->sig[0] = -1;
  break;
 } (CFACreationUtils.addEdgeToCFA, INFO)

line 3079: Dereferencing of non-pointer type irq_handler_t  in expression * registered_irq[i].handler (ASTConverter.convert, WARNING)

line 4138: Dead code detected: __VERIFIER_atomic_end(); (CFACreationUtils.addEdgeToCFA, INFO)

line 3062: Function pointer *((genhd_registered[genhd_no]).gd->fops->getgeo) with type int (*)(struct block_device *, struct hd_geometry *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3051: Function pointer *((genhd_registered[genhd_no]).gd->fops->revalidate_disk) with type int (*)(struct gendisk *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3045: Function pointer *((genhd_registered[genhd_no]).gd->fops->media_changed) with type int (*)(struct gendisk *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 3079-3080: Function pointer *((registered_irq[i]).handler) with type irqreturn_t (*)(int, void *, struct pt_regs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 2980: Function pointer *((genhd_registered[genhd_no]).gd->queue->request_fn) with type request_fn_proc * is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 3097-3098: Function pointer *(registered_pci_driver.pci_driver->probe) with type int (*)(struct pci_dev *dev, const struct pci_device_id *id) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3109: Function pointer *(registered_pci_driver.pci_driver->remove) with type void (*)(struct pci_dev *dev) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

lines 2890-2891: Ignoring function call through function pointer *((cdev_registered[cdev_no]).cdevp->ops->release): result = (*((cdev_registered[cdev_no]).cdevp->ops->release))(&((cdev_registered[cdev_no]).inode), &((cdev_registered[cdev_no]).filp)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 2876-2877: Ignoring function call through function pointer *((cdev_registered[cdev_no]).cdevp->ops->open): result = (*((cdev_registered[cdev_no]).cdevp->ops->open))(&((cdev_registered[cdev_no]).inode), &((cdev_registered[cdev_no]).filp)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 2857-2860: Ignoring function call through function pointer *((cdev_registered[cdev_no]).cdevp->ops->ioctl): (*((cdev_registered[cdev_no]).cdevp->ops->ioctl))(&((cdev_registered[cdev_no]).inode), &((cdev_registered[cdev_no]).filp), uint_value, ulong_value); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 2837-2840: Ignoring function call through function pointer *((cdev_registered[cdev_no]).cdevp->ops->write): (*((cdev_registered[cdev_no]).cdevp->ops->write))(&((cdev_registered[cdev_no]).filp), &char_value, size_t_value, &loff_t_value); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 2823-2826: Ignoring function call through function pointer *((cdev_registered[cdev_no]).cdevp->ops->read): (*((cdev_registered[cdev_no]).cdevp->ops->read))(&((cdev_registered[cdev_no]).filp), &char_value, size_t_value, &loff_t_value); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 2813-2815: Ignoring function call through function pointer *((cdev_registered[cdev_no]).cdevp->ops->llseek): (*((cdev_registered[cdev_no]).cdevp->ops->llseek))(&((cdev_registered[cdev_no]).filp), loff_t_value, int_value); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3158: Ignoring function call through function pointer *((timer_registered[i]).timer->function): (*((timer_registered[i]).timer->function))((timer_registered[i]).timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 3079-3080: Ignoring function call through function pointer *((registered_irq[i]).handler): (*((registered_irq[i]).handler))((int)i, (registered_irq[i]).dev_id, &regs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4407: Ignoring function call through function pointer *((shared_workqueue[i])->func): (*((shared_workqueue[i])->func))((shared_workqueue[i])->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3143: Ignoring function call through function pointer *((tasklet_registered[i]).tasklet->func): (*((tasklet_registered[i]).tasklet->func))((tasklet_registered[i]).tasklet->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            563 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  548 (97%)
  Because of loop head:            15 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         0 (0%)
  Times precision was empty:       563 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         155
  BDD entailment checks:           53
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       37
Number of predicates discovered:          0

Time for post operator:                  0.668s
  Time for path formula creation:        0.653s
Time for strengthen operator:            0.033s
Time for prec operator:                  0.077s
  Time for abstraction:                  0.022s (Max:     0.012s, Count: 563)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.077s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.012s
Total time for SMT solver (w/o itp):     0.000s

Number of path formula cache hits:   383 (13%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.637s

Total number of created targets for pointer analysis: 143
   Number of created targets for uf: *unsigned_short_int is 5
   Number of created targets for uf: *(struct_work_struct)* is 11
   Number of created targets for uf: *signed_int is 13
   Number of created targets for uf: *(struct_cdev)* is 2
   Number of created targets for uf: *(struct_tasklet_struct)* is 2
   Number of created targets for uf: *(struct_file_operations)* is 3
   Number of created targets for uf: *(struct_timer_list)* is 2
   Number of created targets for uf: *signed_short_int is 4
   Number of created targets for uf: *unsigned_long_int is 3


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 617, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.029s
Automaton transfers with branching:                0
Automaton transfer successors:                         2605 (count: 2605, min: 1, max: 1, avg: 1.00) [1 x 2605]

CPA algorithm statistics
------------------------
Number of iterations:            1524
Max size of waitlist:            27
Average size of waitlist:        8
Number of computed successors:   1627
Max successors for one state:    2
Number of times merged:          51
Number of times stopped:         104
Number of times breaked:         0

Total time for CPA algorithm:         1.285s (Max:     1.285s)
  Time for choose from waitlist:      0.010s
  Time for precision adjustment:      0.157s
  Time for transfer relation:         0.926s
  Time for merge operator:            0.094s
  Time for stop operator:             0.050s
  Time for adding to reached set:     0.014s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   0

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.284
  Visited lines:          622
  Total lines:            1080
  Line coverage:          0.576
  Visited conditions:     176
  Total conditions:       392
  Condition coverage:     0.449

CPAchecker general statistics
-----------------------------
Number of program locations:     2473
Number of CFA edges:             2643
Number of relevant variables:    228
Number of functions:             190
Number of loops:                 12
Size of reached set:             1524
  Number of reached locations:   530 (21%)
    Avg states per location:     2
    Max states per location:     46 (at node N1418)
  Number of reached functions:   54 (28%)
  Number of partitions:          1524
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.163s
  Time for loading CPAs:          0.575s
  Time for loading parser:        0.479s
  Time for CFA construction:      2.004s
    Time for parsing file(s):     0.549s
    Time for AST to CFA:          0.759s
    Time for CFA sanity check:    0.095s
    Time for post-processing:     0.432s
      Time for var class.:        0.231s
Time for Analysis:                1.285s
CPU time for analysis:            1.290s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.451s
Total CPU time for CPAchecker:    4.440s
Time for statistics:              0.085s

Time for Garbage Collector:       0.120s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     32MB (    31 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     25MB (    24 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8032MB (  7659 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
