scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pg.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_12wfm1s7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4031: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2937: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            321293 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  260050 (81%)
  Because of loop head:            61051 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         192 (0%)
  Times precision was empty:       11943 (4%)
  Times precision was {false}:     1833 (1%)
  Times result was cached:         298040 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9477 (3%)
  Times result was 'false':        4686 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         285409
  BDD entailment checks:           75227
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          9
Number of abstraction locations:          127
Max number of predicates per location:    6
Avg number of predicates per location:    5
Total predicates per abstraction:         1276114
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 112.83
Number of irrelevant predicates:          448831 (35%)
Number of preds handled by boolean abs:   26733 (2%)
  Total number of models for allsat:      10318
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.09

Time for post operator:                 20.247s
  Time for path formula creation:       19.710s
Time for strengthen operator:            1.132s
Time for prec operator:                118.602s
  Time for abstraction:                115.423s (Max:     0.319s, Count: 321293)
    Boolean abstraction:                46.736s
    Solving time:                       50.287s (Max:     0.093s)
    Model enumeration time:              4.707s
    Time for BDD construction:           0.205s (Max:     0.008s)
Time for merge operator:                 1.882s
Time for coverage check:                 0.123s
  Time for BDD entailment checks:        0.095s
Total time for SMT solver (w/o itp):    54.994s

Number of path formula cache hits:   1967470 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    14.341s

Total number of created targets for pointer analysis: 456799
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *signed_int is 2619
   Number of created targets for uf: *(char)* is 169
   Number of created targets for uf: *char is 3845
   Number of created targets for uf: *unsigned_long_int is 169


Number of BDD nodes:                               330
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       19133 (count: 153364, min: 0, max: 580, avg: 0.12)
Time for BDD node cleanup:                             0.024s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.797s
  Time for transition matches:                         1.128s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      1798226 (count: 1798226, min: 1, max: 1, avg: 1.00) [1 x 1798226]

CPA algorithm statistics
------------------------
Number of iterations:            1152574
Max size of waitlist:            44
Average size of waitlist:        18
Number of computed successors:   1326061
Max successors for one state:    2
Number of times merged:          105091
Number of times stopped:         167259
Number of times breaked:         192

Total time for CPA algorithm:       165.920s (Max:     5.935s)
  Time for choose from waitlist:      0.351s
  Time for precision adjustment:    125.145s
  Time for transfer relation:        32.453s
  Time for merge operator:            2.977s
  Time for stop operator:             1.170s
  Time for adding to reached set:     1.327s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   192
Avg. length of target path (in blocks):               15095 (count: 192, min: 12, max: 161, avg: 78.62)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  12.679s
  Counterexample analysis:                            10.435s (Max:     0.261s, Calls: 192)
    Refinement sat check:                              8.093s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.071s
  Precision update:                                    0.096s
  ARG update:                                          1.924s

Length of refined path (in blocks):                   13741 (count: 192, min: 4, max: 111, avg: 71.57)
Number of affected states:                            11484 (count: 192, min: 3, max: 110, avg: 59.81)
Length (states) of path with itp 'true':               2065 (count: 192, min: 0, max: 75, avg: 10.76)
Length (states) of path with itp non-trivial itp:     11484 (count: 192, min: 3, max: 110, avg: 59.81)
Length (states) of path with itp 'false':               192 (count: 192, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 192, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           11292 (count: 192, min: 2, max: 109, avg: 58.81)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                192
Number of successful refinements:     192
Number of failed refinements:         0
Max. size of reached set before ref.: 21150
Max. size of reached set after ref.:  17698
Avg. size of reached set before ref.: 9334.96
Avg. size of reached set after ref.:  3352.83

Total time for CEGAR algorithm:     180.441s
Time for refinements:                14.126s
Average time for refinement:          0.073s
Max time for refinement:              0.348s

Code Coverage
-----------------------------
  Function coverage:      0.528
  Visited lines:          1165
  Total lines:            1395
  Line coverage:          0.835
  Visited conditions:     214
  Total conditions:       312
  Condition coverage:     0.686

CPAchecker general statistics
-----------------------------
Number of program locations:     1858
Number of CFA edges:             2052
Number of relevant variables:    230
Number of functions:             72
Number of loops:                 15
Size of reached set:             5547
  Number of reached locations:   624 (34%)
    Avg states per location:     8
    Max states per location:     197 (at node N117)
  Number of reached functions:   38 (53%)
  Number of partitions:          5545
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N105 (before line 3024), Function pg_init_units called from node N749, stack depth 3 [3252ad3d], stack [main, pg_init, pg_init_units]])
  Number of target states:       0

Time for analysis setup:          3.283s
  Time for loading CPAs:          0.669s
  Time for loading parser:        0.444s
  Time for CFA construction:      2.048s
    Time for parsing file(s):     0.598s
    Time for AST to CFA:          0.730s
    Time for CFA sanity check:    0.121s
    Time for post-processing:     0.442s
      Time for var class.:        0.178s
Time for Analysis:              180.441s
CPU time for analysis:          180.440s
Time for analyzing result:        0.005s
Total time for CPAchecker:      183.728s
Total CPU time for CPAchecker:  183.720s
Time for statistics:              0.127s

Time for Garbage Collector:      10.036s (in 800 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                209MB (   199 MiB) max;    115MB (   110 MiB) avg;    220MB (   210 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           236MB (   225 MiB) max;    171MB (   163 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8407MB (  8018 MiB) max;   8166MB (  7788 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
