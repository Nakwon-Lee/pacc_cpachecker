scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--udlfb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_63kwlkib/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6772: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4624: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_prefetch, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4625: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4139: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            719183 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  593781 (83%)
  Because of loop head:            121704 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3698 (1%)
  Times precision was empty:       133801 (19%)
  Times precision was {false}:     1642 (0%)
  Times result was cached:         576723 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7017 (1%)
  Times result was 'false':        34897 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         722888
  BDD entailment checks:           210704
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       45
Number of predicates discovered:          10
Number of abstraction locations:          279
Max number of predicates per location:    9
Avg number of predicates per location:    4
Total predicates per abstraction:         2074982
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 239.63
Number of irrelevant predicates:          1158328 (56%)
Number of preds handled by boolean abs:   17198 (1%)
  Total number of models for allsat:      7015
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.00

Time for post operator:                 16.577s
  Time for path formula creation:       15.139s
Time for strengthen operator:            3.203s
Time for prec operator:                 79.971s
  Time for abstraction:                 74.146s (Max:     0.248s, Count: 719183)
    Boolean abstraction:                 6.964s
    Solving time:                        7.279s (Max:     0.198s)
    Model enumeration time:              0.527s
    Time for BDD construction:           0.185s (Max:     0.010s)
Time for merge operator:                 0.809s
Time for coverage check:                 0.250s
  Time for BDD entailment checks:        0.188s
Total time for SMT solver (w/o itp):     7.806s

Number of path formula cache hits:   6182056 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.552s

Total number of created targets for pointer analysis: 14284
   Number of created targets for uf: *signed_int is 158
   Number of created targets for uf: *(struct_usb_device)* is 49
   Number of created targets for uf: *(char)* is 9
   Number of created targets for uf: *(struct_urb)* is 31
   Number of created targets for uf: *(struct_list_head)* is 342
   Number of created targets for uf: *(unsigned_char)* is 7
   Number of created targets for uf: *unsigned_int is 2589
   Number of created targets for uf: *(struct_device)* is 49
   Number of created targets for uf: *char is 1045
   Number of created targets for uf: *(struct_dlfb_data)* is 49
   Number of created targets for uf: *unsigned_long_int is 6


Number of BDD nodes:                               758
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       14521 (count: 402448, min: 0, max: 750, avg: 0.04)
Time for BDD node cleanup:                             0.077s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.972s
  Time for transition matches:                         2.507s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.010s
Automaton transfers with branching:                0
Automaton transfer successors:                      5364229 (count: 5364389, min: 0, max: 1, avg: 1.00) [0 x 160, 1 x 5364229]

CPA algorithm statistics
------------------------
Number of iterations:            3078391
Max size of waitlist:            73
Average size of waitlist:        30
Number of computed successors:   3541962
Max successors for one state:    2
Number of times merged:          256092
Number of times stopped:         391755
Number of times breaked:         3698

Total time for CPA algorithm:       157.472s (Max:     2.412s)
  Time for choose from waitlist:      0.834s
  Time for precision adjustment:     94.717s
  Time for transfer relation:        48.199s
  Time for merge operator:            2.721s
  Time for stop operator:             2.639s
  Time for adding to reached set:     2.763s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3698
Avg. length of target path (in blocks):              113737 (count: 3698, min: 6, max: 267, avg: 30.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  46.640s
  Counterexample analysis:                            39.675s (Max:     0.206s, Calls: 3698)
    Refinement sat check:                             23.075s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.060s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.302s
  Precision update:                                    2.027s
  ARG update:                                          3.808s

Length of refined path (in blocks):                   81582 (count: 3698, min: 5, max: 266, avg: 22.06)
Number of affected states:                            53334 (count: 3698, min: 1, max: 264, avg: 14.42)
Length (states) of path with itp 'true':              24550 (count: 3698, min: 1, max: 24, avg: 6.64)
Length (states) of path with itp non-trivial itp:     53334 (count: 3698, min: 1, max: 264, avg: 14.42)
Length (states) of path with itp 'false':              3698 (count: 3698, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 3698, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           49636 (count: 3698, min: 0, max: 263, avg: 13.42)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3698
Number of successful refinements:     3698
Number of failed refinements:         0
Max. size of reached set before ref.: 11412
Max. size of reached set after ref.:  7351
Avg. size of reached set before ref.: 1814.34
Avg. size of reached set after ref.:  973.87

Total time for CEGAR algorithm:     209.831s
Time for refinements:                50.377s
Average time for refinement:          0.013s
Max time for refinement:              0.245s

Code Coverage
-----------------------------
  Function coverage:      0.644
  Visited lines:          2104
  Total lines:            2552
  Line coverage:          0.824
  Visited conditions:     375
  Total conditions:       504
  Condition coverage:     0.744

CPAchecker general statistics
-----------------------------
Number of program locations:     3468
Number of CFA edges:             3828
Number of relevant variables:    649
Number of functions:             135
Number of loops:                 24
Size of reached set:             7257
  Number of reached locations:   1213 (35%)
    Avg states per location:     5
    Max states per location:     111 (at node N267)
  Number of reached functions:   87 (64%)
  Number of partitions:          7246
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1501 (before line 5679), Function dlfb_setup_modes called from node N1739, stack depth 3 [7cd8bf55], stack [main, edid_store, dlfb_setup_modes]])
  Number of target states:       0

Time for analysis setup:          4.361s
  Time for loading CPAs:          0.844s
  Time for loading parser:        0.593s
  Time for CFA construction:      2.805s
    Time for parsing file(s):     0.720s
    Time for AST to CFA:          0.952s
    Time for CFA sanity check:    0.244s
    Time for post-processing:     0.724s
      Time for var class.:        0.330s
Time for Analysis:              209.831s
CPU time for analysis:          209.830s
Time for analyzing result:        0.005s
Total time for CPAchecker:      214.198s
Total CPU time for CPAchecker:  214.190s
Time for statistics:              0.180s

Time for Garbage Collector:      14.114s (in 1593 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                150MB (   143 MiB) max;     85MB (    81 MiB) avg;    163MB (   155 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           182MB (   174 MiB) max;    131MB (   125 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8200MB (  7820 MiB) max;   8153MB (  7775 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
