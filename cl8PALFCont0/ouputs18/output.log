scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3x9nr9g0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 127: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 159: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 173: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 275: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 408: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 417: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 472: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 549: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            13174 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12943 (98%)
  Because of loop head:            166 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         65 (0%)
  Times precision was empty:       494 (4%)
  Times precision was {false}:     132 (1%)
  Times result was cached:         9909 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2639 (20%)
  Times result was 'false':        2086 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         5536
  BDD entailment checks:           3424
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          16
Number of abstraction locations:          54
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         59184
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 21.36
Number of irrelevant predicates:          21259 (36%)
Number of preds handled by boolean abs:   8953 (15%)
  Total number of models for allsat:      2765
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.05

Time for post operator:                  1.727s
  Time for path formula creation:        1.611s
Time for strengthen operator:            0.123s
Time for prec operator:                 10.990s
  Time for abstraction:                 10.589s (Max:     0.033s, Count: 13174)
    Boolean abstraction:                 2.819s
    Solving time:                        1.918s (Max:     0.014s)
    Model enumeration time:              0.274s
    Time for BDD construction:           0.266s (Max:     0.013s)
Time for merge operator:                 0.067s
Time for coverage check:                 0.027s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     2.192s

Number of path formula cache hits:   37079 (64%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.446s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1130
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6618 (count: 21466, min: 0, max: 624, avg: 0.31)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.271s
Automaton transfers with branching:                0
Automaton transfer successors:                        49853 (count: 49853, min: 1, max: 1, avg: 1.00) [1 x 49853]

CPA algorithm statistics
------------------------
Number of iterations:            38134
Max size of waitlist:            18
Average size of waitlist:        8
Number of computed successors:   42532
Max successors for one state:    2
Number of times merged:          1056
Number of times stopped:         1947
Number of times breaked:         65

Total time for CPA algorithm:        16.756s (Max:     0.811s)
  Time for choose from waitlist:      0.120s
  Time for precision adjustment:     11.745s
  Time for transfer relation:         3.519s
  Time for merge operator:            0.171s
  Time for stop operator:             0.246s
  Time for adding to reached set:     0.268s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   65
Avg. length of target path (in blocks):                3577 (count: 65, min: 23, max: 97, avg: 55.03)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.521s
  Counterexample analysis:                             1.047s (Max:     0.035s, Calls: 65)
    Refinement sat check:                              0.436s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.097s
  Precision update:                                    0.079s
  ARG update:                                          0.181s

Length of refined path (in blocks):                    2859 (count: 65, min: 14, max: 69, avg: 43.98)
Number of affected states:                             1738 (count: 65, min: 9, max: 68, avg: 26.74)
Length (states) of path with itp 'true':               1056 (count: 65, min: 0, max: 49, avg: 16.25)
Length (states) of path with itp non-trivial itp:      1738 (count: 65, min: 9, max: 68, avg: 26.74)
Length (states) of path with itp 'false':                65 (count: 65, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          58 (count: 65, min: 0, max: 3, avg: 0.89)
Equal non-trivial interpolants along paths:            1615 (count: 65, min: 7, max: 65, avg: 24.85)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                65
Number of successful refinements:     65
Number of failed refinements:         0
Max. size of reached set before ref.: 3510
Max. size of reached set after ref.:  2627
Avg. size of reached set before ref.: 1049.86
Avg. size of reached set after ref.:  508.02

Total time for CEGAR algorithm:      18.554s
Time for refinements:                 1.749s
Average time for refinement:          0.026s
Max time for refinement:              0.074s

Code Coverage
-----------------------------
  Function coverage:      0.694
  Visited lines:          145
  Total lines:            434
  Line coverage:          0.334
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     620
Number of CFA edges:             671
Number of relevant variables:    116
Number of functions:             36
Number of loops:                 5
Size of reached set:             3280
  Number of reached locations:   195 (31%)
    Avg states per location:     16
    Max states per location:     82 (at node N0)
  Number of reached functions:   25 (69%)
  Number of partitions:          3208
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N272 (before lines 486-531), Function test called from node N129, stack depth 3 [7405e77f], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.245s
  Time for loading CPAs:          0.821s
  Time for loading parser:        0.767s
  Time for CFA construction:      1.430s
    Time for parsing file(s):     0.530s
    Time for AST to CFA:          0.348s
    Time for CFA sanity check:    0.109s
    Time for post-processing:     0.294s
      Time for var class.:        0.113s
Time for Analysis:               18.555s
CPU time for analysis:           18.560s
Time for analyzing result:        0.009s
Total time for CPAchecker:       21.804s
Total CPU time for CPAchecker:   21.800s
Time for statistics:              0.191s

Time for Garbage Collector:       0.378s (in 29 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     41MB (    39 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8067MB (  7693 MiB) max;   8053MB (  7680 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
