scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product32_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1fx8fnoe/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 260: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 324: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 483: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 532: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 564: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 573: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 932: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 978: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 769: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2629 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2557 (97%)
  Because of loop head:            48 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24 (1%)
  Times precision was empty:       442 (17%)
  Times precision was {false}:     60 (2%)
  Times result was cached:         1857 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      270 (10%)
  Times result was 'false':        346 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         594
  BDD entailment checks:           348
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          8
Number of abstraction locations:          44
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         5986
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 18.14
Number of irrelevant predicates:          2017 (34%)
Number of preds handled by boolean abs:   596 (10%)
  Total number of models for allsat:      286
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.06

Time for post operator:                  0.758s
  Time for path formula creation:        0.715s
Time for strengthen operator:            0.081s
Time for prec operator:                  1.932s
  Time for abstraction:                  1.743s (Max:     0.023s, Count: 2629)
    Boolean abstraction:                 0.366s
    Solving time:                        0.226s (Max:     0.013s)
    Model enumeration time:              0.027s
    Time for BDD construction:           0.076s (Max:     0.012s)
Time for merge operator:                 0.022s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     0.253s

Number of path formula cache hits:   6933 (61%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.673s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               275
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         699 (count: 2811, min: 0, max: 208, avg: 0.25)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.182s
Automaton transfers with branching:                0
Automaton transfer successors:                         9870 (count: 9870, min: 1, max: 1, avg: 1.00) [1 x 9870]

CPA algorithm statistics
------------------------
Number of iterations:            7647
Max size of waitlist:            15
Average size of waitlist:        6
Number of computed successors:   8567
Max successors for one state:    2
Number of times merged:          123
Number of times stopped:         434
Number of times breaked:         24

Total time for CPA algorithm:         4.457s (Max:     0.409s)
  Time for choose from waitlist:      0.043s
  Time for precision adjustment:      2.238s
  Time for transfer relation:         1.596s
  Time for merge operator:            0.055s
  Time for stop operator:             0.120s
  Time for adding to reached set:     0.111s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                1045 (count: 24, min: 27, max: 69, avg: 43.54)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.495s
  Counterexample analysis:                             0.307s (Max:     0.030s, Calls: 24)
    Refinement sat check:                              0.145s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.048s
  Precision update:                                    0.027s
  ARG update:                                          0.070s

Length of refined path (in blocks):                     740 (count: 24, min: 16, max: 53, avg: 30.83)
Number of affected states:                              542 (count: 24, min: 2, max: 52, avg: 22.58)
Length (states) of path with itp 'true':                174 (count: 24, min: 0, max: 37, avg: 7.25)
Length (states) of path with itp non-trivial itp:       542 (count: 24, min: 2, max: 52, avg: 22.58)
Length (states) of path with itp 'false':                24 (count: 24, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 24, min: 0, max: 2, avg: 0.21)
Equal non-trivial interpolants along paths:             513 (count: 24, min: 1, max: 49, avg: 21.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 835
Max. size of reached set after ref.:  530
Avg. size of reached set before ref.: 417.63
Avg. size of reached set after ref.:  117.42

Total time for CEGAR algorithm:       5.042s
Time for refinements:                 0.581s
Average time for refinement:          0.024s
Max time for refinement:              0.087s

Code Coverage
-----------------------------
  Function coverage:      0.487
  Visited lines:          99
  Total lines:            444
  Line coverage:          0.223
  Visited conditions:     32
  Total conditions:       74
  Condition coverage:     0.432

CPAchecker general statistics
-----------------------------
Number of program locations:     642
Number of CFA edges:             693
Number of relevant variables:    114
Number of functions:             39
Number of loops:                 5
Size of reached set:             583
  Number of reached locations:   135 (21%)
    Avg states per location:     4
    Max states per location:     20 (at node N330)
  Number of reached functions:   19 (49%)
  Number of partitions:          582
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N15 (before lines 65-114), Function test called from node N224, stack depth 3 [3e856100], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.403s
  Time for loading CPAs:          0.758s
  Time for loading parser:        0.838s
  Time for CFA construction:      1.605s
    Time for parsing file(s):     0.539s
    Time for AST to CFA:          0.385s
    Time for CFA sanity check:    0.118s
    Time for post-processing:     0.379s
      Time for var class.:        0.186s
Time for Analysis:                5.042s
CPU time for analysis:            5.030s
Time for analyzing result:        0.001s
Total time for CPAchecker:        8.450s
Total CPU time for CPAchecker:    8.430s
Time for statistics:              0.148s

Time for Garbage Collector:       0.152s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     35MB (    33 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     28MB (    27 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8091MB (  7716 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
