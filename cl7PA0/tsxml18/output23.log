scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/loops/invert_string_true-unreach-call_true-termination.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vzlvffvs/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            415 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  50 (12%)
  Because of loop head:            333 (80%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         32 (8%)
  Times precision was empty:       29 (7%)
  Times precision was {false}:     56 (13%)
  Times result was cached:         121 (29%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      209 (50%)
  Times result was 'false':        145 (35%)
Number of strengthen sat checks:   0
Number of coverage checks:         441
  BDD entailment checks:           441
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       6
Number of predicates discovered:          34
Number of abstraction locations:          6
Max number of predicates per location:    30
Avg number of predicates per location:    19
Total predicates per abstraction:         4127
Max number of predicates per abstraction: 30
Avg number of predicates per abstraction: 15.57
Number of irrelevant predicates:          298 (7%)
Number of preds handled by boolean abs:   2516 (61%)
  Total number of models for allsat:      472
  Max number of models for allsat:        32
  Avg number of models for allsat:        2.26

Time for post operator:                  0.302s
  Time for path formula creation:        0.299s
Time for strengthen operator:            0.004s
Time for prec operator:                  2.702s
  Time for abstraction:                  2.674s (Max:     0.079s, Count: 415)
    Boolean abstraction:                 2.049s
    Solving time:                        1.051s (Max:     0.020s)
    Model enumeration time:              0.886s
    Time for BDD construction:           0.065s (Max:     0.013s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.009s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     1.937s

Number of path formula cache hits:   1613 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.284s

Total number of created targets for pointer analysis: 1420
   Number of created targets for uf: *char is 241


Number of BDD nodes:                               11161
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5580 (count: 4443, min: 0, max: 3556, avg: 1.26)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.040s
Automaton transfers with branching:                0
Automaton transfer successors:                         1935 (count: 1935, min: 1, max: 1, avg: 1.00) [1 x 1935]

CPA algorithm statistics
------------------------
Number of iterations:            1097
Max size of waitlist:            3
Average size of waitlist:        1
Number of computed successors:   1279
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         21
Number of times breaked:         16

Total time for CPA algorithm:         3.387s (Max:     0.416s)
  Time for choose from waitlist:      0.018s
  Time for precision adjustment:      2.778s
  Time for transfer relation:         0.487s
  Time for merge operator:            0.019s
  Time for stop operator:             0.041s
  Time for adding to reached set:     0.006s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                 216 (count: 16, min: 5, max: 27, avg: 13.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.937s
  Counterexample analysis:                             0.902s (Max:     0.176s, Calls: 16)
    Refinement sat check:                              0.803s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.007s
  ARG update:                                          0.008s

Length of refined path (in blocks):                     177 (count: 16, min: 2, max: 27, avg: 11.06)
Number of affected states:                              161 (count: 16, min: 1, max: 26, avg: 10.06)
Length (states) of path with itp 'true':                  0 (count: 16, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       161 (count: 16, min: 1, max: 26, avg: 10.06)
Length (states) of path with itp 'false':                11 (count: 16, min: 0, max: 1, avg: 0.69)
Different non-trivial interpolants along paths:          83 (count: 16, min: 0, max: 13, avg: 5.19)
Equal non-trivial interpolants along paths:              62 (count: 16, min: 0, max: 12, avg: 3.88)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 121
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 64.69
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       4.335s
Time for refinements:                 0.948s
Average time for refinement:          0.059s
Max time for refinement:              0.178s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          17
  Total lines:            17
  Line coverage:          1.000
  Visited conditions:     8
  Total conditions:       8
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     47
Number of CFA edges:             50
Number of relevant variables:    7
Number of functions:             2
Number of loops:                 3
Size of reached set:             127
  Number of reached locations:   25 (53%)
    Avg states per location:     5
    Max states per location:     6 (at node N8)
  Number of reached functions:   2 (100%)
  Number of partitions:          108
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N17 (before line 16), Function main called from node N9, stack depth 1 [3527942a], stack [main]])
  Number of target states:       0

Time for analysis setup:          1.416s
  Time for loading CPAs:          0.493s
  Time for loading parser:        0.389s
  Time for CFA construction:      0.451s
    Time for parsing file(s):     0.196s
    Time for AST to CFA:          0.083s
    Time for CFA sanity check:    0.016s
    Time for post-processing:     0.068s
      Time for var class.:        0.025s
Time for Analysis:                4.335s
CPU time for analysis:            4.340s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.754s
Total CPU time for CPAchecker:    5.750s
Time for statistics:              0.037s

Time for Garbage Collector:       0.067s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     36MB (    35 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             32MB (    30 MiB) max;     27MB (    26 MiB) avg;     33MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7994MB (  7624 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
