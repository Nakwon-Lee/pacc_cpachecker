scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/loops/lu.cmp_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_h0puw5vs/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            905 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  375 (41%)
  Because of loop head:            488 (54%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         42 (5%)
  Times precision was empty:       223 (25%)
  Times precision was {false}:     62 (7%)
  Times result was cached:         6 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      614 (68%)
  Times result was 'false':        254 (28%)
Number of strengthen sat checks:   0
Number of coverage checks:         5830
  BDD entailment checks:           5264
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       10
Number of predicates discovered:          23
Number of abstraction locations:          5
Max number of predicates per location:    21
Avg number of predicates per location:    12
Total predicates per abstraction:         6128
Max number of predicates per abstraction: 21
Avg number of predicates per abstraction: 9.07
Number of irrelevant predicates:          353 (6%)
Number of preds handled by boolean abs:   5768 (94%)
  Total number of models for allsat:      3732
  Max number of models for allsat:        56
  Avg number of models for allsat:        6.08

Time for post operator:                  1.752s
  Time for path formula creation:        1.745s
Time for strengthen operator:            0.021s
Time for prec operator:                653.658s
  Time for abstraction:                653.622s (Max:     9.097s, Count: 905)
    Boolean abstraction:               649.999s
    Solving time:                      104.932s (Max:     0.789s)
    Model enumeration time:            544.842s
    Time for BDD construction:           0.129s (Max:     0.007s)
Time for merge operator:                 0.294s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):   649.774s

Number of path formula cache hits:   3497 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.724s

Total number of created targets for pointer analysis: 71373
   Number of created targets for uf: *double is 3221


Number of BDD nodes:                               18427
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7267 (count: 11981, min: 0, max: 461, avg: 0.61)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.065s
Automaton transfers with branching:                0
Automaton transfer successors:                         4330 (count: 4330, min: 1, max: 1, avg: 1.00) [1 x 4330]

CPA algorithm statistics
------------------------
Number of iterations:            3113
Max size of waitlist:            10
Average size of waitlist:        4
Number of computed successors:   3833
Max successors for one state:    2
Number of times merged:          283
Number of times stopped:         415
Number of times breaked:         14

Total time for CPA algorithm:       656.164s (Max:   186.378s)
  Time for choose from waitlist:      0.011s
  Time for precision adjustment:    653.737s
  Time for transfer relation:         1.971s
  Time for merge operator:            0.329s
  Time for stop operator:             0.047s
  Time for adding to reached set:     0.020s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14
Avg. length of target path (in blocks):                 335 (count: 14, min: 4, max: 70, avg: 23.93)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  10.935s
  Counterexample analysis:                            10.891s (Max:     2.456s, Calls: 14)
    Refinement sat check:                              9.659s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.007s
  ARG update:                                          0.014s

Length of refined path (in blocks):                     320 (count: 14, min: 3, max: 62, avg: 22.86)
Number of affected states:                              306 (count: 14, min: 2, max: 61, avg: 21.86)
Length (states) of path with itp 'true':                  0 (count: 14, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       306 (count: 14, min: 2, max: 61, avg: 21.86)
Length (states) of path with itp 'false':                 8 (count: 14, min: 0, max: 1, avg: 0.57)
Different non-trivial interpolants along paths:          51 (count: 14, min: 1, max: 6, avg: 3.64)
Equal non-trivial interpolants along paths:             241 (count: 14, min: 0, max: 54, avg: 17.21)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 484
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 164.29
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:     667.117s
Time for refinements:                10.953s
Average time for refinement:          0.782s
Max time for refinement:              2.462s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          50
  Total lines:            50
  Line coverage:          1.000
  Visited conditions:     36
  Total conditions:       36
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     131
Number of CFA edges:             148
Number of relevant variables:    20
Number of functions:             4
Number of loops:                 11
Size of reached set:             907
  Number of reached locations:   91 (69%)
    Avg states per location:     9
    Max states per location:     42 (at node N36)
  Number of reached functions:   4 (100%)
  Number of partitions:          855
    Avg size of partitions:      1
    Max size of partitions:      42 (with key [N36 (before line 26), Function main called from node N19, stack depth 1 [742ff096], stack [main]])
  Number of target states:       0

Time for analysis setup:          1.886s
  Time for loading CPAs:          0.571s
  Time for loading parser:        0.541s
  Time for CFA construction:      0.666s
    Time for parsing file(s):     0.246s
    Time for AST to CFA:          0.145s
    Time for CFA sanity check:    0.033s
    Time for post-processing:     0.117s
      Time for var class.:        0.049s
Time for Analysis:              667.117s
CPU time for analysis:          667.090s
Time for analyzing result:        0.001s
Total time for CPAchecker:      669.006s
Total CPU time for CPAchecker:  668.970s
Time for statistics:              0.044s

Time for Garbage Collector:       0.175s (in 43 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     41MB (    40 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     32MB (    31 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    34 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8361MB (  7974 MiB) max;   8210MB (  7829 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
