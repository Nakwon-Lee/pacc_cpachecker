scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/loops/vogal_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qi85r3ee/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2735 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  272 (10%)
  Because of loop head:            2359 (86%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         104 (4%)
  Times precision was empty:       134 (5%)
  Times precision was {false}:     37 (1%)
  Times result was cached:         518 (19%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2046 (75%)
  Times result was 'false':        1160 (42%)
Number of strengthen sat checks:   0
Number of coverage checks:         12778
  BDD entailment checks:           11334
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       7
Number of predicates discovered:          110
Number of abstraction locations:          8
Max number of predicates per location:    67
Avg number of predicates per location:    33
Total predicates per abstraction:         87985
Max number of predicates per abstraction: 67
Avg number of predicates per abstraction: 42.24
Number of irrelevant predicates:          2512 (3%)
Number of preds handled by boolean abs:   73052 (83%)
  Total number of models for allsat:      529043
  Max number of models for allsat:        32128
  Avg number of models for allsat:        258.57

Time for post operator:                  0.568s
  Time for path formula creation:        0.545s
Time for strengthen operator:            0.031s
Time for prec operator:                875.829s
  Time for abstraction:                875.676s (Max:   242.301s, Count: 2735)
    Boolean abstraction:               865.886s
    Solving time:                       10.288s (Max:     0.058s)
    Model enumeration time:            789.286s
    Time for BDD construction:          64.482s (Max:     6.983s)
Time for merge operator:                 0.063s
Time for coverage check:                 0.204s
  Time for BDD entailment checks:        0.202s
Total time for SMT solver (w/o itp):   799.574s

Number of path formula cache hits:   13304 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.513s

Total number of created targets for pointer analysis: 96
   Number of created targets for uf: *char is 97


Number of BDD nodes:                               336201
Size of BDD node table:                            370723
Size of BDD cache:                                 37087
Size of BDD node cleanup queue:                     1285891 (count: 542755, min: 0, max: 18245, avg: 2.37)
Time for BDD node cleanup:                             0.230s
Time for BDD garbage collection:                      12.733s (in 1667 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.172s
Automaton transfers with branching:                0
Automaton transfer successors:                        13835 (count: 13835, min: 1, max: 1, avg: 1.00) [1 x 13835]

CPA algorithm statistics
------------------------
Number of iterations:            9147
Max size of waitlist:            5
Average size of waitlist:        2
Number of computed successors:   11215
Max successors for one state:    2
Number of times merged:          722
Number of times stopped:         836
Number of times breaked:         30

Total time for CPA algorithm:       877.867s (Max:   487.360s)
  Time for choose from waitlist:      0.022s
  Time for precision adjustment:    876.009s
  Time for transfer relation:         1.230s
  Time for merge operator:            0.129s
  Time for stop operator:             0.274s
  Time for adding to reached set:     0.073s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   30
Avg. length of target path (in blocks):                 753 (count: 30, min: 6, max: 51, avg: 25.10)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.523s
  Counterexample analysis:                             3.350s (Max:     1.430s, Calls: 30)
    Refinement sat check:                              0.523s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.074s
  Precision update:                                    0.026s
  ARG update:                                          0.040s

Length of refined path (in blocks):                     645 (count: 30, min: 2, max: 48, avg: 21.50)
Number of affected states:                              488 (count: 30, min: 1, max: 46, avg: 16.27)
Length (states) of path with itp 'true':                127 (count: 30, min: 0, max: 14, avg: 4.23)
Length (states) of path with itp non-trivial itp:       488 (count: 30, min: 1, max: 46, avg: 16.27)
Length (states) of path with itp 'false':                22 (count: 30, min: 0, max: 1, avg: 0.73)
Different non-trivial interpolants along paths:         275 (count: 30, min: 0, max: 40, avg: 9.17)
Equal non-trivial interpolants along paths:             183 (count: 30, min: 0, max: 34, avg: 6.10)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                30
Number of successful refinements:     30
Number of failed refinements:         0
Max. size of reached set before ref.: 878
Max. size of reached set after ref.:  116
Avg. size of reached set before ref.: 317.70
Avg. size of reached set after ref.:  34.67

Total time for CEGAR algorithm:     881.433s
Time for refinements:                 3.564s
Average time for refinement:          0.118s
Max time for refinement:              1.455s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          25
  Total lines:            25
  Line coverage:          1.000
  Visited conditions:     20
  Total conditions:       20
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     73
Number of CFA edges:             82
Number of relevant variables:    9
Number of functions:             2
Number of loops:                 6
Size of reached set:             729
  Number of reached locations:   48 (66%)
    Avg states per location:     15
    Max states per location:     30 (at node N37)
  Number of reached functions:   2 (100%)
  Number of partitions:          634
    Avg size of partitions:      1
    Max size of partitions:      30 (with key [N41 (before line 29), Function main called from node N9, stack depth 1 [54c5a2ff], stack [main]])
  Number of target states:       0

Time for analysis setup:          1.894s
  Time for loading CPAs:          0.551s
  Time for loading parser:        0.566s
  Time for CFA construction:      0.642s
    Time for parsing file(s):     0.292s
    Time for AST to CFA:          0.113s
    Time for CFA sanity check:    0.016s
    Time for post-processing:     0.102s
      Time for var class.:        0.041s
Time for Analysis:              881.434s
CPU time for analysis:          881.330s
Time for analyzing result:        0.000s
Total time for CPAchecker:      883.330s
Total CPU time for CPAchecker:  883.230s
Time for statistics:              0.061s

Time for Garbage Collector:       3.350s (in 438 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                124MB (   119 MiB) max;     81MB (    77 MiB) avg;    136MB (   129 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     34MB (    32 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           156MB (   149 MiB) max;    128MB (   122 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8431MB (  8040 MiB) max;   8280MB (  7896 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
