scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/loop-invgen/nested6_true-unreach-call_true-termination.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_n2p45y65/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            876 (29% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  375 (43%)
  Because of loop head:            314 (36%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         187 (21%)
  Times precision was empty:       11 (1%)
  Times precision was {false}:     166 (19%)
  Times result was cached:         80 (9%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      619 (71%)
  Times result was 'false':        214 (24%)
Number of strengthen sat checks:   0
Number of coverage checks:         1994
  BDD entailment checks:           1992
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          27
Number of abstraction locations:          8
Max number of predicates per location:    16
Avg number of predicates per location:    8
Total predicates per abstraction:         5263
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 6.70
Number of irrelevant predicates:          570 (11%)
Number of preds handled by boolean abs:   4266 (81%)
  Total number of models for allsat:      2503
  Max number of models for allsat:        36
  Avg number of models for allsat:        4.04

Time for post operator:                  0.453s
  Time for path formula creation:        0.432s
Time for strengthen operator:            0.039s
Time for prec operator:                  4.584s
  Time for abstraction:                  4.470s (Max:     0.030s, Count: 876)
    Boolean abstraction:                 2.041s
    Solving time:                        1.094s (Max:     0.014s)
    Model enumeration time:              0.371s
    Time for BDD construction:           0.235s (Max:     0.014s)
Time for merge operator:                 0.004s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     1.465s

Number of path formula cache hits:   2429 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.379s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               11688
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8162 (count: 9580, min: 0, max: 2766, avg: 0.85)
Time for BDD node cleanup:                             0.020s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.174s
Automaton transfers with branching:                0
Automaton transfer successors:                         2998 (count: 2998, min: 1, max: 1, avg: 1.00) [1 x 2998]

CPA algorithm statistics
------------------------
Number of iterations:            2477
Max size of waitlist:            16
Average size of waitlist:        6
Number of computed successors:   2917
Max successors for one state:    2
Number of times merged:          1
Number of times stopped:         124
Number of times breaked:         26

Total time for CPA algorithm:         6.136s (Max:     0.634s)
  Time for choose from waitlist:      0.052s
  Time for precision adjustment:      4.771s
  Time for transfer relation:         1.039s
  Time for merge operator:            0.025s
  Time for stop operator:             0.085s
  Time for adding to reached set:     0.070s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   26
Avg. length of target path (in blocks):                 359 (count: 26, min: 4, max: 39, avg: 13.81)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.437s
  Counterexample analysis:                             0.279s (Max:     0.020s, Calls: 26)
    Refinement sat check:                              0.156s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.051s
  Precision update:                                    0.038s
  ARG update:                                          0.038s

Length of refined path (in blocks):                     338 (count: 26, min: 4, max: 39, avg: 13.00)
Number of affected states:                              175 (count: 26, min: 1, max: 16, avg: 6.73)
Length (states) of path with itp 'true':                137 (count: 26, min: 0, max: 31, avg: 5.27)
Length (states) of path with itp non-trivial itp:       175 (count: 26, min: 1, max: 16, avg: 6.73)
Length (states) of path with itp 'false':                 6 (count: 26, min: 0, max: 1, avg: 0.23)
Different non-trivial interpolants along paths:          59 (count: 26, min: 0, max: 6, avg: 2.27)
Equal non-trivial interpolants along paths:              90 (count: 26, min: 0, max: 11, avg: 3.46)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                26
Number of successful refinements:     26
Number of failed refinements:         0
Max. size of reached set before ref.: 399
Max. size of reached set after ref.:  303
Avg. size of reached set before ref.: 192.00
Avg. size of reached set after ref.:  106.31

Total time for CEGAR algorithm:       6.701s
Time for refinements:                 0.558s
Average time for refinement:          0.021s
Max time for refinement:              0.131s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          18
  Total lines:            18
  Line coverage:          1.000
  Visited conditions:     14
  Total conditions:       14
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     51
Number of CFA edges:             59
Number of relevant variables:    7
Number of functions:             2
Number of loops:                 3
Size of reached set:             352
  Number of reached locations:   37 (73%)
    Avg states per location:     9
    Max states per location:     24 (at node N0)
  Number of reached functions:   2 (100%)
  Number of partitions:          315
    Avg size of partitions:      1
    Max size of partitions:      18 (with key [N40 (before line 22), Function main called from node N9, stack depth 1 [53aac487], stack [main]])
  Number of target states:       0

Time for analysis setup:          2.649s
  Time for loading CPAs:          0.782s
  Time for loading parser:        0.874s
  Time for CFA construction:      0.854s
    Time for parsing file(s):     0.392s
    Time for AST to CFA:          0.136s
    Time for CFA sanity check:    0.040s
    Time for post-processing:     0.142s
      Time for var class.:        0.047s
Time for Analysis:                6.701s
CPU time for analysis:            6.710s
Time for analyzing result:        0.001s
Total time for CPAchecker:        9.358s
Total CPU time for CPAchecker:    9.360s
Time for statistics:              0.119s

Time for Garbage Collector:       0.133s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     35MB (    34 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     28MB (    26 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8096MB (  7721 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
