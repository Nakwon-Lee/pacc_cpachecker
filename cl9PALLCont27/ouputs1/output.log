scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ure6m5kv/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 260: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 381: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 928: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2119: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2128: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2171: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2211: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2291: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2304: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2656: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2696: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2725: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2759: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2843: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2888: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3471: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3480: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1085: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            87 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            46 (53%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         41 (47%)
  Times precision was empty:       3 (3%)
  Times precision was {false}:     40 (46%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      44 (51%)
  Times result was 'false':        33 (38%)
Number of strengthen sat checks:   0
Number of coverage checks:         119556
  BDD entailment checks:           142
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       983
Number of predicates discovered:          51
Number of abstraction locations:          2
Max number of predicates per location:    51
Avg number of predicates per location:    26
Total predicates per abstraction:         1269
Max number of predicates per abstraction: 51
Avg number of predicates per abstraction: 15.11
Number of irrelevant predicates:          69 (5%)
Number of preds handled by boolean abs:   1200 (95%)
  Total number of models for allsat:      38594
  Max number of models for allsat:        8757
  Avg number of models for allsat:        877.14

Time for post operator:                  3.376s
  Time for path formula creation:        3.231s
Time for strengthen operator:            0.220s
Time for prec operator:                883.181s
  Time for abstraction:                882.926s (Max:   214.371s, Count: 87)
    Boolean abstraction:               880.869s
    Solving time:                        7.170s (Max:     0.316s)
    Model enumeration time:            868.395s
    Time for BDD construction:           5.633s (Max:     1.126s)
Time for merge operator:                 0.979s
Time for coverage check:                 0.062s
  Time for BDD entailment checks:        0.049s
Total time for SMT solver (w/o itp):   875.566s

Number of path formula cache hits:   230177 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.007s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               246323
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       66240 (count: 27342, min: 0, max: 8700, avg: 2.42)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.171s (in 27 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.372s
Automaton transfers with branching:                0
Automaton transfer successors:                       290268 (count: 290268, min: 1, max: 1, avg: 1.00) [1 x 290268]

CPA algorithm statistics
------------------------
Number of iterations:            214040
Max size of waitlist:            28
Average size of waitlist:        12
Number of computed successors:   273826
Max successors for one state:    2
Number of times merged:          59707
Number of times stopped:         59715
Number of times breaked:         8

Total time for CPA algorithm:       894.231s (Max:   813.096s)
  Time for choose from waitlist:      0.115s
  Time for precision adjustment:    884.883s
  Time for transfer relation:         6.047s
  Time for merge operator:            1.658s
  Time for stop operator:             0.319s
  Time for adding to reached set:     0.407s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                  20 (count: 8, min: 2, max: 4, avg: 2.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.931s
  Counterexample analysis:                             2.411s (Max:     0.870s, Calls: 8)
    Refinement sat check:                              2.128s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.010s
  Precision update:                                    0.005s
  ARG update:                                          0.420s

Length of refined path (in blocks):                      20 (count: 8, min: 2, max: 4, avg: 2.50)
Number of affected states:                               12 (count: 8, min: 1, max: 3, avg: 1.50)
Length (states) of path with itp 'true':                  0 (count: 8, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        12 (count: 8, min: 1, max: 3, avg: 1.50)
Length (states) of path with itp 'false':                 0 (count: 8, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           4 (count: 8, min: 0, max: 2, avg: 0.50)
Equal non-trivial interpolants along paths:               0 (count: 8, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 56365
Max. size of reached set after ref.:  5654
Avg. size of reached set before ref.: 23269.50
Avg. size of reached set after ref.:  5654.00

Total time for CEGAR algorithm:     897.760s
Time for refinements:                 3.500s
Average time for refinement:          0.437s
Max time for refinement:              1.318s

Code Coverage
-----------------------------
  Function coverage:      0.597
  Visited lines:          1056
  Total lines:            1752
  Line coverage:          0.603
  Visited conditions:     604
  Total conditions:       760
  Condition coverage:     0.795

CPAchecker general statistics
-----------------------------
Number of program locations:     2297
Number of CFA edges:             2797
Number of relevant variables:    322
Number of functions:             77
Number of loops:                 9
Size of reached set:             73154
  Number of reached locations:   1169 (51%)
    Avg states per location:     62
    Max states per location:     905 (at node N200)
  Number of reached functions:   46 (60%)
  Number of partitions:          73143
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N1145 (before lines 1446-1474), Function cleanup called from node N1364, stack depth 4 [33a2499c], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        14

Time for analysis setup:          2.735s
  Time for loading CPAs:          0.562s
  Time for loading parser:        0.508s
  Time for CFA construction:      1.538s
    Time for parsing file(s):     0.422s
    Time for AST to CFA:          0.441s
    Time for CFA sanity check:    0.153s
    Time for post-processing:     0.380s
      Time for var class.:        0.213s
Time for Analysis:              897.761s
CPU time for analysis:          897.680s
Total time for CPAchecker:      900.498s
Total CPU time for CPAchecker:  900.410s
Time for statistics:              0.695s

Time for Garbage Collector:       1.969s (in 94 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                203MB (   193 MiB) max;    149MB (   142 MiB) avg;    210MB (   200 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     34MB (    33 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           213MB (   203 MiB) max;    205MB (   195 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8536MB (  8140 MiB) max;   8395MB (  8006 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
