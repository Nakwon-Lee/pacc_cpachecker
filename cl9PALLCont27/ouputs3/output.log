scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product25_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_i16j5xbb/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 50: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 362: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 582: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 631: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 711: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1076: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1110: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1180: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1752: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1793: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1832: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1871: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1986: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2533: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2945: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2782: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            229 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            84 (37%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         145 (63%)
  Times precision was empty:       3 (1%)
  Times precision was {false}:     144 (63%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      82 (36%)
  Times result was 'false':        134 (59%)
Number of strengthen sat checks:   0
Number of coverage checks:         159315
  BDD entailment checks:           321
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       994
Number of predicates discovered:          96
Number of abstraction locations:          2
Max number of predicates per location:    96
Avg number of predicates per location:    48
Total predicates per abstraction:         4221
Max number of predicates per abstraction: 96
Avg number of predicates per abstraction: 18.68
Number of irrelevant predicates:          174 (4%)
Number of preds handled by boolean abs:   4047 (96%)
  Total number of models for allsat:      7755
  Max number of models for allsat:        546
  Avg number of models for allsat:        94.57

Time for post operator:                  3.007s
  Time for path formula creation:        2.833s
Time for strengthen operator:            0.379s
Time for prec operator:                 69.164s
  Time for abstraction:                 68.832s (Max:     3.691s, Count: 229)
    Boolean abstraction:                65.946s
    Solving time:                       11.080s (Max:     0.239s)
    Model enumeration time:             54.327s
    Time for BDD construction:           0.729s (Max:     0.096s)
Time for merge operator:                 0.732s
Time for coverage check:                 0.031s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):    65.407s

Number of path formula cache hits:   376225 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.530s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               132862
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       43155 (count: 19317, min: 0, max: 2231, avg: 2.23)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.062s (in 1 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.543s
  Time for transition matches:                         0.218s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       387710 (count: 387710, min: 1, max: 1, avg: 1.00) [1 x 387710]

CPA algorithm statistics
------------------------
Number of iterations:            289364
Max size of waitlist:            28
Average size of waitlist:        12
Number of computed successors:   369072
Max successors for one state:    2
Number of times merged:          79497
Number of times stopped:         79509
Number of times breaked:         12

Total time for CPA algorithm:        81.369s (Max:    25.002s)
  Time for choose from waitlist:      0.098s
  Time for precision adjustment:     71.273s
  Time for transfer relation:         6.540s
  Time for merge operator:            1.725s
  Time for stop operator:             0.365s
  Time for adding to reached set:     0.446s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                  41 (count: 12, min: 2, max: 8, avg: 3.42)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   9.042s
  Counterexample analysis:                             8.208s (Max:     2.778s, Calls: 12)
    Refinement sat check:                              7.320s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.017s
  ARG update:                                          0.679s

Length of refined path (in blocks):                      39 (count: 12, min: 2, max: 6, avg: 3.25)
Number of affected states:                               27 (count: 12, min: 1, max: 5, avg: 2.25)
Length (states) of path with itp 'true':                  0 (count: 12, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        27 (count: 12, min: 1, max: 5, avg: 2.25)
Length (states) of path with itp 'false':                 1 (count: 12, min: 0, max: 1, avg: 0.08)
Different non-trivial interpolants along paths:          15 (count: 12, min: 0, max: 4, avg: 1.25)
Equal non-trivial interpolants along paths:               0 (count: 12, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 56328
Max. size of reached set after ref.:  4034
Avg. size of reached set before ref.: 26132.58
Avg. size of reached set after ref.:  4034.00

Total time for CEGAR algorithm:      91.424s
Time for refinements:                10.011s
Average time for refinement:          0.834s
Max time for refinement:              3.349s

Code Coverage
-----------------------------
  Function coverage:      0.611
  Visited lines:          1022
  Total lines:            1695
  Line coverage:          0.603
  Visited conditions:     606
  Total conditions:       750
  Condition coverage:     0.808

CPAchecker general statistics
-----------------------------
Number of program locations:     2227
Number of CFA edges:             2714
Number of relevant variables:    286
Number of functions:             72
Number of loops:                 9
Size of reached set:             24247
  Number of reached locations:   1160 (52%)
    Avg states per location:     20
    Max states per location:     151 (at node N1493)
  Number of reached functions:   44 (61%)
  Number of partitions:          24243
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N2516 (before lines 3147-3175), Function cleanup called from node N27, stack depth 4 [27f9e982], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          2.879s
  Time for loading CPAs:          0.647s
  Time for loading parser:        0.496s
  Time for CFA construction:      1.599s
    Time for parsing file(s):     0.446s
    Time for AST to CFA:          0.482s
    Time for CFA sanity check:    0.164s
    Time for post-processing:     0.356s
      Time for var class.:        0.194s
Time for Analysis:               91.424s
CPU time for analysis:           91.420s
Time for analyzing result:        0.018s
Total time for CPAchecker:       94.306s
Total CPU time for CPAchecker:   94.290s
Time for statistics:              0.354s

Time for Garbage Collector:       2.503s (in 118 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                218MB (   208 MiB) max;     83MB (    79 MiB) avg;    223MB (   213 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     34MB (    33 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           260MB (   248 MiB) max;    135MB (   129 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8273MB (  7890 MiB) max;   8175MB (  7797 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
