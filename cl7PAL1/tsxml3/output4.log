scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product30_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_olq803d4/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 78: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 117: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 513: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 824: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1619: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1628: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1662: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1671: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1711: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1791: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1804: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2195: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2229: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2327: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3326: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3372: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3163: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            188 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            126 (67%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         62 (33%)
  Times precision was empty:       156 (83%)
  Times precision was {false}:     32 (17%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        32 (17%)
Number of strengthen sat checks:   0
Number of coverage checks:         78557
  BDD entailment checks:           3
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3794
Number of predicates discovered:          1
Number of abstraction locations:          3
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         32
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          32 (100%)

Time for post operator:                  5.979s
  Time for path formula creation:        5.904s
Time for strengthen operator:            0.210s
Time for prec operator:                  3.252s
  Time for abstraction:                  3.061s (Max:     0.267s, Count: 188)
    Solving time:                        1.061s (Max:     0.102s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 1.800s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     1.061s

Number of path formula cache hits:   109 (0%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.719s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 353, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.454s
Automaton transfers with branching:                0
Automaton transfer successors:                       189435 (count: 189435, min: 1, max: 1, avg: 1.00) [1 x 189435]

CPA algorithm statistics
------------------------
Number of iterations:            139901
Max size of waitlist:            116
Average size of waitlist:        58
Number of computed successors:   179331
Max successors for one state:    2
Number of times merged:          39277
Number of times stopped:         39280
Number of times breaked:         33

Total time for CPA algorithm:        17.678s (Max:     2.747s)
  Time for choose from waitlist:      0.179s
  Time for precision adjustment:      4.837s
  Time for transfer relation:         8.504s
  Time for merge operator:            2.737s
  Time for stop operator:             0.264s
  Time for adding to reached set:     0.350s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   33
Avg. length of target path (in blocks):                  58 (count: 33, min: 1, max: 2, avg: 1.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.262s
  Counterexample analysis:                             2.658s (Max:     0.222s, Calls: 33)
    Refinement sat check:                              2.292s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.010s
  ARG update:                                          0.004s

Length of refined path (in blocks):                      54 (count: 33, min: 1, max: 2, avg: 1.64)
Number of affected states:                                0 (count: 33, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                 21 (count: 33, min: 0, max: 1, avg: 0.64)
Length (states) of path with itp non-trivial itp:         0 (count: 33, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 4 (count: 33, min: 0, max: 1, avg: 0.12)
Different non-trivial interpolants along paths:           0 (count: 33, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 33, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                33
Number of successful refinements:     33
Number of failed refinements:         0
Max. size of reached set before ref.: 139866
Max. size of reached set after ref.:  139840
Avg. size of reached set before ref.: 76337.91
Avg. size of reached set after ref.:  76332.45

Total time for CEGAR algorithm:      26.879s
Time for refinements:                 6.884s
Average time for refinement:          0.208s
Max time for refinement:              0.366s

Code Coverage
-----------------------------
  Function coverage:      0.649
  Visited lines:          1034
  Total lines:            1697
  Line coverage:          0.609
  Visited conditions:     596
  Total conditions:       730
  Condition coverage:     0.816

CPAchecker general statistics
-----------------------------
Number of program locations:     2226
Number of CFA edges:             2712
Number of relevant variables:    312
Number of functions:             74
Number of loops:                 9
Size of reached set:             139840
  Number of reached locations:   1175 (53%)
    Avg states per location:     119
    Max states per location:     1586 (at node N150)
  Number of reached functions:   48 (65%)
  Number of partitions:          139840
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        109

Time for analysis setup:          3.000s
  Time for loading CPAs:          0.576s
  Time for loading parser:        0.556s
  Time for CFA construction:      1.733s
    Time for parsing file(s):     0.501s
    Time for AST to CFA:          0.534s
    Time for CFA sanity check:    0.182s
    Time for post-processing:     0.376s
      Time for var class.:        0.217s
Time for Analysis:               26.879s
CPU time for analysis:           26.880s
Total time for CPAchecker:       29.882s
Total CPU time for CPAchecker:   29.880s
Time for statistics:              1.324s

Time for Garbage Collector:       2.629s (in 86 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                250MB (   238 MiB) max;    107MB (   102 MiB) avg;    261MB (   249 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     33MB (    31 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           313MB (   299 MiB) max;    183MB (   175 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8210MB (  7830 MiB) max;   8132MB (  7756 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
