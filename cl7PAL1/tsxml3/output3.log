scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product30_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7yvmh3aw/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 78: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 117: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 513: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 824: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1619: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1628: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1662: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1671: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1711: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1791: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1804: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2195: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2229: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2327: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3326: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3372: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3163: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            115 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            79 (69%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36 (31%)
  Times precision was empty:       83 (72%)
  Times precision was {false}:     20 (17%)
  Times result was cached:         4 (3%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8 (7%)
  Times result was 'false':        25 (22%)
Number of strengthen sat checks:   0
Number of coverage checks:         30549
  BDD entailment checks:           17
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3794
Number of predicates discovered:          12
Number of abstraction locations:          4
Max number of predicates per location:    8
Avg number of predicates per location:    3
Total predicates per abstraction:         60
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 2.14
Number of irrelevant predicates:          24 (40%)
Number of preds handled by boolean abs:   30 (50%)
  Total number of models for allsat:      16
  Max number of models for allsat:        8
  Avg number of models for allsat:        2.00

Time for post operator:                  3.680s
  Time for path formula creation:        3.578s
Time for strengthen operator:            0.170s
Time for prec operator:                  1.952s
  Time for abstraction:                  1.737s (Max:     0.234s, Count: 115)
    Boolean abstraction:                 0.210s
    Solving time:                        0.644s (Max:     0.166s)
    Model enumeration time:              0.021s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 1.106s
Time for coverage check:                 0.009s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.665s

Number of path formula cache hits:   283 (0%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.482s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               343
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 317, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.304s
Automaton transfers with branching:                0
Automaton transfer successors:                        74084 (count: 74084, min: 1, max: 1, avg: 1.00) [1 x 74084]

CPA algorithm statistics
------------------------
Number of iterations:            54684
Max size of waitlist:            49
Average size of waitlist:        26
Number of computed successors:   70038
Max successors for one state:    2
Number of times merged:          15266
Number of times stopped:         15280
Number of times breaked:         20

Total time for CPA algorithm:        11.248s (Max:     3.215s)
  Time for choose from waitlist:      0.146s
  Time for precision adjustment:      2.748s
  Time for transfer relation:         5.652s
  Time for merge operator:            1.587s
  Time for stop operator:             0.181s
  Time for adding to reached set:     0.272s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   20
Avg. length of target path (in blocks):                  51 (count: 20, min: 1, max: 6, avg: 2.55)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  12.242s
  Counterexample analysis:                            11.546s (Max:     2.753s, Calls: 20)
    Refinement sat check:                             10.342s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.006s
  ARG update:                                          0.003s

Length of refined path (in blocks):                      39 (count: 19, min: 1, max: 5, avg: 2.05)
Number of affected states:                                3 (count: 19, min: 0, max: 3, avg: 0.16)
Length (states) of path with itp 'true':                 17 (count: 19, min: 0, max: 3, avg: 0.89)
Length (states) of path with itp non-trivial itp:         3 (count: 19, min: 0, max: 3, avg: 0.16)
Length (states) of path with itp 'false':                 5 (count: 19, min: 0, max: 1, avg: 0.26)
Different non-trivial interpolants along paths:           2 (count: 19, min: 0, max: 2, avg: 0.11)
Equal non-trivial interpolants along paths:               0 (count: 19, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                20
Number of successful refinements:     19
Number of failed refinements:         0
Max. size of reached set before ref.: 54239
Max. size of reached set after ref.:  54110
Avg. size of reached set before ref.: 43253.80
Avg. size of reached set after ref.:  42649.58

Total time for CEGAR algorithm:      27.286s
Time for refinements:                15.308s
Average time for refinement:          0.765s
Max time for refinement:              2.909s

Code Coverage
-----------------------------
  Function coverage:      0.689
  Visited lines:          1135
  Total lines:            1697
  Line coverage:          0.669
  Visited conditions:     644
  Total conditions:       730
  Condition coverage:     0.882

CPAchecker general statistics
-----------------------------
Number of program locations:     2226
Number of CFA edges:             2712
Number of relevant variables:    312
Number of functions:             74
Number of loops:                 9
Size of reached set:             54239
  Number of reached locations:   1284 (58%)
    Avg states per location:     42
    Max states per location:     615 (at node N150)
  Number of reached functions:   51 (69%)
  Number of partitions:          54236
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2234 (before lines 2867-2938), Function existInLiftCallsInDirection called from node N711, stack depth 7 [1ba63f8c], stack [main, runTest, test, cleanup, timeShift, __utac_acc__Specification13_spec__2, existInLiftCallsInDirection]])
  Number of target states:       1
  Size of final wait list        40

Time for analysis setup:          3.178s
  Time for loading CPAs:          0.631s
  Time for loading parser:        0.582s
  Time for CFA construction:      1.817s
    Time for parsing file(s):     0.529s
    Time for AST to CFA:          0.551s
    Time for CFA sanity check:    0.199s
    Time for post-processing:     0.402s
      Time for var class.:        0.216s
Time for Analysis:               27.286s
CPU time for analysis:           27.290s
Total time for CPAchecker:       30.470s
Total CPU time for CPAchecker:   30.470s
Time for statistics:              0.648s

Time for Garbage Collector:       1.683s (in 56 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                170MB (   162 MiB) max;     95MB (    91 MiB) avg;    226MB (   215 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     33MB (    31 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           258MB (   246 MiB) max;    177MB (   169 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8339MB (  7953 MiB) max;   8182MB (  7803 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
