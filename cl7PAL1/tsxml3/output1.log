scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product30_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hlt53vy0/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 78: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 117: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 513: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 824: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1619: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1628: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1662: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1671: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1711: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1791: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1804: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2195: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2229: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2327: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3326: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3372: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3163: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            149 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            100 (67%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         49 (33%)
  Times precision was empty:       124 (83%)
  Times precision was {false}:     24 (16%)
  Times result was cached:         1 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        25 (17%)
Number of strengthen sat checks:   0
Number of coverage checks:         72083
  BDD entailment checks:           5
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3794
Number of predicates discovered:          1
Number of abstraction locations:          2
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         25
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.04
Number of irrelevant predicates:          25 (100%)

Time for post operator:                  5.475s
  Time for path formula creation:        5.343s
Time for strengthen operator:            0.225s
Time for prec operator:                  2.504s
  Time for abstraction:                  2.272s (Max:     0.343s, Count: 149)
    Solving time:                        0.840s (Max:     0.122s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 1.808s
Time for coverage check:                 0.018s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.840s

Number of path formula cache hits:   89 (0%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.187s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 275, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.537s
  Time for transition matches:                         0.225s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       173724 (count: 173724, min: 1, max: 1, avg: 1.00) [1 x 173724]

CPA algorithm statistics
------------------------
Number of iterations:            128310
Max size of waitlist:            105
Average size of waitlist:        53
Number of computed successors:   164476
Max successors for one state:    2
Number of times merged:          36039
Number of times stopped:         36044
Number of times breaked:         25

Total time for CPA algorithm:        16.990s (Max:     3.209s)
  Time for choose from waitlist:      0.224s
  Time for precision adjustment:      3.739s
  Time for transfer relation:         8.502s
  Time for merge operator:            2.896s
  Time for stop operator:             0.324s
  Time for adding to reached set:     0.390s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   25
Avg. length of target path (in blocks):                  44 (count: 25, min: 1, max: 3, avg: 1.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.305s
  Counterexample analysis:                             3.674s (Max:     0.531s, Calls: 25)
    Refinement sat check:                              3.161s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.007s
  ARG update:                                          0.001s

Length of refined path (in blocks):                      43 (count: 25, min: 1, max: 3, avg: 1.72)
Number of affected states:                                0 (count: 25, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                 18 (count: 25, min: 0, max: 2, avg: 0.72)
Length (states) of path with itp non-trivial itp:         0 (count: 25, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 1 (count: 25, min: 0, max: 1, avg: 0.04)
Different non-trivial interpolants along paths:           0 (count: 25, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 25, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 118468
Max. size of reached set after ref.:  118467
Avg. size of reached set before ref.: 66861.04
Avg. size of reached set after ref.:  66857.80

Total time for CEGAR algorithm:      26.862s
Time for refinements:                 8.269s
Average time for refinement:          0.330s
Max time for refinement:              1.189s

Code Coverage
-----------------------------
  Function coverage:      0.689
  Visited lines:          1095
  Total lines:            1697
  Line coverage:          0.645
  Visited conditions:     620
  Total conditions:       730
  Condition coverage:     0.849

CPAchecker general statistics
-----------------------------
Number of program locations:     2226
Number of CFA edges:             2712
Number of relevant variables:    312
Number of functions:             74
Number of loops:                 9
Size of reached set:             128327
  Number of reached locations:   1236 (56%)
    Avg states per location:     103
    Max states per location:     1453 (at node N150)
  Number of reached functions:   51 (69%)
  Number of partitions:          128327
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        97

Time for analysis setup:          2.940s
  Time for loading CPAs:          0.560s
  Time for loading parser:        0.528s
  Time for CFA construction:      1.680s
    Time for parsing file(s):     0.528s
    Time for AST to CFA:          0.456s
    Time for CFA sanity check:    0.185s
    Time for post-processing:     0.372s
      Time for var class.:        0.207s
Time for Analysis:               26.862s
CPU time for analysis:           26.860s
Total time for CPAchecker:       29.813s
Total CPU time for CPAchecker:   29.800s
Time for statistics:              1.139s

Time for Garbage Collector:       2.806s (in 70 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                267MB (   255 MiB) max;    117MB (   112 MiB) avg;    290MB (   276 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     33MB (    31 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           345MB (   329 MiB) max;    209MB (   199 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8272MB (  7889 MiB) max;   8159MB (  7781 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
