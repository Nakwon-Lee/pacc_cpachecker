scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product01_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zxmmvlr2/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 134: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 263: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 272: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 306: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 315: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 435: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 800: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 834: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 890: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1477: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1836: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1950: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2191: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2822: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3013: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3052: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3091: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3103: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3126: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2659: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            166 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            37 (22%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         129 (78%)
  Times precision was empty:       3 (2%)
  Times precision was {false}:     128 (77%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      35 (21%)
  Times result was 'false':        121 (73%)
Number of strengthen sat checks:   0
Number of coverage checks:         57842
  BDD entailment checks:           112
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       774
Number of predicates discovered:          41
Number of abstraction locations:          2
Max number of predicates per location:    40
Avg number of predicates per location:    20
Total predicates per abstraction:         1245
Max number of predicates per abstraction: 40
Avg number of predicates per abstraction: 7.64
Number of irrelevant predicates:          128 (10%)
Number of preds handled by boolean abs:   1117 (90%)
  Total number of models for allsat:      1348
  Max number of models for allsat:        204
  Avg number of models for allsat:        38.51

Time for post operator:                  2.647s
  Time for path formula creation:        2.501s
Time for strengthen operator:            0.195s
Time for prec operator:                 15.852s
  Time for abstraction:                 15.639s (Max:     1.274s, Count: 166)
    Boolean abstraction:                13.669s
    Solving time:                        5.094s (Max:     0.239s)
    Model enumeration time:              8.841s
    Time for BDD construction:           0.169s (Max:     0.029s)
Time for merge operator:                 0.734s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):    13.935s

Number of path formula cache hits:   93453 (61%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.383s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               43773
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        9425 (count: 4985, min: 0, max: 979, avg: 1.89)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.343s
Automaton transfers with branching:                0
Automaton transfer successors:                       136554 (count: 136554, min: 1, max: 1, avg: 1.00) [1 x 136554]

CPA algorithm statistics
------------------------
Number of iterations:            102047
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   131049
Max successors for one state:    2
Number of times merged:          28865
Number of times stopped:         28867
Number of times breaked:         7

Total time for CPA algorithm:        23.827s (Max:    11.325s)
  Time for choose from waitlist:      0.127s
  Time for precision adjustment:     16.827s
  Time for transfer relation:         4.680s
  Time for merge operator:            1.229s
  Time for stop operator:             0.212s
  Time for adding to reached set:     0.226s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                  24 (count: 7, min: 2, max: 5, avg: 3.43)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.154s
  Counterexample analysis:                             2.798s (Max:     0.633s, Calls: 7)
    Refinement sat check:                              2.484s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.022s
  Precision update:                                    0.004s
  ARG update:                                          0.218s

Length of refined path (in blocks):                      24 (count: 7, min: 2, max: 5, avg: 3.43)
Number of affected states:                               17 (count: 7, min: 1, max: 4, avg: 2.43)
Length (states) of path with itp 'true':                  0 (count: 7, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        17 (count: 7, min: 1, max: 4, avg: 2.43)
Length (states) of path with itp 'false':                 0 (count: 7, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:          10 (count: 7, min: 0, max: 3, avg: 1.43)
Equal non-trivial interpolants along paths:               0 (count: 7, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 17186
Max. size of reached set after ref.:  3592
Avg. size of reached set before ref.: 11832.14
Avg. size of reached set after ref.:  3592.00

Total time for CEGAR algorithm:      27.308s
Time for refinements:                 3.446s
Average time for refinement:          0.492s
Max time for refinement:              0.729s

Code Coverage
-----------------------------
  Function coverage:      0.580
  Visited lines:          963
  Total lines:            1674
  Line coverage:          0.575
  Visited conditions:     580
  Total conditions:       748
  Condition coverage:     0.775

CPAchecker general statistics
-----------------------------
Number of program locations:     2195
Number of CFA edges:             2679
Number of relevant variables:    280
Number of functions:             69
Number of loops:                 9
Size of reached set:             44380
  Number of reached locations:   1101 (50%)
    Avg states per location:     40
    Max states per location:     333 (at node N1431)
  Number of reached functions:   40 (58%)
  Number of partitions:          44368
    Avg size of partitions:      1
    Max size of partitions:      13 (with key [N1254 (before lines 1627-1655), Function cleanup called from node N2277, stack depth 4 [3add81c4], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        3

Time for analysis setup:          3.022s
  Time for loading CPAs:          0.593s
  Time for loading parser:        0.541s
  Time for CFA construction:      1.750s
    Time for parsing file(s):     0.525s
    Time for AST to CFA:          0.476s
    Time for CFA sanity check:    0.201s
    Time for post-processing:     0.391s
      Time for var class.:        0.226s
Time for Analysis:               27.308s
CPU time for analysis:           27.310s
Total time for CPAchecker:       30.333s
Total CPU time for CPAchecker:   30.320s
Time for statistics:              0.506s

Time for Garbage Collector:       1.023s (in 53 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                117MB (   111 MiB) max;     67MB (    64 MiB) avg;    138MB (   131 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    31 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           158MB (   151 MiB) max;    129MB (   123 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8199MB (  7819 MiB) max;   8158MB (  7780 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
