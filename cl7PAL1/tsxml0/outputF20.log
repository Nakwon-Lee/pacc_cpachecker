scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec3_product26_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uaihs7jg/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 592: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 765: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 774: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 808: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 817: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 857: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 937: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 950: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1302: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1336: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2028: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2348: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2508: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2744: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3055: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3095: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3134: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3173: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3217: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2185: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            31 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            6 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25 (81%)
  Times precision was empty:       10 (32%)
  Times precision was {false}:     16 (52%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5 (16%)
  Times result was 'false':        16 (52%)
Number of strengthen sat checks:   0
Number of coverage checks:         38704
  BDD entailment checks:           10
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3998
Number of predicates discovered:          4
Number of abstraction locations:          2
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         31
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 1.48
Number of irrelevant predicates:          16 (52%)
Number of preds handled by boolean abs:   15 (48%)
  Total number of models for allsat:      20
  Max number of models for allsat:        6
  Avg number of models for allsat:        4.00

Time for post operator:                  3.851s
  Time for path formula creation:        3.729s
Time for strengthen operator:            0.175s
Time for prec operator:                  8.821s
  Time for abstraction:                  8.667s (Max:     2.002s, Count: 31)
    Boolean abstraction:                 2.859s
    Solving time:                        6.232s (Max:     1.267s)
    Model enumeration time:              0.850s
    Time for BDD construction:           0.013s (Max:     0.009s)
Time for merge operator:                 1.049s
Time for coverage check:                 0.022s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     7.082s

Number of path formula cache hits:   12560 (13%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.620s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               231
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          50 (count: 167, min: 0, max: 15, avg: 0.30)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.353s
Automaton transfers with branching:                0
Automaton transfer successors:                        93456 (count: 93456, min: 1, max: 1, avg: 1.00) [1 x 93456]

CPA algorithm statistics
------------------------
Number of iterations:            69861
Max size of waitlist:            17
Average size of waitlist:        9
Number of computed successors:   89228
Max successors for one state:    2
Number of times merged:          19347
Number of times stopped:         19348
Number of times breaked:         9

Total time for CPA algorithm:        18.441s (Max:     7.938s)
  Time for choose from waitlist:      0.113s
  Time for precision adjustment:      9.582s
  Time for transfer relation:         5.857s
  Time for merge operator:            1.623s
  Time for stop operator:             0.256s
  Time for adding to reached set:     0.292s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                  10 (count: 9, min: 1, max: 2, avg: 1.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.519s
  Counterexample analysis:                             6.245s (Max:     2.499s, Calls: 9)
    Refinement sat check:                              5.746s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.005s
  ARG update:                                          0.050s

Length of refined path (in blocks):                      10 (count: 9, min: 1, max: 2, avg: 1.11)
Number of affected states:                                1 (count: 9, min: 0, max: 1, avg: 0.11)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         1 (count: 9, min: 0, max: 1, avg: 0.11)
Length (states) of path with itp 'false':                 0 (count: 9, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 9, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 38665
Max. size of reached set after ref.:  30881
Avg. size of reached set before ref.: 21456.33
Avg. size of reached set after ref.:  20590.56

Total time for CEGAR algorithm:      25.797s
Time for refinements:                 7.208s
Average time for refinement:          0.800s
Max time for refinement:              2.696s

Code Coverage
-----------------------------
  Function coverage:      0.653
  Visited lines:          1099
  Total lines:            1722
  Line coverage:          0.638
  Visited conditions:     610
  Total conditions:       756
  Condition coverage:     0.807

CPAchecker general statistics
-----------------------------
Number of program locations:     2261
Number of CFA edges:             2762
Number of relevant variables:    299
Number of functions:             72
Number of loops:                 9
Size of reached set:             62073
  Number of reached locations:   1200 (53%)
    Avg states per location:     51
    Max states per location:     356 (at node N1866)
  Number of reached functions:   47 (65%)
  Number of partitions:          62070
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N187 (before lines 303-331), Function cleanup called from node N6, stack depth 4 [55a7f0af], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          2.741s
  Time for loading CPAs:          0.519s
  Time for loading parser:        0.494s
  Time for CFA construction:      1.618s
    Time for parsing file(s):     0.473s
    Time for AST to CFA:          0.488s
    Time for CFA sanity check:    0.165s
    Time for post-processing:     0.368s
      Time for var class.:        0.208s
Time for Analysis:               25.798s
CPU time for analysis:           25.790s
Time for analyzing result:        0.048s
Total time for CPAchecker:       28.542s
Total CPU time for CPAchecker:   28.540s
Time for statistics:              0.685s

Time for Garbage Collector:       1.278s (in 50 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                131MB (   125 MiB) max;     76MB (    73 MiB) avg;    143MB (   137 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     32MB (    31 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           147MB (   140 MiB) max;    135MB (   129 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8277MB (  7893 MiB) max;   8197MB (  7817 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
