scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec3_product26_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yrh8ybat/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 592: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 765: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 774: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 808: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 817: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 857: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 937: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 950: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1302: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1336: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2028: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2348: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2508: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2744: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3055: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3095: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3134: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3173: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3217: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2185: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            28 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            5 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (82%)
  Times precision was empty:       10 (36%)
  Times precision was {false}:     14 (50%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4 (14%)
  Times result was 'false':        14 (50%)
Number of strengthen sat checks:   0
Number of coverage checks:         34385
  BDD entailment checks:           3
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3998
Number of predicates discovered:          4
Number of abstraction locations:          2
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         26
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 1.44
Number of irrelevant predicates:          14 (54%)
Number of preds handled by boolean abs:   12 (46%)
  Total number of models for allsat:      8
  Max number of models for allsat:        4
  Avg number of models for allsat:        2.00

Time for post operator:                  3.747s
  Time for path formula creation:        3.613s
Time for strengthen operator:            0.160s
Time for prec operator:                  8.324s
  Time for abstraction:                  8.217s (Max:     2.228s, Count: 28)
    Boolean abstraction:                 2.639s
    Solving time:                        6.227s (Max:     1.596s)
    Model enumeration time:              0.524s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 1.063s
Time for coverage check:                 0.004s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     6.752s

Number of path formula cache hits:   12560 (15%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.478s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               222
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          40 (count: 135, min: 0, max: 15, avg: 0.30)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.291s
Automaton transfers with branching:                0
Automaton transfer successors:                        83035 (count: 83035, min: 1, max: 1, avg: 1.00) [1 x 83035]

CPA algorithm statistics
------------------------
Number of iterations:            62055
Max size of waitlist:            17
Average size of waitlist:        9
Number of computed successors:   79265
Max successors for one state:    2
Number of times merged:          17191
Number of times stopped:         17191
Number of times breaked:         9

Total time for CPA algorithm:        17.966s (Max:     7.306s)
  Time for choose from waitlist:      0.163s
  Time for precision adjustment:      9.145s
  Time for transfer relation:         5.610s
  Time for merge operator:            1.703s
  Time for stop operator:             0.234s
  Time for adding to reached set:     0.273s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                  10 (count: 9, min: 1, max: 2, avg: 1.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.898s
  Counterexample analysis:                             7.582s (Max:     3.454s, Calls: 9)
    Refinement sat check:                              6.970s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.002s
  ARG update:                                          0.088s

Length of refined path (in blocks):                      10 (count: 9, min: 1, max: 2, avg: 1.11)
Number of affected states:                                1 (count: 9, min: 0, max: 1, avg: 0.11)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         1 (count: 9, min: 0, max: 1, avg: 0.11)
Length (states) of path with itp 'false':                 0 (count: 9, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 9, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 38665
Max. size of reached set after ref.:  30881
Avg. size of reached set before ref.: 21456.33
Avg. size of reached set after ref.:  20590.56

Total time for CEGAR algorithm:      26.808s
Time for refinements:                 8.642s
Average time for refinement:          0.960s
Max time for refinement:              3.778s

Code Coverage
-----------------------------
  Function coverage:      0.653
  Visited lines:          1099
  Total lines:            1722
  Line coverage:          0.638
  Visited conditions:     610
  Total conditions:       756
  Condition coverage:     0.807

CPAchecker general statistics
-----------------------------
Number of program locations:     2261
Number of CFA edges:             2762
Number of relevant variables:    299
Number of functions:             72
Number of loops:                 9
Size of reached set:             54268
  Number of reached locations:   1200 (53%)
    Avg states per location:     45
    Max states per location:     309 (at node N1866)
  Number of reached functions:   47 (65%)
  Number of partitions:          54266
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N187 (before lines 303-331), Function cleanup called from node N6, stack depth 4 [693676d], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        2

Time for analysis setup:          3.009s
  Time for loading CPAs:          0.586s
  Time for loading parser:        0.522s
  Time for CFA construction:      1.724s
    Time for parsing file(s):     0.510s
    Time for AST to CFA:          0.488s
    Time for CFA sanity check:    0.178s
    Time for post-processing:     0.408s
      Time for var class.:        0.220s
Time for Analysis:               26.808s
CPU time for analysis:           26.810s
Total time for CPAchecker:       29.821s
Total CPU time for CPAchecker:   29.820s
Time for statistics:              0.640s

Time for Garbage Collector:       1.204s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                122MB (   117 MiB) max;     77MB (    73 MiB) avg;    136MB (   130 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     32MB (    31 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           152MB (   145 MiB) max;    131MB (   125 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8277MB (  7893 MiB) max;   8196MB (  7816 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
