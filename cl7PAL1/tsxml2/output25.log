scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec14_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_s6ww0hfk/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1069: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1185: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1208: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1250: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1289: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1408: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1581: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1590: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1624: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1633: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1673: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1753: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1766: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2118: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2158: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2187: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2221: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2336: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2923: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2943: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 860: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            25 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            9 (36%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (64%)
  Times precision was empty:       6 (24%)
  Times precision was {false}:     11 (44%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8 (32%)
  Times result was 'false':        11 (44%)
Number of strengthen sat checks:   0
Number of coverage checks:         37705
  BDD entailment checks:           21
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3789
Number of predicates discovered:          21
Number of abstraction locations:          2
Max number of predicates per location:    20
Avg number of predicates per location:    10
Total predicates per abstraction:         171
Max number of predicates per abstraction: 20
Avg number of predicates per abstraction: 9.00
Number of irrelevant predicates:          11 (6%)
Number of preds handled by boolean abs:   160 (94%)
  Total number of models for allsat:      193
  Max number of models for allsat:        66
  Avg number of models for allsat:        24.13

Time for post operator:                  3.054s
  Time for path formula creation:        2.954s
Time for strengthen operator:            0.125s
Time for prec operator:                 12.467s
  Time for abstraction:                 12.340s (Max:     2.204s, Count: 25)
    Boolean abstraction:                 8.470s
    Solving time:                        5.385s (Max:     1.582s)
    Model enumeration time:              5.828s
    Time for BDD construction:           0.017s (Max:     0.004s)
Time for merge operator:                 0.930s
Time for coverage check:                 0.002s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):    11.214s

Number of path formula cache hits:   9261 (10%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.867s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               5151
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         765 (count: 461, min: 0, max: 146, avg: 1.66)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.254s
Automaton transfers with branching:                0
Automaton transfer successors:                        92055 (count: 92055, min: 1, max: 1, avg: 1.00) [1 x 92055]

CPA algorithm statistics
------------------------
Number of iterations:            67797
Max size of waitlist:            16
Average size of waitlist:        8
Number of computed successors:   86655
Max successors for one state:    2
Number of times merged:          18842
Number of times stopped:         18842
Number of times breaked:         5

Total time for CPA algorithm:        20.729s (Max:    12.978s)
  Time for choose from waitlist:      0.069s
  Time for precision adjustment:     13.200s
  Time for transfer relation:         4.814s
  Time for merge operator:            1.422s
  Time for stop operator:             0.218s
  Time for adding to reached set:     0.295s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                   6 (count: 5, min: 1, max: 2, avg: 1.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.418s
  Counterexample analysis:                             5.237s (Max:     2.269s, Calls: 5)
    Refinement sat check:                              4.945s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.001s
  ARG update:                                          0.032s

Length of refined path (in blocks):                       6 (count: 5, min: 1, max: 2, avg: 1.20)
Number of affected states:                                1 (count: 5, min: 0, max: 1, avg: 0.20)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         1 (count: 5, min: 0, max: 1, avg: 0.20)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 5, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 28059
Max. size of reached set after ref.:  22393
Avg. size of reached set before ref.: 16810.00
Avg. size of reached set after ref.:  15676.00

Total time for CEGAR algorithm:      26.800s
Time for refinements:                 5.965s
Average time for refinement:          1.193s
Max time for refinement:              2.504s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          1045
  Total lines:            1692
  Line coverage:          0.618
  Visited conditions:     584
  Total conditions:       718
  Condition coverage:     0.813

CPAchecker general statistics
-----------------------------
Number of program locations:     2208
Number of CFA edges:             2684
Number of relevant variables:    319
Number of functions:             75
Number of loops:                 9
Size of reached set:             62132
  Number of reached locations:   1165 (53%)
    Avg states per location:     53
    Max states per location:     761 (at node N39)
  Number of reached functions:   50 (67%)
  Number of partitions:          62126
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N2466 (before lines 3090-3118), Function cleanup called from node N2635, stack depth 4 [751b901a], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        2

Time for analysis setup:          3.028s
  Time for loading CPAs:          0.611s
  Time for loading parser:        0.462s
  Time for CFA construction:      1.773s
    Time for parsing file(s):     0.514s
    Time for AST to CFA:          0.550s
    Time for CFA sanity check:    0.193s
    Time for post-processing:     0.391s
      Time for var class.:        0.208s
Time for Analysis:               26.811s
CPU time for analysis:           26.800s
Total time for CPAchecker:       29.847s
Total CPU time for CPAchecker:   29.840s
Time for statistics:              0.588s

Time for Garbage Collector:       1.093s (in 44 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                120MB (   114 MiB) max;     75MB (    71 MiB) avg;    145MB (   139 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     33MB (    31 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           184MB (   176 MiB) max;    136MB (   130 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8271MB (  7888 MiB) max;   8204MB (  7824 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
