scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product09_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2zbimtbx/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 399: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 480: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 519: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 823: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1059: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1370: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1382: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1405: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1490: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1643: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1686: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1695: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1735: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2180: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2214: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2270: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3176: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3013: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            203 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            94 (46%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         109 (54%)
  Times precision was empty:       3 (1%)
  Times precision was {false}:     108 (53%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      92 (45%)
  Times result was 'false':        100 (49%)
Number of strengthen sat checks:   0
Number of coverage checks:         174388
  BDD entailment checks:           994
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       886
Number of predicates discovered:          88
Number of abstraction locations:          2
Max number of predicates per location:    87
Avg number of predicates per location:    44
Total predicates per abstraction:         4367
Max number of predicates per abstraction: 87
Avg number of predicates per abstraction: 21.84
Number of irrelevant predicates:          108 (2%)
Number of preds handled by boolean abs:   4259 (98%)
  Total number of models for allsat:      36418
  Max number of models for allsat:        1605
  Avg number of models for allsat:        395.85

Time for post operator:                  8.856s
  Time for path formula creation:        8.370s
Time for strengthen operator:            0.582s
Time for prec operator:                269.686s
  Time for abstraction:                269.007s (Max:    10.388s, Count: 203)
    Boolean abstraction:               264.528s
    Solving time:                       17.441s (Max:     0.329s)
    Model enumeration time:            237.687s
    Time for BDD construction:           9.541s (Max:     0.862s)
Time for merge operator:                 2.520s
Time for coverage check:                 0.086s
  Time for BDD entailment checks:        0.072s
Total time for SMT solver (w/o itp):   255.128s

Number of path formula cache hits:   257265 (56%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.828s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               160391
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       30619 (count: 14519, min: 0, max: 3029, avg: 2.11)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.267s (in 51 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.962s
  Time for transition matches:                         0.419s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       415582 (count: 415582, min: 1, max: 1, avg: 1.00) [1 x 415582]

CPA algorithm statistics
------------------------
Number of iterations:            308996
Max size of waitlist:            55
Average size of waitlist:        19
Number of computed successors:   395880
Max successors for one state:    2
Number of times merged:          86697
Number of times stopped:         86707
Number of times breaked:         10

Total time for CPA algorithm:       296.389s (Max:   223.465s)
  Time for choose from waitlist:      0.256s
  Time for precision adjustment:    272.954s
  Time for transfer relation:        15.420s
  Time for merge operator:            4.248s
  Time for stop operator:             0.804s
  Time for adding to reached set:     1.000s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                  31 (count: 10, min: 2, max: 6, avg: 3.10)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.897s
  Counterexample analysis:                             7.624s (Max:     2.102s, Calls: 10)
    Refinement sat check:                              6.870s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.027s
  Precision update:                                    0.014s
  ARG update:                                          1.077s

Length of refined path (in blocks):                      31 (count: 10, min: 2, max: 6, avg: 3.10)
Number of affected states:                               21 (count: 10, min: 1, max: 5, avg: 2.10)
Length (states) of path with itp 'true':                  0 (count: 10, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        21 (count: 10, min: 1, max: 5, avg: 2.10)
Length (states) of path with itp 'false':                 0 (count: 10, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:          11 (count: 10, min: 0, max: 4, avg: 1.10)
Equal non-trivial interpolants along paths:               0 (count: 10, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 150666
Max. size of reached set after ref.:  3698
Avg. size of reached set before ref.: 32382.30
Avg. size of reached set after ref.:  3698.00

Total time for CEGAR algorithm:     306.279s
Time for refinements:                 9.858s
Average time for refinement:          0.985s
Max time for refinement:              2.704s

Code Coverage
-----------------------------
  Function coverage:      0.586
  Visited lines:          989
  Total lines:            1683
  Line coverage:          0.588
  Visited conditions:     594
  Total conditions:       750
  Condition coverage:     0.792

CPAchecker general statistics
-----------------------------
Number of program locations:     2209
Number of CFA edges:             2694
Number of relevant variables:    284
Number of functions:             70
Number of loops:                 9
Size of reached set:             22231
  Number of reached locations:   1126 (51%)
    Avg states per location:     19
    Max states per location:     151 (at node N531)
  Number of reached functions:   41 (59%)
  Number of partitions:          22227
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N106 (before lines 188-216), Function cleanup called from node N2563, stack depth 4 [f5c79a6], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          4.496s
  Time for loading CPAs:          0.949s
  Time for loading parser:        0.769s
  Time for CFA construction:      2.565s
    Time for parsing file(s):     0.738s
    Time for AST to CFA:          0.789s
    Time for CFA sanity check:    0.269s
    Time for post-processing:     0.566s
      Time for var class.:        0.307s
Time for Analysis:              306.280s
CPU time for analysis:          306.270s
Time for analyzing result:        0.028s
Total time for CPAchecker:      310.782s
Total CPU time for CPAchecker:  310.760s
Time for statistics:              0.427s

Time for Garbage Collector:       4.373s (in 119 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                259MB (   247 MiB) max;    144MB (   137 MiB) avg;    268MB (   256 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     34MB (    33 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           287MB (   273 MiB) max;    215MB (   205 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8278MB (  7895 MiB) max;   8187MB (  7807 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
