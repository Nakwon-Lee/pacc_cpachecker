scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ntdrivers/parport_true-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xe31vulk/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6182: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6183: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6184: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6233: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6257: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6269: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6710: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6711: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6712: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6775: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6855: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6867: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 8251: Dereferencing of non-pointer type PULONG  in expression *ParameterValue (ASTConverter.convert, WARNING)

line 8262: Dereferencing of non-pointer type PULONG  in expression *ParameterValue (ASTConverter.convert, WARNING)

line 8573: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8574: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8582: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8583: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8591: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 9113: Dereferencing of non-pointer type PULONG  in expression *PortNumber (ASTConverter.convert, WARNING)

line 9408: Dereferencing of non-pointer type PULONG  in expression *PRegFlags (ASTConverter.convert, WARNING)

line 9438: Dereferencing of non-pointer type PULONG  in expression *InstanceLengthArray (ASTConverter.convert, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function IoAcquireCancelSpinLock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function WRITE_PORT_UCHAR to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function KeSynchronizeExecution to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function KeStallExecutionProcessor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function READ_PORT_UCHAR to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function KeQueryTimeIncrement to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function KeQueryTickCount to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5494-5495: Ignoring function call through function pointer *(Extension->ChipInfo.ParChipClearMode): Status = (*(Extension->ChipInfo.ParChipClearMode))(Extension->ChipInfo.Context, ChipMode); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 5406-5407: Ignoring function call through function pointer *(Extension->ChipInfo.ParChipSetMode): Status = (*(Extension->ChipInfo.ParChipSetMode))(Extension->ChipInfo.Context, ChipMode); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: lines 5406-5407: Unsupported feature (recursion): Status = PptSetChipMode(Extension->ChipInfo.Context, ChipMode); (line was originally pointer call(PptSetChipMode) Status = (*(Extension->ChipInfo.ParChipSetMode))(Extension->ChipInfo.Context,
                                                     ChipMode);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            1824 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1481 (81%)
  Because of loop head:            333 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (1%)
  Times precision was empty:       1361 (75%)
  Times precision was {false}:     32 (2%)
  Times result was cached:         362 (20%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      69 (4%)
  Times result was 'false':        25 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         2361
  BDD entailment checks:           635
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       44
Number of predicates discovered:          6
Number of abstraction locations:          38
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         569
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 5.63
Number of irrelevant predicates:          150 (26%)
Number of preds handled by boolean abs:   84 (15%)
  Total number of models for allsat:      77
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.12

Time for post operator:                  1.768s
  Time for path formula creation:        1.680s
Time for strengthen operator:            0.067s
Time for prec operator:                  0.822s
  Time for abstraction:                  0.626s (Max:     0.024s, Count: 1824)
    Boolean abstraction:                 0.140s
    Solving time:                        0.112s (Max:     0.011s)
    Model enumeration time:              0.010s
    Time for BDD construction:           0.025s (Max:     0.016s)
Time for merge operator:                 0.109s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):     0.122s

Number of path formula cache hits:   15307 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.446s

Total number of created targets for pointer analysis: 125
   Number of created targets for uf: *(struct__LIST_ENTRY)* is 3
   Number of created targets for uf: *unsigned_char is 7
   Number of created targets for uf: *signed_long_int is 4
   Number of created targets for uf: *signed_long_long_int is 10
   Number of created targets for uf: *unsigned_long_int is 19


Number of BDD nodes:                               211
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         174 (count: 2594, min: 0, max: 62, avg: 0.07)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.247s
Automaton transfers with branching:                0
Automaton transfer successors:                        17829 (count: 17829, min: 1, max: 1, avg: 1.00) [1 x 17829]

CPA algorithm statistics
------------------------
Number of iterations:            9804
Max size of waitlist:            63
Average size of waitlist:        39
Number of computed successors:   11418
Max successors for one state:    2
Number of times merged:          863
Number of times stopped:         1401
Number of times breaked:         10

Total time for CPA algorithm:         5.092s (Max:     1.938s)
  Time for choose from waitlist:      0.082s
  Time for precision adjustment:      1.218s
  Time for transfer relation:         3.024s
  Time for merge operator:            0.249s
  Time for stop operator:             0.128s
  Time for adding to reached set:     0.127s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                 237 (count: 10, min: 9, max: 37, avg: 23.70)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.322s
  Counterexample analysis:                             0.195s (Max:     0.034s, Calls: 10)
    Refinement sat check:                              0.108s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.008s
  ARG update:                                          0.086s

Length of refined path (in blocks):                     221 (count: 10, min: 8, max: 34, avg: 22.10)
Number of affected states:                              139 (count: 10, min: 4, max: 20, avg: 13.90)
Length (states) of path with itp 'true':                 72 (count: 10, min: 3, max: 17, avg: 7.20)
Length (states) of path with itp non-trivial itp:       139 (count: 10, min: 4, max: 20, avg: 13.90)
Length (states) of path with itp 'false':                10 (count: 10, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           6 (count: 10, min: 0, max: 2, avg: 0.60)
Equal non-trivial interpolants along paths:             123 (count: 10, min: 3, max: 19, avg: 12.30)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 1986
Max. size of reached set after ref.:  1854
Avg. size of reached set before ref.: 1306.70
Avg. size of reached set after ref.:  529.10

Total time for CEGAR algorithm:       5.529s
Time for refinements:                 0.433s
Average time for refinement:          0.043s
Max time for refinement:              0.080s

Code Coverage
-----------------------------
  Function coverage:      0.187
  Visited lines:          1325
  Total lines:            4105
  Line coverage:          0.323
  Visited conditions:     272
  Total conditions:       1064
  Condition coverage:     0.256

CPAchecker general statistics
-----------------------------
Number of program locations:     5534
Number of CFA edges:             6160
Number of relevant variables:    805
Number of functions:             182
Number of loops:                 37
Size of reached set:             2217
  Number of reached locations:   679 (12%)
    Avg states per location:     3
    Max states per location:     36 (at node N4472)
  Number of reached functions:   34 (19%)
  Number of partitions:          2212
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1007 (before line 3916), Function PptTrySelectDevice called from node N806, stack depth 3 [3cc74fc4], stack [main, PptDispatchInternalDeviceControl, PptTrySelectDevice]])
  Number of target states:       0
  Size of final wait list        39

Time for analysis setup:          6.479s
  Time for loading CPAs:          1.035s
  Time for loading parser:        0.756s
  Time for CFA construction:      4.519s
    Time for parsing file(s):     1.072s
    Time for AST to CFA:          1.599s
    Time for CFA sanity check:    0.411s
    Time for post-processing:     1.194s
      Time for var class.:        0.691s
Time for Analysis:                5.529s
CPU time for analysis:            5.530s
Total time for CPAchecker:       12.013s
Total CPU time for CPAchecker:   12.000s
Time for statistics:              0.151s

Time for Garbage Collector:       0.260s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     39MB (    37 MiB) avg;     71MB (    68 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     29MB (    28 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8098MB (  7723 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
