scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ntdrivers/parport_true-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_o348fj_5/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6182: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6183: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6184: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6233: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6257: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6269: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6710: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6711: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6712: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6775: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6855: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6867: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 8251: Dereferencing of non-pointer type PULONG  in expression *ParameterValue (ASTConverter.convert, WARNING)

line 8262: Dereferencing of non-pointer type PULONG  in expression *ParameterValue (ASTConverter.convert, WARNING)

line 8573: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8574: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8582: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8583: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8591: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 9113: Dereferencing of non-pointer type PULONG  in expression *PortNumber (ASTConverter.convert, WARNING)

line 9408: Dereferencing of non-pointer type PULONG  in expression *PRegFlags (ASTConverter.convert, WARNING)

line 9438: Dereferencing of non-pointer type PULONG  in expression *InstanceLengthArray (ASTConverter.convert, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function IoAcquireCancelSpinLock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedIncrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function IoReleaseRemoveLockEx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedDecrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function IoDisconnectInterrupt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function PoRequestPowerIrp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function PoSetPowerState(Extension->DeviceObject, powerType, powerState) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function IoWMIRegistrationControl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function IoReleaseRemoveLockAndWaitEx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            24458 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  22689 (93%)
  Because of loop head:            1439 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         330 (1%)
  Times precision was empty:       2971 (12%)
  Times precision was {false}:     348 (1%)
  Times result was cached:         20162 (82%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      977 (4%)
  Times result was 'false':        5822 (24%)
Number of strengthen sat checks:   0
Number of coverage checks:         24556
  BDD entailment checks:           3316
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       44
Number of predicates discovered:          56
Number of abstraction locations:          108
Max number of predicates per location:    14
Avg number of predicates per location:    4
Total predicates per abstraction:         71296
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 53.81
Number of irrelevant predicates:          27573 (39%)
Number of preds handled by boolean abs:   3217 (5%)
  Total number of models for allsat:      2894
  Max number of models for allsat:        122
  Avg number of models for allsat:        2.96

Time for post operator:                  2.003s
  Time for path formula creation:        1.848s
Time for strengthen operator:            0.209s
Time for prec operator:                  9.971s
  Time for abstraction:                  9.335s (Max:     0.039s, Count: 24458)
    Boolean abstraction:                 1.729s
    Solving time:                        1.229s (Max:     0.016s)
    Model enumeration time:              0.331s
    Time for BDD construction:           0.225s (Max:     0.029s)
Time for merge operator:                 0.216s
Time for coverage check:                 0.027s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     1.560s

Number of path formula cache hits:   186831 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.323s

Total number of created targets for pointer analysis: 57
   Number of created targets for uf: *unsigned_long_int is 2
   Number of created targets for uf: *(struct__IO_STACK_LOCATION)* is 12


Number of BDD nodes:                               7357
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4751 (count: 15459, min: 0, max: 566, avg: 0.31)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.625s
  Time for transition matches:                         0.316s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                       165812 (count: 165938, min: 0, max: 1, avg: 1.00) [0 x 126, 1 x 165812]

CPA algorithm statistics
------------------------
Number of iterations:            111178
Max size of waitlist:            30
Average size of waitlist:        13
Number of computed successors:   131106
Max successors for one state:    2
Number of times merged:          10620
Number of times stopped:         12840
Number of times breaked:         330

Total time for CPA algorithm:        18.669s (Max:     0.483s)
  Time for choose from waitlist:      0.163s
  Time for precision adjustment:     11.238s
  Time for transfer relation:         5.200s
  Time for merge operator:            0.526s
  Time for stop operator:             0.346s
  Time for adding to reached set:     0.384s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   330
Avg. length of target path (in blocks):                7342 (count: 330, min: 4, max: 28, avg: 22.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.025s
  Counterexample analysis:                             4.232s (Max:     0.046s, Calls: 330)
    Refinement sat check:                              2.794s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.016s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.113s
  Precision update:                                    0.219s
  ARG update:                                          0.270s

Length of refined path (in blocks):                    6353 (count: 329, min: 3, max: 25, avg: 19.31)
Number of affected states:                             2211 (count: 329, min: 1, max: 24, avg: 6.72)
Length (states) of path with itp 'true':               3813 (count: 329, min: 0, max: 21, avg: 11.59)
Length (states) of path with itp non-trivial itp:      2211 (count: 329, min: 1, max: 24, avg: 6.72)
Length (states) of path with itp 'false':               329 (count: 329, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         193 (count: 329, min: 0, max: 5, avg: 0.59)
Equal non-trivial interpolants along paths:            1689 (count: 329, min: 0, max: 20, avg: 5.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                330
Number of successful refinements:     329
Number of failed refinements:         0
Max. size of reached set before ref.: 1901
Max. size of reached set after ref.:  1832
Avg. size of reached set before ref.: 1392.69
Avg. size of reached set after ref.:  1055.14

Total time for CEGAR algorithm:      24.496s
Time for refinements:                 5.568s
Average time for refinement:          0.016s
Max time for refinement:              0.056s

Code Coverage
-----------------------------
  Function coverage:      0.236
  Visited lines:          1057
  Total lines:            4105
  Line coverage:          0.257
  Visited conditions:     172
  Total conditions:       1064
  Condition coverage:     0.162

CPAchecker general statistics
-----------------------------
Number of program locations:     5534
Number of CFA edges:             6160
Number of relevant variables:    805
Number of functions:             182
Number of loops:                 37
Size of reached set:             1848
  Number of reached locations:   539 (10%)
    Avg states per location:     3
    Max states per location:     13 (at node N51)
  Number of reached functions:   43 (24%)
  Number of partitions:          1836
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N4927 (before line 9594), Function main called from node N4843, stack depth 1 [4c2af006], stack [main]])
  Number of target states:       1
  Size of final wait list        11

Time for analysis setup:          5.783s
  Time for loading CPAs:          0.933s
  Time for loading parser:        0.631s
  Time for CFA construction:      4.069s
    Time for parsing file(s):     1.007s
    Time for AST to CFA:          1.426s
    Time for CFA sanity check:    0.370s
    Time for post-processing:     1.038s
      Time for var class.:        0.608s
Time for Analysis:               24.496s
CPU time for analysis:           24.490s
Total time for CPAchecker:       30.283s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.129s

Time for Garbage Collector:       0.507s (in 66 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    66 MiB) max;     47MB (    45 MiB) avg;     73MB (    70 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
