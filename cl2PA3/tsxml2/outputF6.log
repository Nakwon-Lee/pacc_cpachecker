scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ntdrivers/parport_true-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_a5f74rpz/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6182: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6183: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6184: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6233: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6257: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6269: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6710: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6711: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6712: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6775: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6855: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6867: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 8251: Dereferencing of non-pointer type PULONG  in expression *ParameterValue (ASTConverter.convert, WARNING)

line 8262: Dereferencing of non-pointer type PULONG  in expression *ParameterValue (ASTConverter.convert, WARNING)

line 8573: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8574: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8582: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8583: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8591: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 9113: Dereferencing of non-pointer type PULONG  in expression *PortNumber (ASTConverter.convert, WARNING)

line 9408: Dereferencing of non-pointer type PULONG  in expression *PRegFlags (ASTConverter.convert, WARNING)

line 9438: Dereferencing of non-pointer type PULONG  in expression *InstanceLengthArray (ASTConverter.convert, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function IoAcquireCancelSpinLock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedIncrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function IoReleaseRemoveLockEx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedDecrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function IoDisconnectInterrupt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function PoRequestPowerIrp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function PoSetPowerState(Extension->DeviceObject, powerType, powerState) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function IoWMIRegistrationControl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function IoReleaseRemoveLockAndWaitEx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ObfReferenceObject to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function PoSetPowerState(Extension->DeviceObject, powerType, powerState) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function WRITE_PORT_UCHAR to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function KeSynchronizeExecution to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function IoConnectInterrupt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function KeStallExecutionProcessor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5494-5495: Ignoring function call through function pointer *(Extension->ChipInfo.ParChipClearMode): Status = (*(Extension->ChipInfo.ParChipClearMode))(Extension->ChipInfo.Context, ChipMode); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: lines 5494-5495: Unsupported feature (recursion): Status = PptClearChipMode(Extension->ChipInfo.Context, ChipMode); (line was originally pointer call(PptClearChipMode) Status = (*(Extension->ChipInfo.ParChipClearMode))(Extension->ChipInfo.Context,
                                                       ChipMode);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            73490 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  64622 (88%)
  Because of loop head:            8108 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         760 (1%)
  Times precision was empty:       3460 (5%)
  Times precision was {false}:     577 (1%)
  Times result was cached:         67751 (92%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1702 (2%)
  Times result was 'false':        20223 (28%)
Number of strengthen sat checks:   0
Number of coverage checks:         90823
  BDD entailment checks:           13541
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       44
Number of predicates discovered:          76
Number of abstraction locations:          138
Max number of predicates per location:    17
Avg number of predicates per location:    6
Total predicates per abstraction:         332574
Max number of predicates per abstraction: 17
Avg number of predicates per abstraction: 145.93
Number of irrelevant predicates:          101510 (31%)
Number of preds handled by boolean abs:   6954 (2%)
  Total number of models for allsat:      6492
  Max number of models for allsat:        122
  Avg number of models for allsat:        3.81

Time for post operator:                  3.257s
  Time for path formula creation:        2.966s
Time for strengthen operator:            0.551s
Time for prec operator:                 24.801s
  Time for abstraction:                 23.570s (Max:     0.064s, Count: 73490)
    Boolean abstraction:                 3.265s
    Solving time:                        2.275s (Max:     0.025s)
    Model enumeration time:              0.716s
    Time for BDD construction:           0.387s (Max:     0.013s)
Time for merge operator:                 0.234s
Time for coverage check:                 0.075s
  Time for BDD entailment checks:        0.056s
Total time for SMT solver (w/o itp):     2.991s

Number of path formula cache hits:   620688 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.778s

Total number of created targets for pointer analysis: 87
   Number of created targets for uf: *signed_long_int is 2
   Number of created targets for uf: *unsigned_long_int is 3
   Number of created targets for uf: *(struct__IO_STACK_LOCATION)* is 2


Number of BDD nodes:                               15721
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8811 (count: 35860, min: 0, max: 450, avg: 0.25)
Time for BDD node cleanup:                             0.027s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.243s
  Time for transition matches:                         0.550s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.012s
Automaton transfers with branching:                0
Automaton transfer successors:                       542139 (count: 542511, min: 0, max: 1, avg: 1.00) [0 x 372, 1 x 542139]

CPA algorithm statistics
------------------------
Number of iterations:            362569
Max size of waitlist:            30
Average size of waitlist:        12
Number of computed successors:   432136
Max successors for one state:    2
Number of times merged:          38641
Number of times stopped:         46777
Number of times breaked:         760

Total time for CPA algorithm:        42.528s (Max:     0.618s)
  Time for choose from waitlist:      0.216s
  Time for precision adjustment:     27.964s
  Time for transfer relation:        10.296s
  Time for merge operator:            0.970s
  Time for stop operator:             0.687s
  Time for adding to reached set:     0.829s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   760
Avg. length of target path (in blocks):               17097 (count: 760, min: 4, max: 31, avg: 22.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  10.449s
  Counterexample analysis:                             8.844s (Max:     0.042s, Calls: 760)
    Refinement sat check:                              6.012s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.151s
  Precision update:                                    0.543s
  ARG update:                                          0.655s

Length of refined path (in blocks):                   14778 (count: 760, min: 3, max: 30, avg: 19.44)
Number of affected states:                             4239 (count: 760, min: 1, max: 28, avg: 5.58)
Length (states) of path with itp 'true':               9779 (count: 760, min: 0, max: 21, avg: 12.87)
Length (states) of path with itp non-trivial itp:      4239 (count: 760, min: 1, max: 28, avg: 5.58)
Length (states) of path with itp 'false':               760 (count: 760, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         229 (count: 760, min: 0, max: 6, avg: 0.30)
Equal non-trivial interpolants along paths:            3250 (count: 760, min: 0, max: 25, avg: 4.28)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                760
Number of successful refinements:     760
Number of failed refinements:         0
Max. size of reached set before ref.: 3814
Max. size of reached set after ref.:  3623
Avg. size of reached set before ref.: 2369.68
Avg. size of reached set after ref.:  1894.07

Total time for CEGAR algorithm:      55.150s
Time for refinements:                11.787s
Average time for refinement:          0.015s
Max time for refinement:              0.086s

Code Coverage
-----------------------------
  Function coverage:      0.313
  Visited lines:          1562
  Total lines:            4105
  Line coverage:          0.381
  Visited conditions:     346
  Total conditions:       1064
  Condition coverage:     0.325

CPAchecker general statistics
-----------------------------
Number of program locations:     5534
Number of CFA edges:             6160
Number of relevant variables:    805
Number of functions:             182
Number of loops:                 37
Size of reached set:             3672
  Number of reached locations:   968 (17%)
    Avg states per location:     3
    Max states per location:     39 (at node N241)
  Number of reached functions:   57 (31%)
  Number of partitions:          3642
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N4927 (before line 9594), Function main called from node N4843, stack depth 1 [4c2af006], stack [main]])
  Number of target states:       0
  Size of final wait list        21

Time for analysis setup:          6.250s
  Time for loading CPAs:          1.149s
  Time for loading parser:        0.715s
  Time for CFA construction:      4.182s
    Time for parsing file(s):     0.962s
    Time for AST to CFA:          1.518s
    Time for CFA sanity check:    0.427s
    Time for post-processing:     1.071s
      Time for var class.:        0.604s
Time for Analysis:               55.150s
CPU time for analysis:           55.150s
Total time for CPAchecker:       61.405s
Total CPU time for CPAchecker:   61.390s
Time for statistics:              0.162s

Time for Garbage Collector:       1.410s (in 221 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    70 MiB) max;     50MB (    48 MiB) avg;     76MB (    72 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     37MB (    35 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8078MB (  7704 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
