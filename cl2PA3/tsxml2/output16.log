scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ntdrivers/parport_true-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_atnt1nti/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6182: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6183: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6184: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6233: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6257: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6269: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6710: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6711: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6712: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6775: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6855: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6867: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 8251: Dereferencing of non-pointer type PULONG  in expression *ParameterValue (ASTConverter.convert, WARNING)

line 8262: Dereferencing of non-pointer type PULONG  in expression *ParameterValue (ASTConverter.convert, WARNING)

line 8573: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8574: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8582: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8583: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8591: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 9113: Dereferencing of non-pointer type PULONG  in expression *PortNumber (ASTConverter.convert, WARNING)

line 9408: Dereferencing of non-pointer type PULONG  in expression *PRegFlags (ASTConverter.convert, WARNING)

line 9438: Dereferencing of non-pointer type PULONG  in expression *InstanceLengthArray (ASTConverter.convert, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function IoAcquireCancelSpinLock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function IoDisconnectInterrupt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function KeSynchronizeExecution to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5494-5495: Ignoring function call through function pointer *(Extension->ChipInfo.ParChipClearMode): Status = (*(Extension->ChipInfo.ParChipClearMode))(Extension->ChipInfo.Context, ChipMode); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: lines 5494-5495: Unsupported feature (recursion): Status = PptClearChipMode(Extension->ChipInfo.Context, ChipMode); (line was originally pointer call(PptClearChipMode) Status = (*(Extension->ChipInfo.ParChipClearMode))(Extension->ChipInfo.Context,
                                                       ChipMode);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            1735 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1511 (87%)
  Because of loop head:            196 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         28 (2%)
  Times precision was empty:       684 (39%)
  Times precision was {false}:     162 (9%)
  Times result was cached:         702 (40%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      187 (11%)
  Times result was 'false':        378 (22%)
Number of strengthen sat checks:   0
Number of coverage checks:         2910
  BDD entailment checks:           198
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       44
Number of predicates discovered:          28
Number of abstraction locations:          33
Max number of predicates per location:    10
Avg number of predicates per location:    4
Total predicates per abstraction:         3120
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 8.94
Number of irrelevant predicates:          1057 (34%)
Number of preds handled by boolean abs:   676 (22%)
  Total number of models for allsat:      435
  Max number of models for allsat:        16
  Avg number of models for allsat:        2.33

Time for post operator:                  1.109s
  Time for path formula creation:        1.012s
Time for strengthen operator:            0.071s
Time for prec operator:                  2.058s
  Time for abstraction:                  1.920s (Max:     0.033s, Count: 1735)
    Boolean abstraction:                 0.543s
    Solving time:                        0.447s (Max:     0.027s)
    Model enumeration time:              0.057s
    Time for BDD construction:           0.081s (Max:     0.011s)
Time for merge operator:                 0.091s
Time for coverage check:                 0.003s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.504s

Number of path formula cache hits:   15934 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.877s

Total number of created targets for pointer analysis: 22
   Number of created targets for uf: *unsigned_long_int is 3
   Number of created targets for uf: *(struct__IO_STACK_LOCATION)* is 2


Number of BDD nodes:                               1537
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1125 (count: 3258, min: 0, max: 408, avg: 0.35)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.162s
Automaton transfers with branching:                0
Automaton transfer successors:                        16262 (count: 16262, min: 1, max: 1, avg: 1.00) [1 x 16262]

CPA algorithm statistics
------------------------
Number of iterations:            9890
Max size of waitlist:            48
Average size of waitlist:        19
Number of computed successors:   12163
Max successors for one state:    2
Number of times merged:          1356
Number of times stopped:         1455
Number of times breaked:         28

Total time for CPA algorithm:         5.197s (Max:     0.554s)
  Time for choose from waitlist:      0.025s
  Time for precision adjustment:      2.369s
  Time for transfer relation:         2.108s
  Time for merge operator:            0.229s
  Time for stop operator:             0.059s
  Time for adding to reached set:     0.077s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   28
Avg. length of target path (in blocks):                 358 (count: 28, min: 4, max: 21, avg: 12.79)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.608s
  Counterexample analysis:                             0.463s (Max:     0.042s, Calls: 28)
    Refinement sat check:                              0.271s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.038s
  Precision update:                                    0.016s
  ARG update:                                          0.065s

Length of refined path (in blocks):                     326 (count: 28, min: 3, max: 19, avg: 11.64)
Number of affected states:                              173 (count: 28, min: 1, max: 18, avg: 6.18)
Length (states) of path with itp 'true':                125 (count: 28, min: 0, max: 10, avg: 4.46)
Length (states) of path with itp non-trivial itp:       173 (count: 28, min: 1, max: 18, avg: 6.18)
Length (states) of path with itp 'false':                28 (count: 28, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          25 (count: 28, min: 0, max: 3, avg: 0.89)
Equal non-trivial interpolants along paths:             120 (count: 28, min: 0, max: 14, avg: 4.29)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 1128
Max. size of reached set after ref.:  1063
Avg. size of reached set before ref.: 564.96
Avg. size of reached set after ref.:  237.04

Total time for CEGAR algorithm:       5.912s
Time for refinements:                 0.711s
Average time for refinement:          0.025s
Max time for refinement:              0.062s

Code Coverage
-----------------------------
  Function coverage:      0.220
  Visited lines:          1064
  Total lines:            4105
  Line coverage:          0.259
  Visited conditions:     236
  Total conditions:       1064
  Condition coverage:     0.222

CPAchecker general statistics
-----------------------------
Number of program locations:     5534
Number of CFA edges:             6160
Number of relevant variables:    805
Number of functions:             182
Number of loops:                 37
Size of reached set:             1149
  Number of reached locations:   563 (10%)
    Avg states per location:     2
    Max states per location:     12 (at node N241)
  Number of reached functions:   40 (22%)
  Number of partitions:          1141
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N4939 (before line 9609), Function main called from node N4843, stack depth 1 [4c2af006], stack [main]])
  Number of target states:       0
  Size of final wait list        47

Time for analysis setup:          5.953s
  Time for loading CPAs:          0.983s
  Time for loading parser:        0.630s
  Time for CFA construction:      4.198s
    Time for parsing file(s):     0.975s
    Time for AST to CFA:          1.482s
    Time for CFA sanity check:    0.443s
    Time for post-processing:     1.092s
      Time for var class.:        0.619s
Time for Analysis:                5.912s
CPU time for analysis:            5.920s
Total time for CPAchecker:       11.869s
Total CPU time for CPAchecker:   11.860s
Time for statistics:              0.108s

Time for Garbage Collector:       0.250s (in 15 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     40MB (    38 MiB) avg;     71MB (    68 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     29MB (    28 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8054MB (  7681 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
