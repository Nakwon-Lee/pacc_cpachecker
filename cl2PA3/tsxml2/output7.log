scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ntdrivers/parport_true-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_f_4dpnrc/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6182: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6183: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6184: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6233: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6257: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6269: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6710: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6711: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6712: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6775: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6855: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6867: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 8251: Dereferencing of non-pointer type PULONG  in expression *ParameterValue (ASTConverter.convert, WARNING)

line 8262: Dereferencing of non-pointer type PULONG  in expression *ParameterValue (ASTConverter.convert, WARNING)

line 8573: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8574: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8582: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8583: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8591: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 9113: Dereferencing of non-pointer type PULONG  in expression *PortNumber (ASTConverter.convert, WARNING)

line 9408: Dereferencing of non-pointer type PULONG  in expression *PRegFlags (ASTConverter.convert, WARNING)

line 9438: Dereferencing of non-pointer type PULONG  in expression *InstanceLengthArray (ASTConverter.convert, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function IoAcquireCancelSpinLock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function KeSynchronizeExecution to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function PoRequestPowerIrp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function PoSetPowerState(Extension->DeviceObject, powerType, powerState) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Extern function PoSetPowerState(Extension->DeviceObject, powerType, powerState) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function InterlockedDecrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedIncrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5494-5495: Ignoring function call through function pointer *(Extension->ChipInfo.ParChipClearMode): Status = (*(Extension->ChipInfo.ParChipClearMode))(Extension->ChipInfo.Context, ChipMode); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: lines 5494-5495: Unsupported feature (recursion): Status = PptClearChipMode(Extension->ChipInfo.Context, ChipMode); (line was originally pointer call(PptClearChipMode) Status = (*(Extension->ChipInfo.ParChipClearMode))(Extension->ChipInfo.Context,
                                                       ChipMode);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            554 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  536 (97%)
  Because of loop head:            6 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (2%)
  Times precision was empty:       361 (65%)
  Times precision was {false}:     25 (5%)
  Times result was cached:         148 (27%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      20 (4%)
  Times result was 'false':        30 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         590
  BDD entailment checks:           0
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       44
Number of predicates discovered:          5
Number of abstraction locations:          15
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         193
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.29
Number of irrelevant predicates:          110 (57%)
Number of preds handled by boolean abs:   20 (10%)
  Total number of models for allsat:      20
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.914s
  Time for path formula creation:        0.885s
Time for strengthen operator:            0.038s
Time for prec operator:                  0.413s
  Time for abstraction:                  0.323s (Max:     0.031s, Count: 554)
    Boolean abstraction:                 0.062s
    Solving time:                        0.066s (Max:     0.010s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.015s (Max:     0.011s)
Time for merge operator:                 0.092s
Time for coverage check:                 0.000s
Total time for SMT solver (w/o itp):     0.069s

Number of path formula cache hits:   3775 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.832s

Total number of created targets for pointer analysis: 30
   Number of created targets for uf: *unsigned_long_int is 3
   Number of created targets for uf: *(struct__IO_STACK_LOCATION)* is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          26 (count: 623, min: 0, max: 26, avg: 0.04)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.092s
Automaton transfers with branching:                0
Automaton transfer successors:                         5155 (count: 5155, min: 1, max: 1, avg: 1.00) [1 x 5155]

CPA algorithm statistics
------------------------
Number of iterations:            2802
Max size of waitlist:            53
Average size of waitlist:        24
Number of computed successors:   3338
Max successors for one state:    2
Number of times merged:          295
Number of times stopped:         295
Number of times breaked:         12

Total time for CPA algorithm:         2.387s (Max:     0.465s)
  Time for choose from waitlist:      0.030s
  Time for precision adjustment:      0.637s
  Time for transfer relation:         1.350s
  Time for merge operator:            0.164s
  Time for stop operator:             0.053s
  Time for adding to reached set:     0.050s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                 111 (count: 12, min: 4, max: 10, avg: 9.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.226s
  Counterexample analysis:                             0.157s (Max:     0.019s, Calls: 12)
    Refinement sat check:                              0.096s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.016s
  Precision update:                                    0.011s
  ARG update:                                          0.028s

Length of refined path (in blocks):                      99 (count: 12, min: 3, max: 9, avg: 8.25)
Number of affected states:                               29 (count: 12, min: 1, max: 5, avg: 2.42)
Length (states) of path with itp 'true':                 58 (count: 12, min: 1, max: 7, avg: 4.83)
Length (states) of path with itp non-trivial itp:        29 (count: 12, min: 1, max: 5, avg: 2.42)
Length (states) of path with itp 'false':                12 (count: 12, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 12, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              17 (count: 12, min: 0, max: 4, avg: 1.42)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 687
Max. size of reached set after ref.:  584
Avg. size of reached set before ref.: 484.17
Avg. size of reached set after ref.:  293.67

Total time for CEGAR algorithm:       2.664s
Time for refinements:                 0.274s
Average time for refinement:          0.022s
Max time for refinement:              0.055s

Code Coverage
-----------------------------
  Function coverage:      0.209
  Visited lines:          1049
  Total lines:            4105
  Line coverage:          0.256
  Visited conditions:     234
  Total conditions:       1064
  Condition coverage:     0.220

CPAchecker general statistics
-----------------------------
Number of program locations:     5534
Number of CFA edges:             6160
Number of relevant variables:    805
Number of functions:             182
Number of loops:                 37
Size of reached set:             728
  Number of reached locations:   564 (10%)
    Avg states per location:     1
    Max states per location:     11 (at node N2716)
  Number of reached functions:   38 (21%)
  Number of partitions:          728
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        53

Time for analysis setup:          6.285s
  Time for loading CPAs:          0.976s
  Time for loading parser:        0.833s
  Time for CFA construction:      4.340s
    Time for parsing file(s):     1.073s
    Time for AST to CFA:          1.499s
    Time for CFA sanity check:    0.439s
    Time for post-processing:     1.101s
      Time for var class.:        0.623s
Time for Analysis:                2.664s
CPU time for analysis:            2.670s
Total time for CPAchecker:        8.965s
Total CPU time for CPAchecker:    8.950s
Time for statistics:              0.106s

Time for Garbage Collector:       0.245s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     36MB (    34 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    26 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8039MB (  7667 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
