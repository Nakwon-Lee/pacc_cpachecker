scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ntdrivers/parport_true-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_e350jwh2/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6182: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6183: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6184: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6233: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6257: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6269: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6710: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6711: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6712: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6775: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6855: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6867: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 8251: Dereferencing of non-pointer type PULONG  in expression *ParameterValue (ASTConverter.convert, WARNING)

line 8262: Dereferencing of non-pointer type PULONG  in expression *ParameterValue (ASTConverter.convert, WARNING)

line 8573: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8574: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8582: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8583: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8591: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 9113: Dereferencing of non-pointer type PULONG  in expression *PortNumber (ASTConverter.convert, WARNING)

line 9408: Dereferencing of non-pointer type PULONG  in expression *PRegFlags (ASTConverter.convert, WARNING)

line 9438: Dereferencing of non-pointer type PULONG  in expression *InstanceLengthArray (ASTConverter.convert, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function IoAcquireCancelSpinLock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function IoDisconnectInterrupt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedIncrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function IoReleaseRemoveLockEx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedDecrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function IoWMIRegistrationControl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function IoReleaseRemoveLockAndWaitEx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ObfReferenceObject to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function PoRequestPowerIrp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function PoSetPowerState(Extension->DeviceObject, powerType, powerState) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function WRITE_PORT_UCHAR to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function PoSetPowerState(Extension->DeviceObject, powerType, powerState) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function KeSynchronizeExecution to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            18810 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15807 (84%)
  Because of loop head:            2658 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         345 (2%)
  Times precision was empty:       2875 (15%)
  Times precision was {false}:     370 (2%)
  Times result was cached:         14824 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      741 (4%)
  Times result was 'false':        4114 (22%)
Number of strengthen sat checks:   0
Number of coverage checks:         27510
  BDD entailment checks:           4272
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       44
Number of predicates discovered:          43
Number of abstraction locations:          86
Max number of predicates per location:    10
Avg number of predicates per location:    5
Total predicates per abstraction:         60826
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 54.75
Number of irrelevant predicates:          18519 (30%)
Number of preds handled by boolean abs:   2617 (4%)
  Total number of models for allsat:      1961
  Max number of models for allsat:        94
  Avg number of models for allsat:        2.65

Time for post operator:                  2.183s
  Time for path formula creation:        2.008s
Time for strengthen operator:            0.281s
Time for prec operator:                  9.428s
  Time for abstraction:                  8.918s (Max:     0.035s, Count: 18810)
    Boolean abstraction:                 1.680s
    Solving time:                        1.257s (Max:     0.031s)
    Model enumeration time:              0.253s
    Time for BDD construction:           0.212s (Max:     0.013s)
Time for merge operator:                 0.188s
Time for coverage check:                 0.050s
  Time for BDD entailment checks:        0.037s
Total time for SMT solver (w/o itp):     1.510s

Number of path formula cache hits:   165850 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.486s

Total number of created targets for pointer analysis: 61
   Number of created targets for uf: *(struct__LIST_ENTRY)* is 3
   Number of created targets for uf: *unsigned_long_int is 3
   Number of created targets for uf: *(struct__IO_STACK_LOCATION)* is 2


Number of BDD nodes:                               4383
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3133 (count: 14465, min: 0, max: 481, avg: 0.22)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.554s
  Time for transition matches:                         0.242s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       147857 (count: 147916, min: 0, max: 1, avg: 1.00) [0 x 59, 1 x 147857]

CPA algorithm statistics
------------------------
Number of iterations:            96768
Max size of waitlist:            75
Average size of waitlist:        32
Number of computed successors:   116962
Max successors for one state:    2
Number of times merged:          11619
Number of times stopped:         13430
Number of times breaked:         345

Total time for CPA algorithm:        17.791s (Max:     0.440s)
  Time for choose from waitlist:      0.145s
  Time for precision adjustment:     10.775s
  Time for transfer relation:         5.001s
  Time for merge operator:            0.551s
  Time for stop operator:             0.289s
  Time for adding to reached set:     0.350s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   345
Avg. length of target path (in blocks):                5831 (count: 345, min: 4, max: 28, avg: 16.90)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.460s
  Counterexample analysis:                             4.648s (Max:     0.038s, Calls: 345)
    Refinement sat check:                              3.137s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.111s
  Precision update:                                    0.193s
  ARG update:                                          0.304s

Length of refined path (in blocks):                    5363 (count: 345, min: 3, max: 27, avg: 15.54)
Number of affected states:                             1773 (count: 345, min: 1, max: 22, avg: 5.14)
Length (states) of path with itp 'true':               3245 (count: 345, min: 0, max: 18, avg: 9.41)
Length (states) of path with itp non-trivial itp:      1773 (count: 345, min: 1, max: 22, avg: 5.14)
Length (states) of path with itp 'false':               345 (count: 345, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         273 (count: 345, min: 0, max: 4, avg: 0.79)
Equal non-trivial interpolants along paths:            1155 (count: 345, min: 0, max: 19, avg: 3.35)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                345
Number of successful refinements:     345
Number of failed refinements:         0
Max. size of reached set before ref.: 3251
Max. size of reached set after ref.:  3054
Avg. size of reached set before ref.: 1271.99
Avg. size of reached set after ref.:  990.32

Total time for CEGAR algorithm:      24.106s
Time for refinements:                 6.023s
Average time for refinement:          0.017s
Max time for refinement:              0.057s

Code Coverage
-----------------------------
  Function coverage:      0.275
  Visited lines:          1333
  Total lines:            4105
  Line coverage:          0.325
  Visited conditions:     254
  Total conditions:       1064
  Condition coverage:     0.239

CPAchecker general statistics
-----------------------------
Number of program locations:     5534
Number of CFA edges:             6160
Number of relevant variables:    805
Number of functions:             182
Number of loops:                 37
Size of reached set:             2243
  Number of reached locations:   711 (13%)
    Avg states per location:     3
    Max states per location:     29 (at node N241)
  Number of reached functions:   50 (27%)
  Number of partitions:          2209
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N4957 (after line 9636), Function main called from node N4843, stack depth 1 [4c2af006], stack [main]])
  Number of target states:       0
  Size of final wait list        48

Time for analysis setup:          6.126s
  Time for loading CPAs:          1.029s
  Time for loading parser:        0.651s
  Time for CFA construction:      4.313s
    Time for parsing file(s):     1.082s
    Time for AST to CFA:          1.532s
    Time for CFA sanity check:    0.410s
    Time for post-processing:     1.093s
      Time for var class.:        0.620s
Time for Analysis:               24.106s
CPU time for analysis:           24.110s
Total time for CPAchecker:       30.236s
Total CPU time for CPAchecker:   30.220s
Time for statistics:              0.129s

Time for Garbage Collector:       0.527s (in 63 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    67 MiB) max;     47MB (    45 MiB) avg;     73MB (    70 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
