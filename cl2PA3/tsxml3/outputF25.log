scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ntdrivers/diskperf_true-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_g6ttqsjd/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3051: Dereferencing of non-pointer type PULONG  in expression *InstanceLengthArray (ASTConverter.convert, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function KeQueryPerformanceCounter(&frequency) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function KeQuerySystemTime to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function KeQueryPerformanceCounter((void *)0) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function InterlockedDecrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedIncrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function IoWMIRegistrationControl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedExchange to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function IoAllocateErrorLogEntry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function IoWriteErrorLogEntry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            15553 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14081 (91%)
  Because of loop head:            1115 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         357 (2%)
  Times precision was empty:       3378 (22%)
  Times precision was {false}:     333 (2%)
  Times result was cached:         10378 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1464 (9%)
  Times result was 'false':        4294 (28%)
Number of strengthen sat checks:   0
Number of coverage checks:         29542
  BDD entailment checks:           5826
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       31
Number of predicates discovered:          60
Number of abstraction locations:          60
Max number of predicates per location:    28
Avg number of predicates per location:    4
Total predicates per abstraction:         36689
Max number of predicates per abstraction: 28
Avg number of predicates per abstraction: 20.42
Number of irrelevant predicates:          10947 (30%)
Number of preds handled by boolean abs:   11303 (31%)
  Total number of models for allsat:      5431
  Max number of models for allsat:        28
  Avg number of models for allsat:        3.71

Time for post operator:                  7.180s
  Time for path formula creation:        6.948s
Time for strengthen operator:            0.340s
Time for prec operator:                 10.966s
  Time for abstraction:                 10.473s (Max:     0.033s, Count: 15553)
    Boolean abstraction:                 3.595s
    Solving time:                        2.575s (Max:     0.017s)
    Model enumeration time:              0.464s
    Time for BDD construction:           0.450s (Max:     0.014s)
Time for merge operator:                 0.482s
Time for coverage check:                 0.058s
  Time for BDD entailment checks:        0.043s
Total time for SMT solver (w/o itp):     3.039s

Number of path formula cache hits:   133297 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.305s

Total number of created targets for pointer analysis: 796
   Number of created targets for uf: *signed_long_int is 2
   Number of created targets for uf: *(struct__IO_STACK_LOCATION)* is 94
   Number of created targets for uf: *unsigned_long_int is 67


Number of BDD nodes:                               51552
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       22661 (count: 28136, min: 0, max: 1933, avg: 0.81)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.890s
  Time for transition matches:                         0.350s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.017s
Automaton transfers with branching:                0
Automaton transfer successors:                       185309 (count: 185930, min: 0, max: 1, avg: 1.00) [0 x 621, 1 x 185309]

CPA algorithm statistics
------------------------
Number of iterations:            91179
Max size of waitlist:            84
Average size of waitlist:        16
Number of computed successors:   110054
Max successors for one state:    2
Number of times merged:          11858
Number of times stopped:         12990
Number of times breaked:         357

Total time for CPA algorithm:        26.551s (Max:     2.364s)
  Time for choose from waitlist:      0.145s
  Time for precision adjustment:     12.419s
  Time for transfer relation:        11.240s
  Time for merge operator:            0.932s
  Time for stop operator:             0.406s
  Time for adding to reached set:     0.447s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   357
Avg. length of target path (in blocks):               12193 (count: 357, min: 6, max: 67, avg: 34.15)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.807s
  Counterexample analysis:                             6.813s (Max:     0.079s, Calls: 357)
    Refinement sat check:                              4.052s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.022s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.098s
  Precision update:                                    0.302s
  ARG update:                                          0.392s

Length of refined path (in blocks):                    9992 (count: 357, min: 2, max: 49, avg: 27.99)
Number of affected states:                             1136 (count: 357, min: 1, max: 27, avg: 3.18)
Length (states) of path with itp 'true':               8499 (count: 357, min: 0, max: 47, avg: 23.81)
Length (states) of path with itp non-trivial itp:      1136 (count: 357, min: 1, max: 27, avg: 3.18)
Length (states) of path with itp 'false':               357 (count: 357, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         415 (count: 357, min: 0, max: 26, avg: 1.16)
Equal non-trivial interpolants along paths:             364 (count: 357, min: 0, max: 14, avg: 1.02)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                357
Number of successful refinements:     357
Number of failed refinements:         0
Max. size of reached set before ref.: 1636
Max. size of reached set after ref.:  1291
Avg. size of reached set before ref.: 832.24
Avg. size of reached set after ref.:  574.60

Total time for CEGAR algorithm:      35.020s
Time for refinements:                 8.262s
Average time for refinement:          0.023s
Max time for refinement:              0.110s

Code Coverage
-----------------------------
  Function coverage:      0.193
  Visited lines:          1042
  Total lines:            1722
  Line coverage:          0.605
  Visited conditions:     114
  Total conditions:       280
  Condition coverage:     0.407

CPAchecker general statistics
-----------------------------
Number of program locations:     2235
Number of CFA edges:             2388
Number of relevant variables:    245
Number of functions:             88
Number of loops:                 4
Size of reached set:             794
  Number of reached locations:   282 (13%)
    Avg states per location:     2
    Max states per location:     28 (at node N870)
  Number of reached functions:   17 (19%)
  Number of partitions:          763
    Avg size of partitions:      1
    Max size of partitions:      28 (with key [N870 (before lines 3203-3208), Function main called from node N848, stack depth 1 [70abf9b0], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.422s
  Time for loading CPAs:          1.154s
  Time for loading parser:        0.684s
  Time for CFA construction:      3.451s
    Time for parsing file(s):     1.025s
    Time for AST to CFA:          1.067s
    Time for CFA sanity check:    0.181s
    Time for post-processing:     0.971s
      Time for var class.:        0.544s
Time for Analysis:               35.020s
CPU time for analysis:           35.030s
Time for analyzing result:        0.001s
Total time for CPAchecker:       40.447s
Total CPU time for CPAchecker:   40.440s
Time for statistics:              0.117s

Time for Garbage Collector:       0.757s (in 63 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 82MB (    78 MiB) max;     51MB (    48 MiB) avg;     85MB (    81 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     37MB (    35 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8077MB (  7702 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
