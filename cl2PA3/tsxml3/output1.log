scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ntdrivers/diskperf_true-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_z3in332y/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3051: Dereferencing of non-pointer type PULONG  in expression *InstanceLengthArray (ASTConverter.convert, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function KeQueryPerformanceCounter(&frequency) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function KeQuerySystemTime to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function IoWMIRegistrationControl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedExchange to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function KeQueryPerformanceCounter((void *)0) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function InterlockedDecrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedIncrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            7693 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6367 (83%)
  Because of loop head:            1143 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         183 (2%)
  Times precision was empty:       2287 (30%)
  Times precision was {false}:     160 (2%)
  Times result was cached:         3954 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1292 (17%)
  Times result was 'false':        1879 (24%)
Number of strengthen sat checks:   0
Number of coverage checks:         17332
  BDD entailment checks:           5120
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       31
Number of predicates discovered:          54
Number of abstraction locations:          40
Max number of predicates per location:    28
Avg number of predicates per location:    4
Total predicates per abstraction:         19296
Max number of predicates per abstraction: 28
Avg number of predicates per abstraction: 13.29
Number of irrelevant predicates:          4062 (21%)
Number of preds handled by boolean abs:   10917 (57%)
  Total number of models for allsat:      5233
  Max number of models for allsat:        28
  Avg number of models for allsat:        4.05

Time for post operator:                  5.775s
  Time for path formula creation:        5.612s
Time for strengthen operator:            0.279s
Time for prec operator:                  9.183s
  Time for abstraction:                  8.825s (Max:     0.030s, Count: 7693)
    Boolean abstraction:                 3.819s
    Solving time:                        2.427s (Max:     0.014s)
    Model enumeration time:              0.482s
    Time for BDD construction:           0.473s (Max:     0.025s)
Time for merge operator:                 0.297s
Time for coverage check:                 0.058s
  Time for BDD entailment checks:        0.046s
Total time for SMT solver (w/o itp):     2.909s

Number of path formula cache hits:   81264 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.206s

Total number of created targets for pointer analysis: 746
   Number of created targets for uf: *signed_long_int is 32
   Number of created targets for uf: *unsigned_long_int is 33
   Number of created targets for uf: *(struct__IO_STACK_LOCATION)* is 94


Number of BDD nodes:                               51634
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       22155 (count: 24165, min: 0, max: 2074, avg: 0.92)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.702s
  Time for transition matches:                         0.274s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.015s
Automaton transfers with branching:                0
Automaton transfer successors:                       114999 (count: 115168, min: 0, max: 1, avg: 1.00) [0 x 169, 1 x 114999]

CPA algorithm statistics
------------------------
Number of iterations:            43760
Max size of waitlist:            32
Average size of waitlist:        14
Number of computed successors:   53540
Max successors for one state:    2
Number of times merged:          6106
Number of times stopped:         6325
Number of times breaked:         183

Total time for CPA algorithm:        20.935s (Max:     0.771s)
  Time for choose from waitlist:      0.124s
  Time for precision adjustment:     10.074s
  Time for transfer relation:         8.828s
  Time for merge operator:            0.613s
  Time for stop operator:             0.279s
  Time for adding to reached set:     0.356s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   183
Avg. length of target path (in blocks):                5523 (count: 183, min: 6, max: 46, avg: 30.18)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.883s
  Counterexample analysis:                             3.324s (Max:     0.052s, Calls: 183)
    Refinement sat check:                              2.086s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.019s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.122s
  Precision update:                                    0.111s
  ARG update:                                          0.219s

Length of refined path (in blocks):                    4987 (count: 183, min: 2, max: 45, avg: 27.25)
Number of affected states:                              814 (count: 183, min: 1, max: 39, avg: 4.45)
Length (states) of path with itp 'true':               3990 (count: 183, min: 0, max: 43, avg: 21.80)
Length (states) of path with itp non-trivial itp:       814 (count: 183, min: 1, max: 39, avg: 4.45)
Length (states) of path with itp 'false':               183 (count: 183, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         386 (count: 183, min: 0, max: 26, avg: 2.11)
Equal non-trivial interpolants along paths:             245 (count: 183, min: 0, max: 38, avg: 1.34)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                183
Number of successful refinements:     183
Number of failed refinements:         0
Max. size of reached set before ref.: 1135
Max. size of reached set after ref.:  1086
Avg. size of reached set before ref.: 673.13
Avg. size of reached set after ref.:  426.56

Total time for CEGAR algorithm:      25.163s
Time for refinements:                 4.125s
Average time for refinement:          0.022s
Max time for refinement:              0.073s

Code Coverage
-----------------------------
  Function coverage:      0.034
  Visited lines:          797
  Total lines:            1722
  Line coverage:          0.463
  Visited conditions:     36
  Total conditions:       280
  Condition coverage:     0.129

CPAchecker general statistics
-----------------------------
Number of program locations:     2235
Number of CFA edges:             2388
Number of relevant variables:    245
Number of functions:             88
Number of loops:                 4
Size of reached set:             216
  Number of reached locations:   66 (3%)
    Avg states per location:     3
    Max states per location:     28 (at node N870)
  Number of reached functions:   3 (3%)
  Number of partitions:          186
    Avg size of partitions:      1
    Max size of partitions:      28 (with key [N870 (before lines 3203-3208), Function main called from node N848, stack depth 1 [1d12b024], stack [main]])
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          5.098s
  Time for loading CPAs:          0.988s
  Time for loading parser:        0.700s
  Time for CFA construction:      3.289s
    Time for parsing file(s):     0.907s
    Time for AST to CFA:          1.124s
    Time for CFA sanity check:    0.190s
    Time for post-processing:     0.852s
      Time for var class.:        0.495s
Time for Analysis:               25.163s
CPU time for analysis:           25.170s
Total time for CPAchecker:       30.267s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.093s

Time for Garbage Collector:       0.470s (in 39 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 76MB (    72 MiB) max;     48MB (    46 MiB) avg;     78MB (    75 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8009MB (  7638 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
