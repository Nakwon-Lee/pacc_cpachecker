scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ntdrivers/diskperf_true-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3z5dwa2b/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3051: Dereferencing of non-pointer type PULONG  in expression *InstanceLengthArray (ASTConverter.convert, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function IoWMIRegistrationControl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedExchange to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function KeQueryPerformanceCounter((void *)0) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function InterlockedDecrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedIncrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function KeQueryPerformanceCounter(&frequency) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function KeQuerySystemTime to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8042 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6730 (84%)
  Because of loop head:            1027 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         285 (4%)
  Times precision was empty:       1786 (22%)
  Times precision was {false}:     162 (2%)
  Times result was cached:         4818 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1276 (16%)
  Times result was 'false':        2276 (28%)
Number of strengthen sat checks:   0
Number of coverage checks:         16143
  BDD entailment checks:           5561
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       31
Number of predicates discovered:          56
Number of abstraction locations:          45
Max number of predicates per location:    28
Avg number of predicates per location:    4
Total predicates per abstraction:         20832
Max number of predicates per abstraction: 28
Avg number of predicates per abstraction: 14.49
Number of irrelevant predicates:          3902 (19%)
Number of preds handled by boolean abs:   10819 (52%)
  Total number of models for allsat:      5182
  Max number of models for allsat:        28
  Avg number of models for allsat:        4.06

Time for post operator:                  4.587s
  Time for path formula creation:        4.425s
Time for strengthen operator:            0.180s
Time for prec operator:                  8.831s
  Time for abstraction:                  8.456s (Max:     0.034s, Count: 8042)
    Boolean abstraction:                 3.858s
    Solving time:                        2.465s (Max:     0.014s)
    Model enumeration time:              0.461s
    Time for BDD construction:           0.521s (Max:     0.024s)
Time for merge operator:                 0.276s
Time for coverage check:                 0.071s
  Time for BDD entailment checks:        0.064s
Total time for SMT solver (w/o itp):     2.926s

Number of path formula cache hits:   79923 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.038s

Total number of created targets for pointer analysis: 447
   Number of created targets for uf: *signed_long_int is 32
   Number of created targets for uf: *unsigned_long_int is 3
   Number of created targets for uf: *(struct__IO_STACK_LOCATION)* is 94


Number of BDD nodes:                               51109
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       22192 (count: 23942, min: 0, max: 1922, avg: 0.93)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.573s
  Time for transition matches:                         0.238s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.011s
Automaton transfers with branching:                0
Automaton transfer successors:                       112620 (count: 112741, min: 0, max: 1, avg: 1.00) [0 x 121, 1 x 112620]

CPA algorithm statistics
------------------------
Number of iterations:            44278
Max size of waitlist:            16
Average size of waitlist:        7
Number of computed successors:   53110
Max successors for one state:    2
Number of times merged:          5291
Number of times stopped:         5892
Number of times breaked:         285

Total time for CPA algorithm:        18.724s (Max:     0.687s)
  Time for choose from waitlist:      0.119s
  Time for precision adjustment:      9.700s
  Time for transfer relation:         7.246s
  Time for merge operator:            0.522s
  Time for stop operator:             0.310s
  Time for adding to reached set:     0.240s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   285
Avg. length of target path (in blocks):               10156 (count: 285, min: 6, max: 52, avg: 35.64)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.199s
  Counterexample analysis:                             5.445s (Max:     0.064s, Calls: 285)
    Refinement sat check:                              3.442s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.015s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.099s
  Precision update:                                    0.172s
  ARG update:                                          0.257s

Length of refined path (in blocks):                    9213 (count: 284, min: 2, max: 51, avg: 32.44)
Number of affected states:                             1153 (count: 284, min: 1, max: 38, avg: 4.06)
Length (states) of path with itp 'true':               7776 (count: 284, min: 0, max: 47, avg: 27.38)
Length (states) of path with itp non-trivial itp:      1153 (count: 284, min: 1, max: 38, avg: 4.06)
Length (states) of path with itp 'false':               284 (count: 284, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         371 (count: 284, min: 0, max: 26, avg: 1.31)
Equal non-trivial interpolants along paths:             498 (count: 284, min: 0, max: 37, avg: 1.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                285
Number of successful refinements:     284
Number of failed refinements:         0
Max. size of reached set before ref.: 914
Max. size of reached set after ref.:  861
Avg. size of reached set before ref.: 564.33
Avg. size of reached set after ref.:  408.06

Total time for CEGAR algorithm:      25.491s
Time for refinements:                 6.621s
Average time for refinement:          0.023s
Max time for refinement:              0.067s

Code Coverage
-----------------------------
  Function coverage:      0.273
  Visited lines:          1101
  Total lines:            1722
  Line coverage:          0.639
  Visited conditions:     134
  Total conditions:       280
  Condition coverage:     0.479

CPAchecker general statistics
-----------------------------
Number of program locations:     2235
Number of CFA edges:             2388
Number of relevant variables:    245
Number of functions:             88
Number of loops:                 4
Size of reached set:             912
  Number of reached locations:   349 (16%)
    Avg states per location:     2
    Max states per location:     28 (at node N870)
  Number of reached functions:   24 (27%)
  Number of partitions:          881
    Avg size of partitions:      1
    Max size of partitions:      28 (with key [N870 (before lines 3203-3208), Function main called from node N848, stack depth 1 [1d12b024], stack [main]])
  Number of target states:       1
  Size of final wait list        5

Time for analysis setup:          4.786s
  Time for loading CPAs:          0.799s
  Time for loading parser:        0.728s
  Time for CFA construction:      3.142s
    Time for parsing file(s):     0.915s
    Time for AST to CFA:          1.069s
    Time for CFA sanity check:    0.179s
    Time for post-processing:     0.781s
      Time for var class.:        0.433s
Time for Analysis:               25.491s
CPU time for analysis:           25.480s
Total time for CPAchecker:       30.281s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.130s

Time for Garbage Collector:       0.466s (in 39 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 75MB (    71 MiB) max;     48MB (    46 MiB) avg;     77MB (    74 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     36MB (    34 MiB) avg;     41MB (    40 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8008MB (  7637 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
