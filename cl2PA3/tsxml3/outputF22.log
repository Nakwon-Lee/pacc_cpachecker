scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ntdrivers/diskperf_true-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1jb5faj3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3051: Dereferencing of non-pointer type PULONG  in expression *InstanceLengthArray (ASTConverter.convert, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function KeQueryPerformanceCounter(&frequency) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function KeQuerySystemTime to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function KeQueryPerformanceCounter((void *)0) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function InterlockedDecrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedIncrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function IoWMIRegistrationControl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedExchange to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function IoAllocateErrorLogEntry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function IoWriteErrorLogEntry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            16589 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15139 (91%)
  Because of loop head:            1125 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         325 (2%)
  Times precision was empty:       6508 (39%)
  Times precision was {false}:     286 (2%)
  Times result was cached:         8386 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1409 (8%)
  Times result was 'false':        3262 (20%)
Number of strengthen sat checks:   0
Number of coverage checks:         30946
  BDD entailment checks:           5678
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       31
Number of predicates discovered:          60
Number of abstraction locations:          56
Max number of predicates per location:    28
Avg number of predicates per location:    4
Total predicates per abstraction:         29619
Max number of predicates per abstraction: 28
Avg number of predicates per abstraction: 17.47
Number of irrelevant predicates:          9420 (32%)
Number of preds handled by boolean abs:   11273 (38%)
  Total number of models for allsat:      5496
  Max number of models for allsat:        28
  Avg number of models for allsat:        3.90

Time for post operator:                  6.887s
  Time for path formula creation:        6.664s
Time for strengthen operator:            0.390s
Time for prec operator:                 10.500s
  Time for abstraction:                  9.902s (Max:     0.030s, Count: 16589)
    Boolean abstraction:                 3.821s
    Solving time:                        2.624s (Max:     0.015s)
    Model enumeration time:              0.459s
    Time for BDD construction:           0.479s (Max:     0.013s)
Time for merge operator:                 0.448s
Time for coverage check:                 0.078s
  Time for BDD entailment checks:        0.070s
Total time for SMT solver (w/o itp):     3.083s

Number of path formula cache hits:   158244 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.970s

Total number of created targets for pointer analysis: 782
   Number of created targets for uf: *signed_long_int is 32
   Number of created targets for uf: *(struct__IO_STACK_LOCATION)* is 94
   Number of created targets for uf: *unsigned_long_int is 29


Number of BDD nodes:                               52045
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       22898 (count: 30455, min: 0, max: 1797, avg: 0.75)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.830s
  Time for transition matches:                         0.345s
  Time for transition assertions:                      0.010s
  Time for transition actions:                         0.029s
Automaton transfers with branching:                0
Automaton transfer successors:                       197922 (count: 198552, min: 0, max: 1, avg: 1.00) [0 x 630, 1 x 197922]

CPA algorithm statistics
------------------------
Number of iterations:            97427
Max size of waitlist:            83
Average size of waitlist:        21
Number of computed successors:   117470
Max successors for one state:    2
Number of times merged:          12634
Number of times stopped:         13735
Number of times breaked:         325

Total time for CPA algorithm:        25.761s (Max:     1.975s)
  Time for choose from waitlist:      0.193s
  Time for precision adjustment:     11.921s
  Time for transfer relation:        11.006s
  Time for merge operator:            0.868s
  Time for stop operator:             0.403s
  Time for adding to reached set:     0.385s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   325
Avg. length of target path (in blocks):               10935 (count: 325, min: 6, max: 59, avg: 33.65)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.617s
  Counterexample analysis:                             5.732s (Max:     0.055s, Calls: 325)
    Refinement sat check:                              3.514s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.118s
  Precision update:                                    0.173s
  ARG update:                                          0.376s

Length of refined path (in blocks):                    9960 (count: 325, min: 2, max: 57, avg: 30.65)
Number of affected states:                             1186 (count: 325, min: 1, max: 27, avg: 3.65)
Length (states) of path with itp 'true':               8449 (count: 325, min: 0, max: 48, avg: 26.00)
Length (states) of path with itp non-trivial itp:      1186 (count: 325, min: 1, max: 27, avg: 3.65)
Length (states) of path with itp 'false':               325 (count: 325, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         400 (count: 325, min: 0, max: 26, avg: 1.23)
Equal non-trivial interpolants along paths:             461 (count: 325, min: 0, max: 14, avg: 1.42)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                325
Number of successful refinements:     325
Number of failed refinements:         0
Max. size of reached set before ref.: 1559
Max. size of reached set after ref.:  1327
Avg. size of reached set before ref.: 1002.61
Avg. size of reached set after ref.:  695.90

Total time for CEGAR algorithm:      33.087s
Time for refinements:                 7.115s
Average time for refinement:          0.021s
Max time for refinement:              0.101s

Code Coverage
-----------------------------
  Function coverage:      0.193
  Visited lines:          1042
  Total lines:            1722
  Line coverage:          0.605
  Visited conditions:     114
  Total conditions:       280
  Condition coverage:     0.407

CPAchecker general statistics
-----------------------------
Number of program locations:     2235
Number of CFA edges:             2388
Number of relevant variables:    245
Number of functions:             88
Number of loops:                 4
Size of reached set:             794
  Number of reached locations:   282 (13%)
    Avg states per location:     2
    Max states per location:     28 (at node N870)
  Number of reached functions:   17 (19%)
  Number of partitions:          763
    Avg size of partitions:      1
    Max size of partitions:      28 (with key [N870 (before lines 3203-3208), Function main called from node N848, stack depth 1 [43effd89], stack [main]])
  Number of target states:       0

Time for analysis setup:          4.690s
  Time for loading CPAs:          0.862s
  Time for loading parser:        0.634s
  Time for CFA construction:      3.047s
    Time for parsing file(s):     0.902s
    Time for AST to CFA:          0.980s
    Time for CFA sanity check:    0.172s
    Time for post-processing:     0.807s
      Time for var class.:        0.476s
Time for Analysis:               33.088s
CPU time for analysis:           33.100s
Time for analyzing result:        0.000s
Total time for CPAchecker:       37.782s
Total CPU time for CPAchecker:   37.780s
Time for statistics:              0.116s

Time for Garbage Collector:       0.683s (in 62 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 82MB (    78 MiB) max;     51MB (    49 MiB) avg;     84MB (    80 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     36MB (    35 MiB) avg;     41MB (    40 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8077MB (  7702 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
