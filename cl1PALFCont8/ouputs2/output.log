scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-net-atl1c-atl1c.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run___k_39p1/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5285: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5287: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5289: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5283: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13618: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5768: Function pointer *(ops->alloc_coherent) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5808: Function pointer *(ops->free_coherent) with type void (*)(struct device *, size_t , void *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5641: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5566-5567: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5674: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5603: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msi to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5674: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, (struct dma_attrs *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5603: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_msi_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5566-5567: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, (struct page *)(1152897315351035904ULL + (tmp___2 >> 12)), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_set_wakeup_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            732786 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  618858 (84%)
  Because of loop head:            113683 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         245 (0%)
  Times precision was empty:       124139 (17%)
  Times precision was {false}:     1771 (0%)
  Times result was cached:         605689 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1187 (0%)
  Times result was 'false':        3497 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         607140
  BDD entailment checks:           193448
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       75
Number of predicates discovered:          4
Number of abstraction locations:          512
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         644048
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 217.73
Number of irrelevant predicates:          464250 (72%)
Number of preds handled by boolean abs:   1251 (0%)
  Total number of models for allsat:      1180
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.99

Time for post operator:                 42.338s
  Time for path formula creation:       39.923s
Time for strengthen operator:            4.312s
Time for prec operator:                 65.311s
  Time for abstraction:                 51.542s (Max:     0.417s, Count: 732786)
    Boolean abstraction:                 0.848s
    Solving time:                        1.574s (Max:     0.017s)
    Model enumeration time:              0.086s
    Time for BDD construction:           0.074s (Max:     0.014s)
Time for merge operator:                 2.829s
Time for coverage check:                 0.301s
  Time for BDD entailment checks:        0.218s
Total time for SMT solver (w/o itp):     1.660s

Number of path formula cache hits:   5086617 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    13.102s

Total number of created targets for pointer analysis: 2240
   Number of created targets for uf: *unsigned_short_int is 77
   Number of created targets for uf: *unsigned_int is 12


Number of BDD nodes:                               210
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2387 (count: 333757, min: 0, max: 142, avg: 0.01)
Time for BDD node cleanup:                             0.084s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.104s
  Time for transition matches:                         3.502s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      4407338 (count: 4407338, min: 1, max: 1, avg: 1.00) [1 x 4407338]

CPA algorithm statistics
------------------------
Number of iterations:            3036831
Max size of waitlist:            62
Average size of waitlist:        28
Number of computed successors:   3426703
Max successors for one state:    2
Number of times merged:          206846
Number of times stopped:         385650
Number of times breaked:         245

Total time for CPA algorithm:       308.552s (Max:     7.125s)
  Time for choose from waitlist:      1.471s
  Time for precision adjustment:     97.076s
  Time for transfer relation:       181.124s
  Time for merge operator:            6.203s
  Time for stop operator:             4.673s
  Time for adding to reached set:     7.377s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   245
Avg. length of target path (in blocks):               32066 (count: 245, min: 4, max: 394, avg: 130.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  18.069s
  Counterexample analysis:                            10.827s (Max:     0.199s, Calls: 245)
    Refinement sat check:                              4.315s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.023s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.251s
  Precision update:                                    0.265s
  ARG update:                                          6.427s

Length of refined path (in blocks):                   26171 (count: 245, min: 3, max: 393, avg: 106.82)
Number of affected states:                            18992 (count: 245, min: 1, max: 392, avg: 77.52)
Length (states) of path with itp 'true':               6934 (count: 245, min: 0, max: 130, avg: 28.30)
Length (states) of path with itp non-trivial itp:     18992 (count: 245, min: 1, max: 392, avg: 77.52)
Length (states) of path with itp 'false':               245 (count: 245, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 245, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           18747 (count: 245, min: 0, max: 391, avg: 76.52)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                245
Number of successful refinements:     245
Number of failed refinements:         0
Max. size of reached set before ref.: 34160
Max. size of reached set after ref.:  33758
Avg. size of reached set before ref.: 26176.43
Avg. size of reached set after ref.:  13821.82

Total time for CEGAR algorithm:     335.757s
Time for refinements:                24.538s
Average time for refinement:          0.100s
Max time for refinement:              0.534s

Code Coverage
-----------------------------
  Function coverage:      0.424
  Visited lines:          2918
  Total lines:            5285
  Line coverage:          0.552
  Visited conditions:     564
  Total conditions:       1118
  Condition coverage:     0.504

CPAchecker general statistics
-----------------------------
Number of program locations:     7497
Number of CFA edges:             8615
Number of relevant variables:    1372
Number of functions:             229
Number of loops:                 49
Size of reached set:             10678
  Number of reached locations:   2172 (29%)
    Avg states per location:     4
    Max states per location:     517 (at node N193)
  Number of reached functions:   97 (42%)
  Number of partitions:          10664
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N5461 (before line 11972), Function atl1c_read_eeprom called from node N6848, stack depth 3 [629cf95b], stack [main, atl1c_get_eeprom, atl1c_read_eeprom]])
  Number of target states:       0

Time for analysis setup:          7.922s
  Time for loading CPAs:          1.137s
  Time for loading parser:        0.717s
  Time for CFA construction:      5.967s
    Time for parsing file(s):     1.311s
    Time for AST to CFA:          2.141s
    Time for CFA sanity check:    0.657s
    Time for post-processing:     1.642s
      Time for var class.:        0.809s
Time for Analysis:              335.757s
CPU time for analysis:          335.750s
Time for analyzing result:        0.007s
Total time for CPAchecker:      343.684s
Total CPU time for CPAchecker:  343.650s
Time for statistics:              0.365s

Time for Garbage Collector:      30.477s (in 968 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                231MB (   220 MiB) max;    128MB (   122 MiB) avg;    239MB (   228 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           236MB (   225 MiB) max;    191MB (   182 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    40 MiB) avg
Total process virtual memory:   8133MB (  7757 MiB) max;   8130MB (  7754 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
