scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-staging-et131x-et131x.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_au0eeo3o/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6891: Function pointer *(ops->alloc_coherent) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6931: Function pointer *(ops->free_coherent) with type void (*)(struct device *, size_t , void *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8264: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8189-8190: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8226: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_find_capability to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_read_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_read_config_dword to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_write_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_write_config_dword to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_write_config_word to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6891: Ignoring function call through function pointer *(ops->alloc_coherent): memory = (*(ops->alloc_coherent))(dev, size, dma_handle, tmp___1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6931: Ignoring function call through function pointer *(ops->free_coherent): (*(ops->free_coherent))(dev, size, vaddr, bus); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function kmem_cache_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc32_le to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bitrev32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1671368 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1530042 (92%)
  Because of loop head:            141262 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         64 (0%)
  Times precision was empty:       146615 (9%)
  Times precision was {false}:     8969 (1%)
  Times result was cached:         1513028 (91%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2756 (0%)
  Times result was 'false':        6456 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         508784
  BDD entailment checks:           133236
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       22
Number of predicates discovered:          4
Number of abstraction locations:          486
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         2430427
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 207.29
Number of irrelevant predicates:          1969575 (81%)
Number of preds handled by boolean abs:   2891 (0%)
  Total number of models for allsat:      2745
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                158.641s
  Time for path formula creation:      152.627s
Time for strengthen operator:            6.550s
Time for prec operator:                240.184s
  Time for abstraction:                204.691s (Max:     3.047s, Count: 1671368)
    Boolean abstraction:                 6.450s
    Solving time:                       38.862s (Max:     0.054s)
    Model enumeration time:              0.389s
    Time for BDD construction:           0.097s (Max:     0.001s)
Time for merge operator:                 9.397s
Time for coverage check:                 0.255s
  Time for BDD entailment checks:        0.202s
Total time for SMT solver (w/o itp):    39.251s

Number of path formula cache hits:   6587014 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    98.290s

Total number of created targets for pointer analysis: 1446789
   Number of created targets for uf: *unsigned_short_int is 9957
   Number of created targets for uf: *(void)* is 4001
   Number of created targets for uf: *(struct_tcb)* is 112
   Number of created targets for uf: *unsigned_char is 2112
   Number of created targets for uf: *(struct_list_head)* is 130
   Number of created targets for uf: *unsigned_long_long_int is 3
   Number of created targets for uf: *unsigned_int is 14


Number of BDD nodes:                               206
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5526 (count: 341375, min: 0, max: 228, avg: 0.02)
Time for BDD node cleanup:                             0.061s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.448s
  Time for transition matches:                         6.369s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      6800356 (count: 6800356, min: 1, max: 1, avg: 1.00) [1 x 6800356]

CPA algorithm statistics
------------------------
Number of iterations:            4539489
Max size of waitlist:            39
Average size of waitlist:        24
Number of computed successors:   4857148
Max successors for one state:    2
Number of times merged:          187774
Number of times stopped:         311062
Number of times breaked:         64

Total time for CPA algorithm:       736.221s (Max:    30.245s)
  Time for choose from waitlist:      2.118s
  Time for precision adjustment:    284.418s
  Time for transfer relation:       400.214s
  Time for merge operator:           12.501s
  Time for stop operator:             6.151s
  Time for adding to reached set:    13.311s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   64
Avg. length of target path (in blocks):               84045 (count: 64, min: 8, max: 1694, avg: 1313.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 121.243s
  Counterexample analysis:                           107.079s (Max:     2.607s, Calls: 64)
    Refinement sat check:                             26.367s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.081s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.679s
  Precision update:                                    0.272s
  ARG update:                                         12.642s

Length of refined path (in blocks):                   82406 (count: 64, min: 7, max: 1693, avg: 1287.59)
Number of affected states:                            81071 (count: 64, min: 0, max: 1692, avg: 1266.73)
Length (states) of path with itp 'true':               1271 (count: 64, min: 0, max: 1220, avg: 19.86)
Length (states) of path with itp non-trivial itp:     81071 (count: 64, min: 0, max: 1692, avg: 1266.73)
Length (states) of path with itp 'false':                64 (count: 64, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 64, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           81008 (count: 64, min: 0, max: 1691, avg: 1265.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                64
Number of successful refinements:     64
Number of failed refinements:         0
Max. size of reached set before ref.: 111245
Max. size of reached set after ref.:  65546
Avg. size of reached set before ref.: 72331.70
Avg. size of reached set after ref.:  1717.19

Total time for CEGAR algorithm:     863.034s
Time for refinements:               126.716s
Average time for refinement:          1.979s
Max time for refinement:              2.949s

Code Coverage
-----------------------------
  Function coverage:      0.525
  Visited lines:          2534
  Total lines:            4013
  Line coverage:          0.631
  Visited conditions:     430
  Total conditions:       920
  Condition coverage:     0.467

CPAchecker general statistics
-----------------------------
Number of program locations:     5322
Number of CFA edges:             6259
Number of relevant variables:    693
Number of functions:             160
Number of loops:                 38
Size of reached set:             20302
  Number of reached locations:   1673 (31%)
    Avg states per location:     12
    Max states per location:     1683 (at node N365)
  Number of reached functions:   84 (53%)
  Number of partitions:          20302
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          7.535s
  Time for loading CPAs:          1.148s
  Time for loading parser:        0.746s
  Time for CFA construction:      5.470s
    Time for parsing file(s):     1.245s
    Time for AST to CFA:          2.051s
    Time for CFA sanity check:    0.424s
    Time for post-processing:     1.487s
      Time for var class.:        0.742s
Time for Analysis:              863.035s
CPU time for analysis:          863.000s
Time for analyzing result:        0.019s
Total time for CPAchecker:      870.575s
Total CPU time for CPAchecker:  870.530s
Time for statistics:              0.455s

Time for Garbage Collector:      73.021s (in 844 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                887MB (   846 MiB) max;    379MB (   361 MiB) avg;    957MB (   912 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1066MB (  1016 MiB) max;    557MB (   531 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8338MB (  7952 MiB) max;   8264MB (  7882 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
