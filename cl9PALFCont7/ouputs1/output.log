scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--staging--panel--panel.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8734624_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 2812: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2815: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2818: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 2921: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2924: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2927: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6158;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6158;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6158;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6158;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3515: Dead code detected: d_bit = 1 << (pin + -2); (CFACreationUtils.addEdgeToCFA, INFO)

line 4231: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4234: Dead code detected: __asm__ volatile ("call __get_user_4": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4237: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
    case 1:
    __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp));
    goto ldv_24020;
    case 2:
    __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp));
    goto ldv_24020;
    case 4:
    __asm__ volatile ("call __get_user_4": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp));
    goto ldv_24020;
    case 8:
    __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp));
    goto ldv_24020;
    default:
    __asm__ volatile ("call __get_user_X": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp));
    goto ldv_24020;
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 4767: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 4770: Dead code detected: __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 4773: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp): "ebx");
  goto ldv_24075;
  case 2:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp): "ebx");
  goto ldv_24075;
  case 4:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp): "ebx");
  goto ldv_24075;
  case 8:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp): "ebx");
  goto ldv_24075;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp): "ebx");
  goto ldv_24075;
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3787: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3823: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3649: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3687: Function pointer *(pprt->port->ops->write_control) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3668: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3698: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4879: Function pointer *(pprt->port->ops->read_data) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4881: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4882: Function pointer *(pprt->port->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4884: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4885: Function pointer *(pprt->port->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4911: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4898: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4899: Function pointer *(pprt->port->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3449: Function pointer *(pprt->port->ops->read_control) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3464: Function pointer *(pprt->port->ops->write_control) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3424: Function pointer *(pprt->port->ops->read_data) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3439: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3733: Ignoring call via function pointer lcd_write_data for which no suitable target was found in line: (*lcd_write_data)((int)c); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3733: Ignoring function call through function pointer *lcd_write_data: (*lcd_write_data)((int)c); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3439: Ignoring function call through function pointer *(pprt->port->ops->write_data): (*(pprt->port->ops->write_data))(pprt->port, (int)((unsigned char)val)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3464: Ignoring function call through function pointer *(pprt->port->ops->write_control): (*(pprt->port->ops->write_control))(pprt->port, (int)((unsigned char)val)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3687: Ignoring function call through function pointer *(pprt->port->ops->write_control): (*(pprt->port->ops->write_control))(pprt->port, (int)((unsigned char)cmd)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3668: Ignoring function call through function pointer *(pprt->port->ops->write_data): (*(pprt->port->ops->write_data))(pprt->port, (int)((unsigned char)data)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3698: Ignoring function call through function pointer *(pprt->port->ops->write_data): (*(pprt->port->ops->write_data))(pprt->port, (int)((unsigned char)data)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3649: Ignoring function call through function pointer *(pprt->port->ops->write_data): (*(pprt->port->ops->write_data))(pprt->port, (int)((unsigned char)cmd)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3719: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)((int)(tmp | tmp___0)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3719: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)((int)(tmp | tmp___0)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4283: Ignoring call via function pointer lcd_write_data for which no suitable target was found in line: (*lcd_write_data)(32); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4283: Ignoring function call through function pointer *lcd_write_data: (*lcd_write_data)(32); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4278: Ignoring call via function pointer lcd_clear_fast for which no suitable target was found in line: (*lcd_clear_fast)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4278: Ignoring function call through function pointer *lcd_clear_fast: (*lcd_clear_fast)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3823: Ignoring function call through function pointer *(pprt->port->ops->write_data): (*(pprt->port->ops->write_data))(pprt->port, 32); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_trylock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4881: Ignoring function call through function pointer *(pprt->port->ops->write_data): (*(pprt->port->ops->write_data))(pprt->port, (int)((unsigned char)((~((int)((signed char)scan_mask_o))) & ((int)((signed char)oldval))))); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4882: Ignoring function call through function pointer *(pprt->port->ops->read_status): tmp___0 = (*(pprt->port->ops->read_status))(pprt->port); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4884: Ignoring function call through function pointer *(pprt->port->ops->write_data): (*(pprt->port->ops->write_data))(pprt->port, (int)((unsigned char)oldval)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4885: Ignoring function call through function pointer *(pprt->port->ops->read_status): tmp___1 = (*(pprt->port->ops->read_status))(pprt->port); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4911: Ignoring function call through function pointer *(pprt->port->ops->write_data): (*(pprt->port->ops->write_data))(pprt->port, (int)((unsigned char)oldval)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4898: Ignoring function call through function pointer *(pprt->port->ops->write_data): (*(pprt->port->ops->write_data))(pprt->port, (int)((unsigned char)((~((int)((signed char)bitval))) & ((int)((signed char)oldval))))); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4899: Ignoring function call through function pointer *(pprt->port->ops->read_status): tmp___2 = (*(pprt->port->ops->read_status))(pprt->port); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4928: Ignoring function call through function pointer *(input->u.std.press_fct): (*(input->u.std.press_fct))(input->u.std.press_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5008: Ignoring call via function pointer input_state_falling::release_fct for which no suitable target was found in line: (*release_fct)(input->u.std.release_data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5008: Ignoring function call through function pointer *release_fct: (*release_fct)(input->u.std.release_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3787: Ignoring function call through function pointer *(pprt->port->ops->write_data): (*(pprt->port->ops->write_data))(pprt->port, 32); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4266: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(16); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4266: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(16); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4274: Ignoring call via function pointer lcd_write_data for which no suitable target was found in line: (*lcd_write_data)(32); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4274: Ignoring function call through function pointer *lcd_write_data: (*lcd_write_data)(32); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4275: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(16); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4275: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(16); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4097: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)((((int)cgaddr) * 8) | 64); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4097: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)((((int)cgaddr) * 8) | 64); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4101: Ignoring call via function pointer lcd_write_data for which no suitable target was found in line: (*lcd_write_data)((int)(cgbytes[addr])); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4101: Ignoring function call through function pointer *lcd_write_data: (*lcd_write_data)((int)(cgbytes[addr])); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3864: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(48); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3864: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(48); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3866: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(48); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3866: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(48); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3868: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(48); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3868: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(48); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3880: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(tmp | tmp___0); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3880: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(tmp | tmp___0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3882: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(8); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3882: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(8); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3894: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)((tmp___1 | tmp___2) | ((lcd_flags & 4UL) != 0UL)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3894: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)((tmp___1 | tmp___2) | ((lcd_flags & 4UL) != 0UL)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3897: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(6); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3897: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(6); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3844: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3844: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4029: Ignoring call via function pointer lcd_write_data for which no suitable target was found in line: (*lcd_write_data)(32); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4029: Ignoring function call through function pointer *lcd_write_data: (*lcd_write_data)(32); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4022: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(28); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4022: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(28); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4017: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(24); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4017: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(24); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4005: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(20); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4005: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(20); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3992: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(16); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3992: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(16); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4180: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(tmp___7 | tmp___8); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4180: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(tmp___7 | tmp___8); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4167: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)((tmp___5 | tmp___6) | ((lcd_flags & 4UL) != 0UL)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4167: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)((tmp___5 | tmp___6) | ((lcd_flags & 4UL) != 0UL)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4313: Ignoring call via function pointer lcd_clear_fast for which no suitable target was found in line: (*lcd_clear_fast)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4313: Ignoring function call through function pointer *lcd_clear_fast: (*lcd_clear_fast)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2159500 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1408059 (65%)
  Because of loop head:            751441 (35%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         0 (0%)
  Times precision was empty:       2159500 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         507090
  BDD entailment checks:           442226
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       88
Number of predicates discovered:          0

Time for post operator:                 64.310s
  Time for path formula creation:       61.095s
Time for strengthen operator:           25.310s
Time for prec operator:                 85.979s
  Time for abstraction:                  3.037s (Max:     0.012s, Count: 2159500)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 1.535s
Time for coverage check:                 0.259s
  Time for BDD entailment checks:        0.193s
Total time for SMT solver (w/o itp):     0.000s

Number of path formula cache hits:   11558522 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    22.247s

Total number of created targets for pointer analysis: 54204
   Number of created targets for uf: *unsigned_char is 11553
   Number of created targets for uf: *char is 741


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 2601727, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.190s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 99.390s
  Time for transition matches:                         5.761s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     10266336 (count: 10266336, min: 1, max: 1, avg: 1.00) [1 x 10266336]

CPA algorithm statistics
------------------------
Number of iterations:            6969090
Max size of waitlist:            452
Average size of waitlist:        284
Number of computed successors:   7444174
Max successors for one state:    2
Number of times merged:          32432
Number of times stopped:         474658
Number of times breaked:         0

Total time for CPA algorithm:       902.059s (Max:   902.059s)
  Time for choose from waitlist:      1.676s
  Time for precision adjustment:    408.329s
  Time for transfer relation:       405.903s
  Time for merge operator:            2.509s
  Time for stop operator:            29.171s
  Time for adding to reached set:    13.696s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   0

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.440
  Visited lines:          1494
  Total lines:            2327
  Line coverage:          0.642
  Visited conditions:     660
  Total conditions:       1082
  Condition coverage:     0.610

CPAchecker general statistics
-----------------------------
Number of program locations:     3639
Number of CFA edges:             4411
Number of relevant variables:    300
Number of functions:             91
Number of loops:                 23
Size of reached set:             6969516
  Size of final wait list        427

Time for analysis setup:          4.432s
  Time for loading CPAs:          0.840s
  Time for loading parser:        0.545s
  Time for CFA construction:      2.926s
    Time for parsing file(s):     0.732s
    Time for AST to CFA:          0.992s
    Time for CFA sanity check:    0.203s
    Time for post-processing:     0.809s
      Time for var class.:        0.358s
Time for Analysis:              902.059s
CPU time for analysis:          901.860s
Total time for CPAchecker:      906.495s
Total CPU time for CPAchecker:  906.270s
Time for statistics:            750.347s

Time for Garbage Collector:    1409.220s (in 199 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               5414MB (  5163 MiB) max;   2987MB (  2849 MiB) avg;   5414MB (  5163 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          5414MB (  5163 MiB) max;   3608MB (  3440 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8267MB (  7884 MiB) max;   8170MB (  7791 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
