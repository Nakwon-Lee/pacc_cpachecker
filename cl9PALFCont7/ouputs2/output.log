scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0h2f2g8v/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            535390 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  482327 (90%)
  Because of loop head:            47213 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5850 (1%)
  Times precision was empty:       77166 (14%)
  Times precision was {false}:     1840 (0%)
  Times result was cached:         448827 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7557 (1%)
  Times result was 'false':        37211 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         515682
  BDD entailment checks:           142128
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          8
Number of abstraction locations:          158
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         597014
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 63.53
Number of irrelevant predicates:          132049 (22%)
Number of preds handled by boolean abs:   9448 (2%)
  Total number of models for allsat:      6558
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.87

Time for post operator:                 33.672s
  Time for path formula creation:       32.786s
Time for strengthen operator:            2.254s
Time for prec operator:                 87.188s
  Time for abstraction:                 81.350s (Max:     0.486s, Count: 535390)
    Boolean abstraction:                21.759s
    Solving time:                       25.700s (Max:     0.049s)
    Model enumeration time:              1.134s
    Time for BDD construction:           0.160s (Max:     0.007s)
Time for merge operator:                 2.868s
Time for coverage check:                 0.156s
  Time for BDD entailment checks:        0.117s
Total time for SMT solver (w/o itp):    26.834s

Number of path formula cache hits:   3535513 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    24.651s

Total number of created targets for pointer analysis: 295362
   Number of created targets for uf: *unsigned_short_int is 11
   Number of created targets for uf: *unsigned_char is 600
   Number of created targets for uf: *(unsigned_char)* is 18
   Number of created targets for uf: *unsigned_int is 1025
   Number of created targets for uf: *char is 601


Number of BDD nodes:                               217
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       14206 (count: 274315, min: 0, max: 198, avg: 0.05)
Time for BDD node cleanup:                             0.027s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.320s
  Time for transition matches:                         1.858s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.023s
Automaton transfers with branching:                0
Automaton transfer successors:                      3420349 (count: 3420349, min: 1, max: 1, avg: 1.00) [1 x 3420349]

CPA algorithm statistics
------------------------
Number of iterations:            2319822
Max size of waitlist:            93
Average size of waitlist:        37
Number of computed successors:   2673112
Max successors for one state:    2
Number of times merged:          186777
Number of times stopped:         305830
Number of times breaked:         5850

Total time for CPA algorithm:       174.314s (Max:     1.419s)
  Time for choose from waitlist:      0.718s
  Time for precision adjustment:     99.685s
  Time for transfer relation:        60.281s
  Time for merge operator:            4.694s
  Time for stop operator:             2.070s
  Time for adding to reached set:     2.595s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5850
Avg. length of target path (in blocks):              426310 (count: 5850, min: 10, max: 150, avg: 72.87)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 254.562s
  Counterexample analysis:                           246.096s (Max:     0.167s, Calls: 5850)
    Refinement sat check:                            185.521s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.231s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.360s
  Precision update:                                    1.034s
  ARG update:                                          4.713s

Length of refined path (in blocks):                  417176 (count: 5849, min: 9, max: 149, avg: 71.32)
Number of affected states:                            52400 (count: 5849, min: 2, max: 51, avg: 8.96)
Length (states) of path with itp 'true':             358927 (count: 5849, min: 5, max: 142, avg: 61.37)
Length (states) of path with itp non-trivial itp:     52400 (count: 5849, min: 2, max: 51, avg: 8.96)
Length (states) of path with itp 'false':              5849 (count: 5849, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5849, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           46551 (count: 5849, min: 1, max: 50, avg: 7.96)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5850
Number of successful refinements:     5849
Number of failed refinements:         0
Max. size of reached set before ref.: 132233
Max. size of reached set after ref.:  127050
Avg. size of reached set before ref.: 51617.20
Avg. size of reached set after ref.:  51227.65

Total time for CEGAR algorithm:     895.460s
Time for refinements:               500.625s
Average time for refinement:          0.085s
Max time for refinement:              1.583s

Code Coverage
-----------------------------
  Function coverage:      0.123
  Visited lines:          1523
  Total lines:            5886
  Line coverage:          0.259
  Visited conditions:     238
  Total conditions:       1648
  Condition coverage:     0.144

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             78325
  Number of reached locations:   637 (8%)
    Avg states per location:     122
    Max states per location:     1232 (at node N4369)
  Number of reached functions:   40 (12%)
  Number of partitions:          78324
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N5094 (before line 11440), Function pccard_get_next_tuple called from node N4958, stack depth 6 [3c1c90b5], stack [main, pccard_show_cis, pccard_validate_cis, pccard_read_tuple, pccard_get_first_tuple, pccard_get_next_tuple]])
  Number of target states:       1
  Size of final wait list        29

Time for analysis setup:          4.896s
  Time for loading CPAs:          0.771s
  Time for loading parser:        0.483s
  Time for CFA construction:      3.534s
    Time for parsing file(s):     0.712s
    Time for AST to CFA:          1.283s
    Time for CFA sanity check:    0.371s
    Time for post-processing:     0.979s
      Time for var class.:        0.457s
Time for Analysis:              895.460s
CPU time for analysis:          895.290s
Total time for CPAchecker:      900.359s
Total CPU time for CPAchecker:  900.130s
Time for statistics:              1.059s

Time for Garbage Collector:      29.057s (in 1207 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                695MB (   663 MiB) max;    334MB (   319 MiB) avg;    721MB (   687 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           760MB (   724 MiB) max;    492MB (   470 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8275MB (  7892 MiB) max;   8225MB (  7844 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
