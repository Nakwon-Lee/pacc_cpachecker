scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--net--wireless--mwifiex--mwifiex_pcie_true-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kx6jn4j5/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_handle_rx_packet to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_process_sleep_confirm_resp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            51222 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  46012 (90%)
  Because of loop head:            5123 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         87 (0%)
  Times precision was empty:       20830 (41%)
  Times precision was {false}:     3153 (6%)
  Times result was cached:         26567 (52%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      672 (1%)
  Times result was 'false':        498 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         82188
  BDD entailment checks:           16950
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       172
Number of predicates discovered:          3
Number of abstraction locations:          186
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         31621
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 8.27
Number of irrelevant predicates:          24152 (76%)
Number of preds handled by boolean abs:   679 (2%)
  Total number of models for allsat:      664
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                 28.088s
  Time for path formula creation:       27.237s
Time for strengthen operator:            1.355s
Time for prec operator:                 20.977s
  Time for abstraction:                 19.893s (Max:     0.073s, Count: 51222)
    Boolean abstraction:                 1.620s
    Solving time:                        9.644s (Max:     0.048s)
    Model enumeration time:              0.115s
    Time for BDD construction:           0.059s (Max:     0.007s)
Time for merge operator:                 1.990s
Time for coverage check:                 0.080s
  Time for BDD entailment checks:        0.069s
Total time for SMT solver (w/o itp):     9.759s

Number of path formula cache hits:   1130282 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    23.754s

Total number of created targets for pointer analysis: 9002
   Number of created targets for uf: *unsigned_short_int is 10
   Number of created targets for uf: *unsigned_int is 28


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1331 (count: 57737, min: 0, max: 105, avg: 0.02)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.719s
  Time for transition matches:                         1.577s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      1517051 (count: 1517051, min: 1, max: 1, avg: 1.00) [1 x 1517051]

CPA algorithm statistics
------------------------
Number of iterations:            306845
Max size of waitlist:            51
Average size of waitlist:        28
Number of computed successors:   355614
Max successors for one state:    2
Number of times merged:          32619
Number of times stopped:         46482
Number of times breaked:         87

Total time for CPA algorithm:        77.248s (Max:     4.283s)
  Time for choose from waitlist:      0.307s
  Time for precision adjustment:     25.278s
  Time for transfer relation:        45.205s
  Time for merge operator:            2.750s
  Time for stop operator:             0.721s
  Time for adding to reached set:     1.031s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   87
Avg. length of target path (in blocks):                3471 (count: 87, min: 19, max: 92, avg: 39.90)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.681s
  Counterexample analysis:                             2.579s (Max:     0.074s, Calls: 87)
    Refinement sat check:                              1.933s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.084s
  Precision update:                                    0.054s
  ARG update:                                          0.871s

Length of refined path (in blocks):                    3256 (count: 87, min: 12, max: 91, avg: 37.43)
Number of affected states:                             2256 (count: 87, min: 5, max: 90, avg: 25.93)
Length (states) of path with itp 'true':                913 (count: 87, min: 0, max: 25, avg: 10.49)
Length (states) of path with itp non-trivial itp:      2256 (count: 87, min: 5, max: 90, avg: 25.93)
Length (states) of path with itp 'false':                87 (count: 87, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 87, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2169 (count: 87, min: 4, max: 89, avg: 24.93)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                87
Number of successful refinements:     87
Number of failed refinements:         0
Max. size of reached set before ref.: 6677
Max. size of reached set after ref.:  3252
Avg. size of reached set before ref.: 5141.95
Avg. size of reached set after ref.:  1626.56

Total time for CEGAR algorithm:      81.540s
Time for refinements:                 4.187s
Average time for refinement:          0.048s
Max time for refinement:              0.165s

Code Coverage
-----------------------------
  Function coverage:      0.783
  Visited lines:          7474
  Total lines:            8030
  Line coverage:          0.931
  Visited conditions:     484
  Total conditions:       546
  Condition coverage:     0.886

CPAchecker general statistics
-----------------------------
Number of program locations:     8643
Number of CFA edges:             8988
Number of relevant variables:    2031
Number of functions:             69
Number of loops:                 18
Size of reached set:             2796
  Number of reached locations:   1397 (16%)
    Avg states per location:     2
    Max states per location:     39 (at node N842)
  Number of reached functions:   54 (78%)
  Number of partitions:          2795
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N6095 (before line 12902), Function mwifiex_check_fw_status called from node N7771, stack depth 2 [22b516e9], stack [main, mwifiex_check_fw_status]])
  Number of target states:       0

Time for analysis setup:          8.038s
  Time for loading CPAs:          1.157s
  Time for loading parser:        0.779s
  Time for CFA construction:      5.939s
    Time for parsing file(s):     1.389s
    Time for AST to CFA:          2.109s
    Time for CFA sanity check:    0.601s
    Time for post-processing:     1.629s
      Time for var class.:        0.810s
Time for Analysis:               81.540s
CPU time for analysis:           81.530s
Time for analyzing result:        0.003s
Total time for CPAchecker:       89.582s
Total CPU time for CPAchecker:   89.550s
Time for statistics:              0.188s

Time for Garbage Collector:       5.607s (in 150 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                335MB (   319 MiB) max;    143MB (   136 MiB) avg;    348MB (   332 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     37MB (    36 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           431MB (   411 MiB) max;    226MB (   215 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8137MB (  7760 MiB) max;   8127MB (  7750 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
