scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--regulator--wm831x-dcdc.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_w25gzwdt/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 2608: Dead code detected: return (4294967274U); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_notifier_call_chain to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rdev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rdev_get_id to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_irq_byname to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_output to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_set_bits to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            10439 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  9073 (87%)
  Because of loop head:            1318 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         48 (0%)
  Times precision was empty:       4386 (42%)
  Times precision was {false}:     69 (1%)
  Times result was cached:         5841 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      143 (1%)
  Times result was 'false':        139 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         16474
  BDD entailment checks:           2502
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       320
Number of predicates discovered:          2
Number of abstraction locations:          106
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         6053
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 28.55
Number of irrelevant predicates:          694 (11%)
Number of preds handled by boolean abs:   143 (2%)
  Total number of models for allsat:      143
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  3.360s
  Time for path formula creation:        3.080s
Time for strengthen operator:            0.370s
Time for prec operator:                  3.875s
  Time for abstraction:                  3.411s (Max:     0.046s, Count: 10439)
    Boolean abstraction:                 0.383s
    Solving time:                        0.448s (Max:     0.025s)
    Model enumeration time:              0.034s
    Time for BDD construction:           0.035s (Max:     0.012s)
Time for merge operator:                 0.150s
Time for coverage check:                 0.042s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):     0.482s

Number of path formula cache hits:   234298 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.347s

Total number of created targets for pointer analysis: 2
   Number of created targets for uf: *unsigned_int is 3


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         287 (count: 8115, min: 0, max: 26, avg: 0.04)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.820s
  Time for transition matches:                         0.326s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                       232860 (count: 232860, min: 1, max: 1, avg: 1.00) [1 x 232860]

CPA algorithm statistics
------------------------
Number of iterations:            63521
Max size of waitlist:            83
Average size of waitlist:        43
Number of computed successors:   76059
Max successors for one state:    2
Number of times merged:          6986
Number of times stopped:         9342
Number of times breaked:         48

Total time for CPA algorithm:        14.894s (Max:     1.316s)
  Time for choose from waitlist:      0.180s
  Time for precision adjustment:      5.067s
  Time for transfer relation:         7.734s
  Time for merge operator:            0.446s
  Time for stop operator:             0.314s
  Time for adding to reached set:     0.335s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   48
Avg. length of target path (in blocks):                 615 (count: 48, min: 8, max: 19, avg: 12.81)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.491s
  Counterexample analysis:                             0.956s (Max:     0.051s, Calls: 48)
    Refinement sat check:                              0.725s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.080s
  Precision update:                                    0.066s
  ARG update:                                          0.349s

Length of refined path (in blocks):                     567 (count: 48, min: 7, max: 18, avg: 11.81)
Number of affected states:                              519 (count: 48, min: 6, max: 17, avg: 10.81)
Length (states) of path with itp 'true':                  0 (count: 48, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       519 (count: 48, min: 6, max: 17, avg: 10.81)
Length (states) of path with itp 'false':                48 (count: 48, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 48, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             471 (count: 48, min: 5, max: 16, avg: 9.81)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                48
Number of successful refinements:     48
Number of failed refinements:         0
Max. size of reached set before ref.: 1422
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1363.56
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      16.569s
Time for refinements:                 1.670s
Average time for refinement:          0.034s
Max time for refinement:              0.085s

Code Coverage
-----------------------------
  Function coverage:      0.760
  Visited lines:          3357
  Total lines:            3508
  Line coverage:          0.957
  Visited conditions:     312
  Total conditions:       322
  Condition coverage:     0.969

CPAchecker general statistics
-----------------------------
Number of program locations:     3828
Number of CFA edges:             4019
Number of relevant variables:    884
Number of functions:             50
Number of loops:                 3
Size of reached set:             1272
  Number of reached locations:   824 (22%)
    Avg states per location:     1
    Max states per location:     39 (at node N3529)
  Number of reached functions:   38 (76%)
  Number of partitions:          1272
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.520s
  Time for loading CPAs:          0.951s
  Time for loading parser:        0.685s
  Time for CFA construction:      3.719s
    Time for parsing file(s):     0.997s
    Time for AST to CFA:          1.207s
    Time for CFA sanity check:    0.370s
    Time for post-processing:     0.990s
      Time for var class.:        0.515s
Time for Analysis:               16.569s
CPU time for analysis:           16.550s
Time for analyzing result:        0.006s
Total time for CPAchecker:       22.095s
Total CPU time for CPAchecker:   22.060s
Time for statistics:              0.138s

Time for Garbage Collector:       0.489s (in 44 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     45MB (    43 MiB) avg;     74MB (    70 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8116MB (  7740 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
