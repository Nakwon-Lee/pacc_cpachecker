scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3_true-termination.8-rc1-32_7a-drivers--net--ethernet--i825xx--znet.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_op1jiff3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6272: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            503140 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  492570 (98%)
  Because of loop head:            10447 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         123 (0%)
  Times precision was empty:       79341 (16%)
  Times precision was {false}:     963 (0%)
  Times result was cached:         419450 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3386 (1%)
  Times result was 'false':        6295 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         193971
  BDD entailment checks:           81831
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          6
Number of abstraction locations:          223
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         1562430
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 359.26
Number of irrelevant predicates:          1001379 (64%)
Number of preds handled by boolean abs:   6379 (0%)
  Total number of models for allsat:      3497
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                 16.330s
  Time for path formula creation:       14.975s
Time for strengthen operator:            2.282s
Time for prec operator:                 71.205s
  Time for abstraction:                 64.027s (Max:     0.268s, Count: 503140)
    Boolean abstraction:                 2.490s
    Solving time:                        2.330s (Max:     0.017s)
    Model enumeration time:              0.239s
    Time for BDD construction:           0.152s (Max:     0.009s)
Time for merge operator:                 0.558s
Time for coverage check:                 0.151s
  Time for BDD entailment checks:        0.124s
Total time for SMT solver (w/o itp):     2.569s

Number of path formula cache hits:   2709369 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.137s

Total number of created targets for pointer analysis: 1592
   Number of created targets for uf: *unsigned_short_int is 165


Number of BDD nodes:                               266
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6874 (count: 188718, min: 0, max: 232, avg: 0.04)
Time for BDD node cleanup:                             0.052s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.536s
  Time for transition matches:                         2.011s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      2339241 (count: 2339241, min: 1, max: 1, avg: 1.00) [1 x 2339241]

CPA algorithm statistics
------------------------
Number of iterations:            1500294
Max size of waitlist:            45
Average size of waitlist:        21
Number of computed successors:   1614446
Max successors for one state:    2
Number of times merged:          56070
Number of times stopped:         107719
Number of times breaked:         123

Total time for CPA algorithm:       148.810s (Max:     4.090s)
  Time for choose from waitlist:      0.627s
  Time for precision adjustment:     86.127s
  Time for transfer relation:        47.684s
  Time for merge operator:            1.675s
  Time for stop operator:             2.491s
  Time for adding to reached set:     3.418s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   123
Avg. length of target path (in blocks):               19575 (count: 123, min: 24, max: 236, avg: 159.15)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.763s
  Counterexample analysis:                             4.239s (Max:     0.096s, Calls: 123)
    Refinement sat check:                              1.754s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.206s
  Precision update:                                    0.169s
  ARG update:                                          2.990s

Length of refined path (in blocks):                   18276 (count: 123, min: 23, max: 235, avg: 148.59)
Number of affected states:                            14938 (count: 123, min: 5, max: 233, avg: 121.45)
Length (states) of path with itp 'true':               3215 (count: 123, min: 1, max: 134, avg: 26.14)
Length (states) of path with itp non-trivial itp:     14938 (count: 123, min: 5, max: 233, avg: 121.45)
Length (states) of path with itp 'false':               123 (count: 123, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 123, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           14815 (count: 123, min: 4, max: 232, avg: 120.45)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                123
Number of successful refinements:     123
Number of failed refinements:         0
Max. size of reached set before ref.: 28219
Max. size of reached set after ref.:  13684
Avg. size of reached set before ref.: 14454.05
Avg. size of reached set after ref.:  2297.34

Total time for CEGAR algorithm:     158.168s
Time for refinements:                 9.156s
Average time for refinement:          0.074s
Max time for refinement:              0.162s

Code Coverage
-----------------------------
  Function coverage:      0.651
  Visited lines:          1715
  Total lines:            1885
  Line coverage:          0.910
  Visited conditions:     238
  Total conditions:       310
  Condition coverage:     0.768

CPAchecker general statistics
-----------------------------
Number of program locations:     2499
Number of CFA edges:             2762
Number of relevant variables:    235
Number of functions:             83
Number of loops:                 8
Size of reached set:             5158
  Number of reached locations:   856 (34%)
    Avg states per location:     6
    Max states per location:     283 (at node N51)
  Number of reached functions:   54 (65%)
  Number of partitions:          5138
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1268 (before line 6066), Function hardware_init called from node N736, stack depth 3 [2b6d87f9], stack [main, znet_tx_timeout, hardware_init]])
  Number of target states:       0

Time for analysis setup:          5.687s
  Time for loading CPAs:          1.133s
  Time for loading parser:        0.757s
  Time for CFA construction:      3.611s
    Time for parsing file(s):     1.069s
    Time for AST to CFA:          1.130s
    Time for CFA sanity check:    0.252s
    Time for post-processing:     0.968s
      Time for var class.:        0.473s
Time for Analysis:              158.169s
CPU time for analysis:          158.160s
Time for analyzing result:        0.005s
Total time for CPAchecker:      163.861s
Total CPU time for CPAchecker:  163.840s
Time for statistics:              0.184s

Time for Garbage Collector:      13.571s (in 686 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                150MB (   143 MiB) max;     91MB (    86 MiB) avg;    155MB (   148 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           155MB (   148 MiB) max;    142MB (   136 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8130MB (  7753 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
