scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_dekker_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__zi1ctlo/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 816: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 816: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 816: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 817: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 859: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 859: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 859: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 860: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 942: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 948: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            86 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            73 (85%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (15%)
  Times precision was empty:       4 (5%)
  Times precision was {false}:     12 (14%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      70 (81%)
  Times result was 'false':        27 (31%)
Number of strengthen sat checks:   0
Number of coverage checks:         2945
  BDD entailment checks:           163
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       427
Number of predicates discovered:          8
Number of abstraction locations:          3
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         274
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 3.34
Number of irrelevant predicates:          43 (16%)
Number of preds handled by boolean abs:   231 (84%)
  Total number of models for allsat:      184
  Max number of models for allsat:        12
  Avg number of models for allsat:        2.63

Time for post operator:                  1.495s
  Time for path formula creation:        1.482s
Time for strengthen operator:            0.045s
Time for prec operator:                 21.180s
  Time for abstraction:                 21.114s (Max:     7.314s, Count: 86)
    Boolean abstraction:                 0.654s
    Solving time:                       20.084s (Max:     7.256s)
    Model enumeration time:              0.262s
    Time for BDD construction:           0.083s (Max:     0.020s)
Time for merge operator:                 0.207s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):    20.346s

Number of path formula cache hits:   5745 (48%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.401s

Total number of created targets for pointer analysis: 13244
   Number of created targets for uf: *signed_int is 162
   Number of created targets for uf: *unsigned_char is 218
   Number of created targets for uf: *(unsigned_char)* is 217
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 127


Number of BDD nodes:                               451
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         302 (count: 730, min: 0, max: 85, avg: 0.41)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.077s
Automaton transfers with branching:                0
Automaton transfer successors:                        11214 (count: 11214, min: 1, max: 1, avg: 1.00) [1 x 11214]

CPA algorithm statistics
------------------------
Number of iterations:            6854
Max size of waitlist:            23
Average size of waitlist:        7
Number of computed successors:   8435
Max successors for one state:    2
Number of times merged:          1391
Number of times stopped:         1400
Number of times breaked:         7

Total time for CPA algorithm:        23.932s (Max:     8.431s)
  Time for choose from waitlist:      0.026s
  Time for precision adjustment:     21.352s
  Time for transfer relation:         2.041s
  Time for merge operator:            0.277s
  Time for stop operator:             0.051s
  Time for adding to reached set:     0.059s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                  53 (count: 7, min: 2, max: 17, avg: 7.57)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.633s
  Counterexample analysis:                             3.592s (Max:     2.997s, Calls: 7)
    Refinement sat check:                              3.506s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.013s
  ARG update:                                          0.014s

Length of refined path (in blocks):                      33 (count: 6, min: 2, max: 12, avg: 5.50)
Number of affected states:                               24 (count: 6, min: 1, max: 11, avg: 4.00)
Length (states) of path with itp 'true':                  3 (count: 6, min: 0, max: 1, avg: 0.50)
Length (states) of path with itp non-trivial itp:        24 (count: 6, min: 1, max: 11, avg: 4.00)
Length (states) of path with itp 'false':                 3 (count: 6, min: 0, max: 1, avg: 0.50)
Different non-trivial interpolants along paths:           8 (count: 6, min: 0, max: 3, avg: 1.33)
Equal non-trivial interpolants along paths:              10 (count: 6, min: 0, max: 7, avg: 1.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 2176
Max. size of reached set after ref.:  532
Avg. size of reached set before ref.: 1230.57
Avg. size of reached set after ref.:  267.50

Total time for CEGAR algorithm:      27.587s
Time for refinements:                 3.654s
Average time for refinement:          0.522s
Max time for refinement:              3.000s

Code Coverage
-----------------------------
  Function coverage:      0.389
  Visited lines:          271
  Total lines:            366
  Line coverage:          0.740
  Visited conditions:     101
  Total conditions:       208
  Condition coverage:     0.486

CPAchecker general statistics
-----------------------------
Number of program locations:     744
Number of CFA edges:             857
Number of relevant variables:    53
Number of functions:             18
Number of loops:                 6
Size of reached set:             2176
  Number of reached locations:   162 (22%)
    Avg states per location:     13
    Max states per location:     72 (at node N8)
  Number of reached functions:   7 (39%)
  Number of partitions:          2162
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N412 (before line 901), Function main called from node N392, stack depth 1 [3cdf2c61], stack [main]])
  Number of target states:       1
  Size of final wait list        23

Time for analysis setup:          2.264s
  Time for loading CPAs:          0.395s
  Time for loading parser:        0.559s
  Time for CFA construction:      1.209s
    Time for parsing file(s):     0.368s
    Time for AST to CFA:          0.346s
    Time for CFA sanity check:    0.087s
    Time for post-processing:     0.290s
      Time for var class.:        0.127s
Time for Analysis:               27.587s
CPU time for analysis:           27.580s
Total time for CPAchecker:       29.857s
Total CPU time for CPAchecker:   29.850s
Time for statistics:              0.090s

Time for Garbage Collector:       0.125s (in 12 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    57 MiB) max;     38MB (    36 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     35MB (    33 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8199MB (  7820 MiB) max;   8129MB (  7753 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
