scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_stack_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lr50z3ds/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 1017: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1020: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1022: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1092: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1212: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1218: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            198 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            184 (93%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (7%)
  Times precision was empty:       62 (31%)
  Times precision was {false}:     16 (8%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      120 (61%)
  Times result was 'false':        43 (22%)
Number of strengthen sat checks:   0
Number of coverage checks:         3302
  BDD entailment checks:           222
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       397
Number of predicates discovered:          9
Number of abstraction locations:          4
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         468
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 3.44
Number of irrelevant predicates:          115 (25%)
Number of preds handled by boolean abs:   353 (75%)
  Total number of models for allsat:      266
  Max number of models for allsat:        12
  Avg number of models for allsat:        2.22

Time for post operator:                  2.189s
  Time for path formula creation:        2.156s
Time for strengthen operator:            0.031s
Time for prec operator:                 22.176s
  Time for abstraction:                 22.127s (Max:     3.040s, Count: 198)
    Boolean abstraction:                 0.599s
    Solving time:                       21.203s (Max:     3.008s)
    Model enumeration time:              0.172s
    Time for BDD construction:           0.043s (Max:     0.007s)
Time for merge operator:                 0.367s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):    21.375s

Number of path formula cache hits:   3304 (24%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.062s

Total number of created targets for pointer analysis: 16915
   Number of created targets for uf: *signed_int is 34
   Number of created targets for uf: *unsigned_char is 1882
   Number of created targets for uf: *(unsigned_char)* is 97
   Number of created targets for uf: *_Bool is 34
   Number of created targets for uf: *unsigned_int is 221
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 23


Number of BDD nodes:                               461
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         393 (count: 1172, min: 0, max: 114, avg: 0.34)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.127s
Automaton transfers with branching:                0
Automaton transfer successors:                        13377 (count: 13377, min: 1, max: 1, avg: 1.00) [1 x 13377]

CPA algorithm statistics
------------------------
Number of iterations:            8156
Max size of waitlist:            29
Average size of waitlist:        12
Number of computed successors:   9988
Max successors for one state:    2
Number of times merged:          1540
Number of times stopped:         1557
Number of times breaked:         10

Total time for CPA algorithm:        26.001s (Max:     3.383s)
  Time for choose from waitlist:      0.027s
  Time for precision adjustment:     22.344s
  Time for transfer relation:         2.822s
  Time for merge operator:            0.533s
  Time for stop operator:             0.068s
  Time for adding to reached set:     0.062s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                  83 (count: 10, min: 2, max: 13, avg: 8.30)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.015s
  Counterexample analysis:                             0.947s (Max:     0.123s, Calls: 10)
    Refinement sat check:                              0.842s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.002s
  ARG update:                                          0.050s

Length of refined path (in blocks):                      69 (count: 10, min: 2, max: 13, avg: 6.90)
Number of affected states:                               34 (count: 10, min: 1, max: 12, avg: 3.40)
Length (states) of path with itp 'true':                 25 (count: 10, min: 0, max: 5, avg: 2.50)
Length (states) of path with itp non-trivial itp:        34 (count: 10, min: 1, max: 12, avg: 3.40)
Length (states) of path with itp 'false':                 8 (count: 10, min: 0, max: 1, avg: 0.80)
Different non-trivial interpolants along paths:          15 (count: 10, min: 0, max: 4, avg: 1.50)
Equal non-trivial interpolants along paths:               9 (count: 10, min: 0, max: 9, avg: 0.90)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 1212
Max. size of reached set after ref.:  604
Avg. size of reached set before ref.: 1130.90
Avg. size of reached set after ref.:  476.30

Total time for CEGAR algorithm:      27.069s
Time for refinements:                 1.065s
Average time for refinement:          0.106s
Max time for refinement:              0.159s

Code Coverage
-----------------------------
  Function coverage:      0.360
  Visited lines:          300
  Total lines:            400
  Line coverage:          0.750
  Visited conditions:     97
  Total conditions:       212
  Condition coverage:     0.458

CPAchecker general statistics
-----------------------------
Number of program locations:     940
Number of CFA edges:             1075
Number of relevant variables:    63
Number of functions:             25
Number of loops:                 7
Size of reached set:             1842
  Number of reached locations:   174 (19%)
    Avg states per location:     10
    Max states per location:     66 (at node N8)
  Number of reached functions:   9 (36%)
  Number of partitions:          1822
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N506 (before line 1179), Function main called from node N482, stack depth 1 [4748a0f9], stack [main]])
  Number of target states:       0
  Size of final wait list        29

Time for analysis setup:          2.761s
  Time for loading CPAs:          0.551s
  Time for loading parser:        0.561s
  Time for CFA construction:      1.520s
    Time for parsing file(s):     0.534s
    Time for AST to CFA:          0.480s
    Time for CFA sanity check:    0.082s
    Time for post-processing:     0.304s
      Time for var class.:        0.105s
Time for Analysis:               27.069s
CPU time for analysis:           27.070s
Total time for CPAchecker:       29.834s
Total CPU time for CPAchecker:   29.820s
Time for statistics:              0.069s

Time for Garbage Collector:       0.150s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    59 MiB) max;     43MB (    41 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    32 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8123MB (  7747 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
