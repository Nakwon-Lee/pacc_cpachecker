scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_stack_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_o5fyhqfy/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 1017: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1020: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1022: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1092: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1212: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1218: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            113 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            102 (90%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11 (10%)
  Times precision was empty:       23 (20%)
  Times precision was {false}:     40 (35%)
  Times result was cached:         6 (5%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      44 (39%)
  Times result was 'false':        21 (19%)
Number of strengthen sat checks:   0
Number of coverage checks:         2568
  BDD entailment checks:           48
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       397
Number of predicates discovered:          5
Number of abstraction locations:          6
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         144
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 1.71
Number of irrelevant predicates:          73 (51%)
Number of preds handled by boolean abs:   69 (48%)
  Total number of models for allsat:      69
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.57

Time for post operator:                  1.681s
  Time for path formula creation:        1.634s
Time for strengthen operator:            0.034s
Time for prec operator:                 24.007s
  Time for abstraction:                 23.974s (Max:     2.728s, Count: 113)
    Boolean abstraction:                 0.173s
    Solving time:                       23.161s (Max:     2.704s)
    Model enumeration time:              0.059s
    Time for BDD construction:           0.008s (Max:     0.005s)
Time for merge operator:                 0.320s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):    23.220s

Number of path formula cache hits:   3121 (28%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.545s

Total number of created targets for pointer analysis: 11332
   Number of created targets for uf: *signed_int is 5
   Number of created targets for uf: *unsigned_char is 1260
   Number of created targets for uf: *(unsigned_char)* is 49
   Number of created targets for uf: *_Bool is 22
   Number of created targets for uf: *unsigned_int is 141
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 15


Number of BDD nodes:                               228
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         118 (count: 559, min: 0, max: 51, avg: 0.21)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.102s
Automaton transfers with branching:                0
Automaton transfer successors:                        10865 (count: 10865, min: 1, max: 1, avg: 1.00) [1 x 10865]

CPA algorithm statistics
------------------------
Number of iterations:            6605
Max size of waitlist:            22
Average size of waitlist:        9
Number of computed successors:   8066
Max successors for one state:    2
Number of times merged:          1260
Number of times stopped:         1272
Number of times breaked:         8

Total time for CPA algorithm:        27.095s (Max:     5.507s)
  Time for choose from waitlist:      0.041s
  Time for precision adjustment:     24.197s
  Time for transfer relation:         2.201s
  Time for merge operator:            0.446s
  Time for stop operator:             0.037s
  Time for adding to reached set:     0.051s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                  43 (count: 8, min: 2, max: 9, avg: 5.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.671s
  Counterexample analysis:                             0.618s (Max:     0.094s, Calls: 8)
    Refinement sat check:                              0.564s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.004s
  Precision update:                                    0.001s
  ARG update:                                          0.043s

Length of refined path (in blocks):                      30 (count: 8, min: 2, max: 7, avg: 3.75)
Number of affected states:                               12 (count: 8, min: 1, max: 3, avg: 1.50)
Length (states) of path with itp 'true':                 10 (count: 8, min: 0, max: 4, avg: 1.25)
Length (states) of path with itp non-trivial itp:        12 (count: 8, min: 1, max: 3, avg: 1.50)
Length (states) of path with itp 'false':                 7 (count: 8, min: 0, max: 1, avg: 0.88)
Different non-trivial interpolants along paths:           4 (count: 8, min: 0, max: 2, avg: 0.50)
Equal non-trivial interpolants along paths:               0 (count: 8, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 1188
Max. size of reached set after ref.:  595
Avg. size of reached set before ref.: 1087.00
Avg. size of reached set after ref.:  366.75

Total time for CEGAR algorithm:      27.813s
Time for refinements:                 0.717s
Average time for refinement:          0.089s
Max time for refinement:              0.128s

Code Coverage
-----------------------------
  Function coverage:      0.360
  Visited lines:          300
  Total lines:            400
  Line coverage:          0.750
  Visited conditions:     97
  Total conditions:       212
  Condition coverage:     0.458

CPAchecker general statistics
-----------------------------
Number of program locations:     940
Number of CFA edges:             1075
Number of relevant variables:    63
Number of functions:             25
Number of loops:                 7
Size of reached set:             1011
  Number of reached locations:   174 (19%)
    Avg states per location:     5
    Max states per location:     38 (at node N8)
  Number of reached functions:   9 (36%)
  Number of partitions:          1005
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N499 (before line 1174), Function main called from node N482, stack depth 1 [4748a0f9], stack [main]])
  Number of target states:       0
  Size of final wait list        9

Time for analysis setup:          2.497s
  Time for loading CPAs:          0.506s
  Time for loading parser:        0.456s
  Time for CFA construction:      1.432s
    Time for parsing file(s):     0.436s
    Time for AST to CFA:          0.479s
    Time for CFA sanity check:    0.091s
    Time for post-processing:     0.299s
      Time for var class.:        0.109s
Time for Analysis:               27.813s
CPU time for analysis:           27.810s
Total time for CPAchecker:       30.313s
Total CPU time for CPAchecker:   30.300s
Time for statistics:              0.070s

Time for Garbage Collector:       0.134s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    59 MiB) max;     43MB (    41 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     35MB (    33 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8135MB (  7758 MiB) max;   8125MB (  7748 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
