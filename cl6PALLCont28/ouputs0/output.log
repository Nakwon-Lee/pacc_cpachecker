scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8j648ypb/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 94: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 168: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 207: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 611: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 620: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 999: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1045: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1514: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1555: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1564: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2068: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2115: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2238: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2833: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2887: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 836: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            95 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            32 (34%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         63 (66%)
  Times precision was empty:       3 (3%)
  Times precision was {false}:     62 (65%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      30 (32%)
  Times result was 'false':        58 (61%)
Number of strengthen sat checks:   0
Number of coverage checks:         21537
  BDD entailment checks:           89
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       889
Number of predicates discovered:          50
Number of abstraction locations:          2
Max number of predicates per location:    49
Avg number of predicates per location:    25
Total predicates per abstraction:         673
Max number of predicates per abstraction: 49
Avg number of predicates per abstraction: 7.32
Number of irrelevant predicates:          62 (9%)
Number of preds handled by boolean abs:   611 (91%)
  Total number of models for allsat:      1142
  Max number of models for allsat:        96
  Avg number of models for allsat:        38.07

Time for post operator:                  3.490s
  Time for path formula creation:        3.287s
Time for strengthen operator:            0.212s
Time for prec operator:                 10.268s
  Time for abstraction:                 10.094s (Max:     0.353s, Count: 95)
    Boolean abstraction:                 4.687s
    Solving time:                        4.974s (Max:     0.210s)
    Model enumeration time:              3.247s
    Time for BDD construction:           0.316s (Max:     0.040s)
Time for merge operator:                 0.898s
Time for coverage check:                 0.031s
  Time for BDD entailment checks:        0.012s
Total time for SMT solver (w/o itp):     8.221s

Number of path formula cache hits:   42931 (59%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.097s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               16985
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3174 (count: 1937, min: 0, max: 1737, avg: 1.64)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.360s
Automaton transfers with branching:                0
Automaton transfer successors:                        66976 (count: 66976, min: 1, max: 1, avg: 1.00) [1 x 66976]

CPA algorithm statistics
------------------------
Number of iterations:            50625
Max size of waitlist:            24
Average size of waitlist:        11
Number of computed successors:   61444
Max successors for one state:    2
Number of times merged:          10724
Number of times stopped:         10730
Number of times breaked:         5

Total time for CPA algorithm:        20.860s (Max:     6.950s)
  Time for choose from waitlist:      0.140s
  Time for precision adjustment:     11.287s
  Time for transfer relation:         6.272s
  Time for merge operator:            1.470s
  Time for stop operator:             0.378s
  Time for adding to reached set:     0.319s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  12 (count: 5, min: 2, max: 4, avg: 2.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.977s
  Counterexample analysis:                             0.728s (Max:     0.369s, Calls: 5)
    Refinement sat check:                              0.646s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.025s
  Precision update:                                    0.004s
  ARG update:                                          0.186s

Length of refined path (in blocks):                      12 (count: 5, min: 2, max: 4, avg: 2.40)
Number of affected states:                                7 (count: 5, min: 1, max: 3, avg: 1.40)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         7 (count: 5, min: 1, max: 3, avg: 1.40)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           2 (count: 5, min: 0, max: 2, avg: 0.40)
Equal non-trivial interpolants along paths:               0 (count: 5, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 12468
Max. size of reached set after ref.:  134
Avg. size of reached set before ref.: 5920.60
Avg. size of reached set after ref.:  134.00

Total time for CEGAR algorithm:      22.018s
Time for refinements:                 1.157s
Average time for refinement:          0.231s
Max time for refinement:              0.482s

Code Coverage
-----------------------------
  Function coverage:      0.664
  Visited lines:          879
  Total lines:            1453
  Line coverage:          0.605
  Visited conditions:     344
  Total conditions:       498
  Condition coverage:     0.691

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             21724
  Number of reached locations:   917 (46%)
    Avg states per location:     23
    Max states per location:     144 (at node N162)
  Number of reached functions:   75 (66%)
  Number of partitions:          21719
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N809 (before lines 1114-1281), Function test called from node N1274, stack depth 2 [1fc0053e], stack [main, test]])
  Number of target states:       0

Time for analysis setup:          4.358s
  Time for loading CPAs:          0.895s
  Time for loading parser:        0.723s
  Time for CFA construction:      2.624s
    Time for parsing file(s):     0.707s
    Time for AST to CFA:          0.779s
    Time for CFA sanity check:    0.220s
    Time for post-processing:     0.672s
      Time for var class.:        0.369s
Time for Analysis:               22.019s
CPU time for analysis:           22.020s
Time for analyzing result:        0.018s
Total time for CPAchecker:       26.382s
Total CPU time for CPAchecker:   26.310s
Time for statistics:              0.425s

Time for Garbage Collector:       0.640s (in 27 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 89MB (    85 MiB) max;     49MB (    46 MiB) avg;     95MB (    90 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8134MB (  7758 MiB) max;   8119MB (  7743 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
