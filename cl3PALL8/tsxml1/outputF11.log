scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-block-paride-pt.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xksfi9fi/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3283: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3337: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4294: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4514: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2934: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            293598 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            293523 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         75 (0%)
  Times precision was empty:       293051 (100%)
  Times precision was {false}:     59 (0%)
  Times result was cached:         233 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      255 (0%)
  Times result was 'false':        123 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1810181
  BDD entailment checks:           127667
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       92
Number of predicates discovered:          3
Number of abstraction locations:          7
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         687
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 2.19
Number of irrelevant predicates:          95 (14%)
Number of preds handled by boolean abs:   349 (51%)
  Total number of models for allsat:      248
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.97

Time for post operator:                167.120s
  Time for path formula creation:      104.735s
Time for strengthen operator:           36.111s
Time for prec operator:                 23.977s
  Time for abstraction:                 11.022s (Max:     0.255s, Count: 293598)
    Boolean abstraction:                 7.549s
    Solving time:                        7.660s (Max:     0.245s)
    Model enumeration time:              0.469s
    Time for BDD construction:           0.035s (Max:     0.007s)
Time for merge operator:                18.661s
Time for coverage check:                 0.316s
  Time for BDD entailment checks:        0.176s
Total time for SMT solver (w/o itp):     8.129s

Number of path formula cache hits:   11193209 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    54.384s

Total number of created targets for pointer analysis: 584167
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *signed_int is 50
   Number of created targets for uf: *(char)* is 8285
   Number of created targets for uf: *char is 671


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         491 (count: 422613, min: 0, max: 66, avg: 0.00)
Time for BDD node cleanup:                             0.044s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                121.531s
  Time for transition matches:                         8.929s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                     10918502 (count: 10918502, min: 1, max: 1, avg: 1.00) [1 x 10918502]

CPA algorithm statistics
------------------------
Number of iterations:            7424599
Max size of waitlist:            74416
Average size of waitlist:        37588
Number of computed successors:   8468163
Max successors for one state:    2
Number of times merged:          841257
Number of times stopped:         968899
Number of times breaked:         7

Total time for CPA algorithm:       893.405s (Max:   857.728s)
  Time for choose from waitlist:      2.385s
  Time for precision adjustment:    240.338s
  Time for transfer relation:       488.641s
  Time for merge operator:           81.039s
  Time for stop operator:            36.717s
  Time for adding to reached set:    20.038s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                  31 (count: 7, min: 1, max: 10, avg: 4.43)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.473s
  Counterexample analysis:                             0.341s (Max:     0.102s, Calls: 7)
    Refinement sat check:                              0.280s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.010s
  ARG update:                                          0.107s

Length of refined path (in blocks):                      29 (count: 7, min: 1, max: 9, avg: 4.14)
Number of affected states:                               22 (count: 7, min: 0, max: 8, avg: 3.14)
Length (states) of path with itp 'true':                  0 (count: 7, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        22 (count: 7, min: 0, max: 8, avg: 3.14)
Length (states) of path with itp 'false':                 2 (count: 7, min: 0, max: 1, avg: 0.29)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              16 (count: 7, min: 0, max: 7, avg: 2.29)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 91717
Max. size of reached set after ref.:  80975
Avg. size of reached set before ref.: 27260.14
Avg. size of reached set after ref.:  24708.43

Total time for CEGAR algorithm:     894.580s
Time for refinements:                 0.996s
Average time for refinement:          0.142s
Max time for refinement:              0.319s

Code Coverage
-----------------------------
  Function coverage:      0.896
  Visited lines:          1496
  Total lines:            1570
  Line coverage:          0.953
  Visited conditions:     274
  Total conditions:       302
  Condition coverage:     0.907

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2149
Number of relevant variables:    271
Number of functions:             48
Number of loops:                 18
Size of reached set:             7481280
  Size of final wait list        74415

Time for analysis setup:          5.541s
  Time for loading CPAs:          1.039s
  Time for loading parser:        0.786s
  Time for CFA construction:      3.536s
    Time for parsing file(s):     1.048s
    Time for AST to CFA:          1.279s
    Time for CFA sanity check:    0.206s
    Time for post-processing:     0.755s
      Time for var class.:        0.360s
Time for Analysis:              894.580s
CPU time for analysis:          894.530s
Total time for CPAchecker:      900.130s
Total CPU time for CPAchecker:  900.070s
Time for statistics:            349.781s

Time for Garbage Collector:     812.005s (in 204 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               5413MB (  5163 MiB) max;   2717MB (  2591 MiB) avg;   5414MB (  5163 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          5414MB (  5163 MiB) max;   3499MB (  3337 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8138MB (  7761 MiB) max;   8133MB (  7757 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
