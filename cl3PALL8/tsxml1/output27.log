scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-block-paride-pt.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_q37bxom3/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3283: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3337: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4294: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4514: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2934: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2447 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            2350 (96%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         97 (4%)
  Times precision was empty:       829 (34%)
  Times precision was {false}:     175 (7%)
  Times result was cached:         1240 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      203 (8%)
  Times result was 'false':        352 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         7893
  BDD entailment checks:           975
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       92
Number of predicates discovered:          3
Number of abstraction locations:          14
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         1826
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 4.83
Number of irrelevant predicates:          602 (33%)
Number of preds handled by boolean abs:   226 (12%)
  Total number of models for allsat:      186
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.92

Time for post operator:                  6.042s
  Time for path formula creation:        5.927s
Time for strengthen operator:            0.183s
Time for prec operator:                 11.770s
  Time for abstraction:                 11.450s (Max:     0.204s, Count: 2447)
    Boolean abstraction:                 5.596s
    Solving time:                        8.319s (Max:     0.189s)
    Model enumeration time:              0.215s
    Time for BDD construction:           0.025s (Max:     0.006s)
Time for merge operator:                 0.768s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     8.547s

Number of path formula cache hits:   57989 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.398s

Total number of created targets for pointer analysis: 23674
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *signed_int is 482
   Number of created targets for uf: *(char)* is 41
   Number of created targets for uf: *char is 765


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         391 (count: 4035, min: 0, max: 52, avg: 0.10)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.463s
Automaton transfers with branching:                0
Automaton transfer successors:                        82187 (count: 82187, min: 1, max: 1, avg: 1.00) [1 x 82187]

CPA algorithm statistics
------------------------
Number of iterations:            46134
Max size of waitlist:            112
Average size of waitlist:        50
Number of computed successors:   51468
Max successors for one state:    2
Number of times merged:          3459
Number of times stopped:         4341
Number of times breaked:         13

Total time for CPA algorithm:        23.734s (Max:     6.540s)
  Time for choose from waitlist:      0.082s
  Time for precision adjustment:     12.674s
  Time for transfer relation:         8.589s
  Time for merge operator:            1.025s
  Time for stop operator:             0.257s
  Time for adding to reached set:     0.379s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                  55 (count: 13, min: 1, max: 7, avg: 4.23)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.767s
  Counterexample analysis:                             0.439s (Max:     0.135s, Calls: 13)
    Refinement sat check:                              0.382s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.024s
  Precision update:                                    0.016s
  ARG update:                                          0.250s

Length of refined path (in blocks):                      49 (count: 13, min: 1, max: 6, avg: 3.77)
Number of affected states:                               36 (count: 13, min: 0, max: 5, avg: 2.77)
Length (states) of path with itp 'true':                  0 (count: 13, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        36 (count: 13, min: 0, max: 5, avg: 2.77)
Length (states) of path with itp 'false':                 3 (count: 13, min: 0, max: 1, avg: 0.23)
Different non-trivial interpolants along paths:           0 (count: 13, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              25 (count: 13, min: 0, max: 4, avg: 1.92)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 9673
Max. size of reached set after ref.:  1137
Avg. size of reached set before ref.: 3567.92
Avg. size of reached set after ref.:  114.31

Total time for CEGAR algorithm:      24.681s
Time for refinements:                 0.946s
Average time for refinement:          0.072s
Max time for refinement:              0.200s

Code Coverage
-----------------------------
  Function coverage:      0.833
  Visited lines:          1225
  Total lines:            1570
  Line coverage:          0.780
  Visited conditions:     172
  Total conditions:       302
  Condition coverage:     0.570

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2149
Number of relevant variables:    271
Number of functions:             48
Number of loops:                 18
Size of reached set:             1878
  Number of reached locations:   538 (28%)
    Avg states per location:     3
    Max states per location:     50 (at node N101)
  Number of reached functions:   40 (83%)
  Number of partitions:          1878
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        30

Time for analysis setup:          5.587s
  Time for loading CPAs:          1.081s
  Time for loading parser:        0.782s
  Time for CFA construction:      3.556s
    Time for parsing file(s):     0.933s
    Time for AST to CFA:          1.317s
    Time for CFA sanity check:    0.206s
    Time for post-processing:     0.857s
      Time for var class.:        0.401s
Time for Analysis:               24.681s
CPU time for analysis:           24.680s
Total time for CPAchecker:       30.272s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.127s

Time for Garbage Collector:       0.683s (in 35 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 85MB (    81 MiB) max;     48MB (    45 MiB) avg;     88MB (    84 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8133MB (  7757 MiB) max;   8119MB (  7742 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
