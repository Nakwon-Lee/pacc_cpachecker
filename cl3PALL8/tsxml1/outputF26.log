scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-block-paride-pt.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4q4x59sc/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3283: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3337: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4294: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4514: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2934: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            268615 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            268610 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (0%)
  Times precision was empty:       195245 (73%)
  Times precision was {false}:     2923 (1%)
  Times result was cached:         70445 (26%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2 (0%)
  Times result was 'false':        8353 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1796002
  BDD entailment checks:           225234
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       76
Number of predicates discovered:          2
Number of abstraction locations:          3
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         73370
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 25.08
Number of irrelevant predicates:          73368 (100%)
Number of preds handled by boolean abs:   2 (0%)
  Total number of models for allsat:      2
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                107.428s
  Time for path formula creation:      102.218s
Time for strengthen operator:            8.190s
Time for prec operator:                223.041s
  Time for abstraction:                211.784s (Max:    22.508s, Count: 268615)
    Boolean abstraction:                 0.120s
    Solving time:                       60.036s (Max:     0.063s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                14.383s
Time for coverage check:                 0.441s
  Time for BDD entailment checks:        0.286s
Total time for SMT solver (w/o itp):    60.040s

Number of path formula cache hits:   10186336 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    50.111s

Total number of created targets for pointer analysis: 651020
   Number of created targets for uf: *(struct_pi_adapter)* is 5
   Number of created targets for uf: *signed_int is 9235
   Number of created targets for uf: *(char)* is 5
   Number of created targets for uf: *char is 157


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           7 (count: 436185, min: 0, max: 5, avg: 0.00)
Time for BDD node cleanup:                             0.056s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.503s
  Time for transition matches:                         6.820s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      9943507 (count: 9943507, min: 1, max: 1, avg: 1.00) [1 x 9943507]

CPA algorithm statistics
------------------------
Number of iterations:            6815132
Max size of waitlist:            5159
Average size of waitlist:        3607
Number of computed successors:   7773988
Max successors for one state:    2
Number of times merged:          785384
Number of times stopped:         945604
Number of times breaked:         3

Total time for CPA algorithm:       916.234s (Max:   913.214s)
  Time for choose from waitlist:      3.414s
  Time for precision adjustment:    490.464s
  Time for transfer relation:       290.103s
  Time for merge operator:           26.070s
  Time for stop operator:             8.982s
  Time for adding to reached set:    21.975s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                   9 (count: 3, min: 1, max: 6, avg: 3.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.079s
  Counterexample analysis:                             0.023s (Max:     0.012s, Calls: 3)
    Refinement sat check:                              0.011s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.004s
  Precision update:                                    0.004s
  ARG update:                                          0.035s

Length of refined path (in blocks):                       4 (count: 3, min: 1, max: 2, avg: 1.33)
Number of affected states:                                1 (count: 3, min: 0, max: 1, avg: 0.33)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         1 (count: 3, min: 0, max: 1, avg: 0.33)
Length (states) of path with itp 'false':                 1 (count: 3, min: 0, max: 1, avg: 0.33)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 3, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 1651
Max. size of reached set after ref.:  30
Avg. size of reached set before ref.: 614.00
Avg. size of reached set after ref.:  29.33

Total time for CEGAR algorithm:     916.368s
Time for refinements:                 0.126s
Average time for refinement:          0.042s
Max time for refinement:              0.057s

Code Coverage
-----------------------------
  Function coverage:      0.542
  Visited lines:          1003
  Total lines:            1570
  Line coverage:          0.639
  Visited conditions:     122
  Total conditions:       302
  Condition coverage:     0.404

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2149
Number of relevant variables:    271
Number of functions:             48
Number of loops:                 18
Size of reached set:             6818277
  Size of final wait list        4859

Time for analysis setup:          5.699s
  Time for loading CPAs:          1.079s
  Time for loading parser:        0.853s
  Time for CFA construction:      3.568s
    Time for parsing file(s):     1.044s
    Time for AST to CFA:          1.349s
    Time for CFA sanity check:    0.187s
    Time for post-processing:     0.769s
      Time for var class.:        0.385s
Time for Analysis:              916.368s
CPU time for analysis:          916.320s
Total time for CPAchecker:      922.078s
Total CPU time for CPAchecker:  922.010s
Time for statistics:            164.576s

Time for Garbage Collector:     548.031s (in 233 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               5413MB (  5163 MiB) max;   2597MB (  2477 MiB) avg;   5414MB (  5163 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          5414MB (  5163 MiB) max;   3382MB (  3225 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8206MB (  7826 MiB) max;   8149MB (  7771 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
