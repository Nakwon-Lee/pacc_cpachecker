scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-block-paride-pt.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_b44gmyb4/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3283: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3337: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4294: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4514: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            905 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            875 (97%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         30 (3%)
  Times precision was empty:       307 (34%)
  Times precision was {false}:     284 (31%)
  Times result was cached:         278 (31%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      36 (4%)
  Times result was 'false':        118 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         4389
  BDD entailment checks:           315
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       92
Number of predicates discovered:          2
Number of abstraction locations:          7
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         598
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.87
Number of irrelevant predicates:          523 (87%)
Number of preds handled by boolean abs:   36 (6%)
  Total number of models for allsat:      31
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.86

Time for post operator:                  6.914s
  Time for path formula creation:        6.803s
Time for strengthen operator:            0.110s
Time for prec operator:                 13.065s
  Time for abstraction:                 12.859s (Max:     0.313s, Count: 905)
    Boolean abstraction:                 0.881s
    Solving time:                       10.869s (Max:     0.299s)
    Model enumeration time:              0.019s
    Time for BDD construction:           0.012s (Max:     0.007s)
Time for merge operator:                 0.954s
Time for coverage check:                 0.038s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):    10.894s

Number of path formula cache hits:   5056 (14%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.443s

Total number of created targets for pointer analysis: 35403
   Number of created targets for uf: *(struct_pi_adapter)* is 5
   Number of created targets for uf: *signed_int is 107
   Number of created targets for uf: *(char)* is 5
   Number of created targets for uf: *char is 53


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          69 (count: 2342, min: 0, max: 34, avg: 0.03)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.279s
Automaton transfers with branching:                0
Automaton transfer successors:                        35654 (count: 35654, min: 1, max: 1, avg: 1.00) [1 x 35654]

CPA algorithm statistics
------------------------
Number of iterations:            20930
Max size of waitlist:            120
Average size of waitlist:        52
Number of computed successors:   23653
Max successors for one state:    2
Number of times merged:          2037
Number of times stopped:         2352
Number of times breaked:         6

Total time for CPA algorithm:        24.378s (Max:    13.847s)
  Time for choose from waitlist:      0.101s
  Time for precision adjustment:     13.599s
  Time for transfer relation:         8.742s
  Time for merge operator:            1.146s
  Time for stop operator:             0.152s
  Time for adding to reached set:     0.149s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  38 (count: 6, min: 1, max: 13, avg: 6.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.499s
  Counterexample analysis:                             0.310s (Max:     0.160s, Calls: 6)
    Refinement sat check:                              0.274s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.005s
  Precision update:                                    0.002s
  ARG update:                                          0.162s

Length of refined path (in blocks):                      31 (count: 6, min: 1, max: 13, avg: 5.17)
Number of affected states:                               21 (count: 6, min: 0, max: 12, avg: 3.50)
Length (states) of path with itp 'true':                  4 (count: 6, min: 0, max: 4, avg: 0.67)
Length (states) of path with itp non-trivial itp:        21 (count: 6, min: 0, max: 12, avg: 3.50)
Length (states) of path with itp 'false':                 1 (count: 6, min: 0, max: 1, avg: 0.17)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              17 (count: 6, min: 0, max: 11, avg: 2.83)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 11370
Max. size of reached set after ref.:  3057
Avg. size of reached set before ref.: 3969.83
Avg. size of reached set after ref.:  534.17

Total time for CEGAR algorithm:      24.987s
Time for refinements:                 0.606s
Average time for refinement:          0.101s
Max time for refinement:              0.255s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          859
  Total lines:            1570
  Line coverage:          0.547
  Visited conditions:     72
  Total conditions:       302
  Condition coverage:     0.238

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2149
Number of relevant variables:    271
Number of functions:             48
Number of loops:                 18
Size of reached set:             569
  Number of reached locations:   258 (13%)
    Avg states per location:     2
    Max states per location:     12 (at node N101)
  Number of reached functions:   24 (50%)
  Number of partitions:          569
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        12

Time for analysis setup:          5.249s
  Time for loading CPAs:          1.007s
  Time for loading parser:        0.843s
  Time for CFA construction:      3.236s
    Time for parsing file(s):     0.960s
    Time for AST to CFA:          1.133s
    Time for CFA sanity check:    0.197s
    Time for post-processing:     0.725s
      Time for var class.:        0.345s
Time for Analysis:               24.987s
CPU time for analysis:           24.990s
Total time for CPAchecker:       30.246s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.114s

Time for Garbage Collector:       0.526s (in 24 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 82MB (    78 MiB) max;     49MB (    46 MiB) avg;     85MB (    81 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8133MB (  7757 MiB) max;   8119MB (  7742 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
