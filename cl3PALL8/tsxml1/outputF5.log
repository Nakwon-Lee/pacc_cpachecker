scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-block-paride-pt.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_093mi1x1/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3283: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3337: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4294: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4514: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2934: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            197679 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            197653 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         26 (0%)
  Times precision was empty:       1668 (1%)
  Times precision was {false}:     273 (0%)
  Times result was cached:         185815 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9923 (5%)
  Times result was 'false':        23167 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         1213946
  BDD entailment checks:           110698
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       76
Number of predicates discovered:          3
Number of abstraction locations:          10
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         390542
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 38.30
Number of irrelevant predicates:          20362 (5%)
Number of preds handled by boolean abs:   16499 (4%)
  Total number of models for allsat:      7577
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.76

Time for post operator:                 97.697s
  Time for path formula creation:       94.065s
Time for strengthen operator:            6.343s
Time for prec operator:                582.047s
  Time for abstraction:                574.149s (Max:     5.364s, Count: 197679)
    Boolean abstraction:               369.092s
    Solving time:                      362.762s (Max:     0.992s)
    Model enumeration time:             15.445s
    Time for BDD construction:           0.401s (Max:     0.009s)
Time for merge operator:                16.046s
Time for coverage check:                 0.343s
  Time for BDD entailment checks:        0.235s
Total time for SMT solver (w/o itp):   378.207s

Number of path formula cache hits:   7120938 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    62.420s

Total number of created targets for pointer analysis: 849012
   Number of created targets for uf: *(struct_pi_adapter)* is 53
   Number of created targets for uf: *signed_int is 9289
   Number of created targets for uf: *(char)* is 53
   Number of created targets for uf: *char is 1209


Number of BDD nodes:                               206
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       16771 (count: 173901, min: 0, max: 1115, avg: 0.10)
Time for BDD node cleanup:                             0.069s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.876s
  Time for transition matches:                         5.690s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      7344669 (count: 7344669, min: 1, max: 1, avg: 1.00) [1 x 7344669]

CPA algorithm statistics
------------------------
Number of iterations:            4891297
Max size of waitlist:            2081
Average size of waitlist:        1204
Number of computed successors:   5576877
Max successors for one state:    2
Number of times merged:          551624
Number of times stopped:         658214
Number of times breaked:         13

Total time for CPA algorithm:       891.148s (Max:   780.481s)
  Time for choose from waitlist:      1.886s
  Time for precision adjustment:    637.326s
  Time for transfer relation:       190.119s
  Time for merge operator:           23.798s
  Time for stop operator:             8.141s
  Time for adding to reached set:    14.011s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 171 (count: 13, min: 1, max: 27, avg: 13.15)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.153s
  Counterexample analysis:                             1.572s (Max:     0.386s, Calls: 13)
    Refinement sat check:                              1.435s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.005s
  ARG update:                                          1.520s

Length of refined path (in blocks):                     130 (count: 13, min: 1, max: 25, avg: 10.00)
Number of affected states:                              108 (count: 13, min: 0, max: 24, avg: 8.31)
Length (states) of path with itp 'true':                  9 (count: 13, min: 0, max: 5, avg: 0.69)
Length (states) of path with itp non-trivial itp:       108 (count: 13, min: 0, max: 24, avg: 8.31)
Length (states) of path with itp 'false':                 7 (count: 13, min: 0, max: 1, avg: 0.54)
Different non-trivial interpolants along paths:           0 (count: 13, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              99 (count: 13, min: 0, max: 23, avg: 7.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 169514
Max. size of reached set after ref.:  2362
Avg. size of reached set before ref.: 28438.46
Avg. size of reached set after ref.:  384.08

Total time for CEGAR algorithm:     894.720s
Time for refinements:                 3.560s
Average time for refinement:          0.273s
Max time for refinement:              1.115s

Code Coverage
-----------------------------
  Function coverage:      0.542
  Visited lines:          1006
  Total lines:            1570
  Line coverage:          0.641
  Visited conditions:     124
  Total conditions:       302
  Condition coverage:     0.411

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2149
Number of relevant variables:    271
Number of functions:             48
Number of loops:                 18
Size of reached set:             4530789
  Size of final wait list        1600

Time for analysis setup:          5.295s
  Time for loading CPAs:          0.916s
  Time for loading parser:        0.826s
  Time for CFA construction:      3.370s
    Time for parsing file(s):     1.058s
    Time for AST to CFA:          1.167s
    Time for CFA sanity check:    0.186s
    Time for post-processing:     0.721s
      Time for var class.:        0.335s
Time for Analysis:              894.720s
CPU time for analysis:          894.670s
Total time for CPAchecker:      900.023s
Total CPU time for CPAchecker:  899.950s
Time for statistics:             24.546s

Time for Garbage Collector:     104.659s (in 364 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               4329MB (  4129 MiB) max;   1688MB (  1610 MiB) avg;   4711MB (  4493 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          5414MB (  5163 MiB) max;   2337MB (  2229 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8414MB (  8025 MiB) max;   8233MB (  7852 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
