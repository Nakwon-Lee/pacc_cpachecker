scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-block-paride-pt.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ds93p3rn/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3283: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3337: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4294: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4514: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2934: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            279094 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            249884 (90%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29210 (10%)
  Times precision was empty:       125 (0%)
  Times precision was {false}:     62 (0%)
  Times result was cached:         269118 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9789 (4%)
  Times result was 'false':        48455 (17%)
Number of strengthen sat checks:   0
Number of coverage checks:         1223678
  BDD entailment checks:           129894
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       84
Number of predicates discovered:          2
Number of abstraction locations:          9
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         278969
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 28.32
Number of irrelevant predicates:          29271 (10%)
Number of preds handled by boolean abs:   9789 (4%)
  Total number of models for allsat:      7059
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.72

Time for post operator:                 97.363s
  Time for path formula creation:       91.557s
Time for strengthen operator:            7.457s
Time for prec operator:                556.737s
  Time for abstraction:                547.686s (Max:    12.194s, Count: 279094)
    Boolean abstraction:               328.253s
    Solving time:                      315.124s (Max:     1.180s)
    Model enumeration time:             13.607s
    Time for BDD construction:           0.354s (Max:     0.008s)
Time for merge operator:                19.401s
Time for coverage check:                 0.340s
  Time for BDD entailment checks:        0.236s
Total time for SMT solver (w/o itp):   328.731s

Number of path formula cache hits:   7749306 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    55.353s

Total number of created targets for pointer analysis: 547235
   Number of created targets for uf: *(struct_pi_adapter)* is 5
   Number of created targets for uf: *signed_int is 7694
   Number of created targets for uf: *(char)* is 12729
   Number of created targets for uf: *char is 105


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       16851 (count: 189097, min: 0, max: 753, avg: 0.09)
Time for BDD node cleanup:                             0.049s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 13.317s
  Time for transition matches:                         6.583s
  Time for transition assertions:                      0.012s
  Time for transition actions:                         0.060s
Automaton transfers with branching:                0
Automaton transfer successors:                      7913352 (count: 7913352, min: 1, max: 1, avg: 1.00) [1 x 7913352]

CPA algorithm statistics
------------------------
Number of iterations:            5650069
Max size of waitlist:            30
Average size of waitlist:        22
Number of computed successors:   6375420
Max successors for one state:    2
Number of times merged:          546892
Number of times stopped:         676781
Number of times breaked:         9

Total time for CPA algorithm:       894.063s (Max:   887.121s)
  Time for choose from waitlist:      2.379s
  Time for precision adjustment:    611.192s
  Time for transfer relation:       206.157s
  Time for merge operator:           27.914s
  Time for stop operator:             7.020s
  Time for adding to reached set:    21.830s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                  72 (count: 9, min: 1, max: 14, avg: 8.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.557s
  Counterexample analysis:                             0.439s (Max:     0.135s, Calls: 9)
    Refinement sat check:                              0.383s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.005s
  ARG update:                                          0.074s

Length of refined path (in blocks):                      49 (count: 9, min: 1, max: 14, avg: 5.44)
Number of affected states:                               24 (count: 9, min: 0, max: 13, avg: 2.67)
Length (states) of path with itp 'true':                 16 (count: 9, min: 0, max: 10, avg: 1.78)
Length (states) of path with itp non-trivial itp:        24 (count: 9, min: 0, max: 13, avg: 2.67)
Length (states) of path with itp 'false':                 4 (count: 9, min: 0, max: 1, avg: 0.44)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              20 (count: 9, min: 0, max: 12, avg: 2.22)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 1453
Max. size of reached set after ref.:  1257
Avg. size of reached set before ref.: 787.00
Avg. size of reached set after ref.:  306.89

Total time for CEGAR algorithm:     894.718s
Time for refinements:                 0.645s
Average time for refinement:          0.071s
Max time for refinement:              0.168s

Code Coverage
-----------------------------
  Function coverage:      0.854
  Visited lines:          1266
  Total lines:            1570
  Line coverage:          0.806
  Visited conditions:     190
  Total conditions:       302
  Condition coverage:     0.629

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2149
Number of relevant variables:    271
Number of functions:             48
Number of loops:                 18
Size of reached set:             5645863
  Size of final wait list        18

Time for analysis setup:          5.501s
  Time for loading CPAs:          1.013s
  Time for loading parser:        0.816s
  Time for CFA construction:      3.471s
    Time for parsing file(s):     1.047s
    Time for AST to CFA:          1.223s
    Time for CFA sanity check:    0.189s
    Time for post-processing:     0.764s
      Time for var class.:        0.377s
Time for Analysis:              894.718s
CPU time for analysis:          894.670s
Total time for CPAchecker:      900.228s
Total CPU time for CPAchecker:  900.160s
Time for statistics:             95.648s

Time for Garbage Collector:     181.217s (in 276 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               5223MB (  4981 MiB) max;   2195MB (  2093 MiB) avg;   5414MB (  5163 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     39MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          5414MB (  5163 MiB) max;   2994MB (  2855 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    40 MiB) avg
Total process virtual memory:   8350MB (  7963 MiB) max;   8219MB (  7839 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
