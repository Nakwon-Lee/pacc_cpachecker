scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product13_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5w59zmqg/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 53: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 373: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 445: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 882: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 911: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1129: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1332: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1462: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1509: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1554: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1778: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1850: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1897: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2250: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2308: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2384: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2423: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2497: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2534: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2608: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 210: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            46645 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  45253 (97%)
  Because of loop head:            1354 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         38 (0%)
  Times precision was empty:       3509 (8%)
  Times precision was {false}:     139 (0%)
  Times result was cached:         36097 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6900 (15%)
  Times result was 'false':        1031 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         146386
  BDD entailment checks:           18578
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          193
Number of abstraction locations:          133
Max number of predicates per location:    37
Avg number of predicates per location:    15
Total predicates per abstraction:         609189
Max number of predicates per abstraction: 37
Avg number of predicates per abstraction: 86.54
Number of irrelevant predicates:          202548 (33%)
Number of preds handled by boolean abs:   71400 (12%)
  Total number of models for allsat:      281276
  Max number of models for allsat:        3840
  Avg number of models for allsat:        40.76

Time for post operator:                  3.616s
  Time for path formula creation:        3.296s
Time for strengthen operator:            0.481s
Time for prec operator:                 79.744s
  Time for abstraction:                 78.851s (Max:     0.580s, Count: 46645)
    Boolean abstraction:                47.730s
    Solving time:                       10.501s (Max:     0.017s)
    Model enumeration time:             23.772s
    Time for BDD construction:          12.176s (Max:     0.187s)
Time for merge operator:                 0.681s
Time for coverage check:                 0.089s
  Time for BDD entailment checks:        0.077s
Total time for SMT solver (w/o itp):    34.273s

Number of path formula cache hits:   451740 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.794s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               249132
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       89371 (count: 94347, min: 0, max: 2104, avg: 0.95)
Time for BDD node cleanup:                             0.041s
Time for BDD garbage collection:                       0.161s (in 14 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.861s
  Time for transition matches:                         0.406s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       416367 (count: 416367, min: 1, max: 1, avg: 1.00) [1 x 416367]

CPA algorithm statistics
------------------------
Number of iterations:            318221
Max size of waitlist:            85
Average size of waitlist:        30
Number of computed successors:   388279
Max successors for one state:    2
Number of times merged:          63904
Number of times stopped:         68742
Number of times breaked:         38

Total time for CPA algorithm:        96.831s (Max:     8.754s)
  Time for choose from waitlist:      0.202s
  Time for precision adjustment:     82.545s
  Time for transfer relation:         9.349s
  Time for merge operator:            1.707s
  Time for stop operator:             0.644s
  Time for adding to reached set:     0.832s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   38
Avg. length of target path (in blocks):                4173 (count: 38, min: 83, max: 157, avg: 109.82)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.359s
  Counterexample analysis:                             4.298s (Max:     0.434s, Calls: 38)
    Refinement sat check:                              1.314s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.193s
  Precision update:                                    0.108s
  ARG update:                                          0.697s

Length of refined path (in blocks):                    3198 (count: 38, min: 39, max: 116, avg: 84.16)
Number of affected states:                             3153 (count: 38, min: 38, max: 115, avg: 82.97)
Length (states) of path with itp 'true':                  7 (count: 38, min: 0, max: 7, avg: 0.18)
Length (states) of path with itp non-trivial itp:      3153 (count: 38, min: 38, max: 115, avg: 82.97)
Length (states) of path with itp 'false':                38 (count: 38, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         634 (count: 38, min: 1, max: 53, avg: 16.68)
Equal non-trivial interpolants along paths:            2481 (count: 38, min: 33, max: 106, avg: 65.29)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                38
Number of successful refinements:     38
Number of failed refinements:         0
Max. size of reached set before ref.: 22590
Max. size of reached set after ref.:  19
Avg. size of reached set before ref.: 7915.66
Avg. size of reached set after ref.:  3.42

Total time for CEGAR algorithm:     102.611s
Time for refinements:                 5.775s
Average time for refinement:          0.151s
Max time for refinement:              0.512s

Code Coverage
-----------------------------
  Function coverage:      0.543
  Visited lines:          673
  Total lines:            1367
  Line coverage:          0.492
  Visited conditions:     236
  Total conditions:       486
  Condition coverage:     0.486

CPAchecker general statistics
-----------------------------
Number of program locations:     1875
Number of CFA edges:             2115
Number of relevant variables:    325
Number of functions:             105
Number of loops:                 4
Size of reached set:             17842
  Number of reached locations:   654 (35%)
    Avg states per location:     27
    Max states per location:     140 (at node N1133)
  Number of reached functions:   57 (54%)
  Number of partitions:          17729
    Avg size of partitions:      1
    Max size of partitions:      14 (with key [N1980 (before lines 2667-2831), Function test called from node N1544, stack depth 2 [1e37903a], stack [main, test]])
  Number of target states:       0

Time for analysis setup:          4.027s
  Time for loading CPAs:          0.743s
  Time for loading parser:        0.761s
  Time for CFA construction:      2.318s
    Time for parsing file(s):     0.755s
    Time for AST to CFA:          0.651s
    Time for CFA sanity check:    0.203s
    Time for post-processing:     0.556s
      Time for var class.:        0.304s
Time for Analysis:              102.612s
CPU time for analysis:          102.610s
Time for analyzing result:        0.022s
Total time for CPAchecker:      106.646s
Total CPU time for CPAchecker:  106.630s
Time for statistics:              0.429s

Time for Garbage Collector:       3.819s (in 306 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                125MB (   119 MiB) max;     71MB (    68 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     35MB (    33 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8201MB (  7821 MiB) max;   8160MB (  7782 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
