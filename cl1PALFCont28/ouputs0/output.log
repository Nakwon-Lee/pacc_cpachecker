scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec4_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_c4u0t_mr/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 675: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 721: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 825: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 854: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 869: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 933: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 981: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1028: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1073: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1151: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1220: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1354: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1437: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1639: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1800: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1872: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1919: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1974: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2019: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2040: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2077: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2114: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2153: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2192: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2229: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2266: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2340: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2377: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2849: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2881: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2890: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2899: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2924: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 512: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            71894 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  71054 (99%)
  Because of loop head:            787 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         53 (0%)
  Times precision was empty:       4927 (7%)
  Times precision was {false}:     242 (0%)
  Times result was cached:         64076 (89%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2649 (4%)
  Times result was 'false':        2297 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         133672
  BDD entailment checks:           12072
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       64
Number of predicates discovered:          35
Number of abstraction locations:          175
Max number of predicates per location:    11
Avg number of predicates per location:    4
Total predicates per abstraction:         279123
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 96.55
Number of irrelevant predicates:          92645 (33%)
Number of preds handled by boolean abs:   9086 (3%)
  Total number of models for allsat:      3930
  Max number of models for allsat:        18
  Avg number of models for allsat:        1.48

Time for post operator:                  6.083s
  Time for path formula creation:        5.659s
Time for strengthen operator:            0.585s
Time for prec operator:                 21.604s
  Time for abstraction:                 20.370s (Max:     0.242s, Count: 71894)
    Boolean abstraction:                 2.849s
    Solving time:                        2.119s (Max:     0.014s)
    Model enumeration time:              0.309s
    Time for BDD construction:           0.207s (Max:     0.009s)
Time for merge operator:                 0.705s
Time for coverage check:                 0.087s
  Time for BDD entailment checks:        0.057s
Total time for SMT solver (w/o itp):     2.428s

Number of path formula cache hits:   529234 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.789s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1935
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8070 (count: 35276, min: 0, max: 564, avg: 0.23)
Time for BDD node cleanup:                             0.030s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.060s
  Time for transition matches:                         0.501s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       495250 (count: 495250, min: 1, max: 1, avg: 1.00) [1 x 495250]

CPA algorithm statistics
------------------------
Number of iterations:            372951
Max size of waitlist:            40
Average size of waitlist:        12
Number of computed successors:   445401
Max successors for one state:    2
Number of times merged:          60800
Number of times stopped:         69878
Number of times breaked:         53

Total time for CPA algorithm:        44.432s (Max:     1.770s)
  Time for choose from waitlist:      0.336s
  Time for precision adjustment:     25.356s
  Time for transfer relation:        13.170s
  Time for merge operator:            1.834s
  Time for stop operator:             0.795s
  Time for adding to reached set:     1.118s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   53
Avg. length of target path (in blocks):                7086 (count: 53, min: 72, max: 260, avg: 133.70)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.049s
  Counterexample analysis:                             4.736s (Max:     0.275s, Calls: 53)
    Refinement sat check:                              2.070s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.147s
  Precision update:                                    0.082s
  ARG update:                                          0.950s

Length of refined path (in blocks):                    5065 (count: 53, min: 55, max: 215, avg: 95.57)
Number of affected states:                             3639 (count: 53, min: 1, max: 214, avg: 68.66)
Length (states) of path with itp 'true':               1373 (count: 53, min: 0, max: 95, avg: 25.91)
Length (states) of path with itp non-trivial itp:      3639 (count: 53, min: 1, max: 214, avg: 68.66)
Length (states) of path with itp 'false':                53 (count: 53, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         242 (count: 53, min: 0, max: 13, avg: 4.57)
Equal non-trivial interpolants along paths:            3344 (count: 53, min: 0, max: 212, avg: 63.09)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                53
Number of successful refinements:     53
Number of failed refinements:         0
Max. size of reached set before ref.: 16924
Max. size of reached set after ref.:  5060
Avg. size of reached set before ref.: 8332.00
Avg. size of reached set after ref.:  1521.49

Total time for CEGAR algorithm:      51.602s
Time for refinements:                 7.061s
Average time for refinement:          0.133s
Max time for refinement:              0.322s

Code Coverage
-----------------------------
  Function coverage:      0.634
  Visited lines:          859
  Total lines:            1444
  Line coverage:          0.595
  Visited conditions:     344
  Total conditions:       498
  Condition coverage:     0.691

CPAchecker general statistics
-----------------------------
Number of program locations:     1983
Number of CFA edges:             2253
Number of relevant variables:    362
Number of functions:             112
Number of loops:                 4
Size of reached set:             12270
  Number of reached locations:   900 (45%)
    Avg states per location:     13
    Max states per location:     288 (at node N2195)
  Number of reached functions:   71 (63%)
  Number of partitions:          12195
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1834 (before lines 2436-2603), Function test called from node N86, stack depth 2 [24d0611d], stack [main, test]])
  Number of target states:       0

Time for analysis setup:          4.384s
  Time for loading CPAs:          0.916s
  Time for loading parser:        0.802s
  Time for CFA construction:      2.530s
    Time for parsing file(s):     0.783s
    Time for AST to CFA:          0.705s
    Time for CFA sanity check:    0.220s
    Time for post-processing:     0.628s
      Time for var class.:        0.343s
Time for Analysis:               51.602s
CPU time for analysis:           51.610s
Time for analyzing result:        0.011s
Total time for CPAchecker:       55.992s
Total CPU time for CPAchecker:   55.990s
Time for statistics:              0.339s

Time for Garbage Collector:       3.411s (in 184 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                134MB (   128 MiB) max;     70MB (    67 MiB) avg;    141MB (   135 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     35MB (    33 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           141MB (   134 MiB) max;    130MB (   124 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8133MB (  7757 MiB) max;   8125MB (  7748 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
