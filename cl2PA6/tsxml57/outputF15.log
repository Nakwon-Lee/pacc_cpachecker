scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--usb--host--r8a66597-hcd.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_l69nzfw0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 9510: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4471: Function pointer *(r8a66597->pdata->port_power) with type void (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_create_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_check_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_link_urb_to_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function clk_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4471: Ignoring function call through function pointer *(r8a66597->pdata->port_power): (*(r8a66597->pdata->port_power))(port, power); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_hub_find_child to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function clk_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_unlink_urb_from_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function clk_prepare to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function clk_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function clk_unprepare to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_root_hub_lost_power to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 7470: Unsupported feature (recursion): collect_usb_address_map(childdev, map); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            599195 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  531783 (89%)
  Because of loop head:            66870 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         542 (0%)
  Times precision was empty:       240385 (40%)
  Times precision was {false}:     1868 (0%)
  Times result was cached:         352680 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4262 (1%)
  Times result was 'false':        22055 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         549206
  BDD entailment checks:           107708
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       82
Number of predicates discovered:          10
Number of abstraction locations:          175
Max number of predicates per location:    8
Avg number of predicates per location:    4
Total predicates per abstraction:         1408278
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 229.74
Number of irrelevant predicates:          609419 (43%)
Number of preds handled by boolean abs:   12089 (1%)
  Total number of models for allsat:      5145
  Max number of models for allsat:        18
  Avg number of models for allsat:        1.21

Time for post operator:                 34.844s
  Time for path formula creation:       33.291s
Time for strengthen operator:            3.117s
Time for prec operator:                 74.421s
  Time for abstraction:                 67.290s (Max:     0.601s, Count: 599195)
    Boolean abstraction:                 4.360s
    Solving time:                        3.859s (Max:     0.021s)
    Model enumeration time:              0.587s
    Time for BDD construction:           0.182s (Max:     0.009s)
Time for merge operator:                 3.338s
Time for coverage check:                 0.212s
  Time for BDD entailment checks:        0.141s
Total time for SMT solver (w/o itp):     4.446s

Number of path formula cache hits:   3807189 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    21.664s

Total number of created targets for pointer analysis: 22908
   Number of created targets for uf: *(void)* is 505
   Number of created targets for uf: *unsigned_short_int is 73
   Number of created targets for uf: *unsigned_char is 220
   Number of created targets for uf: *unsigned_int is 280
   Number of created targets for uf: *char is 1376
   Number of created targets for uf: *unsigned_long_int is 361


Number of BDD nodes:                               1260
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8948 (count: 390583, min: 0, max: 423, avg: 0.02)
Time for BDD node cleanup:                             0.079s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.116s
  Time for transition matches:                         3.047s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                      3563223 (count: 3563223, min: 1, max: 1, avg: 1.00) [1 x 3563223]

CPA algorithm statistics
------------------------
Number of iterations:            2226659
Max size of waitlist:            422
Average size of waitlist:        149
Number of computed successors:   2615181
Max successors for one state:    2
Number of times merged:          220749
Number of times stopped:         271265
Number of times breaked:         542

Total time for CPA algorithm:       184.408s (Max:     1.684s)
  Time for choose from waitlist:      1.213s
  Time for precision adjustment:     91.987s
  Time for transfer relation:        70.255s
  Time for merge operator:            6.451s
  Time for stop operator:             3.163s
  Time for adding to reached set:     4.328s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   542
Avg. length of target path (in blocks):               34029 (count: 542, min: 32, max: 84, avg: 62.78)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  13.868s
  Counterexample analysis:                             9.410s (Max:     0.041s, Calls: 542)
    Refinement sat check:                              6.061s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.180s
  Precision update:                                    0.362s
  ARG update:                                          3.665s

Length of refined path (in blocks):                   27196 (count: 542, min: 26, max: 73, avg: 50.18)
Number of affected states:                            13702 (count: 542, min: 1, max: 70, avg: 25.28)
Length (states) of path with itp 'true':              12952 (count: 542, min: 0, max: 52, avg: 23.90)
Length (states) of path with itp non-trivial itp:     13702 (count: 542, min: 1, max: 70, avg: 25.28)
Length (states) of path with itp 'false':               542 (count: 542, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 542, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           13160 (count: 542, min: 0, max: 69, avg: 24.28)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                542
Number of successful refinements:     542
Number of failed refinements:         0
Max. size of reached set before ref.: 10725
Max. size of reached set after ref.:  2750
Avg. size of reached set before ref.: 5227.48
Avg. size of reached set after ref.:  954.58

Total time for CEGAR algorithm:     200.452s
Time for refinements:                15.688s
Average time for refinement:          0.028s
Max time for refinement:              0.110s

Code Coverage
-----------------------------
  Function coverage:      0.411
  Visited lines:          2013
  Total lines:            4076
  Line coverage:          0.494
  Visited conditions:     499
  Total conditions:       1306
  Condition coverage:     0.382

CPAchecker general statistics
-----------------------------
Number of program locations:     5913
Number of CFA edges:             7011
Number of relevant variables:    990
Number of functions:             236
Number of loops:                 39
Size of reached set:             5948
  Number of reached locations:   1269 (21%)
    Avg states per location:     4
    Max states per location:     99 (at node N304)
  Number of reached functions:   97 (41%)
  Number of partitions:          5936
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N4516 (before line 8983), Function main called from node N4473, stack depth 1 [7c011174], stack [main]])
  Number of target states:       0
  Size of final wait list        197

Time for analysis setup:          6.463s
  Time for loading CPAs:          1.060s
  Time for loading parser:        0.668s
  Time for CFA construction:      4.589s
    Time for parsing file(s):     1.094s
    Time for AST to CFA:          1.608s
    Time for CFA sanity check:    0.390s
    Time for post-processing:     1.334s
      Time for var class.:        0.651s
Time for Analysis:              200.452s
CPU time for analysis:          200.410s
Total time for CPAchecker:      206.919s
Total CPU time for CPAchecker:  206.870s
Time for statistics:              0.202s

Time for Garbage Collector:      10.804s (in 724 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                317MB (   303 MiB) max;    135MB (   129 MiB) avg;    327MB (   312 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           351MB (   334 MiB) max;    209MB (   199 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8018MB (  7646 MiB) max;   8015MB (  7643 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
