scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--usb--host--r8a66597-hcd.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qdhmus06/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 9510: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4471: Function pointer *(r8a66597->pdata->port_power) with type void (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_link_urb_to_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_check_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function clk_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_root_hub_lost_power to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_create_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hub_find_child to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 7470: Unsupported feature (recursion): collect_usb_address_map(childdev, map); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            105831 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  92197 (87%)
  Because of loop head:            13493 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         141 (0%)
  Times precision was empty:       59241 (56%)
  Times precision was {false}:     1325 (1%)
  Times result was cached:         43537 (41%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1728 (2%)
  Times result was 'false':        6742 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         100700
  BDD entailment checks:           14674
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       82
Number of predicates discovered:          9
Number of abstraction locations:          157
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         171609
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 56.21
Number of irrelevant predicates:          51372 (30%)
Number of preds handled by boolean abs:   4138 (2%)
  Total number of models for allsat:      1974
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.14

Time for post operator:                 10.653s
  Time for path formula creation:       10.258s
Time for strengthen operator:            0.786s
Time for prec operator:                 18.236s
  Time for abstraction:                 16.387s (Max:     0.037s, Count: 105831)
    Boolean abstraction:                 2.313s
    Solving time:                        2.148s (Max:     0.023s)
    Model enumeration time:              0.306s
    Time for BDD construction:           0.103s (Max:     0.008s)
Time for merge operator:                 1.161s
Time for coverage check:                 0.133s
  Time for BDD entailment checks:        0.074s
Total time for SMT solver (w/o itp):     2.454s

Number of path formula cache hits:   660629 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.056s

Total number of created targets for pointer analysis: 1849
   Number of created targets for uf: *(void)* is 10
   Number of created targets for uf: *unsigned_char is 7
   Number of created targets for uf: *char is 1666
   Number of created targets for uf: *unsigned_int is 4
   Number of created targets for uf: *unsigned_long_int is 5


Number of BDD nodes:                               684
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3723 (count: 92714, min: 0, max: 195, avg: 0.04)
Time for BDD node cleanup:                             0.031s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.452s
  Time for transition matches:                         0.776s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       636389 (count: 636389, min: 1, max: 1, avg: 1.00) [1 x 636389]

CPA algorithm statistics
------------------------
Number of iterations:            396976
Max size of waitlist:            276
Average size of waitlist:        68
Number of computed successors:   473543
Max successors for one state:    2
Number of times merged:          43013
Number of times stopped:         51891
Number of times breaked:         141

Total time for CPA algorithm:        49.482s (Max:     1.507s)
  Time for choose from waitlist:      0.338s
  Time for precision adjustment:     22.451s
  Time for transfer relation:        19.883s
  Time for merge operator:            2.133s
  Time for stop operator:             0.899s
  Time for adding to reached set:     1.358s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   141
Avg. length of target path (in blocks):                7311 (count: 141, min: 32, max: 88, avg: 51.85)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.151s
  Counterexample analysis:                             2.696s (Max:     0.043s, Calls: 141)
    Refinement sat check:                              1.848s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.156s
  Precision update:                                    0.107s
  ARG update:                                          1.078s

Length of refined path (in blocks):                    6652 (count: 141, min: 26, max: 87, avg: 47.18)
Number of affected states:                             5566 (count: 141, min: 1, max: 86, avg: 39.48)
Length (states) of path with itp 'true':                945 (count: 141, min: 0, max: 37, avg: 6.70)
Length (states) of path with itp non-trivial itp:      5566 (count: 141, min: 1, max: 86, avg: 39.48)
Length (states) of path with itp 'false':               141 (count: 141, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 141, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            5425 (count: 141, min: 0, max: 85, avg: 38.48)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                141
Number of successful refinements:     141
Number of failed refinements:         0
Max. size of reached set before ref.: 5524
Max. size of reached set after ref.:  1923
Avg. size of reached set before ref.: 3029.45
Avg. size of reached set after ref.:  110.76

Total time for CEGAR algorithm:      54.078s
Time for refinements:                 4.571s
Average time for refinement:          0.032s
Max time for refinement:              0.116s

Code Coverage
-----------------------------
  Function coverage:      0.356
  Visited lines:          1867
  Total lines:            4076
  Line coverage:          0.458
  Visited conditions:     444
  Total conditions:       1306
  Condition coverage:     0.340

CPAchecker general statistics
-----------------------------
Number of program locations:     5913
Number of CFA edges:             7011
Number of relevant variables:    990
Number of functions:             236
Number of loops:                 39
Size of reached set:             3376
  Number of reached locations:   1140 (19%)
    Avg states per location:     2
    Max states per location:     74 (at node N304)
  Number of reached functions:   84 (36%)
  Number of partitions:          3371
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N4516 (before line 8983), Function main called from node N4473, stack depth 1 [3fb9a67f], stack [main]])
  Number of target states:       0
  Size of final wait list        96

Time for analysis setup:          6.857s
  Time for loading CPAs:          1.050s
  Time for loading parser:        0.652s
  Time for CFA construction:      5.013s
    Time for parsing file(s):     1.147s
    Time for AST to CFA:          1.668s
    Time for CFA sanity check:    0.551s
    Time for post-processing:     1.496s
      Time for var class.:        0.749s
Time for Analysis:               54.078s
CPU time for analysis:           54.070s
Total time for CPAchecker:       60.947s
Total CPU time for CPAchecker:   60.930s
Time for statistics:              0.154s

Time for Garbage Collector:       1.964s (in 197 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                106MB (   101 MiB) max;     66MB (    63 MiB) avg;    110MB (   105 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     37MB (    35 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8078MB (  7704 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
