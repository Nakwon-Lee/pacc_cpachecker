scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--input--touchscreen--tsc2005.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ij4q85d6/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6322: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6445: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5771: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5775: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_late_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_early_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_input_allocate_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function of_get_named_gpio_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_gpio_request_one to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_regulator_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function touchscreen_parse_of_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4384: Ignoring function call through function pointer *(ts->set_reset): (*(ts->set_reset))((int)enable); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function enable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function irq_set_irq_wake to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            42276 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  41867 (99%)
  Because of loop head:            216 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         193 (0%)
  Times precision was empty:       15357 (36%)
  Times precision was {false}:     122 (0%)
  Times result was cached:         26652 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      145 (0%)
  Times result was 'false':        570 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         18679
  BDD entailment checks:           5489
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       106
Number of predicates discovered:          11
Number of abstraction locations:          80
Max number of predicates per location:    6
Avg number of predicates per location:    1
Total predicates per abstraction:         27661
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 103.60
Number of irrelevant predicates:          13937 (50%)
Number of preds handled by boolean abs:   251 (1%)
  Total number of models for allsat:      159
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.10

Time for post operator:                  3.632s
  Time for path formula creation:        3.429s
Time for strengthen operator:            0.301s
Time for prec operator:                  4.390s
  Time for abstraction:                  3.516s (Max:     0.040s, Count: 42276)
    Boolean abstraction:                 0.223s
    Solving time:                        0.186s (Max:     0.019s)
    Model enumeration time:              0.016s
    Time for BDD construction:           0.027s (Max:     0.009s)
Time for merge operator:                 0.270s
Time for coverage check:                 0.045s
  Time for BDD entailment checks:        0.040s
Total time for SMT solver (w/o itp):     0.202s

Number of path formula cache hits:   217657 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.582s

Total number of created targets for pointer analysis: 12
   Number of created targets for uf: *(void)* is 9
   Number of created targets for uf: *unsigned_short_int is 5


Number of BDD nodes:                               249
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         429 (count: 22428, min: 0, max: 105, avg: 0.02)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.705s
  Time for transition matches:                         0.322s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                       186954 (count: 186954, min: 1, max: 1, avg: 1.00) [1 x 186954]

CPA algorithm statistics
------------------------
Number of iterations:            123851
Max size of waitlist:            48
Average size of waitlist:        32
Number of computed successors:   135097
Max successors for one state:    2
Number of times merged:          6595
Number of times stopped:         10018
Number of times breaked:         193

Total time for CPA algorithm:        16.174s (Max:     1.510s)
  Time for choose from waitlist:      0.189s
  Time for precision adjustment:      5.984s
  Time for transfer relation:         7.443s
  Time for merge operator:            0.531s
  Time for stop operator:             0.383s
  Time for adding to reached set:     0.428s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   193
Avg. length of target path (in blocks):               16640 (count: 193, min: 22, max: 119, avg: 86.22)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.690s
  Counterexample analysis:                             5.792s (Max:     0.066s, Calls: 193)
    Refinement sat check:                              2.805s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.220s
  Precision update:                                    0.124s
  ARG update:                                          0.400s

Length of refined path (in blocks):                   14974 (count: 193, min: 18, max: 116, avg: 77.59)
Number of affected states:                             9640 (count: 193, min: 1, max: 92, avg: 49.95)
Length (states) of path with itp 'true':               5141 (count: 193, min: 0, max: 57, avg: 26.64)
Length (states) of path with itp non-trivial itp:      9640 (count: 193, min: 1, max: 92, avg: 49.95)
Length (states) of path with itp 'false':               193 (count: 193, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         322 (count: 193, min: 0, max: 2, avg: 1.67)
Equal non-trivial interpolants along paths:            9125 (count: 193, min: 0, max: 89, avg: 47.28)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                193
Number of successful refinements:     193
Number of failed refinements:         0
Max. size of reached set before ref.: 5590
Max. size of reached set after ref.:  4003
Avg. size of reached set before ref.: 2868.87
Avg. size of reached set after ref.:  2240.63

Total time for CEGAR algorithm:      24.256s
Time for refinements:                 7.563s
Average time for refinement:          0.039s
Max time for refinement:              0.133s

Code Coverage
-----------------------------
  Function coverage:      0.247
  Visited lines:          1205
  Total lines:            2383
  Line coverage:          0.506
  Visited conditions:     244
  Total conditions:       742
  Condition coverage:     0.329

CPAchecker general statistics
-----------------------------
Number of program locations:     3472
Number of CFA edges:             3932
Number of relevant variables:    427
Number of functions:             170
Number of loops:                 2
Size of reached set:             3260
  Number of reached locations:   548 (16%)
    Avg states per location:     5
    Max states per location:     68 (at node N164)
  Number of reached functions:   42 (25%)
  Number of partitions:          3208
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N359 (before line 4253), Function tsc2005_update_pen_state called from node N650, stack depth 4 [3d25934f], stack [main, invoke_work_3, tsc2005_esd_work, tsc2005_update_pen_state]])
  Number of target states:       0
  Size of final wait list        33

Time for analysis setup:          5.497s
  Time for loading CPAs:          1.023s
  Time for loading parser:        0.717s
  Time for CFA construction:      3.655s
    Time for parsing file(s):     0.998s
    Time for AST to CFA:          1.231s
    Time for CFA sanity check:    0.268s
    Time for post-processing:     0.962s
      Time for var class.:        0.453s
Time for Analysis:               24.256s
CPU time for analysis:           24.260s
Total time for CPAchecker:       29.757s
Total CPU time for CPAchecker:   29.740s
Time for statistics:              0.133s

Time for Garbage Collector:       0.675s (in 56 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    71 MiB) max;     49MB (    46 MiB) avg;     77MB (    74 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
