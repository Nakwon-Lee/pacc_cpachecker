scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--input--touchscreen--tsc2005.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8wjcursc/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6322: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6445: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5771: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5775: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_late_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_early_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_input_allocate_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function of_get_named_gpio_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_gpio_request_one to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_regulator_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            39395 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  37447 (95%)
  Because of loop head:            1865 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         83 (0%)
  Times precision was empty:       26302 (67%)
  Times precision was {false}:     200 (1%)
  Times result was cached:         12239 (31%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      654 (2%)
  Times result was 'false':        988 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         61854
  BDD entailment checks:           5334
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       106
Number of predicates discovered:          6
Number of abstraction locations:          60
Max number of predicates per location:    5
Avg number of predicates per location:    4
Total predicates per abstraction:         45557
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 53.35
Number of irrelevant predicates:          17354 (38%)
Number of preds handled by boolean abs:   1604 (4%)
  Total number of models for allsat:      677
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  3.886s
  Time for path formula creation:        3.658s
Time for strengthen operator:            0.451s
Time for prec operator:                  7.046s
  Time for abstraction:                  6.160s (Max:     0.034s, Count: 39395)
    Boolean abstraction:                 1.065s
    Solving time:                        0.910s (Max:     0.019s)
    Model enumeration time:              0.132s
    Time for BDD construction:           0.076s (Max:     0.012s)
Time for merge operator:                 0.498s
Time for coverage check:                 0.057s
  Time for BDD entailment checks:        0.049s
Total time for SMT solver (w/o itp):     1.042s

Number of path formula cache hits:   385513 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.636s

Total number of created targets for pointer analysis: 9
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *unsigned_int is 3


Number of BDD nodes:                               244
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1373 (count: 36626, min: 0, max: 91, avg: 0.04)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.868s
  Time for transition matches:                         0.367s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       341159 (count: 341159, min: 1, max: 1, avg: 1.00) [1 x 341159]

CPA algorithm statistics
------------------------
Number of iterations:            201266
Max size of waitlist:            207
Average size of waitlist:        86
Number of computed successors:   244552
Max successors for one state:    2
Number of times merged:          28260
Number of times stopped:         30570
Number of times breaked:         83

Total time for CPA algorithm:        22.473s (Max:     1.523s)
  Time for choose from waitlist:      0.277s
  Time for precision adjustment:      9.444s
  Time for transfer relation:         9.216s
  Time for merge operator:            1.180s
  Time for stop operator:             0.443s
  Time for adding to reached set:     0.555s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   83
Avg. length of target path (in blocks):                2515 (count: 83, min: 22, max: 42, avg: 30.30)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.088s
  Counterexample analysis:                             1.280s (Max:     0.034s, Calls: 83)
    Refinement sat check:                              0.913s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.059s
  Precision update:                                    0.056s
  ARG update:                                          0.627s

Length of refined path (in blocks):                    2344 (count: 83, min: 18, max: 41, avg: 28.24)
Number of affected states:                             2085 (count: 83, min: 1, max: 40, avg: 25.12)
Length (states) of path with itp 'true':                176 (count: 83, min: 0, max: 16, avg: 2.12)
Length (states) of path with itp non-trivial itp:      2085 (count: 83, min: 1, max: 40, avg: 25.12)
Length (states) of path with itp 'false':                83 (count: 83, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 83, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2002 (count: 83, min: 0, max: 39, avg: 24.12)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                83
Number of successful refinements:     83
Number of failed refinements:         0
Max. size of reached set before ref.: 3781
Max. size of reached set after ref.:  53
Avg. size of reached set before ref.: 2553.95
Avg. size of reached set after ref.:  9.63

Total time for CEGAR algorithm:      24.832s
Time for refinements:                 2.355s
Average time for refinement:          0.028s
Max time for refinement:              0.112s

Code Coverage
-----------------------------
  Function coverage:      0.218
  Visited lines:          1261
  Total lines:            2383
  Line coverage:          0.529
  Visited conditions:     274
  Total conditions:       742
  Condition coverage:     0.369

CPAchecker general statistics
-----------------------------
Number of program locations:     3472
Number of CFA edges:             3932
Number of relevant variables:    427
Number of functions:             170
Number of loops:                 2
Size of reached set:             1816
  Number of reached locations:   569 (16%)
    Avg states per location:     3
    Max states per location:     36 (at node N75)
  Number of reached functions:   37 (22%)
  Number of partitions:          1811
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1687 (before line 5792), Function main called from node N1644, stack depth 1 [4abf3f0], stack [main]])
  Number of target states:       0
  Size of final wait list        96

Time for analysis setup:          5.445s
  Time for loading CPAs:          1.056s
  Time for loading parser:        0.706s
  Time for CFA construction:      3.589s
    Time for parsing file(s):     1.000s
    Time for AST to CFA:          1.194s
    Time for CFA sanity check:    0.285s
    Time for post-processing:     0.947s
      Time for var class.:        0.424s
Time for Analysis:               24.832s
CPU time for analysis:           24.840s
Total time for CPAchecker:       30.285s
Total CPU time for CPAchecker:   30.280s
Time for statistics:              0.129s

Time for Garbage Collector:       0.668s (in 85 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    69 MiB) max;     48MB (    46 MiB) avg;     76MB (    72 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    33 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
