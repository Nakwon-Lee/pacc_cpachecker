scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--input--touchscreen--tsc2005.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7ryvce3t/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6322: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6445: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5771: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5775: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_late_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_early_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4384: Ignoring function call through function pointer *(ts->set_reset): (*(ts->set_reset))((int)enable); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function enable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_input_allocate_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function of_get_named_gpio_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function touchscreen_parse_of_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function irq_set_irq_wake to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_gpio_request_one to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_regulator_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2323652 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2243997 (97%)
  Because of loop head:            75573 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4082 (0%)
  Times precision was empty:       295794 (13%)
  Times precision was {false}:     1403 (0%)
  Times result was cached:         2015882 (87%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10573 (0%)
  Times result was 'false':        58810 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         2026811
  BDD entailment checks:           434677
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       106
Number of predicates discovered:          24
Number of abstraction locations:          247
Max number of predicates per location:    19
Avg number of predicates per location:    5
Total predicates per abstraction:         10728785
Max number of predicates per abstraction: 19
Avg number of predicates per abstraction: 895.86
Number of irrelevant predicates:          5114083 (48%)
Number of preds handled by boolean abs:   40740 (0%)
  Total number of models for allsat:      14501
  Max number of models for allsat:        64
  Avg number of models for allsat:        1.37

Time for post operator:                 57.521s
  Time for path formula creation:       51.703s
Time for strengthen operator:            9.191s
Time for prec operator:                406.820s
  Time for abstraction:                381.213s (Max:     0.600s, Count: 2323652)
    Boolean abstraction:                 8.498s
    Solving time:                        6.686s (Max:     0.016s)
    Model enumeration time:              1.071s
    Time for BDD construction:           0.388s (Max:     0.012s)
Time for merge operator:                 4.595s
Time for coverage check:                 0.655s
  Time for BDD entailment checks:        0.398s
Total time for SMT solver (w/o itp):     7.757s

Number of path formula cache hits:   14974670 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    13.154s

Total number of created targets for pointer analysis: 945
   Number of created targets for uf: *unsigned_short_int is 248
   Number of created targets for uf: *(void)* is 433
   Number of created targets for uf: *signed_int is 25
   Number of created targets for uf: *unsigned_int is 25


Number of BDD nodes:                               22158
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       28165 (count: 806947, min: 0, max: 512, avg: 0.03)
Time for BDD node cleanup:                             0.207s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 14.762s
  Time for transition matches:                         7.965s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.015s
Automaton transfers with branching:                0
Automaton transfer successors:                     12302503 (count: 12302503, min: 1, max: 1, avg: 1.00) [1 x 12302503]

CPA algorithm statistics
------------------------
Number of iterations:            8028511
Max size of waitlist:            56
Average size of waitlist:        21
Number of computed successors:   9133563
Max successors for one state:    2
Number of times merged:          796067
Number of times stopped:         1029835
Number of times breaked:         4082

Total time for CPA algorithm:       679.723s (Max:     1.962s)
  Time for choose from waitlist:      2.871s
  Time for precision adjustment:    464.294s
  Time for transfer relation:       159.336s
  Time for merge operator:           12.050s
  Time for stop operator:             9.957s
  Time for adding to reached set:    11.640s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4082
Avg. length of target path (in blocks):              379754 (count: 4082, min: 22, max: 230, avg: 93.03)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 106.041s
  Counterexample analysis:                            86.379s (Max:     0.069s, Calls: 4082)
    Refinement sat check:                             46.224s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.211s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.455s
  Precision update:                                    3.565s
  ARG update:                                         12.931s

Length of refined path (in blocks):                  369085 (count: 4082, min: 18, max: 229, avg: 90.42)
Number of affected states:                           214372 (count: 4082, min: 1, max: 121, avg: 52.52)
Length (states) of path with itp 'true':             150631 (count: 4082, min: 0, max: 119, avg: 36.90)
Length (states) of path with itp non-trivial itp:    214372 (count: 4082, min: 1, max: 121, avg: 52.52)
Length (states) of path with itp 'false':              4082 (count: 4082, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         973 (count: 4082, min: 0, max: 3, avg: 0.24)
Equal non-trivial interpolants along paths:          209317 (count: 4082, min: 0, max: 120, avg: 51.28)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4082
Number of successful refinements:     4082
Number of failed refinements:         0
Max. size of reached set before ref.: 50960
Max. size of reached set after ref.:  47511
Avg. size of reached set before ref.: 18741.25
Avg. size of reached set after ref.:  16773.13

Total time for CEGAR algorithm:     894.877s
Time for refinements:               168.796s
Average time for refinement:          0.041s
Max time for refinement:              0.577s

Code Coverage
-----------------------------
  Function coverage:      0.447
  Visited lines:          1634
  Total lines:            2383
  Line coverage:          0.686
  Visited conditions:     454
  Total conditions:       742
  Condition coverage:     0.612

CPAchecker general statistics
-----------------------------
Number of program locations:     3472
Number of CFA edges:             3932
Number of relevant variables:    427
Number of functions:             170
Number of loops:                 2
Size of reached set:             11027
  Number of reached locations:   1078 (31%)
    Avg states per location:     10
    Max states per location:     130 (at node N169)
  Number of reached functions:   76 (45%)
  Number of partitions:          10977
    Avg size of partitions:      1
    Max size of partitions:      16 (with key [N1929 (after line 6046), Function main called from node N1644, stack depth 1 [57c88764], stack [main]])
  Number of target states:       0
  Size of final wait list        33

Time for analysis setup:          5.405s
  Time for loading CPAs:          0.880s
  Time for loading parser:        0.758s
  Time for CFA construction:      3.630s
    Time for parsing file(s):     1.038s
    Time for AST to CFA:          1.217s
    Time for CFA sanity check:    0.266s
    Time for post-processing:     0.935s
      Time for var class.:        0.449s
Time for Analysis:              894.877s
CPU time for analysis:          894.820s
Total time for CPAchecker:      900.289s
Total CPU time for CPAchecker:  900.210s
Time for statistics:              0.249s

Time for Garbage Collector:      64.554s (in 2996 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                352MB (   335 MiB) max;    165MB (   158 MiB) avg;    361MB (   344 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           374MB (   356 MiB) max;    245MB (   233 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8154MB (  7776 MiB) max;   8077MB (  7703 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
