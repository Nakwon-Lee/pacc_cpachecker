scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--input--touchscreen--tsc2005.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_u5d_z8ng/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6322: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6445: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5771: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5775: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_late_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_early_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4384: Ignoring function call through function pointer *(ts->set_reset): (*(ts->set_reset))((int)enable); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function enable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_input_allocate_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function of_get_named_gpio_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function touchscreen_parse_of_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function irq_set_irq_wake to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_gpio_request_one to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_regulator_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            46497 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  45863 (99%)
  Because of loop head:            402 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         232 (0%)
  Times precision was empty:       20252 (44%)
  Times precision was {false}:     107 (0%)
  Times result was cached:         25967 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      171 (0%)
  Times result was 'false':        1212 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         20389
  BDD entailment checks:           4695
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       106
Number of predicates discovered:          11
Number of abstraction locations:          86
Max number of predicates per location:    6
Avg number of predicates per location:    1
Total predicates per abstraction:         28764
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 103.47
Number of irrelevant predicates:          13511 (47%)
Number of preds handled by boolean abs:   350 (1%)
  Total number of models for allsat:      174
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.02

Time for post operator:                  3.443s
  Time for path formula creation:        3.256s
Time for strengthen operator:            0.302s
Time for prec operator:                  4.295s
  Time for abstraction:                  3.344s (Max:     0.038s, Count: 46497)
    Boolean abstraction:                 0.234s
    Solving time:                        0.175s (Max:     0.012s)
    Model enumeration time:              0.009s
    Time for BDD construction:           0.017s (Max:     0.004s)
Time for merge operator:                 0.232s
Time for coverage check:                 0.038s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):     0.184s

Number of path formula cache hits:   248302 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.170s

Total number of created targets for pointer analysis: 8
   Number of created targets for uf: *(void)* is 5
   Number of created targets for uf: *unsigned_short_int is 5


Number of BDD nodes:                               232
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         471 (count: 26619, min: 0, max: 96, avg: 0.02)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.747s
  Time for transition matches:                         0.375s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       210590 (count: 210590, min: 1, max: 1, avg: 1.00) [1 x 210590]

CPA algorithm statistics
------------------------
Number of iterations:            138387
Max size of waitlist:            40
Average size of waitlist:        20
Number of computed successors:   151342
Max successors for one state:    2
Number of times merged:          7847
Number of times stopped:         11506
Number of times breaked:         232

Total time for CPA algorithm:        15.883s (Max:     1.109s)
  Time for choose from waitlist:      0.173s
  Time for precision adjustment:      5.826s
  Time for transfer relation:         7.579s
  Time for merge operator:            0.514s
  Time for stop operator:             0.335s
  Time for adding to reached set:     0.403s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   232
Avg. length of target path (in blocks):               19325 (count: 232, min: 22, max: 115, avg: 83.30)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.314s
  Counterexample analysis:                             6.317s (Max:     0.062s, Calls: 232)
    Refinement sat check:                              3.153s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.216s
  Precision update:                                    0.145s
  ARG update:                                          0.468s

Length of refined path (in blocks):                   17074 (count: 231, min: 18, max: 114, avg: 73.91)
Number of affected states:                            11082 (count: 231, min: 1, max: 90, avg: 47.97)
Length (states) of path with itp 'true':               5761 (count: 231, min: 0, max: 43, avg: 24.94)
Length (states) of path with itp non-trivial itp:     11082 (count: 231, min: 1, max: 90, avg: 47.97)
Length (states) of path with itp 'false':               231 (count: 231, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         378 (count: 231, min: 0, max: 2, avg: 1.64)
Equal non-trivial interpolants along paths:           10473 (count: 231, min: 0, max: 87, avg: 45.34)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                232
Number of successful refinements:     231
Number of failed refinements:         0
Max. size of reached set before ref.: 5079
Max. size of reached set after ref.:  2704
Avg. size of reached set before ref.: 2370.44
Avg. size of reached set after ref.:  1780.60

Total time for CEGAR algorithm:      24.453s
Time for refinements:                 8.203s
Average time for refinement:          0.035s
Max time for refinement:              0.094s

Code Coverage
-----------------------------
  Function coverage:      0.335
  Visited lines:          1406
  Total lines:            2383
  Line coverage:          0.590
  Visited conditions:     324
  Total conditions:       742
  Condition coverage:     0.437

CPAchecker general statistics
-----------------------------
Number of program locations:     3472
Number of CFA edges:             3932
Number of relevant variables:    427
Number of functions:             170
Number of loops:                 2
Size of reached set:             3297
  Number of reached locations:   781 (22%)
    Avg states per location:     4
    Max states per location:     44 (at node N169)
  Number of reached functions:   57 (34%)
  Number of partitions:          3291
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N359 (before line 4253), Function tsc2005_update_pen_state called from node N650, stack depth 4 [b09c55b], stack [main, invoke_work_3, tsc2005_esd_work, tsc2005_update_pen_state]])
  Number of target states:       1
  Size of final wait list        18

Time for analysis setup:          5.341s
  Time for loading CPAs:          0.935s
  Time for loading parser:        0.708s
  Time for CFA construction:      3.530s
    Time for parsing file(s):     0.967s
    Time for AST to CFA:          1.238s
    Time for CFA sanity check:    0.253s
    Time for post-processing:     0.898s
      Time for var class.:        0.430s
Time for Analysis:               24.453s
CPU time for analysis:           24.460s
Total time for CPAchecker:       29.798s
Total CPU time for CPAchecker:   29.780s
Time for statistics:              0.147s

Time for Garbage Collector:       0.569s (in 61 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 75MB (    71 MiB) max;     49MB (    47 MiB) avg;     77MB (    74 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
