scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--input--touchscreen--tsc2005.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_c6_0fb4n/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6322: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6445: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5771: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5775: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_late_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_early_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_input_allocate_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function of_get_named_gpio_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_gpio_request_one to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_regulator_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            40009 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  33998 (85%)
  Because of loop head:            5930 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         81 (0%)
  Times precision was empty:       27752 (69%)
  Times precision was {false}:     197 (0%)
  Times result was cached:         11385 (28%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      675 (2%)
  Times result was 'false':        1030 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         71269
  BDD entailment checks:           8531
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       106
Number of predicates discovered:          7
Number of abstraction locations:          58
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         47221
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 54.15
Number of irrelevant predicates:          18031 (38%)
Number of preds handled by boolean abs:   1737 (4%)
  Total number of models for allsat:      704
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.04

Time for post operator:                  4.075s
  Time for path formula creation:        3.771s
Time for strengthen operator:            0.453s
Time for prec operator:                  6.912s
  Time for abstraction:                  6.059s (Max:     0.038s, Count: 40009)
    Boolean abstraction:                 1.214s
    Solving time:                        1.023s (Max:     0.020s)
    Model enumeration time:              0.073s
    Time for BDD construction:           0.135s (Max:     0.011s)
Time for merge operator:                 0.450s
Time for coverage check:                 0.054s
  Time for BDD entailment checks:        0.047s
Total time for SMT solver (w/o itp):     1.096s

Number of path formula cache hits:   369071 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.706s

Total number of created targets for pointer analysis: 13
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *unsigned_int is 7


Number of BDD nodes:                               294
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1456 (count: 41400, min: 0, max: 115, avg: 0.04)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.868s
  Time for transition matches:                         0.390s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       321731 (count: 321731, min: 1, max: 1, avg: 1.00) [1 x 321731]

CPA algorithm statistics
------------------------
Number of iterations:            212508
Max size of waitlist:            161
Average size of waitlist:        83
Number of computed successors:   260478
Max successors for one state:    2
Number of times merged:          31369
Number of times stopped:         36417
Number of times breaked:         81

Total time for CPA algorithm:        22.600s (Max:     1.574s)
  Time for choose from waitlist:      0.228s
  Time for precision adjustment:      9.306s
  Time for transfer relation:         9.246s
  Time for merge operator:            1.171s
  Time for stop operator:             0.610s
  Time for adding to reached set:     0.586s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   81
Avg. length of target path (in blocks):                2431 (count: 81, min: 22, max: 42, avg: 30.01)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.110s
  Counterexample analysis:                             1.241s (Max:     0.034s, Calls: 81)
    Refinement sat check:                              0.860s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.073s
  Precision update:                                    0.049s
  ARG update:                                          0.705s

Length of refined path (in blocks):                    2240 (count: 81, min: 18, max: 41, avg: 27.65)
Number of affected states:                             1953 (count: 81, min: 1, max: 40, avg: 24.11)
Length (states) of path with itp 'true':                206 (count: 81, min: 0, max: 16, avg: 2.54)
Length (states) of path with itp non-trivial itp:      1953 (count: 81, min: 1, max: 40, avg: 24.11)
Length (states) of path with itp 'false':                81 (count: 81, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 81, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1872 (count: 81, min: 0, max: 39, avg: 23.11)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                81
Number of successful refinements:     81
Number of failed refinements:         0
Max. size of reached set before ref.: 3264
Max. size of reached set after ref.:  53
Avg. size of reached set before ref.: 2724.04
Avg. size of reached set after ref.:  10.96

Total time for CEGAR algorithm:      25.011s
Time for refinements:                 2.409s
Average time for refinement:          0.029s
Max time for refinement:              0.076s

Code Coverage
-----------------------------
  Function coverage:      0.276
  Visited lines:          1356
  Total lines:            2383
  Line coverage:          0.569
  Visited conditions:     303
  Total conditions:       742
  Condition coverage:     0.408

CPAchecker general statistics
-----------------------------
Number of program locations:     3472
Number of CFA edges:             3932
Number of relevant variables:    427
Number of functions:             170
Number of loops:                 2
Size of reached set:             3272
  Number of reached locations:   668 (19%)
    Avg states per location:     4
    Max states per location:     65 (at node N75)
  Number of reached functions:   47 (28%)
  Number of partitions:          3262
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1687 (before line 5792), Function main called from node N1644, stack depth 1 [4abf3f0], stack [main]])
  Number of target states:       0
  Size of final wait list        141

Time for analysis setup:          5.271s
  Time for loading CPAs:          0.879s
  Time for loading parser:        0.701s
  Time for CFA construction:      3.606s
    Time for parsing file(s):     1.094s
    Time for AST to CFA:          1.177s
    Time for CFA sanity check:    0.263s
    Time for post-processing:     0.881s
      Time for var class.:        0.398s
Time for Analysis:               25.011s
CPU time for analysis:           25.000s
Total time for CPAchecker:       30.286s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.147s

Time for Garbage Collector:       0.714s (in 87 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    67 MiB) max;     48MB (    45 MiB) avg;     75MB (    71 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
