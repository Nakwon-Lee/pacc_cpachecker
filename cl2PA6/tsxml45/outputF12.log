scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--input--touchscreen--tsc2005.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_901c7kaw/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6322: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6445: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5771: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5775: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_late_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_early_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4384: Ignoring function call through function pointer *(ts->set_reset): (*(ts->set_reset))((int)enable); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function enable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_input_allocate_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function of_get_named_gpio_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_gpio_request_one to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_regulator_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function touchscreen_parse_of_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function irq_set_irq_wake to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2855231 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2799557 (98%)
  Because of loop head:            46236 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9438 (0%)
  Times precision was empty:       481373 (17%)
  Times precision was {false}:     1269 (0%)
  Times result was cached:         2366082 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6507 (0%)
  Times result was 'false':        56023 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1830496
  BDD entailment checks:           430386
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       106
Number of predicates discovered:          35
Number of abstraction locations:          170
Max number of predicates per location:    28
Avg number of predicates per location:    5
Total predicates per abstraction:         6078177
Max number of predicates per abstraction: 28
Avg number of predicates per abstraction: 781.66
Number of irrelevant predicates:          2893842 (48%)
Number of preds handled by boolean abs:   21822 (0%)
  Total number of models for allsat:      7115
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.09

Time for post operator:                 53.491s
  Time for path formula creation:       47.499s
Time for strengthen operator:            9.982s
Time for prec operator:                253.418s
  Time for abstraction:                227.093s (Max:     0.466s, Count: 2855231)
    Boolean abstraction:                 4.937s
    Solving time:                        4.159s (Max:     0.015s)
    Model enumeration time:              0.536s
    Time for BDD construction:           0.168s (Max:     0.001s)
Time for merge operator:                 3.603s
Time for coverage check:                 0.589s
  Time for BDD entailment checks:        0.369s
Total time for SMT solver (w/o itp):     4.695s

Number of path formula cache hits:   17010567 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.608s

Total number of created targets for pointer analysis: 276
   Number of created targets for uf: *unsigned_short_int is 151
   Number of created targets for uf: *(void)* is 113
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               2124
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       16923 (count: 962573, min: 0, max: 237, avg: 0.02)
Time for BDD node cleanup:                             0.249s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 18.227s
  Time for transition matches:                        10.118s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.028s
Automaton transfers with branching:                0
Automaton transfer successors:                     13858162 (count: 13858162, min: 1, max: 1, avg: 1.00) [1 x 13858162]

CPA algorithm statistics
------------------------
Number of iterations:            9049043
Max size of waitlist:            72
Average size of waitlist:        39
Number of computed successors:   10073829
Max successors for one state:    2
Number of times merged:          700055
Number of times stopped:         951887
Number of times breaked:         9438

Total time for CPA algorithm:       543.364s (Max:     2.289s)
  Time for choose from waitlist:      3.266s
  Time for precision adjustment:    318.988s
  Time for transfer relation:       166.413s
  Time for merge operator:           11.227s
  Time for stop operator:            10.240s
  Time for adding to reached set:    11.735s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9438
Avg. length of target path (in blocks):              909661 (count: 9438, min: 22, max: 224, avg: 96.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 217.174s
  Counterexample analysis:                           194.440s (Max:     0.096s, Calls: 9438)
    Refinement sat check:                             99.684s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.430s
  Error path post-processing:                          0.000s
  Predicate creation:                                  2.123s
  Precision update:                                    3.813s
  ARG update:                                         13.241s

Length of refined path (in blocks):                  711919 (count: 9438, min: 18, max: 158, avg: 75.43)
Number of affected states:                           341048 (count: 9438, min: 1, max: 120, avg: 36.14)
Length (states) of path with itp 'true':             361433 (count: 9438, min: 0, max: 101, avg: 38.30)
Length (states) of path with itp non-trivial itp:    341048 (count: 9438, min: 1, max: 120, avg: 36.14)
Length (states) of path with itp 'false':              9438 (count: 9438, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        6260 (count: 9438, min: 0, max: 3, avg: 0.66)
Equal non-trivial interpolants along paths:          325350 (count: 9438, min: 0, max: 119, avg: 34.47)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9438
Number of successful refinements:     9438
Number of failed refinements:         0
Max. size of reached set before ref.: 35447
Max. size of reached set after ref.:  32827
Avg. size of reached set before ref.: 11534.43
Avg. size of reached set after ref.:  10573.89

Total time for CEGAR algorithm:     895.003s
Time for refinements:               293.005s
Average time for refinement:          0.031s
Max time for refinement:              0.546s

Code Coverage
-----------------------------
  Function coverage:      0.071
  Visited lines:          931
  Total lines:            2383
  Line coverage:          0.391
  Visited conditions:     150
  Total conditions:       742
  Condition coverage:     0.202

CPAchecker general statistics
-----------------------------
Number of program locations:     3472
Number of CFA edges:             3932
Number of relevant variables:    427
Number of functions:             170
Number of loops:                 2
Size of reached set:             291
  Number of reached locations:   266 (8%)
    Avg states per location:     1
    Max states per location:     6 (at node N75)
  Number of reached functions:   12 (7%)
  Number of partitions:          291
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        26

Time for analysis setup:          5.286s
  Time for loading CPAs:          0.863s
  Time for loading parser:        0.743s
  Time for CFA construction:      3.541s
    Time for parsing file(s):     0.946s
    Time for AST to CFA:          1.226s
    Time for CFA sanity check:    0.294s
    Time for post-processing:     0.908s
      Time for var class.:        0.431s
Time for Analysis:              895.003s
CPU time for analysis:          894.940s
Total time for CPAchecker:      900.293s
Total CPU time for CPAchecker:  900.210s
Time for statistics:              0.069s

Time for Garbage Collector:      54.551s (in 3374 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                288MB (   275 MiB) max;    129MB (   123 MiB) avg;    292MB (   278 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           292MB (   278 MiB) max;    193MB (   184 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8153MB (  7775 MiB) max;   8067MB (  7693 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
