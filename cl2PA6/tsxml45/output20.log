scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--input--touchscreen--tsc2005.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tlgphkiu/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6322: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6445: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5771: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5775: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_late_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_early_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_input_allocate_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function of_get_named_gpio_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_gpio_request_one to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_regulator_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            53171 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  45833 (86%)
  Because of loop head:            7279 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         59 (0%)
  Times precision was empty:       40975 (77%)
  Times precision was {false}:     249 (0%)
  Times result was cached:         11463 (22%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      484 (1%)
  Times result was 'false':        1174 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         71068
  BDD entailment checks:           10408
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       106
Number of predicates discovered:          8
Number of abstraction locations:          51
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         36770
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 50.16
Number of irrelevant predicates:          17925 (49%)
Number of preds handled by boolean abs:   1251 (3%)
  Total number of models for allsat:      539
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.11

Time for post operator:                  4.054s
  Time for path formula creation:        3.736s
Time for strengthen operator:            0.443s
Time for prec operator:                  6.665s
  Time for abstraction:                  5.627s (Max:     0.043s, Count: 53171)
    Boolean abstraction:                 1.100s
    Solving time:                        1.013s (Max:     0.081s)
    Model enumeration time:              0.093s
    Time for BDD construction:           0.058s (Max:     0.009s)
Time for merge operator:                 0.395s
Time for coverage check:                 0.071s
  Time for BDD entailment checks:        0.053s
Total time for SMT solver (w/o itp):     1.112s

Number of path formula cache hits:   435147 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.507s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               418
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1135 (count: 55640, min: 0, max: 115, avg: 0.02)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.913s
  Time for transition matches:                         0.457s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       371115 (count: 371115, min: 1, max: 1, avg: 1.00) [1 x 371115]

CPA algorithm statistics
------------------------
Number of iterations:            232864
Max size of waitlist:            212
Average size of waitlist:        96
Number of computed successors:   278950
Max successors for one state:    2
Number of times merged:          30330
Number of times stopped:         37110
Number of times breaked:         59

Total time for CPA algorithm:        22.931s (Max:     1.593s)
  Time for choose from waitlist:      0.304s
  Time for precision adjustment:      9.149s
  Time for transfer relation:         9.496s
  Time for merge operator:            1.105s
  Time for stop operator:             0.586s
  Time for adding to reached set:     0.610s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   59
Avg. length of target path (in blocks):                1564 (count: 59, min: 22, max: 31, avg: 26.51)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.673s
  Counterexample analysis:                             0.858s (Max:     0.031s, Calls: 59)
    Refinement sat check:                              0.603s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.076s
  Precision update:                                    0.050s
  ARG update:                                          0.644s

Length of refined path (in blocks):                    1426 (count: 59, min: 18, max: 30, avg: 24.17)
Number of affected states:                             1239 (count: 59, min: 1, max: 29, avg: 21.00)
Length (states) of path with itp 'true':                128 (count: 59, min: 0, max: 16, avg: 2.17)
Length (states) of path with itp non-trivial itp:      1239 (count: 59, min: 1, max: 29, avg: 21.00)
Length (states) of path with itp 'false':                59 (count: 59, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 59, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1180 (count: 59, min: 0, max: 28, avg: 20.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                59
Number of successful refinements:     59
Number of failed refinements:         0
Max. size of reached set before ref.: 7548
Max. size of reached set after ref.:  53
Avg. size of reached set before ref.: 3986.07
Avg. size of reached set after ref.:  9.95

Total time for CEGAR algorithm:      24.955s
Time for refinements:                 2.007s
Average time for refinement:          0.034s
Max time for refinement:              0.106s

Code Coverage
-----------------------------
  Function coverage:      0.329
  Visited lines:          1439
  Total lines:            2383
  Line coverage:          0.604
  Visited conditions:     342
  Total conditions:       742
  Condition coverage:     0.461

CPAchecker general statistics
-----------------------------
Number of program locations:     3472
Number of CFA edges:             3932
Number of relevant variables:    427
Number of functions:             170
Number of loops:                 2
Size of reached set:             6075
  Number of reached locations:   777 (22%)
    Avg states per location:     7
    Max states per location:     90 (at node N75)
  Number of reached functions:   56 (33%)
  Number of partitions:          6018
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1687 (before line 5792), Function main called from node N1644, stack depth 1 [4abf3f0], stack [main]])
  Number of target states:       0
  Size of final wait list        209

Time for analysis setup:          5.287s
  Time for loading CPAs:          1.042s
  Time for loading parser:        0.715s
  Time for CFA construction:      3.394s
    Time for parsing file(s):     1.001s
    Time for AST to CFA:          1.131s
    Time for CFA sanity check:    0.243s
    Time for post-processing:     0.844s
      Time for var class.:        0.409s
Time for Analysis:               24.955s
CPU time for analysis:           24.960s
Total time for CPAchecker:       30.255s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.228s

Time for Garbage Collector:       0.785s (in 90 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    70 MiB) max;     46MB (    44 MiB) avg;     76MB (    72 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    33 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
