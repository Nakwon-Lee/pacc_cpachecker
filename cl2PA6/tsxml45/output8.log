scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--input--touchscreen--tsc2005.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_s05b8r7a/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6322: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6445: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5771: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5775: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_late_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_early_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_input_allocate_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function of_get_named_gpio_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_gpio_request_one to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_regulator_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            58825 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  50799 (86%)
  Because of loop head:            7963 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         63 (0%)
  Times precision was empty:       44298 (75%)
  Times precision was {false}:     268 (0%)
  Times result was cached:         13709 (23%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      550 (1%)
  Times result was 'false':        1312 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         78389
  BDD entailment checks:           11859
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       106
Number of predicates discovered:          8
Number of abstraction locations:          52
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         44203
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 54.04
Number of irrelevant predicates:          20990 (47%)
Number of preds handled by boolean abs:   1437 (3%)
  Total number of models for allsat:      620
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.13

Time for post operator:                  4.000s
  Time for path formula creation:        3.698s
Time for strengthen operator:            0.492s
Time for prec operator:                  6.539s
  Time for abstraction:                  5.494s (Max:     0.040s, Count: 58825)
    Boolean abstraction:                 1.023s
    Solving time:                        0.844s (Max:     0.027s)
    Model enumeration time:              0.122s
    Time for BDD construction:           0.061s (Max:     0.009s)
Time for merge operator:                 0.399s
Time for coverage check:                 0.056s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):     0.966s

Number of path formula cache hits:   479911 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.464s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               518
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1293 (count: 60909, min: 0, max: 115, avg: 0.02)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.000s
  Time for transition matches:                         0.495s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       407816 (count: 407816, min: 1, max: 1, avg: 1.00) [1 x 407816]

CPA algorithm statistics
------------------------
Number of iterations:            256313
Max size of waitlist:            212
Average size of waitlist:        98
Number of computed successors:   306899
Max successors for one state:    2
Number of times merged:          33265
Number of times stopped:         40842
Number of times breaked:         63

Total time for CPA algorithm:        22.737s (Max:     1.633s)
  Time for choose from waitlist:      0.224s
  Time for precision adjustment:      9.009s
  Time for transfer relation:         9.751s
  Time for merge operator:            1.176s
  Time for stop operator:             0.551s
  Time for adding to reached set:     0.602s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   63
Avg. length of target path (in blocks):                1688 (count: 63, min: 22, max: 31, avg: 26.79)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.684s
  Counterexample analysis:                             0.819s (Max:     0.031s, Calls: 63)
    Refinement sat check:                              0.552s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.070s
  Precision update:                                    0.053s
  ARG update:                                          0.704s

Length of refined path (in blocks):                    1546 (count: 63, min: 18, max: 30, avg: 24.54)
Number of affected states:                             1355 (count: 63, min: 1, max: 29, avg: 21.51)
Length (states) of path with itp 'true':                128 (count: 63, min: 0, max: 16, avg: 2.03)
Length (states) of path with itp non-trivial itp:      1355 (count: 63, min: 1, max: 29, avg: 21.51)
Length (states) of path with itp 'false':                63 (count: 63, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 63, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1292 (count: 63, min: 0, max: 28, avg: 20.51)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                63
Number of successful refinements:     63
Number of failed refinements:         0
Max. size of reached set before ref.: 7548
Max. size of reached set after ref.:  53
Avg. size of reached set before ref.: 4154.10
Avg. size of reached set after ref.:  9.51

Total time for CEGAR algorithm:      24.755s
Time for refinements:                 2.015s
Average time for refinement:          0.031s
Max time for refinement:              0.109s

Code Coverage
-----------------------------
  Function coverage:      0.259
  Visited lines:          1364
  Total lines:            2383
  Line coverage:          0.572
  Visited conditions:     326
  Total conditions:       742
  Condition coverage:     0.439

CPAchecker general statistics
-----------------------------
Number of program locations:     3472
Number of CFA edges:             3932
Number of relevant variables:    427
Number of functions:             170
Number of loops:                 2
Size of reached set:             3635
  Number of reached locations:   699 (20%)
    Avg states per location:     5
    Max states per location:     59 (at node N75)
  Number of reached functions:   44 (26%)
  Number of partitions:          3605
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1687 (before line 5792), Function main called from node N1644, stack depth 1 [4abf3f0], stack [main]])
  Number of target states:       0
  Size of final wait list        122

Time for analysis setup:          5.479s
  Time for loading CPAs:          0.905s
  Time for loading parser:        0.672s
  Time for CFA construction:      3.755s
    Time for parsing file(s):     1.087s
    Time for AST to CFA:          1.170s
    Time for CFA sanity check:    0.306s
    Time for post-processing:     1.018s
      Time for var class.:        0.399s
Time for Analysis:               24.755s
CPU time for analysis:           24.750s
Total time for CPAchecker:       30.247s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.142s

Time for Garbage Collector:       0.879s (in 99 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 76MB (    73 MiB) max;     47MB (    45 MiB) avg;     77MB (    74 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
