scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--media--usb--dvb-usb-v2--dvb-usb-mxl111sf.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_85s6y3ij/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 11484: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12150: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13539: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13583: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14603: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9067: Function pointer *(fe->ops.tuner_ops.get_rf_strength) with type int (*)(struct dvb_frontend *, u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9070: Function pointer *(fe->ops.tuner_ops.get_rf_strength) with type int (*)(struct dvb_frontend *, u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9073: Function pointer *(fe->ops.tuner_ops.get_rf_strength) with type int (*)(struct dvb_frontend *, u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9076: Function pointer *(fe->ops.tuner_ops.get_rf_strength) with type int (*)(struct dvb_frontend *, u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9016: Function pointer *__a with type struct dvb_frontend *(*)(struct mxl111sf_state *, struct mxl111sf_demod_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9144: Function pointer *__a with type struct dvb_frontend *(*)(struct dvb_frontend *, struct mxl111sf_state *, struct mxl111sf_tuner_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8383-8384: Function pointer *__a with type struct dvb_frontend *(*)(const struct lg2160_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8861-8862: Function pointer *__a with type struct dvb_frontend *(*)(const struct lg2160_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8622-8623: Function pointer *__a with type struct dvb_frontend *(*)(const struct lg2160_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8145-8146: Function pointer *__a with type struct dvb_frontend *(*)(const struct lgdt3305_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 10270: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10274: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10278: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10294: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___13 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10300: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___16 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10314: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___23 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_10 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_10 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_9 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_9 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_7 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_7 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tveeprom_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tveeprom_hauppauge_analog to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __symbol_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_module to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9144: Ignoring call via function pointer mxl111sf_attach_tuner::__a for which no suitable target was found in line: tmp___4 = (*__a)((adap->fe)[i], state, &mxl_tuner_config); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9144: Ignoring function call through function pointer *__a: tmp___4 = (*__a)((adap->fe)[i], state, &mxl_tuner_config); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __symbol_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_generic_rw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_generic_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            18862 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  17327 (92%)
  Because of loop head:            1528 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7 (0%)
  Times precision was empty:       17861 (95%)
  Times precision was {false}:     74 (0%)
  Times result was cached:         566 (3%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      361 (2%)
  Times result was 'false':        31 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         21679
  BDD entailment checks:           2377
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       167
Number of predicates discovered:          7
Number of abstraction locations:          51
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         3404
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 7.83
Number of irrelevant predicates:          2020 (59%)
Number of preds handled by boolean abs:   1085 (32%)
  Total number of models for allsat:      362
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  8.605s
  Time for path formula creation:        8.316s
Time for strengthen operator:            0.448s
Time for prec operator:                  3.127s
  Time for abstraction:                  2.330s (Max:     0.043s, Count: 18862)
    Boolean abstraction:                 0.684s
    Solving time:                        0.534s (Max:     0.028s)
    Model enumeration time:              0.022s
    Time for BDD construction:           0.086s (Max:     0.008s)
Time for merge operator:                 0.809s
Time for coverage check:                 0.057s
  Time for BDD entailment checks:        0.047s
Total time for SMT solver (w/o itp):     0.556s

Number of path formula cache hits:   175219 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.623s

Total number of created targets for pointer analysis: 12895
   Number of created targets for uf: *signed_int is 5
   Number of created targets for uf: *unsigned_char is 43


Number of BDD nodes:                               217
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         818 (count: 22836, min: 0, max: 161, avg: 0.04)
Time for BDD node cleanup:                             0.059s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.658s
  Time for transition matches:                         0.331s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       176279 (count: 176279, min: 1, max: 1, avg: 1.00) [1 x 176279]

CPA algorithm statistics
------------------------
Number of iterations:            84647
Max size of waitlist:            773
Average size of waitlist:        370
Number of computed successors:   99760
Max successors for one state:    2
Number of times merged:          9651
Number of times stopped:         11519
Number of times breaked:         7

Total time for CPA algorithm:        21.976s (Max:     4.960s)
  Time for choose from waitlist:      0.206s
  Time for precision adjustment:      4.829s
  Time for transfer relation:        13.452s
  Time for merge operator:            1.222s
  Time for stop operator:             0.443s
  Time for adding to reached set:     0.556s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                 621 (count: 7, min: 88, max: 91, avg: 88.71)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.831s
  Counterexample analysis:                             0.363s (Max:     0.059s, Calls: 7)
    Refinement sat check:                              0.223s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.047s
  Precision update:                                    0.024s
  ARG update:                                          0.366s

Length of refined path (in blocks):                     599 (count: 7, min: 82, max: 87, avg: 85.57)
Number of affected states:                              432 (count: 7, min: 1, max: 86, avg: 61.71)
Length (states) of path with itp 'true':                160 (count: 7, min: 0, max: 80, avg: 22.86)
Length (states) of path with itp non-trivial itp:       432 (count: 7, min: 1, max: 86, avg: 61.71)
Length (states) of path with itp 'false':                 7 (count: 7, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             425 (count: 7, min: 0, max: 85, avg: 60.71)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 21587
Max. size of reached set after ref.:  239
Avg. size of reached set before ref.: 10076.29
Avg. size of reached set after ref.:  70.43

Total time for CEGAR algorithm:      22.987s
Time for refinements:                 1.011s
Average time for refinement:          0.144s
Max time for refinement:              0.175s

Code Coverage
-----------------------------
  Function coverage:      0.294
  Visited lines:          2817
  Total lines:            5676
  Line coverage:          0.496
  Visited conditions:     740
  Total conditions:       2130
  Condition coverage:     0.347

CPAchecker general statistics
-----------------------------
Number of program locations:     8000
Number of CFA edges:             9433
Number of relevant variables:    960
Number of functions:             197
Number of loops:                 26
Size of reached set:             18170
  Number of reached locations:   1614 (20%)
    Avg states per location:     11
    Max states per location:     758 (at node N69)
  Number of reached functions:   58 (29%)
  Number of partitions:          18168
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2623 (before line 10345), Function main called from node N2466, stack depth 1 [a357c3e], stack [main]])
  Number of target states:       0
  Size of final wait list        561

Time for analysis setup:          7.303s
  Time for loading CPAs:          1.164s
  Time for loading parser:        0.628s
  Time for CFA construction:      5.371s
    Time for parsing file(s):     1.210s
    Time for AST to CFA:          1.937s
    Time for CFA sanity check:    0.537s
    Time for post-processing:     1.462s
      Time for var class.:        0.713s
Time for Analysis:               22.987s
CPU time for analysis:           22.980s
Total time for CPAchecker:       30.294s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.423s

Time for Garbage Collector:       1.046s (in 51 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                113MB (   108 MiB) max;     62MB (    59 MiB) avg;    123MB (   117 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
