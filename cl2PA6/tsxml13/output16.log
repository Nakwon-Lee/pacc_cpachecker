scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--media--usb--dvb-usb-v2--dvb-usb-mxl111sf.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bvz46kx5/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 11484: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12150: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13539: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13583: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14603: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9067: Function pointer *(fe->ops.tuner_ops.get_rf_strength) with type int (*)(struct dvb_frontend *, u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9070: Function pointer *(fe->ops.tuner_ops.get_rf_strength) with type int (*)(struct dvb_frontend *, u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9073: Function pointer *(fe->ops.tuner_ops.get_rf_strength) with type int (*)(struct dvb_frontend *, u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9076: Function pointer *(fe->ops.tuner_ops.get_rf_strength) with type int (*)(struct dvb_frontend *, u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9016: Function pointer *__a with type struct dvb_frontend *(*)(struct mxl111sf_state *, struct mxl111sf_demod_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9144: Function pointer *__a with type struct dvb_frontend *(*)(struct dvb_frontend *, struct mxl111sf_state *, struct mxl111sf_tuner_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8383-8384: Function pointer *__a with type struct dvb_frontend *(*)(const struct lg2160_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8861-8862: Function pointer *__a with type struct dvb_frontend *(*)(const struct lg2160_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8622-8623: Function pointer *__a with type struct dvb_frontend *(*)(const struct lg2160_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8145-8146: Function pointer *__a with type struct dvb_frontend *(*)(const struct lgdt3305_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 10270: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10274: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10278: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10294: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___13 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10300: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___16 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10314: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___23 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_10 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_10 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_9 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_9 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_7 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_7 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tveeprom_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tveeprom_hauppauge_analog to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            10670 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  9574 (90%)
  Because of loop head:            1082 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (0%)
  Times precision was empty:       9571 (90%)
  Times precision was {false}:     197 (2%)
  Times result was cached:         496 (5%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      406 (4%)
  Times result was 'false':        135 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         16496
  BDD entailment checks:           1090
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       167
Number of predicates discovered:          15
Number of abstraction locations:          52
Max number of predicates per location:    14
Avg number of predicates per location:    4
Total predicates per abstraction:         3772
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 6.26
Number of irrelevant predicates:          1932 (51%)
Number of preds handled by boolean abs:   1374 (36%)
  Total number of models for allsat:      1677
  Max number of models for allsat:        256
  Avg number of models for allsat:        4.13

Time for post operator:                  9.146s
  Time for path formula creation:        8.923s
Time for strengthen operator:            0.295s
Time for prec operator:                  5.401s
  Time for abstraction:                  4.789s (Max:     0.395s, Count: 10670)
    Boolean abstraction:                 2.996s
    Solving time:                        0.955s (Max:     0.035s)
    Model enumeration time:              1.816s
    Time for BDD construction:           0.228s (Max:     0.037s)
Time for merge operator:                 0.802s
Time for coverage check:                 0.044s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     2.771s

Number of path formula cache hits:   97681 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.657s

Total number of created targets for pointer analysis: 3732
   Number of created targets for uf: *unsigned_char is 561


Number of BDD nodes:                               3358
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1316 (count: 14374, min: 0, max: 161, avg: 0.09)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.603s
  Time for transition matches:                         0.329s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       126071 (count: 126071, min: 1, max: 1, avg: 1.00) [1 x 126071]

CPA algorithm statistics
------------------------
Number of iterations:            52110
Max size of waitlist:            475
Average size of waitlist:        163
Number of computed successors:   64396
Max successors for one state:    2
Number of times merged:          7703
Number of times stopped:         8578
Number of times breaked:         14

Total time for CPA algorithm:        21.579s (Max:     3.453s)
  Time for choose from waitlist:      0.117s
  Time for precision adjustment:      6.417s
  Time for transfer relation:        12.251s
  Time for merge operator:            1.307s
  Time for stop operator:             0.302s
  Time for adding to reached set:     0.331s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14
Avg. length of target path (in blocks):                1273 (count: 14, min: 88, max: 93, avg: 90.93)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.091s
  Counterexample analysis:                             0.727s (Max:     0.060s, Calls: 14)
    Refinement sat check:                              0.462s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.061s
  Precision update:                                    0.036s
  ARG update:                                          0.244s

Length of refined path (in blocks):                    1173 (count: 14, min: 82, max: 87, avg: 83.79)
Number of affected states:                              439 (count: 14, min: 1, max: 86, avg: 31.36)
Length (states) of path with itp 'true':                720 (count: 14, min: 0, max: 80, avg: 51.43)
Length (states) of path with itp non-trivial itp:       439 (count: 14, min: 1, max: 86, avg: 31.36)
Length (states) of path with itp 'false':                14 (count: 14, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 14, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             425 (count: 14, min: 0, max: 85, avg: 30.36)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 4095
Max. size of reached set after ref.:  239
Avg. size of reached set before ref.: 3768.29
Avg. size of reached set after ref.:  154.71

Total time for CEGAR algorithm:      22.900s
Time for refinements:                 1.319s
Average time for refinement:          0.094s
Max time for refinement:              0.186s

Code Coverage
-----------------------------
  Function coverage:      0.228
  Visited lines:          2295
  Total lines:            5676
  Line coverage:          0.404
  Visited conditions:     480
  Total conditions:       2130
  Condition coverage:     0.225

CPAchecker general statistics
-----------------------------
Number of program locations:     8000
Number of CFA edges:             9433
Number of relevant variables:    960
Number of functions:             197
Number of loops:                 26
Size of reached set:             5093
  Number of reached locations:   896 (11%)
    Avg states per location:     5
    Max states per location:     298 (at node N69)
  Number of reached functions:   45 (23%)
  Number of partitions:          5089
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N2623 (before line 10345), Function main called from node N2466, stack depth 1 [3eb9c575], stack [main]])
  Number of target states:       0
  Size of final wait list        472

Time for analysis setup:          7.354s
  Time for loading CPAs:          0.966s
  Time for loading parser:        0.675s
  Time for CFA construction:      5.613s
    Time for parsing file(s):     1.174s
    Time for AST to CFA:          1.986s
    Time for CFA sanity check:    0.525s
    Time for post-processing:     1.669s
      Time for var class.:        0.675s
Time for Analysis:               22.900s
CPU time for analysis:           22.900s
Total time for CPAchecker:       30.258s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.203s

Time for Garbage Collector:       0.715s (in 42 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 93MB (    88 MiB) max;     58MB (    55 MiB) avg;     97MB (    92 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     36MB (    34 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
