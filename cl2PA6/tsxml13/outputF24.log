scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--media--usb--dvb-usb-v2--dvb-usb-mxl111sf.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4t4dr210/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 11484: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12150: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13539: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13583: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14603: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9067: Function pointer *(fe->ops.tuner_ops.get_rf_strength) with type int (*)(struct dvb_frontend *, u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9070: Function pointer *(fe->ops.tuner_ops.get_rf_strength) with type int (*)(struct dvb_frontend *, u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9073: Function pointer *(fe->ops.tuner_ops.get_rf_strength) with type int (*)(struct dvb_frontend *, u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9076: Function pointer *(fe->ops.tuner_ops.get_rf_strength) with type int (*)(struct dvb_frontend *, u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9016: Function pointer *__a with type struct dvb_frontend *(*)(struct mxl111sf_state *, struct mxl111sf_demod_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9144: Function pointer *__a with type struct dvb_frontend *(*)(struct dvb_frontend *, struct mxl111sf_state *, struct mxl111sf_tuner_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8383-8384: Function pointer *__a with type struct dvb_frontend *(*)(const struct lg2160_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8861-8862: Function pointer *__a with type struct dvb_frontend *(*)(const struct lg2160_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8622-8623: Function pointer *__a with type struct dvb_frontend *(*)(const struct lg2160_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8145-8146: Function pointer *__a with type struct dvb_frontend *(*)(const struct lgdt3305_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 10270: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10274: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10278: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10294: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___13 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10300: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___16 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10314: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___23 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_10 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_10 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_9 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_9 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_7 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_7 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_generic_rw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_generic_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9067: Ignoring function call through function pointer *(fe->ops.tuner_ops.get_rf_strength): (*(fe->ops.tuner_ops.get_rf_strength))(fe, &rxPwrA); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9070: Ignoring function call through function pointer *(fe->ops.tuner_ops.get_rf_strength): (*(fe->ops.tuner_ops.get_rf_strength))(fe, &rxPwr0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9073: Ignoring function call through function pointer *(fe->ops.tuner_ops.get_rf_strength): (*(fe->ops.tuner_ops.get_rf_strength))(fe, &rxPwr1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9076: Ignoring function call through function pointer *(fe->ops.tuner_ops.get_rf_strength): (*(fe->ops.tuner_ops.get_rf_strength))(fe, &rxPwr2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __symbol_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_module to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9144: Ignoring call via function pointer mxl111sf_attach_tuner::__a for which no suitable target was found in line: tmp___4 = (*__a)((adap->fe)[i], state, &mxl_tuner_config); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9144: Ignoring function call through function pointer *__a: tmp___4 = (*__a)((adap->fe)[i], state, &mxl_tuner_config); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __symbol_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tveeprom_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tveeprom_hauppauge_analog to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9016: Ignoring call via function pointer mxl111sf_attach_demod::__a for which no suitable target was found in line: tmp___5 = (*__a)(state, &mxl_demod_config); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9016: Ignoring function call through function pointer *__a: tmp___5 = (*__a)(state, &mxl_demod_config); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 8145-8146: Ignoring call via function pointer mxl111sf_lgdt3305_frontend_attach::__a for which no suitable target was found in line: tmp___5 = (*__a)((const struct lgdt3305_config *)(&hauppauge_lgdt3305_config), &(d->i2c_adap)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 8145-8146: Ignoring function call through function pointer *__a: tmp___5 = (*__a)((const struct lgdt3305_config *)(&hauppauge_lgdt3305_config), &(d->i2c_adap)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 8383-8384: Ignoring call via function pointer mxl111sf_lg2160_frontend_attach::__a for which no suitable target was found in line: tmp___5 = (*__a)((const struct lg2160_config *)(&hauppauge_lg2160_config), &(d->i2c_adap)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 8383-8384: Ignoring function call through function pointer *__a: tmp___5 = (*__a)((const struct lg2160_config *)(&hauppauge_lg2160_config), &(d->i2c_adap)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 8861-8862: Ignoring call via function pointer mxl111sf_lg2161_ep6_frontend_attach::__a for which no suitable target was found in line: tmp___5 = (*__a)((const struct lg2160_config *)__CPAchecker_TMP_5, &(d->i2c_adap)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 8861-8862: Ignoring function call through function pointer *__a: tmp___5 = (*__a)((const struct lg2160_config *)__CPAchecker_TMP_5, &(d->i2c_adap)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 8622-8623: Ignoring call via function pointer mxl111sf_lg2161_frontend_attach::__a for which no suitable target was found in line: tmp___5 = (*__a)((const struct lg2160_config *)__CPAchecker_TMP_5, &(d->i2c_adap)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 8622-8623: Ignoring function call through function pointer *__a: tmp___5 = (*__a)((const struct lg2160_config *)__CPAchecker_TMP_5, &(d->i2c_adap)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1698496 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1692440 (100%)
  Because of loop head:            6049 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7 (0%)
  Times precision was empty:       1697404 (100%)
  Times precision was {false}:     62 (0%)
  Times result was cached:         664 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      366 (0%)
  Times result was 'false':        23 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         4759917
  BDD entailment checks:           422035
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       167
Number of predicates discovered:          7
Number of abstraction locations:          57
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         3814
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 8.91
Number of irrelevant predicates:          2050 (54%)
Number of preds handled by boolean abs:   1086 (28%)
  Total number of models for allsat:      366
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                313.212s
  Time for path formula creation:      301.610s
Time for strengthen operator:           22.080s
Time for prec operator:                 47.640s
  Time for abstraction:                  7.845s (Max:     0.393s, Count: 1698496)
    Boolean abstraction:                 0.545s
    Solving time:                        0.502s (Max:     0.023s)
    Model enumeration time:              0.026s
    Time for BDD construction:           0.016s (Max:     0.002s)
Time for merge operator:                55.018s
Time for coverage check:                 0.821s
  Time for BDD entailment checks:        0.323s
Total time for SMT solver (w/o itp):     0.528s

Number of path formula cache hits:   23311565 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   112.358s

Total number of created targets for pointer analysis: 3889032
   Number of created targets for uf: *unsigned_short_int is 350
   Number of created targets for uf: *signed_int is 3
   Number of created targets for uf: *unsigned_char is 2726
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_1,_Parameter_1_type:_[(struct_dvb_frontend)*],_VarArgs:_false)* is 13
   Number of created targets for uf: *(unsigned_char)* is 92


Number of BDD nodes:                               217
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         818 (count: 2122006, min: 0, max: 166, avg: 0.00)
Time for BDD node cleanup:                             0.310s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 25.472s
  Time for transition matches:                        14.290s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     20126937 (count: 20126937, min: 1, max: 1, avg: 1.00) [1 x 20126937]

CPA algorithm statistics
------------------------
Number of iterations:            12312725
Max size of waitlist:            156
Average size of waitlist:        87
Number of computed successors:   14903486
Max successors for one state:    2
Number of times merged:          2168941
Number of times stopped:         2590461
Number of times breaked:         7

Total time for CPA algorithm:       854.002s (Max:   243.735s)
  Time for choose from waitlist:      5.523s
  Time for precision adjustment:    168.947s
  Time for transfer relation:       526.736s
  Time for merge operator:           76.427s
  Time for stop operator:            17.511s
  Time for adding to reached set:    27.788s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                 622 (count: 7, min: 88, max: 92, avg: 88.86)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  32.748s
  Counterexample analysis:                             0.241s (Max:     0.046s, Calls: 7)
    Refinement sat check:                              0.152s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.030s
  Precision update:                                    0.009s
  ARG update:                                         32.450s

Length of refined path (in blocks):                     608 (count: 7, min: 82, max: 91, avg: 86.86)
Number of affected states:                              521 (count: 7, min: 1, max: 90, avg: 74.43)
Length (states) of path with itp 'true':                 80 (count: 7, min: 0, max: 80, avg: 11.43)
Length (states) of path with itp non-trivial itp:       521 (count: 7, min: 1, max: 90, avg: 74.43)
Length (states) of path with itp 'false':                 7 (count: 7, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             514 (count: 7, min: 0, max: 89, avg: 73.43)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 1762666
Max. size of reached set after ref.:  239
Avg. size of reached set before ref.: 1513238.14
Avg. size of reached set after ref.:  36.71

Total time for CEGAR algorithm:     892.751s
Time for refinements:                38.748s
Average time for refinement:          5.535s
Max time for refinement:              7.289s

Code Coverage
-----------------------------
  Function coverage:      0.355
  Visited lines:          4197
  Total lines:            5676
  Line coverage:          0.739
  Visited conditions:     1534
  Total conditions:       2130
  Condition coverage:     0.720

CPAchecker general statistics
-----------------------------
Number of program locations:     8000
Number of CFA edges:             9433
Number of relevant variables:    960
Number of functions:             197
Number of loops:                 26
Size of reached set:             1720592
  Size of final wait list        31

Time for analysis setup:          7.484s
  Time for loading CPAs:          1.068s
  Time for loading parser:        0.656s
  Time for CFA construction:      5.592s
    Time for parsing file(s):     1.318s
    Time for AST to CFA:          2.097s
    Time for CFA sanity check:    0.461s
    Time for post-processing:     1.460s
      Time for var class.:        0.701s
Time for Analysis:              892.751s
CPU time for analysis:          892.720s
Total time for CPAchecker:      900.239s
Total CPU time for CPAchecker:  900.180s
Time for statistics:              8.306s

Time for Garbage Collector:     110.099s (in 360 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2387MB (  2277 MiB) max;   1324MB (  1263 MiB) avg;   2473MB (  2358 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     39MB (    37 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          2439MB (  2326 MiB) max;   2090MB (  1993 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8162MB (  7783 MiB) max;   8113MB (  7737 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
