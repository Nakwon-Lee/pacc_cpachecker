scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--media--usb--dvb-usb-v2--dvb-usb-mxl111sf.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_irisrkc3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 11484: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12150: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13539: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13583: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14603: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9067: Function pointer *(fe->ops.tuner_ops.get_rf_strength) with type int (*)(struct dvb_frontend *, u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9070: Function pointer *(fe->ops.tuner_ops.get_rf_strength) with type int (*)(struct dvb_frontend *, u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9073: Function pointer *(fe->ops.tuner_ops.get_rf_strength) with type int (*)(struct dvb_frontend *, u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9076: Function pointer *(fe->ops.tuner_ops.get_rf_strength) with type int (*)(struct dvb_frontend *, u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9016: Function pointer *__a with type struct dvb_frontend *(*)(struct mxl111sf_state *, struct mxl111sf_demod_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9144: Function pointer *__a with type struct dvb_frontend *(*)(struct dvb_frontend *, struct mxl111sf_state *, struct mxl111sf_tuner_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8383-8384: Function pointer *__a with type struct dvb_frontend *(*)(const struct lg2160_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8861-8862: Function pointer *__a with type struct dvb_frontend *(*)(const struct lg2160_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8622-8623: Function pointer *__a with type struct dvb_frontend *(*)(const struct lg2160_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8145-8146: Function pointer *__a with type struct dvb_frontend *(*)(const struct lgdt3305_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 10270: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10274: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10278: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10294: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___13 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10300: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___16 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10314: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___23 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_10 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_10 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_9 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_9 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_7 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_7 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tveeprom_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tveeprom_hauppauge_analog to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __symbol_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_module to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9144: Ignoring call via function pointer mxl111sf_attach_tuner::__a for which no suitable target was found in line: tmp___4 = (*__a)((adap->fe)[i], state, &mxl_tuner_config); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9144: Ignoring function call through function pointer *__a: tmp___4 = (*__a)((adap->fe)[i], state, &mxl_tuner_config); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __symbol_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_generic_rw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_generic_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9067: Ignoring function call through function pointer *(fe->ops.tuner_ops.get_rf_strength): (*(fe->ops.tuner_ops.get_rf_strength))(fe, &rxPwrA); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1291050 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1214800 (94%)
  Because of loop head:            76134 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         116 (0%)
  Times precision was empty:       813039 (63%)
  Times precision was {false}:     12727 (1%)
  Times result was cached:         459946 (36%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5338 (0%)
  Times result was 'false':        17893 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1841038
  BDD entailment checks:           237528
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       167
Number of predicates discovered:          22
Number of abstraction locations:          147
Max number of predicates per location:    21
Avg number of predicates per location:    5
Total predicates per abstraction:         1764561
Max number of predicates per abstraction: 21
Avg number of predicates per abstraction: 97.68
Number of irrelevant predicates:          1399357 (79%)
Number of preds handled by boolean abs:   20343 (1%)
  Total number of models for allsat:      377626
  Max number of models for allsat:        8748
  Avg number of models for allsat:        70.74

Time for post operator:                161.176s
  Time for path formula creation:      155.880s
Time for strengthen operator:            9.307s
Time for prec operator:                479.219s
  Time for abstraction:                455.396s (Max:     9.063s, Count: 1291050)
    Boolean abstraction:               324.085s
    Solving time:                       13.922s (Max:     0.784s)
    Model enumeration time:            303.734s
    Time for BDD construction:          13.932s (Max:     0.434s)
Time for merge operator:                17.060s
Time for coverage check:                 0.515s
  Time for BDD entailment checks:        0.301s
Total time for SMT solver (w/o itp):   317.656s

Number of path formula cache hits:   13933108 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    39.138s

Total number of created targets for pointer analysis: 385734
   Number of created targets for uf: *signed_int is 1541
   Number of created targets for uf: *unsigned_char is 571
   Number of created targets for uf: *(struct_dvb_usb_device)* is 87


Number of BDD nodes:                               176142
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       18486 (count: 1151686, min: 0, max: 1537, avg: 0.02)
Time for BDD node cleanup:                             0.218s
Time for BDD garbage collection:                       0.139s (in 9 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 14.885s
  Time for transition matches:                         8.115s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     12493325 (count: 12493325, min: 1, max: 1, avg: 1.00) [1 x 12493325]

CPA algorithm statistics
------------------------
Number of iterations:            6243044
Max size of waitlist:            5815
Average size of waitlist:        1830
Number of computed successors:   7413859
Max successors for one state:    2
Number of times merged:          801755
Number of times stopped:         951948
Number of times breaked:         116

Total time for CPA algorithm:       870.138s (Max:   157.778s)
  Time for choose from waitlist:      3.322s
  Time for precision adjustment:    531.715s
  Time for transfer relation:       271.282s
  Time for merge operator:           26.448s
  Time for stop operator:             8.312s
  Time for adding to reached set:    11.975s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   116
Avg. length of target path (in blocks):               15245 (count: 116, min: 88, max: 150, avg: 131.42)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  19.349s
  Counterexample analysis:                             5.734s (Max:     0.105s, Calls: 116)
    Refinement sat check:                              3.364s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.137s
  Precision update:                                    0.107s
  ARG update:                                         13.221s

Length of refined path (in blocks):                   14690 (count: 116, min: 82, max: 149, avg: 126.64)
Number of affected states:                            11541 (count: 116, min: 1, max: 148, avg: 99.49)
Length (states) of path with itp 'true':               3033 (count: 116, min: 0, max: 131, avg: 26.15)
Length (states) of path with itp non-trivial itp:     11541 (count: 116, min: 1, max: 148, avg: 99.49)
Length (states) of path with itp 'false':               116 (count: 116, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 116, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           11425 (count: 116, min: 0, max: 147, avg: 98.49)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                116
Number of successful refinements:     116
Number of failed refinements:         0
Max. size of reached set before ref.: 157624
Max. size of reached set after ref.:  1115
Avg. size of reached set before ref.: 55318.52
Avg. size of reached set after ref.:  123.72

Total time for CEGAR algorithm:     892.702s
Time for refinements:                22.539s
Average time for refinement:          0.194s
Max time for refinement:              0.513s

Code Coverage
-----------------------------
  Function coverage:      0.335
  Visited lines:          2831
  Total lines:            5676
  Line coverage:          0.499
  Visited conditions:     712
  Total conditions:       2130
  Condition coverage:     0.334

CPAchecker general statistics
-----------------------------
Number of program locations:     8000
Number of CFA edges:             9433
Number of relevant variables:    960
Number of functions:             197
Number of loops:                 26
Size of reached set:             41423
  Number of reached locations:   1600 (20%)
    Avg states per location:     25
    Max states per location:     1416 (at node N69)
  Number of reached functions:   66 (34%)
  Number of partitions:          41388
    Avg size of partitions:      1
    Max size of partitions:      29 (with key [N2623 (before line 10345), Function main called from node N2466, stack depth 1 [1e477944], stack [main]])
  Number of target states:       0
  Size of final wait list        3396

Time for analysis setup:          7.577s
  Time for loading CPAs:          1.069s
  Time for loading parser:        0.797s
  Time for CFA construction:      5.562s
    Time for parsing file(s):     1.252s
    Time for AST to CFA:          2.004s
    Time for CFA sanity check:    0.533s
    Time for post-processing:     1.514s
      Time for var class.:        0.751s
Time for Analysis:              892.702s
CPU time for analysis:          892.590s
Total time for CPAchecker:      900.283s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              0.670s

Time for Garbage Collector:      62.819s (in 850 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                756MB (   721 MiB) max;    401MB (   382 MiB) avg;    783MB (   746 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           820MB (   782 MiB) max;    592MB (   564 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8220MB (  7839 MiB) max;   8149MB (  7771 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
