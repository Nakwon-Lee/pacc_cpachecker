scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--char--lp.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_r4wkjl2d/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3420: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3423: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3426: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3451: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& cpu_tss.x86_tss.sp0)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3454: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& cpu_tss.x86_tss.sp0)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3457: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& cpu_tss.x86_tss.sp0)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& cpu_tss.x86_tss.sp0));
  goto ldv_5374;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& cpu_tss.x86_tss.sp0));
  goto ldv_5374;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& cpu_tss.x86_tss.sp0));
  goto ldv_5374;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& cpu_tss.x86_tss.sp0));
  goto ldv_5374;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5371: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5395: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5419: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5463: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3947: Function pointer *((lp_table[minor]).dev->port->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4488: Function pointer *((lp_table[minor]).dev->port->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4337: Function pointer *((lp_table[minor]).dev->port->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 3891-3892: Function pointer *((lp_table[minor]).dev->port->ops->write_control) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 3894-3895: Function pointer *((lp_table[minor]).dev->port->ops->write_control) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3896: Function pointer *((lp_table[minor]).dev->port->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5026: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5030: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5034: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_init_zalloc(88UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_close_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_open_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_claim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_set_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_negotiate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_console to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memchr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_console to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_claim_or_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 3891-3892: Ignoring function call through function pointer *((lp_table[minor]).dev->port->ops->write_control): (*((lp_table[minor]).dev->port->ops->write_control))((lp_table[minor]).dev->port, 8); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 3894-3895: Ignoring function call through function pointer *((lp_table[minor]).dev->port->ops->write_control): (*((lp_table[minor]).dev->port->ops->write_control))((lp_table[minor]).dev->port, 12); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __parport_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            30187 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  23223 (77%)
  Because of loop head:            6894 (23%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         70 (0%)
  Times precision was empty:       15001 (50%)
  Times precision was {false}:     425 (1%)
  Times result was cached:         14033 (46%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      728 (2%)
  Times result was 'false':        2228 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         39691
  BDD entailment checks:           10601
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          11
Number of abstraction locations:          60
Max number of predicates per location:    9
Avg number of predicates per location:    5
Total predicates per abstraction:         65291
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 56.63
Number of irrelevant predicates:          36263 (56%)
Number of preds handled by boolean abs:   2513 (4%)
  Total number of models for allsat:      792
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.09

Time for post operator:                  4.093s
  Time for path formula creation:        3.904s
Time for strengthen operator:            0.309s
Time for prec operator:                  9.155s
  Time for abstraction:                  8.396s (Max:     0.048s, Count: 30187)
    Boolean abstraction:                 1.421s
    Solving time:                        1.177s (Max:     0.020s)
    Model enumeration time:              0.122s
    Time for BDD construction:           0.180s (Max:     0.016s)
Time for merge operator:                 0.363s
Time for coverage check:                 0.080s
  Time for BDD entailment checks:        0.072s
Total time for SMT solver (w/o itp):     1.299s

Number of path formula cache hits:   237344 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.919s

Total number of created targets for pointer analysis: 2354
   Number of created targets for uf: *signed_int is 129
   Number of created targets for uf: *(char)* is 417
   Number of created targets for uf: *(struct_pardevice)* is 225
   Number of created targets for uf: *unsigned_int is 25
   Number of created targets for uf: *unsigned_long_int is 217


Number of BDD nodes:                               804
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2065 (count: 32694, min: 0, max: 223, avg: 0.06)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.537s
  Time for transition matches:                         0.225s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                       210673 (count: 210673, min: 1, max: 1, avg: 1.00) [1 x 210673]

CPA algorithm statistics
------------------------
Number of iterations:            131929
Max size of waitlist:            96
Average size of waitlist:        44
Number of computed successors:   157601
Max successors for one state:    2
Number of times merged:          14545
Number of times stopped:         20169
Number of times breaked:         70

Total time for CPA algorithm:        21.798s (Max:     1.564s)
  Time for choose from waitlist:      0.215s
  Time for precision adjustment:     10.777s
  Time for transfer relation:         7.872s
  Time for merge operator:            0.802s
  Time for stop operator:             0.471s
  Time for adding to reached set:     0.504s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   70
Avg. length of target path (in blocks):                3216 (count: 70, min: 37, max: 51, avg: 45.94)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.328s
  Counterexample analysis:                             1.479s (Max:     0.035s, Calls: 70)
    Refinement sat check:                              1.032s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.088s
  Precision update:                                    0.108s
  ARG update:                                          0.568s

Length of refined path (in blocks):                    3014 (count: 70, min: 32, max: 49, avg: 43.06)
Number of affected states:                             2279 (count: 70, min: 1, max: 48, avg: 32.56)
Length (states) of path with itp 'true':                665 (count: 70, min: 0, max: 35, avg: 9.50)
Length (states) of path with itp non-trivial itp:      2279 (count: 70, min: 1, max: 48, avg: 32.56)
Length (states) of path with itp 'false':                70 (count: 70, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 70, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2209 (count: 70, min: 0, max: 47, avg: 31.56)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                70
Number of successful refinements:     70
Number of failed refinements:         0
Max. size of reached set before ref.: 3389
Max. size of reached set after ref.:  397
Avg. size of reached set before ref.: 1985.51
Avg. size of reached set after ref.:  57.74

Total time for CEGAR algorithm:      24.384s
Time for refinements:                 2.578s
Average time for refinement:          0.036s
Max time for refinement:              0.092s

Code Coverage
-----------------------------
  Function coverage:      0.064
  Visited lines:          840
  Total lines:            2074
  Line coverage:          0.405
  Visited conditions:     102
  Total conditions:       540
  Condition coverage:     0.189

CPAchecker general statistics
-----------------------------
Number of program locations:     2908
Number of CFA edges:             3269
Number of relevant variables:    329
Number of functions:             140
Number of loops:                 11
Size of reached set:             261
  Number of reached locations:   200 (7%)
    Avg states per location:     1
    Max states per location:     9 (at node N116)
  Number of reached functions:   9 (6%)
  Number of partitions:          261
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        4

Time for analysis setup:          5.392s
  Time for loading CPAs:          0.916s
  Time for loading parser:        0.725s
  Time for CFA construction:      3.591s
    Time for parsing file(s):     1.010s
    Time for AST to CFA:          1.219s
    Time for CFA sanity check:    0.278s
    Time for post-processing:     0.926s
      Time for var class.:        0.365s
Time for Analysis:               24.384s
CPU time for analysis:           24.380s
Total time for CPAchecker:       29.780s
Total CPU time for CPAchecker:   29.770s
Time for statistics:              0.084s

Time for Garbage Collector:       0.557s (in 68 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     46MB (    44 MiB) avg;     73MB (    70 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
