scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--char--lp.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nsp2074w/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3420: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3423: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3426: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3451: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& cpu_tss.x86_tss.sp0)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3454: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& cpu_tss.x86_tss.sp0)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3457: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& cpu_tss.x86_tss.sp0)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& cpu_tss.x86_tss.sp0));
  goto ldv_5374;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& cpu_tss.x86_tss.sp0));
  goto ldv_5374;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& cpu_tss.x86_tss.sp0));
  goto ldv_5374;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& cpu_tss.x86_tss.sp0));
  goto ldv_5374;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5371: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5395: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5419: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5463: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3947: Function pointer *((lp_table[minor]).dev->port->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4488: Function pointer *((lp_table[minor]).dev->port->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4337: Function pointer *((lp_table[minor]).dev->port->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 3891-3892: Function pointer *((lp_table[minor]).dev->port->ops->write_control) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 3894-3895: Function pointer *((lp_table[minor]).dev->port->ops->write_control) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3896: Function pointer *((lp_table[minor]).dev->port->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5026: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5030: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5034: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_init_zalloc(88UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_close_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_open_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_claim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_set_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_negotiate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __parport_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_console to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_console to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_claim_or_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 3891-3892: Ignoring function call through function pointer *((lp_table[minor]).dev->port->ops->write_control): (*((lp_table[minor]).dev->port->ops->write_control))((lp_table[minor]).dev->port, 8); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 3894-3895: Ignoring function call through function pointer *((lp_table[minor]).dev->port->ops->write_control): (*((lp_table[minor]).dev->port->ops->write_control))((lp_table[minor]).dev->port, 12); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function parport_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memchr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3765: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size(from, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __might_fault to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3746: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __copy_from_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4488: Ignoring function call through function pointer *((lp_table[minor]).dev->port->ops->read_status): tmp___1 = (*((lp_table[minor]).dev->port->ops->read_status))((lp_table[minor]).dev->port); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3947: Ignoring function call through function pointer *((lp_table[minor]).dev->port->ops->read_status): tmp = (*((lp_table[minor]).dev->port->ops->read_status))((lp_table[minor]).dev->port); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4337: Ignoring function call through function pointer *((lp_table[minor]).dev->port->ops->read_status): tmp___1 = (*((lp_table[minor]).dev->port->ops->read_status))((lp_table[minor]).dev->port); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function compat_get_timeval to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ___might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _cond_resched to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            886993 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  824980 (93%)
  Because of loop head:            53830 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8183 (1%)
  Times precision was empty:       154220 (17%)
  Times precision was {false}:     1748 (0%)
  Times result was cached:         717767 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      13258 (1%)
  Times result was 'false':        62532 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         854128
  BDD entailment checks:           218862
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          42
Number of abstraction locations:          210
Max number of predicates per location:    18
Avg number of predicates per location:    5
Total predicates per abstraction:         2828222
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 188.47
Number of irrelevant predicates:          1337135 (47%)
Number of preds handled by boolean abs:   68386 (2%)
  Total number of models for allsat:      18178
  Max number of models for allsat:        90
  Avg number of models for allsat:        1.37

Time for post operator:                 33.491s
  Time for path formula creation:       31.373s
Time for strengthen operator:            3.874s
Time for prec operator:                169.448s
  Time for abstraction:                158.993s (Max:     0.408s, Count: 886993)
    Boolean abstraction:                24.677s
    Solving time:                       20.301s (Max:     0.030s)
    Model enumeration time:              3.733s
    Time for BDD construction:           0.471s (Max:     0.012s)
Time for merge operator:                 2.977s
Time for coverage check:                 0.390s
  Time for BDD entailment checks:        0.273s
Total time for SMT solver (w/o itp):    24.034s

Number of path formula cache hits:   5673735 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    15.582s

Total number of created targets for pointer analysis: 95823
   Number of created targets for uf: *signed_int is 1498
   Number of created targets for uf: *(char)* is 16369
   Number of created targets for uf: *unsigned_int is 3637
   Number of created targets for uf: *(struct_pardevice)* is 9205
   Number of created targets for uf: *unsigned_long_int is 673


Number of BDD nodes:                               32820
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       40366 (count: 475719, min: 0, max: 1303, avg: 0.08)
Time for BDD node cleanup:                             0.105s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.466s
  Time for transition matches:                         3.169s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.025s
Automaton transfers with branching:                0
Automaton transfer successors:                      4904976 (count: 4904976, min: 1, max: 1, avg: 1.00) [1 x 4904976]

CPA algorithm statistics
------------------------
Number of iterations:            3440320
Max size of waitlist:            78
Average size of waitlist:        27
Number of computed successors:   3943790
Max successors for one state:    2
Number of times merged:          317633
Number of times stopped:         416464
Number of times breaked:         8183

Total time for CPA algorithm:       296.135s (Max:     1.799s)
  Time for choose from waitlist:      1.609s
  Time for precision adjustment:    192.249s
  Time for transfer relation:        77.027s
  Time for merge operator:            6.627s
  Time for stop operator:             4.348s
  Time for adding to reached set:     5.378s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8183
Avg. length of target path (in blocks):              797291 (count: 8183, min: 37, max: 130, avg: 97.43)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 478.543s
  Counterexample analysis:                           462.405s (Max:     0.175s, Calls: 8183)
    Refinement sat check:                            308.645s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.365s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.202s
  Precision update:                                    5.674s
  ARG update:                                          5.706s

Length of refined path (in blocks):                  778175 (count: 8183, min: 32, max: 129, avg: 95.10)
Number of affected states:                           122505 (count: 8183, min: 1, max: 128, avg: 14.97)
Length (states) of path with itp 'true':             647487 (count: 8183, min: 0, max: 105, avg: 79.13)
Length (states) of path with itp non-trivial itp:    122505 (count: 8183, min: 1, max: 128, avg: 14.97)
Length (states) of path with itp 'false':              8183 (count: 8183, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        6857 (count: 8183, min: 0, max: 7, avg: 0.84)
Equal non-trivial interpolants along paths:          107465 (count: 8183, min: 0, max: 127, avg: 13.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8183
Number of successful refinements:     8183
Number of failed refinements:         0
Max. size of reached set before ref.: 26127
Max. size of reached set after ref.:  25004
Avg. size of reached set before ref.: 11021.98
Avg. size of reached set after ref.:  10600.70

Total time for CEGAR algorithm:     894.879s
Time for refinements:               548.004s
Average time for refinement:          0.066s
Max time for refinement:              0.578s

Code Coverage
-----------------------------
  Function coverage:      0.514
  Visited lines:          1693
  Total lines:            2074
  Line coverage:          0.816
  Visited conditions:     406
  Total conditions:       540
  Condition coverage:     0.752

CPAchecker general statistics
-----------------------------
Number of program locations:     2908
Number of CFA edges:             3269
Number of relevant variables:    329
Number of functions:             140
Number of loops:                 11
Size of reached set:             17399
  Number of reached locations:   1128 (39%)
    Avg states per location:     15
    Max states per location:     135 (at node N1168)
  Number of reached functions:   72 (51%)
  Number of partitions:          17141
    Avg size of partitions:      1
    Max size of partitions:      23 (with key [N1363 (before line 5052), Function main called from node N1308, stack depth 1 [6719a5b8], stack [main]])
  Number of target states:       0
  Size of final wait list        24

Time for analysis setup:          5.384s
  Time for loading CPAs:          1.002s
  Time for loading parser:        0.718s
  Time for CFA construction:      3.548s
    Time for parsing file(s):     1.026s
    Time for AST to CFA:          1.248s
    Time for CFA sanity check:    0.254s
    Time for post-processing:     0.848s
      Time for var class.:        0.360s
Time for Analysis:              894.880s
CPU time for analysis:          894.780s
Total time for CPAchecker:      900.270s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              0.287s

Time for Garbage Collector:      20.928s (in 1497 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                312MB (   297 MiB) max;    164MB (   157 MiB) avg;    318MB (   303 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           332MB (   317 MiB) max;    240MB (   229 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8355MB (  7968 MiB) max;   8220MB (  7839 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
