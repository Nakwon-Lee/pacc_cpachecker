scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--char--lp.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cwg5kad0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3420: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3423: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3426: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3451: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& cpu_tss.x86_tss.sp0)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3454: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& cpu_tss.x86_tss.sp0)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3457: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& cpu_tss.x86_tss.sp0)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& cpu_tss.x86_tss.sp0));
  goto ldv_5374;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& cpu_tss.x86_tss.sp0));
  goto ldv_5374;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& cpu_tss.x86_tss.sp0));
  goto ldv_5374;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& cpu_tss.x86_tss.sp0));
  goto ldv_5374;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5371: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5395: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5419: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5463: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3947: Function pointer *((lp_table[minor]).dev->port->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4488: Function pointer *((lp_table[minor]).dev->port->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4337: Function pointer *((lp_table[minor]).dev->port->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 3891-3892: Function pointer *((lp_table[minor]).dev->port->ops->write_control) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 3894-3895: Function pointer *((lp_table[minor]).dev->port->ops->write_control) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3896: Function pointer *((lp_table[minor]).dev->port->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5026: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5030: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5034: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_init_zalloc(88UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_close_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_open_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_claim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_set_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_negotiate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_console to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memchr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_console to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_claim_or_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 3891-3892: Ignoring function call through function pointer *((lp_table[minor]).dev->port->ops->write_control): (*((lp_table[minor]).dev->port->ops->write_control))((lp_table[minor]).dev->port, 8); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 3894-3895: Ignoring function call through function pointer *((lp_table[minor]).dev->port->ops->write_control): (*((lp_table[minor]).dev->port->ops->write_control))((lp_table[minor]).dev->port, 12); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __parport_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3746: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __might_fault to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3765: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size(from, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function compat_get_timeval to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_from_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4337: Ignoring function call through function pointer *((lp_table[minor]).dev->port->ops->read_status): tmp___1 = (*((lp_table[minor]).dev->port->ops->read_status))((lp_table[minor]).dev->port); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3947: Ignoring function call through function pointer *((lp_table[minor]).dev->port->ops->read_status): tmp = (*((lp_table[minor]).dev->port->ops->read_status))((lp_table[minor]).dev->port); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ___might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _cond_resched to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4488: Ignoring function call through function pointer *((lp_table[minor]).dev->port->ops->read_status): tmp___1 = (*((lp_table[minor]).dev->port->ops->read_status))((lp_table[minor]).dev->port); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            908649 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  747567 (82%)
  Because of loop head:            157418 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3664 (0%)
  Times precision was empty:       185022 (20%)
  Times precision was {false}:     2982 (0%)
  Times result was cached:         669572 (74%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      51073 (6%)
  Times result was 'false':        93407 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         1679267
  BDD entailment checks:           771187
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          49
Number of abstraction locations:          201
Max number of predicates per location:    20
Avg number of predicates per location:    8
Total predicates per abstraction:         5834456
Max number of predicates per abstraction: 21
Avg number of predicates per abstraction: 107.94
Number of irrelevant predicates:          1628905 (28%)
Number of preds handled by boolean abs:   395991 (7%)
  Total number of models for allsat:      120997
  Max number of models for allsat:        210
  Avg number of models for allsat:        2.37

Time for post operator:                 87.344s
  Time for path formula creation:       84.836s
Time for strengthen operator:            4.773s
Time for prec operator:                410.816s
  Time for abstraction:                397.900s (Max:     1.194s, Count: 908649)
    Boolean abstraction:               109.770s
    Solving time:                       73.550s (Max:     0.094s)
    Model enumeration time:             27.258s
    Time for BDD construction:           3.357s (Max:     0.040s)
Time for merge operator:                 8.817s
Time for coverage check:                 1.194s
  Time for BDD entailment checks:        1.003s
Total time for SMT solver (w/o itp):   100.808s

Number of path formula cache hits:   5621333 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    60.203s

Total number of created targets for pointer analysis: 386579
   Number of created targets for uf: *signed_int is 10233
   Number of created targets for uf: *(char)* is 65659
   Number of created targets for uf: *unsigned_int is 1517
   Number of created targets for uf: *(struct_pardevice)* is 39384
   Number of created targets for uf: *unsigned_long_int is 4577


Number of BDD nodes:                               71739
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      156760 (count: 1313298, min: 0, max: 3722, avg: 0.12)
Time for BDD node cleanup:                             0.204s
Time for BDD garbage collection:                       0.037s (in 1 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.771s
  Time for transition matches:                         4.248s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.038s
Automaton transfers with branching:                0
Automaton transfer successors:                      5939499 (count: 5939499, min: 1, max: 1, avg: 1.00) [1 x 5939499]

CPA algorithm statistics
------------------------
Number of iterations:            3911883
Max size of waitlist:            609
Average size of waitlist:        173
Number of computed successors:   4673233
Max successors for one state:    2
Number of times merged:          454040
Number of times stopped:         593440
Number of times breaked:         3664

Total time for CPA algorithm:       622.350s (Max:    11.800s)
  Time for choose from waitlist:      1.613s
  Time for precision adjustment:    442.465s
  Time for transfer relation:       139.633s
  Time for merge operator:           14.532s
  Time for stop operator:             6.888s
  Time for adding to reached set:     6.189s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3664
Avg. length of target path (in blocks):              320626 (count: 3664, min: 37, max: 235, avg: 87.51)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 201.302s
  Counterexample analysis:                           189.677s (Max:     0.247s, Calls: 3664)
    Refinement sat check:                            133.807s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.156s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.513s
  Precision update:                                    2.952s
  ARG update:                                          6.360s

Length of refined path (in blocks):                  307880 (count: 3664, min: 32, max: 230, avg: 84.03)
Number of affected states:                            44701 (count: 3664, min: 1, max: 164, avg: 12.20)
Length (states) of path with itp 'true':             259515 (count: 3664, min: 0, max: 213, avg: 70.83)
Length (states) of path with itp non-trivial itp:     44701 (count: 3664, min: 1, max: 164, avg: 12.20)
Length (states) of path with itp 'false':              3664 (count: 3664, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         614 (count: 3664, min: 0, max: 7, avg: 0.17)
Equal non-trivial interpolants along paths:           40423 (count: 3664, min: 0, max: 163, avg: 11.03)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3664
Number of successful refinements:     3664
Number of failed refinements:         0
Max. size of reached set before ref.: 39435
Max. size of reached set after ref.:  39131
Avg. size of reached set before ref.: 13482.73
Avg. size of reached set after ref.:  12399.61

Total time for CEGAR algorithm:     894.927s
Time for refinements:               242.880s
Average time for refinement:          0.066s
Max time for refinement:              0.356s

Code Coverage
-----------------------------
  Function coverage:      0.414
  Visited lines:          1475
  Total lines:            2074
  Line coverage:          0.711
  Visited conditions:     312
  Total conditions:       540
  Condition coverage:     0.578

CPAchecker general statistics
-----------------------------
Number of program locations:     2908
Number of CFA edges:             3269
Number of relevant variables:    329
Number of functions:             140
Number of loops:                 11
Size of reached set:             17831
  Number of reached locations:   871 (30%)
    Avg states per location:     20
    Max states per location:     170 (at node N141)
  Number of reached functions:   58 (41%)
  Number of partitions:          17635
    Avg size of partitions:      1
    Max size of partitions:      35 (with key [N1363 (before line 5052), Function main called from node N1308, stack depth 1 [6719a5b8], stack [main]])
  Number of target states:       0
  Size of final wait list        271

Time for analysis setup:          5.355s
  Time for loading CPAs:          1.044s
  Time for loading parser:        0.720s
  Time for CFA construction:      3.421s
    Time for parsing file(s):     0.946s
    Time for AST to CFA:          1.232s
    Time for CFA sanity check:    0.227s
    Time for post-processing:     0.845s
      Time for var class.:        0.392s
Time for Analysis:              894.927s
CPU time for analysis:          894.820s
Total time for CPAchecker:      900.288s
Total CPU time for CPAchecker:  900.170s
Time for statistics:              0.401s

Time for Garbage Collector:      35.598s (in 1021 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                800MB (   763 MiB) max;    391MB (   373 MiB) avg;    834MB (   796 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     41MB (    40 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:          1011MB (   964 MiB) max;    604MB (   576 MiB) avg
Allocated non-heap memory:        49MB (    47 MiB) max;     49MB (    47 MiB) avg
Total process virtual memory:   9579MB (  9135 MiB) max;   8796MB (  8389 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
