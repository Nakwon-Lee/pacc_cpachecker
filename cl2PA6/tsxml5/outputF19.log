scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--firewire--firewire-ohci.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5fpq42et/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 9721: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6137: Function pointer *(packet->callback) with type void (*)(struct fw_packet *, struct fw_card *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4237: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4170-4171: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4422: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4300: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4333: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4367: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4401-4402: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4267: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4204: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7526-7527: Function pointer *(ctx->base.callback.mc) with type void (*)(struct fw_iso_context *, dma_addr_t , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7375-7376: Function pointer *(ctx->base.callback.sc) with type void (*)(struct fw_iso_context *, u32 , size_t , void *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5975: Function pointer *(packet->callback) with type void (*)(struct fw_packet *, struct fw_card *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7509-7510: Function pointer *(ctx->base.callback.mc) with type void (*)(struct fw_iso_context *, dma_addr_t , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6111: Function pointer *(packet->callback) with type void (*)(struct fw_packet *, struct fw_card *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6083: Function pointer *(packet->callback) with type void (*)(struct fw_packet *, struct fw_card *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7176: Function pointer *(packet->callback) with type void (*)(struct fw_packet *, struct fw_card *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9201: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_alloc_attrs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_card_initialize to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 4401-4402: Ignoring function call through function pointer *(ops->sync_single_for_device): (*(ops->sync_single_for_device))(dev, addr + ((unsigned long long)offset), size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_range_for_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_notice to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __get_free_pages to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6083: Ignoring function call through function pointer *(packet->callback): (*(packet->callback))(packet, &(ctx->ohci->card), packet->ack); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function fw_core_handle_response to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_core_handle_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6111: Ignoring function call through function pointer *(packet->callback): (*(packet->callback))(packet, &(ctx->ohci->card), packet->ack); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_fill_response to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5544: Ignoring function call through function pointer *(ctx->callback): tmp = (*(ctx->callback))(ctx, d, last); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 7375-7376: Ignoring function call through function pointer *(ctx->base.callback.sc): (*(ctx->base.callback.sc))(&(ctx->base), __CPAchecker_TMP_0, ctx->header_length, ctx->header, ctx->base.callback_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4367: Ignoring function call through function pointer *(ops->sync_single_for_cpu): (*(ops->sync_single_for_cpu))(dev, addr + ((unsigned long long)offset), size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_range_for_cpu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5975: Ignoring function call through function pointer *(packet->callback): (*(packet->callback))(packet, &(ohci->card), packet->ack); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4204: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 7509-7510: Ignoring function call through function pointer *(ctx->base.callback.mc): (*(ctx->base.callback.mc))(&(ctx->base), (dma_addr_t )(buffer_dma + completed), ctx->base.callback_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_free_attrs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_core_handle_bus_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_choose_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6137: Ignoring function call through function pointer *(packet->callback): (*(packet->callback))(packet, &(ctx->ohci->card), packet->ack); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_core_remove_card to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_pages to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2205509 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1974857 (90%)
  Because of loop head:            224960 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5692 (0%)
  Times precision was empty:       455976 (21%)
  Times precision was {false}:     2108 (0%)
  Times result was cached:         1740300 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7125 (0%)
  Times result was 'false':        43039 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         2025393
  BDD entailment checks:           432277
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       85
Number of predicates discovered:          10
Number of abstraction locations:          271
Max number of predicates per location:    8
Avg number of predicates per location:    4
Total predicates per abstraction:         8155676
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 883.32
Number of irrelevant predicates:          3510615 (43%)
Number of preds handled by boolean abs:   19639 (0%)
  Total number of models for allsat:      7166
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.01

Time for post operator:                 62.014s
  Time for path formula creation:       56.325s
Time for strengthen operator:           10.416s
Time for prec operator:                311.224s
  Time for abstraction:                287.932s (Max:     0.903s, Count: 2205509)
    Boolean abstraction:                 5.664s
    Solving time:                        5.399s (Max:     0.015s)
    Model enumeration time:              0.526s
    Time for BDD construction:           0.198s (Max:     0.012s)
Time for merge operator:                 5.621s
Time for coverage check:                 0.700s
  Time for BDD entailment checks:        0.442s
Total time for SMT solver (w/o itp):     5.925s

Number of path formula cache hits:   14807002 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    15.493s

Total number of created targets for pointer analysis: 3540
   Number of created targets for uf: *unsigned_short_int is 3
   Number of created targets for uf: *(void)* is 3
   Number of created targets for uf: *signed_int is 103
   Number of created targets for uf: *(struct_list_head)* is 3
   Number of created targets for uf: *_Bool is 7
   Number of created targets for uf: *unsigned_long_long_int is 2
   Number of created targets for uf: *unsigned_int is 14
   Number of created targets for uf: *unsigned_long_int is 4


Number of BDD nodes:                               618
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       14959 (count: 950276, min: 0, max: 554, avg: 0.02)
Time for BDD node cleanup:                             0.155s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 15.028s
  Time for transition matches:                         8.360s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.025s
Automaton transfers with branching:                0
Automaton transfer successors:                     12203757 (count: 12203757, min: 1, max: 1, avg: 1.00) [1 x 12203757]

CPA algorithm statistics
------------------------
Number of iterations:            8077971
Max size of waitlist:            608
Average size of waitlist:        316
Number of computed successors:   9409592
Max successors for one state:    2
Number of times merged:          796558
Number of times stopped:         1129310
Number of times breaked:         5692

Total time for CPA algorithm:       591.825s (Max:    10.916s)
  Time for choose from waitlist:      2.791s
  Time for precision adjustment:    368.203s
  Time for transfer relation:       167.547s
  Time for merge operator:           13.665s
  Time for stop operator:             9.207s
  Time for adding to reached set:    10.369s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5692
Avg. length of target path (in blocks):              722872 (count: 5692, min: 58, max: 240, avg: 127.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 161.994s
  Counterexample analysis:                           140.902s (Max:     0.190s, Calls: 5692)
    Refinement sat check:                             69.514s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.313s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.710s
  Precision update:                                    2.576s
  ARG update:                                         15.010s

Length of refined path (in blocks):                  716078 (count: 5692, min: 54, max: 219, avg: 125.80)
Number of affected states:                           100882 (count: 5692, min: 3, max: 218, avg: 17.72)
Length (states) of path with itp 'true':             609504 (count: 5692, min: 0, max: 150, avg: 107.08)
Length (states) of path with itp non-trivial itp:    100882 (count: 5692, min: 3, max: 218, avg: 17.72)
Length (states) of path with itp 'false':              5692 (count: 5692, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5692, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           95190 (count: 5692, min: 2, max: 217, avg: 16.72)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5692
Number of successful refinements:     5692
Number of failed refinements:         0
Max. size of reached set before ref.: 165589
Max. size of reached set after ref.:  163620
Avg. size of reached set before ref.: 17583.75
Avg. size of reached set after ref.:  16162.77

Total time for CEGAR algorithm:     893.757s
Time for refinements:               240.093s
Average time for refinement:          0.042s
Max time for refinement:              1.166s

Code Coverage
-----------------------------
  Function coverage:      0.522
  Visited lines:          2663
  Total lines:            4396
  Line coverage:          0.606
  Visited conditions:     788
  Total conditions:       1382
  Condition coverage:     0.570

CPAchecker general statistics
-----------------------------
Number of program locations:     6314
Number of CFA edges:             7402
Number of relevant variables:    971
Number of functions:             249
Number of loops:                 51
Size of reached set:             149029
  Number of reached locations:   2013 (32%)
    Avg states per location:     74
    Max states per location:     1509 (at node N147)
  Number of reached functions:   130 (52%)
  Number of partitions:          148733
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N4818 (before line 9231), Function main called from node N4742, stack depth 1 [2da99821], stack [main]])
  Number of target states:       0
  Size of final wait list        491

Time for analysis setup:          6.592s
  Time for loading CPAs:          0.988s
  Time for loading parser:        0.667s
  Time for CFA construction:      4.795s
    Time for parsing file(s):     1.183s
    Time for AST to CFA:          1.645s
    Time for CFA sanity check:    0.478s
    Time for post-processing:     1.301s
      Time for var class.:        0.614s
Time for Analysis:              893.757s
CPU time for analysis:          893.710s
Total time for CPAchecker:      900.365s
Total CPU time for CPAchecker:  900.300s
Time for statistics:              1.535s

Time for Garbage Collector:      68.059s (in 2164 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                541MB (   516 MiB) max;    241MB (   230 MiB) avg;    556MB (   530 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           554MB (   529 MiB) max;    360MB (   343 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8220MB (  7839 MiB) max;   8149MB (  7771 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
