scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--firewire--firewire-ohci.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xdqxzfds/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 9721: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6137: Function pointer *(packet->callback) with type void (*)(struct fw_packet *, struct fw_card *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4237: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4170-4171: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4422: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4300: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4333: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4367: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4401-4402: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4267: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4204: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7526-7527: Function pointer *(ctx->base.callback.mc) with type void (*)(struct fw_iso_context *, dma_addr_t , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7375-7376: Function pointer *(ctx->base.callback.sc) with type void (*)(struct fw_iso_context *, u32 , size_t , void *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5975: Function pointer *(packet->callback) with type void (*)(struct fw_packet *, struct fw_card *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7509-7510: Function pointer *(ctx->base.callback.mc) with type void (*)(struct fw_iso_context *, dma_addr_t , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6111: Function pointer *(packet->callback) with type void (*)(struct fw_packet *, struct fw_card *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6083: Function pointer *(packet->callback) with type void (*)(struct fw_packet *, struct fw_card *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7176: Function pointer *(packet->callback) with type void (*)(struct fw_packet *, struct fw_card *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9201: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_alloc_attrs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_card_initialize to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 4401-4402: Ignoring function call through function pointer *(ops->sync_single_for_device): (*(ops->sync_single_for_device))(dev, addr + ((unsigned long long)offset), size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_range_for_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_notice to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __get_free_pages to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6083: Ignoring function call through function pointer *(packet->callback): (*(packet->callback))(packet, &(ctx->ohci->card), packet->ack); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function fw_core_handle_response to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_core_handle_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6111: Ignoring function call through function pointer *(packet->callback): (*(packet->callback))(packet, &(ctx->ohci->card), packet->ack); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            52682 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  48770 (93%)
  Because of loop head:            3876 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36 (0%)
  Times precision was empty:       47110 (89%)
  Times precision was {false}:     168 (0%)
  Times result was cached:         5087 (10%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      317 (1%)
  Times result was 'false':        471 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         39025
  BDD entailment checks:           6939
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       85
Number of predicates discovered:          7
Number of abstraction locations:          57
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         20242
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 41.74
Number of irrelevant predicates:          9235 (46%)
Number of preds handled by boolean abs:   837 (4%)
  Total number of models for allsat:      352
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.11

Time for post operator:                  5.420s
  Time for path formula creation:        5.038s
Time for strengthen operator:            0.425s
Time for prec operator:                  4.865s
  Time for abstraction:                  3.716s (Max:     0.037s, Count: 52682)
    Boolean abstraction:                 0.643s
    Solving time:                        0.479s (Max:     0.027s)
    Model enumeration time:              0.094s
    Time for BDD construction:           0.082s (Max:     0.012s)
Time for merge operator:                 0.377s
Time for coverage check:                 0.045s
  Time for BDD entailment checks:        0.039s
Total time for SMT solver (w/o itp):     0.578s

Number of path formula cache hits:   367012 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.521s

Total number of created targets for pointer analysis: 244
   Number of created targets for uf: *unsigned_short_int is 3
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *unsigned_long_long_int is 2
   Number of created targets for uf: *unsigned_int is 5


Number of BDD nodes:                               333
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         722 (count: 56861, min: 0, max: 185, avg: 0.01)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.007s
  Time for transition matches:                         0.496s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       323106 (count: 323106, min: 1, max: 1, avg: 1.00) [1 x 323106]

CPA algorithm statistics
------------------------
Number of iterations:            178131
Max size of waitlist:            453
Average size of waitlist:        197
Number of computed successors:   209423
Max successors for one state:    2
Number of times merged:          16043
Number of times stopped:         20279
Number of times breaked:         36

Total time for CPA algorithm:        21.585s (Max:     1.775s)
  Time for choose from waitlist:      0.311s
  Time for precision adjustment:      7.114s
  Time for transfer relation:        10.876s
  Time for merge operator:            0.857s
  Time for stop operator:             0.471s
  Time for adding to reached set:     0.640s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                2232 (count: 36, min: 58, max: 64, avg: 62.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.627s
  Counterexample analysis:                             0.763s (Max:     0.048s, Calls: 36)
    Refinement sat check:                              0.472s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.060s
  Precision update:                                    0.036s
  ARG update:                                          0.679s

Length of refined path (in blocks):                    2123 (count: 36, min: 54, max: 63, avg: 58.97)
Number of affected states:                             1537 (count: 36, min: 3, max: 62, avg: 42.69)
Length (states) of path with itp 'true':                550 (count: 36, min: 0, max: 50, avg: 15.28)
Length (states) of path with itp non-trivial itp:      1537 (count: 36, min: 3, max: 62, avg: 42.69)
Length (states) of path with itp 'false':                36 (count: 36, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 36, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1501 (count: 36, min: 2, max: 61, avg: 41.69)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     36
Number of failed refinements:         0
Max. size of reached set before ref.: 7739
Max. size of reached set after ref.:  122
Avg. size of reached set before ref.: 5258.61
Avg. size of reached set after ref.:  39.36

Total time for CEGAR algorithm:      23.482s
Time for refinements:                 1.895s
Average time for refinement:          0.052s
Max time for refinement:              0.139s

Code Coverage
-----------------------------
  Function coverage:      0.201
  Visited lines:          1233
  Total lines:            4396
  Line coverage:          0.280
  Visited conditions:     222
  Total conditions:       1382
  Condition coverage:     0.161

CPAchecker general statistics
-----------------------------
Number of program locations:     6314
Number of CFA edges:             7402
Number of relevant variables:    971
Number of functions:             249
Number of loops:                 51
Size of reached set:             780
  Number of reached locations:   490 (8%)
    Avg states per location:     1
    Max states per location:     19 (at node N117)
  Number of reached functions:   50 (20%)
  Number of partitions:          780
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        40

Time for analysis setup:          6.787s
  Time for loading CPAs:          1.066s
  Time for loading parser:        0.652s
  Time for CFA construction:      4.954s
    Time for parsing file(s):     1.207s
    Time for AST to CFA:          1.713s
    Time for CFA sanity check:    0.487s
    Time for post-processing:     1.358s
      Time for var class.:        0.650s
Time for Analysis:               23.482s
CPU time for analysis:           23.480s
Total time for CPAchecker:       30.273s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.102s

Time for Garbage Collector:       0.923s (in 75 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 89MB (    85 MiB) max;     54MB (    51 MiB) avg;     95MB (    90 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
