scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--firewire--firewire-ohci.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wrriggwb/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 9721: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6137: Function pointer *(packet->callback) with type void (*)(struct fw_packet *, struct fw_card *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4237: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4170-4171: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4422: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4300: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4333: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4367: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4401-4402: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4267: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4204: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7526-7527: Function pointer *(ctx->base.callback.mc) with type void (*)(struct fw_iso_context *, dma_addr_t , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7375-7376: Function pointer *(ctx->base.callback.sc) with type void (*)(struct fw_iso_context *, u32 , size_t , void *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5975: Function pointer *(packet->callback) with type void (*)(struct fw_packet *, struct fw_card *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7509-7510: Function pointer *(ctx->base.callback.mc) with type void (*)(struct fw_iso_context *, dma_addr_t , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6111: Function pointer *(packet->callback) with type void (*)(struct fw_packet *, struct fw_card *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6083: Function pointer *(packet->callback) with type void (*)(struct fw_packet *, struct fw_card *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7176: Function pointer *(packet->callback) with type void (*)(struct fw_packet *, struct fw_card *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9201: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __get_free_pages to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6083: Ignoring function call through function pointer *(packet->callback): (*(packet->callback))(packet, &(ctx->ohci->card), packet->ack); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function fw_core_handle_response to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_core_handle_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6111: Ignoring function call through function pointer *(packet->callback): (*(packet->callback))(packet, &(ctx->ohci->card), packet->ack); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dma_free_attrs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_pages to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_alloc_attrs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_notice to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __printk_ratelimit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_seconds to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_core_handle_bus_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5544: Ignoring function call through function pointer *(ctx->callback): tmp = (*(ctx->callback))(ctx, d, last); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4367: Ignoring function call through function pointer *(ops->sync_single_for_cpu): (*(ops->sync_single_for_cpu))(dev, addr + ((unsigned long long)offset), size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_range_for_cpu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 7375-7376: Ignoring function call through function pointer *(ctx->base.callback.sc): (*(ctx->base.callback.sc))(&(ctx->base), __CPAchecker_TMP_0, ctx->header_length, ctx->header, ctx->base.callback_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5975: Ignoring function call through function pointer *(packet->callback): (*(packet->callback))(packet, &(ohci->card), packet->ack); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4204: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 7509-7510: Ignoring function call through function pointer *(ctx->base.callback.mc): (*(ctx->base.callback.mc))(&(ctx->base), (dma_addr_t )(buffer_dma + completed), ctx->base.callback_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1337739 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1212082 (91%)
  Because of loop head:            118079 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7578 (1%)
  Times precision was empty:       33801 (3%)
  Times precision was {false}:     661 (0%)
  Times result was cached:         1298179 (97%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5098 (0%)
  Times result was 'false':        40292 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         753199
  BDD entailment checks:           195893
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       85
Number of predicates discovered:          8
Number of abstraction locations:          321
Max number of predicates per location:    8
Avg number of predicates per location:    5
Total predicates per abstraction:         6732939
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 1169.12
Number of irrelevant predicates:          441745 (7%)
Number of preds handled by boolean abs:   16476 (0%)
  Total number of models for allsat:      5097
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                 27.745s
  Time for path formula creation:       25.420s
Time for strengthen operator:            4.552s
Time for prec operator:                276.585s
  Time for abstraction:                262.428s (Max:     0.235s, Count: 1337739)
    Boolean abstraction:                 3.471s
    Solving time:                        2.783s (Max:     0.014s)
    Model enumeration time:              0.302s
    Time for BDD construction:           0.211s (Max:     0.012s)
Time for merge operator:                 2.194s
Time for coverage check:                 0.449s
  Time for BDD entailment checks:        0.329s
Total time for SMT solver (w/o itp):     3.085s

Number of path formula cache hits:   7295691 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.355s

Total number of created targets for pointer analysis: 669
   Number of created targets for uf: *unsigned_short_int is 5
   Number of created targets for uf: *signed_int is 8
   Number of created targets for uf: *unsigned_long_long_int is 2
   Number of created targets for uf: *unsigned_int is 3


Number of BDD nodes:                               297
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       10478 (count: 266292, min: 0, max: 176, avg: 0.04)
Time for BDD node cleanup:                             0.091s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.393s
  Time for transition matches:                         4.543s
  Time for transition assertions:                      0.007s
  Time for transition actions:                         0.031s
Automaton transfers with branching:                0
Automaton transfer successors:                      5804890 (count: 5804890, min: 1, max: 1, avg: 1.00) [1 x 5804890]

CPA algorithm statistics
------------------------
Number of iterations:            4287920
Max size of waitlist:            76
Average size of waitlist:        29
Number of computed successors:   4826257
Max successors for one state:    2
Number of times merged:          278653
Number of times stopped:         462428
Number of times breaked:         7578

Total time for CPA algorithm:       422.153s (Max:     1.300s)
  Time for choose from waitlist:      2.013s
  Time for precision adjustment:    304.978s
  Time for transfer relation:        85.972s
  Time for merge operator:            5.722s
  Time for stop operator:             5.369s
  Time for adding to reached set:     7.398s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7578
Avg. length of target path (in blocks):             1037778 (count: 7578, min: 64, max: 264, avg: 136.95)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 221.930s
  Counterexample analysis:                           201.552s (Max:     0.116s, Calls: 7578)
    Refinement sat check:                             95.758s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.421s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.443s
  Precision update:                                    8.281s
  ARG update:                                          6.976s

Length of refined path (in blocks):                 1027860 (count: 7578, min: 54, max: 243, avg: 135.64)
Number of affected states:                           203801 (count: 7578, min: 3, max: 242, avg: 26.89)
Length (states) of path with itp 'true':             816481 (count: 7578, min: 0, max: 127, avg: 107.74)
Length (states) of path with itp non-trivial itp:    203801 (count: 7578, min: 3, max: 242, avg: 26.89)
Length (states) of path with itp 'false':              7578 (count: 7578, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 7578, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          196223 (count: 7578, min: 2, max: 241, avg: 25.89)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7578
Number of successful refinements:     7578
Number of failed refinements:         0
Max. size of reached set before ref.: 64811
Max. size of reached set after ref.:  64006
Avg. size of reached set before ref.: 22322.33
Avg. size of reached set after ref.:  21755.94

Total time for CEGAR algorithm:     892.966s
Time for refinements:               358.221s
Average time for refinement:          0.047s
Max time for refinement:              0.296s

Code Coverage
-----------------------------
  Function coverage:      0.365
  Visited lines:          1943
  Total lines:            4396
  Line coverage:          0.442
  Visited conditions:     590
  Total conditions:       1382
  Condition coverage:     0.427

CPAchecker general statistics
-----------------------------
Number of program locations:     6314
Number of CFA edges:             7402
Number of relevant variables:    971
Number of functions:             249
Number of loops:                 51
Size of reached set:             31404
  Number of reached locations:   1478 (23%)
    Avg states per location:     21
    Max states per location:     339 (at node N146)
  Number of reached functions:   91 (37%)
  Number of partitions:          31404
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        24

Time for analysis setup:          7.267s
  Time for loading CPAs:          1.185s
  Time for loading parser:        0.767s
  Time for CFA construction:      5.197s
    Time for parsing file(s):     1.150s
    Time for AST to CFA:          1.797s
    Time for CFA sanity check:    0.492s
    Time for post-processing:     1.481s
      Time for var class.:        0.703s
Time for Analysis:              892.966s
CPU time for analysis:          892.890s
Total time for CPAchecker:      900.238s
Total CPU time for CPAchecker:  900.140s
Time for statistics:              0.560s

Time for Garbage Collector:      32.352s (in 3435 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                236MB (   225 MiB) max;    115MB (   110 MiB) avg;    241MB (   229 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           242MB (   231 MiB) max;    173MB (   165 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8151MB (  7773 MiB) max;   8130MB (  7754 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
