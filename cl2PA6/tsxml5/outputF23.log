scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--firewire--firewire-ohci.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__232xyip/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 9721: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6137: Function pointer *(packet->callback) with type void (*)(struct fw_packet *, struct fw_card *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4237: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4170-4171: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4422: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4300: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4333: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4367: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4401-4402: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4267: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4204: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7526-7527: Function pointer *(ctx->base.callback.mc) with type void (*)(struct fw_iso_context *, dma_addr_t , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7375-7376: Function pointer *(ctx->base.callback.sc) with type void (*)(struct fw_iso_context *, u32 , size_t , void *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5975: Function pointer *(packet->callback) with type void (*)(struct fw_packet *, struct fw_card *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7509-7510: Function pointer *(ctx->base.callback.mc) with type void (*)(struct fw_iso_context *, dma_addr_t , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6111: Function pointer *(packet->callback) with type void (*)(struct fw_packet *, struct fw_card *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6083: Function pointer *(packet->callback) with type void (*)(struct fw_packet *, struct fw_card *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7176: Function pointer *(packet->callback) with type void (*)(struct fw_packet *, struct fw_card *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9201: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_alloc_attrs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __get_free_pages to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_pages to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6137: Ignoring function call through function pointer *(packet->callback): (*(packet->callback))(packet, &(ctx->ohci->card), packet->ack); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4204: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 4170-4171: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)0L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_mapping_error to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4422: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 4401-4402: Ignoring function call through function pointer *(ops->sync_single_for_device): (*(ops->sync_single_for_device))(dev, addr + ((unsigned long long)offset), size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_range_for_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7176: Ignoring function call through function pointer *(packet->callback): (*(packet->callback))(packet, &(ohci->card), packet->ack); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_notice to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6083: Ignoring function call through function pointer *(packet->callback): (*(packet->callback))(packet, &(ctx->ohci->card), packet->ack); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function fw_core_handle_response to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_core_handle_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6111: Ignoring function call through function pointer *(packet->callback): (*(packet->callback))(packet, &(ctx->ohci->card), packet->ack); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function fw_fill_response to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5544: Ignoring function call through function pointer *(ctx->callback): tmp = (*(ctx->callback))(ctx, d, last); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 7375-7376: Ignoring function call through function pointer *(ctx->base.callback.sc): (*(ctx->base.callback.sc))(&(ctx->base), __CPAchecker_TMP_0, ctx->header_length, ctx->header, ctx->base.callback_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4367: Ignoring function call through function pointer *(ops->sync_single_for_cpu): (*(ops->sync_single_for_cpu))(dev, addr + ((unsigned long long)offset), size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_range_for_cpu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5975: Ignoring function call through function pointer *(packet->callback): (*(packet->callback))(packet, &(ohci->card), packet->ack); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 7509-7510: Ignoring function call through function pointer *(ctx->base.callback.mc): (*(ctx->base.callback.mc))(&(ctx->base), (dma_addr_t )(buffer_dma + completed), ctx->base.callback_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            660508 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  605009 (92%)
  Because of loop head:            45826 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9673 (1%)
  Times precision was empty:       295365 (45%)
  Times precision was {false}:     1082 (0%)
  Times result was cached:         362240 (55%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1821 (0%)
  Times result was 'false':        14856 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         406847
  BDD entailment checks:           83663
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       85
Number of predicates discovered:          11
Number of abstraction locations:          166
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         696990
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 240.09
Number of irrelevant predicates:          315720 (45%)
Number of preds handled by boolean abs:   5531 (1%)
  Total number of models for allsat:      1899
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.04

Time for post operator:                 23.948s
  Time for path formula creation:       22.345s
Time for strengthen operator:            2.656s
Time for prec operator:                 43.119s
  Time for abstraction:                 35.564s (Max:     0.039s, Count: 660508)
    Boolean abstraction:                 2.145s
    Solving time:                        1.895s (Max:     0.019s)
    Model enumeration time:              0.335s
    Time for BDD construction:           0.168s (Max:     0.008s)
Time for merge operator:                 1.633s
Time for coverage check:                 0.183s
  Time for BDD entailment checks:        0.137s
Total time for SMT solver (w/o itp):     2.230s

Number of path formula cache hits:   4045409 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.039s

Total number of created targets for pointer analysis: 2531
   Number of created targets for uf: *unsigned_short_int is 9
   Number of created targets for uf: *(void)* is 9
   Number of created targets for uf: *signed_int is 18
   Number of created targets for uf: *(struct_list_head)* is 6
   Number of created targets for uf: *_Bool is 5
   Number of created targets for uf: *unsigned_long_long_int is 2
   Number of created targets for uf: *unsigned_int is 19
   Number of created targets for uf: *unsigned_long_int is 13


Number of BDD nodes:                               492
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4090 (count: 396369, min: 0, max: 225, avg: 0.01)
Time for BDD node cleanup:                             0.067s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.116s
  Time for transition matches:                         2.662s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.041s
Automaton transfers with branching:                0
Automaton transfer successors:                      3400864 (count: 3400864, min: 1, max: 1, avg: 1.00) [1 x 3400864]

CPA algorithm statistics
------------------------
Number of iterations:            2182314
Max size of waitlist:            688
Average size of waitlist:        317
Number of computed successors:   2497422
Max successors for one state:    2
Number of times merged:          161592
Number of times stopped:         217636
Number of times breaked:         9673

Total time for CPA algorithm:       137.641s (Max:     4.239s)
  Time for choose from waitlist:      1.263s
  Time for precision adjustment:     59.365s
  Time for transfer relation:        58.666s
  Time for merge operator:            3.850s
  Time for stop operator:             3.064s
  Time for adding to reached set:     4.308s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9673
Avg. length of target path (in blocks):             1268718 (count: 9673, min: 58, max: 163, avg: 131.16)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 275.176s
  Counterexample analysis:                           261.227s (Max:     0.081s, Calls: 9673)
    Refinement sat check:                            129.284s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.596s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.013s
  Precision update:                                    4.279s
  ARG update:                                          4.318s

Length of refined path (in blocks):                 1258376 (count: 9673, min: 54, max: 162, avg: 130.09)
Number of affected states:                           128931 (count: 9673, min: 3, max: 98, avg: 13.33)
Length (states) of path with itp 'true':            1119772 (count: 9673, min: 0, max: 147, avg: 115.76)
Length (states) of path with itp non-trivial itp:    128931 (count: 9673, min: 3, max: 98, avg: 13.33)
Length (states) of path with itp 'false':              9673 (count: 9673, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 9673, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          119258 (count: 9673, min: 2, max: 97, avg: 12.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9673
Number of successful refinements:     9673
Number of failed refinements:         0
Max. size of reached set before ref.: 134897
Max. size of reached set after ref.:  62210
Avg. size of reached set before ref.: 32875.41
Avg. size of reached set after ref.:  32644.40

Total time for CEGAR algorithm:     893.253s
Time for refinements:               520.622s
Average time for refinement:          0.053s
Max time for refinement:              0.415s

Code Coverage
-----------------------------
  Function coverage:      0.458
  Visited lines:          2414
  Total lines:            4396
  Line coverage:          0.549
  Visited conditions:     672
  Total conditions:       1382
  Condition coverage:     0.486

CPAchecker general statistics
-----------------------------
Number of program locations:     6314
Number of CFA edges:             7402
Number of relevant variables:    971
Number of functions:             249
Number of loops:                 51
Size of reached set:             30414
  Number of reached locations:   1671 (26%)
    Avg states per location:     18
    Max states per location:     619 (at node N185)
  Number of reached functions:   114 (46%)
  Number of partitions:          30344
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4818 (before line 9231), Function main called from node N4742, stack depth 1 [7161457], stack [main]])
  Number of target states:       0
  Size of final wait list        411

Time for analysis setup:          7.018s
  Time for loading CPAs:          1.084s
  Time for loading parser:        0.731s
  Time for CFA construction:      5.080s
    Time for parsing file(s):     1.187s
    Time for AST to CFA:          1.729s
    Time for CFA sanity check:    0.468s
    Time for post-processing:     1.494s
      Time for var class.:        0.796s
Time for Analysis:              893.254s
CPU time for analysis:          893.190s
Total time for CPAchecker:      900.279s
Total CPU time for CPAchecker:  900.190s
Time for statistics:              0.605s

Time for Garbage Collector:      22.812s (in 1657 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                296MB (   282 MiB) max;    168MB (   161 MiB) avg;    302MB (   288 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           319MB (   305 MiB) max;    246MB (   234 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8151MB (  7773 MiB) max;   8123MB (  7746 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
