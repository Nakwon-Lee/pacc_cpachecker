scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--firewire--firewire-ohci.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8qonlqy9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 9721: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6137: Function pointer *(packet->callback) with type void (*)(struct fw_packet *, struct fw_card *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4237: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4170-4171: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4422: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4300: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4333: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4367: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4401-4402: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4267: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4204: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7526-7527: Function pointer *(ctx->base.callback.mc) with type void (*)(struct fw_iso_context *, dma_addr_t , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7375-7376: Function pointer *(ctx->base.callback.sc) with type void (*)(struct fw_iso_context *, u32 , size_t , void *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5975: Function pointer *(packet->callback) with type void (*)(struct fw_packet *, struct fw_card *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7509-7510: Function pointer *(ctx->base.callback.mc) with type void (*)(struct fw_iso_context *, dma_addr_t , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6111: Function pointer *(packet->callback) with type void (*)(struct fw_packet *, struct fw_card *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6083: Function pointer *(packet->callback) with type void (*)(struct fw_packet *, struct fw_card *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7176: Function pointer *(packet->callback) with type void (*)(struct fw_packet *, struct fw_card *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9201: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __get_free_pages to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_alloc_attrs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_free_attrs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_schedule_bus_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_pages to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_core_remove_card to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6083: Ignoring function call through function pointer *(packet->callback): (*(packet->callback))(packet, &(ctx->ohci->card), packet->ack); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function fw_core_handle_response to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_core_handle_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6111: Ignoring function call through function pointer *(packet->callback): (*(packet->callback))(packet, &(ctx->ohci->card), packet->ack); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vunmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msi to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_notice to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7176: Ignoring function call through function pointer *(packet->callback): (*(packet->callback))(packet, &(ohci->card), packet->ack); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 7375-7376: Ignoring function call through function pointer *(ctx->base.callback.sc): (*(ctx->base.callback.sc))(&(ctx->base), __CPAchecker_TMP_0, ctx->header_length, ctx->header, ctx->base.callback_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4204: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5544: Ignoring function call through function pointer *(ctx->callback): tmp = (*(ctx->callback))(ctx, d, last); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_choose_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_card_initialize to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_pages_current to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_msi_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_card_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_fill_response to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6137: Ignoring function call through function pointer *(packet->callback): (*(packet->callback))(packet, &(ctx->ohci->card), packet->ack); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5975: Ignoring function call through function pointer *(packet->callback): (*(packet->callback))(packet, &(ohci->card), packet->ack); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4367: Ignoring function call through function pointer *(ops->sync_single_for_cpu): (*(ops->sync_single_for_cpu))(dev, addr + ((unsigned long long)offset), size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_range_for_cpu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 7526-7527: Ignoring function call through function pointer *(ctx->base.callback.mc): (*(ctx->base.callback.mc))(&(ctx->base), (dma_addr_t )((ctx->mc_buffer_bus) + __CPAchecker_TMP_3), ctx->base.callback_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4237: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, page, offset, size, dir, (struct dma_attrs *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_mapping_error to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4422: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __free_pages to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4267: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, (struct dma_attrs *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 4401-4402: Ignoring function call through function pointer *(ops->sync_single_for_device): (*(ops->sync_single_for_device))(dev, addr + ((unsigned long long)offset), size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_range_for_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2332780 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2143267 (92%)
  Because of loop head:            186486 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3027 (0%)
  Times precision was empty:       362158 (16%)
  Times precision was {false}:     3524 (0%)
  Times result was cached:         1952688 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      14410 (1%)
  Times result was 'false':        50540 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1720590
  BDD entailment checks:           504618
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       85
Number of predicates discovered:          14
Number of abstraction locations:          525
Max number of predicates per location:    9
Avg number of predicates per location:    4
Total predicates per abstraction:         10101560
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 563.26
Number of irrelevant predicates:          2733614 (27%)
Number of preds handled by boolean abs:   40160 (0%)
  Total number of models for allsat:      15412
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.07

Time for post operator:                 86.021s
  Time for path formula creation:       81.283s
Time for strengthen operator:           10.125s
Time for prec operator:                450.890s
  Time for abstraction:                423.414s (Max:     1.150s, Count: 2332780)
    Boolean abstraction:                19.511s
    Solving time:                       19.607s (Max:     0.061s)
    Model enumeration time:              1.968s
    Time for BDD construction:           0.331s (Max:     0.012s)
Time for merge operator:                 7.275s
Time for coverage check:                 0.590s
  Time for BDD entailment checks:        0.400s
Total time for SMT solver (w/o itp):    21.575s

Number of path formula cache hits:   14504279 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    29.747s

Total number of created targets for pointer analysis: 57897
   Number of created targets for uf: *(void)* is 29
   Number of created targets for uf: *(struct_page)* is 73
   Number of created targets for uf: *(unsigned_int)* is 2
   Number of created targets for uf: *(struct_descriptor_buffer)* is 4
   Number of created targets for uf: *unsigned_long_int is 94
   Number of created targets for uf: *unsigned_short_int is 7
   Number of created targets for uf: *signed_int is 25
   Number of created targets for uf: *(char)* is 2
   Number of created targets for uf: *unsigned_char is 51
   Number of created targets for uf: *(struct_list_head)* is 14
   Number of created targets for uf: *(struct_descriptor)* is 11
   Number of created targets for uf: *_Bool is 113
   Number of created targets for uf: *(struct_iso_context)* is 3
   Number of created targets for uf: *(struct_fw_ohci)* is 4
   Number of created targets for uf: *unsigned_long_long_int is 113
   Number of created targets for uf: *unsigned_int is 89
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_3,_Parameter_1_type:_[(struct_context)*],_Parameter_2_type:_[(struct_descriptor)*],_Parameter_3_type:_[(struct_descriptor)*],_VarArgs:_false)* is 4


Number of BDD nodes:                               1065
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       29555 (count: 988161, min: 0, max: 328, avg: 0.03)
Time for BDD node cleanup:                             0.170s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 15.349s
  Time for transition matches:                         8.051s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.014s
Automaton transfers with branching:                0
Automaton transfer successors:                     12276235 (count: 12276235, min: 1, max: 1, avg: 1.00) [1 x 12276235]

CPA algorithm statistics
------------------------
Number of iterations:            7839815
Max size of waitlist:            657
Average size of waitlist:        199
Number of computed successors:   8998378
Max successors for one state:    2
Number of times merged:          607986
Number of times stopped:         886243
Number of times breaked:         3027

Total time for CPA algorithm:       758.757s (Max:     2.139s)
  Time for choose from waitlist:      3.668s
  Time for precision adjustment:    502.686s
  Time for transfer relation:       195.689s
  Time for merge operator:           14.062s
  Time for stop operator:             9.765s
  Time for adding to reached set:    13.150s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3027
Avg. length of target path (in blocks):              308717 (count: 3027, min: 58, max: 224, avg: 101.99)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  96.819s
  Counterexample analysis:                            78.532s (Max:     0.190s, Calls: 3027)
    Refinement sat check:                             46.099s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.147s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.671s
  Precision update:                                    4.205s
  ARG update:                                         12.015s

Length of refined path (in blocks):                  300546 (count: 3027, min: 54, max: 223, avg: 99.29)
Number of affected states:                            96584 (count: 3027, min: 1, max: 222, avg: 31.91)
Length (states) of path with itp 'true':             200935 (count: 3027, min: 0, max: 106, avg: 66.38)
Length (states) of path with itp non-trivial itp:     96584 (count: 3027, min: 1, max: 222, avg: 31.91)
Length (states) of path with itp 'false':              3027 (count: 3027, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 3027, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           93557 (count: 3027, min: 0, max: 221, avg: 30.91)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3027
Number of successful refinements:     3027
Number of failed refinements:         0
Max. size of reached set before ref.: 29343
Max. size of reached set after ref.:  22379
Avg. size of reached set before ref.: 10891.32
Avg. size of reached set after ref.:  8232.14

Total time for CEGAR algorithm:     893.084s
Time for refinements:               119.610s
Average time for refinement:          0.039s
Max time for refinement:              0.878s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          2511
  Total lines:            4396
  Line coverage:          0.571
  Visited conditions:     636
  Total conditions:       1382
  Condition coverage:     0.460

CPAchecker general statistics
-----------------------------
Number of program locations:     6314
Number of CFA edges:             7402
Number of relevant variables:    971
Number of functions:             249
Number of loops:                 51
Size of reached set:             12260
  Number of reached locations:   1723 (27%)
    Avg states per location:     7
    Max states per location:     205 (at node N795)
  Number of reached functions:   121 (49%)
  Number of partitions:          12233
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N4818 (before line 9231), Function main called from node N4742, stack depth 1 [629984eb], stack [main]])
  Number of target states:       0
  Size of final wait list        220

Time for analysis setup:          7.188s
  Time for loading CPAs:          1.139s
  Time for loading parser:        0.768s
  Time for CFA construction:      5.122s
    Time for parsing file(s):     1.348s
    Time for AST to CFA:          1.642s
    Time for CFA sanity check:    0.499s
    Time for post-processing:     1.349s
      Time for var class.:        0.650s
Time for Analysis:              893.084s
CPU time for analysis:          892.990s
Total time for CPAchecker:      900.276s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              0.292s

Time for Garbage Collector:      53.244s (in 2214 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                566MB (   540 MiB) max;    245MB (   234 MiB) avg;    583MB (   556 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           608MB (   580 MiB) max;    355MB (   339 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8219MB (  7838 MiB) max;   8163MB (  7785 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
