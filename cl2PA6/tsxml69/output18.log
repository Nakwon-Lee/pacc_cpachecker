scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--usb--storage--usb-storage.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jeivgw6m/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6139: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6587: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8189: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8294: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8297: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8300: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 9536: Dead code detected: tmp___5 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 9541: Dead code detected: tmp___6 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 9546: Dead code detected: tmp___7 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  tmp___5 = get_current();
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (tmp___5->state): : "memory",
                       "cc");
  goto ldv_37511;
  case 2UL:
  tmp___6 = get_current();
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (tmp___6->state): : "memory",
                       "cc");
  goto ldv_37511;
  case 4UL:
  tmp___7 = get_current();
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret), "+m" (tmp___7->state): : "memory",
                       "cc");
  goto ldv_37511;
  case 8UL:
  tmp___8 = get_current();
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret), "+m" (tmp___8->state): : "memory",
                       "cc");
  goto ldv_37511;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10968: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11390: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11867: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12221: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13453: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13953: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5372: Function pointer *done with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9512: Function pointer *(us->srb->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9290: Function pointer *(us->suspend_resume_hook) with type void (*)(struct us_data *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9263: Function pointer *(us->suspend_resume_hook) with type void (*)(struct us_data *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5827: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5831: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(256UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_probe_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_putc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_hw_sectors to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_bounce_limit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5370: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "Fail command during disconnect\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ldv__builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_vprintk_emit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv__builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5372: Ignoring call via function pointer queuecommand_lck::done for which no suitable target was found in line: (*done)(srb); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5372: Ignoring function call through function pointer *done: (*done)(srb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5444: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "%s called\n", "device_reset") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5446: Ignoring function call through function pointer *(us->transport_reset): result = (*(us->transport_reset))(us); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_scan_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 6933-6934: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "rq=%02x rqtype=%02x value=%04x index=%02x len=%u\n", (int)request, (int)requesttype, (int)value, (int)index, (int)size) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7695-7696: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "GetMaxLUN command result is %d, data is %d\n", result, (int)(*(us->iobuf))) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_interruptible_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6919: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "%s -- cancelling URB\n", __CPAchecker_TMP_3) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6908: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "-- cancelling URB\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3239 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3143 (97%)
  Because of loop head:            73 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (1%)
  Times precision was empty:       1740 (54%)
  Times precision was {false}:     45 (1%)
  Times result was cached:         1271 (39%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      183 (6%)
  Times result was 'false':        52 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         7281
  BDD entailment checks:           487
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       80
Number of predicates discovered:          4
Number of abstraction locations:          52
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         2451
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 10.75
Number of irrelevant predicates:          583 (24%)
Number of preds handled by boolean abs:   276 (11%)
  Total number of models for allsat:      184
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  6.952s
  Time for path formula creation:        6.860s
Time for strengthen operator:            0.108s
Time for prec operator:                  2.029s
  Time for abstraction:                  1.822s (Max:     0.331s, Count: 3239)
    Boolean abstraction:                 0.854s
    Solving time:                        0.872s (Max:     0.283s)
    Model enumeration time:              0.037s
    Time for BDD construction:           0.019s (Max:     0.008s)
Time for merge operator:                 0.634s
Time for coverage check:                 0.041s
  Time for BDD entailment checks:        0.035s
Total time for SMT solver (w/o itp):     0.909s

Number of path formula cache hits:   18838 (55%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.481s

Total number of created targets for pointer analysis: 4076
   Number of created targets for uf: *unsigned_char is 233
   Number of created targets for uf: *unsigned_long_int is 705


Number of BDD nodes:                               211
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         368 (count: 3578, min: 0, max: 143, avg: 0.10)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.292s
Automaton transfers with branching:                0
Automaton transfer successors:                        30669 (count: 30669, min: 1, max: 1, avg: 1.00) [1 x 30669]

CPA algorithm statistics
------------------------
Number of iterations:            21200
Max size of waitlist:            62
Average size of waitlist:        42
Number of computed successors:   25691
Max successors for one state:    2
Number of times merged:          3397
Number of times stopped:         3740
Number of times breaked:         23

Total time for CPA algorithm:        12.561s (Max:     3.731s)
  Time for choose from waitlist:      0.067s
  Time for precision adjustment:      2.448s
  Time for transfer relation:         8.415s
  Time for merge operator:            0.846s
  Time for stop operator:             0.191s
  Time for adding to reached set:     0.213s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   23
Avg. length of target path (in blocks):                1117 (count: 23, min: 15, max: 80, avg: 48.57)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   9.971s
  Counterexample analysis:                             9.757s (Max:     0.808s, Calls: 23)
    Refinement sat check:                              9.075s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.022s
  Precision update:                                    0.018s
  ARG update:                                          0.149s

Length of refined path (in blocks):                     815 (count: 22, min: 8, max: 57, avg: 37.05)
Number of affected states:                              620 (count: 22, min: 3, max: 50, avg: 28.18)
Length (states) of path with itp 'true':                173 (count: 22, min: 0, max: 26, avg: 7.86)
Length (states) of path with itp non-trivial itp:       620 (count: 22, min: 3, max: 50, avg: 28.18)
Length (states) of path with itp 'false':                22 (count: 22, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 22, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             598 (count: 22, min: 2, max: 49, avg: 27.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                23
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 1986
Max. size of reached set after ref.:  379
Avg. size of reached set before ref.: 1052.26
Avg. size of reached set after ref.:  104.64

Total time for CEGAR algorithm:      22.679s
Time for refinements:                10.109s
Average time for refinement:          0.439s
Max time for refinement:              0.825s

Code Coverage
-----------------------------
  Function coverage:      0.091
  Visited lines:          1201
  Total lines:            5012
  Line coverage:          0.240
  Visited conditions:     124
  Total conditions:       1602
  Condition coverage:     0.077

CPAchecker general statistics
-----------------------------
Number of program locations:     7433
Number of CFA edges:             8616
Number of relevant variables:    1006
Number of functions:             362
Number of loops:                 26
Size of reached set:             692
  Number of reached locations:   299 (4%)
    Avg states per location:     2
    Max states per location:     8 (at node N73)
  Number of reached functions:   33 (9%)
  Number of partitions:          681
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4256 (before line 10692), Function main called from node N4236, stack depth 1 [23954300], stack [main]])
  Number of target states:       1
  Size of final wait list        40

Time for analysis setup:          7.717s
  Time for loading CPAs:          1.043s
  Time for loading parser:        0.699s
  Time for CFA construction:      5.812s
    Time for parsing file(s):     1.279s
    Time for AST to CFA:          2.250s
    Time for CFA sanity check:    0.516s
    Time for post-processing:     1.547s
      Time for var class.:        0.780s
Time for Analysis:               22.679s
CPU time for analysis:           22.670s
Total time for CPAchecker:       30.401s
Total CPU time for CPAchecker:   30.380s
Time for statistics:              0.123s

Time for Garbage Collector:       0.459s (in 31 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 77MB (    73 MiB) max;     54MB (    51 MiB) avg;     80MB (    77 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8070MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
