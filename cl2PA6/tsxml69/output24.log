scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--usb--storage--usb-storage.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9ffgzqek/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6139: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6587: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8189: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8294: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8297: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8300: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 9536: Dead code detected: tmp___5 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 9541: Dead code detected: tmp___6 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 9546: Dead code detected: tmp___7 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  tmp___5 = get_current();
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (tmp___5->state): : "memory",
                       "cc");
  goto ldv_37511;
  case 2UL:
  tmp___6 = get_current();
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (tmp___6->state): : "memory",
                       "cc");
  goto ldv_37511;
  case 4UL:
  tmp___7 = get_current();
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret), "+m" (tmp___7->state): : "memory",
                       "cc");
  goto ldv_37511;
  case 8UL:
  tmp___8 = get_current();
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret), "+m" (tmp___8->state): : "memory",
                       "cc");
  goto ldv_37511;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10968: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11390: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11867: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12221: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13453: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13953: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5372: Function pointer *done with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9512: Function pointer *(us->srb->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9290: Function pointer *(us->suspend_resume_hook) with type void (*)(struct us_data *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9263: Function pointer *(us->suspend_resume_hook) with type void (*)(struct us_data *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6005: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5827: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11745: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function scsi_scan_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5831: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(256UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_hw_sectors to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_report_bus_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 6933-6934: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "rq=%02x rqtype=%02x value=%04x index=%02x len=%u\n", (int)request, (int)requesttype, (int)value, (int)index, (int)size) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv__builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_vprintk_emit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv__builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5792: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5460: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "%s called\n", "bus_reset") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function blk_queue_update_dma_alignment to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_is_host_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5410: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "%s called\n", "command_abort") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 5444: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "%s called\n", "device_reset") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_bounce_limit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_putc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface_no_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8142 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7378 (91%)
  Because of loop head:            742 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         22 (0%)
  Times precision was empty:       5926 (73%)
  Times precision was {false}:     128 (2%)
  Times result was cached:         1868 (23%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      220 (3%)
  Times result was 'false':        251 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         7297
  BDD entailment checks:           803
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       80
Number of predicates discovered:          10
Number of abstraction locations:          34
Max number of predicates per location:    9
Avg number of predicates per location:    3
Total predicates per abstraction:         6393
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 18.37
Number of irrelevant predicates:          4015 (63%)
Number of preds handled by boolean abs:   620 (10%)
  Total number of models for allsat:      242
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.10

Time for post operator:                  4.687s
  Time for path formula creation:        4.587s
Time for strengthen operator:            0.158s
Time for prec operator:                  4.784s
  Time for abstraction:                  4.389s (Max:     0.703s, Count: 8142)
    Boolean abstraction:                 2.224s
    Solving time:                        2.069s (Max:     0.522s)
    Model enumeration time:              0.122s
    Time for BDD construction:           0.056s (Max:     0.010s)
Time for merge operator:                 0.341s
Time for coverage check:                 0.039s
  Time for BDD entailment checks:        0.032s
Total time for SMT solver (w/o itp):     2.191s

Number of path formula cache hits:   50640 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.960s

Total number of created targets for pointer analysis: 1268
   Number of created targets for uf: *(struct_usb_host_endpoint)* is 9
   Number of created targets for uf: *(char)* is 81
   Number of created targets for uf: *unsigned_char is 291
   Number of created targets for uf: *unsigned_long_int is 45


Number of BDD nodes:                               331
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         607 (count: 8791, min: 0, max: 81, avg: 0.07)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.190s
Automaton transfers with branching:                0
Automaton transfer successors:                        50153 (count: 50153, min: 1, max: 1, avg: 1.00) [1 x 50153]

CPA algorithm statistics
------------------------
Number of iterations:            30190
Max size of waitlist:            96
Average size of waitlist:        44
Number of computed successors:   35369
Max successors for one state:    2
Number of times merged:          3247
Number of times stopped:         3842
Number of times breaked:         22

Total time for CPA algorithm:        13.472s (Max:     2.539s)
  Time for choose from waitlist:      0.078s
  Time for precision adjustment:      5.554s
  Time for transfer relation:         6.343s
  Time for merge operator:            0.535s
  Time for stop operator:             0.207s
  Time for adding to reached set:     0.166s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   22
Avg. length of target path (in blocks):                 392 (count: 22, min: 14, max: 25, avg: 17.82)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.639s
  Counterexample analysis:                             8.406s (Max:     0.650s, Calls: 22)
    Refinement sat check:                              7.955s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.026s
  Precision update:                                    0.010s
  ARG update:                                          0.171s

Length of refined path (in blocks):                     305 (count: 22, min: 8, max: 19, avg: 13.86)
Number of affected states:                              249 (count: 22, min: 1, max: 18, avg: 11.32)
Length (states) of path with itp 'true':                 34 (count: 22, min: 0, max: 6, avg: 1.55)
Length (states) of path with itp non-trivial itp:       249 (count: 22, min: 1, max: 18, avg: 11.32)
Length (states) of path with itp 'false':                22 (count: 22, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 22, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             227 (count: 22, min: 0, max: 17, avg: 10.32)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 5182
Max. size of reached set after ref.:  20
Avg. size of reached set before ref.: 1428.41
Avg. size of reached set after ref.:  7.41

Total time for CEGAR algorithm:      22.224s
Time for refinements:                 8.752s
Average time for refinement:          0.397s
Max time for refinement:              0.686s

Code Coverage
-----------------------------
  Function coverage:      0.008
  Visited lines:          960
  Total lines:            5012
  Line coverage:          0.192
  Visited conditions:     2
  Total conditions:       1602
  Condition coverage:     0.001

CPAchecker general statistics
-----------------------------
Number of program locations:     7433
Number of CFA edges:             8616
Number of relevant variables:    1006
Number of functions:             362
Number of loops:                 26
Size of reached set:             15
  Number of reached locations:   15 (0%)
    Avg states per location:     1
    Max states per location:     1 (at node N39)
  Number of reached functions:   3 (1%)
  Number of partitions:          15
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          8.065s
  Time for loading CPAs:          1.202s
  Time for loading parser:        0.702s
  Time for CFA construction:      6.011s
    Time for parsing file(s):     1.434s
    Time for AST to CFA:          2.286s
    Time for CFA sanity check:    0.475s
    Time for post-processing:     1.570s
      Time for var class.:        0.788s
Time for Analysis:               22.224s
CPU time for analysis:           22.220s
Total time for CPAchecker:       30.294s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.101s

Time for Garbage Collector:       0.486s (in 33 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 76MB (    72 MiB) max;     51MB (    49 MiB) avg;     81MB (    77 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    32 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8070MB (  7696 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
