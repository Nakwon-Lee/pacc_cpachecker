scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--usb--storage--usb-storage.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kxxirpor/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6139: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6587: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8189: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8294: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8297: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8300: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 9536: Dead code detected: tmp___5 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 9541: Dead code detected: tmp___6 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 9546: Dead code detected: tmp___7 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  tmp___5 = get_current();
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (tmp___5->state): : "memory",
                       "cc");
  goto ldv_37511;
  case 2UL:
  tmp___6 = get_current();
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (tmp___6->state): : "memory",
                       "cc");
  goto ldv_37511;
  case 4UL:
  tmp___7 = get_current();
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret), "+m" (tmp___7->state): : "memory",
                       "cc");
  goto ldv_37511;
  case 8UL:
  tmp___8 = get_current();
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret), "+m" (tmp___8->state): : "memory",
                       "cc");
  goto ldv_37511;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10968: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11390: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11867: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12221: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13453: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13953: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5372: Function pointer *done with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9512: Function pointer *(us->srb->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9290: Function pointer *(us->suspend_resume_hook) with type void (*)(struct us_data *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9263: Function pointer *(us->suspend_resume_hook) with type void (*)(struct us_data *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6005: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5827: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11745: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function scsi_scan_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5831: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(256UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_hw_sectors to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_report_bus_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 6933-6934: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "rq=%02x rqtype=%02x value=%04x index=%02x len=%u\n", (int)request, (int)requesttype, (int)value, (int)index, (int)size) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv__builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_vprintk_emit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv__builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5792: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5460: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "%s called\n", "bus_reset") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function blk_queue_update_dma_alignment to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_is_host_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5410: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "%s called\n", "command_abort") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 5444: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "%s called\n", "device_reset") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_bounce_limit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_putc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface_no_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 7695-7696: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "GetMaxLUN command result is %d, data is %d\n", result, (int)(*(us->iobuf))) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function wait_for_completion_interruptible_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10037: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "-- sending exit command to thread\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 6908: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "-- cancelling URB\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 6919: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "%s -- cancelling URB\n", __CPAchecker_TMP_3) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kthread_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10045: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "-- calling extra_destructor()\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10046: Ignoring function call through function pointer *(us->extra_destructor): (*(us->extra_destructor))(us->extra); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 10046: Unsupported feature (recursion): usb_stor_disconnect(us->extra); (line was originally pointer call(usb_stor_disconnect) (*(us->extra_destructor))(us->extra);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            43053 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  40091 (93%)
  Because of loop head:            2830 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         132 (0%)
  Times precision was empty:       27468 (64%)
  Times precision was {false}:     264 (1%)
  Times result was cached:         14731 (34%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      590 (1%)
  Times result was 'false':        1590 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         48285
  BDD entailment checks:           5033
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       80
Number of predicates discovered:          12
Number of abstraction locations:          66
Max number of predicates per location:    9
Avg number of predicates per location:    3
Total predicates per abstraction:         64138
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 75.10
Number of irrelevant predicates:          27080 (42%)
Number of preds handled by boolean abs:   2234 (3%)
  Total number of models for allsat:      780
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.32

Time for post operator:                  8.335s
  Time for path formula creation:        8.130s
Time for strengthen operator:            0.407s
Time for prec operator:                  9.227s
  Time for abstraction:                  8.354s (Max:     0.647s, Count: 43053)
    Boolean abstraction:                 2.547s
    Solving time:                        2.299s (Max:     0.470s)
    Model enumeration time:              0.190s
    Time for BDD construction:           0.076s (Max:     0.008s)
Time for merge operator:                 0.603s
Time for coverage check:                 0.048s
  Time for BDD entailment checks:        0.039s
Total time for SMT solver (w/o itp):     2.489s

Number of path formula cache hits:   302746 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.184s

Total number of created targets for pointer analysis: 3574
   Number of created targets for uf: *(struct_usb_host_endpoint)* is 9
   Number of created targets for uf: *(char)* is 81
   Number of created targets for uf: *unsigned_char is 813
   Number of created targets for uf: *unsigned_long_int is 23


Number of BDD nodes:                               1059
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1419 (count: 37514, min: 0, max: 84, avg: 0.04)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.632s
  Time for transition matches:                         0.285s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.007s
Automaton transfers with branching:                0
Automaton transfer successors:                       273008 (count: 273008, min: 1, max: 1, avg: 1.00) [1 x 273008]

CPA algorithm statistics
------------------------
Number of iterations:            175578
Max size of waitlist:            141
Average size of waitlist:        56
Number of computed successors:   206421
Max successors for one state:    2
Number of times merged:          21626
Number of times stopped:         24746
Number of times breaked:         132

Total time for CPA algorithm:        27.097s (Max:     2.427s)
  Time for choose from waitlist:      0.174s
  Time for precision adjustment:     11.117s
  Time for transfer relation:        12.656s
  Time for merge operator:            1.000s
  Time for stop operator:             0.418s
  Time for adding to reached set:     0.475s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   132
Avg. length of target path (in blocks):                3621 (count: 132, min: 14, max: 36, avg: 27.43)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  47.263s
  Counterexample analysis:                            46.501s (Max:     0.740s, Calls: 132)
    Refinement sat check:                             43.749s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.047s
  Precision update:                                    0.052s
  ARG update:                                          0.593s

Length of refined path (in blocks):                    3166 (count: 132, min: 8, max: 32, avg: 23.98)
Number of affected states:                             1803 (count: 132, min: 1, max: 25, avg: 13.66)
Length (states) of path with itp 'true':               1231 (count: 132, min: 0, max: 17, avg: 9.33)
Length (states) of path with itp non-trivial itp:      1803 (count: 132, min: 1, max: 25, avg: 13.66)
Length (states) of path with itp 'false':               132 (count: 132, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 132, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1671 (count: 132, min: 0, max: 24, avg: 12.66)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                132
Number of successful refinements:     132
Number of failed refinements:         0
Max. size of reached set before ref.: 6624
Max. size of reached set after ref.:  5304
Avg. size of reached set before ref.: 2977.39
Avg. size of reached set after ref.:  1635.11

Total time for CEGAR algorithm:      75.022s
Time for refinements:                47.755s
Average time for refinement:          0.361s
Max time for refinement:              0.757s

Code Coverage
-----------------------------
  Function coverage:      0.185
  Visited lines:          1655
  Total lines:            5012
  Line coverage:          0.330
  Visited conditions:     352
  Total conditions:       1602
  Condition coverage:     0.220

CPAchecker general statistics
-----------------------------
Number of program locations:     7433
Number of CFA edges:             8616
Number of relevant variables:    1006
Number of functions:             362
Number of loops:                 26
Size of reached set:             2905
  Number of reached locations:   876 (12%)
    Avg states per location:     3
    Max states per location:     22 (at node N128)
  Number of reached functions:   67 (19%)
  Number of partitions:          2900
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N4256 (before line 10692), Function main called from node N4236, stack depth 1 [23954300], stack [main]])
  Number of target states:       0
  Size of final wait list        54

Time for analysis setup:          7.896s
  Time for loading CPAs:          1.201s
  Time for loading parser:        0.638s
  Time for CFA construction:      5.910s
    Time for parsing file(s):     1.284s
    Time for AST to CFA:          2.322s
    Time for CFA sanity check:    0.488s
    Time for post-processing:     1.607s
      Time for var class.:        0.861s
Time for Analysis:               75.022s
CPU time for analysis:           75.010s
Total time for CPAchecker:       82.930s
Total CPU time for CPAchecker:   82.880s
Time for statistics:              0.158s

Time for Garbage Collector:       1.047s (in 101 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 87MB (    83 MiB) max;     60MB (    58 MiB) avg;     91MB (    86 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     37MB (    36 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8079MB (  7704 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
