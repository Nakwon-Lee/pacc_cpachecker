scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--usb--storage--usb-storage.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_icch55ky/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6139: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6587: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8189: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8294: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8297: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8300: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 9536: Dead code detected: tmp___5 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 9541: Dead code detected: tmp___6 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 9546: Dead code detected: tmp___7 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  tmp___5 = get_current();
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (tmp___5->state): : "memory",
                       "cc");
  goto ldv_37511;
  case 2UL:
  tmp___6 = get_current();
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (tmp___6->state): : "memory",
                       "cc");
  goto ldv_37511;
  case 4UL:
  tmp___7 = get_current();
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret), "+m" (tmp___7->state): : "memory",
                       "cc");
  goto ldv_37511;
  case 8UL:
  tmp___8 = get_current();
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret), "+m" (tmp___8->state): : "memory",
                       "cc");
  goto ldv_37511;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10968: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11390: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11867: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12221: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13453: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13953: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5372: Function pointer *done with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9512: Function pointer *(us->srb->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9290: Function pointer *(us->suspend_resume_hook) with type void (*)(struct us_data *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9263: Function pointer *(us->suspend_resume_hook) with type void (*)(struct us_data *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6005: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5827: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11745: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5831: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(256UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_probe_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_scan_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_report_bus_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9290: Ignoring function call through function pointer *(us->suspend_resume_hook): (*(us->suspend_resume_hook))(us, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9263: Ignoring function call through function pointer *(us->suspend_resume_hook): (*(us->suspend_resume_hook))(us, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5792: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function blk_queue_max_hw_sectors to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10279: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "Transport: %s\n", us->transport_name) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 10348: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "storage_probe() failed\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ldv__builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_vprintk_emit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv__builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10280: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "Protocol: %s\n", us->protocol_name) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 9951: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "Endpoint sanity check failed! Rejecting dev.\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9997: Ignoring function call through function pointer *(us->unusual_dev->initFunction): p = (*(us->unusual_dev->initFunction))(us); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 9997: Unsupported feature (recursion): p = usb_stor_probe2(us); (line was originally pointer call(usb_stor_probe2) p = (*((us->unusual_dev)->initFunction))(us);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            119019 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  106243 (89%)
  Because of loop head:            12581 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         195 (0%)
  Times precision was empty:       37989 (32%)
  Times precision was {false}:     587 (0%)
  Times result was cached:         78007 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2436 (2%)
  Times result was 'false':        3856 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         91436
  BDD entailment checks:           22796
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       80
Number of predicates discovered:          13
Number of abstraction locations:          139
Max number of predicates per location:    11
Avg number of predicates per location:    6
Total predicates per abstraction:         556517
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 184.09
Number of irrelevant predicates:          133696 (24%)
Number of preds handled by boolean abs:   9955 (2%)
  Total number of models for allsat:      4197
  Max number of models for allsat:        36
  Avg number of models for allsat:        1.72

Time for post operator:                  9.199s
  Time for path formula creation:        8.798s
Time for strengthen operator:            0.606s
Time for prec operator:                 36.168s
  Time for abstraction:                 34.259s (Max:     0.626s, Count: 119019)
    Boolean abstraction:                 6.028s
    Solving time:                        5.150s (Max:     0.457s)
    Model enumeration time:              0.644s
    Time for BDD construction:           0.242s (Max:     0.013s)
Time for merge operator:                 0.622s
Time for coverage check:                 0.067s
  Time for BDD entailment checks:        0.056s
Total time for SMT solver (w/o itp):     5.794s

Number of path formula cache hits:   737933 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.532s

Total number of created targets for pointer analysis: 2610
   Number of created targets for uf: *unsigned_short_int is 373
   Number of created targets for uf: *(struct_usb_host_endpoint)* is 13
   Number of created targets for uf: *(char)* is 255
   Number of created targets for uf: *unsigned_char is 523
   Number of created targets for uf: *unsigned_int is 10
   Number of created targets for uf: *unsigned_long_int is 146


Number of BDD nodes:                               4162
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6204 (count: 79510, min: 0, max: 256, avg: 0.08)
Time for BDD node cleanup:                             0.032s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.170s
  Time for transition matches:                         0.628s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       639421 (count: 639421, min: 1, max: 1, avg: 1.00) [1 x 639421]

CPA algorithm statistics
------------------------
Number of iterations:            400777
Max size of waitlist:            161
Average size of waitlist:        47
Number of computed successors:   464843
Max successors for one state:    2
Number of times merged:          34320
Number of times stopped:         46103
Number of times breaked:         195

Total time for CPA algorithm:        61.014s (Max:     1.990s)
  Time for choose from waitlist:      0.292s
  Time for precision adjustment:     39.599s
  Time for transfer relation:        16.664s
  Time for merge operator:            1.230s
  Time for stop operator:             0.707s
  Time for adding to reached set:     0.855s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   195
Avg. length of target path (in blocks):                8238 (count: 195, min: 14, max: 71, avg: 42.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  74.116s
  Counterexample analysis:                            72.965s (Max:     0.735s, Calls: 195)
    Refinement sat check:                             68.039s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.018s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.089s
  Precision update:                                    0.114s
  ARG update:                                          0.817s

Length of refined path (in blocks):                    7223 (count: 195, min: 8, max: 59, avg: 37.04)
Number of affected states:                             6581 (count: 195, min: 1, max: 58, avg: 33.75)
Length (states) of path with itp 'true':                447 (count: 195, min: 0, max: 35, avg: 2.29)
Length (states) of path with itp non-trivial itp:      6581 (count: 195, min: 1, max: 58, avg: 33.75)
Length (states) of path with itp 'false':               195 (count: 195, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 195, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            6386 (count: 195, min: 0, max: 57, avg: 32.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                195
Number of successful refinements:     195
Number of failed refinements:         0
Max. size of reached set before ref.: 4955
Max. size of reached set after ref.:  2465
Avg. size of reached set before ref.: 2154.65
Avg. size of reached set after ref.:  51.13

Total time for CEGAR algorithm:     135.544s
Time for refinements:                74.508s
Average time for refinement:          0.382s
Max time for refinement:              0.749s

Code Coverage
-----------------------------
  Function coverage:      0.224
  Visited lines:          1818
  Total lines:            5012
  Line coverage:          0.363
  Visited conditions:     346
  Total conditions:       1602
  Condition coverage:     0.216

CPAchecker general statistics
-----------------------------
Number of program locations:     7433
Number of CFA edges:             8616
Number of relevant variables:    1006
Number of functions:             362
Number of loops:                 26
Size of reached set:             4699
  Number of reached locations:   906 (12%)
    Avg states per location:     5
    Max states per location:     50 (at node N1277)
  Number of reached functions:   81 (22%)
  Number of partitions:          4692
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N4256 (before line 10692), Function main called from node N4236, stack depth 1 [23954300], stack [main]])
  Number of target states:       0
  Size of final wait list        109

Time for analysis setup:          7.691s
  Time for loading CPAs:          1.042s
  Time for loading parser:        0.688s
  Time for CFA construction:      5.848s
    Time for parsing file(s):     1.331s
    Time for AST to CFA:          2.158s
    Time for CFA sanity check:    0.479s
    Time for post-processing:     1.654s
      Time for var class.:        0.771s
Time for Analysis:              135.544s
CPU time for analysis:          135.520s
Total time for CPAchecker:      143.240s
Total CPU time for CPAchecker:  143.200s
Time for statistics:              0.180s

Time for Garbage Collector:       2.121s (in 315 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 88MB (    84 MiB) max;     62MB (    59 MiB) avg;     91MB (    87 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8153MB (  7775 MiB) max;   8118MB (  7742 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
