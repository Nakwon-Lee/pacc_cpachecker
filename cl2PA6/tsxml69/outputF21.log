scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--usb--storage--usb-storage.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ii_7h01m/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6139: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6587: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8189: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8294: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8297: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8300: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2696;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 9536: Dead code detected: tmp___5 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 9541: Dead code detected: tmp___6 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 9546: Dead code detected: tmp___7 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  tmp___5 = get_current();
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (tmp___5->state): : "memory",
                       "cc");
  goto ldv_37511;
  case 2UL:
  tmp___6 = get_current();
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (tmp___6->state): : "memory",
                       "cc");
  goto ldv_37511;
  case 4UL:
  tmp___7 = get_current();
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret), "+m" (tmp___7->state): : "memory",
                       "cc");
  goto ldv_37511;
  case 8UL:
  tmp___8 = get_current();
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret), "+m" (tmp___8->state): : "memory",
                       "cc");
  goto ldv_37511;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10968: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11390: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11867: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12221: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13453: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13953: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5372: Function pointer *done with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9512: Function pointer *(us->srb->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9290: Function pointer *(us->suspend_resume_hook) with type void (*)(struct us_data *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9263: Function pointer *(us->suspend_resume_hook) with type void (*)(struct us_data *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5827: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5831: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(256UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_probe_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_putc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_hw_sectors to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_bounce_limit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5370: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "Fail command during disconnect\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ldv__builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_vprintk_emit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv__builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5372: Ignoring call via function pointer queuecommand_lck::done for which no suitable target was found in line: (*done)(srb); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5372: Ignoring function call through function pointer *done: (*done)(srb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5444: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "%s called\n", "device_reset") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5446: Ignoring function call through function pointer *(us->transport_reset): result = (*(us->transport_reset))(us); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_scan_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 6933-6934: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "rq=%02x rqtype=%02x value=%04x index=%02x len=%u\n", (int)request, (int)requesttype, (int)value, (int)index, (int)size) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7695-7696: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "GetMaxLUN command result is %d, data is %d\n", result, (int)(*(us->iobuf))) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_interruptible_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6919: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "%s -- cancelling URB\n", __CPAchecker_TMP_3) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6908: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "-- cancelling URB\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5792: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function scsi_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10279: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "Transport: %s\n", us->transport_name) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 10348: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "storage_probe() failed\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 10037: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "-- sending exit command to thread\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function kthread_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10045: Ignoring parameters passed as varargs to function usb_stor_dbg: usb_stor_dbg((const struct us_data *)us, "-- calling extra_destructor()\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10046: Ignoring function call through function pointer *(us->extra_destructor): (*(us->extra_destructor))(us->extra); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_autopm_put_interface_no_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 10369: Unsupported feature (recursion): release_everything(us); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            146287 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  143233 (98%)
  Because of loop head:            1879 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1175 (1%)
  Times precision was empty:       12060 (8%)
  Times precision was {false}:     239 (0%)
  Times result was cached:         131961 (90%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2027 (1%)
  Times result was 'false':        6110 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         108518
  BDD entailment checks:           24324
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       80
Number of predicates discovered:          9
Number of abstraction locations:          111
Max number of predicates per location:    8
Avg number of predicates per location:    6
Total predicates per abstraction:         716139
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 316.04
Number of irrelevant predicates:          131712 (18%)
Number of preds handled by boolean abs:   7586 (1%)
  Total number of models for allsat:      2052
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.01

Time for post operator:                 21.316s
  Time for path formula creation:       20.887s
Time for strengthen operator:            0.711s
Time for prec operator:                 41.972s
  Time for abstraction:                 39.561s (Max:     0.352s, Count: 146287)
    Boolean abstraction:                 5.356s
    Solving time:                        4.930s (Max:     0.298s)
    Model enumeration time:              0.287s
    Time for BDD construction:           0.092s (Max:     0.010s)
Time for merge operator:                 1.672s
Time for coverage check:                 0.117s
  Time for BDD entailment checks:        0.093s
Total time for SMT solver (w/o itp):     5.217s

Number of path formula cache hits:   841235 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    16.415s

Total number of created targets for pointer analysis: 30972
   Number of created targets for uf: *(void)* is 67
   Number of created targets for uf: *(struct_usb_host_endpoint)* is 37
   Number of created targets for uf: *unsigned_char is 6381
   Number of created targets for uf: *unsigned_long_int is 2705


Number of BDD nodes:                               402
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4365 (count: 49993, min: 0, max: 168, avg: 0.09)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.499s
  Time for transition matches:                         0.787s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                       778483 (count: 778483, min: 1, max: 1, avg: 1.00) [1 x 778483]

CPA algorithm statistics
------------------------
Number of iterations:            534631
Max size of waitlist:            71
Average size of waitlist:        31
Number of computed successors:   608630
Max successors for one state:    2
Number of times merged:          42097
Number of times stopped:         58472
Number of times breaked:         1175

Total time for CPA algorithm:        85.096s (Max:     3.818s)
  Time for choose from waitlist:      0.337s
  Time for precision adjustment:     46.427s
  Time for transfer relation:        31.932s
  Time for merge operator:            2.474s
  Time for stop operator:             0.904s
  Time for adding to reached set:     1.062s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1175
Avg. length of target path (in blocks):               73961 (count: 1175, min: 14, max: 113, avg: 62.95)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 464.541s
  Counterexample analysis:                           462.273s (Max:     0.920s, Calls: 1175)
    Refinement sat check:                            425.179s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.046s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.294s
  Precision update:                                    0.451s
  ARG update:                                          1.048s

Length of refined path (in blocks):                   71950 (count: 1175, min: 8, max: 112, avg: 61.23)
Number of affected states:                            35144 (count: 1175, min: 1, max: 81, avg: 29.91)
Length (states) of path with itp 'true':              35631 (count: 1175, min: 0, max: 81, avg: 30.32)
Length (states) of path with itp non-trivial itp:     35144 (count: 1175, min: 1, max: 81, avg: 29.91)
Length (states) of path with itp 'false':              1175 (count: 1175, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1175, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           33969 (count: 1175, min: 0, max: 80, avg: 28.91)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1175
Number of successful refinements:     1175
Number of failed refinements:         0
Max. size of reached set before ref.: 3936
Max. size of reached set after ref.:  3217
Avg. size of reached set before ref.: 1424.44
Avg. size of reached set after ref.:  963.65

Total time for CEGAR algorithm:     552.062s
Time for refinements:               466.237s
Average time for refinement:          0.396s
Max time for refinement:              0.925s

Code Coverage
-----------------------------
  Function coverage:      0.177
  Visited lines:          1464
  Total lines:            5012
  Line coverage:          0.292
  Visited conditions:     210
  Total conditions:       1602
  Condition coverage:     0.131

CPAchecker general statistics
-----------------------------
Number of program locations:     7433
Number of CFA edges:             8616
Number of relevant variables:    1006
Number of functions:             362
Number of loops:                 26
Size of reached set:             2616
  Number of reached locations:   587 (8%)
    Avg states per location:     4
    Max states per location:     40 (at node N5966)
  Number of reached functions:   64 (18%)
  Number of partitions:          2614
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4256 (before line 10692), Function main called from node N4236, stack depth 1 [7a587e84], stack [main]])
  Number of target states:       0
  Size of final wait list        28

Time for analysis setup:          7.978s
  Time for loading CPAs:          1.178s
  Time for loading parser:        0.696s
  Time for CFA construction:      5.949s
    Time for parsing file(s):     1.352s
    Time for AST to CFA:          2.175s
    Time for CFA sanity check:    0.478s
    Time for post-processing:     1.718s
      Time for var class.:        0.890s
Time for Analysis:              552.062s
CPU time for analysis:          551.930s
Total time for CPAchecker:      560.044s
Total CPU time for CPAchecker:  559.890s
Time for statistics:              0.158s

Time for Garbage Collector:       3.032s (in 475 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                108MB (   103 MiB) max;     75MB (    72 MiB) avg;    111MB (   106 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8287MB (  7903 MiB) max;   8183MB (  7804 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
