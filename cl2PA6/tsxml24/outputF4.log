scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--usb--host--oxu210hp-hcd.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_csc3grza/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

lines 4100-4101: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 4104-4105: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 4112-4113: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5763;
  case 2UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5763;
  case 4UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5763;
  case 8UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5763;
  default:
  __xadd_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8744: Dead code detected: *((u8 *)__gu_p) = (unsigned char )status; (CFACreationUtils.addEdgeToCFA, INFO)

line 8747: Dead code detected: put_unaligned_le16((int )((unsigned short )status), __gu_p); (CFACreationUtils.addEdgeToCFA, INFO)

line 8753: Dead code detected: put_unaligned_le64((unsigned long long )status, __gu_p); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  *((u8 *)__gu_p) = (unsigned char )status;
  goto ldv_35329;
  case 2UL:
  put_unaligned_le16((int )((unsigned short )status), __gu_p);
  goto ldv_35329;
  case 4UL:
  put_unaligned_le32(status, __gu_p);
  goto ldv_35329;
  case 8UL:
  put_unaligned_le64((unsigned long long )status, __gu_p);
  goto ldv_35329;
  default:
  __bad_unaligned_access_size();
  goto ldv_35329;
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_ioremap_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_uninterruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2973712 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2779257 (93%)
  Because of loop head:            194360 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         95 (0%)
  Times precision was empty:       2235193 (75%)
  Times precision was {false}:     6362 (0%)
  Times result was cached:         728860 (25%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3297 (0%)
  Times result was 'false':        12171 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         2578884
  BDD entailment checks:           357118
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       64
Number of predicates discovered:          8
Number of abstraction locations:          179
Max number of predicates per location:    7
Avg number of predicates per location:    1
Total predicates per abstraction:         1337630
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 138.49
Number of irrelevant predicates:          1177377 (88%)
Number of preds handled by boolean abs:   5153 (0%)
  Total number of models for allsat:      4708
  Max number of models for allsat:        27
  Avg number of models for allsat:        1.43

Time for post operator:                264.118s
  Time for path formula creation:      252.653s
Time for strengthen operator:           14.471s
Time for prec operator:                130.328s
  Time for abstraction:                 84.382s (Max:     0.409s, Count: 2973712)
    Boolean abstraction:                 3.140s
    Solving time:                        4.083s (Max:     0.013s)
    Model enumeration time:              0.838s
    Time for BDD construction:           0.129s (Max:     0.006s)
Time for merge operator:                18.738s
Time for coverage check:                 0.677s
  Time for BDD entailment checks:        0.391s
Total time for SMT solver (w/o itp):     4.921s

Number of path formula cache hits:   18689363 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   151.993s

Total number of created targets for pointer analysis: 273046
   Number of created targets for uf: *(void)* is 593
   Number of created targets for uf: *unsigned_short_int is 3151
   Number of created targets for uf: *signed_int is 217
   Number of created targets for uf: *(struct_ehci_qh)* is 1049
   Number of created targets for uf: *unsigned_char is 1059
   Number of created targets for uf: *(struct_list_head)* is 2253
   Number of created targets for uf: *(unsigned_int)* is 1049
   Number of created targets for uf: *unsigned_int is 9403
   Number of created targets for uf: *char is 16929
   Number of created targets for uf: *unsigned_long_int is 2989


Number of BDD nodes:                               1899
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6930 (count: 2646910, min: 0, max: 364, avg: 0.00)
Time for BDD node cleanup:                             0.406s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 26.782s
  Time for transition matches:                        15.065s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                     18175761 (count: 18175761, min: 1, max: 1, avg: 1.00) [1 x 18175761]

CPA algorithm statistics
------------------------
Number of iterations:            11465017
Max size of waitlist:            8385
Average size of waitlist:        2732
Number of computed successors:   13201043
Max successors for one state:    2
Number of times merged:          1110883
Number of times stopped:         1438576
Number of times breaked:         95

Total time for CPA algorithm:       837.894s (Max:    25.168s)
  Time for choose from waitlist:      5.363s
  Time for precision adjustment:    246.782s
  Time for transfer relation:       475.816s
  Time for merge operator:           32.047s
  Time for stop operator:            16.612s
  Time for adding to reached set:    25.790s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   95
Avg. length of target path (in blocks):               10228 (count: 95, min: 67, max: 159, avg: 107.66)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  34.624s
  Counterexample analysis:                             3.037s (Max:     0.056s, Calls: 95)
    Refinement sat check:                              1.769s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.088s
  Precision update:                                    0.076s
  ARG update:                                         31.324s

Length of refined path (in blocks):                    8851 (count: 95, min: 40, max: 158, avg: 93.17)
Number of affected states:                             5682 (count: 95, min: 1, max: 157, avg: 59.81)
Length (states) of path with itp 'true':               3074 (count: 95, min: 0, max: 80, avg: 32.36)
Length (states) of path with itp non-trivial itp:      5682 (count: 95, min: 1, max: 157, avg: 59.81)
Length (states) of path with itp 'false':                95 (count: 95, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 95, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            5587 (count: 95, min: 0, max: 156, avg: 58.81)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                95
Number of successful refinements:     95
Number of failed refinements:         0
Max. size of reached set before ref.: 391218
Max. size of reached set after ref.:  277681
Avg. size of reached set before ref.: 180063.74
Avg. size of reached set after ref.:  60251.29

Total time for CEGAR algorithm:     893.521s
Time for refinements:                50.601s
Average time for refinement:          0.532s
Max time for refinement:              4.903s

Code Coverage
-----------------------------
  Function coverage:      0.689
  Visited lines:          3018
  Total lines:            4611
  Line coverage:          0.655
  Visited conditions:     962
  Total conditions:       1454
  Condition coverage:     0.662

CPAchecker general statistics
-----------------------------
Number of program locations:     6501
Number of CFA edges:             7752
Number of relevant variables:    977
Number of functions:             190
Number of loops:                 55
Size of reached set:             368115
  Number of reached locations:   2401 (37%)
    Avg states per location:     153
    Max states per location:     5008 (at node N105)
  Number of reached functions:   131 (69%)
  Number of partitions:          368067
    Avg size of partitions:      1
    Max size of partitions:      17 (with key [N5360 (before line 9743), Function main called from node N5297, stack depth 1 [3db432c2], stack [main]])
  Number of target states:       0
  Size of final wait list        7509

Time for analysis setup:          6.663s
  Time for loading CPAs:          1.087s
  Time for loading parser:        0.651s
  Time for CFA construction:      4.774s
    Time for parsing file(s):     1.133s
    Time for AST to CFA:          1.643s
    Time for CFA sanity check:    0.466s
    Time for post-processing:     1.333s
      Time for var class.:        0.689s
Time for Analysis:              893.521s
CPU time for analysis:          893.480s
Total time for CPAchecker:      900.188s
Total CPU time for CPAchecker:  900.130s
Time for statistics:              2.995s

Time for Garbage Collector:     122.562s (in 666 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2001MB (  1908 MiB) max;    911MB (   869 MiB) avg;   2038MB (  1944 MiB) peak
Used non-heap memory:             46MB (    44 MiB) max;     40MB (    38 MiB) avg;     46MB (    44 MiB) peak
Allocated heap memory:          2363MB (  2254 MiB) max;   1337MB (  1276 MiB) avg
Allocated non-heap memory:        48MB (    45 MiB) max;     47MB (    45 MiB) avg
Total process virtual memory:   8155MB (  7778 MiB) max;   8108MB (  7733 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
