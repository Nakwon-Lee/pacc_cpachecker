scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--usb--host--oxu210hp-hcd.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zxc3h8t3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

lines 4100-4101: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 4104-4105: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 4112-4113: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5763;
  case 2UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5763;
  case 4UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5763;
  case 8UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5763;
  default:
  __xadd_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8744: Dead code detected: *((u8 *)__gu_p) = (unsigned char )status; (CFACreationUtils.addEdgeToCFA, INFO)

line 8747: Dead code detected: put_unaligned_le16((int )((unsigned short )status), __gu_p); (CFACreationUtils.addEdgeToCFA, INFO)

line 8753: Dead code detected: put_unaligned_le64((unsigned long long )status, __gu_p); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  *((u8 *)__gu_p) = (unsigned char )status;
  goto ldv_35329;
  case 2UL:
  put_unaligned_le16((int )((unsigned short )status), __gu_p);
  goto ldv_35329;
  case 4UL:
  put_unaligned_le32(status, __gu_p);
  goto ldv_35329;
  case 8UL:
  put_unaligned_le64((unsigned long long )status, __gu_p);
  goto ldv_35329;
  default:
  __bad_unaligned_access_size();
  goto ldv_35329;
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_ioremap_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_uninterruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function irq_set_irq_type to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_resume_root_hub to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_poll_rh_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_giveback_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hc_died to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_create_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_add_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_wakeup_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3350957 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3000670 (90%)
  Because of loop head:            350230 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         57 (0%)
  Times precision was empty:       3253909 (97%)
  Times precision was {false}:     5256 (0%)
  Times result was cached:         90422 (3%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1370 (0%)
  Times result was 'false':        4708 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         2387078
  BDD entailment checks:           508684
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       64
Number of predicates discovered:          7
Number of abstraction locations:          98
Max number of predicates per location:    6
Avg number of predicates per location:    1
Total predicates per abstraction:         144125
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 21.75
Number of irrelevant predicates:          130642 (91%)
Number of preds handled by boolean abs:   2226 (2%)
  Total number of models for allsat:      1901
  Max number of models for allsat:        18
  Avg number of models for allsat:        1.39

Time for post operator:                297.957s
  Time for path formula creation:      289.725s
Time for strengthen operator:           15.751s
Time for prec operator:                 72.787s
  Time for abstraction:                 26.369s (Max:     0.541s, Count: 3350957)
    Boolean abstraction:                 1.453s
    Solving time:                        2.512s (Max:     0.096s)
    Model enumeration time:              0.314s
    Time for BDD construction:           0.067s (Max:     0.003s)
Time for merge operator:                18.239s
Time for coverage check:                 0.753s
  Time for BDD entailment checks:        0.473s
Total time for SMT solver (w/o itp):     2.826s

Number of path formula cache hits:   17396274 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   201.597s

Total number of created targets for pointer analysis: 245291
   Number of created targets for uf: *(void)* is 865
   Number of created targets for uf: *unsigned_short_int is 2143
   Number of created targets for uf: *signed_int is 1981
   Number of created targets for uf: *(struct_ehci_qh)* is 186
   Number of created targets for uf: *unsigned_char is 81
   Number of created targets for uf: *(struct_list_head)* is 2633
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_1,_Parameter_1_type:_[(struct_urb)*],_VarArgs:_false)* is 181
   Number of created targets for uf: *(unsigned_int)* is 186
   Number of created targets for uf: *unsigned_long_long_int is 51
   Number of created targets for uf: *unsigned_int is 1093
   Number of created targets for uf: *char is 1041
   Number of created targets for uf: *unsigned_long_int is 5593


Number of BDD nodes:                               705
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2893 (count: 3798438, min: 0, max: 258, avg: 0.00)
Time for BDD node cleanup:                             0.548s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 37.262s
  Time for transition matches:                        14.406s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                     17720246 (count: 17720246, min: 1, max: 1, avg: 1.00) [1 x 17720246]

CPA algorithm statistics
------------------------
Number of iterations:            11660115
Max size of waitlist:            6082
Average size of waitlist:        1987
Number of computed successors:   13234406
Max successors for one state:    2
Number of times merged:          939197
Number of times stopped:         1438117
Number of times breaked:         57

Total time for CPA algorithm:       843.396s (Max:    37.125s)
  Time for choose from waitlist:      5.879s
  Time for precision adjustment:    199.123s
  Time for transfer relation:       528.794s
  Time for merge operator:           30.013s
  Time for stop operator:            16.600s
  Time for adding to reached set:    24.415s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   57
Avg. length of target path (in blocks):                6659 (count: 57, min: 88, max: 208, avg: 116.82)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  33.491s
  Counterexample analysis:                             1.867s (Max:     0.145s, Calls: 57)
    Refinement sat check:                              1.016s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.025s
  Precision update:                                    0.030s
  ARG update:                                         31.480s

Length of refined path (in blocks):                    4403 (count: 57, min: 40, max: 122, avg: 77.25)
Number of affected states:                             1016 (count: 57, min: 0, max: 96, avg: 17.82)
Length (states) of path with itp 'true':               3330 (count: 57, min: 0, max: 111, avg: 58.42)
Length (states) of path with itp non-trivial itp:      1016 (count: 57, min: 0, max: 96, avg: 17.82)
Length (states) of path with itp 'false':                57 (count: 57, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 57, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             960 (count: 57, min: 0, max: 95, avg: 16.84)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                57
Number of successful refinements:     57
Number of failed refinements:         0
Max. size of reached set before ref.: 509995
Max. size of reached set after ref.:  407657
Avg. size of reached set before ref.: 291928.74
Avg. size of reached set after ref.:  91346.44

Total time for CEGAR algorithm:     893.006s
Time for refinements:                44.833s
Average time for refinement:          0.786s
Max time for refinement:              1.953s

Code Coverage
-----------------------------
  Function coverage:      0.932
  Visited lines:          4364
  Total lines:            4611
  Line coverage:          0.946
  Visited conditions:     1370
  Total conditions:       1454
  Condition coverage:     0.942

CPAchecker general statistics
-----------------------------
Number of program locations:     6501
Number of CFA edges:             7752
Number of relevant variables:    977
Number of functions:             190
Number of loops:                 55
Size of reached set:             358391
  Number of reached locations:   3782 (58%)
    Avg states per location:     94
    Max states per location:     3978 (at node N105)
  Number of reached functions:   177 (93%)
  Number of partitions:          358352
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N5360 (before line 9743), Function main called from node N5297, stack depth 1 [3db432c2], stack [main]])
  Number of target states:       0
  Size of final wait list        3569

Time for analysis setup:          6.968s
  Time for loading CPAs:          1.204s
  Time for loading parser:        0.641s
  Time for CFA construction:      4.979s
    Time for parsing file(s):     1.151s
    Time for AST to CFA:          1.789s
    Time for CFA sanity check:    0.455s
    Time for post-processing:     1.404s
      Time for var class.:        0.691s
Time for Analysis:              893.006s
CPU time for analysis:          892.980s
Total time for CPAchecker:      899.986s
Total CPU time for CPAchecker:  899.930s
Time for statistics:              2.934s

Time for Garbage Collector:     139.511s (in 416 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2939MB (  2803 MiB) max;   1287MB (  1228 MiB) avg;   3309MB (  3155 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    37 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          3916MB (  3734 MiB) max;   1860MB (  1774 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8152MB (  7775 MiB) max;   8085MB (  7711 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
