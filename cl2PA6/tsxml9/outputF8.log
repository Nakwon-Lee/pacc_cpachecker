scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--video--fbdev--aty--radeonfb.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_430hqwrv/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5658: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 5661: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 5667: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33642;
  case 2UL:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33642;
  case 4UL:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33642;
  case 8UL:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33642;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33642;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8837: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8856: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8875: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9058: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9096: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9135: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9158: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9181: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9204: Dead code detected: __ms___2 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9248: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9329: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9348: Dead code detected: __ms___1 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9367: Dead code detected: __ms___2 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9386: Dead code detected: __ms___3 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9405: Dead code detected: __ms___4 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9424: Dead code detected: __ms___5 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9492: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9511: Dead code detected: __ms___0 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9630: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9780: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9995: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10016: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10054: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10072: Dead code detected: __ms___0 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10107: Dead code detected: __ms___2 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10175: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10204: Dead code detected: __ms___0 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10223: Dead code detected: __ms___1 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10242: Dead code detected: __ms___2 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10261: Dead code detected: __ms___3 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10420: Dead code detected: __ms___0 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10446: Dead code detected: __ms___1 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10502: Dead code detected: __ms___2 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10711: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10730: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 11681: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7512: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(24UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7514: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(80UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7520: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7524: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_init_zalloc(72UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7528: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_init_zalloc(72UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7534: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___11 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfb_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfb_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_fault to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_validate_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfb_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7417: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2056972 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1901276 (92%)
  Because of loop head:            155482 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         214 (0%)
  Times precision was empty:       1003724 (49%)
  Times precision was {false}:     2823 (0%)
  Times result was cached:         1049300 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1125 (0%)
  Times result was 'false':        1906 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         720615
  BDD entailment checks:           389999
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       76
Number of predicates discovered:          7
Number of abstraction locations:          183
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         3120326
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 790.36
Number of irrelevant predicates:          3055049 (98%)
Number of preds handled by boolean abs:   1960 (0%)
  Total number of models for allsat:      1483
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.32

Time for post operator:                213.402s
  Time for path formula creation:      209.197s
Time for strengthen operator:            7.965s
Time for prec operator:                157.065s
  Time for abstraction:                121.572s (Max:     2.174s, Count: 2056972)
    Boolean abstraction:                 3.414s
    Solving time:                        9.346s (Max:     0.101s)
    Model enumeration time:              0.776s
    Time for BDD construction:           0.055s (Max:     0.011s)
Time for merge operator:                 9.402s
Time for coverage check:                 0.420s
  Time for BDD entailment checks:        0.303s
Total time for SMT solver (w/o itp):    10.122s

Number of path formula cache hits:   7648491 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   149.864s

Total number of created targets for pointer analysis: 915665
   Number of created targets for uf: *signed_int is 159
   Number of created targets for uf: *unsigned_int is 115
   Number of created targets for uf: *unsigned_long_int is 1996


Number of BDD nodes:                               248
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2316 (count: 1414992, min: 0, max: 130, avg: 0.00)
Time for BDD node cleanup:                             0.254s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.664s
  Time for transition matches:                         6.176s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      8462722 (count: 8462722, min: 1, max: 1, avg: 1.00) [1 x 8462722]

CPA algorithm statistics
------------------------
Number of iterations:            6171490
Max size of waitlist:            175
Average size of waitlist:        103
Number of computed successors:   6725945
Max successors for one state:    2
Number of times merged:          165308
Number of times stopped:         543370
Number of times breaked:         214

Total time for CPA algorithm:       866.488s (Max:    13.325s)
  Time for choose from waitlist:      3.227s
  Time for precision adjustment:    207.694s
  Time for transfer relation:       605.007s
  Time for merge operator:           12.579s
  Time for stop operator:             8.188s
  Time for adding to reached set:    12.669s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   214
Avg. length of target path (in blocks):               21311 (count: 214, min: 56, max: 140, avg: 99.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  22.110s
  Counterexample analysis:                            11.136s (Max:     0.150s, Calls: 214)
    Refinement sat check:                              7.957s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.096s
  Precision update:                                    0.084s
  ARG update:                                         10.581s

Length of refined path (in blocks):                   20563 (count: 214, min: 50, max: 139, avg: 96.09)
Number of affected states:                             7168 (count: 214, min: 1, max: 113, avg: 33.50)
Length (states) of path with itp 'true':              13181 (count: 214, min: 0, max: 103, avg: 61.59)
Length (states) of path with itp non-trivial itp:      7168 (count: 214, min: 1, max: 113, avg: 33.50)
Length (states) of path with itp 'false':               214 (count: 214, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 214, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            6954 (count: 214, min: 0, max: 112, avg: 32.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                214
Number of successful refinements:     214
Number of failed refinements:         0
Max. size of reached set before ref.: 32058
Max. size of reached set after ref.:  3013
Avg. size of reached set before ref.: 29549.21
Avg. size of reached set after ref.:  789.01

Total time for CEGAR algorithm:     891.841s
Time for refinements:                25.237s
Average time for refinement:          0.117s
Max time for refinement:              0.446s

Code Coverage
-----------------------------
  Function coverage:      0.387
  Visited lines:          2211
  Total lines:            6568
  Line coverage:          0.337
  Visited conditions:     600
  Total conditions:       1756
  Condition coverage:     0.342

CPAchecker general statistics
-----------------------------
Number of program locations:     9333
Number of CFA edges:             11424
Number of relevant variables:    1112
Number of functions:             204
Number of loops:                 71
Size of reached set:             25985
  Number of reached locations:   1610 (17%)
    Avg states per location:     16
    Max states per location:     1156 (at node N146)
  Number of reached functions:   79 (39%)
  Number of partitions:          25943
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N3271 (before line 7559), Function main called from node N3176, stack depth 1 [69a90b81], stack [main]])
  Number of target states:       0
  Size of final wait list        159

Time for analysis setup:          8.439s
  Time for loading CPAs:          1.213s
  Time for loading parser:        0.704s
  Time for CFA construction:      6.368s
    Time for parsing file(s):     1.310s
    Time for AST to CFA:          2.235s
    Time for CFA sanity check:    0.832s
    Time for post-processing:     1.890s
      Time for var class.:        0.918s
Time for Analysis:              891.841s
CPU time for analysis:          891.800s
Total time for CPAchecker:      900.284s
Total CPU time for CPAchecker:  900.220s
Time for statistics:              0.686s

Time for Garbage Collector:      47.315s (in 806 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                943MB (   899 MiB) max;    487MB (   464 MiB) avg;    959MB (   915 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     40MB (    38 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:          1113MB (  1061 MiB) max;    707MB (   674 MiB) avg
Allocated non-heap memory:        49MB (    46 MiB) max;     48MB (    46 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8085MB (  7710 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
