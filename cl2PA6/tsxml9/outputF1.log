scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--video--fbdev--aty--radeonfb.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nww0l2i3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5658: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 5661: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 5667: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33642;
  case 2UL:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33642;
  case 4UL:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33642;
  case 8UL:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33642;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33642;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8837: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8856: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8875: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9058: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9096: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9135: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9158: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9181: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9204: Dead code detected: __ms___2 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9248: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9329: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9348: Dead code detected: __ms___1 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9367: Dead code detected: __ms___2 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9386: Dead code detected: __ms___3 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9405: Dead code detected: __ms___4 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9424: Dead code detected: __ms___5 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9492: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9511: Dead code detected: __ms___0 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9630: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9780: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9995: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10016: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10054: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10072: Dead code detected: __ms___0 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10107: Dead code detected: __ms___2 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10175: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10204: Dead code detected: __ms___0 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10223: Dead code detected: __ms___1 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10242: Dead code detected: __ms___2 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10261: Dead code detected: __ms___3 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10420: Dead code detected: __ms___0 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10446: Dead code detected: __ms___1 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10502: Dead code detected: __ms___2 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10711: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10730: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 11681: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7512: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(24UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7514: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(80UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7520: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7524: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_init_zalloc(72UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7528: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_init_zalloc(72UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7534: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___11 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfb_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfb_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_fault to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_validate_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfb_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7417: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2115242 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1955390 (92%)
  Because of loop head:            159632 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         220 (0%)
  Times precision was empty:       1046694 (49%)
  Times precision was {false}:     3031 (0%)
  Times result was cached:         1064056 (50%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1461 (0%)
  Times result was 'false':        1964 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         744585
  BDD entailment checks:           402067
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       76
Number of predicates discovered:          7
Number of abstraction locations:          183
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         3114802
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 693.41
Number of irrelevant predicates:          3046259 (98%)
Number of preds handled by boolean abs:   2457 (0%)
  Total number of models for allsat:      1764
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.21

Time for post operator:                216.614s
  Time for path formula creation:      212.488s
Time for strengthen operator:            7.430s
Time for prec operator:                158.878s
  Time for abstraction:                122.454s (Max:     0.183s, Count: 2115242)
    Boolean abstraction:                 4.700s
    Solving time:                       10.581s (Max:     0.101s)
    Model enumeration time:              0.993s
    Time for BDD construction:           0.066s (Max:     0.009s)
Time for merge operator:                10.269s
Time for coverage check:                 0.419s
  Time for BDD entailment checks:        0.290s
Total time for SMT solver (w/o itp):    11.574s

Number of path formula cache hits:   7921197 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   148.337s

Total number of created targets for pointer analysis: 955157
   Number of created targets for uf: *signed_int is 149
   Number of created targets for uf: *unsigned_int is 229
   Number of created targets for uf: *unsigned_long_int is 2017


Number of BDD nodes:                               250
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2989 (count: 1473113, min: 0, max: 234, avg: 0.00)
Time for BDD node cleanup:                             0.239s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.662s
  Time for transition matches:                         5.463s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                      8707874 (count: 8707874, min: 1, max: 1, avg: 1.00) [1 x 8707874]

CPA algorithm statistics
------------------------
Number of iterations:            6350758
Max size of waitlist:            182
Average size of waitlist:        108
Number of computed successors:   6922270
Max successors for one state:    2
Number of times merged:          171259
Number of times stopped:         559956
Number of times breaked:         220

Total time for CPA algorithm:       866.824s (Max:    12.422s)
  Time for choose from waitlist:      3.175s
  Time for precision adjustment:    204.594s
  Time for transfer relation:       609.125s
  Time for merge operator:           13.188s
  Time for stop operator:             7.256s
  Time for adding to reached set:    12.036s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   220
Avg. length of target path (in blocks):               22005 (count: 220, min: 56, max: 143, avg: 100.02)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  22.019s
  Counterexample analysis:                            10.779s (Max:     0.182s, Calls: 220)
    Refinement sat check:                              7.663s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.028s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.100s
  Precision update:                                    0.077s
  ARG update:                                         10.908s

Length of refined path (in blocks):                   21124 (count: 220, min: 50, max: 142, avg: 96.02)
Number of affected states:                             7302 (count: 220, min: 1, max: 130, avg: 33.19)
Length (states) of path with itp 'true':              13602 (count: 220, min: 0, max: 119, avg: 61.83)
Length (states) of path with itp non-trivial itp:      7302 (count: 220, min: 1, max: 130, avg: 33.19)
Length (states) of path with itp 'false':               220 (count: 220, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 220, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            7082 (count: 220, min: 0, max: 129, avg: 32.19)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                220
Number of successful refinements:     220
Number of failed refinements:         0
Max. size of reached set before ref.: 32108
Max. size of reached set after ref.:  1681
Avg. size of reached set before ref.: 29541.00
Avg. size of reached set after ref.:  753.48

Total time for CEGAR algorithm:     892.169s
Time for refinements:                25.221s
Average time for refinement:          0.114s
Max time for refinement:              0.405s

Code Coverage
-----------------------------
  Function coverage:      0.387
  Visited lines:          2211
  Total lines:            6568
  Line coverage:          0.337
  Visited conditions:     600
  Total conditions:       1756
  Condition coverage:     0.342

CPAchecker general statistics
-----------------------------
Number of program locations:     9333
Number of CFA edges:             11424
Number of relevant variables:    1112
Number of functions:             204
Number of loops:                 71
Size of reached set:             27096
  Number of reached locations:   1610 (17%)
    Avg states per location:     16
    Max states per location:     1204 (at node N146)
  Number of reached functions:   79 (39%)
  Number of partitions:          27050
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N3271 (before line 7559), Function main called from node N3176, stack depth 1 [2e4ecdf8], stack [main]])
  Number of target states:       0
  Size of final wait list        151

Time for analysis setup:          8.111s
  Time for loading CPAs:          1.149s
  Time for loading parser:        0.679s
  Time for CFA construction:      6.141s
    Time for parsing file(s):     1.314s
    Time for AST to CFA:          2.223s
    Time for CFA sanity check:    0.650s
    Time for post-processing:     1.772s
      Time for var class.:        0.835s
Time for Analysis:              892.169s
CPU time for analysis:          892.120s
Total time for CPAchecker:      900.283s
Total CPU time for CPAchecker:  900.210s
Time for statistics:              0.727s

Time for Garbage Collector:      48.498s (in 825 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                982MB (   936 MiB) max;    493MB (   470 MiB) avg;    994MB (   948 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1262MB (  1203 MiB) max;    722MB (   689 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8152MB (  7774 MiB) max;   8085MB (  7710 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
