scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--usb--host--r8a66597-hcd.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_mv3xs4qv/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4450: Function pointer *(r8a66597->pdata->port_power) with type void (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function clk_prepare to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function clk_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function clk_unprepare to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_check_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hub_find_child to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 7437: Unsupported feature (recursion): collect_usb_address_map(childdev, map); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            2563 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2404 (94%)
  Because of loop head:            154 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (0%)
  Times precision was empty:       2447 (95%)
  Times precision was {false}:     25 (1%)
  Times result was cached:         75 (3%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      16 (1%)
  Times result was 'false':        26 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         2357
  BDD entailment checks:           187
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       80
Number of predicates discovered:          2
Number of abstraction locations:          12
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         116
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.83
Number of irrelevant predicates:          58 (50%)
Number of preds handled by boolean abs:   16 (14%)
  Total number of models for allsat:      20
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.25

Time for post operator:                  2.681s
  Time for path formula creation:        2.595s
Time for strengthen operator:            0.107s
Time for prec operator:                  0.584s
  Time for abstraction:                  0.359s (Max:     0.031s, Count: 2563)
    Boolean abstraction:                 0.090s
    Solving time:                        0.068s (Max:     0.014s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.234s
Time for coverage check:                 0.067s
  Time for BDD entailment checks:        0.058s
Total time for SMT solver (w/o itp):     0.072s

Number of path formula cache hits:   3165 (21%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.415s

Total number of created targets for pointer analysis: 115
   Number of created targets for uf: *unsigned_short_int is 6
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *unsigned_char is 61
   Number of created targets for uf: *unsigned_long_int is 5


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          38 (count: 2869, min: 0, max: 28, avg: 0.01)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.167s
Automaton transfers with branching:                0
Automaton transfer successors:                        14505 (count: 14505, min: 1, max: 1, avg: 1.00) [1 x 14505]

CPA algorithm statistics
------------------------
Number of iterations:            9539
Max size of waitlist:            122
Average size of waitlist:        70
Number of computed successors:   11305
Max successors for one state:    2
Number of times merged:          1085
Number of times stopped:         1248
Number of times breaked:         5

Total time for CPA algorithm:         5.727s (Max:     2.038s)
  Time for choose from waitlist:      0.056s
  Time for precision adjustment:      1.001s
  Time for transfer relation:         3.721s
  Time for merge operator:            0.384s
  Time for stop operator:             0.146s
  Time for adding to reached set:     0.134s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                 765 (count: 5, min: 136, max: 160, avg: 153.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.507s
  Counterexample analysis:                             0.377s (Max:     0.089s, Calls: 5)
    Refinement sat check:                              0.186s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.002s
  ARG update:                                          0.096s

Length of refined path (in blocks):                     130 (count: 5, min: 26, max: 26, avg: 26.00)
Number of affected states:                               35 (count: 5, min: 7, max: 7, avg: 7.00)
Length (states) of path with itp 'true':                 90 (count: 5, min: 18, max: 18, avg: 18.00)
Length (states) of path with itp non-trivial itp:        35 (count: 5, min: 7, max: 7, avg: 7.00)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              30 (count: 5, min: 6, max: 6, avg: 6.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 2242
Max. size of reached set after ref.:  49
Avg. size of reached set before ref.: 1973.00
Avg. size of reached set after ref.:  49.00

Total time for CEGAR algorithm:       6.309s
Time for refinements:                 0.582s
Average time for refinement:          0.116s
Max time for refinement:              0.188s

Code Coverage
-----------------------------
  Function coverage:      0.123
  Visited lines:          997
  Total lines:            3862
  Line coverage:          0.258
  Visited conditions:     208
  Total conditions:       1232
  Condition coverage:     0.169

CPAchecker general statistics
-----------------------------
Number of program locations:     5558
Number of CFA edges:             6603
Number of relevant variables:    969
Number of functions:             203
Number of loops:                 39
Size of reached set:             412
  Number of reached locations:   375 (7%)
    Avg states per location:     1
    Max states per location:     6 (at node N39)
  Number of reached functions:   25 (12%)
  Number of partitions:          412
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        31

Time for analysis setup:          6.383s
  Time for loading CPAs:          1.131s
  Time for loading parser:        0.700s
  Time for CFA construction:      4.409s
    Time for parsing file(s):     1.097s
    Time for AST to CFA:          1.482s
    Time for CFA sanity check:    0.436s
    Time for post-processing:     1.257s
      Time for var class.:        0.584s
Time for Analysis:                6.309s
CPU time for analysis:            6.310s
Total time for CPAchecker:       12.705s
Total CPU time for CPAchecker:   12.690s
Time for statistics:              0.137s

Time for Garbage Collector:       0.430s (in 16 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 75MB (    71 MiB) max;     44MB (    42 MiB) avg;     79MB (    75 MiB) peak
Used non-heap memory:             43MB (    41 MiB) max;     33MB (    31 MiB) avg;     44MB (    42 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8056MB (  7683 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
