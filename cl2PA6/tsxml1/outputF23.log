scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--usb--host--r8a66597-hcd.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cljflip5/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4450: Function pointer *(r8a66597->pdata->port_power) with type void (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_create_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4450: Ignoring function call through function pointer *(r8a66597->pdata->port_power): (*(r8a66597->pdata->port_power))(port, power); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_unlink_urb_from_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_link_urb_to_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_check_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hub_find_child to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 7437: Unsupported feature (recursion): collect_usb_address_map(childdev, map); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            15844 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14625 (92%)
  Because of loop head:            1211 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8 (0%)
  Times precision was empty:       15580 (98%)
  Times precision was {false}:     34 (0%)
  Times result was cached:         177 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      53 (0%)
  Times result was 'false':        29 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         8222
  BDD entailment checks:           970
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       80
Number of predicates discovered:          3
Number of abstraction locations:          15
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         439
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 5.05
Number of irrelevant predicates:          188 (43%)
Number of preds handled by boolean abs:   72 (16%)
  Total number of models for allsat:      66
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.25

Time for post operator:                  5.553s
  Time for path formula creation:        5.325s
Time for strengthen operator:            0.254s
Time for prec operator:                  1.493s
  Time for abstraction:                  0.927s (Max:     0.030s, Count: 15844)
    Boolean abstraction:                 0.200s
    Solving time:                        0.148s (Max:     0.018s)
    Model enumeration time:              0.028s
    Time for BDD construction:           0.033s (Max:     0.011s)
Time for merge operator:                 0.404s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     0.176s

Number of path formula cache hits:   64710 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.901s

Total number of created targets for pointer analysis: 443
   Number of created targets for uf: *unsigned_short_int is 41
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *unsigned_char is 49
   Number of created targets for uf: *char is 153
   Number of created targets for uf: *unsigned_long_int is 5


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         120 (count: 17054, min: 0, max: 28, avg: 0.01)
Time for BDD node cleanup:                             0.025s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.530s
  Time for transition matches:                         0.236s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                        82679 (count: 82679, min: 1, max: 1, avg: 1.00) [1 x 82679]

CPA algorithm statistics
------------------------
Number of iterations:            51903
Max size of waitlist:            372
Average size of waitlist:        194
Number of computed successors:   58971
Max successors for one state:    2
Number of times merged:          3626
Number of times stopped:         4479
Number of times breaked:         8

Total time for CPA algorithm:        13.696s (Max:     2.737s)
  Time for choose from waitlist:      0.157s
  Time for precision adjustment:      2.536s
  Time for transfer relation:         8.577s
  Time for merge operator:            0.645s
  Time for stop operator:             0.276s
  Time for adding to reached set:     0.464s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                 318 (count: 8, min: 36, max: 42, avg: 39.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.576s
  Counterexample analysis:                             0.207s (Max:     0.033s, Calls: 8)
    Refinement sat check:                              0.133s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.072s
  Precision update:                                    0.016s
  ARG update:                                          0.266s

Length of refined path (in blocks):                     226 (count: 8, min: 26, max: 29, avg: 28.25)
Number of affected states:                               74 (count: 8, min: 7, max: 10, avg: 9.25)
Length (states) of path with itp 'true':                144 (count: 8, min: 18, max: 18, avg: 18.00)
Length (states) of path with itp non-trivial itp:        74 (count: 8, min: 7, max: 10, avg: 9.25)
Length (states) of path with itp 'false':                 8 (count: 8, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              66 (count: 8, min: 6, max: 9, avg: 8.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 8035
Max. size of reached set after ref.:  49
Avg. size of reached set before ref.: 6056.50
Avg. size of reached set after ref.:  49.00

Total time for CEGAR algorithm:      14.409s
Time for refinements:                 0.712s
Average time for refinement:          0.089s
Max time for refinement:              0.167s

Code Coverage
-----------------------------
  Function coverage:      0.360
  Visited lines:          1686
  Total lines:            3862
  Line coverage:          0.437
  Visited conditions:     400
  Total conditions:       1232
  Condition coverage:     0.325

CPAchecker general statistics
-----------------------------
Number of program locations:     5558
Number of CFA edges:             6603
Number of relevant variables:    969
Number of functions:             203
Number of loops:                 39
Size of reached set:             6404
  Number of reached locations:   929 (17%)
    Avg states per location:     6
    Max states per location:     130 (at node N262)
  Number of reached functions:   73 (36%)
  Number of partitions:          6396
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N4486 (before line 8944), Function main called from node N4443, stack depth 1 [58a2b917], stack [main]])
  Number of target states:       0
  Size of final wait list        324

Time for analysis setup:          6.283s
  Time for loading CPAs:          1.021s
  Time for loading parser:        0.681s
  Time for CFA construction:      4.432s
    Time for parsing file(s):     1.019s
    Time for AST to CFA:          1.609s
    Time for CFA sanity check:    0.452s
    Time for post-processing:     1.252s
      Time for var class.:        0.568s
Time for Analysis:               14.409s
CPU time for analysis:           14.410s
Total time for CPAchecker:       20.694s
Total CPU time for CPAchecker:   20.680s
Time for statistics:              0.256s

Time for Garbage Collector:       0.611s (in 31 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 93MB (    89 MiB) max;     52MB (    50 MiB) avg;    100MB (    95 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     32MB (    31 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8066MB (  7693 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
