scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--net--ethernet--hp--hp100.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_f_m3stsq/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5669: Dead code detected: __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5672: Dead code detected: __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5678: Dead code detected: __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6106;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6106;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6106;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6106;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6340: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7550: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8455: Dead code detected: tmp___4 = preempt_count(); (CFACreationUtils.addEdgeToCFA, INFO)

line 8456: Dead code detected: [!((((unsigned long)tmp___4) & 2096896UL) == 0UL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8457: Dead code detected: schedule_timeout_interruptible(1L); (CFACreationUtils.addEdgeToCFA, INFO)

line 8461: Dead code detected: [((long)(((unsigned long)jiffies) - time)) < 0L] (CFACreationUtils.addEdgeToCFA, INFO)

line 8461: Dead code detected: [!(((long)(((unsigned long)jiffies) - time)) < 0L)] (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 6014-6015: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6048: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 8966: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 8970: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 8972: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 6014-6015: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)0L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_trans_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6048: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_free_attrs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            686638 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  619951 (90%)
  Because of loop head:            66383 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         304 (0%)
  Times precision was empty:       324741 (47%)
  Times precision was {false}:     6644 (1%)
  Times result was cached:         333081 (49%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      22172 (3%)
  Times result was 'false':        36279 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         432176
  BDD entailment checks:           167932
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          103
Number of abstraction locations:          333
Max number of predicates per location:    45
Avg number of predicates per location:    10
Total predicates per abstraction:         4874442
Max number of predicates per abstraction: 45
Avg number of predicates per abstraction: 169.16
Number of irrelevant predicates:          3229246 (66%)
Number of preds handled by boolean abs:   234225 (5%)
  Total number of models for allsat:      2323580
  Max number of models for allsat:        16800
  Avg number of models for allsat:        104.80

Time for post operator:                 55.068s
  Time for path formula creation:       52.891s
Time for strengthen operator:            2.999s
Time for prec operator:                620.986s
  Time for abstraction:                611.298s (Max:     4.029s, Count: 686638)
    Boolean abstraction:               424.053s
    Solving time:                       36.232s (Max:     0.030s)
    Model enumeration time:            285.398s
    Time for BDD construction:          99.644s (Max:     1.044s)
Time for merge operator:                 3.122s
Time for coverage check:                 0.357s
  Time for BDD entailment checks:        0.302s
Total time for SMT solver (w/o itp):   321.630s

Number of path formula cache hits:   2426842 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    42.185s

Total number of created targets for pointer analysis: 51257
   Number of created targets for uf: *(void)* is 62
   Number of created targets for uf: *unsigned_short_int is 123
   Number of created targets for uf: *signed_int is 375
   Number of created targets for uf: *unsigned_char is 2229
   Number of created targets for uf: *(unsigned_char)* is 584
   Number of created targets for uf: *unsigned_int is 769
   Number of created targets for uf: *char is 417


Number of BDD nodes:                               46234
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      200951 (count: 725651, min: 0, max: 9236, avg: 0.28)
Time for BDD node cleanup:                             0.174s
Time for BDD garbage collection:                       0.417s (in 128 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.855s
  Time for transition matches:                         2.912s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      3163459 (count: 3163459, min: 1, max: 1, avg: 1.00) [1 x 3163459]

CPA algorithm statistics
------------------------
Number of iterations:            2192209
Max size of waitlist:            200
Average size of waitlist:        82
Number of computed successors:   2483156
Max successors for one state:    2
Number of times merged:          132122
Number of times stopped:         227712
Number of times breaked:         304

Total time for CPA algorithm:       780.015s (Max:    82.258s)
  Time for choose from waitlist:      1.266s
  Time for precision adjustment:    641.433s
  Time for transfer relation:       116.130s
  Time for merge operator:            5.349s
  Time for stop operator:             3.614s
  Time for adding to reached set:     4.606s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   304
Avg. length of target path (in blocks):              138942 (count: 304, min: 51, max: 1308, avg: 457.05)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 111.202s
  Counterexample analysis:                           105.827s (Max:     2.957s, Calls: 304)
    Refinement sat check:                             16.928s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.078s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.450s
  Precision update:                                    0.491s
  ARG update:                                          3.777s

Length of refined path (in blocks):                   70720 (count: 303, min: 16, max: 1002, avg: 233.40)
Number of affected states:                            57572 (count: 303, min: 0, max: 976, avg: 190.01)
Length (states) of path with itp 'true':              12845 (count: 303, min: 0, max: 672, avg: 42.39)
Length (states) of path with itp non-trivial itp:     57572 (count: 303, min: 0, max: 976, avg: 190.01)
Length (states) of path with itp 'false':               303 (count: 303, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         695 (count: 303, min: 0, max: 14, avg: 2.29)
Equal non-trivial interpolants along paths:           56575 (count: 303, min: 0, max: 963, avg: 186.72)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                304
Number of successful refinements:     303
Number of failed refinements:         0
Max. size of reached set before ref.: 19757
Max. size of reached set after ref.:  8993
Avg. size of reached set before ref.: 7794.21
Avg. size of reached set after ref.:  495.96

Total time for CEGAR algorithm:     893.956s
Time for refinements:               113.837s
Average time for refinement:          0.374s
Max time for refinement:              3.035s

Code Coverage
-----------------------------
  Function coverage:      0.620
  Visited lines:          2486
  Total lines:            3183
  Line coverage:          0.781
  Visited conditions:     545
  Total conditions:       744
  Condition coverage:     0.733

CPAchecker general statistics
-----------------------------
Number of program locations:     4320
Number of CFA edges:             5085
Number of relevant variables:    554
Number of functions:             137
Number of loops:                 35
Size of reached set:             19757
  Number of reached locations:   1639 (38%)
    Avg states per location:     12
    Max states per location:     831 (at node N161)
  Number of reached functions:   85 (62%)
  Number of partitions:          19518
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N1023 (before line 6915), Function hp100_mmuinit called from node N892, stack depth 5 [10439d93], stack [main, hp100_pci_probe, hp100_probe1, hp100_hwinit, hp100_mmuinit]])
  Number of target states:       1
  Size of final wait list        184

Time for analysis setup:          6.286s
  Time for loading CPAs:          0.985s
  Time for loading parser:        0.684s
  Time for CFA construction:      4.505s
    Time for parsing file(s):     1.106s
    Time for AST to CFA:          1.609s
    Time for CFA sanity check:    0.381s
    Time for post-processing:     1.228s
      Time for var class.:        0.532s
Time for Analysis:              893.956s
CPU time for analysis:          893.840s
Total time for CPAchecker:      900.247s
Total CPU time for CPAchecker:  900.120s
Time for statistics:              0.438s

Time for Garbage Collector:      25.573s (in 771 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                604MB (   576 MiB) max;    359MB (   343 MiB) avg;    612MB (   584 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           748MB (   714 MiB) max;    545MB (   519 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   9233MB (  8805 MiB) max;   8560MB (  8163 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
