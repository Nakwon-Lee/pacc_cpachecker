scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--net--ethernet--hp--hp100.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_90ndfo9r/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5669: Dead code detected: __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5672: Dead code detected: __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5678: Dead code detected: __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6106;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6106;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6106;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6106;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6340: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7550: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8455: Dead code detected: tmp___4 = preempt_count(); (CFACreationUtils.addEdgeToCFA, INFO)

line 8456: Dead code detected: [!((((unsigned long)tmp___4) & 2096896UL) == 0UL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8457: Dead code detected: schedule_timeout_interruptible(1L); (CFACreationUtils.addEdgeToCFA, INFO)

line 8461: Dead code detected: [((long)(((unsigned long)jiffies) - time)) < 0L] (CFACreationUtils.addEdgeToCFA, INFO)

line 8461: Dead code detected: [!(((long)(((unsigned long)jiffies) - time)) < 0L)] (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 6014-6015: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6048: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 8966: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 8970: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 8972: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6048: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_free_attrs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_alloc_attrs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_trans_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3784461 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3522441 (93%)
  Because of loop head:            261645 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         375 (0%)
  Times precision was empty:       2238863 (59%)
  Times precision was {false}:     2295 (0%)
  Times result was cached:         1537867 (41%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5436 (0%)
  Times result was 'false':        45512 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1293124
  BDD entailment checks:           640946
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          22
Number of abstraction locations:          209
Max number of predicates per location:    12
Avg number of predicates per location:    5
Total predicates per abstraction:         9874710
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 1277.29
Number of irrelevant predicates:          8675331 (88%)
Number of preds handled by boolean abs:   22013 (0%)
  Total number of models for allsat:      6132
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.13

Time for post operator:                 93.251s
  Time for path formula creation:       87.407s
Time for strengthen operator:           12.486s
Time for prec operator:                279.106s
  Time for abstraction:                240.226s (Max:     1.734s, Count: 3784461)
    Boolean abstraction:                 4.731s
    Solving time:                        4.395s (Max:     0.014s)
    Model enumeration time:              0.581s
    Time for BDD construction:           0.188s (Max:     0.013s)
Time for merge operator:                 2.823s
Time for coverage check:                 0.644s
  Time for BDD entailment checks:        0.425s
Total time for SMT solver (w/o itp):     4.976s

Number of path formula cache hits:   17941110 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    35.672s

Total number of created targets for pointer analysis: 11347
   Number of created targets for uf: *(void)* is 163
   Number of created targets for uf: *unsigned_short_int is 325
   Number of created targets for uf: *signed_int is 17
   Number of created targets for uf: *unsigned_char is 741
   Number of created targets for uf: *unsigned_long_long_int is 91
   Number of created targets for uf: *char is 113
   Number of created targets for uf: *unsigned_int is 1605


Number of BDD nodes:                               2676
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       12730 (count: 2925621, min: 0, max: 351, avg: 0.00)
Time for BDD node cleanup:                             0.408s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 19.458s
  Time for transition matches:                        10.861s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                     15240005 (count: 15240005, min: 1, max: 1, avg: 1.00) [1 x 15240005]

CPA algorithm statistics
------------------------
Number of iterations:            10601158
Max size of waitlist:            51
Average size of waitlist:        20
Number of computed successors:   11502526
Max successors for one state:    2
Number of times merged:          326089
Number of times stopped:         844121
Number of times breaked:         375

Total time for CPA algorithm:       827.492s (Max:    18.475s)
  Time for choose from waitlist:      3.651s
  Time for precision adjustment:    363.232s
  Time for transfer relation:       399.345s
  Time for merge operator:            7.326s
  Time for stop operator:            11.048s
  Time for adding to reached set:    15.920s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   375
Avg. length of target path (in blocks):               50919 (count: 375, min: 54, max: 337, avg: 135.78)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  36.523s
  Counterexample analysis:                            13.845s (Max:     0.123s, Calls: 375)
    Refinement sat check:                              6.088s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.025s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.126s
  Precision update:                                    0.263s
  ARG update:                                         22.013s

Length of refined path (in blocks):                   27232 (count: 375, min: 16, max: 261, avg: 72.62)
Number of affected states:                            14935 (count: 375, min: 0, max: 259, avg: 39.83)
Length (states) of path with itp 'true':              11922 (count: 375, min: 0, max: 248, avg: 31.79)
Length (states) of path with itp non-trivial itp:     14935 (count: 375, min: 0, max: 259, avg: 39.83)
Length (states) of path with itp 'false':               375 (count: 375, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         138 (count: 375, min: 0, max: 3, avg: 0.37)
Equal non-trivial interpolants along paths:           14423 (count: 375, min: 0, max: 257, avg: 38.46)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                375
Number of successful refinements:     375
Number of failed refinements:         0
Max. size of reached set before ref.: 177916
Max. size of reached set after ref.:  156312
Avg. size of reached set before ref.: 66391.27
Avg. size of reached set after ref.:  38113.63

Total time for CEGAR algorithm:     894.196s
Time for refinements:                54.797s
Average time for refinement:          0.146s
Max time for refinement:              1.608s

Code Coverage
-----------------------------
  Function coverage:      0.328
  Visited lines:          2112
  Total lines:            3183
  Line coverage:          0.664
  Visited conditions:     432
  Total conditions:       744
  Condition coverage:     0.581

CPAchecker general statistics
-----------------------------
Number of program locations:     4320
Number of CFA edges:             5085
Number of relevant variables:    554
Number of functions:             137
Number of loops:                 35
Size of reached set:             8777
  Number of reached locations:   1225 (28%)
    Avg states per location:     7
    Max states per location:     408 (at node N166)
  Number of reached functions:   45 (33%)
  Number of partitions:          8593
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N633 (before line 6550), Function hp100_probe1 called from node N2730, stack depth 3 [628fa329], stack [main, hp100_pci_probe, hp100_probe1]])
  Number of target states:       0
  Size of final wait list        21

Time for analysis setup:          6.028s
  Time for loading CPAs:          0.942s
  Time for loading parser:        0.708s
  Time for CFA construction:      4.203s
    Time for parsing file(s):     1.075s
    Time for AST to CFA:          1.508s
    Time for CFA sanity check:    0.377s
    Time for post-processing:     1.061s
      Time for var class.:        0.489s
Time for Analysis:              894.196s
CPU time for analysis:          894.140s
Total time for CPAchecker:      900.228s
Total CPU time for CPAchecker:  900.170s
Time for statistics:              0.240s

Time for Garbage Collector:     106.772s (in 2090 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                864MB (   824 MiB) max;    329MB (   314 MiB) avg;    924MB (   881 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           981MB (   935 MiB) max;    479MB (   457 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8152MB (  7774 MiB) max;   8110MB (  7735 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
