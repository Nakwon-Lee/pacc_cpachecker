scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--net--ethernet--hp--hp100.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rm4p8ev_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5669: Dead code detected: __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5672: Dead code detected: __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5678: Dead code detected: __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6106;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6106;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6106;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6106;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6340: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7550: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8455: Dead code detected: tmp___4 = preempt_count(); (CFACreationUtils.addEdgeToCFA, INFO)

line 8456: Dead code detected: [!((((unsigned long)tmp___4) & 2096896UL) == 0UL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8457: Dead code detected: schedule_timeout_interruptible(1L); (CFACreationUtils.addEdgeToCFA, INFO)

line 8461: Dead code detected: [((long)(((unsigned long)jiffies) - time)) < 0L] (CFACreationUtils.addEdgeToCFA, INFO)

line 8461: Dead code detected: [!(((long)(((unsigned long)jiffies) - time)) < 0L)] (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 6014-6015: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6048: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 8966: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 8970: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 8972: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_trans_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_free_attrs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 6014-6015: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)0L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_alloc_attrs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6048: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5188365 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4784665 (92%)
  Because of loop head:            403629 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         71 (0%)
  Times precision was empty:       5162486 (100%)
  Times precision was {false}:     636 (0%)
  Times result was cached:         24538 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      705 (0%)
  Times result was 'false':        2718 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1806955
  BDD entailment checks:           880149
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          9
Number of abstraction locations:          42
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         69857
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 52.09
Number of irrelevant predicates:          52265 (75%)
Number of preds handled by boolean abs:   1635 (2%)
  Total number of models for allsat:      957
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.36

Time for post operator:                133.616s
  Time for path formula creation:      123.536s
Time for strengthen operator:           15.751s
Time for prec operator:                 67.028s
  Time for abstraction:                 17.395s (Max:     0.309s, Count: 5188365)
    Boolean abstraction:                 0.844s
    Solving time:                        0.755s (Max:     0.016s)
    Model enumeration time:              0.128s
    Time for BDD construction:           0.043s (Max:     0.008s)
Time for merge operator:                 3.498s
Time for coverage check:                 0.871s
  Time for BDD entailment checks:        0.626s
Total time for SMT solver (w/o itp):     0.883s

Number of path formula cache hits:   24359278 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    58.183s

Total number of created targets for pointer analysis: 39314
   Number of created targets for uf: *(void)* is 22
   Number of created targets for uf: *unsigned_short_int is 43
   Number of created targets for uf: *unsigned_char is 221
   Number of created targets for uf: *(unsigned_char)* is 577
   Number of created targets for uf: *unsigned_int is 709
   Number of created targets for uf: *char is 330


Number of BDD nodes:                               1051
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2044 (count: 6050536, min: 0, max: 144, avg: 0.00)
Time for BDD node cleanup:                             0.804s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 24.603s
  Time for transition matches:                        11.786s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                     21191178 (count: 21191178, min: 1, max: 1, avg: 1.00) [1 x 21191178]

CPA algorithm statistics
------------------------
Number of iterations:            14669892
Max size of waitlist:            2150
Average size of waitlist:        790
Number of computed successors:   16021046
Max successors for one state:    2
Number of times merged:          463403
Number of times stopped:         1318462
Number of times breaked:         71

Total time for CPA algorithm:       842.388s (Max:    26.491s)
  Time for choose from waitlist:      4.964s
  Time for precision adjustment:    191.639s
  Time for transfer relation:       560.826s
  Time for merge operator:            9.198s
  Time for stop operator:            17.222s
  Time for adding to reached set:    22.437s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   71
Avg. length of target path (in blocks):                5785 (count: 71, min: 44, max: 210, avg: 81.48)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  42.399s
  Counterexample analysis:                             1.220s (Max:     0.051s, Calls: 71)
    Refinement sat check:                              0.669s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.030s
  Precision update:                                    0.020s
  ARG update:                                         41.059s

Length of refined path (in blocks):                    1764 (count: 71, min: 16, max: 36, avg: 24.85)
Number of affected states:                              663 (count: 71, min: 0, max: 22, avg: 9.34)
Length (states) of path with itp 'true':               1030 (count: 71, min: 0, max: 30, avg: 14.51)
Length (states) of path with itp non-trivial itp:       663 (count: 71, min: 0, max: 22, avg: 9.34)
Length (states) of path with itp 'false':                71 (count: 71, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          28 (count: 71, min: 0, max: 3, avg: 0.39)
Equal non-trivial interpolants along paths:             570 (count: 71, min: 0, max: 20, avg: 8.03)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                71
Number of successful refinements:     71
Number of failed refinements:         0
Max. size of reached set before ref.: 344367
Max. size of reached set after ref.:  105966
Avg. size of reached set before ref.: 219116.68
Avg. size of reached set after ref.:  12512.93

Total time for CEGAR algorithm:     894.275s
Time for refinements:                51.099s
Average time for refinement:          0.719s
Max time for refinement:              5.144s

Code Coverage
-----------------------------
  Function coverage:      0.774
  Visited lines:          2829
  Total lines:            3183
  Line coverage:          0.889
  Visited conditions:     644
  Total conditions:       744
  Condition coverage:     0.866

CPAchecker general statistics
-----------------------------
Number of program locations:     4320
Number of CFA edges:             5085
Number of relevant variables:    554
Number of functions:             137
Number of loops:                 35
Size of reached set:             31000
  Number of reached locations:   1981 (46%)
    Avg states per location:     15
    Max states per location:     1336 (at node N167)
  Number of reached functions:   106 (77%)
  Number of partitions:          30982
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N2965 (before line 8984), Function main called from node N2927, stack depth 1 [64f1fd08], stack [main]])
  Number of target states:       0
  Size of final wait list        313

Time for analysis setup:          6.163s
  Time for loading CPAs:          1.020s
  Time for loading parser:        0.641s
  Time for CFA construction:      4.388s
    Time for parsing file(s):     1.063s
    Time for AST to CFA:          1.575s
    Time for CFA sanity check:    0.330s
    Time for post-processing:     1.227s
      Time for var class.:        0.526s
Time for Analysis:              894.275s
CPU time for analysis:          894.240s
Total time for CPAchecker:      900.447s
Total CPU time for CPAchecker:  900.400s
Time for statistics:              0.524s

Time for Garbage Collector:     159.793s (in 763 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1924MB (  1835 MiB) max;    886MB (   845 MiB) avg;   1988MB (  1896 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1932MB (  1843 MiB) max;   1299MB (  1239 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8084MB (  7709 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
