scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--net--ethernet--hp--hp100.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wdntjh4y/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5669: Dead code detected: __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5672: Dead code detected: __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5678: Dead code detected: __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6106;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6106;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6106;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6106;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6340: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7550: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8455: Dead code detected: tmp___4 = preempt_count(); (CFACreationUtils.addEdgeToCFA, INFO)

line 8456: Dead code detected: [!((((unsigned long)tmp___4) & 2096896UL) == 0UL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8457: Dead code detected: schedule_timeout_interruptible(1L); (CFACreationUtils.addEdgeToCFA, INFO)

line 8461: Dead code detected: [((long)(((unsigned long)jiffies) - time)) < 0L] (CFACreationUtils.addEdgeToCFA, INFO)

line 8461: Dead code detected: [!(((long)(((unsigned long)jiffies) - time)) < 0L)] (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 6014-6015: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6048: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 8966: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 8970: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 8972: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_alloc_attrs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_free_attrs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_trans_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3312969 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3064695 (93%)
  Because of loop head:            248098 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         176 (0%)
  Times precision was empty:       892716 (27%)
  Times precision was {false}:     5681 (0%)
  Times result was cached:         2405801 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8771 (0%)
  Times result was 'false':        60886 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1118552
  BDD entailment checks:           497312
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          14
Number of abstraction locations:          367
Max number of predicates per location:    7
Avg number of predicates per location:    2
Total predicates per abstraction:         4686967
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 324.31
Number of irrelevant predicates:          3838037 (82%)
Number of preds handled by boolean abs:   13763 (0%)
  Total number of models for allsat:      9852
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.12

Time for post operator:                200.056s
  Time for path formula creation:      192.802s
Time for strengthen operator:           11.603s
Time for prec operator:                229.919s
  Time for abstraction:                183.123s (Max:     2.819s, Count: 3312969)
    Boolean abstraction:                 6.168s
    Solving time:                        6.784s (Max:     0.025s)
    Model enumeration time:              0.791s
    Time for BDD construction:           0.171s (Max:     0.008s)
Time for merge operator:                 6.629s
Time for coverage check:                 0.660s
  Time for BDD entailment checks:        0.486s
Total time for SMT solver (w/o itp):     7.575s

Number of path formula cache hits:   12691611 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   114.891s

Total number of created targets for pointer analysis: 92052
   Number of created targets for uf: *(void)* is 360
   Number of created targets for uf: *unsigned_short_int is 719
   Number of created targets for uf: *signed_int is 1199
   Number of created targets for uf: *unsigned_char is 2933
   Number of created targets for uf: *unsigned_long_long_int is 1119
   Number of created targets for uf: *char is 4225
   Number of created targets for uf: *unsigned_int is 549


Number of BDD nodes:                               764
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       17796 (count: 1474750, min: 0, max: 1407, avg: 0.01)
Time for BDD node cleanup:                             0.236s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 18.409s
  Time for transition matches:                        10.426s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     13691201 (count: 13691201, min: 1, max: 1, avg: 1.00) [1 x 13691201]

CPA algorithm statistics
------------------------
Number of iterations:            9435240
Max size of waitlist:            682
Average size of waitlist:        194
Number of computed successors:   10303248
Max successors for one state:    2
Number of times merged:          310620
Number of times stopped:         779284
Number of times breaked:         176

Total time for CPA algorithm:       853.705s (Max:    25.181s)
  Time for choose from waitlist:      4.020s
  Time for precision adjustment:    312.974s
  Time for transfer relation:       472.425s
  Time for merge operator:           11.099s
  Time for stop operator:            11.306s
  Time for adding to reached set:    16.858s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   176
Avg. length of target path (in blocks):               41434 (count: 176, min: 79, max: 896, avg: 235.42)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  33.935s
  Counterexample analysis:                            13.936s (Max:     0.752s, Calls: 176)
    Refinement sat check:                              4.364s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.024s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.186s
  Precision update:                                    0.132s
  ARG update:                                         19.414s

Length of refined path (in blocks):                   27539 (count: 176, min: 16, max: 569, avg: 156.47)
Number of affected states:                            22004 (count: 176, min: 0, max: 567, avg: 125.02)
Length (states) of path with itp 'true':               5359 (count: 176, min: 1, max: 289, avg: 30.45)
Length (states) of path with itp non-trivial itp:     22004 (count: 176, min: 0, max: 567, avg: 125.02)
Length (states) of path with itp 'false':               176 (count: 176, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          25 (count: 176, min: 0, max: 2, avg: 0.14)
Equal non-trivial interpolants along paths:           21804 (count: 176, min: 0, max: 564, avg: 123.89)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                176
Number of successful refinements:     176
Number of failed refinements:         0
Max. size of reached set before ref.: 202111
Max. size of reached set after ref.:  72956
Avg. size of reached set before ref.: 56957.90
Avg. size of reached set after ref.:  3693.60

Total time for CEGAR algorithm:     893.872s
Time for refinements:                39.656s
Average time for refinement:          0.225s
Max time for refinement:              1.326s

Code Coverage
-----------------------------
  Function coverage:      0.606
  Visited lines:          2572
  Total lines:            3183
  Line coverage:          0.808
  Visited conditions:     555
  Total conditions:       744
  Condition coverage:     0.746

CPAchecker general statistics
-----------------------------
Number of program locations:     4320
Number of CFA edges:             5085
Number of relevant variables:    554
Number of functions:             137
Number of loops:                 35
Size of reached set:             88562
  Number of reached locations:   1666 (39%)
    Avg states per location:     53
    Max states per location:     4224 (at node N167)
  Number of reached functions:   83 (61%)
  Number of partitions:          88298
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N2965 (before line 8984), Function main called from node N2927, stack depth 1 [64f1fd08], stack [main]])
  Number of target states:       0
  Size of final wait list        429

Time for analysis setup:          6.400s
  Time for loading CPAs:          1.006s
  Time for loading parser:        0.728s
  Time for CFA construction:      4.504s
    Time for parsing file(s):     1.150s
    Time for AST to CFA:          1.651s
    Time for CFA sanity check:    0.364s
    Time for post-processing:     1.155s
      Time for var class.:        0.482s
Time for Analysis:              893.873s
CPU time for analysis:          893.820s
Total time for CPAchecker:      900.277s
Total CPU time for CPAchecker:  900.210s
Time for statistics:              1.292s

Time for Garbage Collector:      98.501s (in 849 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2331MB (  2223 MiB) max;    830MB (   791 MiB) avg;   2398MB (  2287 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     40MB (    39 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:          2478MB (  2363 MiB) max;   1193MB (  1138 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8221MB (  7840 MiB) max;   8110MB (  7734 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
