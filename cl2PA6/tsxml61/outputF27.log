scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--net--ethernet--hp--hp100.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cfz41yra/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5669: Dead code detected: __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5672: Dead code detected: __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5678: Dead code detected: __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6106;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6106;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6106;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6106;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6340: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7550: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8455: Dead code detected: tmp___4 = preempt_count(); (CFACreationUtils.addEdgeToCFA, INFO)

line 8456: Dead code detected: [!((((unsigned long)tmp___4) & 2096896UL) == 0UL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8457: Dead code detected: schedule_timeout_interruptible(1L); (CFACreationUtils.addEdgeToCFA, INFO)

line 8461: Dead code detected: [((long)(((unsigned long)jiffies) - time)) < 0L] (CFACreationUtils.addEdgeToCFA, INFO)

line 8461: Dead code detected: [!(((long)(((unsigned long)jiffies) - time)) < 0L)] (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 6014-6015: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6048: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 8966: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 8970: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 8972: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_trans_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_free_attrs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 6014-6015: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)0L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_alloc_attrs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6048: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4306091 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3968684 (92%)
  Because of loop head:            337350 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         57 (0%)
  Times precision was empty:       4285733 (100%)
  Times precision was {false}:     1882 (0%)
  Times result was cached:         16830 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1646 (0%)
  Times result was 'false':        2842 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1504308
  BDD entailment checks:           732630
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          14
Number of abstraction locations:          43
Max number of predicates per location:    11
Avg number of predicates per location:    5
Total predicates per abstraction:         82277
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 23.32
Number of irrelevant predicates:          54125 (66%)
Number of preds handled by boolean abs:   6438 (8%)
  Total number of models for allsat:      3612
  Max number of models for allsat:        20
  Avg number of models for allsat:        2.19

Time for post operator:                196.738s
  Time for path formula creation:      187.665s
Time for strengthen operator:           14.810s
Time for prec operator:                 67.350s
  Time for abstraction:                 21.537s (Max:     0.629s, Count: 4306091)
    Boolean abstraction:                 2.300s
    Solving time:                        1.938s (Max:     0.016s)
    Model enumeration time:              0.505s
    Time for BDD construction:           0.159s (Max:     0.012s)
Time for merge operator:                 4.812s
Time for coverage check:                 0.810s
  Time for BDD entailment checks:        0.536s
Total time for SMT solver (w/o itp):     2.443s

Number of path formula cache hits:   17058501 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   126.343s

Total number of created targets for pointer analysis: 78389
   Number of created targets for uf: *(void)* is 49
   Number of created targets for uf: *unsigned_short_int is 97
   Number of created targets for uf: *unsigned_char is 433
   Number of created targets for uf: *(unsigned_char)* is 1381
   Number of created targets for uf: *unsigned_int is 1676
   Number of created targets for uf: *char is 729


Number of BDD nodes:                               3645
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5242 (count: 5038994, min: 0, max: 314, avg: 0.00)
Time for BDD node cleanup:                             0.818s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 33.405s
  Time for transition matches:                        14.747s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                     17589701 (count: 17589701, min: 1, max: 1, avg: 1.00) [1 x 17589701]

CPA algorithm statistics
------------------------
Number of iterations:            12179737
Max size of waitlist:            1167
Average size of waitlist:        438
Number of computed successors:   13307268
Max successors for one state:    2
Number of times merged:          385839
Number of times stopped:         1103716
Number of times breaked:         57

Total time for CPA algorithm:       854.211s (Max:    33.125s)
  Time for choose from waitlist:      6.424s
  Time for precision adjustment:    177.997s
  Time for transfer relation:       567.448s
  Time for merge operator:           12.642s
  Time for stop operator:            17.786s
  Time for adding to reached set:    34.113s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   57
Avg. length of target path (in blocks):                4705 (count: 57, min: 44, max: 230, avg: 82.54)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  33.443s
  Counterexample analysis:                             1.182s (Max:     0.054s, Calls: 57)
    Refinement sat check:                              0.647s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.038s
  Precision update:                                    0.036s
  ARG update:                                         32.129s

Length of refined path (in blocks):                    1580 (count: 57, min: 16, max: 38, avg: 27.72)
Number of affected states:                             1171 (count: 57, min: 0, max: 37, avg: 20.54)
Length (states) of path with itp 'true':                352 (count: 57, min: 0, max: 16, avg: 6.18)
Length (states) of path with itp non-trivial itp:      1171 (count: 57, min: 0, max: 37, avg: 20.54)
Length (states) of path with itp 'false':                57 (count: 57, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          42 (count: 57, min: 0, max: 3, avg: 0.74)
Equal non-trivial interpolants along paths:            1073 (count: 57, min: 0, max: 35, avg: 18.82)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                57
Number of successful refinements:     57
Number of failed refinements:         0
Max. size of reached set before ref.: 404245
Max. size of reached set after ref.:  59654
Avg. size of reached set before ref.: 214064.77
Avg. size of reached set after ref.:  1068.04

Total time for CEGAR algorithm:     894.063s
Time for refinements:                39.794s
Average time for refinement:          0.698s
Max time for refinement:              1.599s

Code Coverage
-----------------------------
  Function coverage:      0.642
  Visited lines:          2651
  Total lines:            3183
  Line coverage:          0.833
  Visited conditions:     579
  Total conditions:       744
  Condition coverage:     0.778

CPAchecker general statistics
-----------------------------
Number of program locations:     4320
Number of CFA edges:             5085
Number of relevant variables:    554
Number of functions:             137
Number of loops:                 35
Size of reached set:             59897
  Number of reached locations:   1806 (42%)
    Avg states per location:     33
    Max states per location:     2933 (at node N161)
  Number of reached functions:   88 (64%)
  Number of partitions:          59858
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N3121 (after line 9144), Function main called from node N2927, stack depth 1 [64f1fd08], stack [main]])
  Number of target states:       0
  Size of final wait list        351

Time for analysis setup:          6.220s
  Time for loading CPAs:          1.065s
  Time for loading parser:        0.721s
  Time for CFA construction:      4.324s
    Time for parsing file(s):     1.186s
    Time for AST to CFA:          1.520s
    Time for CFA sanity check:    0.345s
    Time for post-processing:     1.052s
      Time for var class.:        0.457s
Time for Analysis:              894.063s
CPU time for analysis:          894.020s
Total time for CPAchecker:      900.294s
Total CPU time for CPAchecker:  900.250s
Time for statistics:              0.933s

Time for Garbage Collector:     147.155s (in 590 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2902MB (  2768 MiB) max;   1079MB (  1029 MiB) avg;   3071MB (  2928 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          3260MB (  3109 MiB) max;   1562MB (  1490 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8084MB (  7709 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
