scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--usb--host--oxu210hp-hcd.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vgcmoxut/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

lines 3983-3984: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 3987-3988: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 3995-3996: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5596;
  case 2UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5596;
  case 4UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5596;
  case 8UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5596;
  default:
  __xadd_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8782: Dead code detected: *((u8 *)__gu_p) = (unsigned char )status; (CFACreationUtils.addEdgeToCFA, INFO)

line 8785: Dead code detected: put_unaligned_le16((int )((unsigned short )status), __gu_p); (CFACreationUtils.addEdgeToCFA, INFO)

line 8791: Dead code detected: put_unaligned_le64((unsigned long long )status, __gu_p); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  *((u8 *)__gu_p) = (unsigned char )status;
  goto ldv_35318;
  case 2UL:
  put_unaligned_le16((int )((unsigned short )status), __gu_p);
  goto ldv_35318;
  case 4UL:
  put_unaligned_le32(status, __gu_p);
  goto ldv_35318;
  case 8UL:
  put_unaligned_le64((unsigned long long )status, __gu_p);
  goto ldv_35318;
  default:
  __bad_unaligned_access_size();
  goto ldv_35318;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10499: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_calc_bus_time to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hc_died to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            38417 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  34407 (90%)
  Because of loop head:            3994 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (0%)
  Times precision was empty:       37419 (97%)
  Times precision was {false}:     182 (0%)
  Times result was cached:         653 (2%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      163 (0%)
  Times result was 'false':        178 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         17077
  BDD entailment checks:           5447
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       66
Number of predicates discovered:          7
Number of abstraction locations:          37
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         2338
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 6.78
Number of irrelevant predicates:          1026 (44%)
Number of preds handled by boolean abs:   406 (17%)
  Total number of models for allsat:      208
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.28

Time for post operator:                  8.282s
  Time for path formula creation:        8.062s
Time for strengthen operator:            0.431s
Time for prec operator:                  3.090s
  Time for abstraction:                  1.979s (Max:     0.029s, Count: 38417)
    Boolean abstraction:                 0.444s
    Solving time:                        0.270s (Max:     0.016s)
    Model enumeration time:              0.062s
    Time for BDD construction:           0.102s (Max:     0.011s)
Time for merge operator:                 0.359s
Time for coverage check:                 0.066s
  Time for BDD entailment checks:        0.049s
Total time for SMT solver (w/o itp):     0.332s

Number of path formula cache hits:   204501 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.109s

Total number of created targets for pointer analysis: 1204
   Number of created targets for uf: *unsigned_short_int is 17
   Number of created targets for uf: *(void)* is 93
   Number of created targets for uf: *unsigned_char is 17
   Number of created targets for uf: *(struct_list_head)* is 113
   Number of created targets for uf: *unsigned_int is 9
   Number of created targets for uf: *char is 5


Number of BDD nodes:                               295
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         438 (count: 44856, min: 0, max: 139, avg: 0.01)
Time for BDD node cleanup:                             0.049s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.849s
  Time for transition matches:                         0.442s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       209940 (count: 209940, min: 1, max: 1, avg: 1.00) [1 x 209940]

CPA algorithm statistics
------------------------
Number of iterations:            118949
Max size of waitlist:            319
Average size of waitlist:        87
Number of computed successors:   133697
Max successors for one state:    2
Number of times merged:          5815
Number of times stopped:         11120
Number of times breaked:         16

Total time for CPA algorithm:        21.781s (Max:     9.544s)
  Time for choose from waitlist:      0.224s
  Time for precision adjustment:      4.818s
  Time for transfer relation:        13.607s
  Time for merge operator:            0.720s
  Time for stop operator:             0.489s
  Time for adding to reached set:     0.583s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                 852 (count: 16, min: 46, max: 81, avg: 53.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.976s
  Counterexample analysis:                             0.373s (Max:     0.038s, Calls: 16)
    Refinement sat check:                              0.224s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.040s
  Precision update:                                    0.015s
  ARG update:                                          0.487s

Length of refined path (in blocks):                     688 (count: 16, min: 40, max: 48, avg: 43.00)
Number of affected states:                              296 (count: 16, min: 1, max: 47, avg: 18.50)
Length (states) of path with itp 'true':                376 (count: 16, min: 0, max: 38, avg: 23.50)
Length (states) of path with itp non-trivial itp:       296 (count: 16, min: 1, max: 47, avg: 18.50)
Length (states) of path with itp 'false':                16 (count: 16, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 16, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             280 (count: 16, min: 0, max: 46, avg: 17.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 52798
Max. size of reached set after ref.:  99
Avg. size of reached set before ref.: 5133.50
Avg. size of reached set after ref.:  62.38

Total time for CEGAR algorithm:      23.288s
Time for refinements:                 1.505s
Average time for refinement:          0.094s
Max time for refinement:              0.746s

Code Coverage
-----------------------------
  Function coverage:      0.430
  Visited lines:          2378
  Total lines:            4817
  Line coverage:          0.494
  Visited conditions:     611
  Total conditions:       1532
  Condition coverage:     0.399

CPAchecker general statistics
-----------------------------
Number of program locations:     6844
Number of CFA edges:             8148
Number of relevant variables:    1001
Number of functions:             221
Number of loops:                 55
Size of reached set:             41261
  Number of reached locations:   1589 (23%)
    Avg states per location:     25
    Max states per location:     1039 (at node N193)
  Number of reached functions:   95 (43%)
  Number of partitions:          41261
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        76

Time for analysis setup:          6.986s
  Time for loading CPAs:          1.307s
  Time for loading parser:        0.701s
  Time for CFA construction:      4.854s
    Time for parsing file(s):     1.186s
    Time for AST to CFA:          1.695s
    Time for CFA sanity check:    0.450s
    Time for post-processing:     1.358s
      Time for var class.:        0.668s
Time for Analysis:               23.288s
CPU time for analysis:           23.290s
Total time for CPAchecker:       30.282s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.946s

Time for Garbage Collector:       1.499s (in 54 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                165MB (   157 MiB) max;     66MB (    63 MiB) avg;    175MB (   167 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           205MB (   196 MiB) max;    136MB (   129 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
