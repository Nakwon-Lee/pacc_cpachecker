scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--usb--host--oxu210hp-hcd.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_biebjb6h/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

lines 3983-3984: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 3987-3988: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 3995-3996: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5596;
  case 2UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5596;
  case 4UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5596;
  case 8UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5596;
  default:
  __xadd_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8782: Dead code detected: *((u8 *)__gu_p) = (unsigned char )status; (CFACreationUtils.addEdgeToCFA, INFO)

line 8785: Dead code detected: put_unaligned_le16((int )((unsigned short )status), __gu_p); (CFACreationUtils.addEdgeToCFA, INFO)

line 8791: Dead code detected: put_unaligned_le64((unsigned long long )status, __gu_p); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  *((u8 *)__gu_p) = (unsigned char )status;
  goto ldv_35318;
  case 2UL:
  put_unaligned_le16((int )((unsigned short )status), __gu_p);
  goto ldv_35318;
  case 4UL:
  put_unaligned_le32(status, __gu_p);
  goto ldv_35318;
  case 8UL:
  put_unaligned_le64((unsigned long long )status, __gu_p);
  goto ldv_35318;
  default:
  __bad_unaligned_access_size();
  goto ldv_35318;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10499: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_ioremap_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_calc_bus_time to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hc_died to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_uninterruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function irq_set_irq_type to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_giveback_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 6469: Unsupported feature (recursion): qh_completions(oxu, qh); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            1015411 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  899019 (89%)
  Because of loop head:            116381 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11 (0%)
  Times precision was empty:       1014237 (100%)
  Times precision was {false}:     72 (0%)
  Times result was cached:         935 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      167 (0%)
  Times result was 'false':        68 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         457576
  BDD entailment checks:           169802
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       66
Number of predicates discovered:          6
Number of abstraction locations:          40
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         3387
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 14.17
Number of irrelevant predicates:          1861 (55%)
Number of preds handled by boolean abs:   344 (10%)
  Total number of models for allsat:      181
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.08

Time for post operator:                 60.982s
  Time for path formula creation:       58.081s
Time for strengthen operator:            5.908s
Time for prec operator:                 20.757s
  Time for abstraction:                  5.039s (Max:     0.177s, Count: 1015411)
    Boolean abstraction:                 0.247s
    Solving time:                        0.189s (Max:     0.013s)
    Model enumeration time:              0.023s
    Time for BDD construction:           0.036s (Max:     0.008s)
Time for merge operator:                 2.088s
Time for coverage check:                 0.230s
  Time for BDD entailment checks:        0.159s
Total time for SMT solver (w/o itp):     0.212s

Number of path formula cache hits:   5615756 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    29.815s

Total number of created targets for pointer analysis: 17472
   Number of created targets for uf: *(void)* is 1307
   Number of created targets for uf: *unsigned_short_int is 225
   Number of created targets for uf: *(struct_ehci_qh)* is 5
   Number of created targets for uf: *unsigned_char is 225
   Number of created targets for uf: *(struct_list_head)* is 393
   Number of created targets for uf: *(unsigned_int)* is 5
   Number of created targets for uf: *unsigned_int is 57
   Number of created targets for uf: *char is 49


Number of BDD nodes:                               248
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         402 (count: 1185451, min: 0, max: 77, avg: 0.00)
Time for BDD node cleanup:                             0.178s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.474s
  Time for transition matches:                         4.147s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      4854354 (count: 4854354, min: 1, max: 1, avg: 1.00) [1 x 4854354]

CPA algorithm statistics
------------------------
Number of iterations:            3194481
Max size of waitlist:            782
Average size of waitlist:        497
Number of computed successors:   3513978
Max successors for one state:    2
Number of times merged:          143887
Number of times stopped:         313027
Number of times breaked:         11

Total time for CPA algorithm:       209.339s (Max:    28.801s)
  Time for choose from waitlist:      1.375s
  Time for precision adjustment:     50.890s
  Time for transfer relation:       131.293s
  Time for merge operator:            5.252s
  Time for stop operator:             4.652s
  Time for adding to reached set:     5.638s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                 535 (count: 11, min: 46, max: 51, avg: 48.64)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.678s
  Counterexample analysis:                             0.173s (Max:     0.034s, Calls: 11)
    Refinement sat check:                              0.105s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.035s
  Precision update:                                    0.015s
  ARG update:                                          8.426s

Length of refined path (in blocks):                     506 (count: 11, min: 40, max: 49, avg: 46.00)
Number of affected states:                              419 (count: 11, min: 1, max: 48, avg: 38.09)
Length (states) of path with itp 'true':                 76 (count: 11, min: 0, max: 38, avg: 6.91)
Length (states) of path with itp non-trivial itp:       419 (count: 11, min: 1, max: 48, avg: 38.09)
Length (states) of path with itp 'false':                11 (count: 11, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 11, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             408 (count: 11, min: 0, max: 47, avg: 37.09)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 426146
Max. size of reached set after ref.:  99
Avg. size of reached set before ref.: 252118.09
Avg. size of reached set after ref.:  20.45

Total time for CEGAR algorithm:     221.474s
Time for refinements:                12.133s
Average time for refinement:          1.103s
Max time for refinement:              2.533s

Code Coverage
-----------------------------
  Function coverage:      0.638
  Visited lines:          3594
  Total lines:            4817
  Line coverage:          0.746
  Visited conditions:     1145
  Total conditions:       1532
  Condition coverage:     0.747

CPAchecker general statistics
-----------------------------
Number of program locations:     6844
Number of CFA edges:             8148
Number of relevant variables:    1001
Number of functions:             221
Number of loops:                 55
Size of reached set:             427810
  Number of reached locations:   2950 (43%)
    Avg states per location:     145
    Max states per location:     10534 (at node N193)
  Number of reached functions:   141 (64%)
  Number of partitions:          427806
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N5391 (before line 9781), Function main called from node N5328, stack depth 1 [316cda31], stack [main]])
  Number of target states:       0
  Size of final wait list        776

Time for analysis setup:          6.829s
  Time for loading CPAs:          1.078s
  Time for loading parser:        0.712s
  Time for CFA construction:      4.945s
    Time for parsing file(s):     1.108s
    Time for AST to CFA:          1.870s
    Time for CFA sanity check:    0.438s
    Time for post-processing:     1.283s
      Time for var class.:        0.675s
Time for Analysis:              221.474s
CPU time for analysis:          221.460s
Total time for CPAchecker:      228.307s
Total CPU time for CPAchecker:  228.280s
Time for statistics:              3.276s

Time for Garbage Collector:      36.775s (in 268 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1034MB (   986 MiB) max;    455MB (   434 MiB) avg;   1099MB (  1048 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     38MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1168MB (  1113 MiB) max;    678MB (   647 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8083MB (  7708 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
