scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--usb--host--oxu210hp-hcd.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ujhmevrr/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

lines 3983-3984: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 3987-3988: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 3995-3996: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5596;
  case 2UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5596;
  case 4UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5596;
  case 8UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5596;
  default:
  __xadd_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8782: Dead code detected: *((u8 *)__gu_p) = (unsigned char )status; (CFACreationUtils.addEdgeToCFA, INFO)

line 8785: Dead code detected: put_unaligned_le16((int )((unsigned short )status), __gu_p); (CFACreationUtils.addEdgeToCFA, INFO)

line 8791: Dead code detected: put_unaligned_le64((unsigned long long )status, __gu_p); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  *((u8 *)__gu_p) = (unsigned char )status;
  goto ldv_35318;
  case 2UL:
  put_unaligned_le16((int )((unsigned short )status), __gu_p);
  goto ldv_35318;
  case 4UL:
  put_unaligned_le32(status, __gu_p);
  goto ldv_35318;
  case 8UL:
  put_unaligned_le64((unsigned long long )status, __gu_p);
  goto ldv_35318;
  default:
  __bad_unaligned_access_size();
  goto ldv_35318;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10499: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_ioremap_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hc_died to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_calc_bus_time to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_uninterruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4254966 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3763140 (88%)
  Because of loop head:            491758 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         68 (0%)
  Times precision was empty:       4187965 (98%)
  Times precision was {false}:     3434 (0%)
  Times result was cached:         61975 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1592 (0%)
  Times result was 'false':        6832 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1903291
  BDD entailment checks:           713695
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       66
Number of predicates discovered:          10
Number of abstraction locations:          85
Max number of predicates per location:    8
Avg number of predicates per location:    3
Total predicates per abstraction:         205827
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 40.95
Number of irrelevant predicates:          167911 (82%)
Number of preds handled by boolean abs:   3993 (2%)
  Total number of models for allsat:      2070
  Max number of models for allsat:        18
  Avg number of models for allsat:        1.30

Time for post operator:                258.406s
  Time for path formula creation:      247.918s
Time for strengthen operator:           23.365s
Time for prec operator:                 86.847s
  Time for abstraction:                 28.273s (Max:     0.703s, Count: 4254966)
    Boolean abstraction:                 1.812s
    Solving time:                        2.202s (Max:     0.017s)
    Model enumeration time:              0.334s
    Time for BDD construction:           0.095s (Max:     0.008s)
Time for merge operator:                 9.265s
Time for coverage check:                 0.668s
  Time for BDD entailment checks:        0.414s
Total time for SMT solver (w/o itp):     2.536s

Number of path formula cache hits:   23260927 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   114.406s

Total number of created targets for pointer analysis: 189310
   Number of created targets for uf: *(void)* is 17425
   Number of created targets for uf: *unsigned_short_int is 1081
   Number of created targets for uf: *(struct_usb_device)* is 1217
   Number of created targets for uf: *signed_int is 2281
   Number of created targets for uf: *unsigned_char is 1351
   Number of created targets for uf: *(struct_list_head)* is 7563
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_1,_Parameter_1_type:_[(struct_urb)*],_VarArgs:_false)* is 153
   Number of created targets for uf: *unsigned_long_long_int is 609
   Number of created targets for uf: *unsigned_int is 2737
   Number of created targets for uf: *char is 809
   Number of created targets for uf: *unsigned_long_int is 13


Number of BDD nodes:                               1745
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3850 (count: 4930217, min: 0, max: 161, avg: 0.00)
Time for BDD node cleanup:                             0.681s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 28.584s
  Time for transition matches:                        15.616s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                     20333177 (count: 20333177, min: 1, max: 1, avg: 1.00) [1 x 20333177]

CPA algorithm statistics
------------------------
Number of iterations:            13339703
Max size of waitlist:            1175
Average size of waitlist:        492
Number of computed successors:   14682533
Max successors for one state:    2
Number of times merged:          594798
Number of times stopped:         1297603
Number of times breaked:         68

Total time for CPA algorithm:       851.189s (Max:    31.664s)
  Time for choose from waitlist:      6.598s
  Time for precision adjustment:    203.180s
  Time for transfer relation:       527.150s
  Time for merge operator:           18.126s
  Time for stop operator:            18.258s
  Time for adding to reached set:    34.199s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   68
Avg. length of target path (in blocks):                4534 (count: 68, min: 46, max: 80, avg: 66.68)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  35.567s
  Counterexample analysis:                             1.409s (Max:     0.190s, Calls: 68)
    Refinement sat check:                              0.770s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.044s
  Precision update:                                    0.059s
  ARG update:                                         34.005s

Length of refined path (in blocks):                    4093 (count: 68, min: 40, max: 79, avg: 60.19)
Number of affected states:                             2821 (count: 68, min: 1, max: 78, avg: 41.49)
Length (states) of path with itp 'true':               1204 (count: 68, min: 0, max: 53, avg: 17.71)
Length (states) of path with itp non-trivial itp:      2821 (count: 68, min: 1, max: 78, avg: 41.49)
Length (states) of path with itp 'false':                68 (count: 68, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 68, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2753 (count: 68, min: 0, max: 77, avg: 40.49)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                68
Number of successful refinements:     68
Number of failed refinements:         0
Max. size of reached set before ref.: 438825
Max. size of reached set after ref.:  7774
Avg. size of reached set before ref.: 197696.66
Avg. size of reached set after ref.:  1395.12

Total time for CEGAR algorithm:     893.456s
Time for refinements:                42.033s
Average time for refinement:          0.618s
Max time for refinement:              1.473s

Code Coverage
-----------------------------
  Function coverage:      0.575
  Visited lines:          3198
  Total lines:            4817
  Line coverage:          0.664
  Visited conditions:     962
  Total conditions:       1532
  Condition coverage:     0.628

CPAchecker general statistics
-----------------------------
Number of program locations:     6844
Number of CFA edges:             8148
Number of relevant variables:    1001
Number of functions:             221
Number of loops:                 55
Size of reached set:             29594
  Number of reached locations:   2417 (35%)
    Avg states per location:     12
    Max states per location:     497 (at node N193)
  Number of reached functions:   127 (57%)
  Number of partitions:          29578
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N5391 (before line 9781), Function main called from node N5328, stack depth 1 [2efd2f21], stack [main]])
  Number of target states:       0
  Size of final wait list        407

Time for analysis setup:          6.830s
  Time for loading CPAs:          1.049s
  Time for loading parser:        0.641s
  Time for CFA construction:      4.996s
    Time for parsing file(s):     1.130s
    Time for AST to CFA:          1.870s
    Time for CFA sanity check:    0.454s
    Time for post-processing:     1.333s
      Time for var class.:        0.659s
Time for Analysis:              893.457s
CPU time for analysis:          893.410s
Total time for CPAchecker:      900.290s
Total CPU time for CPAchecker:  900.230s
Time for statistics:              0.642s

Time for Garbage Collector:     135.432s (in 661 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2053MB (  1958 MiB) max;    902MB (   861 MiB) avg;   2173MB (  2072 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          2287MB (  2181 MiB) max;   1327MB (  1265 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8083MB (  7708 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
