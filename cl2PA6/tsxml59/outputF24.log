scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--usb--host--oxu210hp-hcd.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ncmeqz97/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

lines 3983-3984: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 3987-3988: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 3995-3996: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5596;
  case 2UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5596;
  case 4UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5596;
  case 8UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5596;
  default:
  __xadd_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8782: Dead code detected: *((u8 *)__gu_p) = (unsigned char )status; (CFACreationUtils.addEdgeToCFA, INFO)

line 8785: Dead code detected: put_unaligned_le16((int )((unsigned short )status), __gu_p); (CFACreationUtils.addEdgeToCFA, INFO)

line 8791: Dead code detected: put_unaligned_le64((unsigned long long )status, __gu_p); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  *((u8 *)__gu_p) = (unsigned char )status;
  goto ldv_35318;
  case 2UL:
  put_unaligned_le16((int )((unsigned short )status), __gu_p);
  goto ldv_35318;
  case 4UL:
  put_unaligned_le32(status, __gu_p);
  goto ldv_35318;
  case 8UL:
  put_unaligned_le64((unsigned long long )status, __gu_p);
  goto ldv_35318;
  default:
  __bad_unaligned_access_size();
  goto ldv_35318;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10499: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_ioremap_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_uninterruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_giveback_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_resume_root_hub to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hc_died to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_poll_rh_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 7551: Unsupported feature (recursion): end_unlink_async(oxu); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            1814273 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1625590 (90%)
  Because of loop head:            188623 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         60 (0%)
  Times precision was empty:       1794375 (99%)
  Times precision was {false}:     2054 (0%)
  Times result was cached:         17213 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      631 (0%)
  Times result was 'false':        2979 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1497694
  BDD entailment checks:           266530
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       66
Number of predicates discovered:          10
Number of abstraction locations:          70
Max number of predicates per location:    8
Avg number of predicates per location:    3
Total predicates per abstraction:         51102
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 19.03
Number of irrelevant predicates:          38807 (76%)
Number of preds handled by boolean abs:   1501 (3%)
  Total number of models for allsat:      915
  Max number of models for allsat:        18
  Avg number of models for allsat:        1.45

Time for post operator:                119.755s
  Time for path formula creation:      113.946s
Time for strengthen operator:            9.787s
Time for prec operator:                 39.214s
  Time for abstraction:                 11.486s (Max:     0.188s, Count: 1814273)
    Boolean abstraction:                 0.907s
    Solving time:                        1.071s (Max:     0.017s)
    Model enumeration time:              0.180s
    Time for BDD construction:           0.056s (Max:     0.012s)
Time for merge operator:                 6.913s
Time for coverage check:                 0.404s
  Time for BDD entailment checks:        0.229s
Total time for SMT solver (w/o itp):     1.251s

Number of path formula cache hits:   11731469 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    59.428s

Total number of created targets for pointer analysis: 42986
   Number of created targets for uf: *(void)* is 1401
   Number of created targets for uf: *(struct_ehci_qh)* is 181
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_1,_Parameter_1_type:_[(struct_urb)*],_VarArgs:_false)* is 9
   Number of created targets for uf: *(unsigned_int)* is 181
   Number of created targets for uf: *unsigned_long_int is 289
   Number of created targets for uf: *unsigned_short_int is 553
   Number of created targets for uf: *signed_int is 193
   Number of created targets for uf: *unsigned_char is 37
   Number of created targets for uf: *(struct_urb)* is 5
   Number of created targets for uf: *(struct_list_head)* is 873
   Number of created targets for uf: *unsigned_long_long_int is 481
   Number of created targets for uf: *unsigned_int is 193
   Number of created targets for uf: *char is 673


Number of BDD nodes:                               917
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1699 (count: 2075455, min: 0, max: 124, avg: 0.00)
Time for BDD node cleanup:                             0.341s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 16.524s
  Time for transition matches:                         9.195s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                     10629980 (count: 10629980, min: 1, max: 1, avg: 1.00) [1 x 10629980]

CPA algorithm statistics
------------------------
Number of iterations:            6907427
Max size of waitlist:            4317
Average size of waitlist:        1402
Number of computed successors:   7900870
Max successors for one state:    2
Number of times merged:          615582
Number of times stopped:         876215
Number of times breaked:         60

Total time for CPA algorithm:       423.182s (Max:    17.449s)
  Time for choose from waitlist:      3.394s
  Time for precision adjustment:    101.871s
  Time for transfer relation:       255.556s
  Time for merge operator:           13.875s
  Time for stop operator:             9.154s
  Time for adding to reached set:    17.367s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   60
Avg. length of target path (in blocks):                3939 (count: 60, min: 46, max: 98, avg: 65.65)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  18.226s
  Counterexample analysis:                             0.956s (Max:     0.034s, Calls: 60)
    Refinement sat check:                              0.637s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.042s
  Precision update:                                    0.027s
  ARG update:                                         17.161s

Length of refined path (in blocks):                    3290 (count: 60, min: 40, max: 73, avg: 54.83)
Number of affected states:                             1784 (count: 60, min: 0, max: 72, avg: 29.73)
Length (states) of path with itp 'true':               1446 (count: 60, min: 0, max: 53, avg: 24.10)
Length (states) of path with itp non-trivial itp:      1784 (count: 60, min: 0, max: 72, avg: 29.73)
Length (states) of path with itp 'false':                60 (count: 60, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 60, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1732 (count: 60, min: 0, max: 71, avg: 28.87)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                60
Number of successful refinements:     60
Number of failed refinements:         0
Max. size of reached set before ref.: 264234
Max. size of reached set after ref.:  195340
Avg. size of reached set before ref.: 139291.13
Avg. size of reached set after ref.:  25709.95

Total time for CEGAR algorithm:     447.717s
Time for refinements:                23.207s
Average time for refinement:          0.386s
Max time for refinement:              0.795s

Code Coverage
-----------------------------
  Function coverage:      0.633
  Visited lines:          3661
  Total lines:            4817
  Line coverage:          0.760
  Visited conditions:     1192
  Total conditions:       1532
  Condition coverage:     0.778

CPAchecker general statistics
-----------------------------
Number of program locations:     6844
Number of CFA edges:             8148
Number of relevant variables:    1001
Number of functions:             221
Number of loops:                 55
Size of reached set:             206806
  Number of reached locations:   3065 (45%)
    Avg states per location:     67
    Max states per location:     3499 (at node N193)
  Number of reached functions:   140 (63%)
  Number of partitions:          206800
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N5391 (before line 9781), Function main called from node N5328, stack depth 1 [316cda31], stack [main]])
  Number of target states:       0
  Size of final wait list        3371

Time for analysis setup:          6.774s
  Time for loading CPAs:          1.004s
  Time for loading parser:        0.696s
  Time for CFA construction:      4.894s
    Time for parsing file(s):     1.155s
    Time for AST to CFA:          1.680s
    Time for CFA sanity check:    0.488s
    Time for post-processing:     1.382s
      Time for var class.:        0.652s
Time for Analysis:              447.718s
CPU time for analysis:          447.690s
Total time for CPAchecker:      454.496s
Total CPU time for CPAchecker:  454.460s
Time for statistics:              1.988s

Time for Garbage Collector:      66.310s (in 521 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1184MB (  1129 MiB) max;    502MB (   479 MiB) avg;   1237MB (  1179 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1218MB (  1161 MiB) max;    739MB (   704 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8083MB (  7709 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
