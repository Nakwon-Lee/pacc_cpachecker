scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--usb--host--oxu210hp-hcd.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ejae_vrn/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

lines 3983-3984: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 3987-3988: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 3995-3996: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5596;
  case 2UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5596;
  case 4UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5596;
  case 8UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5596;
  default:
  __xadd_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8782: Dead code detected: *((u8 *)__gu_p) = (unsigned char )status; (CFACreationUtils.addEdgeToCFA, INFO)

line 8785: Dead code detected: put_unaligned_le16((int )((unsigned short )status), __gu_p); (CFACreationUtils.addEdgeToCFA, INFO)

line 8791: Dead code detected: put_unaligned_le64((unsigned long long )status, __gu_p); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  *((u8 *)__gu_p) = (unsigned char )status;
  goto ldv_35318;
  case 2UL:
  put_unaligned_le16((int )((unsigned short )status), __gu_p);
  goto ldv_35318;
  case 4UL:
  put_unaligned_le32(status, __gu_p);
  goto ldv_35318;
  case 8UL:
  put_unaligned_le64((unsigned long long )status, __gu_p);
  goto ldv_35318;
  default:
  __bad_unaligned_access_size();
  goto ldv_35318;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10499: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_ioremap_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_uninterruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function irq_set_irq_type to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_resume_root_hub to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 7551: Unsupported feature (recursion): end_unlink_async(oxu); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            355179 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  326077 (92%)
  Because of loop head:            29026 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         76 (0%)
  Times precision was empty:       290659 (82%)
  Times precision was {false}:     1138 (0%)
  Times result was cached:         62957 (18%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      425 (0%)
  Times result was 'false':        2859 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         343089
  BDD entailment checks:           44213
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       66
Number of predicates discovered:          8
Number of abstraction locations:          90
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         193180
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 123.60
Number of irrelevant predicates:          168244 (87%)
Number of preds handled by boolean abs:   976 (1%)
  Total number of models for allsat:      533
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.25

Time for post operator:                 23.066s
  Time for path formula creation:       21.507s
Time for strengthen operator:            2.398s
Time for prec operator:                 17.642s
  Time for abstraction:                 12.214s (Max:     0.047s, Count: 355179)
    Boolean abstraction:                 0.673s
    Solving time:                        0.791s (Max:     0.018s)
    Model enumeration time:              0.081s
    Time for BDD construction:           0.066s (Max:     0.009s)
Time for merge operator:                 1.596s
Time for coverage check:                 0.119s
  Time for BDD entailment checks:        0.076s
Total time for SMT solver (w/o itp):     0.872s

Number of path formula cache hits:   2537368 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.025s

Total number of created targets for pointer analysis: 1692
   Number of created targets for uf: *(void)* is 21
   Number of created targets for uf: *(struct_ehci_qh)* is 3
   Number of created targets for uf: *unsigned_char is 25
   Number of created targets for uf: *(struct_list_head)* is 79
   Number of created targets for uf: *(unsigned_int)* is 3
   Number of created targets for uf: *char is 57


Number of BDD nodes:                               378
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         968 (count: 343285, min: 0, max: 77, avg: 0.00)
Time for BDD node cleanup:                             0.102s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.310s
  Time for transition matches:                         1.962s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      2206745 (count: 2206745, min: 1, max: 1, avg: 1.00) [1 x 2206745]

CPA algorithm statistics
------------------------
Number of iterations:            1364975
Max size of waitlist:            1546
Average size of waitlist:        466
Number of computed successors:   1597110
Max successors for one state:    2
Number of times merged:          149438
Number of times stopped:         187028
Number of times breaked:         76

Total time for CPA algorithm:        99.082s (Max:     3.302s)
  Time for choose from waitlist:      0.813s
  Time for precision adjustment:     32.545s
  Time for transfer relation:        52.193s
  Time for merge operator:            3.814s
  Time for stop operator:             2.139s
  Time for adding to reached set:     2.602s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   76
Avg. length of target path (in blocks):                4867 (count: 76, min: 46, max: 80, avg: 64.04)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.231s
  Counterexample analysis:                             1.309s (Max:     0.037s, Calls: 76)
    Refinement sat check:                              0.809s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.064s
  Precision update:                                    0.051s
  ARG update:                                          3.743s

Length of refined path (in blocks):                    4435 (count: 76, min: 40, max: 79, avg: 58.36)
Number of affected states:                             2245 (count: 76, min: 0, max: 78, avg: 29.54)
Length (states) of path with itp 'true':               2114 (count: 76, min: 0, max: 51, avg: 27.82)
Length (states) of path with itp non-trivial itp:      2245 (count: 76, min: 0, max: 78, avg: 29.54)
Length (states) of path with itp 'false':                76 (count: 76, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 76, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2170 (count: 76, min: 0, max: 77, avg: 28.55)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                76
Number of successful refinements:     76
Number of failed refinements:         0
Max. size of reached set before ref.: 56117
Max. size of reached set after ref.:  11994
Avg. size of reached set before ref.: 20869.01
Avg. size of reached set after ref.:  3007.75

Total time for CEGAR algorithm:     105.667s
Time for refinements:                 6.405s
Average time for refinement:          0.084s
Max time for refinement:              0.249s

Code Coverage
-----------------------------
  Function coverage:      0.597
  Visited lines:          3015
  Total lines:            4817
  Line coverage:          0.626
  Visited conditions:     920
  Total conditions:       1532
  Condition coverage:     0.601

CPAchecker general statistics
-----------------------------
Number of program locations:     6844
Number of CFA edges:             8148
Number of relevant variables:    1001
Number of functions:             221
Number of loops:                 55
Size of reached set:             49768
  Number of reached locations:   2369 (35%)
    Avg states per location:     21
    Max states per location:     728 (at node N193)
  Number of reached functions:   132 (60%)
  Number of partitions:          49705
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N5391 (before line 9781), Function main called from node N5328, stack depth 1 [2efd2f21], stack [main]])
  Number of target states:       0
  Size of final wait list        1319

Time for analysis setup:          7.116s
  Time for loading CPAs:          1.075s
  Time for loading parser:        0.626s
  Time for CFA construction:      5.247s
    Time for parsing file(s):     1.216s
    Time for AST to CFA:          1.828s
    Time for CFA sanity check:    0.492s
    Time for post-processing:     1.518s
      Time for var class.:        0.760s
Time for Analysis:              105.667s
CPU time for analysis:          105.660s
Total time for CPAchecker:      112.794s
Total CPU time for CPAchecker:  112.780s
Time for statistics:              0.732s

Time for Garbage Collector:      12.140s (in 345 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                251MB (   239 MiB) max;    122MB (   116 MiB) avg;    263MB (   251 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     38MB (    36 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           259MB (   247 MiB) max;    189MB (   180 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8080MB (  7706 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
