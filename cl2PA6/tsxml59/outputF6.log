scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--usb--host--oxu210hp-hcd.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_y9xpytat/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

lines 3983-3984: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 3987-3988: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 3995-3996: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5596;
  case 2UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5596;
  case 4UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5596;
  case 8UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5596;
  default:
  __xadd_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8782: Dead code detected: *((u8 *)__gu_p) = (unsigned char )status; (CFACreationUtils.addEdgeToCFA, INFO)

line 8785: Dead code detected: put_unaligned_le16((int )((unsigned short )status), __gu_p); (CFACreationUtils.addEdgeToCFA, INFO)

line 8791: Dead code detected: put_unaligned_le64((unsigned long long )status, __gu_p); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  *((u8 *)__gu_p) = (unsigned char )status;
  goto ldv_35318;
  case 2UL:
  put_unaligned_le16((int )((unsigned short )status), __gu_p);
  goto ldv_35318;
  case 4UL:
  put_unaligned_le32(status, __gu_p);
  goto ldv_35318;
  case 8UL:
  put_unaligned_le64((unsigned long long )status, __gu_p);
  goto ldv_35318;
  default:
  __bad_unaligned_access_size();
  goto ldv_35318;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10499: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_ioremap_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_uninterruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_giveback_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3172084 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2841373 (90%)
  Because of loop head:            330646 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         65 (0%)
  Times precision was empty:       2918432 (92%)
  Times precision was {false}:     3779 (0%)
  Times result was cached:         248455 (8%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1418 (0%)
  Times result was 'false':        6528 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         2644442
  BDD entailment checks:           482370
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       66
Number of predicates discovered:          10
Number of abstraction locations:          98
Max number of predicates per location:    8
Avg number of predicates per location:    3
Total predicates per abstraction:         487113
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 93.73
Number of irrelevant predicates:          443262 (91%)
Number of preds handled by boolean abs:   3381 (1%)
  Total number of models for allsat:      2033
  Max number of models for allsat:        18
  Avg number of models for allsat:        1.43

Time for post operator:                281.223s
  Time for path formula creation:      271.681s
Time for strengthen operator:           17.046s
Time for prec operator:                 94.609s
  Time for abstraction:                 38.381s (Max:     1.545s, Count: 3172084)
    Boolean abstraction:                 1.578s
    Solving time:                        2.070s (Max:     0.013s)
    Model enumeration time:              0.333s
    Time for BDD construction:           0.105s (Max:     0.007s)
Time for merge operator:                20.000s
Time for coverage check:                 0.787s
  Time for BDD entailment checks:        0.489s
Total time for SMT solver (w/o itp):     2.403s

Number of path formula cache hits:   20038064 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   144.784s

Total number of created targets for pointer analysis: 221468
   Number of created targets for uf: *unsigned_short_int is 1225
   Number of created targets for uf: *(void)* is 6813
   Number of created targets for uf: *signed_int is 1321
   Number of created targets for uf: *(struct_ehci_qh)* is 409
   Number of created targets for uf: *unsigned_char is 1633
   Number of created targets for uf: *(struct_list_head)* is 1641
   Number of created targets for uf: *(unsigned_int)* is 409
   Number of created targets for uf: *unsigned_long_long_int is 4455
   Number of created targets for uf: *unsigned_int is 1801
   Number of created targets for uf: *char is 1777
   Number of created targets for uf: *unsigned_long_int is 1801


Number of BDD nodes:                               1714
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3481 (count: 3429284, min: 0, max: 206, avg: 0.00)
Time for BDD node cleanup:                             0.555s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 36.489s
  Time for transition matches:                        19.378s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                     18715496 (count: 18715496, min: 1, max: 1, avg: 1.00) [1 x 18715496]

CPA algorithm statistics
------------------------
Number of iterations:            12165904
Max size of waitlist:            7095
Average size of waitlist:        2035
Number of computed successors:   13916747
Max successors for one state:    2
Number of times merged:          1081036
Number of times stopped:         1543274
Number of times breaked:         65

Total time for CPA algorithm:       855.261s (Max:    37.824s)
  Time for choose from waitlist:      5.556s
  Time for precision adjustment:    222.198s
  Time for transfer relation:       519.608s
  Time for merge operator:           32.941s
  Time for stop operator:            17.133s
  Time for adding to reached set:    20.007s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   65
Avg. length of target path (in blocks):                4692 (count: 65, min: 46, max: 109, avg: 72.18)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  31.516s
  Counterexample analysis:                             1.255s (Max:     0.050s, Calls: 65)
    Refinement sat check:                              0.782s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.044s
  Precision update:                                    0.036s
  ARG update:                                         30.128s

Length of refined path (in blocks):                    4253 (count: 65, min: 40, max: 108, avg: 65.43)
Number of affected states:                             3075 (count: 65, min: 1, max: 107, avg: 47.31)
Length (states) of path with itp 'true':               1113 (count: 65, min: 0, max: 53, avg: 17.12)
Length (states) of path with itp non-trivial itp:      3075 (count: 65, min: 1, max: 107, avg: 47.31)
Length (states) of path with itp 'false':                65 (count: 65, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 65, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3010 (count: 65, min: 0, max: 106, avg: 46.31)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                65
Number of successful refinements:     65
Number of failed refinements:         0
Max. size of reached set before ref.: 445655
Max. size of reached set after ref.:  9686
Avg. size of reached set before ref.: 190036.38
Avg. size of reached set after ref.:  1661.91

Total time for CEGAR algorithm:     893.413s
Time for refinements:                38.079s
Average time for refinement:          0.585s
Max time for refinement:              1.738s

Code Coverage
-----------------------------
  Function coverage:      0.471
  Visited lines:          2461
  Total lines:            4817
  Line coverage:          0.511
  Visited conditions:     738
  Total conditions:       1532
  Condition coverage:     0.482

CPAchecker general statistics
-----------------------------
Number of program locations:     6844
Number of CFA edges:             8148
Number of relevant variables:    1001
Number of functions:             221
Number of loops:                 55
Size of reached set:             122605
  Number of reached locations:   1797 (26%)
    Avg states per location:     68
    Max states per location:     2786 (at node N247)
  Number of reached functions:   104 (47%)
  Number of partitions:          122140
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N5391 (before line 9781), Function main called from node N5328, stack depth 1 [17d2b075], stack [main]])
  Number of target states:       0
  Size of final wait list        1711

Time for analysis setup:          6.837s
  Time for loading CPAs:          0.977s
  Time for loading parser:        0.682s
  Time for CFA construction:      5.069s
    Time for parsing file(s):     1.160s
    Time for AST to CFA:          1.851s
    Time for CFA sanity check:    0.508s
    Time for post-processing:     1.373s
      Time for var class.:        0.652s
Time for Analysis:              893.413s
CPU time for analysis:          893.380s
Total time for CPAchecker:      900.260s
Total CPU time for CPAchecker:  900.210s
Time for statistics:              1.393s

Time for Garbage Collector:     130.004s (in 611 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2663MB (  2539 MiB) max;    999MB (   953 MiB) avg;   2823MB (  2692 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          2856MB (  2723 MiB) max;   1460MB (  1392 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8083MB (  7708 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
