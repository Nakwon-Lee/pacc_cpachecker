scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-08_1a-drivers--video--fbdev--core--fb.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_agt_84d4/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4147: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& cpu_tss.x86_tss.sp0)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4150: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& cpu_tss.x86_tss.sp0)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4153: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& cpu_tss.x86_tss.sp0)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& cpu_tss.x86_tss.sp0));
  goto ldv_5437;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& cpu_tss.x86_tss.sp0));
  goto ldv_5437;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& cpu_tss.x86_tss.sp0));
  goto ldv_5437;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& cpu_tss.x86_tss.sp0));
  goto ldv_5437;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6450: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" (& cmap->red): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 6453: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" (& cmap->red): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 6456: Dead code detected: __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" (& cmap->red): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
    case 1UL:
    __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" (& cmap->red): "ebx");
    goto ldv_35468;
    case 2UL:
    __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" (& cmap->red): "ebx");
    goto ldv_35468;
    case 4UL:
    __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" (& cmap->red): "ebx");
    goto ldv_35468;
    case 8UL:
    __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" (& cmap->red): "ebx");
    goto ldv_35468;
    default:
    __asm__ volatile ("call __put_user_X": "=a" (__ret_pu): "0" (__pu_val), "c" (& cmap->red): "ebx");
    goto ldv_35468;
    } (CFACreationUtils.addEdgeToCFA, INFO)

lines 6483-6484: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___0): "0" (__pu_val___0),
                             "c" (& cmap->green): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6487-6488: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___0): "0" (__pu_val___0),
                             "c" (& cmap->green): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6491-6492: Dead code detected: __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___0): "0" (__pu_val___0),
                             "c" (& cmap->green): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
        case 1UL:
        __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___0): "0" (__pu_val___0),
                             "c" (& cmap->green): "ebx");
        goto ldv_35480;
        case 2UL:
        __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___0): "0" (__pu_val___0),
                             "c" (& cmap->green): "ebx");
        goto ldv_35480;
        case 4UL:
        __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___0): "0" (__pu_val___0),
                             "c" (& cmap->green): "ebx");
        goto ldv_35480;
        case 8UL:
        __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___0): "0" (__pu_val___0),
                             "c" (& cmap->green): "ebx");
        goto ldv_35480;
        default:
        __asm__ volatile ("call __put_user_X": "=a" (__ret_pu___0): "0" (__pu_val___0),
                             "c" (& cmap->green): "ebx");
        goto ldv_35480;
        } (CFACreationUtils.addEdgeToCFA, INFO)

lines 6521-6522: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___1): "0" (__pu_val___1),
                                 "c" (& cmap->blue): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6525-6526: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___1): "0" (__pu_val___1),
                                 "c" (& cmap->blue): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6529-6530: Dead code detected: __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___1): "0" (__pu_val___1),
                                 "c" (& cmap->blue): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
            case 1UL:
            __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___1): "0" (__pu_val___1),
                                 "c" (& cmap->blue): "ebx");
            goto ldv_35492;
            case 2UL:
            __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___1): "0" (__pu_val___1),
                                 "c" (& cmap->blue): "ebx");
            goto ldv_35492;
            case 4UL:
            __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___1): "0" (__pu_val___1),
                                 "c" (& cmap->blue): "ebx");
            goto ldv_35492;
            case 8UL:
            __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___1): "0" (__pu_val___1),
                                 "c" (& cmap->blue): "ebx");
            goto ldv_35492;
            default:
            __asm__ volatile ("call __put_user_X": "=a" (__ret_pu___1): "0" (__pu_val___1),
                                 "c" (& cmap->blue): "ebx");
            goto ldv_35492;
            } (CFACreationUtils.addEdgeToCFA, INFO)

lines 6559-6560: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___2): "0" (__pu_val___2),
                                     "c" (& cmap->transp): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6563-6564: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___2): "0" (__pu_val___2),
                                     "c" (& cmap->transp): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6567-6568: Dead code detected: __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___2): "0" (__pu_val___2),
                                     "c" (& cmap->transp): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
                case 1UL:
                __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___2): "0" (__pu_val___2),
                                     "c" (& cmap->transp): "ebx");
                goto ldv_35504;
                case 2UL:
                __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___2): "0" (__pu_val___2),
                                     "c" (& cmap->transp): "ebx");
                goto ldv_35504;
                case 4UL:
                __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___2): "0" (__pu_val___2),
                                     "c" (& cmap->transp): "ebx");
                goto ldv_35504;
                case 8UL:
                __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___2): "0" (__pu_val___2),
                                     "c" (& cmap->transp): "ebx");
                goto ldv_35504;
                default:
                __asm__ volatile ("call __put_user_X": "=a" (__ret_pu___2): "0" (__pu_val___2),
                                     "c" (& cmap->transp): "ebx");
                goto ldv_35504;
                } (CFACreationUtils.addEdgeToCFA, INFO)

line 6648: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" (& fix32->smem_start): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 6651: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" (& fix32->smem_start): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 6657: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" (& fix32->smem_start): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" (& fix32->smem_start): "ebx");
  goto ldv_35519;
  case 2UL:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" (& fix32->smem_start): "ebx");
  goto ldv_35519;
  case 4UL:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" (& fix32->smem_start): "ebx");
  goto ldv_35519;
  case 8UL:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" (& fix32->smem_start): "ebx");
  goto ldv_35519;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu): "0" (__pu_val), "c" (& fix32->smem_start): "ebx");
  goto ldv_35519;
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 6670-6671: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" (& fix32->smem_len): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6674-6675: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" (& fix32->smem_len): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6682-6683: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" (& fix32->smem_len): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" (& fix32->smem_len): "ebx");
  goto ldv_35528;
  case 2UL:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" (& fix32->smem_len): "ebx");
  goto ldv_35528;
  case 4UL:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" (& fix32->smem_len): "ebx");
  goto ldv_35528;
  case 8UL:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" (& fix32->smem_len): "ebx");
  goto ldv_35528;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" (& fix32->smem_len): "ebx");
  goto ldv_35528;
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 6697-6698: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___1): "0" (__pu_val___1),
                       "c" (& fix32->type): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6701-6702: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___1): "0" (__pu_val___1),
                       "c" (& fix32->type): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6709-6710: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___1): "0" (__pu_val___1),
                       "c" (& fix32->type): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___1): "0" (__pu_val___1),
                       "c" (& fix32->type): "ebx");
  goto ldv_35537;
  case 2UL:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___1): "0" (__pu_val___1),
                       "c" (& fix32->type): "ebx");
  goto ldv_35537;
  case 4UL:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___1): "0" (__pu_val___1),
                       "c" (& fix32->type): "ebx");
  goto ldv_35537;
  case 8UL:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___1): "0" (__pu_val___1),
                       "c" (& fix32->type): "ebx");
  goto ldv_35537;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu___1): "0" (__pu_val___1),
                       "c" (& fix32->type): "ebx");
  goto ldv_35537;
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 6724-6725: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___2): "0" (__pu_val___2),
                       "c" (& fix32->type_aux): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6728-6729: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___2): "0" (__pu_val___2),
                       "c" (& fix32->type_aux): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6736-6737: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___2): "0" (__pu_val___2),
                       "c" (& fix32->type_aux): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___2): "0" (__pu_val___2),
                       "c" (& fix32->type_aux): "ebx");
  goto ldv_35546;
  case 2UL:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___2): "0" (__pu_val___2),
                       "c" (& fix32->type_aux): "ebx");
  goto ldv_35546;
  case 4UL:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___2): "0" (__pu_val___2),
                       "c" (& fix32->type_aux): "ebx");
  goto ldv_35546;
  case 8UL:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___2): "0" (__pu_val___2),
                       "c" (& fix32->type_aux): "ebx");
  goto ldv_35546;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu___2): "0" (__pu_val___2),
                       "c" (& fix32->type_aux): "ebx");
  goto ldv_35546;
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 6751-6752: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___3): "0" (__pu_val___3),
                       "c" (& fix32->visual): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6755-6756: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___3): "0" (__pu_val___3),
                       "c" (& fix32->visual): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6763-6764: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___3): "0" (__pu_val___3),
                       "c" (& fix32->visual): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___3): "0" (__pu_val___3),
                       "c" (& fix32->visual): "ebx");
  goto ldv_35555;
  case 2UL:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___3): "0" (__pu_val___3),
                       "c" (& fix32->visual): "ebx");
  goto ldv_35555;
  case 4UL:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___3): "0" (__pu_val___3),
                       "c" (& fix32->visual): "ebx");
  goto ldv_35555;
  case 8UL:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___3): "0" (__pu_val___3),
                       "c" (& fix32->visual): "ebx");
  goto ldv_35555;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu___3): "0" (__pu_val___3),
                       "c" (& fix32->visual): "ebx");
  goto ldv_35555;
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 6778-6779: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___4): "0" (__pu_val___4),
                       "c" (& fix32->xpanstep): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6786-6787: Dead code detected: __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___4): "0" (__pu_val___4),
                       "c" (& fix32->xpanstep): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6790-6791: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___4): "0" (__pu_val___4),
                       "c" (& fix32->xpanstep): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (2UL) {
  case 1UL:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___4): "0" (__pu_val___4),
                       "c" (& fix32->xpanstep): "ebx");
  goto ldv_35564;
  case 2UL:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___4): "0" (__pu_val___4),
                       "c" (& fix32->xpanstep): "ebx");
  goto ldv_35564;
  case 4UL:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___4): "0" (__pu_val___4),
                       "c" (& fix32->xpanstep): "ebx");
  goto ldv_35564;
  case 8UL:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___4): "0" (__pu_val___4),
                       "c" (& fix32->xpanstep): "ebx");
  goto ldv_35564;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu___4): "0" (__pu_val___4),
                       "c" (& fix32->xpanstep): "ebx");
  goto ldv_35564;
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 6805-6806: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___5): "0" (__pu_val___5),
                       "c" (& fix32->ypanstep): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6813-6814: Dead code detected: __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___5): "0" (__pu_val___5),
                       "c" (& fix32->ypanstep): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6817-6818: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___5): "0" (__pu_val___5),
                       "c" (& fix32->ypanstep): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (2UL) {
  case 1UL:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___5): "0" (__pu_val___5),
                       "c" (& fix32->ypanstep): "ebx");
  goto ldv_35573;
  case 2UL:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___5): "0" (__pu_val___5),
                       "c" (& fix32->ypanstep): "ebx");
  goto ldv_35573;
  case 4UL:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___5): "0" (__pu_val___5),
                       "c" (& fix32->ypanstep): "ebx");
  goto ldv_35573;
  case 8UL:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___5): "0" (__pu_val___5),
                       "c" (& fix32->ypanstep): "ebx");
  goto ldv_35573;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu___5): "0" (__pu_val___5),
                       "c" (& fix32->ypanstep): "ebx");
  goto ldv_35573;
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 6832-6833: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___6): "0" (__pu_val___6),
                       "c" (& fix32->ywrapstep): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6840-6841: Dead code detected: __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___6): "0" (__pu_val___6),
                       "c" (& fix32->ywrapstep): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6844-6845: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___6): "0" (__pu_val___6),
                       "c" (& fix32->ywrapstep): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (2UL) {
  case 1UL:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___6): "0" (__pu_val___6),
                       "c" (& fix32->ywrapstep): "ebx");
  goto ldv_35582;
  case 2UL:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___6): "0" (__pu_val___6),
                       "c" (& fix32->ywrapstep): "ebx");
  goto ldv_35582;
  case 4UL:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___6): "0" (__pu_val___6),
                       "c" (& fix32->ywrapstep): "ebx");
  goto ldv_35582;
  case 8UL:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___6): "0" (__pu_val___6),
                       "c" (& fix32->ywrapstep): "ebx");
  goto ldv_35582;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu___6): "0" (__pu_val___6),
                       "c" (& fix32->ywrapstep): "ebx");
  goto ldv_35582;
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 6859-6860: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___7): "0" (__pu_val___7),
                       "c" (& fix32->line_length): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6863-6864: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___7): "0" (__pu_val___7),
                       "c" (& fix32->line_length): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6871-6872: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___7): "0" (__pu_val___7),
                       "c" (& fix32->line_length): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___7): "0" (__pu_val___7),
                       "c" (& fix32->line_length): "ebx");
  goto ldv_35591;
  case 2UL:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___7): "0" (__pu_val___7),
                       "c" (& fix32->line_length): "ebx");
  goto ldv_35591;
  case 4UL:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___7): "0" (__pu_val___7),
                       "c" (& fix32->line_length): "ebx");
  goto ldv_35591;
  case 8UL:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___7): "0" (__pu_val___7),
                       "c" (& fix32->line_length): "ebx");
  goto ldv_35591;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu___7): "0" (__pu_val___7),
                       "c" (& fix32->line_length): "ebx");
  goto ldv_35591;
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 6887-6888: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___8): "0" (__pu_val___8),
                       "c" (& fix32->mmio_start): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6891-6892: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___8): "0" (__pu_val___8),
                       "c" (& fix32->mmio_start): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6899-6900: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___8): "0" (__pu_val___8),
                       "c" (& fix32->mmio_start): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___8): "0" (__pu_val___8),
                       "c" (& fix32->mmio_start): "ebx");
  goto ldv_35600;
  case 2UL:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___8): "0" (__pu_val___8),
                       "c" (& fix32->mmio_start): "ebx");
  goto ldv_35600;
  case 4UL:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___8): "0" (__pu_val___8),
                       "c" (& fix32->mmio_start): "ebx");
  goto ldv_35600;
  case 8UL:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___8): "0" (__pu_val___8),
                       "c" (& fix32->mmio_start): "ebx");
  goto ldv_35600;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu___8): "0" (__pu_val___8),
                       "c" (& fix32->mmio_start): "ebx");
  goto ldv_35600;
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 6914-6915: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___9): "0" (__pu_val___9),
                       "c" (& fix32->mmio_len): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6918-6919: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___9): "0" (__pu_val___9),
                       "c" (& fix32->mmio_len): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6926-6927: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___9): "0" (__pu_val___9),
                       "c" (& fix32->mmio_len): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___9): "0" (__pu_val___9),
                       "c" (& fix32->mmio_len): "ebx");
  goto ldv_35609;
  case 2UL:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___9): "0" (__pu_val___9),
                       "c" (& fix32->mmio_len): "ebx");
  goto ldv_35609;
  case 4UL:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___9): "0" (__pu_val___9),
                       "c" (& fix32->mmio_len): "ebx");
  goto ldv_35609;
  case 8UL:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___9): "0" (__pu_val___9),
                       "c" (& fix32->mmio_len): "ebx");
  goto ldv_35609;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu___9): "0" (__pu_val___9),
                       "c" (& fix32->mmio_len): "ebx");
  goto ldv_35609;
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 6941-6942: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___10): "0" (__pu_val___10),
                       "c" (& fix32->accel): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6945-6946: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___10): "0" (__pu_val___10),
                       "c" (& fix32->accel): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6953-6954: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___10): "0" (__pu_val___10),
                       "c" (& fix32->accel): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___10): "0" (__pu_val___10),
                       "c" (& fix32->accel): "ebx");
  goto ldv_35618;
  case 2UL:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___10): "0" (__pu_val___10),
                       "c" (& fix32->accel): "ebx");
  goto ldv_35618;
  case 4UL:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___10): "0" (__pu_val___10),
                       "c" (& fix32->accel): "ebx");
  goto ldv_35618;
  case 8UL:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___10): "0" (__pu_val___10),
                       "c" (& fix32->accel): "ebx");
  goto ldv_35618;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu___10): "0" (__pu_val___10),
                       "c" (& fix32->accel): "ebx");
  goto ldv_35618;
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6363: Function pointer *(fb->fb_ioctl) with type int (*)(struct fb_info *, unsigned int, unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6087: Function pointer *(info->fbops->fb_blank) with type int (*)(int, struct fb_info *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5926: Function pointer *(info->fbops->fb_get_caps) with type void (*)(struct fb_info *, struct fb_blit_caps *, struct fb_var_screeninfo *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7052: Function pointer *(fb->fb_compat_ioctl) with type int (*)(struct fb_info *, unsigned int, unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14218: Function pointer *(fbdefio->deferred_io) with type void (*)(struct fb_info *, struct list_head *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5323: Function pointer *(info->fbops->fb_imageblit) with type void (*)(struct fb_info *, const struct fb_image *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5308: Function pointer *(info->fbops->fb_imageblit) with type void (*)(struct fb_info *, const struct fb_image *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5293: Function pointer *(info->fbops->fb_imageblit) with type void (*)(struct fb_info *, const struct fb_image *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5278: Function pointer *(info->fbops->fb_imageblit) with type void (*)(struct fb_info *, const struct fb_image *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5888: Function pointer *(info->fbops->fb_pan_display) with type int (*)(struct fb_var_screeninfo *, struct fb_info *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5673: Function pointer *(info->fbops->fb_read) with type ssize_t (*)(struct fb_info *, char *, size_t , loff_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 10763-10764: Function pointer *(info->fbops->fb_setcolreg) with type int (*)(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, struct fb_info *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5997: Function pointer *(info->fbops->fb_check_var) with type int (*)(struct fb_var_screeninfo *, struct fb_info *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12428: Function pointer *(info->fbops->fb_check_var) with type int (*)(struct fb_var_screeninfo *, struct fb_info *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5777: Function pointer *(info->fbops->fb_write) with type ssize_t (*)(struct fb_info *, const char *, size_t , loff_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7854: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7856: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function default_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5818: Ignoring function call through function pointer *(info->fbops->fb_sync): (*(info->fbops->fb_sync))(info); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4489: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __might_fault to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_from_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function console_lock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_notifier_call_chain to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function console_unlock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_vt_switch_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4686: Ignoring function call through function pointer *(fb_info->fbops->fb_destroy): (*(fb_info->fbops->fb_destroy))(fb_info); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_is_primary_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_vt_switch_required to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5708: Ignoring function call through function pointer *(info->fbops->fb_sync): (*(info->fbops->fb_sync))(info); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4508: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size(from, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function filemap_write_and_wait_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5997: Ignoring function call through function pointer *(info->fbops->fb_check_var): ret = (*(info->fbops->fb_check_var))(var, info); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6019: Ignoring function call through function pointer *(info->fbops->fb_set_par): ret = (*(info->fbops->fb_set_par))(info); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5888: Ignoring function call through function pointer *(info->fbops->fb_pan_display): err = (*(info->fbops->fb_pan_display))(var, info); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10740: Ignoring function call through function pointer *(info->fbops->fb_setcmap): rc = (*(info->fbops->fb_setcmap))(cmap, info); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 10740: Unsupported feature (recursion): rc = fb_set_cmap(cmap, info); (line was originally pointer call(fb_set_cmap) rc = (*((info->fbops)->fb_setcmap))(cmap, info);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            1143 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  957 (84%)
  Because of loop head:            186 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         0 (0%)
  Times precision was empty:       1143 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1681
  BDD entailment checks:           273
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       151
Number of predicates discovered:          0

Time for post operator:                  8.568s
  Time for path formula creation:        8.535s
Time for strengthen operator:            0.054s
Time for prec operator:                  0.155s
  Time for abstraction:                  0.054s (Max:     0.008s, Count: 1143)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.512s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.022s
Total time for SMT solver (w/o itp):     0.000s

Number of path formula cache hits:   2215 (22%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.301s

Total number of created targets for pointer analysis: 161208
   Number of created targets for uf: *unsigned_short_int is 91
   Number of created targets for uf: *(void)* is 4
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *(char)* is 856
   Number of created targets for uf: *signed_long_long_int is 5
   Number of created targets for uf: *(struct_list_head)* is 43
   Number of created targets for uf: *unsigned_int is 11164
   Number of created targets for uf: *char is 914
   Number of created targets for uf: *unsigned_long_int is 2
   Number of created targets for uf: *(struct_fb_info)* is 121


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 1417, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.231s
Automaton transfers with branching:                0
Automaton transfer successors:                         9827 (count: 9827, min: 1, max: 1, avg: 1.00) [1 x 9827]

CPA algorithm statistics
------------------------
Number of iterations:            5212
Max size of waitlist:            40
Average size of waitlist:        24
Number of computed successors:   6222
Max successors for one state:    2
Number of times merged:          704
Number of times stopped:         977
Number of times breaked:         0

Total time for CPA algorithm:        10.816s (Max:    10.816s)
  Time for choose from waitlist:      0.045s
  Time for precision adjustment:      0.406s
  Time for transfer relation:         9.459s
  Time for merge operator:            0.653s
  Time for stop operator:             0.083s
  Time for adding to reached set:     0.074s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   0

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.274
  Visited lines:          2100
  Total lines:            6296
  Line coverage:          0.334
  Visited conditions:     588
  Total conditions:       2062
  Condition coverage:     0.285

CPAchecker general statistics
-----------------------------
Number of program locations:     8995
Number of CFA edges:             10231
Number of relevant variables:    1690
Number of functions:             296
Number of loops:                 90
Size of reached set:             5246
  Number of reached locations:   1283 (14%)
    Avg states per location:     4
    Max states per location:     32 (at node N319)
  Number of reached functions:   81 (27%)
  Number of partitions:          5246
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        35

Time for analysis setup:          8.868s
  Time for loading CPAs:          1.459s
  Time for loading parser:        0.717s
  Time for CFA construction:      6.490s
    Time for parsing file(s):     1.324s
    Time for AST to CFA:          2.254s
    Time for CFA sanity check:    0.580s
    Time for post-processing:     2.146s
      Time for var class.:        1.028s
Time for Analysis:               10.816s
CPU time for analysis:           10.820s
Total time for CPAchecker:       19.688s
Total CPU time for CPAchecker:   19.670s
Time for statistics:              0.209s

Time for Garbage Collector:       0.520s (in 34 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 78MB (    75 MiB) max;     50MB (    48 MiB) avg;     83MB (    79 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     31MB (    30 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8061MB (  7688 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
