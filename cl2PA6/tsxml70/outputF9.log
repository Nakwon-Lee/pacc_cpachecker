scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--usb--storage--uas.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ha9vmj04/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6275: Function pointer *(cmnd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6267: Function pointer *(cmnd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5718: Function pointer *(cmnd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7224: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(3816UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_lock_device_for_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_update_dma_alignment to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_hw_sectors to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_change_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_stor_adjust_quirks to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6267: Ignoring function call through function pointer *(cmnd->scsi_done): (*(cmnd->scsi_done))(cmnd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6275: Ignoring function call through function pointer *(cmnd->scsi_done): (*(cmnd->scsi_done))(cmnd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function scmd_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_print_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_report_bus_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5718: Ignoring function call through function pointer *(cmnd->scsi_done): (*(cmnd->scsi_done))(cmnd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_streams to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            29529 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  26336 (89%)
  Because of loop head:            3126 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         67 (0%)
  Times precision was empty:       17189 (58%)
  Times precision was {false}:     1237 (4%)
  Times result was cached:         9156 (31%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1947 (7%)
  Times result was 'false':        2676 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         31843
  BDD entailment checks:           4863
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          25
Number of abstraction locations:          61
Max number of predicates per location:    16
Avg number of predicates per location:    8
Total predicates per abstraction:         76582
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 24.05
Number of irrelevant predicates:          32010 (42%)
Number of preds handled by boolean abs:   11905 (16%)
  Total number of models for allsat:      5643
  Max number of models for allsat:        260
  Avg number of models for allsat:        2.90

Time for post operator:                 13.222s
  Time for path formula creation:       12.991s
Time for strengthen operator:            0.342s
Time for prec operator:                 14.519s
  Time for abstraction:                 13.727s (Max:     0.056s, Count: 29529)
    Boolean abstraction:                 4.125s
    Solving time:                        3.351s (Max:     0.025s)
    Model enumeration time:              0.761s
    Time for BDD construction:           0.327s (Max:     0.032s)
Time for merge operator:                 1.123s
Time for coverage check:                 0.103s
  Time for BDD entailment checks:        0.080s
Total time for SMT solver (w/o itp):     4.112s

Number of path formula cache hits:   133816 (63%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    12.214s

Total number of created targets for pointer analysis: 6761
   Number of created targets for uf: *(void)* is 55
   Number of created targets for uf: *(struct_usb_host_endpoint)* is 5
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *unsigned_int is 18
   Number of created targets for uf: *unsigned_long_int is 67


Number of BDD nodes:                               16120
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8796 (count: 42668, min: 0, max: 665, avg: 0.21)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.677s
  Time for transition matches:                         0.350s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       190253 (count: 190253, min: 1, max: 1, avg: 1.00) [1 x 190253]

CPA algorithm statistics
------------------------
Number of iterations:            118269
Max size of waitlist:            178
Average size of waitlist:        55
Number of computed successors:   142352
Max successors for one state:    2
Number of times merged:          13490
Number of times stopped:         15826
Number of times breaked:         67

Total time for CPA algorithm:        38.127s (Max:     2.168s)
  Time for choose from waitlist:      0.236s
  Time for precision adjustment:     16.363s
  Time for transfer relation:        17.634s
  Time for merge operator:            1.668s
  Time for stop operator:             0.434s
  Time for adding to reached set:     0.448s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   67
Avg. length of target path (in blocks):                3256 (count: 67, min: 27, max: 78, avg: 48.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.833s
  Counterexample analysis:                             2.064s (Max:     0.105s, Calls: 67)
    Refinement sat check:                              1.250s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.095s
  Precision update:                                    0.067s
  ARG update:                                          0.526s

Length of refined path (in blocks):                    1883 (count: 67, min: 12, max: 54, avg: 28.10)
Number of affected states:                             1034 (count: 67, min: 1, max: 38, avg: 15.43)
Length (states) of path with itp 'true':                782 (count: 67, min: 9, max: 31, avg: 11.67)
Length (states) of path with itp non-trivial itp:      1034 (count: 67, min: 1, max: 38, avg: 15.43)
Length (states) of path with itp 'false':                67 (count: 67, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          46 (count: 67, min: 0, max: 6, avg: 0.69)
Equal non-trivial interpolants along paths:             921 (count: 67, min: 0, max: 31, avg: 13.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                67
Number of successful refinements:     67
Number of failed refinements:         0
Max. size of reached set before ref.: 4282
Max. size of reached set after ref.:  566
Avg. size of reached set before ref.: 1930.61
Avg. size of reached set after ref.:  93.66

Total time for CEGAR algorithm:      41.261s
Time for refinements:                 3.108s
Average time for refinement:          0.046s
Max time for refinement:              0.134s

Code Coverage
-----------------------------
  Function coverage:      0.175
  Visited lines:          1078
  Total lines:            2301
  Line coverage:          0.468
  Visited conditions:     122
  Total conditions:       568
  Condition coverage:     0.215

CPAchecker general statistics
-----------------------------
Number of program locations:     3189
Number of CFA edges:             3577
Number of relevant variables:    465
Number of functions:             120
Number of loops:                 10
Size of reached set:             775
  Number of reached locations:   279 (9%)
    Avg states per location:     2
    Max states per location:     15 (at node N80)
  Number of reached functions:   21 (18%)
  Number of partitions:          771
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1988 (before line 7239), Function main called from node N1961, stack depth 1 [64bfd6fd], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.633s
  Time for loading CPAs:          1.029s
  Time for loading parser:        0.671s
  Time for CFA construction:      3.838s
    Time for parsing file(s):     1.083s
    Time for AST to CFA:          1.399s
    Time for CFA sanity check:    0.262s
    Time for post-processing:     0.876s
      Time for var class.:        0.439s
Time for Analysis:               41.261s
CPU time for analysis:           41.270s
Time for analyzing result:        0.001s
Total time for CPAchecker:       46.898s
Total CPU time for CPAchecker:   46.890s
Time for statistics:              0.083s

Time for Garbage Collector:       1.143s (in 85 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 97MB (    93 MiB) max;     60MB (    57 MiB) avg;    100MB (    95 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     37MB (    35 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8077MB (  7703 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
