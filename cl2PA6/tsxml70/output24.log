scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--usb--storage--uas.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7qzw31cx/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6275: Function pointer *(cmnd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6267: Function pointer *(cmnd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5718: Function pointer *(cmnd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7224: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(3816UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_lock_device_for_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_update_dma_alignment to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_hw_sectors to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_change_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6267: Ignoring function call through function pointer *(cmnd->scsi_done): (*(cmnd->scsi_done))(cmnd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function scmd_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_print_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6275: Ignoring function call through function pointer *(cmnd->scsi_done): (*(cmnd->scsi_done))(cmnd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_report_bus_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_streams to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_stor_adjust_quirks to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_streams to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5718: Ignoring function call through function pointer *(cmnd->scsi_done): (*(cmnd->scsi_done))(cmnd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            30186 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  26875 (89%)
  Because of loop head:            3284 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         27 (0%)
  Times precision was empty:       27870 (92%)
  Times precision was {false}:     443 (1%)
  Times result was cached:         1541 (5%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      332 (1%)
  Times result was 'false':        363 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         24283
  BDD entailment checks:           4285
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          12
Number of abstraction locations:          23
Max number of predicates per location:    11
Avg number of predicates per location:    5
Total predicates per abstraction:         11257
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 14.53
Number of irrelevant predicates:          6926 (62%)
Number of preds handled by boolean abs:   1838 (16%)
  Total number of models for allsat:      5067
  Max number of models for allsat:        390
  Avg number of models for allsat:        15.26

Time for post operator:                  8.056s
  Time for path formula creation:        7.814s
Time for strengthen operator:            0.328s
Time for prec operator:                  5.532s
  Time for abstraction:                  4.721s (Max:     0.180s, Count: 30186)
    Boolean abstraction:                 1.796s
    Solving time:                        0.954s (Max:     0.019s)
    Model enumeration time:              0.819s
    Time for BDD construction:           0.277s (Max:     0.036s)
Time for merge operator:                 0.390s
Time for coverage check:                 0.071s
  Time for BDD entailment checks:        0.058s
Total time for SMT solver (w/o itp):     1.773s

Number of path formula cache hits:   152523 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.032s

Total number of created targets for pointer analysis: 990
   Number of created targets for uf: *(void)* is 27
   Number of created targets for uf: *(struct_usb_host_endpoint)* is 5
   Number of created targets for uf: *signed_int is 3
   Number of created targets for uf: *unsigned_int is 6
   Number of created targets for uf: *unsigned_long_int is 139


Number of BDD nodes:                               9782
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1354 (count: 36761, min: 0, max: 231, avg: 0.04)
Time for BDD node cleanup:                             0.029s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.693s
  Time for transition matches:                         0.299s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       168137 (count: 168137, min: 1, max: 1, avg: 1.00) [1 x 168137]

CPA algorithm statistics
------------------------
Number of iterations:            106618
Max size of waitlist:            257
Average size of waitlist:        74
Number of computed successors:   123793
Max successors for one state:    2
Number of times merged:          9999
Number of times stopped:         12933
Number of times breaked:         27

Total time for CPA algorithm:        23.022s (Max:     2.519s)
  Time for choose from waitlist:      0.226s
  Time for precision adjustment:      7.441s
  Time for transfer relation:        12.261s
  Time for merge operator:            0.684s
  Time for stop operator:             0.441s
  Time for adding to reached set:     0.441s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   27
Avg. length of target path (in blocks):                 844 (count: 27, min: 25, max: 40, avg: 31.26)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.151s
  Counterexample analysis:                             0.592s (Max:     0.037s, Calls: 27)
    Refinement sat check:                              0.366s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.031s
  Precision update:                                    0.028s
  ARG update:                                          0.470s

Length of refined path (in blocks):                     420 (count: 27, min: 12, max: 24, avg: 15.56)
Number of affected states:                              129 (count: 27, min: 1, max: 12, avg: 4.78)
Length (states) of path with itp 'true':                264 (count: 27, min: 9, max: 13, avg: 9.78)
Length (states) of path with itp non-trivial itp:       129 (count: 27, min: 1, max: 12, avg: 4.78)
Length (states) of path with itp 'false':                27 (count: 27, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 27, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             102 (count: 27, min: 0, max: 11, avg: 3.78)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                27
Number of successful refinements:     27
Number of failed refinements:         0
Max. size of reached set before ref.: 7360
Max. size of reached set after ref.:  850
Avg. size of reached set before ref.: 4023.04
Avg. size of reached set after ref.:  81.30

Total time for CEGAR algorithm:      24.428s
Time for refinements:                 1.402s
Average time for refinement:          0.051s
Max time for refinement:              0.131s

Code Coverage
-----------------------------
  Function coverage:      0.442
  Visited lines:          1492
  Total lines:            2301
  Line coverage:          0.648
  Visited conditions:     296
  Total conditions:       568
  Condition coverage:     0.521

CPAchecker general statistics
-----------------------------
Number of program locations:     3189
Number of CFA edges:             3577
Number of relevant variables:    465
Number of functions:             120
Number of loops:                 10
Size of reached set:             4070
  Number of reached locations:   704 (22%)
    Avg states per location:     5
    Max states per location:     53 (at node N2191)
  Number of reached functions:   53 (44%)
  Number of partitions:          4059
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N1988 (before line 7239), Function main called from node N1961, stack depth 1 [545e57d7], stack [main]])
  Number of target states:       0
  Size of final wait list        138

Time for analysis setup:          5.815s
  Time for loading CPAs:          1.043s
  Time for loading parser:        0.731s
  Time for CFA construction:      3.879s
    Time for parsing file(s):     1.043s
    Time for AST to CFA:          1.341s
    Time for CFA sanity check:    0.282s
    Time for post-processing:     1.004s
      Time for var class.:        0.456s
Time for Analysis:               24.428s
CPU time for analysis:           24.420s
Total time for CPAchecker:       30.249s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.139s

Time for Garbage Collector:       0.692s (in 51 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 83MB (    79 MiB) max;     51MB (    48 MiB) avg;     88MB (    84 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
