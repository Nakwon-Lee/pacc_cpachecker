scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--usb--storage--uas.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_22x8ljbs/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6275: Function pointer *(cmnd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6267: Function pointer *(cmnd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5718: Function pointer *(cmnd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7224: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(3816UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_change_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_update_dma_alignment to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_hw_sectors to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_streams to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_lock_device_for_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_report_bus_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_streams to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scmd_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_print_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5718: Ignoring function call through function pointer *(cmnd->scsi_done): (*(cmnd->scsi_done))(cmnd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_stor_adjust_quirks to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_tags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_add_host_with_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_scan_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6267: Ignoring function call through function pointer *(cmnd->scsi_done): (*(cmnd->scsi_done))(cmnd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6275: Ignoring function call through function pointer *(cmnd->scsi_done): (*(cmnd->scsi_done))(cmnd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            33336 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  30146 (90%)
  Because of loop head:            3162 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         28 (0%)
  Times precision was empty:       31447 (94%)
  Times precision was {false}:     281 (1%)
  Times result was cached:         1311 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      297 (1%)
  Times result was 'false':        412 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         34046
  BDD entailment checks:           5920
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          13
Number of abstraction locations:          30
Max number of predicates per location:    12
Avg number of predicates per location:    4
Total predicates per abstraction:         12269
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 21.23
Number of irrelevant predicates:          5931 (48%)
Number of preds handled by boolean abs:   1503 (12%)
  Total number of models for allsat:      1439
  Max number of models for allsat:        195
  Avg number of models for allsat:        4.85

Time for post operator:                  8.440s
  Time for path formula creation:        8.175s
Time for strengthen operator:            0.362s
Time for prec operator:                  4.611s
  Time for abstraction:                  3.714s (Max:     0.046s, Count: 33336)
    Boolean abstraction:                 0.959s
    Solving time:                        0.624s (Max:     0.014s)
    Model enumeration time:              0.228s
    Time for BDD construction:           0.139s (Max:     0.011s)
Time for merge operator:                 0.564s
Time for coverage check:                 0.090s
  Time for BDD entailment checks:        0.075s
Total time for SMT solver (w/o itp):     0.852s

Number of path formula cache hits:   184177 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.455s

Total number of created targets for pointer analysis: 2146
   Number of created targets for uf: *(void)* is 16
   Number of created targets for uf: *(struct_usb_host_endpoint)* is 5
   Number of created targets for uf: *signed_int is 14
   Number of created targets for uf: *unsigned_int is 2
   Number of created targets for uf: *unsigned_long_int is 599


Number of BDD nodes:                               4922
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1196 (count: 40935, min: 0, max: 124, avg: 0.03)
Time for BDD node cleanup:                             0.040s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.724s
  Time for transition matches:                         0.340s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       187775 (count: 187775, min: 1, max: 1, avg: 1.00) [1 x 187775]

CPA algorithm statistics
------------------------
Number of iterations:            127055
Max size of waitlist:            30
Average size of waitlist:        13
Number of computed successors:   146121
Max successors for one state:    2
Number of times merged:          14063
Number of times stopped:         18141
Number of times breaked:         28

Total time for CPA algorithm:        23.425s (Max:     2.791s)
  Time for choose from waitlist:      0.188s
  Time for precision adjustment:      6.651s
  Time for transfer relation:        12.963s
  Time for merge operator:            1.087s
  Time for stop operator:             0.600s
  Time for adding to reached set:     0.622s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   28
Avg. length of target path (in blocks):                 988 (count: 28, min: 25, max: 65, avg: 35.29)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.252s
  Counterexample analysis:                             0.693s (Max:     0.037s, Calls: 28)
    Refinement sat check:                              0.410s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.031s
  Precision update:                                    0.057s
  ARG update:                                          0.434s

Length of refined path (in blocks):                     432 (count: 28, min: 12, max: 24, avg: 15.43)
Number of affected states:                              140 (count: 28, min: 1, max: 12, avg: 5.00)
Length (states) of path with itp 'true':                264 (count: 28, min: 0, max: 13, avg: 9.43)
Length (states) of path with itp non-trivial itp:       140 (count: 28, min: 1, max: 12, avg: 5.00)
Length (states) of path with itp 'false':                28 (count: 28, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 28, min: 0, max: 1, avg: 0.04)
Equal non-trivial interpolants along paths:             111 (count: 28, min: 0, max: 11, avg: 3.96)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 6473
Max. size of reached set after ref.:  2238
Avg. size of reached set before ref.: 4539.18
Avg. size of reached set after ref.:  116.14

Total time for CEGAR algorithm:      24.930s
Time for refinements:                 1.498s
Average time for refinement:          0.053s
Max time for refinement:              0.130s

Code Coverage
-----------------------------
  Function coverage:      0.575
  Visited lines:          1655
  Total lines:            2301
  Line coverage:          0.719
  Visited conditions:     346
  Total conditions:       568
  Condition coverage:     0.609

CPAchecker general statistics
-----------------------------
Number of program locations:     3189
Number of CFA edges:             3577
Number of relevant variables:    465
Number of functions:             120
Number of loops:                 10
Size of reached set:             3724
  Number of reached locations:   913 (29%)
    Avg states per location:     4
    Max states per location:     30 (at node N193)
  Number of reached functions:   69 (57%)
  Number of partitions:          3709
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N1988 (before line 7239), Function main called from node N1961, stack depth 1 [545e57d7], stack [main]])
  Number of target states:       0
  Size of final wait list        18

Time for analysis setup:          5.339s
  Time for loading CPAs:          0.950s
  Time for loading parser:        0.634s
  Time for CFA construction:      3.599s
    Time for parsing file(s):     1.038s
    Time for AST to CFA:          1.260s
    Time for CFA sanity check:    0.241s
    Time for post-processing:     0.849s
      Time for var class.:        0.404s
Time for Analysis:               24.930s
CPU time for analysis:           24.920s
Total time for CPAchecker:       30.274s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.148s

Time for Garbage Collector:       0.777s (in 55 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 87MB (    83 MiB) max;     52MB (    50 MiB) avg;     90MB (    86 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
