scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--usb--storage--uas.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__je2d6se/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6275: Function pointer *(cmnd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6267: Function pointer *(cmnd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5718: Function pointer *(cmnd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7224: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(3816UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scmd_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_print_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function int_to_scsilun to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            13438 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12971 (97%)
  Because of loop head:            394 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         73 (1%)
  Times precision was empty:       1353 (10%)
  Times precision was {false}:     169 (1%)
  Times result was cached:         10506 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1410 (10%)
  Times result was 'false':        1131 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         12307
  BDD entailment checks:           3031
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          32
Number of abstraction locations:          91
Max number of predicates per location:    10
Avg number of predicates per location:    3
Total predicates per abstraction:         46827
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 29.66
Number of irrelevant predicates:          12388 (26%)
Number of preds handled by boolean abs:   4658 (10%)
  Total number of models for allsat:      2946
  Max number of models for allsat:        9
  Avg number of models for allsat:        2.09

Time for post operator:                  5.012s
  Time for path formula creation:        4.863s
Time for strengthen operator:            0.151s
Time for prec operator:                  9.665s
  Time for abstraction:                  9.216s (Max:     0.030s, Count: 13438)
    Boolean abstraction:                 2.491s
    Solving time:                        1.735s (Max:     0.017s)
    Model enumeration time:              0.342s
    Time for BDD construction:           0.235s (Max:     0.012s)
Time for merge operator:                 0.229s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.022s
Total time for SMT solver (w/o itp):     2.077s

Number of path formula cache hits:   62823 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.503s

Total number of created targets for pointer analysis: 138
   Number of created targets for uf: *(void)* is 70


Number of BDD nodes:                               1411
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4393 (count: 14495, min: 0, max: 558, avg: 0.30)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.371s
Automaton transfers with branching:                0
Automaton transfer successors:                        75245 (count: 75245, min: 1, max: 1, avg: 1.00) [1 x 75245]

CPA algorithm statistics
------------------------
Number of iterations:            50398
Max size of waitlist:            122
Average size of waitlist:        88
Number of computed successors:   59150
Max successors for one state:    2
Number of times merged:          4638
Number of times stopped:         6261
Number of times breaked:         73

Total time for CPA algorithm:        19.930s (Max:     1.323s)
  Time for choose from waitlist:      0.125s
  Time for precision adjustment:     10.730s
  Time for transfer relation:         7.369s
  Time for merge operator:            0.453s
  Time for stop operator:             0.258s
  Time for adding to reached set:     0.290s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   73
Avg. length of target path (in blocks):                5756 (count: 73, min: 25, max: 107, avg: 78.85)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.132s
  Counterexample analysis:                             3.579s (Max:     0.100s, Calls: 73)
    Refinement sat check:                              1.598s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.084s
  Precision update:                                    0.086s
  ARG update:                                          0.229s

Length of refined path (in blocks):                    5388 (count: 73, min: 13, max: 104, avg: 73.81)
Number of affected states:                             1243 (count: 73, min: 1, max: 53, avg: 17.03)
Length (states) of path with itp 'true':               4072 (count: 73, min: 9, max: 102, avg: 55.78)
Length (states) of path with itp non-trivial itp:      1243 (count: 73, min: 1, max: 53, avg: 17.03)
Length (states) of path with itp 'false':                73 (count: 73, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         203 (count: 73, min: 0, max: 8, avg: 2.78)
Equal non-trivial interpolants along paths:             967 (count: 73, min: 0, max: 46, avg: 13.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                73
Number of successful refinements:     73
Number of failed refinements:         0
Max. size of reached set before ref.: 7170
Max. size of reached set after ref.:  7099
Avg. size of reached set before ref.: 2035.86
Avg. size of reached set after ref.:  1435.10

Total time for CEGAR algorithm:      24.609s
Time for refinements:                 4.579s
Average time for refinement:          0.062s
Max time for refinement:              0.108s

Code Coverage
-----------------------------
  Function coverage:      0.425
  Visited lines:          1282
  Total lines:            2301
  Line coverage:          0.557
  Visited conditions:     218
  Total conditions:       568
  Condition coverage:     0.384

CPAchecker general statistics
-----------------------------
Number of program locations:     3189
Number of CFA edges:             3577
Number of relevant variables:    465
Number of functions:             120
Number of loops:                 10
Size of reached set:             7902
  Number of reached locations:   556 (17%)
    Avg states per location:     14
    Max states per location:     162 (at node N67)
  Number of reached functions:   51 (43%)
  Number of partitions:          7871
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1988 (before line 7239), Function main called from node N1961, stack depth 1 [545e57d7], stack [main]])
  Number of target states:       0
  Size of final wait list        115

Time for analysis setup:          5.644s
  Time for loading CPAs:          0.923s
  Time for loading parser:        0.688s
  Time for CFA construction:      3.867s
    Time for parsing file(s):     1.052s
    Time for AST to CFA:          1.395s
    Time for CFA sanity check:    0.231s
    Time for post-processing:     0.964s
      Time for var class.:        0.445s
Time for Analysis:               24.609s
CPU time for analysis:           24.600s
Total time for CPAchecker:       30.256s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.329s

Time for Garbage Collector:       0.555s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 76MB (    73 MiB) max;     48MB (    46 MiB) avg;     85MB (    81 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     36MB (    34 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
