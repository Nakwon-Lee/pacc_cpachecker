scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--usb--storage--uas.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_41x0gfr_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6275: Function pointer *(cmnd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6267: Function pointer *(cmnd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5718: Function pointer *(cmnd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7224: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(3816UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_lock_device_for_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_update_dma_alignment to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_hw_sectors to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_change_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scmd_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_print_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6267: Ignoring function call through function pointer *(cmnd->scsi_done): (*(cmnd->scsi_done))(cmnd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_stor_adjust_quirks to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_report_bus_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_streams to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6275: Ignoring function call through function pointer *(cmnd->scsi_done): (*(cmnd->scsi_done))(cmnd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_tags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_add_host_with_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_scan_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_streams to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5718: Ignoring function call through function pointer *(cmnd->scsi_done): (*(cmnd->scsi_done))(cmnd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            336821 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  316351 (94%)
  Because of loop head:            20408 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         62 (0%)
  Times precision was empty:       298737 (89%)
  Times precision was {false}:     2363 (1%)
  Times result was cached:         31887 (9%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3834 (1%)
  Times result was 'false':        2850 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         361208
  BDD entailment checks:           61160
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          26
Number of abstraction locations:          50
Max number of predicates per location:    17
Avg number of predicates per location:    9
Total predicates per abstraction:         296204
Max number of predicates per abstraction: 17
Avg number of predicates per abstraction: 47.80
Number of irrelevant predicates:          219569 (74%)
Number of preds handled by boolean abs:   21562 (7%)
  Total number of models for allsat:      21488
  Max number of models for allsat:        390
  Avg number of models for allsat:        5.60

Time for post operator:                 80.065s
  Time for path formula creation:       78.742s
Time for strengthen operator:            4.365s
Time for prec operator:                 31.963s
  Time for abstraction:                 26.899s (Max:     0.134s, Count: 336821)
    Boolean abstraction:                 8.033s
    Solving time:                        5.762s (Max:     0.030s)
    Model enumeration time:              2.273s
    Time for BDD construction:           0.699s (Max:     0.036s)
Time for merge operator:                 4.114s
Time for coverage check:                 0.185s
  Time for BDD entailment checks:        0.118s
Total time for SMT solver (w/o itp):     8.035s

Number of path formula cache hits:   1143267 (52%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    70.898s

Total number of created targets for pointer analysis: 50332
   Number of created targets for uf: *(void)* is 371
   Number of created targets for uf: *(struct_usb_host_endpoint)* is 5
   Number of created targets for uf: *signed_int is 203
   Number of created targets for uf: *unsigned_int is 187
   Number of created targets for uf: *unsigned_long_int is 133


Number of BDD nodes:                               37309
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       13163 (count: 397869, min: 0, max: 1065, avg: 0.03)
Time for BDD node cleanup:                             0.106s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.675s
  Time for transition matches:                         2.002s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      1976236 (count: 1976236, min: 1, max: 1, avg: 1.00) [1 x 1976236]

CPA algorithm statistics
------------------------
Number of iterations:            1277812
Max size of waitlist:            824
Average size of waitlist:        207
Number of computed successors:   1496383
Max successors for one state:    2
Number of times merged:          150024
Number of times stopped:         189899
Number of times breaked:         62

Total time for CPA algorithm:       171.994s (Max:     7.020s)
  Time for choose from waitlist:      0.862s
  Time for precision adjustment:     44.514s
  Time for transfer relation:       107.781s
  Time for merge operator:            8.031s
  Time for stop operator:             2.458s
  Time for adding to reached set:     2.992s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   62
Avg. length of target path (in blocks):                2768 (count: 62, min: 25, max: 76, avg: 44.65)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.276s
  Counterexample analysis:                             1.526s (Max:     0.088s, Calls: 62)
    Refinement sat check:                              0.900s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.041s
  Precision update:                                    0.078s
  ARG update:                                          4.554s

Length of refined path (in blocks):                    1625 (count: 62, min: 12, max: 54, avg: 26.21)
Number of affected states:                              825 (count: 62, min: 1, max: 38, avg: 13.31)
Length (states) of path with itp 'true':                738 (count: 62, min: 9, max: 31, avg: 11.90)
Length (states) of path with itp non-trivial itp:       825 (count: 62, min: 1, max: 38, avg: 13.31)
Length (states) of path with itp 'false':                62 (count: 62, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          45 (count: 62, min: 0, max: 6, avg: 0.73)
Equal non-trivial interpolants along paths:             718 (count: 62, min: 0, max: 31, avg: 11.58)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                62
Number of successful refinements:     62
Number of failed refinements:         0
Max. size of reached set before ref.: 38607
Max. size of reached set after ref.:  1122
Avg. size of reached set before ref.: 21148.29
Avg. size of reached set after ref.:  134.42

Total time for CEGAR algorithm:     179.163s
Time for refinements:                 7.153s
Average time for refinement:          0.115s
Max time for refinement:              1.058s

Code Coverage
-----------------------------
  Function coverage:      0.175
  Visited lines:          1078
  Total lines:            2301
  Line coverage:          0.468
  Visited conditions:     122
  Total conditions:       568
  Condition coverage:     0.215

CPAchecker general statistics
-----------------------------
Number of program locations:     3189
Number of CFA edges:             3577
Number of relevant variables:    465
Number of functions:             120
Number of loops:                 10
Size of reached set:             775
  Number of reached locations:   279 (9%)
    Avg states per location:     2
    Max states per location:     15 (at node N80)
  Number of reached functions:   21 (18%)
  Number of partitions:          771
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1988 (before line 7239), Function main called from node N1961, stack depth 1 [545e57d7], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.870s
  Time for loading CPAs:          0.996s
  Time for loading parser:        0.723s
  Time for CFA construction:      4.005s
    Time for parsing file(s):     1.060s
    Time for AST to CFA:          1.454s
    Time for CFA sanity check:    0.277s
    Time for post-processing:     0.987s
      Time for var class.:        0.477s
Time for Analysis:              179.163s
CPU time for analysis:          179.150s
Time for analyzing result:        0.001s
Total time for CPAchecker:      185.045s
Total CPU time for CPAchecker:  185.020s
Time for statistics:              0.093s

Time for Garbage Collector:      17.332s (in 268 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                663MB (   632 MiB) max;    275MB (   263 MiB) avg;    673MB (   642 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           872MB (   832 MiB) max;    417MB (   398 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8155MB (  7777 MiB) max;   8088MB (  7714 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
