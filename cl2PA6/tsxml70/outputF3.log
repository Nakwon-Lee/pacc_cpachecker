scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--usb--storage--uas.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_evvxin78/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6275: Function pointer *(cmnd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6267: Function pointer *(cmnd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5718: Function pointer *(cmnd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7224: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(3816UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scmd_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_print_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function int_to_scsilun to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_change_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_update_dma_alignment to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_hw_sectors to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6267: Ignoring function call through function pointer *(cmnd->scsi_done): (*(cmnd->scsi_done))(cmnd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_lock_device_for_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_stor_adjust_quirks to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6275: Ignoring function call through function pointer *(cmnd->scsi_done): (*(cmnd->scsi_done))(cmnd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5718: Ignoring function call through function pointer *(cmnd->scsi_done): (*(cmnd->scsi_done))(cmnd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_reset_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_tags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_streams to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_streams to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_add_host_with_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_scan_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_report_bus_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            963232 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  940396 (98%)
  Because of loop head:            20784 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2052 (0%)
  Times precision was empty:       19897 (2%)
  Times precision was {false}:     1488 (0%)
  Times result was cached:         917320 (95%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      24527 (3%)
  Times result was 'false':        103502 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         829159
  BDD entailment checks:           217913
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          58
Number of abstraction locations:          274
Max number of predicates per location:    15
Avg number of predicates per location:    3
Total predicates per abstraction:         6298290
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 242.10
Number of irrelevant predicates:          2905449 (46%)
Number of preds handled by boolean abs:   102697 (2%)
  Total number of models for allsat:      41484
  Max number of models for allsat:        24
  Avg number of models for allsat:        1.69

Time for post operator:                 95.020s
  Time for path formula creation:       92.228s
Time for strengthen operator:            4.642s
Time for prec operator:                350.396s
  Time for abstraction:                337.880s (Max:     2.599s, Count: 963232)
    Boolean abstraction:                32.561s
    Solving time:                       24.979s (Max:     0.018s)
    Model enumeration time:              4.146s
    Time for BDD construction:           0.810s (Max:     0.017s)
Time for merge operator:                 3.900s
Time for coverage check:                 0.314s
  Time for BDD entailment checks:        0.203s
Total time for SMT solver (w/o itp):    29.125s

Number of path formula cache hits:   4690135 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    77.599s

Total number of created targets for pointer analysis: 40324
   Number of created targets for uf: *(void)* is 11957
   Number of created targets for uf: *(struct_usb_host_endpoint)* is 557
   Number of created targets for uf: *signed_int is 34
   Number of created targets for uf: *unsigned_int is 17
   Number of created targets for uf: *unsigned_long_int is 375


Number of BDD nodes:                               7012
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       54696 (count: 398760, min: 0, max: 2009, avg: 0.14)
Time for BDD node cleanup:                             0.072s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.777s
  Time for transition matches:                         4.366s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.025s
Automaton transfers with branching:                0
Automaton transfer successors:                      5214580 (count: 5214580, min: 1, max: 1, avg: 1.00) [1 x 5214580]

CPA algorithm statistics
------------------------
Number of iterations:            3477949
Max size of waitlist:            352
Average size of waitlist:        181
Number of computed successors:   4046959
Max successors for one state:    2
Number of times merged:          305623
Number of times stopped:         428756
Number of times breaked:         2052

Total time for CPA algorithm:       555.363s (Max:     3.105s)
  Time for choose from waitlist:      1.729s
  Time for precision adjustment:    376.356s
  Time for transfer relation:       145.427s
  Time for merge operator:            7.935s
  Time for stop operator:             5.011s
  Time for adding to reached set:     7.259s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2052
Avg. length of target path (in blocks):              494722 (count: 2052, min: 25, max: 466, avg: 241.09)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 265.900s
  Counterexample analysis:                           255.653s (Max:     0.432s, Calls: 2052)
    Refinement sat check:                             93.918s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.223s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.285s
  Precision update:                                    1.326s
  ARG update:                                          6.050s

Length of refined path (in blocks):                  466214 (count: 2052, min: 13, max: 463, avg: 227.20)
Number of affected states:                            20036 (count: 2052, min: 1, max: 347, avg: 9.76)
Length (states) of path with itp 'true':             444126 (count: 2052, min: 9, max: 461, avg: 216.44)
Length (states) of path with itp non-trivial itp:     20036 (count: 2052, min: 1, max: 347, avg: 9.76)
Length (states) of path with itp 'false':              2052 (count: 2052, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         560 (count: 2052, min: 0, max: 9, avg: 0.27)
Equal non-trivial interpolants along paths:           17424 (count: 2052, min: 0, max: 339, avg: 8.49)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2052
Number of successful refinements:     2052
Number of failed refinements:         0
Max. size of reached set before ref.: 100191
Max. size of reached set after ref.:  97267
Avg. size of reached set before ref.: 22034.08
Avg. size of reached set after ref.:  20352.36

Total time for CEGAR algorithm:     894.612s
Time for refinements:               310.400s
Average time for refinement:          0.151s
Max time for refinement:              1.429s

Code Coverage
-----------------------------
  Function coverage:      0.783
  Visited lines:          2008
  Total lines:            2301
  Line coverage:          0.873
  Visited conditions:     462
  Total conditions:       568
  Condition coverage:     0.813

CPAchecker general statistics
-----------------------------
Number of program locations:     3189
Number of CFA edges:             3577
Number of relevant variables:    465
Number of functions:             120
Number of loops:                 10
Size of reached set:             63803
  Number of reached locations:   1290 (40%)
    Avg states per location:     49
    Max states per location:     1337 (at node N67)
  Number of reached functions:   94 (78%)
  Number of partitions:          63550
    Avg size of partitions:      1
    Max size of partitions:      13 (with key [N1988 (before line 7239), Function main called from node N1961, stack depth 1 [545e57d7], stack [main]])
  Number of target states:       0
  Size of final wait list        283

Time for analysis setup:          5.758s
  Time for loading CPAs:          1.130s
  Time for loading parser:        0.711s
  Time for CFA construction:      3.809s
    Time for parsing file(s):     1.077s
    Time for AST to CFA:          1.365s
    Time for CFA sanity check:    0.234s
    Time for post-processing:     0.900s
      Time for var class.:        0.442s
Time for Analysis:              894.612s
CPU time for analysis:          894.520s
Total time for CPAchecker:      900.377s
Total CPU time for CPAchecker:  900.270s
Time for statistics:              0.832s

Time for Garbage Collector:      41.485s (in 873 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                901MB (   859 MiB) max;    444MB (   423 MiB) avg;    958MB (   913 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1126MB (  1074 MiB) max;    650MB (   620 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8691MB (  8289 MiB) max;   8332MB (  7946 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
