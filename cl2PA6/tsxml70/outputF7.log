scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--usb--storage--uas.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_r7hc0_ca/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6275: Function pointer *(cmnd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6267: Function pointer *(cmnd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5718: Function pointer *(cmnd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7224: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(3816UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scmd_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_print_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function int_to_scsilun to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_change_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_update_dma_alignment to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_hw_sectors to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6267: Ignoring function call through function pointer *(cmnd->scsi_done): (*(cmnd->scsi_done))(cmnd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_lock_device_for_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_stor_adjust_quirks to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6275: Ignoring function call through function pointer *(cmnd->scsi_done): (*(cmnd->scsi_done))(cmnd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5718: Ignoring function call through function pointer *(cmnd->scsi_done): (*(cmnd->scsi_done))(cmnd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_reset_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_tags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_streams to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_streams to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_add_host_with_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_scan_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_report_bus_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            936097 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  913802 (98%)
  Because of loop head:            20297 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1998 (0%)
  Times precision was empty:       19717 (2%)
  Times precision was {false}:     1466 (0%)
  Times result was cached:         891161 (95%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      23753 (3%)
  Times result was 'false':        100564 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         805589
  BDD entailment checks:           211471
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          58
Number of abstraction locations:          274
Max number of predicates per location:    15
Avg number of predicates per location:    3
Total predicates per abstraction:         6096011
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 241.72
Number of irrelevant predicates:          2791892 (46%)
Number of preds handled by boolean abs:   99544 (2%)
  Total number of models for allsat:      39813
  Max number of models for allsat:        24
  Avg number of models for allsat:        1.68

Time for post operator:                 94.225s
  Time for path formula creation:       91.959s
Time for strengthen operator:            4.299s
Time for prec operator:                341.810s
  Time for abstraction:                330.731s (Max:     1.490s, Count: 936097)
    Boolean abstraction:                32.814s
    Solving time:                       25.212s (Max:     0.020s)
    Model enumeration time:              3.871s
    Time for BDD construction:           0.947s (Max:     0.012s)
Time for merge operator:                 3.977s
Time for coverage check:                 0.374s
  Time for BDD entailment checks:        0.259s
Total time for SMT solver (w/o itp):    29.083s

Number of path formula cache hits:   4627100 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    76.571s

Total number of created targets for pointer analysis: 36241
   Number of created targets for uf: *(void)* is 10999
   Number of created targets for uf: *(struct_usb_host_endpoint)* is 471
   Number of created targets for uf: *signed_int is 28
   Number of created targets for uf: *unsigned_int is 14
   Number of created targets for uf: *unsigned_long_int is 309


Number of BDD nodes:                               6791
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       52983 (count: 387276, min: 0, max: 1787, avg: 0.14)
Time for BDD node cleanup:                             0.110s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.252s
  Time for transition matches:                         4.560s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.021s
Automaton transfers with branching:                0
Automaton transfer successors:                      5067916 (count: 5067916, min: 1, max: 1, avg: 1.00) [1 x 5067916]

CPA algorithm statistics
------------------------
Number of iterations:            3380428
Max size of waitlist:            352
Average size of waitlist:        178
Number of computed successors:   3933844
Max successors for one state:    2
Number of times merged:          297059
Number of times stopped:         416655
Number of times breaked:         1998

Total time for CPA algorithm:       549.323s (Max:     2.593s)
  Time for choose from waitlist:      1.661s
  Time for precision adjustment:    369.741s
  Time for transfer relation:       146.252s
  Time for merge operator:            8.170s
  Time for stop operator:             4.782s
  Time for adding to reached set:     7.028s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1998
Avg. length of target path (in blocks):              473105 (count: 1998, min: 25, max: 466, avg: 236.79)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 263.222s
  Counterexample analysis:                           251.562s (Max:     0.458s, Calls: 1998)
    Refinement sat check:                             93.636s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.264s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.287s
  Precision update:                                    1.543s
  ARG update:                                          7.228s

Length of refined path (in blocks):                  444976 (count: 1998, min: 13, max: 463, avg: 222.71)
Number of affected states:                            19757 (count: 1998, min: 1, max: 347, avg: 9.89)
Length (states) of path with itp 'true':             423221 (count: 1998, min: 9, max: 461, avg: 211.82)
Length (states) of path with itp non-trivial itp:     19757 (count: 1998, min: 1, max: 347, avg: 9.89)
Length (states) of path with itp 'false':              1998 (count: 1998, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         560 (count: 1998, min: 0, max: 9, avg: 0.28)
Equal non-trivial interpolants along paths:           17199 (count: 1998, min: 0, max: 339, avg: 8.61)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1998
Number of successful refinements:     1998
Number of failed refinements:         0
Max. size of reached set before ref.: 100191
Max. size of reached set after ref.:  97267
Avg. size of reached set before ref.: 21108.54
Avg. size of reached set after ref.:  19430.32

Total time for CEGAR algorithm:     894.860s
Time for refinements:               312.857s
Average time for refinement:          0.156s
Max time for refinement:              3.852s

Code Coverage
-----------------------------
  Function coverage:      0.783
  Visited lines:          2008
  Total lines:            2301
  Line coverage:          0.873
  Visited conditions:     462
  Total conditions:       568
  Condition coverage:     0.813

CPAchecker general statistics
-----------------------------
Number of program locations:     3189
Number of CFA edges:             3577
Number of relevant variables:    465
Number of functions:             120
Number of loops:                 10
Size of reached set:             63551
  Number of reached locations:   1290 (40%)
    Avg states per location:     49
    Max states per location:     1329 (at node N67)
  Number of reached functions:   94 (78%)
  Number of partitions:          63300
    Avg size of partitions:      1
    Max size of partitions:      13 (with key [N1988 (before line 7239), Function main called from node N1961, stack depth 1 [545e57d7], stack [main]])
  Number of target states:       0
  Size of final wait list        285

Time for analysis setup:          5.508s
  Time for loading CPAs:          1.010s
  Time for loading parser:        0.722s
  Time for CFA construction:      3.634s
    Time for parsing file(s):     1.036s
    Time for AST to CFA:          1.207s
    Time for CFA sanity check:    0.253s
    Time for post-processing:     0.916s
      Time for var class.:        0.422s
Time for Analysis:              894.861s
CPU time for analysis:          894.740s
Total time for CPAchecker:      900.375s
Total CPU time for CPAchecker:  900.250s
Time for statistics:              1.191s

Time for Garbage Collector:      45.466s (in 858 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                885MB (   844 MiB) max;    432MB (   412 MiB) avg;    969MB (   924 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1136MB (  1083 MiB) max;    631MB (   602 MiB) avg
Allocated non-heap memory:        44MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8693MB (  8290 MiB) max;   8318MB (  7933 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
