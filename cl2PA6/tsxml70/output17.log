scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--usb--storage--uas.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wu085tzt/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6275: Function pointer *(cmnd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6267: Function pointer *(cmnd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5718: Function pointer *(cmnd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7224: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(3816UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scmd_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_print_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function int_to_scsilun to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            10960 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10537 (96%)
  Because of loop head:            356 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         67 (1%)
  Times precision was empty:       1300 (12%)
  Times precision was {false}:     159 (1%)
  Times result was cached:         8230 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1271 (12%)
  Times result was 'false':        857 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         10262
  BDD entailment checks:           2542
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          32
Number of abstraction locations:          90
Max number of predicates per location:    10
Avg number of predicates per location:    3
Total predicates per abstraction:         36305
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 25.39
Number of irrelevant predicates:          9467 (26%)
Number of preds handled by boolean abs:   4122 (11%)
  Total number of models for allsat:      2779
  Max number of models for allsat:        9
  Avg number of models for allsat:        2.19

Time for post operator:                  4.761s
  Time for path formula creation:        4.617s
Time for strengthen operator:            0.212s
Time for prec operator:                  9.944s
  Time for abstraction:                  9.567s (Max:     0.027s, Count: 10960)
    Boolean abstraction:                 2.618s
    Solving time:                        1.882s (Max:     0.017s)
    Model enumeration time:              0.431s
    Time for BDD construction:           0.136s (Max:     0.010s)
Time for merge operator:                 0.198s
Time for coverage check:                 0.037s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     2.322s

Number of path formula cache hits:   53337 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.223s

Total number of created targets for pointer analysis: 80
   Number of created targets for uf: *(void)* is 41


Number of BDD nodes:                               1411
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3923 (count: 13056, min: 0, max: 552, avg: 0.30)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.417s
Automaton transfers with branching:                0
Automaton transfer successors:                        61851 (count: 61851, min: 1, max: 1, avg: 1.00) [1 x 61851]

CPA algorithm statistics
------------------------
Number of iterations:            41485
Max size of waitlist:            122
Average size of waitlist:        88
Number of computed successors:   48780
Max successors for one state:    2
Number of times merged:          3860
Number of times stopped:         5162
Number of times breaked:         67

Total time for CPA algorithm:        19.871s (Max:     1.319s)
  Time for choose from waitlist:      0.112s
  Time for precision adjustment:     10.948s
  Time for transfer relation:         7.164s
  Time for merge operator:            0.423s
  Time for stop operator:             0.275s
  Time for adding to reached set:     0.224s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   67
Avg. length of target path (in blocks):                5244 (count: 67, min: 25, max: 101, avg: 78.27)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.322s
  Counterexample analysis:                             3.720s (Max:     0.101s, Calls: 67)
    Refinement sat check:                              1.645s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.108s
  Precision update:                                    0.129s
  ARG update:                                          0.202s

Length of refined path (in blocks):                    4892 (count: 67, min: 13, max: 100, avg: 73.01)
Number of affected states:                             1189 (count: 67, min: 1, max: 53, avg: 17.75)
Length (states) of path with itp 'true':               3636 (count: 67, min: 9, max: 89, avg: 54.27)
Length (states) of path with itp non-trivial itp:      1189 (count: 67, min: 1, max: 53, avg: 17.75)
Length (states) of path with itp 'false':                67 (count: 67, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         196 (count: 67, min: 0, max: 8, avg: 2.93)
Equal non-trivial interpolants along paths:             926 (count: 67, min: 0, max: 46, avg: 13.82)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                67
Number of successful refinements:     67
Number of failed refinements:         0
Max. size of reached set before ref.: 5287
Max. size of reached set after ref.:  5236
Avg. size of reached set before ref.: 1731.78
Avg. size of reached set after ref.:  1182.46

Total time for CEGAR algorithm:      24.634s
Time for refinements:                 4.671s
Average time for refinement:          0.069s
Max time for refinement:              0.124s

Code Coverage
-----------------------------
  Function coverage:      0.425
  Visited lines:          1281
  Total lines:            2301
  Line coverage:          0.557
  Visited conditions:     218
  Total conditions:       568
  Condition coverage:     0.384

CPAchecker general statistics
-----------------------------
Number of program locations:     3189
Number of CFA edges:             3577
Number of relevant variables:    465
Number of functions:             120
Number of loops:                 10
Size of reached set:             5957
  Number of reached locations:   554 (17%)
    Avg states per location:     10
    Max states per location:     115 (at node N67)
  Number of reached functions:   51 (43%)
  Number of partitions:          5930
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1988 (before line 7239), Function main called from node N1961, stack depth 1 [545e57d7], stack [main]])
  Number of target states:       0
  Size of final wait list        118

Time for analysis setup:          5.600s
  Time for loading CPAs:          1.004s
  Time for loading parser:        0.753s
  Time for CFA construction:      3.721s
    Time for parsing file(s):     1.089s
    Time for AST to CFA:          1.246s
    Time for CFA sanity check:    0.254s
    Time for post-processing:     0.929s
      Time for var class.:        0.430s
Time for Analysis:               24.634s
CPU time for analysis:           24.620s
Total time for CPAchecker:       30.239s
Total CPU time for CPAchecker:   30.220s
Time for statistics:              0.196s

Time for Garbage Collector:       0.489s (in 39 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    71 MiB) max;     48MB (    45 MiB) avg;     77MB (    74 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
