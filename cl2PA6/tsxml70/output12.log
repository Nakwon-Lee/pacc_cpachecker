scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--usb--storage--uas.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8y40u2v2/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6275: Function pointer *(cmnd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6267: Function pointer *(cmnd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5718: Function pointer *(cmnd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7224: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(3816UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_change_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_update_dma_alignment to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_hw_sectors to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_streams to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_lock_device_for_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_report_bus_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_streams to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scmd_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_print_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5718: Ignoring function call through function pointer *(cmnd->scsi_done): (*(cmnd->scsi_done))(cmnd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_get_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_stor_adjust_quirks to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_tags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_add_host_with_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_scan_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6267: Ignoring function call through function pointer *(cmnd->scsi_done): (*(cmnd->scsi_done))(cmnd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6275: Ignoring function call through function pointer *(cmnd->scsi_done): (*(cmnd->scsi_done))(cmnd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            31444 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  28467 (91%)
  Because of loop head:            2951 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         26 (0%)
  Times precision was empty:       29785 (95%)
  Times precision was {false}:     219 (1%)
  Times result was cached:         1166 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      274 (1%)
  Times result was 'false':        335 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         32193
  BDD entailment checks:           5527
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          13
Number of abstraction locations:          29
Max number of predicates per location:    12
Avg number of predicates per location:    4
Total predicates per abstraction:         11008
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 22.33
Number of irrelevant predicates:          5438 (49%)
Number of preds handled by boolean abs:   1352 (12%)
  Total number of models for allsat:      1003
  Max number of models for allsat:        130
  Avg number of models for allsat:        3.66

Time for post operator:                  7.958s
  Time for path formula creation:        7.771s
Time for strengthen operator:            0.419s
Time for prec operator:                  4.087s
  Time for abstraction:                  3.189s (Max:     0.041s, Count: 31444)
    Boolean abstraction:                 0.877s
    Solving time:                        0.584s (Max:     0.015s)
    Model enumeration time:              0.147s
    Time for BDD construction:           0.193s (Max:     0.025s)
Time for merge operator:                 0.543s
Time for coverage check:                 0.066s
  Time for BDD entailment checks:        0.045s
Total time for SMT solver (w/o itp):     0.731s

Number of path formula cache hits:   177251 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.793s

Total number of created targets for pointer analysis: 1781
   Number of created targets for uf: *(void)* is 14
   Number of created targets for uf: *(struct_usb_host_endpoint)* is 5
   Number of created targets for uf: *signed_int is 12
   Number of created targets for uf: *unsigned_int is 2
   Number of created targets for uf: *unsigned_long_int is 507


Number of BDD nodes:                               3172
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1094 (count: 38377, min: 0, max: 124, avg: 0.03)
Time for BDD node cleanup:                             0.025s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.647s
  Time for transition matches:                         0.343s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       177614 (count: 177614, min: 1, max: 1, avg: 1.00) [1 x 177614]

CPA algorithm statistics
------------------------
Number of iterations:            120109
Max size of waitlist:            30
Average size of waitlist:        13
Number of computed successors:   138086
Max successors for one state:    2
Number of times merged:          13333
Number of times stopped:         17165
Number of times breaked:         26

Total time for CPA algorithm:        22.414s (Max:     3.402s)
  Time for choose from waitlist:      0.281s
  Time for precision adjustment:      6.352s
  Time for transfer relation:        12.514s
  Time for merge operator:            1.056s
  Time for stop operator:             0.494s
  Time for adding to reached set:     0.430s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   26
Avg. length of target path (in blocks):                 907 (count: 26, min: 25, max: 65, avg: 34.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.188s
  Counterexample analysis:                             0.628s (Max:     0.042s, Calls: 26)
    Refinement sat check:                              0.405s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.034s
  Precision update:                                    0.040s
  ARG update:                                          0.458s

Length of refined path (in blocks):                     396 (count: 26, min: 12, max: 22, avg: 15.23)
Number of affected states:                              129 (count: 26, min: 1, max: 12, avg: 4.96)
Length (states) of path with itp 'true':                241 (count: 26, min: 0, max: 13, avg: 9.27)
Length (states) of path with itp non-trivial itp:       129 (count: 26, min: 1, max: 12, avg: 4.96)
Length (states) of path with itp 'false':                26 (count: 26, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 26, min: 0, max: 1, avg: 0.04)
Equal non-trivial interpolants along paths:             102 (count: 26, min: 0, max: 11, avg: 3.92)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                26
Number of successful refinements:     26
Number of failed refinements:         0
Max. size of reached set before ref.: 6473
Max. size of reached set after ref.:  2238
Avg. size of reached set before ref.: 4612.04
Avg. size of reached set after ref.:  115.73

Total time for CEGAR algorithm:      23.841s
Time for refinements:                 1.424s
Average time for refinement:          0.054s
Max time for refinement:              0.121s

Code Coverage
-----------------------------
  Function coverage:      0.575
  Visited lines:          1655
  Total lines:            2301
  Line coverage:          0.719
  Visited conditions:     346
  Total conditions:       568
  Condition coverage:     0.609

CPAchecker general statistics
-----------------------------
Number of program locations:     3189
Number of CFA edges:             3577
Number of relevant variables:    465
Number of functions:             120
Number of loops:                 10
Size of reached set:             3682
  Number of reached locations:   913 (29%)
    Avg states per location:     4
    Max states per location:     32 (at node N194)
  Number of reached functions:   69 (57%)
  Number of partitions:          3666
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N1988 (before line 7239), Function main called from node N1961, stack depth 1 [545e57d7], stack [main]])
  Number of target states:       0
  Size of final wait list        21

Time for analysis setup:          6.420s
  Time for loading CPAs:          1.481s
  Time for loading parser:        0.735s
  Time for CFA construction:      4.010s
    Time for parsing file(s):     1.059s
    Time for AST to CFA:          1.345s
    Time for CFA sanity check:    0.308s
    Time for post-processing:     1.111s
      Time for var class.:        0.508s
Time for Analysis:               23.841s
CPU time for analysis:           23.840s
Total time for CPAchecker:       30.265s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.160s

Time for Garbage Collector:       0.790s (in 52 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 85MB (    81 MiB) max;     52MB (    49 MiB) avg;     91MB (    87 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
