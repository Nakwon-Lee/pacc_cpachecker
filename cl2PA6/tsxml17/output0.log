scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--block--DAC960.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_s2u5h11o/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6082: Dead code detected: __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6085: Dead code detected: __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6091: Dead code detected: __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6106;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6106;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6106;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6106;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 12427: Function pointer *(KernelCommand->CompletionFunction) with type void (*)(struct DAC960_V1_KernelCommand *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13318: Function pointer *(KernelCommand->CompletionFunction) with type void (*)(struct DAC960_V2_KernelCommand *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6528: Function pointer *(ops->map_sg) with type int (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6569: Function pointer *(ops->unmap_sg) with type void (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 15842: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15844: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15846: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15852: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15854: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15862: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15864: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___11 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15866: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15868: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___13 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15870: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___14 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_10 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_open_10 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_15 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_fault to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 7777-7778: Ignoring parameters passed as varargs to function DAC960_Message: DAC960_Message(4, (unsigned char *)"Illegal Logical Device Geometry %d\n", p, __CPAchecker_TMP_6) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 11307-11308: Ignoring parameters passed as varargs to function DAC960_Message: DAC960_Message(4, (unsigned char *)"More than %d DAC960 Controllers detected - ignoring from Controller at\n", (DAC960_Controller_T *)0, 8) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function check_disk_change to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15701: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function PDE_DATA to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv__builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vsprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv__builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6347: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6366: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size(from, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_gendisk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_cleanup_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_pool_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_pool_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_peek_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 13120-13122: Ignoring parameters passed as varargs to function DAC960_Message: DAC960_Message(6, (unsigned char *)"Logical Drive %d (/dev/rd/c%dd%d) is now %s\n", Controller, (int)LogicalDeviceNumber, __CPAchecker_TMP_94, (int)LogicalDeviceNumber, __CPAchecker_TMP_96) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 13127-13130: Ignoring parameters passed as varargs to function DAC960_Message: DAC960_Message(6, (unsigned char *)"Logical Drive %d (/dev/rd/c%dd%d) Errors: Soft = %d, Failed = %d, Deferred Write = %d\n", Controller, (int)LogicalDeviceNumber, __CPAchecker_TMP_107, (int)LogicalDeviceNumber, __CPAchecker_TMP_108, __CPAchecker_TMP_109, __CPAchecker_TMP_110) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 13167-13169: Ignoring parameters passed as varargs to function DAC960_Message: DAC960_Message(5, (unsigned char *)"Logical Drive %d (/dev/rd/c%dd%d) Background Initialization %s\n", Controller, (int)LogicalDeviceNumber, __CPAchecker_TMP_124, (int)LogicalDeviceNumber, __CPAchecker_TMP_125) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 13264: Ignoring function call through function pointer *(Controller->QueueCommand): (*(Controller->QueueCommand))(Command); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13293: Ignoring function call through function pointer *(Controller->QueueCommand): (*(Controller->QueueCommand))(Command); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13230: Ignoring function call through function pointer *(Controller->QueueCommand): (*(Controller->QueueCommand))(Command); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 13191-13193: Ignoring parameters passed as varargs to function DAC960_Message: DAC960_Message(6, (unsigned char *)"Logical Drive %d (/dev/rd/c%dd%d) No Longer Exists\n", Controller, LogicalDriveNumber, __CPAchecker_TMP_127, LogicalDriveNumber) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 13076-13077: Ignoring parameters passed as varargs to function DAC960_Message: DAC960_Message(6, (unsigned char *)"Physical Device %d:%d No Longer Exists\n", Controller, __CPAchecker_TMP_87, __CPAchecker_TMP_88) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 13034-13036: Ignoring parameters passed as varargs to function DAC960_Message: DAC960_Message(6, (unsigned char *)"Physical Device %d:%d is now %s\n", Controller, __CPAchecker_TMP_29, __CPAchecker_TMP_30, __CPAchecker_TMP_32) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 13041-13044: Ignoring parameters passed as varargs to function DAC960_Message: DAC960_Message(6, (unsigned char *)"Physical Device %d:%d Errors: Parity = %d, Soft = %d, Hard = %d, Misc = %d\n", Controller, __CPAchecker_TMP_71, __CPAchecker_TMP_72, __CPAchecker_TMP_73, __CPAchecker_TMP_74, __CPAchecker_TMP_75, __CPAchecker_TMP_76) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 12961-12962: Ignoring parameters passed as varargs to function DAC960_Message: DAC960_Message(6, (unsigned char *)"Physical Device %d:%d No Longer Exists\n", Controller, __CPAchecker_TMP_6, __CPAchecker_TMP_7) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 13045-13048: Ignoring parameters passed as varargs to function DAC960_Message: DAC960_Message(6, (unsigned char *)"Physical Device %d:%d Errors: Timeouts = %d, Retries = %d, Aborts = %d, Predicted = %d\n", Controller, __CPAchecker_TMP_77, __CPAchecker_TMP_78, __CPAchecker_TMP_79, __CPAchecker_TMP_80, __CPAchecker_TMP_81, __CPAchecker_TMP_82) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 12806-12807: Ignoring parameters passed as varargs to function DAC960_Message: DAC960_Message(6, (unsigned char *)"Unknown Controller Event Code %04X\n", Controller, Event->EventCode) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 12803: Ignoring parameters passed as varargs to function DAC960_Message: DAC960_Message(6, (unsigned char *)"Controller %s\n", Controller, EventMessage) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 12799-12800: Ignoring parameters passed as varargs to function DAC960_Message: DAC960_Message(6, (unsigned char *)"Enclosure %d %s\n", Controller, __CPAchecker_TMP_26, (unsigned char *)(&MessageBuffer)) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 12780-12781: Ignoring parameters passed as varargs to function DAC960_Message: DAC960_Message(6, (unsigned char *)"Physical Device %d:%d %s\n", Controller, __CPAchecker_TMP_15, __CPAchecker_TMP_16, EventMessage) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 12770-12772: Ignoring parameters passed as varargs to function DAC960_Message: DAC960_Message(5, (unsigned char *)"Logical Drive %d (/dev/rd/c%dd%d) %s\n", Controller, __CPAchecker_TMP_9, __CPAchecker_TMP_10, __CPAchecker_TMP_11, EventMessage) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 12765-12767: Ignoring parameters passed as varargs to function DAC960_Message: DAC960_Message(6, (unsigned char *)"Logical Drive %d (/dev/rd/c%dd%d) %s\n", Controller, __CPAchecker_TMP_6, __CPAchecker_TMP_7, __CPAchecker_TMP_8, EventMessage) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 12761-12762: Ignoring parameters passed as varargs to function DAC960_Message: DAC960_Message(6, (unsigned char *)"Physical Device %d:%d %s\n", Controller, __CPAchecker_TMP_4, __CPAchecker_TMP_5, EventMessage) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 12753-12754: Ignoring parameters passed as varargs to function DAC960_Message: DAC960_Message(6, (unsigned char *)"Unknown Controller Event Code %04X\n", Controller, Event->EventCode) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function blk_rq_map_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 12484-12485: Ignoring parameters passed as varargs to function DAC960_Message: DAC960_Message(4, (unsigned char *)"Error Condition %s on %s:\n", Controller, SenseErrors[__CPAchecker_TMP_1], CommandName) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 13242: Ignoring function call through function pointer *(Controller->QueueCommand): (*(Controller->QueueCommand))(Command); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13318: Ignoring function call through function pointer *(KernelCommand->CompletionFunction): (*(KernelCommand->CompletionFunction))(KernelCommand); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 12822-12824: Ignoring parameters passed as varargs to function DAC960_Message: DAC960_Message(5, (unsigned char *)"%s in Progress: Logical Drive %d (/dev/rd/c%dd%d) %d%% completed\n", Controller, MessageString, LogicalDeviceNumber, __CPAchecker_TMP_0, LogicalDeviceNumber, ((BlocksCompleted >> 7) * 100UL) / (LogicalDeviceSize >> 7)) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1872 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1654 (88%)
  Because of loop head:            218 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         0 (0%)
  Times precision was empty:       1872 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1418
  BDD entailment checks:           172
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       246
Number of predicates discovered:          0

Time for post operator:                 14.489s
  Time for path formula creation:       14.411s
Time for strengthen operator:            0.073s
Time for prec operator:                  0.277s
  Time for abstraction:                  0.073s (Max:     0.019s, Count: 1872)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 4.579s
Time for coverage check:                 0.009s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     0.000s

Number of path formula cache hits:   2630 (16%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    14.033s

Total number of created targets for pointer analysis: 223540
   Number of created targets for uf: *(struct_DAC960_SCSI_Inquiry_UnitSerialNumber)* is 21
   Number of created targets for uf: *(struct_DAC960_V2_PhysicalDeviceInfo)* is 22
   Number of created targets for uf: *(unsigned_char)* is 43
   Number of created targets for uf: *(struct_request)* is 19
   Number of created targets for uf: *(union_DAC960_V2_StatusMailbox)* is 4
   Number of created targets for uf: *(struct_DAC960_Command)* is 397
   Number of created targets for uf: *(struct_completion)* is 15
   Number of created targets for uf: *(struct_DAC960_V2_LogicalDeviceInfo)* is 22
   Number of created targets for uf: *unsigned_long_int is 10
   Number of created targets for uf: *unsigned_short_int is 53
   Number of created targets for uf: *enum_ldv_27334 is 21
   Number of created targets for uf: *signed_int is 145
   Number of created targets for uf: *unsigned_char is 2635
   Number of created targets for uf: *enum_ldv_27713 is 2
   Number of created targets for uf: *_Bool is 367
   Number of created targets for uf: *enum_ldv_27492 is 10
   Number of created targets for uf: *unsigned_int is 103


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 2045, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.171s
Automaton transfers with branching:                0
Automaton transfer successors:                        16446 (count: 16446, min: 1, max: 1, avg: 1.00) [1 x 16446]

CPA algorithm statistics
------------------------
Number of iterations:            6800
Max size of waitlist:            797
Average size of waitlist:        332
Number of computed successors:   8390
Max successors for one state:    2
Number of times merged:          623
Number of times stopped:         795
Number of times breaked:         0

Total time for CPA algorithm:        21.157s (Max:    21.157s)
  Time for choose from waitlist:      0.033s
  Time for precision adjustment:      0.597s
  Time for transfer relation:        15.455s
  Time for merge operator:            4.705s
  Time for stop operator:             0.070s
  Time for adding to reached set:     0.087s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   0

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.370
  Visited lines:          3182
  Total lines:            7528
  Line coverage:          0.423
  Visited conditions:     780
  Total conditions:       2752
  Condition coverage:     0.283

CPAchecker general statistics
-----------------------------
Number of program locations:     11288
Number of CFA edges:             13574
Number of relevant variables:    1546
Number of functions:             273
Number of loops:                 100
Size of reached set:             7596
  Number of reached locations:   1691 (15%)
    Avg states per location:     4
    Max states per location:     128 (at node N846)
  Number of reached functions:   101 (37%)
  Number of partitions:          7596
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        797

Time for analysis setup:          9.093s
  Time for loading CPAs:          1.151s
  Time for loading parser:        0.662s
  Time for CFA construction:      7.114s
    Time for parsing file(s):     1.361s
    Time for AST to CFA:          2.621s
    Time for CFA sanity check:    0.702s
    Time for post-processing:     2.238s
      Time for var class.:        1.040s
Time for Analysis:               21.157s
CPU time for analysis:           21.160s
Total time for CPAchecker:       30.255s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.353s

Time for Garbage Collector:       0.721s (in 63 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 93MB (    88 MiB) max;     59MB (    57 MiB) avg;    100MB (    95 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     34MB (    32 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8092MB (  7717 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
