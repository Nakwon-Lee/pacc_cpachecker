scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-08_1a-drivers--scsi--aic7xxx--aic7xxx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_p_31v28u/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 19052: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 19693: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(256UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdev_prefix_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_attach_transport to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 21272: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_shutdown_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_is_host_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scmd_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_puts to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_putc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function panic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_report_bus_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_dv_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irqsave to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_release_transport to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            137309 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  116946 (85%)
  Because of loop head:            20152 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         211 (0%)
  Times precision was empty:       49957 (36%)
  Times precision was {false}:     2102 (2%)
  Times result was cached:         81954 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3296 (2%)
  Times result was 'false':        8048 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         187470
  BDD entailment checks:           23478
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       105
Number of predicates discovered:          11
Number of abstraction locations:          143
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         363036
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 67.25
Number of irrelevant predicates:          182249 (50%)
Number of preds handled by boolean abs:   9016 (2%)
  Total number of models for allsat:      3475
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.05

Time for post operator:                 52.699s
  Time for path formula creation:       52.192s
Time for strengthen operator:            1.006s
Time for prec operator:                360.334s
  Time for abstraction:                357.786s (Max:     1.410s, Count: 137309)
    Boolean abstraction:               239.987s
    Solving time:                      214.175s (Max:     0.927s)
    Model enumeration time:             55.810s
    Time for BDD construction:           0.147s (Max:     0.008s)
Time for merge operator:                 6.960s
Time for coverage check:                 0.118s
  Time for BDD entailment checks:        0.060s
Total time for SMT solver (w/o itp):   269.985s

Number of path formula cache hits:   1014761 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    44.950s

Total number of created targets for pointer analysis: 944967
   Number of created targets for uf: *unsigned_short_int is 24
   Number of created targets for uf: *signed_int is 27
   Number of created targets for uf: *(char)* is 12856
   Number of created targets for uf: *unsigned_char is 58381
   Number of created targets for uf: *(unsigned_int)* is 841
   Number of created targets for uf: *unsigned_int is 9341
   Number of created targets for uf: *char is 185
   Number of created targets for uf: *(struct_ahc_tmode_tstate)* is 19
   Number of created targets for uf: *unsigned_long_int is 193
   Number of created targets for uf: *enum_ldv_27870 is 3


Number of BDD nodes:                               577
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6881 (count: 104515, min: 0, max: 226, avg: 0.07)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.723s
  Time for transition matches:                         0.978s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                      1050081 (count: 1050081, min: 1, max: 1, avg: 1.00) [1 x 1050081]

CPA algorithm statistics
------------------------
Number of iterations:            620365
Max size of waitlist:            296
Average size of waitlist:        94
Number of computed successors:   749564
Max successors for one state:    2
Number of times merged:          81996
Number of times stopped:         95801
Number of times breaked:         211

Total time for CPA algorithm:       445.536s (Max:    25.872s)
  Time for choose from waitlist:      0.434s
  Time for precision adjustment:    365.774s
  Time for transfer relation:        65.868s
  Time for merge operator:            8.229s
  Time for stop operator:             1.344s
  Time for adding to reached set:     1.323s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   211
Avg. length of target path (in blocks):               14228 (count: 211, min: 22, max: 120, avg: 67.43)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 443.423s
  Counterexample analysis:                           441.934s (Max:     5.256s, Calls: 211)
    Refinement sat check:                            426.006s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.067s
  Precision update:                                    0.137s
  ARG update:                                          1.134s

Length of refined path (in blocks):                   10228 (count: 211, min: 18, max: 95, avg: 48.47)
Number of affected states:                             4527 (count: 211, min: 1, max: 94, avg: 21.45)
Length (states) of path with itp 'true':               5490 (count: 211, min: 0, max: 66, avg: 26.02)
Length (states) of path with itp non-trivial itp:      4527 (count: 211, min: 1, max: 94, avg: 21.45)
Length (states) of path with itp 'false':               211 (count: 211, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 211, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4316 (count: 211, min: 0, max: 93, avg: 20.45)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                211
Number of successful refinements:     211
Number of failed refinements:         0
Max. size of reached set before ref.: 9167
Max. size of reached set after ref.:  6341
Avg. size of reached set before ref.: 4699.17
Avg. size of reached set after ref.:  1665.52

Total time for CEGAR algorithm:     890.144s
Time for refinements:               444.389s
Average time for refinement:          2.106s
Max time for refinement:              5.272s

Code Coverage
-----------------------------
  Function coverage:      0.139
  Visited lines:          1710
  Total lines:            9376
  Line coverage:          0.182
  Visited conditions:     372
  Total conditions:       3504
  Condition coverage:     0.106

CPAchecker general statistics
-----------------------------
Number of program locations:     14742
Number of CFA edges:             18071
Number of relevant variables:    2867
Number of functions:             397
Number of loops:                 128
Size of reached set:             5615
  Number of reached locations:   858 (6%)
    Avg states per location:     6
    Max states per location:     44 (at node N10013)
  Number of reached functions:   55 (14%)
  Number of partitions:          5597
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N12333 (before line 19710), Function main called from node N12298, stack depth 1 [72b60be8], stack [main]])
  Number of target states:       0
  Size of final wait list        96

Time for analysis setup:         10.170s
  Time for loading CPAs:          1.274s
  Time for loading parser:        0.659s
  Time for CFA construction:      8.093s
    Time for parsing file(s):     1.499s
    Time for AST to CFA:          2.908s
    Time for CFA sanity check:    0.945s
    Time for post-processing:     2.657s
      Time for var class.:        1.302s
Time for Analysis:              890.144s
CPU time for analysis:          890.080s
Total time for CPAchecker:      900.321s
Total CPU time for CPAchecker:  900.230s
Time for statistics:              0.238s

Time for Garbage Collector:       9.813s (in 829 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                227MB (   216 MiB) max;    132MB (   126 MiB) avg;    244MB (   232 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    40 MiB) peak
Allocated heap memory:           282MB (   269 MiB) max;    197MB (   188 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8425MB (  8035 MiB) max;   8285MB (  7901 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
