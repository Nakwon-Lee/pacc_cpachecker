scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-08_1a-drivers--scsi--aic7xxx--aic7xxx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_e0s5skc4/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 19052: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 19693: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(256UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_puts to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_putc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_is_host_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_attach_transport to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtol to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdev_prefix_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function panic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_report_bus_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scmd_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_device_lookup_by_target to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 21272: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function scsi_change_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_dv_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irqsave to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_display_xfer_agreement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_report_device_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_unmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_alloc_attrs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 19052: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7427: Ignoring function call through function pointer *(ahc->bus_intr): (*(ahc->bus_intr))(ahc); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11005: Ignoring function call through function pointer *(ahc->bus_chip_init): error = (*(ahc->bus_chip_init))(ahc); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __builtin_alloca to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13169: Ignoring function call through function pointer *(cur_patch->patch_func): tmp = (*(cur_patch->patch_func))(ahc); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 13169: Unsupported feature (recursion): tmp = ahc_pci_chip_init(ahc); (line was originally pointer call(ahc_pci_chip_init) tmp = (*(cur_patch->patch_func))(ahc);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            295671 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  255949 (87%)
  Because of loop head:            39704 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18 (0%)
  Times precision was empty:       294186 (99%)
  Times precision was {false}:     322 (0%)
  Times result was cached:         992 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      171 (0%)
  Times result was 'false':        353 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         297014
  BDD entailment checks:           65372
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       105
Number of predicates discovered:          7
Number of abstraction locations:          27
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         3094
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 6.28
Number of irrelevant predicates:          2093 (68%)
Number of preds handled by boolean abs:   386 (12%)
  Total number of models for allsat:      241
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.41

Time for post operator:                236.400s
  Time for path formula creation:      234.389s
Time for strengthen operator:            2.265s
Time for prec operator:                 11.189s
  Time for abstraction:                  5.167s (Max:     0.833s, Count: 295671)
    Boolean abstraction:                 2.487s
    Solving time:                        2.414s (Max:     0.619s)
    Model enumeration time:              0.188s
    Time for BDD construction:           0.046s (Max:     0.008s)
Time for merge operator:                17.206s
Time for coverage check:                 0.141s
  Time for BDD entailment checks:        0.103s
Total time for SMT solver (w/o itp):     2.602s

Number of path formula cache hits:   523021 (26%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   220.065s

Total number of created targets for pointer analysis: 2529182
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *(unsigned_int)* is 211
   Number of created targets for uf: *unsigned_long_int is 26
   Number of created targets for uf: *unsigned_short_int is 141
   Number of created targets for uf: *(struct_sg_map_node)* is 3
   Number of created targets for uf: *(char)* is 3676
   Number of created targets for uf: *signed_int is 1478
   Number of created targets for uf: *unsigned_char is 14113
   Number of created targets for uf: *(struct_ahc_dma_seg)* is 3
   Number of created targets for uf: *unsigned_long_long_int is 7
   Number of created targets for uf: *unsigned_int is 1231
   Number of created targets for uf: *char is 5
   Number of created targets for uf: *(struct_patch)* is 2
   Number of created targets for uf: *(struct_ahc_tmode_tstate)* is 516
   Number of created targets for uf: *enum_ldv_27870 is 564


Number of BDD nodes:                               313
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         499 (count: 362357, min: 0, max: 53, avg: 0.00)
Time for BDD node cleanup:                             0.068s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.593s
  Time for transition matches:                         2.160s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      1913873 (count: 1913873, min: 1, max: 1, avg: 1.00) [1 x 1913873]

CPA algorithm statistics
------------------------
Number of iterations:            1280153
Max size of waitlist:            824
Average size of waitlist:        358
Number of computed successors:   1465676
Max successors for one state:    2
Number of times merged:          115821
Number of times stopped:         180731
Number of times breaked:         18

Total time for CPA algorithm:       383.079s (Max:   332.989s)
  Time for choose from waitlist:      1.019s
  Time for precision adjustment:     24.310s
  Time for transfer relation:       325.883s
  Time for merge operator:           19.628s
  Time for stop operator:             2.438s
  Time for adding to reached set:     4.164s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   18
Avg. length of target path (in blocks):                 550 (count: 18, min: 22, max: 39, avg: 30.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  12.217s
  Counterexample analysis:                            11.514s (Max:     1.062s, Calls: 18)
    Refinement sat check:                             10.923s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.025s
  Precision update:                                    0.008s
  ARG update:                                          0.644s

Length of refined path (in blocks):                     410 (count: 18, min: 18, max: 31, avg: 22.78)
Number of affected states:                              197 (count: 18, min: 1, max: 30, avg: 10.94)
Length (states) of path with itp 'true':                195 (count: 18, min: 0, max: 19, avg: 10.83)
Length (states) of path with itp non-trivial itp:       197 (count: 18, min: 1, max: 30, avg: 10.94)
Length (states) of path with itp 'false':                18 (count: 18, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 18, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             179 (count: 18, min: 0, max: 29, avg: 9.94)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                18
Number of successful refinements:     18
Number of failed refinements:         0
Max. size of reached set before ref.: 23122
Max. size of reached set after ref.:  11354
Avg. size of reached set before ref.: 12461.50
Avg. size of reached set after ref.:  659.28

Total time for CEGAR algorithm:     395.604s
Time for refinements:                12.519s
Average time for refinement:          0.695s
Max time for refinement:              1.153s

Code Coverage
-----------------------------
  Function coverage:      0.607
  Visited lines:          5004
  Total lines:            9376
  Line coverage:          0.534
  Visited conditions:     1617
  Total conditions:       3504
  Condition coverage:     0.461

CPAchecker general statistics
-----------------------------
Number of program locations:     14742
Number of CFA edges:             18071
Number of relevant variables:    2867
Number of functions:             397
Number of loops:                 128
Size of reached set:             1072153
  Size of final wait list        621

Time for analysis setup:         10.353s
  Time for loading CPAs:          1.389s
  Time for loading parser:        0.702s
  Time for CFA construction:      8.095s
    Time for parsing file(s):     1.492s
    Time for AST to CFA:          2.985s
    Time for CFA sanity check:    0.984s
    Time for post-processing:     2.469s
      Time for var class.:        1.277s
Time for Analysis:              395.604s
CPU time for analysis:          395.580s
Total time for CPAchecker:      405.962s
Total CPU time for CPAchecker:  405.900s
Time for statistics:              6.849s

Time for Garbage Collector:      36.945s (in 345 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2026MB (  1932 MiB) max;    738MB (   704 MiB) avg;   2093MB (  1996 MiB) peak
Used non-heap memory:             48MB (    46 MiB) max;     40MB (    38 MiB) avg;     48MB (    46 MiB) peak
Allocated heap memory:          2483MB (  2368 MiB) max;   1121MB (  1069 MiB) avg
Allocated non-heap memory:        50MB (    47 MiB) max;     49MB (    47 MiB) avg
Total process virtual memory:   8153MB (  7775 MiB) max;   8140MB (  7763 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
