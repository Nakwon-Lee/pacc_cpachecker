scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-08_1a-drivers--scsi--aic7xxx--aic7xxx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_99yu1tcb/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 19052: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 19693: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(256UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_puts to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_putc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_is_host_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_attach_transport to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtol to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdev_prefix_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function panic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_report_bus_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scmd_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_device_lookup_by_target to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 21272: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function scsi_change_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_dv_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4927 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3935 (80%)
  Because of loop head:            988 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4 (0%)
  Times precision was empty:       4728 (96%)
  Times precision was {false}:     40 (1%)
  Times result was cached:         109 (2%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      50 (1%)
  Times result was 'false':        22 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         10189
  BDD entailment checks:           927
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       105
Number of predicates discovered:          5
Number of abstraction locations:          18
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         316
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 3.51
Number of irrelevant predicates:          207 (66%)
Number of preds handled by boolean abs:   79 (25%)
  Total number of models for allsat:      56
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.12

Time for post operator:                  9.579s
  Time for path formula creation:        9.465s
Time for strengthen operator:            0.141s
Time for prec operator:                  2.297s
  Time for abstraction:                  1.968s (Max:     0.870s, Count: 4927)
    Boolean abstraction:                 1.299s
    Solving time:                        1.205s (Max:     0.645s)
    Model enumeration time:              0.081s
    Time for BDD construction:           0.011s (Max:     0.005s)
Time for merge operator:                 0.694s
Time for coverage check:                 0.045s
  Time for BDD entailment checks:        0.032s
Total time for SMT solver (w/o itp):     1.286s

Number of path formula cache hits:   43074 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.661s

Total number of created targets for pointer analysis: 26382
   Number of created targets for uf: *unsigned_short_int is 38
   Number of created targets for uf: *(char)* is 1051
   Number of created targets for uf: *signed_int is 8
   Number of created targets for uf: *unsigned_char is 4033
   Number of created targets for uf: *(unsigned_int)* is 61
   Number of created targets for uf: *unsigned_int is 337
   Number of created targets for uf: *char is 51
   Number of created targets for uf: *(struct_ahc_tmode_tstate)* is 26
   Number of created targets for uf: *enum_ldv_27870 is 38


Number of BDD nodes:                               213
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         151 (count: 6190, min: 0, max: 39, avg: 0.02)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.241s
Automaton transfers with branching:                0
Automaton transfer successors:                        54828 (count: 54828, min: 1, max: 1, avg: 1.00) [1 x 54828]

CPA algorithm statistics
------------------------
Number of iterations:            31913
Max size of waitlist:            217
Average size of waitlist:        108
Number of computed successors:   38155
Max successors for one state:    2
Number of times merged:          4631
Number of times stopped:         5489
Number of times breaked:         4

Total time for CPA algorithm:        16.749s (Max:     5.412s)
  Time for choose from waitlist:      0.117s
  Time for precision adjustment:      2.995s
  Time for transfer relation:        11.502s
  Time for merge operator:            1.039s
  Time for stop operator:             0.252s
  Time for adding to reached set:     0.293s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                 100 (count: 4, min: 22, max: 28, avg: 25.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.059s
  Counterexample analysis:                             2.860s (Max:     0.976s, Calls: 4)
    Refinement sat check:                              2.703s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.022s
  ARG update:                                          0.161s

Length of refined path (in blocks):                      76 (count: 4, min: 18, max: 21, avg: 19.00)
Number of affected states:                               40 (count: 4, min: 1, max: 20, avg: 10.00)
Length (states) of path with itp 'true':                 32 (count: 4, min: 0, max: 16, avg: 8.00)
Length (states) of path with itp non-trivial itp:        40 (count: 4, min: 1, max: 20, avg: 10.00)
Length (states) of path with itp 'false':                 4 (count: 4, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              36 (count: 4, min: 0, max: 19, avg: 9.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 9603
Max. size of reached set after ref.:  45
Avg. size of reached set before ref.: 6332.75
Avg. size of reached set after ref.:  24.00

Total time for CEGAR algorithm:      19.915s
Time for refinements:                 3.165s
Average time for refinement:          0.791s
Max time for refinement:              1.045s

Code Coverage
-----------------------------
  Function coverage:      0.159
  Visited lines:          2041
  Total lines:            9376
  Line coverage:          0.218
  Visited conditions:     453
  Total conditions:       3504
  Condition coverage:     0.129

CPAchecker general statistics
-----------------------------
Number of program locations:     14742
Number of CFA edges:             18071
Number of relevant variables:    2867
Number of functions:             397
Number of loops:                 128
Size of reached set:             7409
  Number of reached locations:   1042 (7%)
    Avg states per location:     7
    Max states per location:     42 (at node N10888)
  Number of reached functions:   63 (16%)
  Number of partitions:          7405
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N12333 (before line 19710), Function main called from node N12298, stack depth 1 [7bb996e0], stack [main]])
  Number of target states:       0
  Size of final wait list        195

Time for analysis setup:         10.349s
  Time for loading CPAs:          1.311s
  Time for loading parser:        0.671s
  Time for CFA construction:      8.208s
    Time for parsing file(s):     1.488s
    Time for AST to CFA:          2.967s
    Time for CFA sanity check:    1.020s
    Time for post-processing:     2.630s
      Time for var class.:        1.258s
Time for Analysis:               19.916s
CPU time for analysis:           19.910s
Total time for CPAchecker:       30.271s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.290s

Time for Garbage Collector:       0.788s (in 49 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 98MB (    93 MiB) max;     63MB (    60 MiB) avg;    103MB (    98 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    32 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8069MB (  7695 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
