scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-08_1a-drivers--scsi--aic7xxx--aic7xxx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6cuo8khh/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 19052: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 19693: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(256UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 21272: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_shutdown_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function panic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11005: Ignoring function call through function pointer *(ahc->bus_chip_init): error = (*(ahc->bus_chip_init))(ahc); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __builtin_alloca to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13169: Ignoring function call through function pointer *(cur_patch->patch_func): tmp = (*(cur_patch->patch_func))(ahc); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 13169: Unsupported feature (recursion): tmp = ahc_pci_chip_init(ahc); (line was originally pointer call(ahc_pci_chip_init) tmp = (*(cur_patch->patch_func))(ahc);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            1070 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1044 (98%)
  Because of loop head:            26 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         0 (0%)
  Times precision was empty:       1070 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         353
  BDD entailment checks:           167
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       105
Number of predicates discovered:          0

Time for post operator:                  3.721s
  Time for path formula creation:        3.683s
Time for strengthen operator:            0.040s
Time for prec operator:                  0.151s
  Time for abstraction:                  0.031s (Max:     0.008s, Count: 1070)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.086s
Time for coverage check:                 0.010s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     0.000s

Number of path formula cache hits:   1084 (17%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.559s

Total number of created targets for pointer analysis: 11750
   Number of created targets for uf: *(struct_scb)* is 2
   Number of created targets for uf: *(struct_scsi_target)* is 17
   Number of created targets for uf: *enum_ldv_27764 is 2
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *(char)* is 167
   Number of created targets for uf: *unsigned_char is 2020
   Number of created targets for uf: *(struct_seeprom_config)* is 2
   Number of created targets for uf: *enum_ldv_27768 is 2
   Number of created targets for uf: *char is 23
   Number of created targets for uf: *enum_ldv_27770 is 2
   Number of created targets for uf: *(struct_ahc_platform_data)* is 2
   Number of created targets for uf: *unsigned_int is 2
   Number of created targets for uf: *(struct_patch)* is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 1238, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.157s
Automaton transfers with branching:                0
Automaton transfer successors:                         5885 (count: 5885, min: 1, max: 1, avg: 1.00) [1 x 5885]

CPA algorithm statistics
------------------------
Number of iterations:            3284
Max size of waitlist:            153
Average size of waitlist:        81
Number of computed successors:   3695
Max successors for one state:    2
Number of times merged:          93
Number of times stopped:         260
Number of times breaked:         0

Total time for CPA algorithm:         5.885s (Max:     5.885s)
  Time for choose from waitlist:      0.013s
  Time for precision adjustment:      0.343s
  Time for transfer relation:         5.201s
  Time for merge operator:            0.121s
  Time for stop operator:             0.046s
  Time for adding to reached set:     0.070s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   0

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.295
  Visited lines:          1821
  Total lines:            9376
  Line coverage:          0.194
  Visited conditions:     564
  Total conditions:       3504
  Condition coverage:     0.161

CPAchecker general statistics
-----------------------------
Number of program locations:     14742
Number of CFA edges:             18071
Number of relevant variables:    2867
Number of functions:             397
Number of loops:                 128
Size of reached set:             3436
  Number of reached locations:   1202 (8%)
    Avg states per location:     2
    Max states per location:     188 (at node N10013)
  Number of reached functions:   117 (29%)
  Number of partitions:          3436
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        153

Time for analysis setup:         10.386s
  Time for loading CPAs:          1.335s
  Time for loading parser:        0.805s
  Time for CFA construction:      8.067s
    Time for parsing file(s):     1.573s
    Time for AST to CFA:          3.102s
    Time for CFA sanity check:    0.713s
    Time for post-processing:     2.398s
      Time for var class.:        1.325s
Time for Analysis:                5.885s
CPU time for analysis:            5.870s
Total time for CPAchecker:       16.276s
Total CPU time for CPAchecker:   16.240s
Time for statistics:              0.210s

Time for Garbage Collector:       0.618s (in 26 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 98MB (    93 MiB) max;     59MB (    56 MiB) avg;    102MB (    97 MiB) peak
Used non-heap memory:             44MB (    42 MiB) max;     32MB (    30 MiB) avg;     44MB (    42 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8054MB (  7681 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
