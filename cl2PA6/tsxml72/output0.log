scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-08_1a-drivers--scsi--aic7xxx--aic7xxx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_p9drfuvc/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 19052: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 19693: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(256UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_attach_transport to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdev_prefix_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 21272: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function scmd_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_is_host_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_puts to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_putc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irqsave to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_release_transport to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function panic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_change_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_report_bus_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3730 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2995 (80%)
  Because of loop head:            725 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (0%)
  Times precision was empty:       3406 (91%)
  Times precision was {false}:     51 (1%)
  Times result was cached:         220 (6%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      53 (1%)
  Times result was 'false':        37 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         3844
  BDD entailment checks:           484
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       105
Number of predicates discovered:          6
Number of abstraction locations:          30
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         571
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 5.49
Number of irrelevant predicates:          384 (67%)
Number of preds handled by boolean abs:   82 (14%)
  Total number of models for allsat:      58
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.09

Time for post operator:                  6.158s
  Time for path formula creation:        6.056s
Time for strengthen operator:            0.125s
Time for prec operator:                  2.271s
  Time for abstraction:                  2.061s (Max:     0.788s, Count: 3730)
    Boolean abstraction:                 1.212s
    Solving time:                        1.120s (Max:     0.559s)
    Model enumeration time:              0.090s
    Time for BDD construction:           0.021s (Max:     0.009s)
Time for merge operator:                 0.236s
Time for coverage check:                 0.055s
  Time for BDD entailment checks:        0.053s
Total time for SMT solver (w/o itp):     1.210s

Number of path formula cache hits:   25690 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.647s

Total number of created targets for pointer analysis: 14206
   Number of created targets for uf: *unsigned_short_int is 12
   Number of created targets for uf: *signed_int is 34
   Number of created targets for uf: *(char)* is 1051
   Number of created targets for uf: *(unsigned_int)* is 61
   Number of created targets for uf: *char is 6
   Number of created targets for uf: *unsigned_int is 57
   Number of created targets for uf: *(struct_ahc_tmode_tstate)* is 5
   Number of created targets for uf: *enum_ldv_27870 is 12
   Number of created targets for uf: *unsigned_long_int is 11


Number of BDD nodes:                               214
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         154 (count: 4499, min: 0, max: 50, avg: 0.03)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.239s
Automaton transfers with branching:                0
Automaton transfer successors:                        31520 (count: 31520, min: 1, max: 1, avg: 1.00) [1 x 31520]

CPA algorithm statistics
------------------------
Number of iterations:            16314
Max size of waitlist:            142
Average size of waitlist:        68
Number of computed successors:   19079
Max successors for one state:    2
Number of times merged:          1680
Number of times stopped:         2078
Number of times breaked:         10

Total time for CPA algorithm:        11.532s (Max:     3.465s)
  Time for choose from waitlist:      0.119s
  Time for precision adjustment:      2.838s
  Time for transfer relation:         7.503s
  Time for merge operator:            0.402s
  Time for stop operator:             0.211s
  Time for adding to reached set:     0.142s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                 258 (count: 10, min: 22, max: 28, avg: 25.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.771s
  Counterexample analysis:                             6.589s (Max:     0.971s, Calls: 10)
    Refinement sat check:                              6.255s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.008s
  ARG update:                                          0.140s

Length of refined path (in blocks):                     217 (count: 10, min: 18, max: 27, avg: 21.70)
Number of affected states:                               83 (count: 10, min: 1, max: 26, avg: 8.30)
Length (states) of path with itp 'true':                124 (count: 10, min: 0, max: 19, avg: 12.40)
Length (states) of path with itp non-trivial itp:        83 (count: 10, min: 1, max: 26, avg: 8.30)
Length (states) of path with itp 'false':                10 (count: 10, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 10, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              73 (count: 10, min: 0, max: 25, avg: 7.30)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 3685
Max. size of reached set after ref.:  2286
Avg. size of reached set before ref.: 2295.90
Avg. size of reached set after ref.:  847.80

Total time for CEGAR algorithm:      18.438s
Time for refinements:                 6.885s
Average time for refinement:          0.688s
Max time for refinement:              0.985s

Code Coverage
-----------------------------
  Function coverage:      0.176
  Visited lines:          1834
  Total lines:            9376
  Line coverage:          0.196
  Visited conditions:     302
  Total conditions:       3504
  Condition coverage:     0.086

CPAchecker general statistics
-----------------------------
Number of program locations:     14742
Number of CFA edges:             18071
Number of relevant variables:    2867
Number of functions:             397
Number of loops:                 128
Size of reached set:             2484
  Number of reached locations:   780 (5%)
    Avg states per location:     3
    Max states per location:     26 (at node N9853)
  Number of reached functions:   70 (18%)
  Number of partitions:          2481
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N12333 (before line 19710), Function main called from node N12298, stack depth 1 [72b60be8], stack [main]])
  Number of target states:       0
  Size of final wait list        114

Time for analysis setup:         11.818s
  Time for loading CPAs:          1.427s
  Time for loading parser:        0.782s
  Time for CFA construction:      9.431s
    Time for parsing file(s):     1.783s
    Time for AST to CFA:          3.236s
    Time for CFA sanity check:    1.285s
    Time for post-processing:     2.987s
      Time for var class.:        1.442s
Time for Analysis:               18.438s
CPU time for analysis:           18.430s
Total time for CPAchecker:       30.260s
Total CPU time for CPAchecker:   30.220s
Time for statistics:              0.184s

Time for Garbage Collector:       0.758s (in 37 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 99MB (    95 MiB) max;     68MB (    65 MiB) avg;    103MB (    99 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     38MB (    36 MiB) avg;     48MB (    46 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        49MB (    47 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8068MB (  7694 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
