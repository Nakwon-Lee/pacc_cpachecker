scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-08_1a-drivers--scsi--aic7xxx--aic7xxx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qq_4t3dv/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 19052: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 19693: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(256UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_attach_transport to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdev_prefix_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 21272: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function scmd_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_is_host_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irqsave to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function panic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_report_bus_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_report_device_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_display_xfer_agreement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtol to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_puts to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_putc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_device_lookup_by_target to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_release_transport to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_change_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7427: Ignoring function call through function pointer *(ahc->bus_intr): (*(ahc->bus_intr))(ahc); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_unmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 19052: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11005: Ignoring function call through function pointer *(ahc->bus_chip_init): error = (*(ahc->bus_chip_init))(ahc); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __builtin_alloca to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13169: Ignoring function call through function pointer *(cur_patch->patch_func): tmp = (*(cur_patch->patch_func))(ahc); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 13169: Unsupported feature (recursion): tmp = ahc_pci_chip_init(ahc); (line was originally pointer call(ahc_pci_chip_init) tmp = (*(cur_patch->patch_func))(ahc);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            96258 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  85378 (89%)
  Because of loop head:            10864 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (0%)
  Times precision was empty:       95483 (99%)
  Times precision was {false}:     140 (0%)
  Times result was cached:         576 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      59 (0%)
  Times result was 'false':        118 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         99748
  BDD entailment checks:           20030
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       105
Number of predicates discovered:          6
Number of abstraction locations:          36
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         1266
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 6.36
Number of irrelevant predicates:          937 (74%)
Number of preds handled by boolean abs:   88 (7%)
  Total number of models for allsat:      66
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.12

Time for post operator:                124.388s
  Time for path formula creation:      123.950s
Time for strengthen operator:            0.840s
Time for prec operator:                  4.664s
  Time for abstraction:                  2.464s (Max:     0.862s, Count: 96258)
    Boolean abstraction:                 1.286s
    Solving time:                        1.261s (Max:     0.646s)
    Model enumeration time:              0.082s
    Time for BDD construction:           0.006s (Max:     0.001s)
Time for merge operator:                19.234s
Time for coverage check:                 0.093s
  Time for BDD entailment checks:        0.076s
Total time for SMT solver (w/o itp):     1.343s

Number of path formula cache hits:   218231 (34%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   119.565s

Total number of created targets for pointer analysis: 2551349
   Number of created targets for uf: *unsigned_short_int is 2
   Number of created targets for uf: *(char)* is 2891
   Number of created targets for uf: *signed_int is 148
   Number of created targets for uf: *unsigned_char is 2047
   Number of created targets for uf: *(unsigned_int)* is 161
   Number of created targets for uf: *unsigned_int is 35
   Number of created targets for uf: *char is 154
   Number of created targets for uf: *enum_ldv_27870 is 9
   Number of created targets for uf: *unsigned_long_int is 2
   Number of created targets for uf: *(struct_ahc_tmode_tstate)* is 4
   Number of created targets for uf: *(struct_patch)* is 2


Number of BDD nodes:                               213
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         172 (count: 116622, min: 0, max: 57, avg: 0.00)
Time for BDD node cleanup:                             0.024s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.284s
  Time for transition matches:                         0.708s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       607034 (count: 607034, min: 1, max: 1, avg: 1.00) [1 x 607034]

CPA algorithm statistics
------------------------
Number of iterations:            407005
Max size of waitlist:            355
Average size of waitlist:        171
Number of computed successors:   468243
Max successors for one state:    2
Number of times merged:          39859
Number of times stopped:         59617
Number of times breaked:         16

Total time for CPA algorithm:       192.933s (Max:    49.323s)
  Time for choose from waitlist:      0.397s
  Time for precision adjustment:      8.868s
  Time for transfer relation:       158.895s
  Time for merge operator:           20.260s
  Time for stop operator:             1.004s
  Time for adding to reached set:     1.232s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                 700 (count: 16, min: 22, max: 90, avg: 43.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  28.789s
  Counterexample analysis:                            27.943s (Max:     5.136s, Calls: 16)
    Refinement sat check:                             26.975s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.011s
  ARG update:                                          0.793s

Length of refined path (in blocks):                     325 (count: 16, min: 18, max: 27, avg: 20.31)
Number of affected states:                               89 (count: 16, min: 1, max: 26, avg: 5.56)
Length (states) of path with itp 'true':                220 (count: 16, min: 0, max: 19, avg: 13.75)
Length (states) of path with itp non-trivial itp:        89 (count: 16, min: 1, max: 26, avg: 5.56)
Length (states) of path with itp 'false':                16 (count: 16, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 16, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              73 (count: 16, min: 0, max: 25, avg: 4.56)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 25923
Max. size of reached set after ref.:  2729
Avg. size of reached set before ref.: 14385.31
Avg. size of reached set after ref.:  626.06

Total time for CEGAR algorithm:     222.052s
Time for refinements:                29.108s
Average time for refinement:          1.819s
Max time for refinement:              5.268s

Code Coverage
-----------------------------
  Function coverage:      0.673
  Visited lines:          5501
  Total lines:            9376
  Line coverage:          0.587
  Visited conditions:     1779
  Total conditions:       3504
  Condition coverage:     0.508

CPAchecker general statistics
-----------------------------
Number of program locations:     14742
Number of CFA edges:             18071
Number of relevant variables:    2867
Number of functions:             397
Number of loops:                 128
Size of reached set:             188361
  Number of reached locations:   5030 (34%)
    Avg states per location:     37
    Max states per location:     4826 (at node N10001)
  Number of reached functions:   267 (67%)
  Number of partitions:          188358
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N12333 (before line 19710), Function main called from node N12298, stack depth 1 [72b60be8], stack [main]])
  Number of target states:       0
  Size of final wait list        351

Time for analysis setup:         10.945s
  Time for loading CPAs:          1.446s
  Time for loading parser:        0.771s
  Time for CFA construction:      8.541s
    Time for parsing file(s):     1.456s
    Time for AST to CFA:          3.040s
    Time for CFA sanity check:    0.886s
    Time for post-processing:     2.986s
      Time for var class.:        1.571s
Time for Analysis:              222.052s
CPU time for analysis:          222.030s
Total time for CPAchecker:      233.001s
Total CPU time for CPAchecker:  232.940s
Time for statistics:              2.150s

Time for Garbage Collector:      11.850s (in 475 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                508MB (   485 MiB) max;    153MB (   146 MiB) avg;    529MB (   504 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    40 MiB) peak
Allocated heap memory:           627MB (   598 MiB) max;    230MB (   220 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8224MB (  7843 MiB) max;   8176MB (  7797 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
