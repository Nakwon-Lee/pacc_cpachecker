scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-08_1a-drivers--scsi--aic7xxx--aic7xxx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cejuk0b5/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 19052: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 19693: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(256UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_attach_transport to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdev_prefix_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 21272: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function scmd_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_is_host_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_puts to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_putc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irqsave to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_release_transport to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function panic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_change_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_report_bus_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4688 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3760 (80%)
  Because of loop head:            915 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (0%)
  Times precision was empty:       4293 (92%)
  Times precision was {false}:     58 (1%)
  Times result was cached:         284 (6%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      53 (1%)
  Times result was 'false':        50 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         4971
  BDD entailment checks:           611
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       105
Number of predicates discovered:          6
Number of abstraction locations:          31
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         688
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 6.20
Number of irrelevant predicates:          470 (68%)
Number of preds handled by boolean abs:   82 (12%)
  Total number of models for allsat:      58
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.09

Time for post operator:                  6.303s
  Time for path formula creation:        6.184s
Time for strengthen operator:            0.112s
Time for prec operator:                  2.501s
  Time for abstraction:                  2.261s (Max:     0.898s, Count: 4688)
    Boolean abstraction:                 1.383s
    Solving time:                        1.297s (Max:     0.669s)
    Model enumeration time:              0.091s
    Time for BDD construction:           0.014s (Max:     0.008s)
Time for merge operator:                 0.226s
Time for coverage check:                 0.061s
  Time for BDD entailment checks:        0.056s
Total time for SMT solver (w/o itp):     1.388s

Number of path formula cache hits:   34202 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.658s

Total number of created targets for pointer analysis: 14261
   Number of created targets for uf: *unsigned_short_int is 12
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *(char)* is 1051
   Number of created targets for uf: *(unsigned_int)* is 61
   Number of created targets for uf: *char is 6
   Number of created targets for uf: *unsigned_int is 57
   Number of created targets for uf: *(struct_ahc_tmode_tstate)* is 5
   Number of created targets for uf: *enum_ldv_27870 is 12
   Number of created targets for uf: *unsigned_long_int is 13


Number of BDD nodes:                               214
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         160 (count: 5550, min: 0, max: 50, avg: 0.03)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.329s
Automaton transfers with branching:                0
Automaton transfer successors:                        39221 (count: 39221, min: 1, max: 1, avg: 1.00) [1 x 39221]

CPA algorithm statistics
------------------------
Number of iterations:            20842
Max size of waitlist:            165
Average size of waitlist:        74
Number of computed successors:   24409
Max successors for one state:    2
Number of times merged:          2180
Number of times stopped:         2696
Number of times breaked:         13

Total time for CPA algorithm:        12.206s (Max:     3.165s)
  Time for choose from waitlist:      0.076s
  Time for precision adjustment:      3.128s
  Time for transfer relation:         7.905s
  Time for merge operator:            0.388s
  Time for stop operator:             0.153s
  Time for adding to reached set:     0.196s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 341 (count: 13, min: 22, max: 29, avg: 26.23)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.114s
  Counterexample analysis:                             7.922s (Max:     1.107s, Calls: 13)
    Refinement sat check:                              7.524s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.017s
  ARG update:                                          0.139s

Length of refined path (in blocks):                     259 (count: 12, min: 18, max: 27, avg: 21.58)
Number of affected states:                               88 (count: 12, min: 1, max: 26, avg: 7.33)
Length (states) of path with itp 'true':                159 (count: 12, min: 0, max: 19, avg: 13.25)
Length (states) of path with itp non-trivial itp:        88 (count: 12, min: 1, max: 26, avg: 7.33)
Length (states) of path with itp 'false':                12 (count: 12, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 12, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              76 (count: 12, min: 0, max: 25, avg: 6.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 4113
Max. size of reached set after ref.:  2286
Avg. size of reached set before ref.: 2431.23
Avg. size of reached set after ref.:  828.50

Total time for CEGAR algorithm:      20.485s
Time for refinements:                 8.256s
Average time for refinement:          0.635s
Max time for refinement:              1.136s

Code Coverage
-----------------------------
  Function coverage:      0.212
  Visited lines:          2023
  Total lines:            9376
  Line coverage:          0.216
  Visited conditions:     398
  Total conditions:       3504
  Condition coverage:     0.114

CPAchecker general statistics
-----------------------------
Number of program locations:     14742
Number of CFA edges:             18071
Number of relevant variables:    2867
Number of functions:             397
Number of loops:                 128
Size of reached set:             3083
  Number of reached locations:   1021 (7%)
    Avg states per location:     3
    Max states per location:     25 (at node N9775)
  Number of reached functions:   84 (21%)
  Number of partitions:          3081
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N12333 (before line 19710), Function main called from node N12298, stack depth 1 [72b60be8], stack [main]])
  Number of target states:       1
  Size of final wait list        124

Time for analysis setup:         10.024s
  Time for loading CPAs:          1.264s
  Time for loading parser:        0.671s
  Time for CFA construction:      7.955s
    Time for parsing file(s):     1.587s
    Time for AST to CFA:          2.855s
    Time for CFA sanity check:    0.944s
    Time for post-processing:     2.420s
      Time for var class.:        1.273s
Time for Analysis:               20.485s
CPU time for analysis:           20.500s
Total time for CPAchecker:       30.518s
Total CPU time for CPAchecker:   30.500s
Time for statistics:              0.230s

Time for Garbage Collector:       0.634s (in 39 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 91MB (    87 MiB) max;     60MB (    58 MiB) avg;     97MB (    92 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     34MB (    32 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8069MB (  7695 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
