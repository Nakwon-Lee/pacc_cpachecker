scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-08_1a-drivers--scsi--aic7xxx--aic7xxx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_awageuok/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 19052: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 19693: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(256UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_attach_transport to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdev_prefix_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 21272: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function scmd_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_is_host_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_puts to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_putc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irqsave to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_release_transport to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function panic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_change_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_report_bus_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_dv_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_unmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_report_device_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_alloc_attrs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_display_xfer_agreement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7427: Ignoring function call through function pointer *(ahc->bus_intr): (*(ahc->bus_intr))(ahc); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_free_attrs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_device_lookup_by_target to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 19052: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            480718 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  429126 (89%)
  Because of loop head:            51460 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         132 (0%)
  Times precision was empty:       249649 (52%)
  Times precision was {false}:     1772 (0%)
  Times result was cached:         226518 (47%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2779 (1%)
  Times result was 'false':        14478 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         518310
  BDD entailment checks:           101056
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       105
Number of predicates discovered:          12
Number of abstraction locations:          173
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         674393
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 148.19
Number of irrelevant predicates:          457175 (68%)
Number of preds handled by boolean abs:   5637 (1%)
  Total number of models for allsat:      2932
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.06

Time for post operator:                 84.971s
  Time for path formula creation:       83.412s
Time for strengthen operator:            2.531s
Time for prec operator:                473.729s
  Time for abstraction:                465.781s (Max:     1.425s, Count: 480718)
    Boolean abstraction:               253.623s
    Solving time:                      217.602s (Max:     0.925s)
    Model enumeration time:             61.957s
    Time for BDD construction:           0.164s (Max:     0.010s)
Time for merge operator:                11.578s
Time for coverage check:                 0.214s
  Time for BDD entailment checks:        0.164s
Total time for SMT solver (w/o itp):   279.559s

Number of path formula cache hits:   3585723 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    60.393s

Total number of created targets for pointer analysis: 1233642
   Number of created targets for uf: *unsigned_short_int is 4
   Number of created targets for uf: *(struct_sg_map_node)* is 2
   Number of created targets for uf: *signed_int is 17
   Number of created targets for uf: *(char)* is 14771
   Number of created targets for uf: *unsigned_char is 2017
   Number of created targets for uf: *(unsigned_int)* is 831
   Number of created targets for uf: *unsigned_long_long_int is 4
   Number of created targets for uf: *unsigned_int is 950
   Number of created targets for uf: *char is 266
   Number of created targets for uf: *(struct_ahc_tmode_tstate)* is 7
   Number of created targets for uf: *enum_ldv_27870 is 4
   Number of created targets for uf: *unsigned_long_int is 452


Number of BDD nodes:                               509
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5852 (count: 377463, min: 0, max: 242, avg: 0.02)
Time for BDD node cleanup:                             0.074s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.316s
  Time for transition matches:                         2.506s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      3178722 (count: 3178722, min: 1, max: 1, avg: 1.00) [1 x 3178722]

CPA algorithm statistics
------------------------
Number of iterations:            1984689
Max size of waitlist:            649
Average size of waitlist:        238
Number of computed successors:   2315043
Max successors for one state:    2
Number of times merged:          208627
Number of times stopped:         274176
Number of times breaked:         132

Total time for CPA algorithm:       692.592s (Max:    20.438s)
  Time for choose from waitlist:      1.164s
  Time for precision adjustment:    490.945s
  Time for transfer relation:       174.387s
  Time for merge operator:           14.129s
  Time for stop operator:             2.835s
  Time for adding to reached set:     3.759s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   132
Avg. length of target path (in blocks):                7211 (count: 132, min: 22, max: 72, avg: 54.63)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 195.134s
  Counterexample analysis:                           191.028s (Max:     3.230s, Calls: 132)
    Refinement sat check:                            183.373s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.021s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.077s
  Precision update:                                    0.082s
  ARG update:                                          3.825s

Length of refined path (in blocks):                    5952 (count: 132, min: 18, max: 70, avg: 45.09)
Number of affected states:                             4297 (count: 132, min: 1, max: 69, avg: 32.55)
Length (states) of path with itp 'true':               1523 (count: 132, min: 0, max: 53, avg: 11.54)
Length (states) of path with itp non-trivial itp:      4297 (count: 132, min: 1, max: 69, avg: 32.55)
Length (states) of path with itp 'false':               132 (count: 132, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 132, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4165 (count: 132, min: 0, max: 68, avg: 31.55)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                132
Number of successful refinements:     132
Number of failed refinements:         0
Max. size of reached set before ref.: 39125
Max. size of reached set after ref.:  30580
Avg. size of reached set before ref.: 18178.27
Avg. size of reached set after ref.:  2848.51

Total time for CEGAR algorithm:     889.793s
Time for refinements:               196.899s
Average time for refinement:          1.491s
Max time for refinement:              3.287s

Code Coverage
-----------------------------
  Function coverage:      0.144
  Visited lines:          1729
  Total lines:            9376
  Line coverage:          0.184
  Visited conditions:     374
  Total conditions:       3504
  Condition coverage:     0.107

CPAchecker general statistics
-----------------------------
Number of program locations:     14742
Number of CFA edges:             18071
Number of relevant variables:    2867
Number of functions:             397
Number of loops:                 128
Size of reached set:             2860
  Number of reached locations:   862 (6%)
    Avg states per location:     3
    Max states per location:     15 (at node N9918)
  Number of reached functions:   57 (14%)
  Number of partitions:          2855
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N12333 (before line 19710), Function main called from node N12298, stack depth 1 [589cc8eb], stack [main]])
  Number of target states:       0
  Size of final wait list        64

Time for analysis setup:         10.469s
  Time for loading CPAs:          1.340s
  Time for loading parser:        0.772s
  Time for CFA construction:      8.185s
    Time for parsing file(s):     1.492s
    Time for AST to CFA:          2.970s
    Time for CFA sanity check:    0.852s
    Time for post-processing:     2.653s
      Time for var class.:        1.345s
Time for Analysis:              889.793s
CPU time for analysis:          889.700s
Total time for CPAchecker:      900.271s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              0.243s

Time for Garbage Collector:      30.546s (in 1467 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                339MB (   323 MiB) max;    174MB (   166 MiB) avg;    346MB (   330 MiB) peak
Used non-heap memory:             48MB (    46 MiB) max;     40MB (    38 MiB) avg;     48MB (    46 MiB) peak
Allocated heap memory:           347MB (   331 MiB) max;    257MB (   245 MiB) avg
Allocated non-heap memory:        50MB (    47 MiB) max;     49MB (    47 MiB) avg
Total process virtual memory:   8362MB (  7974 MiB) max;   8243MB (  7861 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
