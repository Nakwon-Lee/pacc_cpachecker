scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-08_1a-drivers--scsi--aic7xxx--aic7xxx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zahpuenm/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 19052: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 19693: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(256UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_attach_transport to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdev_prefix_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 21272: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function scmd_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_puts to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_putc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_is_host_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_release_transport to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irqsave to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function panic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_report_bus_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_dv_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_unmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_report_device_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            132675 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  109431 (82%)
  Because of loop head:            22945 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         299 (0%)
  Times precision was empty:       65528 (49%)
  Times precision was {false}:     1134 (1%)
  Times result was cached:         64692 (49%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1321 (1%)
  Times result was 'false':        4497 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         169302
  BDD entailment checks:           27670
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       105
Number of predicates discovered:          10
Number of abstraction locations:          105
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         208117
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 84.77
Number of irrelevant predicates:          162088 (78%)
Number of preds handled by boolean abs:   3061 (1%)
  Total number of models for allsat:      1427
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.08

Time for post operator:                 38.162s
  Time for path formula creation:       37.442s
Time for strengthen operator:            0.882s
Time for prec operator:                124.271s
  Time for abstraction:                121.799s (Max:     1.416s, Count: 132675)
    Boolean abstraction:                66.488s
    Solving time:                       65.527s (Max:     0.920s)
    Model enumeration time:             15.134s
    Time for BDD construction:           0.162s (Max:     0.013s)
Time for merge operator:                 4.296s
Time for coverage check:                 0.117s
  Time for BDD entailment checks:        0.092s
Total time for SMT solver (w/o itp):    80.661s

Number of path formula cache hits:   1116193 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    30.690s

Total number of created targets for pointer analysis: 554740
   Number of created targets for uf: *unsigned_short_int is 6
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *(char)* is 14961
   Number of created targets for uf: *unsigned_char is 17041
   Number of created targets for uf: *(unsigned_int)* is 831
   Number of created targets for uf: *unsigned_int is 272
   Number of created targets for uf: *char is 566
   Number of created targets for uf: *(struct_ahc_tmode_tstate)* is 30
   Number of created targets for uf: *unsigned_long_int is 41
   Number of created targets for uf: *enum_ldv_27870 is 6


Number of BDD nodes:                               451
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2908 (count: 107405, min: 0, max: 199, avg: 0.03)
Time for BDD node cleanup:                             0.028s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.783s
  Time for transition matches:                         1.014s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      1085654 (count: 1085654, min: 1, max: 1, avg: 1.00) [1 x 1085654]

CPA algorithm statistics
------------------------
Number of iterations:            580033
Max size of waitlist:            296
Average size of waitlist:        99
Number of computed successors:   700536
Max successors for one state:    2
Number of times merged:          70816
Number of times stopped:         83844
Number of times breaked:         299

Total time for CPA algorithm:       189.532s (Max:     6.114s)
  Time for choose from waitlist:      0.411s
  Time for precision adjustment:    129.602s
  Time for transfer relation:        49.487s
  Time for merge operator:            5.396s
  Time for stop operator:             1.012s
  Time for adding to reached set:     1.192s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   299
Avg. length of target path (in blocks):               17400 (count: 299, min: 22, max: 84, avg: 58.19)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 698.873s
  Counterexample analysis:                           697.153s (Max:     3.692s, Calls: 299)
    Refinement sat check:                            674.552s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.077s
  Precision update:                                    0.157s
  ARG update:                                          1.278s

Length of refined path (in blocks):                   13189 (count: 298, min: 18, max: 76, avg: 44.26)
Number of affected states:                             2350 (count: 298, min: 1, max: 75, avg: 7.89)
Length (states) of path with itp 'true':              10541 (count: 298, min: 0, max: 50, avg: 35.37)
Length (states) of path with itp non-trivial itp:      2350 (count: 298, min: 1, max: 75, avg: 7.89)
Length (states) of path with itp 'false':               298 (count: 298, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 298, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2052 (count: 298, min: 0, max: 74, avg: 6.89)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                299
Number of successful refinements:     298
Number of failed refinements:         0
Max. size of reached set before ref.: 6221
Max. size of reached set after ref.:  4740
Avg. size of reached set before ref.: 3910.95
Avg. size of reached set after ref.:  1869.73

Total time for CEGAR algorithm:     890.009s
Time for refinements:               700.093s
Average time for refinement:          2.341s
Max time for refinement:              3.700s

Code Coverage
-----------------------------
  Function coverage:      0.169
  Visited lines:          1836
  Total lines:            9376
  Line coverage:          0.196
  Visited conditions:     326
  Total conditions:       3504
  Condition coverage:     0.093

CPAchecker general statistics
-----------------------------
Number of program locations:     14742
Number of CFA edges:             18071
Number of relevant variables:    2867
Number of functions:             397
Number of loops:                 128
Size of reached set:             5890
  Number of reached locations:   821 (6%)
    Avg states per location:     7
    Max states per location:     41 (at node N9918)
  Number of reached functions:   67 (17%)
  Number of partitions:          5869
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N12333 (before line 19710), Function main called from node N12298, stack depth 1 [72b60be8], stack [main]])
  Number of target states:       1
  Size of final wait list        200

Time for analysis setup:         10.266s
  Time for loading CPAs:          1.491s
  Time for loading parser:        0.665s
  Time for CFA construction:      7.936s
    Time for parsing file(s):     1.537s
    Time for AST to CFA:          2.848s
    Time for CFA sanity check:    0.876s
    Time for post-processing:     2.521s
      Time for var class.:        1.381s
Time for Analysis:              890.009s
CPU time for analysis:          889.900s
Total time for CPAchecker:      900.281s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              0.258s

Time for Garbage Collector:       6.358s (in 548 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                170MB (   162 MiB) max;    120MB (   114 MiB) avg;    187MB (   178 MiB) peak
Used non-heap memory:             49MB (    46 MiB) max;     41MB (    39 MiB) avg;     49MB (    46 MiB) peak
Allocated heap memory:           229MB (   218 MiB) max;    185MB (   176 MiB) avg
Allocated non-heap memory:        51MB (    48 MiB) max;     50MB (    48 MiB) avg
Total process virtual memory:   8288MB (  7904 MiB) max;   8228MB (  7847 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
