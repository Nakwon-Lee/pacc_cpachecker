scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-08_1a-drivers--scsi--aic7xxx--aic7xxx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1jyqx1dz/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 19052: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 19693: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(256UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_puts to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_putc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdev_prefix_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_attach_transport to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtol to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_is_host_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scmd_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function panic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_report_bus_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 21272: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function scsi_device_lookup_by_target to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_dv_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_change_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4642 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3669 (79%)
  Because of loop head:            968 (21%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (0%)
  Times precision was empty:       4456 (96%)
  Times precision was {false}:     44 (1%)
  Times result was cached:         92 (2%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      50 (1%)
  Times result was 'false':        20 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         9893
  BDD entailment checks:           881
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       105
Number of predicates discovered:          5
Number of abstraction locations:          18
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         294
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 3.13
Number of irrelevant predicates:          188 (64%)
Number of preds handled by boolean abs:   79 (27%)
  Total number of models for allsat:      56
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.12

Time for post operator:                  8.928s
  Time for path formula creation:        8.834s
Time for strengthen operator:            0.134s
Time for prec operator:                  2.279s
  Time for abstraction:                  1.952s (Max:     0.825s, Count: 4642)
    Boolean abstraction:                 1.208s
    Solving time:                        1.153s (Max:     0.606s)
    Model enumeration time:              0.073s
    Time for BDD construction:           0.011s (Max:     0.004s)
Time for merge operator:                 0.687s
Time for coverage check:                 0.038s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     1.226s

Number of path formula cache hits:   38745 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.252s

Total number of created targets for pointer analysis: 26872
   Number of created targets for uf: *unsigned_short_int is 56
   Number of created targets for uf: *signed_int is 31
   Number of created targets for uf: *(char)* is 1051
   Number of created targets for uf: *unsigned_char is 4033
   Number of created targets for uf: *(unsigned_int)* is 61
   Number of created targets for uf: *char is 54
   Number of created targets for uf: *unsigned_int is 355
   Number of created targets for uf: *(struct_ahc_tmode_tstate)* is 27
   Number of created targets for uf: *enum_ldv_27870 is 56


Number of BDD nodes:                               213
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         151 (count: 5892, min: 0, max: 55, avg: 0.03)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.427s
Automaton transfers with branching:                0
Automaton transfer successors:                        52538 (count: 52538, min: 1, max: 1, avg: 1.00) [1 x 52538]

CPA algorithm statistics
------------------------
Number of iterations:            30617
Max size of waitlist:            249
Average size of waitlist:        111
Number of computed successors:   36601
Max successors for one state:    2
Number of times merged:          4506
Number of times stopped:         5329
Number of times breaked:         5

Total time for CPA algorithm:        16.285s (Max:     5.097s)
  Time for choose from waitlist:      0.099s
  Time for precision adjustment:      3.141s
  Time for transfer relation:        10.927s
  Time for merge operator:            0.987s
  Time for stop operator:             0.285s
  Time for adding to reached set:     0.219s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                 138 (count: 5, min: 22, max: 38, avg: 27.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.211s
  Counterexample analysis:                             4.020s (Max:     0.926s, Calls: 5)
    Refinement sat check:                              3.864s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.006s
  ARG update:                                          0.165s

Length of refined path (in blocks):                      76 (count: 4, min: 18, max: 21, avg: 19.00)
Number of affected states:                               40 (count: 4, min: 1, max: 20, avg: 10.00)
Length (states) of path with itp 'true':                 32 (count: 4, min: 0, max: 16, avg: 8.00)
Length (states) of path with itp non-trivial itp:        40 (count: 4, min: 1, max: 20, avg: 10.00)
Length (states) of path with itp 'false':                 4 (count: 4, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              36 (count: 4, min: 0, max: 19, avg: 9.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 9978
Max. size of reached set after ref.:  45
Avg. size of reached set before ref.: 6269.80
Avg. size of reached set after ref.:  24.00

Total time for CEGAR algorithm:      20.623s
Time for refinements:                 4.337s
Average time for refinement:          0.867s
Max time for refinement:              0.984s

Code Coverage
-----------------------------
  Function coverage:      0.134
  Visited lines:          1923
  Total lines:            9376
  Line coverage:          0.205
  Visited conditions:     393
  Total conditions:       3504
  Condition coverage:     0.112

CPAchecker general statistics
-----------------------------
Number of program locations:     14742
Number of CFA edges:             18071
Number of relevant variables:    2867
Number of functions:             397
Number of loops:                 128
Size of reached set:             6827
  Number of reached locations:   925 (6%)
    Avg states per location:     7
    Max states per location:     50 (at node N9775)
  Number of reached functions:   53 (13%)
  Number of partitions:          6824
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N12333 (before line 19710), Function main called from node N12298, stack depth 1 [72b60be8], stack [main]])
  Number of target states:       1
  Size of final wait list        139

Time for analysis setup:         10.401s
  Time for loading CPAs:          1.295s
  Time for loading parser:        0.732s
  Time for CFA construction:      8.212s
    Time for parsing file(s):     1.426s
    Time for AST to CFA:          2.817s
    Time for CFA sanity check:    0.959s
    Time for post-processing:     2.904s
      Time for var class.:        1.345s
Time for Analysis:               20.623s
CPU time for analysis:           20.620s
Total time for CPAchecker:       31.037s
Total CPU time for CPAchecker:   31.000s
Time for statistics:              0.316s

Time for Garbage Collector:       0.796s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 97MB (    92 MiB) max;     64MB (    61 MiB) avg;    101MB (    96 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     34MB (    33 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8068MB (  7694 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
