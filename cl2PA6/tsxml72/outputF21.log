scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-08_1a-drivers--scsi--aic7xxx--aic7xxx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rci_okjm/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 19052: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 19693: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(256UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_attach_transport to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdev_prefix_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 21272: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function scmd_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_is_host_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_puts to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_putc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irqsave to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_release_transport to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function panic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_change_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_report_bus_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_dv_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_unmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_report_device_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_alloc_attrs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_display_xfer_agreement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7427: Ignoring function call through function pointer *(ahc->bus_intr): (*(ahc->bus_intr))(ahc); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_free_attrs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_device_lookup_by_target to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 19052: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            506169 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  452407 (89%)
  Because of loop head:            53625 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         137 (0%)
  Times precision was empty:       257989 (51%)
  Times precision was {false}:     1877 (0%)
  Times result was cached:         243370 (48%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2933 (1%)
  Times result was 'false':        15199 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         541163
  BDD entailment checks:           106207
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       105
Number of predicates discovered:          12
Number of abstraction locations:          174
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         740275
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 153.90
Number of irrelevant predicates:          503639 (68%)
Number of preds handled by boolean abs:   6129 (1%)
  Total number of models for allsat:      3089
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.05

Time for post operator:                 84.485s
  Time for path formula creation:       83.048s
Time for strengthen operator:            2.825s
Time for prec operator:                471.452s
  Time for abstraction:                463.502s (Max:     1.799s, Count: 506169)
    Boolean abstraction:               255.767s
    Solving time:                      218.309s (Max:     0.935s)
    Model enumeration time:             62.340s
    Time for BDD construction:           0.181s (Max:     0.012s)
Time for merge operator:                11.080s
Time for coverage check:                 0.215s
  Time for BDD entailment checks:        0.156s
Total time for SMT solver (w/o itp):   280.650s

Number of path formula cache hits:   3759287 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    62.787s

Total number of created targets for pointer analysis: 1257047
   Number of created targets for uf: *unsigned_short_int is 4
   Number of created targets for uf: *(struct_sg_map_node)* is 2
   Number of created targets for uf: *signed_int is 20
   Number of created targets for uf: *(char)* is 15316
   Number of created targets for uf: *unsigned_char is 2017
   Number of created targets for uf: *(unsigned_int)* is 861
   Number of created targets for uf: *unsigned_long_long_int is 4
   Number of created targets for uf: *unsigned_int is 1012
   Number of created targets for uf: *char is 266
   Number of created targets for uf: *(struct_ahc_tmode_tstate)* is 7
   Number of created targets for uf: *enum_ldv_27870 is 4
   Number of created targets for uf: *unsigned_long_int is 473


Number of BDD nodes:                               547
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6182 (count: 392593, min: 0, max: 244, avg: 0.02)
Time for BDD node cleanup:                             0.070s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.292s
  Time for transition matches:                         2.575s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      3331335 (count: 3331335, min: 1, max: 1, avg: 1.00) [1 x 3331335]

CPA algorithm statistics
------------------------
Number of iterations:            2083124
Max size of waitlist:            649
Average size of waitlist:        240
Number of computed successors:   2428431
Max successors for one state:    2
Number of times merged:          217478
Number of times stopped:         286699
Number of times breaked:         137

Total time for CPA algorithm:       688.098s (Max:    19.978s)
  Time for choose from waitlist:      1.178s
  Time for precision adjustment:    488.016s
  Time for transfer relation:       172.900s
  Time for merge operator:           13.762s
  Time for stop operator:             2.822s
  Time for adding to reached set:     3.692s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   137
Avg. length of target path (in blocks):                7576 (count: 137, min: 22, max: 74, avg: 55.30)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 199.680s
  Counterexample analysis:                           195.704s (Max:     3.231s, Calls: 137)
    Refinement sat check:                            187.917s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.076s
  Precision update:                                    0.094s
  ARG update:                                          3.702s

Length of refined path (in blocks):                    6259 (count: 137, min: 18, max: 70, avg: 45.69)
Number of affected states:                             4469 (count: 137, min: 1, max: 69, avg: 32.62)
Length (states) of path with itp 'true':               1653 (count: 137, min: 0, max: 57, avg: 12.07)
Length (states) of path with itp non-trivial itp:      4469 (count: 137, min: 1, max: 69, avg: 32.62)
Length (states) of path with itp 'false':               137 (count: 137, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 137, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4332 (count: 137, min: 0, max: 68, avg: 31.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                137
Number of successful refinements:     137
Number of failed refinements:         0
Max. size of reached set before ref.: 39125
Max. size of reached set after ref.:  30580
Avg. size of reached set before ref.: 18588.51
Avg. size of reached set after ref.:  3115.44

Total time for CEGAR algorithm:     889.864s
Time for refinements:               201.423s
Average time for refinement:          1.470s
Max time for refinement:              3.285s

Code Coverage
-----------------------------
  Function coverage:      0.214
  Visited lines:          1974
  Total lines:            9376
  Line coverage:          0.211
  Visited conditions:     454
  Total conditions:       3504
  Condition coverage:     0.130

CPAchecker general statistics
-----------------------------
Number of program locations:     14742
Number of CFA edges:             18071
Number of relevant variables:    2867
Number of functions:             397
Number of loops:                 128
Size of reached set:             6722
  Number of reached locations:   1134 (8%)
    Avg states per location:     5
    Max states per location:     46 (at node N10001)
  Number of reached functions:   85 (21%)
  Number of partitions:          6706
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N12333 (before line 19710), Function main called from node N12298, stack depth 1 [72b60be8], stack [main]])
  Number of target states:       0
  Size of final wait list        110

Time for analysis setup:         10.470s
  Time for loading CPAs:          1.405s
  Time for loading parser:        0.692s
  Time for CFA construction:      8.231s
    Time for parsing file(s):     1.502s
    Time for AST to CFA:          2.944s
    Time for CFA sanity check:    1.134s
    Time for post-processing:     2.537s
      Time for var class.:        1.283s
Time for Analysis:              889.864s
CPU time for analysis:          889.780s
Total time for CPAchecker:      900.338s
Total CPU time for CPAchecker:  900.240s
Time for statistics:              0.257s

Time for Garbage Collector:      31.226s (in 1538 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                325MB (   310 MiB) max;    179MB (   171 MiB) avg;    335MB (   320 MiB) peak
Used non-heap memory:             48MB (    45 MiB) max;     40MB (    39 MiB) avg;     48MB (    45 MiB) peak
Allocated heap memory:           356MB (   339 MiB) max;    258MB (   246 MiB) avg
Allocated non-heap memory:        49MB (    47 MiB) max;     49MB (    47 MiB) avg
Total process virtual memory:   8363MB (  7975 MiB) max;   8251MB (  7868 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
