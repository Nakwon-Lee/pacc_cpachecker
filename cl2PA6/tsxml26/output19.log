scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--usb--gadget--udc--bdc--bdc.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3ua61t_4/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9665: Function pointer *(bdc->gadget_driver->disconnect) with type void (*)(struct usb_gadget *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8298: Function pointer *(bdc->gadget_driver->setup) with type int (*)(struct usb_gadget *, const struct usb_ctrlrequest *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9821: Function pointer *(bdc->gadget_driver->resume) with type void (*)(struct usb_gadget *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9774: Function pointer *(bdc->gadget_driver->suspend) with type void (*)(struct usb_gadget *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_ioremap_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_free_attrs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_pool_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_add_gadget_udc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_gadget_set_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_pool_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_del_gadget_udc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ___ratelimit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_gadget_unmap_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_gadget_giveback_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            13578 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12140 (89%)
  Because of loop head:            1414 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24 (0%)
  Times precision was empty:       4013 (30%)
  Times precision was {false}:     1483 (11%)
  Times result was cached:         7836 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      246 (2%)
  Times result was 'false':        125 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         9696
  BDD entailment checks:           2274
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       31
Number of predicates discovered:          3
Number of abstraction locations:          146
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         9847
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 5.70
Number of irrelevant predicates:          5826 (59%)
Number of preds handled by boolean abs:   252 (3%)
  Total number of models for allsat:      258
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.05

Time for post operator:                  7.457s
  Time for path formula creation:        7.289s
Time for strengthen operator:            0.167s
Time for prec operator:                  5.398s
  Time for abstraction:                  4.852s (Max:     0.023s, Count: 13578)
    Boolean abstraction:                 0.261s
    Solving time:                        0.776s (Max:     0.013s)
    Model enumeration time:              0.031s
    Time for BDD construction:           0.047s (Max:     0.008s)
Time for merge operator:                 0.399s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.043s
Total time for SMT solver (w/o itp):     0.807s

Number of path formula cache hits:   36710 (38%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.709s

Total number of created targets for pointer analysis: 786
   Number of created targets for uf: *(void)* is 45
   Number of created targets for uf: *unsigned_short_int is 47
   Number of created targets for uf: *(struct_usb_ss_ep_comp_descriptor)* is 23
   Number of created targets for uf: *unsigned_char is 37
   Number of created targets for uf: *(struct_list_head)* is 45
   Number of created targets for uf: *enum_usb_device_speed is 23
   Number of created targets for uf: *(struct_usb_endpoint_descriptor)* is 23
   Number of created targets for uf: *unsigned_long_long_int is 23
   Number of created targets for uf: *unsigned_int is 45


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         498 (count: 15194, min: 0, max: 90, avg: 0.03)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.497s
Automaton transfers with branching:                0
Automaton transfer successors:                        89471 (count: 89471, min: 1, max: 1, avg: 1.00) [1 x 89471]

CPA algorithm statistics
------------------------
Number of iterations:            50916
Max size of waitlist:            63
Average size of waitlist:        34
Number of computed successors:   57736
Max successors for one state:    2
Number of times merged:          3711
Number of times stopped:         5603
Number of times breaked:         24

Total time for CPA algorithm:        20.011s (Max:     2.092s)
  Time for choose from waitlist:      0.172s
  Time for precision adjustment:      6.413s
  Time for transfer relation:        11.412s
  Time for merge operator:            0.590s
  Time for stop operator:             0.326s
  Time for adding to reached set:     0.273s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                4537 (count: 24, min: 90, max: 247, avg: 189.04)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.931s
  Counterexample analysis:                             2.416s (Max:     0.140s, Calls: 24)
    Refinement sat check:                              1.137s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.101s
  Precision update:                                    0.039s
  ARG update:                                          0.273s

Length of refined path (in blocks):                    4294 (count: 24, min: 4, max: 246, avg: 178.92)
Number of affected states:                             4270 (count: 24, min: 3, max: 245, avg: 177.92)
Length (states) of path with itp 'true':                  0 (count: 24, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      4270 (count: 24, min: 3, max: 245, avg: 177.92)
Length (states) of path with itp 'false':                24 (count: 24, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 24, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4246 (count: 24, min: 2, max: 244, avg: 176.92)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 2623
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 2117.71
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      23.278s
Time for refinements:                 3.266s
Average time for refinement:          0.136s
Max time for refinement:              0.194s

Code Coverage
-----------------------------
  Function coverage:      0.283
  Visited lines:          1588
  Total lines:            5250
  Line coverage:          0.302
  Visited conditions:     230
  Total conditions:       1286
  Condition coverage:     0.179

CPAchecker general statistics
-----------------------------
Number of program locations:     7188
Number of CFA edges:             8216
Number of relevant variables:    1041
Number of functions:             198
Number of loops:                 17
Size of reached set:             1255
  Number of reached locations:   717 (10%)
    Avg states per location:     1
    Max states per location:     39 (at node N74)
  Number of reached functions:   56 (28%)
  Number of partitions:          1249
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1023 (before line 4793), Function main called from node N1010, stack depth 1 [73e4bb60], stack [main]])
  Number of target states:       0
  Size of final wait list        32

Time for analysis setup:          6.982s
  Time for loading CPAs:          1.088s
  Time for loading parser:        0.691s
  Time for CFA construction:      5.055s
    Time for parsing file(s):     1.121s
    Time for AST to CFA:          1.932s
    Time for CFA sanity check:    0.413s
    Time for post-processing:     1.328s
      Time for var class.:        0.771s
Time for Analysis:               23.278s
CPU time for analysis:           23.280s
Total time for CPAchecker:       30.272s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.134s

Time for Garbage Collector:       0.736s (in 40 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 90MB (    86 MiB) max;     56MB (    54 MiB) avg;     93MB (    89 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     35MB (    34 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
