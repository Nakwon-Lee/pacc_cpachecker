scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--usb--gadget--udc--bdc--bdc.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hq6yfpgz/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9665: Function pointer *(bdc->gadget_driver->disconnect) with type void (*)(struct usb_gadget *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8298: Function pointer *(bdc->gadget_driver->setup) with type int (*)(struct usb_gadget *, const struct usb_ctrlrequest *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9821: Function pointer *(bdc->gadget_driver->resume) with type void (*)(struct usb_gadget *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9774: Function pointer *(bdc->gadget_driver->suspend) with type void (*)(struct usb_gadget *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_ioremap_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_gadget_unmap_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_gadget_giveback_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_del_gadget_udc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_gadget_map_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_pool_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ___ratelimit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_free_attrs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_pool_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_pool_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            32299 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  29981 (93%)
  Because of loop head:            2288 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         30 (0%)
  Times precision was empty:       21772 (67%)
  Times precision was {false}:     613 (2%)
  Times result was cached:         9596 (30%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      318 (1%)
  Times result was 'false':        267 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         19193
  BDD entailment checks:           4485
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       33
Number of predicates discovered:          10
Number of abstraction locations:          91
Max number of predicates per location:    6
Avg number of predicates per location:    1
Total predicates per abstraction:         16553
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 17.78
Number of irrelevant predicates:          11448 (69%)
Number of preds handled by boolean abs:   457 (3%)
  Total number of models for allsat:      470
  Max number of models for allsat:        18
  Avg number of models for allsat:        1.48

Time for post operator:                  6.166s
  Time for path formula creation:        5.957s
Time for strengthen operator:            0.360s
Time for prec operator:                  5.182s
  Time for abstraction:                  4.368s (Max:     0.032s, Count: 32299)
    Boolean abstraction:                 0.545s
    Solving time:                        0.693s (Max:     0.015s)
    Model enumeration time:              0.056s
    Time for BDD construction:           0.075s (Max:     0.009s)
Time for merge operator:                 0.379s
Time for coverage check:                 0.071s
  Time for BDD entailment checks:        0.061s
Total time for SMT solver (w/o itp):     0.749s

Number of path formula cache hits:   176351 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.986s

Total number of created targets for pointer analysis: 205
   Number of created targets for uf: *(struct_usb_ss_ep_comp_descriptor)* is 3
   Number of created targets for uf: *(void)* is 43
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *enum_usb_device_speed is 3
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_2,_Parameter_1_type:_[(struct_usb_ep)*],_Parameter_2_type:_[(struct_usb_request)*],_VarArgs:_false)* is 3
   Number of created targets for uf: *(struct_usb_endpoint_descriptor)* is 3
   Number of created targets for uf: *unsigned_long_long_int is 3
   Number of created targets for uf: *unsigned_int is 5


Number of BDD nodes:                               520
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         800 (count: 31356, min: 0, max: 105, avg: 0.03)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.681s
  Time for transition matches:                         0.343s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       184145 (count: 184145, min: 1, max: 1, avg: 1.00) [1 x 184145]

CPA algorithm statistics
------------------------
Number of iterations:            104630
Max size of waitlist:            83
Average size of waitlist:        46
Number of computed successors:   117082
Max successors for one state:    2
Number of times merged:          7354
Number of times stopped:         10869
Number of times breaked:         30

Total time for CPA algorithm:        22.040s (Max:     1.563s)
  Time for choose from waitlist:      0.187s
  Time for precision adjustment:      6.829s
  Time for transfer relation:        12.344s
  Time for merge operator:            0.697s
  Time for stop operator:             0.425s
  Time for adding to reached set:     0.470s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   30
Avg. length of target path (in blocks):                1458 (count: 30, min: 17, max: 78, avg: 48.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.224s
  Counterexample analysis:                             0.720s (Max:     0.040s, Calls: 30)
    Refinement sat check:                              0.389s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.056s
  Precision update:                                    0.026s
  ARG update:                                          0.363s

Length of refined path (in blocks):                    1217 (count: 30, min: 4, max: 77, avg: 40.57)
Number of affected states:                              908 (count: 30, min: 1, max: 59, avg: 30.27)
Length (states) of path with itp 'true':                279 (count: 30, min: 0, max: 57, avg: 9.30)
Length (states) of path with itp non-trivial itp:       908 (count: 30, min: 1, max: 59, avg: 30.27)
Length (states) of path with itp 'false':                30 (count: 30, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           8 (count: 30, min: 0, max: 2, avg: 0.27)
Equal non-trivial interpolants along paths:             870 (count: 30, min: 0, max: 58, avg: 29.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                30
Number of successful refinements:     30
Number of failed refinements:         0
Max. size of reached set before ref.: 8488
Max. size of reached set after ref.:  3619
Avg. size of reached set before ref.: 4030.33
Avg. size of reached set after ref.:  644.40

Total time for CEGAR algorithm:      23.495s
Time for refinements:                 1.414s
Average time for refinement:          0.047s
Max time for refinement:              0.087s

Code Coverage
-----------------------------
  Function coverage:      0.434
  Visited lines:          2227
  Total lines:            5250
  Line coverage:          0.424
  Visited conditions:     410
  Total conditions:       1286
  Condition coverage:     0.319

CPAchecker general statistics
-----------------------------
Number of program locations:     7188
Number of CFA edges:             8216
Number of relevant variables:    1041
Number of functions:             198
Number of loops:                 17
Size of reached set:             4368
  Number of reached locations:   1188 (17%)
    Avg states per location:     3
    Max states per location:     126 (at node N75)
  Number of reached functions:   86 (43%)
  Number of partitions:          4356
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1023 (before line 4793), Function main called from node N1010, stack depth 1 [3360283], stack [main]])
  Number of target states:       0
  Size of final wait list        61

Time for analysis setup:          6.792s
  Time for loading CPAs:          1.111s
  Time for loading parser:        0.656s
  Time for CFA construction:      4.891s
    Time for parsing file(s):     1.057s
    Time for AST to CFA:          1.809s
    Time for CFA sanity check:    0.459s
    Time for post-processing:     1.386s
      Time for var class.:        0.766s
Time for Analysis:               23.495s
CPU time for analysis:           23.490s
Total time for CPAchecker:       30.300s
Total CPU time for CPAchecker:   30.290s
Time for statistics:              0.173s

Time for Garbage Collector:       0.915s (in 57 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 88MB (    84 MiB) max;     57MB (    54 MiB) avg;     95MB (    91 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
