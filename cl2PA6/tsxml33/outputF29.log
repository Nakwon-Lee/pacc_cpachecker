scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--media--usb--dvb-usb-v2--dvb-usb-lmedm04.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3k1qrqd9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 9896: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9940: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

lines 9092-9093: Function pointer *__a___3 with type struct dvb_frontend *(*)(struct dvb_frontend *, const struct ts2020_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 9059-9060: Function pointer *__a___2 with type struct dvb_frontend *(*)(const struct m88rs2000_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9014: Function pointer *__a___1 with type struct dvb_frontend *(*)(const struct stv0288_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8969-8970: Function pointer *__a___0 with type struct dvb_frontend *(*)(const struct stv0299_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8925: Function pointer *__a with type struct dvb_frontend *(*)(const struct tda10086_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9285: Function pointer *__a___1 with type struct dvb_frontend *(*)(struct dvb_frontend *, int, struct i2c_adapter *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 9247-9248: Function pointer *__a___0 with type struct dvb_frontend *(*)(struct dvb_frontend *, const struct ix2505v_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9212: Function pointer *__a with type struct dvb_frontend *(*)(struct dvb_frontend *, int, struct i2c_adapter *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7395: Function pointer *(fe->ops.write) with type int (*)(struct dvb_frontend *, u8 *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9604: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9606: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_init_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9610: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_configuration to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __symbol_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_module to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9285: Ignoring call via function pointer dm04_lme2510_tuner::__a___1 for which no suitable target was found in line: tmp___13 = (*__a___1)((adap->fe)[0], 96, &(d->i2c_adap), 13U); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9285: Ignoring function call through function pointer *__a___1: tmp___13 = (*__a___1)((adap->fe)[0], 96, &(d->i2c_adap), 13U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __symbol_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 9247-9248: Ignoring call via function pointer dm04_lme2510_tuner::__a___0 for which no suitable target was found in line: tmp___8 = (*__a___0)((adap->fe)[0], (const struct ix2505v_config *)(&lme_tuner), &(d->i2c_adap)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 9247-9248: Ignoring function call through function pointer *__a___0: tmp___8 = (*__a___0)((adap->fe)[0], (const struct ix2505v_config *)(&lme_tuner), &(d->i2c_adap)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9212: Ignoring call via function pointer dm04_lme2510_tuner::__a for which no suitable target was found in line: tmp___3 = (*__a)((adap->fe)[0], 96, &(d->i2c_adap), 1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9212: Ignoring function call through function pointer *__a: tmp___3 = (*__a)((adap->fe)[0], 96, &(d->i2c_adap), 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            82550 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  63355 (77%)
  Because of loop head:            18805 (23%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         390 (0%)
  Times precision was empty:       10074 (12%)
  Times precision was {false}:     603 (1%)
  Times result was cached:         54729 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      17144 (21%)
  Times result was 'false':        13002 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         380902
  BDD entailment checks:           346990
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       68
Number of predicates discovered:          102
Number of abstraction locations:          148
Max number of predicates per location:    65
Avg number of predicates per location:    5
Total predicates per abstraction:         1006021
Max number of predicates per abstraction: 65
Avg number of predicates per abstraction: 56.69
Number of irrelevant predicates:          94664 (9%)
Number of preds handled by boolean abs:   376509 (37%)
  Total number of models for allsat:      1029979
  Max number of models for allsat:        1678
  Avg number of models for allsat:        60.08

Time for post operator:                 17.941s
  Time for path formula creation:       17.618s
Time for strengthen operator:            0.510s
Time for prec operator:                823.720s
  Time for abstraction:                821.869s (Max:     3.779s, Count: 82550)
    Boolean abstraction:               719.967s
    Solving time:                      245.988s (Max:     0.178s)
    Model enumeration time:            379.937s
    Time for BDD construction:          88.840s (Max:     0.210s)
Time for merge operator:                 0.773s
Time for coverage check:                 2.004s
  Time for BDD entailment checks:        1.943s
Total time for SMT solver (w/o itp):   625.925s

Number of path formula cache hits:   495326 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    14.137s

Total number of created targets for pointer analysis: 219503
   Number of created targets for uf: *(void)* is 4
   Number of created targets for uf: *signed_int is 185
   Number of created targets for uf: *unsigned_char is 12144


Number of BDD nodes:                               233099
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      664312 (count: 717062, min: 0, max: 3931, avg: 0.93)
Time for BDD node cleanup:                             0.192s
Time for BDD garbage collection:                       1.588s (in 259 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.134s
  Time for transition matches:                         0.542s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                       495986 (count: 495986, min: 1, max: 1, avg: 1.00) [1 x 495986]

CPA algorithm statistics
------------------------
Number of iterations:            319718
Max size of waitlist:            31
Average size of waitlist:        16
Number of computed successors:   363787
Max successors for one state:    2
Number of times merged:          16956
Number of times stopped:         28759
Number of times breaked:         390

Total time for CPA algorithm:       858.163s (Max:   257.593s)
  Time for choose from waitlist:      0.205s
  Time for precision adjustment:    827.101s
  Time for transfer relation:        24.380s
  Time for merge operator:            1.389s
  Time for stop operator:             2.759s
  Time for adding to reached set:     0.722s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   390
Avg. length of target path (in blocks):               30648 (count: 390, min: 32, max: 200, avg: 78.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  34.088s
  Counterexample analysis:                            32.777s (Max:     0.417s, Calls: 390)
    Refinement sat check:                             22.672s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.015s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.167s
  Precision update:                                    0.297s
  ARG update:                                          0.596s

Length of refined path (in blocks):                   27674 (count: 390, min: 28, max: 178, avg: 70.96)
Number of affected states:                             8996 (count: 390, min: 0, max: 173, avg: 23.07)
Length (states) of path with itp 'true':              18288 (count: 390, min: 0, max: 108, avg: 46.89)
Length (states) of path with itp non-trivial itp:      8996 (count: 390, min: 0, max: 173, avg: 23.07)
Length (states) of path with itp 'false':               390 (count: 390, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1465 (count: 390, min: 0, max: 52, avg: 3.76)
Equal non-trivial interpolants along paths:            7142 (count: 390, min: 0, max: 169, avg: 18.31)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                390
Number of successful refinements:     390
Number of failed refinements:         0
Max. size of reached set before ref.: 10877
Max. size of reached set after ref.:  10039
Avg. size of reached set before ref.: 2805.33
Avg. size of reached set after ref.:  1995.34

Total time for CEGAR algorithm:     894.059s
Time for refinements:                35.340s
Average time for refinement:          0.090s
Max time for refinement:              0.424s

Code Coverage
-----------------------------
  Function coverage:      0.400
  Visited lines:          2034
  Total lines:            3115
  Line coverage:          0.653
  Visited conditions:     318
  Total conditions:       696
  Condition coverage:     0.457

CPAchecker general statistics
-----------------------------
Number of program locations:     4320
Number of CFA edges:             4761
Number of relevant variables:    609
Number of functions:             150
Number of loops:                 8
Size of reached set:             6131
  Number of reached locations:   917 (21%)
    Avg states per location:     6
    Max states per location:     439 (at node N1063)
  Number of reached functions:   60 (40%)
  Number of partitions:          5653
    Avg size of partitions:      1
    Max size of partitions:      51 (with key [N1076 (before line 8315), Function check_sum called from node N1142, stack depth 3 [2e2c8300], stack [main, lme2510_download_firmware, check_sum]])
  Number of target states:       0
  Size of final wait list        16

Time for analysis setup:          6.223s
  Time for loading CPAs:          0.930s
  Time for loading parser:        0.759s
  Time for CFA construction:      4.450s
    Time for parsing file(s):     1.186s
    Time for AST to CFA:          1.599s
    Time for CFA sanity check:    0.288s
    Time for post-processing:     1.164s
      Time for var class.:        0.493s
Time for Analysis:              894.060s
CPU time for analysis:          893.930s
Total time for CPAchecker:      900.287s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              0.171s

Time for Garbage Collector:       8.358s (in 1292 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                147MB (   141 MiB) max;    101MB (    96 MiB) avg;    152MB (   145 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           160MB (   152 MiB) max;    148MB (   141 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  12104MB ( 11543 MiB) max;  10235MB (  9761 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
