scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--media--usb--dvb-usb-v2--dvb-usb-lmedm04.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_suss5jeg/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 9896: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9940: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

lines 9092-9093: Function pointer *__a___3 with type struct dvb_frontend *(*)(struct dvb_frontend *, const struct ts2020_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 9059-9060: Function pointer *__a___2 with type struct dvb_frontend *(*)(const struct m88rs2000_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9014: Function pointer *__a___1 with type struct dvb_frontend *(*)(const struct stv0288_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8969-8970: Function pointer *__a___0 with type struct dvb_frontend *(*)(const struct stv0299_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8925: Function pointer *__a with type struct dvb_frontend *(*)(const struct tda10086_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9285: Function pointer *__a___1 with type struct dvb_frontend *(*)(struct dvb_frontend *, int, struct i2c_adapter *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 9247-9248: Function pointer *__a___0 with type struct dvb_frontend *(*)(struct dvb_frontend *, const struct ix2505v_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9212: Function pointer *__a with type struct dvb_frontend *(*)(struct dvb_frontend *, int, struct i2c_adapter *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7395: Function pointer *(fe->ops.write) with type int (*)(struct dvb_frontend *, u8 *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9604: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9606: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_init_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9610: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5593 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5218 (93%)
  Because of loop head:            313 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         62 (1%)
  Times precision was empty:       1332 (24%)
  Times precision was {false}:     228 (4%)
  Times result was cached:         2626 (47%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1407 (25%)
  Times result was 'false':        396 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         5659
  BDD entailment checks:           731
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       68
Number of predicates discovered:          24
Number of abstraction locations:          81
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         13230
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 8.09
Number of irrelevant predicates:          3565 (27%)
Number of preds handled by boolean abs:   3784 (29%)
  Total number of models for allsat:      1553
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.10

Time for post operator:                  3.549s
  Time for path formula creation:        3.468s
Time for strengthen operator:            0.130s
Time for prec operator:                 10.516s
  Time for abstraction:                 10.203s (Max:     0.221s, Count: 5593)
    Boolean abstraction:                 6.215s
    Solving time:                        5.417s (Max:     0.173s)
    Model enumeration time:              0.565s
    Time for BDD construction:           0.141s (Max:     0.014s)
Time for merge operator:                 0.236s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.022s
Total time for SMT solver (w/o itp):     5.982s

Number of path formula cache hits:   26892 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.106s

Total number of created targets for pointer analysis: 4129
   Number of created targets for uf: *(void)* is 16
   Number of created targets for uf: *signed_int is 49
   Number of created targets for uf: *unsigned_char is 4019


Number of BDD nodes:                               745
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3703 (count: 12161, min: 0, max: 586, avg: 0.30)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.277s
Automaton transfers with branching:                0
Automaton transfer successors:                        35944 (count: 35944, min: 1, max: 1, avg: 1.00) [1 x 35944]

CPA algorithm statistics
------------------------
Number of iterations:            23688
Max size of waitlist:            101
Average size of waitlist:        48
Number of computed successors:   28073
Max successors for one state:    2
Number of times merged:          2464
Number of times stopped:         2805
Number of times breaked:         62

Total time for CPA algorithm:        17.374s (Max:     1.456s)
  Time for choose from waitlist:      0.079s
  Time for precision adjustment:     11.107s
  Time for transfer relation:         5.072s
  Time for merge operator:            0.439s
  Time for stop operator:             0.160s
  Time for adding to reached set:     0.149s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   62
Avg. length of target path (in blocks):                5735 (count: 62, min: 34, max: 176, avg: 92.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.325s
  Counterexample analysis:                             5.966s (Max:     0.235s, Calls: 62)
    Refinement sat check:                              4.337s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.054s
  Precision update:                                    0.045s
  ARG update:                                          0.155s

Length of refined path (in blocks):                    5035 (count: 62, min: 28, max: 127, avg: 81.21)
Number of affected states:                             1495 (count: 62, min: 1, max: 107, avg: 24.11)
Length (states) of path with itp 'true':               3478 (count: 62, min: 0, max: 114, avg: 56.10)
Length (states) of path with itp non-trivial itp:      1495 (count: 62, min: 1, max: 107, avg: 24.11)
Length (states) of path with itp 'false':                62 (count: 62, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          62 (count: 62, min: 0, max: 4, avg: 1.00)
Equal non-trivial interpolants along paths:            1371 (count: 62, min: 0, max: 106, avg: 22.11)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                62
Number of successful refinements:     62
Number of failed refinements:         0
Max. size of reached set before ref.: 1663
Max. size of reached set after ref.:  1275
Avg. size of reached set before ref.: 971.37
Avg. size of reached set after ref.:  586.26

Total time for CEGAR algorithm:      24.010s
Time for refinements:                 6.564s
Average time for refinement:          0.105s
Max time for refinement:              0.252s

Code Coverage
-----------------------------
  Function coverage:      0.293
  Visited lines:          1494
  Total lines:            3115
  Line coverage:          0.480
  Visited conditions:     162
  Total conditions:       696
  Condition coverage:     0.233

CPAchecker general statistics
-----------------------------
Number of program locations:     4320
Number of CFA edges:             4761
Number of relevant variables:    609
Number of functions:             150
Number of loops:                 8
Size of reached set:             996
  Number of reached locations:   450 (10%)
    Avg states per location:     2
    Max states per location:     13 (at node N30)
  Number of reached functions:   44 (29%)
  Number of partitions:          985
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N975 (before line 8207), Function lme2510_i2c_xfer called from node N2243, stack depth 2 [60c2c500], stack [main, lme2510_i2c_xfer]])
  Number of target states:       0
  Size of final wait list        42

Time for analysis setup:          6.272s
  Time for loading CPAs:          0.934s
  Time for loading parser:        0.723s
  Time for CFA construction:      4.499s
    Time for parsing file(s):     1.194s
    Time for AST to CFA:          1.735s
    Time for CFA sanity check:    0.280s
    Time for post-processing:     1.058s
      Time for var class.:        0.447s
Time for Analysis:               24.010s
CPU time for analysis:           24.010s
Total time for CPAchecker:       30.286s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.117s

Time for Garbage Collector:       0.364s (in 27 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    69 MiB) max;     48MB (    46 MiB) avg;     75MB (    72 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
