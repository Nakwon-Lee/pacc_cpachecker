scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--media--usb--dvb-usb-v2--dvb-usb-lmedm04.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ugz7iyeh/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 9896: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9940: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

lines 9092-9093: Function pointer *__a___3 with type struct dvb_frontend *(*)(struct dvb_frontend *, const struct ts2020_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 9059-9060: Function pointer *__a___2 with type struct dvb_frontend *(*)(const struct m88rs2000_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9014: Function pointer *__a___1 with type struct dvb_frontend *(*)(const struct stv0288_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8969-8970: Function pointer *__a___0 with type struct dvb_frontend *(*)(const struct stv0299_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8925: Function pointer *__a with type struct dvb_frontend *(*)(const struct tda10086_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9285: Function pointer *__a___1 with type struct dvb_frontend *(*)(struct dvb_frontend *, int, struct i2c_adapter *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 9247-9248: Function pointer *__a___0 with type struct dvb_frontend *(*)(struct dvb_frontend *, const struct ix2505v_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9212: Function pointer *__a with type struct dvb_frontend *(*)(struct dvb_frontend *, int, struct i2c_adapter *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7395: Function pointer *(fe->ops.write) with type int (*)(struct dvb_frontend *, u8 *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9604: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9606: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_init_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9610: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __symbol_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_module to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8925: Ignoring call via function pointer dm04_lme2510_frontend_attach::__a for which no suitable target was found in line: tmp___3 = (*__a)((const struct tda10086_config *)(&tda10086_config), &(d->i2c_adap)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8925: Ignoring function call through function pointer *__a: tmp___3 = (*__a)((const struct tda10086_config *)(&tda10086_config), &(d->i2c_adap)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __symbol_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 8969-8970: Ignoring call via function pointer dm04_lme2510_frontend_attach::__a___0 for which no suitable target was found in line: tmp___9 = (*__a___0)((const struct stv0299_config *)(&sharp_z0194_config), &(d->i2c_adap)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 8969-8970: Ignoring function call through function pointer *__a___0: tmp___9 = (*__a___0)((const struct stv0299_config *)(&sharp_z0194_config), &(d->i2c_adap)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9014: Ignoring call via function pointer dm04_lme2510_frontend_attach::__a___1 for which no suitable target was found in line: tmp___15 = (*__a___1)((const struct stv0288_config *)(&lme_config), &(d->i2c_adap)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9014: Ignoring function call through function pointer *__a___1: tmp___15 = (*__a___1)((const struct stv0288_config *)(&lme_config), &(d->i2c_adap)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 9059-9060: Ignoring call via function pointer dm04_lme2510_frontend_attach::__a___2 for which no suitable target was found in line: tmp___21 = (*__a___2)((const struct m88rs2000_config *)(&m88rs2000_config), &(d->i2c_adap)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 9059-9060: Ignoring function call through function pointer *__a___2: tmp___21 = (*__a___2)((const struct m88rs2000_config *)(&m88rs2000_config), &(d->i2c_adap)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 9092-9093: Ignoring call via function pointer dm04_lme2510_frontend_attach::__a___3 for which no suitable target was found in line: tmp___26 = (*__a___3)((adap->fe)[0], (const struct ts2020_config *)(&ts2020_config), &(d->i2c_adap)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 9092-9093: Ignoring function call through function pointer *__a___3: tmp___26 = (*__a___3)((adap->fe)[0], (const struct ts2020_config *)(&ts2020_config), &(d->i2c_adap)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dvb_frontend_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9285: Ignoring call via function pointer dm04_lme2510_tuner::__a___1 for which no suitable target was found in line: tmp___13 = (*__a___1)((adap->fe)[0], 96, &(d->i2c_adap), 13U); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9285: Ignoring function call through function pointer *__a___1: tmp___13 = (*__a___1)((adap->fe)[0], 96, &(d->i2c_adap), 13U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 9247-9248: Ignoring call via function pointer dm04_lme2510_tuner::__a___0 for which no suitable target was found in line: tmp___8 = (*__a___0)((adap->fe)[0], (const struct ix2505v_config *)(&lme_tuner), &(d->i2c_adap)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 9247-9248: Ignoring function call through function pointer *__a___0: tmp___8 = (*__a___0)((adap->fe)[0], (const struct ix2505v_config *)(&lme_tuner), &(d->i2c_adap)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9212: Ignoring call via function pointer dm04_lme2510_tuner::__a for which no suitable target was found in line: tmp___3 = (*__a)((adap->fe)[0], 96, &(d->i2c_adap), 1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9212: Ignoring function call through function pointer *__a: tmp___3 = (*__a)((adap->fe)[0], 96, &(d->i2c_adap), 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_reset_configuration to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            357104 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  316373 (89%)
  Because of loop head:            39052 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1679 (0%)
  Times precision was empty:       65544 (18%)
  Times precision was {false}:     1147 (0%)
  Times result was cached:         281885 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8528 (2%)
  Times result was 'false':        25533 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         575838
  BDD entailment checks:           130708
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       138
Number of predicates discovered:          119
Number of abstraction locations:          139
Max number of predicates per location:    33
Avg number of predicates per location:    7
Total predicates per abstraction:         1583705
Max number of predicates per abstraction: 33
Avg number of predicates per abstraction: 163.69
Number of irrelevant predicates:          733717 (46%)
Number of preds handled by boolean abs:   43301 (3%)
  Total number of models for allsat:      37085
  Max number of models for allsat:        864
  Avg number of models for allsat:        4.35

Time for post operator:                 57.388s
  Time for path formula creation:       55.644s
Time for strengthen operator:            2.848s
Time for prec operator:                515.336s
  Time for abstraction:                509.378s (Max:    14.310s, Count: 357104)
    Boolean abstraction:               345.073s
    Solving time:                      184.103s (Max:     0.225s)
    Model enumeration time:            177.954s
    Time for BDD construction:           1.102s (Max:     0.034s)
Time for merge operator:                 6.053s
Time for coverage check:                 0.297s
  Time for BDD entailment checks:        0.216s
Total time for SMT solver (w/o itp):   362.057s

Number of path formula cache hits:   3663298 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    38.398s

Total number of created targets for pointer analysis: 627866
   Number of created targets for uf: *(void)* is 268
   Number of created targets for uf: *(struct_dvb_frontend)* is 811
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_2,_Parameter_1_type:_[(struct_dvb_frontend)*],_Parameter_2_type:_[(unsigned_int)*],_VarArgs:_false)* is 1393
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_2,_Parameter_1_type:_[(struct_dvb_frontend)*],_Parameter_2_type:_[enum_fe_sec_voltage],_VarArgs:_false)* is 190
   Number of created targets for uf: *signed_int is 259
   Number of created targets for uf: *unsigned_char is 9004
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_2,_Parameter_1_type:_[(struct_dvb_frontend)*],_Parameter_2_type:_[(unsigned_short_int)*],_VarArgs:_false)* is 1393
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_2,_Parameter_1_type:_[(struct_dvb_frontend)*],_Parameter_2_type:_[(enum_fe_status)*],_VarArgs:_false)* is 697


Number of BDD nodes:                               102476
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       30649 (count: 261197, min: 0, max: 1273, avg: 0.12)
Time for BDD node cleanup:                             0.054s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.589s
  Time for transition matches:                         2.447s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.018s
Automaton transfers with branching:                0
Automaton transfer successors:                      3378034 (count: 3378034, min: 1, max: 1, avg: 1.00) [1 x 3378034]

CPA algorithm statistics
------------------------
Number of iterations:            1887875
Max size of waitlist:            468
Average size of waitlist:        173
Number of computed successors:   2223176
Max successors for one state:    2
Number of times merged:          222565
Number of times stopped:         267447
Number of times breaked:         1679

Total time for CPA algorithm:       638.956s (Max:    46.832s)
  Time for choose from waitlist:      0.872s
  Time for precision adjustment:    529.738s
  Time for transfer relation:        88.006s
  Time for merge operator:            8.865s
  Time for stop operator:             2.858s
  Time for adding to reached set:     2.924s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1679
Avg. length of target path (in blocks):              124005 (count: 1679, min: 32, max: 96, avg: 73.86)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 228.802s
  Counterexample analysis:                           223.403s (Max:     0.555s, Calls: 1679)
    Refinement sat check:                            183.159s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.054s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.356s
  Precision update:                                    1.148s
  ARG update:                                          3.123s

Length of refined path (in blocks):                  108225 (count: 1678, min: 28, max: 91, avg: 64.50)
Number of affected states:                            24701 (count: 1678, min: 0, max: 72, avg: 14.72)
Length (states) of path with itp 'true':              81846 (count: 1678, min: 0, max: 66, avg: 48.78)
Length (states) of path with itp non-trivial itp:     24701 (count: 1678, min: 0, max: 72, avg: 14.72)
Length (states) of path with itp 'false':              1678 (count: 1678, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        3183 (count: 1678, min: 0, max: 15, avg: 1.90)
Equal non-trivial interpolants along paths:           19843 (count: 1678, min: 0, max: 71, avg: 11.83)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1679
Number of successful refinements:     1678
Number of failed refinements:         0
Max. size of reached set before ref.: 25371
Max. size of reached set after ref.:  25149
Avg. size of reached set before ref.: 11225.05
Avg. size of reached set after ref.:  10081.44

Total time for CEGAR algorithm:     893.818s
Time for refinements:               244.119s
Average time for refinement:          0.145s
Max time for refinement:              0.571s

Code Coverage
-----------------------------
  Function coverage:      0.373
  Visited lines:          2153
  Total lines:            3115
  Line coverage:          0.691
  Visited conditions:     338
  Total conditions:       696
  Condition coverage:     0.486

CPAchecker general statistics
-----------------------------
Number of program locations:     4320
Number of CFA edges:             4761
Number of relevant variables:    609
Number of functions:             150
Number of loops:                 8
Size of reached set:             11846
  Number of reached locations:   931 (22%)
    Avg states per location:     12
    Max states per location:     82 (at node N241)
  Number of reached functions:   56 (37%)
  Number of partitions:          11774
    Avg size of partitions:      1
    Max size of partitions:      14 (with key [N2226 (before line 9625), Function main called from node N2169, stack depth 1 [1de9b505], stack [main]])
  Number of target states:       1
  Size of final wait list        271

Time for analysis setup:          6.439s
  Time for loading CPAs:          1.062s
  Time for loading parser:        0.732s
  Time for CFA construction:      4.540s
    Time for parsing file(s):     1.243s
    Time for AST to CFA:          1.592s
    Time for CFA sanity check:    0.328s
    Time for post-processing:     1.193s
      Time for var class.:        0.485s
Time for Analysis:              893.818s
CPU time for analysis:          893.640s
Total time for CPAchecker:      900.261s
Total CPU time for CPAchecker:  900.070s
Time for statistics:              0.313s

Time for Garbage Collector:      18.958s (in 1237 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                307MB (   292 MiB) max;    159MB (   152 MiB) avg;    311MB (   297 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           313MB (   298 MiB) max;    232MB (   221 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8500MB (  8106 MiB) max;   8297MB (  7912 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
