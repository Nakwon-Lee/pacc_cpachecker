scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--media--usb--dvb-usb-v2--dvb-usb-lmedm04.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cmp5cdtm/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 9896: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9940: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

lines 9092-9093: Function pointer *__a___3 with type struct dvb_frontend *(*)(struct dvb_frontend *, const struct ts2020_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 9059-9060: Function pointer *__a___2 with type struct dvb_frontend *(*)(const struct m88rs2000_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9014: Function pointer *__a___1 with type struct dvb_frontend *(*)(const struct stv0288_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8969-8970: Function pointer *__a___0 with type struct dvb_frontend *(*)(const struct stv0299_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8925: Function pointer *__a with type struct dvb_frontend *(*)(const struct tda10086_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9285: Function pointer *__a___1 with type struct dvb_frontend *(*)(struct dvb_frontend *, int, struct i2c_adapter *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 9247-9248: Function pointer *__a___0 with type struct dvb_frontend *(*)(struct dvb_frontend *, const struct ix2505v_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9212: Function pointer *__a with type struct dvb_frontend *(*)(struct dvb_frontend *, int, struct i2c_adapter *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7395: Function pointer *(fe->ops.write) with type int (*)(struct dvb_frontend *, u8 *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9604: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9606: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_init_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9610: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __symbol_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_module to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8925: Ignoring call via function pointer dm04_lme2510_frontend_attach::__a for which no suitable target was found in line: tmp___3 = (*__a)((const struct tda10086_config *)(&tda10086_config), &(d->i2c_adap)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8925: Ignoring function call through function pointer *__a: tmp___3 = (*__a)((const struct tda10086_config *)(&tda10086_config), &(d->i2c_adap)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __symbol_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 8969-8970: Ignoring call via function pointer dm04_lme2510_frontend_attach::__a___0 for which no suitable target was found in line: tmp___9 = (*__a___0)((const struct stv0299_config *)(&sharp_z0194_config), &(d->i2c_adap)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 8969-8970: Ignoring function call through function pointer *__a___0: tmp___9 = (*__a___0)((const struct stv0299_config *)(&sharp_z0194_config), &(d->i2c_adap)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9014: Ignoring call via function pointer dm04_lme2510_frontend_attach::__a___1 for which no suitable target was found in line: tmp___15 = (*__a___1)((const struct stv0288_config *)(&lme_config), &(d->i2c_adap)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9014: Ignoring function call through function pointer *__a___1: tmp___15 = (*__a___1)((const struct stv0288_config *)(&lme_config), &(d->i2c_adap)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 9059-9060: Ignoring call via function pointer dm04_lme2510_frontend_attach::__a___2 for which no suitable target was found in line: tmp___21 = (*__a___2)((const struct m88rs2000_config *)(&m88rs2000_config), &(d->i2c_adap)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 9059-9060: Ignoring function call through function pointer *__a___2: tmp___21 = (*__a___2)((const struct m88rs2000_config *)(&m88rs2000_config), &(d->i2c_adap)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 9092-9093: Ignoring call via function pointer dm04_lme2510_frontend_attach::__a___3 for which no suitable target was found in line: tmp___26 = (*__a___3)((adap->fe)[0], (const struct ts2020_config *)(&ts2020_config), &(d->i2c_adap)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 9092-9093: Ignoring function call through function pointer *__a___3: tmp___26 = (*__a___3)((adap->fe)[0], (const struct ts2020_config *)(&ts2020_config), &(d->i2c_adap)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dvb_frontend_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9285: Ignoring call via function pointer dm04_lme2510_tuner::__a___1 for which no suitable target was found in line: tmp___13 = (*__a___1)((adap->fe)[0], 96, &(d->i2c_adap), 13U); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9285: Ignoring function call through function pointer *__a___1: tmp___13 = (*__a___1)((adap->fe)[0], 96, &(d->i2c_adap), 13U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 9247-9248: Ignoring call via function pointer dm04_lme2510_tuner::__a___0 for which no suitable target was found in line: tmp___8 = (*__a___0)((adap->fe)[0], (const struct ix2505v_config *)(&lme_tuner), &(d->i2c_adap)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 9247-9248: Ignoring function call through function pointer *__a___0: tmp___8 = (*__a___0)((adap->fe)[0], (const struct ix2505v_config *)(&lme_tuner), &(d->i2c_adap)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9212: Ignoring call via function pointer dm04_lme2510_tuner::__a for which no suitable target was found in line: tmp___3 = (*__a)((adap->fe)[0], 96, &(d->i2c_adap), 1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9212: Ignoring function call through function pointer *__a: tmp___3 = (*__a)((adap->fe)[0], 96, &(d->i2c_adap), 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_configuration to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            22687 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20794 (92%)
  Because of loop head:            1661 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         232 (1%)
  Times precision was empty:       6967 (31%)
  Times precision was {false}:     282 (1%)
  Times result was cached:         13991 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1447 (6%)
  Times result was 'false':        2095 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         20653
  BDD entailment checks:           5339
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       138
Number of predicates discovered:          45
Number of abstraction locations:          116
Max number of predicates per location:    17
Avg number of predicates per location:    3
Total predicates per abstraction:         41474
Max number of predicates per abstraction: 17
Avg number of predicates per abstraction: 23.99
Number of irrelevant predicates:          13664 (33%)
Number of preds handled by boolean abs:   7203 (17%)
  Total number of models for allsat:      12140
  Max number of models for allsat:        80
  Avg number of models for allsat:        8.39

Time for post operator:                  7.805s
  Time for path formula creation:        7.634s
Time for strengthen operator:            0.187s
Time for prec operator:                860.720s
  Time for abstraction:                860.054s (Max:    17.316s, Count: 22687)
    Boolean abstraction:               852.524s
    Solving time:                       14.712s (Max:     0.172s)
    Model enumeration time:            837.635s
    Time for BDD construction:           0.347s (Max:     0.009s)
Time for merge operator:                 0.525s
Time for coverage check:                 0.075s
  Time for BDD entailment checks:        0.069s
Total time for SMT solver (w/o itp):   852.348s

Number of path formula cache hits:   139929 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.557s

Total number of created targets for pointer analysis: 44167
   Number of created targets for uf: *(void)* is 4
   Number of created targets for uf: *(struct_dvb_frontend)* is 10
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_2,_Parameter_1_type:_[(struct_dvb_frontend)*],_Parameter_2_type:_[(unsigned_int)*],_VarArgs:_false)* is 31
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_2,_Parameter_1_type:_[(struct_dvb_frontend)*],_Parameter_2_type:_[enum_fe_sec_voltage],_VarArgs:_false)* is 10
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *unsigned_char is 542
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_2,_Parameter_1_type:_[(struct_dvb_frontend)*],_Parameter_2_type:_[(unsigned_short_int)*],_VarArgs:_false)* is 31
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_2,_Parameter_1_type:_[(struct_dvb_frontend)*],_Parameter_2_type:_[(enum_fe_status)*],_VarArgs:_false)* is 16


Number of BDD nodes:                               24883
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       11124 (count: 25979, min: 0, max: 1028, avg: 0.43)
Time for BDD node cleanup:                             0.028s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.539s
  Time for transition matches:                         0.281s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       141733 (count: 141733, min: 1, max: 1, avg: 1.00) [1 x 141733]

CPA algorithm statistics
------------------------
Number of iterations:            90576
Max size of waitlist:            37
Average size of waitlist:        22
Number of computed successors:   103988
Max successors for one state:    2
Number of times merged:          7657
Number of times stopped:         9961
Number of times breaked:         232

Total time for CPA algorithm:       875.248s (Max:   167.328s)
  Time for choose from waitlist:      0.142s
  Time for precision adjustment:    861.881s
  Time for transfer relation:        10.891s
  Time for merge operator:            0.788s
  Time for stop operator:             0.386s
  Time for adding to reached set:     0.343s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   232
Avg. length of target path (in blocks):               15306 (count: 232, min: 32, max: 95, avg: 65.97)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  17.922s
  Counterexample analysis:                            17.091s (Max:     0.218s, Calls: 232)
    Refinement sat check:                             13.450s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.129s
  Precision update:                                    0.149s
  ARG update:                                          0.363s

Length of refined path (in blocks):                   14375 (count: 232, min: 28, max: 86, avg: 61.96)
Number of affected states:                             3858 (count: 232, min: 0, max: 69, avg: 16.63)
Length (states) of path with itp 'true':              10285 (count: 232, min: 0, max: 76, avg: 44.33)
Length (states) of path with itp non-trivial itp:      3858 (count: 232, min: 0, max: 69, avg: 16.63)
Length (states) of path with itp 'false':               232 (count: 232, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         384 (count: 232, min: 0, max: 13, avg: 1.66)
Equal non-trivial interpolants along paths:            3249 (count: 232, min: 0, max: 68, avg: 14.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                232
Number of successful refinements:     232
Number of failed refinements:         0
Max. size of reached set before ref.: 4008
Max. size of reached set after ref.:  3205
Avg. size of reached set before ref.: 1911.25
Avg. size of reached set after ref.:  1529.93

Total time for CEGAR algorithm:     894.207s
Time for refinements:                18.637s
Average time for refinement:          0.080s
Max time for refinement:              0.228s

Code Coverage
-----------------------------
  Function coverage:      0.407
  Visited lines:          2237
  Total lines:            3115
  Line coverage:          0.718
  Visited conditions:     382
  Total conditions:       696
  Condition coverage:     0.549

CPAchecker general statistics
-----------------------------
Number of program locations:     4320
Number of CFA edges:             4761
Number of relevant variables:    609
Number of functions:             150
Number of loops:                 8
Size of reached set:             3464
  Number of reached locations:   1067 (25%)
    Avg states per location:     3
    Max states per location:     44 (at node N1063)
  Number of reached functions:   61 (41%)
  Number of partitions:          3399
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N1076 (before line 8315), Function check_sum called from node N1142, stack depth 3 [4ef1111], stack [main, lme2510_download_firmware, check_sum]])
  Number of target states:       0
  Size of final wait list        25

Time for analysis setup:          6.077s
  Time for loading CPAs:          1.041s
  Time for loading parser:        0.659s
  Time for CFA construction:      4.275s
    Time for parsing file(s):     1.084s
    Time for AST to CFA:          1.658s
    Time for CFA sanity check:    0.275s
    Time for post-processing:     1.035s
      Time for var class.:        0.478s
Time for Analysis:              894.207s
CPU time for analysis:          894.110s
Total time for CPAchecker:      900.288s
Total CPU time for CPAchecker:  900.180s
Time for statistics:              0.166s

Time for Garbage Collector:       0.760s (in 78 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 81MB (    77 MiB) max;     62MB (    59 MiB) avg;     84MB (    80 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8151MB (  7773 MiB) max;   8143MB (  7765 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
