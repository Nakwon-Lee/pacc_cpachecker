scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--media--usb--dvb-usb-v2--dvb-usb-lmedm04.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_mvwh_acx/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 9896: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9940: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

lines 9092-9093: Function pointer *__a___3 with type struct dvb_frontend *(*)(struct dvb_frontend *, const struct ts2020_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 9059-9060: Function pointer *__a___2 with type struct dvb_frontend *(*)(const struct m88rs2000_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9014: Function pointer *__a___1 with type struct dvb_frontend *(*)(const struct stv0288_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8969-8970: Function pointer *__a___0 with type struct dvb_frontend *(*)(const struct stv0299_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8925: Function pointer *__a with type struct dvb_frontend *(*)(const struct tda10086_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9285: Function pointer *__a___1 with type struct dvb_frontend *(*)(struct dvb_frontend *, int, struct i2c_adapter *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 9247-9248: Function pointer *__a___0 with type struct dvb_frontend *(*)(struct dvb_frontend *, const struct ix2505v_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9212: Function pointer *__a with type struct dvb_frontend *(*)(struct dvb_frontend *, int, struct i2c_adapter *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7395: Function pointer *(fe->ops.write) with type int (*)(struct dvb_frontend *, u8 *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9604: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9606: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_init_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9610: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __symbol_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_module to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8925: Ignoring call via function pointer dm04_lme2510_frontend_attach::__a for which no suitable target was found in line: tmp___3 = (*__a)((const struct tda10086_config *)(&tda10086_config), &(d->i2c_adap)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8925: Ignoring function call through function pointer *__a: tmp___3 = (*__a)((const struct tda10086_config *)(&tda10086_config), &(d->i2c_adap)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __symbol_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 8969-8970: Ignoring call via function pointer dm04_lme2510_frontend_attach::__a___0 for which no suitable target was found in line: tmp___9 = (*__a___0)((const struct stv0299_config *)(&sharp_z0194_config), &(d->i2c_adap)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 8969-8970: Ignoring function call through function pointer *__a___0: tmp___9 = (*__a___0)((const struct stv0299_config *)(&sharp_z0194_config), &(d->i2c_adap)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9014: Ignoring call via function pointer dm04_lme2510_frontend_attach::__a___1 for which no suitable target was found in line: tmp___15 = (*__a___1)((const struct stv0288_config *)(&lme_config), &(d->i2c_adap)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9014: Ignoring function call through function pointer *__a___1: tmp___15 = (*__a___1)((const struct stv0288_config *)(&lme_config), &(d->i2c_adap)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 9059-9060: Ignoring call via function pointer dm04_lme2510_frontend_attach::__a___2 for which no suitable target was found in line: tmp___21 = (*__a___2)((const struct m88rs2000_config *)(&m88rs2000_config), &(d->i2c_adap)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 9059-9060: Ignoring function call through function pointer *__a___2: tmp___21 = (*__a___2)((const struct m88rs2000_config *)(&m88rs2000_config), &(d->i2c_adap)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 9092-9093: Ignoring call via function pointer dm04_lme2510_frontend_attach::__a___3 for which no suitable target was found in line: tmp___26 = (*__a___3)((adap->fe)[0], (const struct ts2020_config *)(&ts2020_config), &(d->i2c_adap)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 9092-9093: Ignoring function call through function pointer *__a___3: tmp___26 = (*__a___3)((adap->fe)[0], (const struct ts2020_config *)(&ts2020_config), &(d->i2c_adap)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dvb_frontend_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9285: Ignoring call via function pointer dm04_lme2510_tuner::__a___1 for which no suitable target was found in line: tmp___13 = (*__a___1)((adap->fe)[0], 96, &(d->i2c_adap), 13U); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9285: Ignoring function call through function pointer *__a___1: tmp___13 = (*__a___1)((adap->fe)[0], 96, &(d->i2c_adap), 13U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 9247-9248: Ignoring call via function pointer dm04_lme2510_tuner::__a___0 for which no suitable target was found in line: tmp___8 = (*__a___0)((adap->fe)[0], (const struct ix2505v_config *)(&lme_tuner), &(d->i2c_adap)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 9247-9248: Ignoring function call through function pointer *__a___0: tmp___8 = (*__a___0)((adap->fe)[0], (const struct ix2505v_config *)(&lme_tuner), &(d->i2c_adap)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9212: Ignoring call via function pointer dm04_lme2510_tuner::__a for which no suitable target was found in line: tmp___3 = (*__a)((adap->fe)[0], 96, &(d->i2c_adap), 1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9212: Ignoring function call through function pointer *__a: tmp___3 = (*__a)((adap->fe)[0], 96, &(d->i2c_adap), 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_reset_configuration to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            233013 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  205134 (88%)
  Because of loop head:            27065 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         814 (0%)
  Times precision was empty:       55613 (24%)
  Times precision was {false}:     1298 (1%)
  Times result was cached:         168229 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7873 (3%)
  Times result was 'false':        14160 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         407728
  BDD entailment checks:           71762
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       138
Number of predicates discovered:          28
Number of abstraction locations:          169
Max number of predicates per location:    10
Avg number of predicates per location:    5
Total predicates per abstraction:         723813
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 78.92
Number of irrelevant predicates:          332532 (46%)
Number of preds handled by boolean abs:   21811 (3%)
  Total number of models for allsat:      8240
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.05

Time for post operator:                 44.067s
  Time for path formula creation:       42.904s
Time for strengthen operator:            1.933s
Time for prec operator:                242.858s
  Time for abstraction:                238.928s (Max:     0.277s, Count: 233013)
    Boolean abstraction:               135.787s
    Solving time:                      155.504s (Max:     0.247s)
    Model enumeration time:              6.639s
    Time for BDD construction:           0.260s (Max:     0.009s)
Time for merge operator:                 5.209s
Time for coverage check:                 0.230s
  Time for BDD entailment checks:        0.161s
Total time for SMT solver (w/o itp):   162.143s

Number of path formula cache hits:   2541568 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    30.418s

Total number of created targets for pointer analysis: 458038
   Number of created targets for uf: *(void)* is 226
   Number of created targets for uf: *(struct_dvb_frontend)* is 676
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_2,_Parameter_1_type:_[(struct_dvb_frontend)*],_Parameter_2_type:_[(unsigned_int)*],_VarArgs:_false)* is 927
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_2,_Parameter_1_type:_[(struct_dvb_frontend)*],_Parameter_2_type:_[enum_fe_sec_voltage],_VarArgs:_false)* is 161
   Number of created targets for uf: *signed_int is 125
   Number of created targets for uf: *unsigned_char is 7827
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_2,_Parameter_1_type:_[(struct_dvb_frontend)*],_Parameter_2_type:_[(unsigned_short_int)*],_VarArgs:_false)* is 927
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_2,_Parameter_1_type:_[(struct_dvb_frontend)*],_Parameter_2_type:_[(enum_fe_status)*],_VarArgs:_false)* is 464


Number of BDD nodes:                               2836
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       18530 (count: 185345, min: 0, max: 333, avg: 0.10)
Time for BDD node cleanup:                             0.056s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.289s
  Time for transition matches:                         1.744s
  Time for transition assertions:                      0.007s
  Time for transition actions:                         0.007s
Automaton transfers with branching:                0
Automaton transfer successors:                      2334659 (count: 2334659, min: 1, max: 1, avg: 1.00) [1 x 2334659]

CPA algorithm statistics
------------------------
Number of iterations:            1321237
Max size of waitlist:            230
Average size of waitlist:        74
Number of computed successors:   1565559
Max successors for one state:    2
Number of times merged:          167983
Number of times stopped:         199725
Number of times breaked:         814

Total time for CPA algorithm:       334.508s (Max:     3.751s)
  Time for choose from waitlist:      0.778s
  Time for precision adjustment:    252.503s
  Time for transfer relation:        65.868s
  Time for merge operator:            7.357s
  Time for stop operator:             1.916s
  Time for adding to reached set:     2.270s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   814
Avg. length of target path (in blocks):               51523 (count: 814, min: 32, max: 84, avg: 63.30)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  42.698s
  Counterexample analysis:                            39.422s (Max:     0.199s, Calls: 814)
    Refinement sat check:                             31.678s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.039s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.243s
  Precision update:                                    0.478s
  ARG update:                                          2.193s

Length of refined path (in blocks):                   49815 (count: 814, min: 28, max: 83, avg: 61.20)
Number of affected states:                            17651 (count: 814, min: 0, max: 78, avg: 21.68)
Length (states) of path with itp 'true':              31350 (count: 814, min: 0, max: 68, avg: 38.51)
Length (states) of path with itp non-trivial itp:     17651 (count: 814, min: 0, max: 78, avg: 21.68)
Length (states) of path with itp 'false':               814 (count: 814, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         310 (count: 814, min: 0, max: 5, avg: 0.38)
Equal non-trivial interpolants along paths:           16569 (count: 814, min: 0, max: 77, avg: 20.36)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                814
Number of successful refinements:     814
Number of failed refinements:         0
Max. size of reached set before ref.: 10179
Max. size of reached set after ref.:  6434
Avg. size of reached set before ref.: 4007.23
Avg. size of reached set after ref.:  2350.71

Total time for CEGAR algorithm:     381.405s
Time for refinements:                45.521s
Average time for refinement:          0.055s
Max time for refinement:              0.402s

Code Coverage
-----------------------------
  Function coverage:      0.407
  Visited lines:          2257
  Total lines:            3115
  Line coverage:          0.725
  Visited conditions:     384
  Total conditions:       696
  Condition coverage:     0.552

CPAchecker general statistics
-----------------------------
Number of program locations:     4320
Number of CFA edges:             4761
Number of relevant variables:    609
Number of functions:             150
Number of loops:                 8
Size of reached set:             3268
  Number of reached locations:   1088 (25%)
    Avg states per location:     3
    Max states per location:     43 (at node N230)
  Number of reached functions:   61 (41%)
  Number of partitions:          3255
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1171 (before line 8405), Function lme2510_download_firmware called from node N2420, stack depth 2 [401d1a7e], stack [main, lme2510_download_firmware]])
  Number of target states:       0

Time for analysis setup:          6.269s
  Time for loading CPAs:          0.963s
  Time for loading parser:        0.748s
  Time for CFA construction:      4.447s
    Time for parsing file(s):     1.139s
    Time for AST to CFA:          1.724s
    Time for CFA sanity check:    0.299s
    Time for post-processing:     1.019s
      Time for var class.:        0.499s
Time for Analysis:              381.405s
CPU time for analysis:          381.330s
Time for analyzing result:        0.002s
Total time for CPAchecker:      387.681s
Total CPU time for CPAchecker:  387.590s
Time for statistics:              0.130s

Time for Garbage Collector:       9.905s (in 936 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                184MB (   175 MiB) max;    109MB (   104 MiB) avg;    195MB (   186 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           218MB (   208 MiB) max;    166MB (   159 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8290MB (  7906 MiB) max;   8142MB (  7765 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
