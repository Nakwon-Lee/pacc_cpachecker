scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--memstick--core--ms_block.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8hnoadd1/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5474: Function pointer *(host->set_param) with type int (*)(struct memstick_host *, enum memstick_param , int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5502: Function pointer *(host->set_param) with type int (*)(struct memstick_host *, enum memstick_param , int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5509: Function pointer *(host->set_param) with type int (*)(struct memstick_host *, enum memstick_param , int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5515: Function pointer *(host->set_param) with type int (*)(struct memstick_host *, enum memstick_param , int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memstick_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memstick_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function idr_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function idr_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_fetch_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_start_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_stop_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_rq_map_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_init_one to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_gendisk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_cleanup_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_next_zero_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_init_table to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5502: Ignoring function call through function pointer *(host->set_param): error = (*(host->set_param))(host, 1, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __blk_end_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5509: Ignoring function call through function pointer *(host->set_param): error = (*(host->set_param))(host, 1, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5515: Ignoring function call through function pointer *(host->set_param): error = (*(host->set_param))(host, 2, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function sg_copy_to_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memstick_new_req to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_copy_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_requeue_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_miter_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_miter_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_miter_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bitmap_weight to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 5560: Unsupported feature (recursion): msb_reset(msb, 1); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            228574 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  194600 (85%)
  Because of loop head:            33869 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         105 (0%)
  Times precision was empty:       164863 (72%)
  Times precision was {false}:     824 (0%)
  Times result was cached:         62107 (27%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      780 (0%)
  Times result was 'false':        1458 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         196469
  BDD entailment checks:           46555
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       54
Number of predicates discovered:          5
Number of abstraction locations:          91
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         119092
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 74.25
Number of irrelevant predicates:          70586 (59%)
Number of preds handled by boolean abs:   1082 (1%)
  Total number of models for allsat:      882
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.13

Time for post operator:                 17.037s
  Time for path formula creation:       16.042s
Time for strengthen operator:            1.472s
Time for prec operator:                 16.495s
  Time for abstraction:                 13.141s (Max:     0.412s, Count: 228574)
    Boolean abstraction:                 0.996s
    Solving time:                        1.219s (Max:     0.014s)
    Model enumeration time:              0.089s
    Time for BDD construction:           0.114s (Max:     0.012s)
Time for merge operator:                 0.913s
Time for coverage check:                 0.116s
  Time for BDD entailment checks:        0.081s
Total time for SMT solver (w/o itp):     1.308s

Number of path formula cache hits:   1466123 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    12.188s

Total number of created targets for pointer analysis: 12812
   Number of created targets for uf: *(void)* is 4
   Number of created targets for uf: *unsigned_short_int is 38
   Number of created targets for uf: *signed_int is 9
   Number of created targets for uf: *unsigned_char is 145
   Number of created targets for uf: *unsigned_int is 451
   Number of created targets for uf: *unsigned_long_int is 801


Number of BDD nodes:                               303
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1620 (count: 220402, min: 0, max: 141, avg: 0.01)
Time for BDD node cleanup:                             0.041s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.281s
  Time for transition matches:                         1.250s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      1327217 (count: 1327217, min: 1, max: 1, avg: 1.00) [1 x 1327217]

CPA algorithm statistics
------------------------
Number of iterations:            854629
Max size of waitlist:            799
Average size of waitlist:        348
Number of computed successors:   987090
Max successors for one state:    2
Number of times merged:          74957
Number of times stopped:         106774
Number of times breaked:         105

Total time for CPA algorithm:        68.756s (Max:     2.019s)
  Time for choose from waitlist:      0.710s
  Time for precision adjustment:     25.978s
  Time for transfer relation:        32.897s
  Time for merge operator:            2.223s
  Time for stop operator:             1.455s
  Time for adding to reached set:     1.942s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   105
Avg. length of target path (in blocks):                4075 (count: 105, min: 20, max: 56, avg: 38.81)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.718s
  Counterexample analysis:                             1.532s (Max:     0.030s, Calls: 105)
    Refinement sat check:                              1.055s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.078s
  Precision update:                                    0.101s
  ARG update:                                          1.906s

Length of refined path (in blocks):                    3508 (count: 105, min: 16, max: 52, avg: 33.41)
Number of affected states:                             1829 (count: 105, min: 3, max: 42, avg: 17.42)
Length (states) of path with itp 'true':               1574 (count: 105, min: 0, max: 22, avg: 14.99)
Length (states) of path with itp non-trivial itp:      1829 (count: 105, min: 3, max: 42, avg: 17.42)
Length (states) of path with itp 'false':               105 (count: 105, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 105, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1724 (count: 105, min: 2, max: 41, avg: 16.42)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                105
Number of successful refinements:     105
Number of failed refinements:         0
Max. size of reached set before ref.: 40907
Max. size of reached set after ref.:  15058
Avg. size of reached set before ref.: 11413.19
Avg. size of reached set after ref.:  3416.62

Total time for CEGAR algorithm:      73.737s
Time for refinements:                 4.679s
Average time for refinement:          0.044s
Max time for refinement:              0.219s

Code Coverage
-----------------------------
  Function coverage:      0.624
  Visited lines:          2022
  Total lines:            3283
  Line coverage:          0.616
  Visited conditions:     516
  Total conditions:       1036
  Condition coverage:     0.498

CPAchecker general statistics
-----------------------------
Number of program locations:     4593
Number of CFA edges:             5289
Number of relevant variables:    685
Number of functions:             141
Number of loops:                 45
Size of reached set:             39219
  Number of reached locations:   1361 (30%)
    Avg states per location:     28
    Max states per location:     1571 (at node N105)
  Number of reached functions:   88 (62%)
  Number of partitions:          39084
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N3730 (before line 8387), Function main called from node N3701, stack depth 1 [2b8bd798], stack [main]])
  Number of target states:       0
  Size of final wait list        733

Time for analysis setup:          6.030s
  Time for loading CPAs:          0.906s
  Time for loading parser:        0.742s
  Time for CFA construction:      4.243s
    Time for parsing file(s):     1.096s
    Time for AST to CFA:          1.510s
    Time for CFA sanity check:    0.297s
    Time for post-processing:     1.134s
      Time for var class.:        0.534s
Time for Analysis:               73.737s
CPU time for analysis:           73.730s
Total time for CPAchecker:       79.771s
Total CPU time for CPAchecker:   79.750s
Time for statistics:              0.590s

Time for Garbage Collector:       7.255s (in 261 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                197MB (   188 MiB) max;     91MB (    87 MiB) avg;    221MB (   211 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     38MB (    36 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           244MB (   232 MiB) max;    154MB (   147 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8079MB (  7704 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
