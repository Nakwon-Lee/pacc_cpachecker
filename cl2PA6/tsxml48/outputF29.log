scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--memstick--core--ms_block.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dye8zeyh/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5474: Function pointer *(host->set_param) with type int (*)(struct memstick_host *, enum memstick_param , int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5502: Function pointer *(host->set_param) with type int (*)(struct memstick_host *, enum memstick_param , int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5509: Function pointer *(host->set_param) with type int (*)(struct memstick_host *, enum memstick_param , int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5515: Function pointer *(host->set_param) with type int (*)(struct memstick_host *, enum memstick_param , int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memstick_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function idr_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memstick_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function idr_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_fetch_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_start_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_gendisk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_cleanup_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_init_table to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5502: Ignoring function call through function pointer *(host->set_param): error = (*(host->set_param))(host, 1, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_init_one to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5509: Ignoring function call through function pointer *(host->set_param): error = (*(host->set_param))(host, 1, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5515: Ignoring function call through function pointer *(host->set_param): error = (*(host->set_param))(host, 2, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function blk_stop_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_requeue_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function idr_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_prep_rq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_bounce_limit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_hw_sectors to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_segments to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_segment_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_logical_block_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function set_disk_ro to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_rq_map_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __blk_end_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_next_zero_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_copy_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_copy_to_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memstick_new_req to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bitmap_weight to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2271611 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2006662 (88%)
  Because of loop head:            262883 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2066 (0%)
  Times precision was empty:       783822 (35%)
  Times precision was {false}:     4840 (0%)
  Times result was cached:         1465773 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      17176 (1%)
  Times result was 'false':        42780 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1919170
  BDD entailment checks:           545646
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       54
Number of predicates discovered:          9
Number of abstraction locations:          248
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         3750191
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 170.34
Number of irrelevant predicates:          2153033 (57%)
Number of preds handled by boolean abs:   30000 (1%)
  Total number of models for allsat:      23575
  Max number of models for allsat:        9
  Avg number of models for allsat:        1.37

Time for post operator:                158.999s
  Time for path formula creation:      151.449s
Time for strengthen operator:           11.277s
Time for prec operator:                253.125s
  Time for abstraction:                225.311s (Max:     2.177s, Count: 2271611)
    Boolean abstraction:                27.696s
    Solving time:                       26.556s (Max:     0.020s)
    Model enumeration time:              3.584s
    Time for BDD construction:           0.450s (Max:     0.012s)
Time for merge operator:                 8.650s
Time for coverage check:                 0.825s
  Time for BDD entailment checks:        0.571s
Total time for SMT solver (w/o itp):    30.140s

Number of path formula cache hits:   13142729 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   110.783s

Total number of created targets for pointer analysis: 340046
   Number of created targets for uf: *unsigned_short_int is 364
   Number of created targets for uf: *(void)* is 7016
   Number of created targets for uf: *signed_int is 573
   Number of created targets for uf: *(struct_gendisk)* is 56
   Number of created targets for uf: *unsigned_char is 40982
   Number of created targets for uf: *unsigned_long_int is 757


Number of BDD nodes:                               871
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       33925 (count: 1462056, min: 0, max: 1055, avg: 0.02)
Time for BDD node cleanup:                             0.288s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 17.519s
  Time for transition matches:                         9.893s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.012s
Automaton transfers with branching:                0
Automaton transfer successors:                     12777956 (count: 12777956, min: 1, max: 1, avg: 1.00) [1 x 12777956]

CPA algorithm statistics
------------------------
Number of iterations:            8272554
Max size of waitlist:            5411
Average size of waitlist:        1361
Number of computed successors:   9589744
Max successors for one state:    2
Number of times merged:          686762
Number of times stopped:         994019
Number of times breaked:         2066

Total time for CPA algorithm:       668.955s (Max:    11.569s)
  Time for choose from waitlist:      4.431s
  Time for precision adjustment:    316.652s
  Time for transfer relation:       277.407s
  Time for merge operator:           17.610s
  Time for stop operator:            11.707s
  Time for adding to reached set:    18.476s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2066
Avg. length of target path (in blocks):              188065 (count: 2066, min: 20, max: 256, avg: 91.03)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  77.934s
  Counterexample analysis:                            58.313s (Max:     0.159s, Calls: 2066)
    Refinement sat check:                             35.459s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.110s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.472s
  Precision update:                                    1.216s
  ARG update:                                         16.879s

Length of refined path (in blocks):                  178116 (count: 2066, min: 16, max: 204, avg: 86.21)
Number of affected states:                            60116 (count: 2066, min: 1, max: 203, avg: 29.10)
Length (states) of path with itp 'true':             115934 (count: 2066, min: 0, max: 165, avg: 56.12)
Length (states) of path with itp non-trivial itp:     60116 (count: 2066, min: 1, max: 203, avg: 29.10)
Length (states) of path with itp 'false':              2066 (count: 2066, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2066, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           58050 (count: 2066, min: 0, max: 202, avg: 28.10)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2066
Number of successful refinements:     2066
Number of failed refinements:         0
Max. size of reached set before ref.: 190295
Max. size of reached set after ref.:  115680
Avg. size of reached set before ref.: 43176.19
Avg. size of reached set after ref.:  39068.11

Total time for CEGAR algorithm:     894.349s
Time for refinements:               160.979s
Average time for refinement:          0.077s
Max time for refinement:              3.525s

Code Coverage
-----------------------------
  Function coverage:      0.723
  Visited lines:          2444
  Total lines:            3283
  Line coverage:          0.744
  Visited conditions:     701
  Total conditions:       1036
  Condition coverage:     0.677

CPAchecker general statistics
-----------------------------
Number of program locations:     4593
Number of CFA edges:             5289
Number of relevant variables:    685
Number of functions:             141
Number of loops:                 45
Size of reached set:             65653
  Number of reached locations:   1821 (40%)
    Avg states per location:     36
    Max states per location:     599 (at node N105)
  Number of reached functions:   102 (72%)
  Number of partitions:          65424
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N3730 (before line 8387), Function main called from node N3701, stack depth 1 [2b8bd798], stack [main]])
  Number of target states:       0
  Size of final wait list        2187

Time for analysis setup:          5.930s
  Time for loading CPAs:          0.836s
  Time for loading parser:        0.719s
  Time for CFA construction:      4.277s
    Time for parsing file(s):     1.072s
    Time for AST to CFA:          1.563s
    Time for CFA sanity check:    0.370s
    Time for post-processing:     1.116s
      Time for var class.:        0.516s
Time for Analysis:              894.349s
CPU time for analysis:          894.280s
Total time for CPAchecker:      900.282s
Total CPU time for CPAchecker:  900.190s
Time for statistics:              0.836s

Time for Garbage Collector:      71.449s (in 876 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1602MB (  1528 MiB) max;    623MB (   594 MiB) avg;   1637MB (  1561 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:          1666MB (  1589 MiB) max;    899MB (   858 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8354MB (  7967 MiB) max;   8172MB (  7793 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
