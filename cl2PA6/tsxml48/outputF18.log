scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--memstick--core--ms_block.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_t_cnqdqr/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5474: Function pointer *(host->set_param) with type int (*)(struct memstick_host *, enum memstick_param , int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5502: Function pointer *(host->set_param) with type int (*)(struct memstick_host *, enum memstick_param , int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5509: Function pointer *(host->set_param) with type int (*)(struct memstick_host *, enum memstick_param , int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5515: Function pointer *(host->set_param) with type int (*)(struct memstick_host *, enum memstick_param , int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memstick_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memstick_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function idr_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function idr_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_init_table to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_start_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_gendisk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_cleanup_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_fetch_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_init_one to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_rq_map_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __blk_end_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_stop_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_requeue_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5502: Ignoring function call through function pointer *(host->set_param): error = (*(host->set_param))(host, 1, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5509: Ignoring function call through function pointer *(host->set_param): error = (*(host->set_param))(host, 1, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5515: Ignoring function call through function pointer *(host->set_param): error = (*(host->set_param))(host, 2, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function sg_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_copy_to_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_next_zero_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_copy_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memstick_new_req to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function idr_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_prep_rq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_bounce_limit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_hw_sectors to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_segments to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_segment_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_logical_block_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function set_disk_ro to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3126355 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2750546 (88%)
  Because of loop head:            368743 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7066 (0%)
  Times precision was empty:       890720 (28%)
  Times precision was {false}:     2887 (0%)
  Times result was cached:         2230341 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2407 (0%)
  Times result was 'false':        32892 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         3032582
  BDD entailment checks:           1016622
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       54
Number of predicates discovered:          8
Number of abstraction locations:          261
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         3958256
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 747.69
Number of irrelevant predicates:          3070218 (78%)
Number of preds handled by boolean abs:   3123 (0%)
  Total number of models for allsat:      2722
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.13

Time for post operator:                 90.503s
  Time for path formula creation:       84.043s
Time for strengthen operator:           13.067s
Time for prec operator:                205.671s
  Time for abstraction:                175.228s (Max:     1.270s, Count: 3126355)
    Boolean abstraction:                 2.737s
    Solving time:                        4.152s (Max:     0.019s)
    Model enumeration time:              0.263s
    Time for BDD construction:           0.150s (Max:     0.008s)
Time for merge operator:                 6.139s
Time for coverage check:                 0.995s
  Time for BDD entailment checks:        0.647s
Total time for SMT solver (w/o itp):     4.415s

Number of path formula cache hits:   20591264 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    35.980s

Total number of created targets for pointer analysis: 32579
   Number of created targets for uf: *unsigned_short_int is 17
   Number of created targets for uf: *(void)* is 3250
   Number of created targets for uf: *signed_int is 339
   Number of created targets for uf: *(struct_gendisk)* is 5
   Number of created targets for uf: *unsigned_char is 2961
   Number of created targets for uf: *unsigned_int is 271
   Number of created targets for uf: *unsigned_long_int is 271


Number of BDD nodes:                               325
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4948 (count: 1937229, min: 0, max: 182, avg: 0.00)
Time for BDD node cleanup:                             0.298s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 21.129s
  Time for transition matches:                        12.171s
  Time for transition assertions:                      0.007s
  Time for transition actions:                         0.021s
Automaton transfers with branching:                0
Automaton transfer successors:                     17342263 (count: 17342263, min: 1, max: 1, avg: 1.00) [1 x 17342263]

CPA algorithm statistics
------------------------
Number of iterations:            11270469
Max size of waitlist:            2977
Average size of waitlist:        528
Number of computed successors:   13028582
Max successors for one state:    2
Number of times merged:          1007980
Number of times stopped:         1317351
Number of times breaked:         7066

Total time for CPA algorithm:       585.053s (Max:     1.960s)
  Time for choose from waitlist:      5.099s
  Time for precision adjustment:    280.431s
  Time for transfer relation:       223.476s
  Time for merge operator:           17.909s
  Time for stop operator:            13.422s
  Time for adding to reached set:    18.052s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7066
Avg. length of target path (in blocks):              498099 (count: 7066, min: 24, max: 161, avg: 70.49)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 156.776s
  Counterexample analysis:                           132.556s (Max:     0.107s, Calls: 7066)
    Refinement sat check:                             85.099s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.249s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.017s
  Precision update:                                    2.657s
  ARG update:                                         18.038s

Length of refined path (in blocks):                  471603 (count: 7065, min: 16, max: 136, avg: 66.75)
Number of affected states:                           142064 (count: 7065, min: 1, max: 135, avg: 20.11)
Length (states) of path with itp 'true':             322474 (count: 7065, min: 0, max: 95, avg: 45.64)
Length (states) of path with itp non-trivial itp:    142064 (count: 7065, min: 1, max: 135, avg: 20.11)
Length (states) of path with itp 'false':              7065 (count: 7065, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 7065, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          134999 (count: 7065, min: 0, max: 134, avg: 19.11)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7066
Number of successful refinements:     7065
Number of failed refinements:         0
Max. size of reached set before ref.: 74444
Max. size of reached set after ref.:  72845
Avg. size of reached set before ref.: 16047.96
Avg. size of reached set after ref.:  14397.25

Total time for CEGAR algorithm:     894.235s
Time for refinements:               244.241s
Average time for refinement:          0.034s
Max time for refinement:              0.205s

Code Coverage
-----------------------------
  Function coverage:      0.723
  Visited lines:          2343
  Total lines:            3283
  Line coverage:          0.714
  Visited conditions:     655
  Total conditions:       1036
  Condition coverage:     0.632

CPAchecker general statistics
-----------------------------
Number of program locations:     4593
Number of CFA edges:             5289
Number of relevant variables:    685
Number of functions:             141
Number of loops:                 45
Size of reached set:             44888
  Number of reached locations:   1706 (37%)
    Avg states per location:     26
    Max states per location:     504 (at node N2721)
  Number of reached functions:   102 (72%)
  Number of partitions:          44862
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N3730 (before line 8387), Function main called from node N3701, stack depth 1 [2b8bd798], stack [main]])
  Number of target states:       1
  Size of final wait list        1763

Time for analysis setup:          6.031s
  Time for loading CPAs:          0.934s
  Time for loading parser:        0.709s
  Time for CFA construction:      4.249s
    Time for parsing file(s):     1.053s
    Time for AST to CFA:          1.471s
    Time for CFA sanity check:    0.320s
    Time for post-processing:     1.142s
      Time for var class.:        0.572s
Time for Analysis:              894.235s
CPU time for analysis:          894.190s
Total time for CPAchecker:      900.270s
Total CPU time for CPAchecker:  900.210s
Time for statistics:              0.674s

Time for Garbage Collector:      41.232s (in 1732 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                528MB (   504 MiB) max;    301MB (   287 MiB) avg;    563MB (   537 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           589MB (   561 MiB) max;    437MB (   417 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8153MB (  7775 MiB) max;   8110MB (  7734 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
