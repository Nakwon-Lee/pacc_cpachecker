scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--memstick--core--ms_block.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ww36ux3v/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5474: Function pointer *(host->set_param) with type int (*)(struct memstick_host *, enum memstick_param , int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5502: Function pointer *(host->set_param) with type int (*)(struct memstick_host *, enum memstick_param , int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5509: Function pointer *(host->set_param) with type int (*)(struct memstick_host *, enum memstick_param , int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5515: Function pointer *(host->set_param) with type int (*)(struct memstick_host *, enum memstick_param , int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memstick_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memstick_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function idr_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function idr_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_fetch_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_start_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_stop_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_init_one to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_next_zero_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5502: Ignoring function call through function pointer *(host->set_param): error = (*(host->set_param))(host, 1, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5509: Ignoring function call through function pointer *(host->set_param): error = (*(host->set_param))(host, 1, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5515: Ignoring function call through function pointer *(host->set_param): error = (*(host->set_param))(host, 2, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bitmap_weight to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memstick_new_req to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_rq_map_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_init_table to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_copy_to_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_copy_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __blk_end_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_gendisk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_cleanup_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_miter_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_miter_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_miter_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2984684 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2676133 (90%)
  Because of loop head:            306273 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2278 (0%)
  Times precision was empty:       1503724 (50%)
  Times precision was {false}:     2720 (0%)
  Times result was cached:         1474022 (49%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4218 (0%)
  Times result was 'false':        13583 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         2526610
  BDD entailment checks:           549644
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       54
Number of predicates discovered:          6
Number of abstraction locations:          147
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         3643737
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 525.19
Number of irrelevant predicates:          3002449 (82%)
Number of preds handled by boolean abs:   6441 (0%)
  Total number of models for allsat:      6022
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.43

Time for post operator:                132.045s
  Time for path formula creation:      124.273s
Time for strengthen operator:           15.741s
Time for prec operator:                188.817s
  Time for abstraction:                158.340s (Max:     3.051s, Count: 2984684)
    Boolean abstraction:                 5.042s
    Solving time:                        5.761s (Max:     0.014s)
    Model enumeration time:              0.601s
    Time for BDD construction:           0.244s (Max:     0.012s)
Time for merge operator:                 7.695s
Time for coverage check:                 0.782s
  Time for BDD entailment checks:        0.461s
Total time for SMT solver (w/o itp):     6.362s

Number of path formula cache hits:   20255838 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    72.670s

Total number of created targets for pointer analysis: 289589
   Number of created targets for uf: *(void)* is 22
   Number of created targets for uf: *unsigned_short_int is 626
   Number of created targets for uf: *signed_int is 77
   Number of created targets for uf: *unsigned_char is 233
   Number of created targets for uf: *unsigned_int is 481
   Number of created targets for uf: *unsigned_long_int is 15001


Number of BDD nodes:                               348
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8550 (count: 2092624, min: 0, max: 191, avg: 0.00)
Time for BDD node cleanup:                             0.338s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 26.026s
  Time for transition matches:                        12.956s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.027s
Automaton transfers with branching:                0
Automaton transfer successors:                     17964041 (count: 17964041, min: 1, max: 1, avg: 1.00) [1 x 17964041]

CPA algorithm statistics
------------------------
Number of iterations:            11417370
Max size of waitlist:            3986
Average size of waitlist:        1304
Number of computed successors:   13097576
Max successors for one state:    2
Number of times merged:          988483
Number of times stopped:         1310277
Number of times breaked:         2278

Total time for CPA algorithm:       658.291s (Max:     3.407s)
  Time for choose from waitlist:      5.298s
  Time for precision adjustment:    279.201s
  Time for transfer relation:       291.625s
  Time for merge operator:           18.858s
  Time for stop operator:            12.746s
  Time for adding to reached set:    21.492s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2278
Avg. length of target path (in blocks):              112952 (count: 2278, min: 20, max: 99, avg: 49.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  55.255s
  Counterexample analysis:                            28.885s (Max:     0.038s, Calls: 2278)
    Refinement sat check:                             19.477s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.153s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.343s
  Precision update:                                    0.740s
  ARG update:                                         24.433s

Length of refined path (in blocks):                  109712 (count: 2278, min: 16, max: 76, avg: 48.16)
Number of affected states:                            34619 (count: 2278, min: 3, max: 72, avg: 15.20)
Length (states) of path with itp 'true':              72815 (count: 2278, min: 0, max: 65, avg: 31.96)
Length (states) of path with itp non-trivial itp:     34619 (count: 2278, min: 3, max: 72, avg: 15.20)
Length (states) of path with itp 'false':              2278 (count: 2278, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2278, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           32341 (count: 2278, min: 2, max: 71, avg: 14.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2278
Number of successful refinements:     2278
Number of failed refinements:         0
Max. size of reached set before ref.: 178862
Max. size of reached set after ref.:  173611
Avg. size of reached set before ref.: 49235.94
Avg. size of reached set after ref.:  44113.25

Total time for CEGAR algorithm:     894.165s
Time for refinements:               152.278s
Average time for refinement:          0.066s
Max time for refinement:              2.386s

Code Coverage
-----------------------------
  Function coverage:      0.660
  Visited lines:          2123
  Total lines:            3283
  Line coverage:          0.647
  Visited conditions:     556
  Total conditions:       1036
  Condition coverage:     0.537

CPAchecker general statistics
-----------------------------
Number of program locations:     4593
Number of CFA edges:             5289
Number of relevant variables:    685
Number of functions:             141
Number of loops:                 45
Size of reached set:             104237
  Number of reached locations:   1459 (32%)
    Avg states per location:     71
    Max states per location:     5729 (at node N105)
  Number of reached functions:   93 (66%)
  Number of partitions:          103774
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N3730 (before line 8387), Function main called from node N3701, stack depth 1 [2b8bd798], stack [main]])
  Number of target states:       0
  Size of final wait list        2270

Time for analysis setup:          6.117s
  Time for loading CPAs:          0.832s
  Time for loading parser:        0.722s
  Time for CFA construction:      4.407s
    Time for parsing file(s):     1.168s
    Time for AST to CFA:          1.539s
    Time for CFA sanity check:    0.411s
    Time for post-processing:     1.097s
      Time for var class.:        0.505s
Time for Analysis:              894.165s
CPU time for analysis:          894.110s
Total time for CPAchecker:      900.289s
Total CPU time for CPAchecker:  900.210s
Time for statistics:              1.194s

Time for Garbage Collector:      99.691s (in 1179 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1249MB (  1191 MiB) max;    552MB (   526 MiB) avg;   1359MB (  1296 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:          1559MB (  1487 MiB) max;    812MB (   774 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8153MB (  7776 MiB) max;   8093MB (  7718 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
