scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--memstick--core--ms_block.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lyfxndxv/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5474: Function pointer *(host->set_param) with type int (*)(struct memstick_host *, enum memstick_param , int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5502: Function pointer *(host->set_param) with type int (*)(struct memstick_host *, enum memstick_param , int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5509: Function pointer *(host->set_param) with type int (*)(struct memstick_host *, enum memstick_param , int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5515: Function pointer *(host->set_param) with type int (*)(struct memstick_host *, enum memstick_param , int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memstick_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memstick_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function idr_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function idr_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_fetch_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_start_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_stop_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_init_one to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_next_zero_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5502: Ignoring function call through function pointer *(host->set_param): error = (*(host->set_param))(host, 1, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5509: Ignoring function call through function pointer *(host->set_param): error = (*(host->set_param))(host, 1, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5515: Ignoring function call through function pointer *(host->set_param): error = (*(host->set_param))(host, 2, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bitmap_weight to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memstick_new_req to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_rq_map_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_init_table to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_copy_to_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_copy_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __blk_end_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            22900 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20487 (89%)
  Because of loop head:            2381 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         32 (0%)
  Times precision was empty:       17546 (77%)
  Times precision was {false}:     240 (1%)
  Times result was cached:         4742 (21%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      372 (2%)
  Times result was 'false':        311 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         23490
  BDD entailment checks:           3906
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       54
Number of predicates discovered:          5
Number of abstraction locations:          48
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         10959
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 17.91
Number of irrelevant predicates:          5201 (47%)
Number of preds handled by boolean abs:   633 (6%)
  Total number of models for allsat:      535
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.44

Time for post operator:                  7.883s
  Time for path formula creation:        7.590s
Time for strengthen operator:            0.294s
Time for prec operator:                  4.819s
  Time for abstraction:                  4.016s (Max:     0.028s, Count: 22900)
    Boolean abstraction:                 0.828s
    Solving time:                        0.646s (Max:     0.013s)
    Model enumeration time:              0.118s
    Time for BDD construction:           0.131s (Max:     0.010s)
Time for merge operator:                 0.503s
Time for coverage check:                 0.085s
  Time for BDD entailment checks:        0.078s
Total time for SMT solver (w/o itp):     0.764s

Number of path formula cache hits:   134731 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.799s

Total number of created targets for pointer analysis: 2573
   Number of created targets for uf: *unsigned_short_int is 15
   Number of created targets for uf: *(void)* is 8
   Number of created targets for uf: *signed_int is 9
   Number of created targets for uf: *unsigned_char is 19
   Number of created targets for uf: *unsigned_long_int is 321


Number of BDD nodes:                               283
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         817 (count: 24971, min: 0, max: 168, avg: 0.03)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.593s
  Time for transition matches:                         0.302s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       153621 (count: 153621, min: 1, max: 1, avg: 1.00) [1 x 153621]

CPA algorithm statistics
------------------------
Number of iterations:            94531
Max size of waitlist:            328
Average size of waitlist:        133
Number of computed successors:   110766
Max successors for one state:    2
Number of times merged:          9792
Number of times stopped:         11779
Number of times breaked:         32

Total time for CPA algorithm:        22.043s (Max:     2.296s)
  Time for choose from waitlist:      0.236s
  Time for precision adjustment:      6.526s
  Time for transfer relation:        12.182s
  Time for merge operator:            0.973s
  Time for stop operator:             0.404s
  Time for adding to reached set:     0.498s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   32
Avg. length of target path (in blocks):                1098 (count: 32, min: 20, max: 45, avg: 34.31)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.182s
  Counterexample analysis:                             0.584s (Max:     0.029s, Calls: 32)
    Refinement sat check:                              0.393s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.065s
  Precision update:                                    0.034s
  ARG update:                                          0.418s

Length of refined path (in blocks):                     973 (count: 32, min: 16, max: 44, avg: 30.41)
Number of affected states:                              538 (count: 32, min: 3, max: 35, avg: 16.81)
Length (states) of path with itp 'true':                403 (count: 32, min: 0, max: 22, avg: 12.59)
Length (states) of path with itp non-trivial itp:       538 (count: 32, min: 3, max: 35, avg: 16.81)
Length (states) of path with itp 'false':                32 (count: 32, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 32, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             506 (count: 32, min: 2, max: 34, avg: 15.81)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                32
Number of successful refinements:     32
Number of failed refinements:         0
Max. size of reached set before ref.: 8456
Max. size of reached set after ref.:  4295
Avg. size of reached set before ref.: 3795.03
Avg. size of reached set after ref.:  971.03

Total time for CEGAR algorithm:      23.514s
Time for refinements:                 1.437s
Average time for refinement:          0.044s
Max time for refinement:              0.094s

Code Coverage
-----------------------------
  Function coverage:      0.560
  Visited lines:          1836
  Total lines:            3283
  Line coverage:          0.559
  Visited conditions:     454
  Total conditions:       1036
  Condition coverage:     0.438

CPAchecker general statistics
-----------------------------
Number of program locations:     4593
Number of CFA edges:             5289
Number of relevant variables:    685
Number of functions:             141
Number of loops:                 45
Size of reached set:             8308
  Number of reached locations:   1161 (25%)
    Avg states per location:     7
    Max states per location:     231 (at node N105)
  Number of reached functions:   79 (56%)
  Number of partitions:          8291
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N3730 (before line 8387), Function main called from node N3701, stack depth 1 [692e028d], stack [main]])
  Number of target states:       0
  Size of final wait list        280

Time for analysis setup:          6.249s
  Time for loading CPAs:          0.986s
  Time for loading parser:        0.741s
  Time for CFA construction:      4.376s
    Time for parsing file(s):     1.148s
    Time for AST to CFA:          1.607s
    Time for CFA sanity check:    0.294s
    Time for post-processing:     1.107s
      Time for var class.:        0.571s
Time for Analysis:               23.515s
CPU time for analysis:           23.510s
Total time for CPAchecker:       29.769s
Total CPU time for CPAchecker:   29.760s
Time for statistics:              0.218s

Time for Garbage Collector:       0.746s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 98MB (    94 MiB) max;     55MB (    52 MiB) avg;    101MB (    96 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
