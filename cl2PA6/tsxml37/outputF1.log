scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-08_1a-drivers--net--wireless--ath--ath9k--ath9k.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_g3hkt2f4/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 17157: Dead code detected: [((common->debug_mask) & 512) != 0] (CFACreationUtils.addEdgeToCFA, INFO)

line 17157: Dead code detected: [!(((common->debug_mask) & 512) != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 17158: Dead code detected: ath_printk("\017", (struct ath_common const *)common, "Change Interface\n"); (CFACreationUtils.addEdgeToCFA, INFO)

line 17162: Dead code detected: tmp___0 = ath9k_uses_beacons((int )vif->type); (CFACreationUtils.addEdgeToCFA, INFO)

line 17163: Dead code detected: [!(((int)tmp___0) == 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 17168: Dead code detected: vif->type = new_type; (CFACreationUtils.addEdgeToCFA, INFO)

line 17171: Dead code detected: [!(((int)tmp___1) == 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 17176: Dead code detected: ath9k_assign_hw_queues(hw, vif); (CFACreationUtils.addEdgeToCFA, INFO)

line 17242: Dead code detected: sc->ps_enabled = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 17243: Dead code detected: [!(((ah->caps.hw_caps) & 4U) == 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

lines 17244-17249: Dead code detected: ((unsigned int )ah->imask & 256U) == 0U (CFACreationUtils.addEdgeToCFA, INFO)

line 17244: Dead code detected: [!((__CPAchecker_TMP_0 & 256U) == 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 17245: Dead code detected: ah->imask = (enum ath9k_int )((unsigned int )ah->imask | 256U); (CFACreationUtils.addEdgeToCFA, INFO)

line 17250: Dead code detected: ath9k_hw_setrxabort(ah, 1); (CFACreationUtils.addEdgeToCFA, INFO)

line 17254: Dead code detected: [((common->debug_mask) & 2048) != 0] (CFACreationUtils.addEdgeToCFA, INFO)

line 17254: Dead code detected: [!(((common->debug_mask) & 2048) != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 17255: Dead code detected: ath_printk("\017", (struct ath_common const *)common, "PowerSave enabled\n"); (CFACreationUtils.addEdgeToCFA, INFO)

line 17272: Dead code detected: sc->ps_enabled = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 17274: Dead code detected: [!(((ah->caps.hw_caps) & 4U) == 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 17275: Dead code detected: ath9k_hw_setrxabort(ah, 0); (CFACreationUtils.addEdgeToCFA, INFO)

line 17277: Dead code detected: [!((__CPAchecker_TMP_1 & 256U) != 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 17278: Dead code detected: ah->imask = (enum ath9k_int )((unsigned int )ah->imask & 4294967039U); (CFACreationUtils.addEdgeToCFA, INFO)

line 17286: Dead code detected: [((common->debug_mask) & 2048) != 0] (CFACreationUtils.addEdgeToCFA, INFO)

line 17286: Dead code detected: [!(((common->debug_mask) & 2048) != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 17287: Dead code detected: ath_printk("\017", (struct ath_common const *)common, "PowerSave disabled\n"); (CFACreationUtils.addEdgeToCFA, INFO)

line 17991: Dead code detected: spin_lock_bh(& common->cc_lock); (CFACreationUtils.addEdgeToCFA, INFO)

line 17992: Dead code detected: [!(idx == 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 17993: Dead code detected: ath_update_survey_stats(sc); (CFACreationUtils.addEdgeToCFA, INFO)

line 17997: Dead code detected: sband = (hw->wiphy)->bands[0]; (CFACreationUtils.addEdgeToCFA, INFO)

line 17998: Dead code detected: [!(((unsigned long)sband) != ((unsigned long)((struct ieee80211_supported_band *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 17998: Dead code detected: [(sband->n_channels) <= idx] (CFACreationUtils.addEdgeToCFA, INFO)

line 17998: Dead code detected: [!((sband->n_channels) <= idx)] (CFACreationUtils.addEdgeToCFA, INFO)

line 17999: Dead code detected: idx = idx - sband->n_channels; (CFACreationUtils.addEdgeToCFA, INFO)

line 18004: Dead code detected: [((unsigned long)sband) == ((unsigned long)((struct ieee80211_supported_band *)0))] (CFACreationUtils.addEdgeToCFA, INFO)

line 18004: Dead code detected: [!(((unsigned long)sband) == ((unsigned long)((struct ieee80211_supported_band *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 18005: Dead code detected: sband = (hw->wiphy)->bands[1]; (CFACreationUtils.addEdgeToCFA, INFO)

line 18009: Dead code detected: [((unsigned long)sband) == ((unsigned long)((struct ieee80211_supported_band *)0))] (CFACreationUtils.addEdgeToCFA, INFO)

line 18009: Dead code detected: [!(((unsigned long)sband) == ((unsigned long)((struct ieee80211_supported_band *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 18009: Dead code detected: [!((sband->n_channels) <= idx)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18010: Dead code detected: spin_unlock_bh(& common->cc_lock); (CFACreationUtils.addEdgeToCFA, INFO)

line 18015: Dead code detected: chan = sband->channels + (unsigned long )idx; (CFACreationUtils.addEdgeToCFA, INFO)

line 18047: Dead code detected: mutex_lock_nested(& sc->mutex, 0U); (CFACreationUtils.addEdgeToCFA, INFO)

line 18048: Dead code detected: [!(((int)coverage_class) >= 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18049: Dead code detected: ah->coverage_class = (int )coverage_class; (CFACreationUtils.addEdgeToCFA, INFO)

line 18050: Dead code detected: [!(((int)(ah->dynack.enabled)) == 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18057: Dead code detected: ath9k_ps_wakeup(sc); (CFACreationUtils.addEdgeToCFA, INFO)

line 18061: Dead code detected: [(ah->dynack.enabled) == 0] (CFACreationUtils.addEdgeToCFA, INFO)

line 18061: Dead code detected: [!((ah->dynack.enabled) == 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18062: Dead code detected: ath9k_enable_dynack(sc); (CFACreationUtils.addEdgeToCFA, INFO)

line 18066: Dead code detected: mutex_unlock(& sc->mutex); (CFACreationUtils.addEdgeToCFA, INFO)

line 20876: Dead code detected: rfilt = 7U; (CFACreationUtils.addEdgeToCFA, INFO)

line 20877: Dead code detected: [!(((int)(sc->hw->conf.radar_enabled)) == 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20882: Dead code detected: spin_lock_bh(& sc->chan_lock); (CFACreationUtils.addEdgeToCFA, INFO)

line 20883: Dead code detected: [!(((sc->cur_chan->rxfilter) & 256U) != 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20884: Dead code detected: rfilt = rfilt | 128U; (CFACreationUtils.addEdgeToCFA, INFO)

lines 20888-20892: Dead code detected: (int )(sc->sc_ah)->is_monitoring (CFACreationUtils.addEdgeToCFA, INFO)

line 20888: Dead code detected: [!(__CPAchecker_TMP_0 == 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20893: Dead code detected: [((sc->cur_chan->rxfilter) & 32U) != 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 20893: Dead code detected: [!(((sc->cur_chan->rxfilter) & 32U) != 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20893: Dead code detected: [!(((int)(sc->sc_ah->dynack.enabled)) == 0)] (CFACreationUtils.addEdgeToCFA, INFO)

lines 20898-20902: Dead code detected: (unsigned int )(sc->sc_ah)->opmode == 2U (CFACreationUtils.addEdgeToCFA, INFO)

line 20898: Dead code detected: [!(__CPAchecker_TMP_1 == 2U)] (CFACreationUtils.addEdgeToCFA, INFO)

lines 20898-20902: Dead code detected: (int )(sc->cur_chan)->nvifs <= 1 (CFACreationUtils.addEdgeToCFA, INFO)

line 20898: Dead code detected: [!(__CPAchecker_TMP_2 <= 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20898: Dead code detected: [((sc->cur_chan->rxfilter) & 16U) == 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 20898: Dead code detected: [!(((sc->cur_chan->rxfilter) & 16U) == 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20899: Dead code detected: rfilt = rfilt | 512U; (CFACreationUtils.addEdgeToCFA, INFO)

line 20901: Dead code detected: rfilt = rfilt | 16U; (CFACreationUtils.addEdgeToCFA, INFO)

lines 20903-20907: Dead code detected: (unsigned int )(sc->sc_ah)->opmode == 3U (CFACreationUtils.addEdgeToCFA, INFO)

line 20903: Dead code detected: [!(__CPAchecker_TMP_3 == 3U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20903: Dead code detected: [!(((sc->cur_chan->rxfilter) & 128U) != 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20904: Dead code detected: rfilt = rfilt | 16384U; (CFACreationUtils.addEdgeToCFA, INFO)

line 20908: Dead code detected: [((unsigned int)(sc->cur_chandef.width)) != 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 20908: Dead code detected: [!(((unsigned int)(sc->cur_chandef.width)) != 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20909: Dead code detected: rfilt = rfilt | 1024U; (CFACreationUtils.addEdgeToCFA, INFO)

lines 20913-20922: Dead code detected: (int )(sc->cur_chan)->nvifs > 1 (CFACreationUtils.addEdgeToCFA, INFO)

line 20913: Dead code detected: [!(__CPAchecker_TMP_4 > 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20913: Dead code detected: [!(((sc->cur_chan->rxfilter) & 64U) != 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20914: Dead code detected: [(sc->sc_ah->hw_version.macVersion) <= 64U] (CFACreationUtils.addEdgeToCFA, INFO)

line 20914: Dead code detected: [!((sc->sc_ah->hw_version.macVersion) <= 64U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20915: Dead code detected: rfilt = rfilt | 32U; (CFACreationUtils.addEdgeToCFA, INFO)

line 20919: Dead code detected: rfilt = rfilt | 32768U; (CFACreationUtils.addEdgeToCFA, INFO)

line 20923: Dead code detected: [(sc->sc_ah->hw_version.macVersion) == 1024U] (CFACreationUtils.addEdgeToCFA, INFO)

line 20923: Dead code detected: [!((sc->sc_ah->hw_version.macVersion) == 1024U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20923: Dead code detected: [!((sc->sc_ah->hw_version.macVersion) == 1280U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20923: Dead code detected: [!((sc->sc_ah->hw_version.macVersion) == 1536U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20924: Dead code detected: rfilt = rfilt | 1048576U; (CFACreationUtils.addEdgeToCFA, INFO)

line 20928: Dead code detected: tmp___0 = ath9k_is_chanctx_enabled(); (CFACreationUtils.addEdgeToCFA, INFO)

line 20929: Dead code detected: [!(((int)tmp___0) == 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20931: Dead code detected: [!(tmp___1 != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20932: Dead code detected: rfilt = rfilt | 16U; (CFACreationUtils.addEdgeToCFA, INFO)

line 20939: Dead code detected: spin_unlock_bh(& sc->chan_lock); (CFACreationUtils.addEdgeToCFA, INFO)

line 22171: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22171: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22172: Dead code detected: __asm__ ("incb %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22174: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22174: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22175: Dead code detected: __asm__ ("decb %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22177: Dead code detected: __asm__ ("addb %1, %%gs:%0": "+m" (__preempt_count): "qi" (val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22181: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22181: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22182: Dead code detected: __asm__ ("incw %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22184: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22184: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22185: Dead code detected: __asm__ ("decw %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22187: Dead code detected: __asm__ ("addw %1, %%gs:%0": "+m" (__preempt_count): "ri" (val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22201: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22201: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22202: Dead code detected: __asm__ ("incq %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22204: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22204: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22205: Dead code detected: __asm__ ("decq %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22207: Dead code detected: __asm__ ("addq %1, %%gs:%0": "+m" (__preempt_count): "re" (val)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addb %1, %%gs:%0": "+m" (__preempt_count): "qi" (val));
  }
  goto ldv_6059;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addw %1, %%gs:%0": "+m" (__preempt_count): "ri" (val));
  }
  goto ldv_6059;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addl %1, %%gs:%0": "+m" (__preempt_count): "ri" (val));
  }
  goto ldv_6059;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addq %1, %%gs:%0": "+m" (__preempt_count): "re" (val));
  }
  goto ldv_6059;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 22225: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22225: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22226: Dead code detected: __asm__ ("incb %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22228: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22228: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22229: Dead code detected: __asm__ ("decb %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22231: Dead code detected: __asm__ ("addb %1, %%gs:%0": "+m" (__preempt_count): "qi" (- val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22235: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22235: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22236: Dead code detected: __asm__ ("incw %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22238: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22238: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22239: Dead code detected: __asm__ ("decw %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22241: Dead code detected: __asm__ ("addw %1, %%gs:%0": "+m" (__preempt_count): "ri" (- val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22255: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22255: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22256: Dead code detected: __asm__ ("incq %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22258: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22258: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22259: Dead code detected: __asm__ ("decq %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22261: Dead code detected: __asm__ ("addq %1, %%gs:%0": "+m" (__preempt_count): "re" (- val)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addb %1, %%gs:%0": "+m" (__preempt_count): "qi" (- val));
  }
  goto ldv_6071;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addw %1, %%gs:%0": "+m" (__preempt_count): "ri" (- val));
  }
  goto ldv_6071;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addl %1, %%gs:%0": "+m" (__preempt_count): "ri" (- val));
  }
  goto ldv_6071;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addq %1, %%gs:%0": "+m" (__preempt_count): "re" (- val));
  }
  goto ldv_6071;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 36034: Function pointer *(pd->add_pulse) with type bool (*)(struct dfs_pattern_detector *, struct pulse_event *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27842: Function pointer *(tmp->antdiv_comb_conf_get) with type void (*)(struct ath_hw *, struct ath_hw_antcomb_conf *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27852: Function pointer *(tmp->antdiv_comb_conf_set) with type void (*)(struct ath_hw *, struct ath_hw_antcomb_conf *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 26917: Function pointer *(tmp->calibrate) with type int (*)(struct ath_hw *, struct ath9k_channel *, u8 , bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15507: Function pointer *(tmp->config_pci_powersave) with type void (*)(struct ath_hw *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 22528: Function pointer *(tmp->get_duration) with type int (*)(struct ath_hw *, const void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15519: Function pointer *(tmp->get_isr) with type bool (*)(struct ath_hw *, enum ath9k_int *, u32 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 37389: Function pointer *(tmp->set_bt_ant_diversity) with type void (*)(struct ath_hw *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 36233: Function pointer *(tmp->tx99_set_txpower) with type void (*)(struct ath_hw *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 22538: Function pointer *(tmp->tx99_start) with type void (*)(struct ath_hw *, u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15530: Function pointer *(tmp->proc_txdesc) with type int (*)(struct ath_hw *, void *, struct ath_tx_status *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12709: Function pointer *(sc->dfs_detector->set_dfs_domain) with type bool (*)(struct dfs_pattern_detector *, enum nl80211_dfs_regions ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 9434-9435: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9488: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20085: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20118: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9468: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 35551: Function pointer *(sc->dfs_detector->get_stats) with type struct ath_dfs_pool_stats (*)(struct dfs_pattern_detector *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_36 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_36 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_36 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_36 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_36 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_noirq_36 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_late_36 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_36 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_noirq_36 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_36 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_early_36 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_36 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_36 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_36 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 41079: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19180: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(64UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 41732: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 36757: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 41150: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40833: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 35812: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40994: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40767: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40434: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40362: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40277: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 41666: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 36667: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40904: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40682: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40519: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 35733: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_35 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 41081: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ath_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 41734: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40835: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function pcim_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 35814: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40996: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40769: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40436: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40364: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 41668: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 36669: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40906: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40592: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40521: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 35735: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function jiffies_to_msecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 19184: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(320UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 36761: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 41154: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function __msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 40438: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40281: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40686: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40594: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function devm_ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_37 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_37 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_34 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_34 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath_hw_cycle_counters_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 33711: Ignoring function call through function pointer *(common->ops->read): (*(common->ops->read))((void *)ah, (off << 2) + 8192U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ath9k_hw_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 33724: Ignoring function call through function pointer *(common->ops->read): tmp___1 = (*(common->ops->read))((void *)ah, __CPAchecker_TMP_5); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 36763: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 41156: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 35818: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 41000: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40283: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 36673: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40910: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40688: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40596: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ath9k_hw_setrxabort to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath9k_hw_stopdmarecv to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath9k_hw_setpower to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcie_capability_read_word to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_19 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function default_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_puts to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_15 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ar9003_is_paprd_enabled to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_20 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_25 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_16 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_32 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 19190: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ath9k_hw_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_radar_detected to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_alloc_hw_nm to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15507: Ignoring function call through function pointer *(tmp->config_pci_powersave): (*(tmp->config_pci_powersave))(ah, (int)power_off); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ieee80211_queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ar9003_get_pll_sqsum_dvc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_rfkill_stop_polling to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ar9003_paprd_init_table to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcim_iomap_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scnprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_29 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_23 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath9k_hw_reset_calvalid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_31 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_24 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_28 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_27 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_30 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_18 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_17 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_26 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 19196: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_init_zalloc(216UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function kstrtou8_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ar9003_paprd_setup_gain_table to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 35480: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __might_fault to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath9k_hw_ani_monitor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 19198: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 26917: Ignoring function call through function pointer *(tmp->calibrate): tmp___0 = (*(tmp->calibrate))(ah, chan, (int)rxchainmask, (int)longcal); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ath9k_hw_getrxfilter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 38000: Ignoring function call through function pointer *(tmp___0->ops->write): (*(tmp___0->ops->write))((void *)ah, 33024U, 88U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_from_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function (*(sc->dfs_detector->get_stats))(sc->dfs_detector) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 19202: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ath9k_hw_kill_interrupts to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strtobool to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_init_wakeup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ar9003_paprd_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ar9003_paprd_populate_single_table to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_queue_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 19208: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___13 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 36233: Ignoring function call through function pointer *(tmp->tx99_set_txpower): (*(tmp->tx99_set_txpower))(ah, (int)power); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2392913 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2277994 (95%)
  Because of loop head:            114730 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         189 (0%)
  Times precision was empty:       1877218 (78%)
  Times precision was {false}:     1464 (0%)
  Times result was cached:         511589 (21%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2642 (0%)
  Times result was 'false':        5165 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         2412215
  BDD entailment checks:           401511
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       274
Number of predicates discovered:          18
Number of abstraction locations:          129
Max number of predicates per location:    17
Avg number of predicates per location:    5
Total predicates per abstraction:         1763069
Max number of predicates per abstraction: 17
Avg number of predicates per abstraction: 429.39
Number of irrelevant predicates:          1319697 (75%)
Number of preds handled by boolean abs:   11959 (1%)
  Total number of models for allsat:      436461
  Max number of models for allsat:        32768
  Avg number of models for allsat:        165.20

Time for post operator:                197.378s
  Time for path formula creation:      189.593s
Time for strengthen operator:           14.216s
Time for prec operator:                224.500s
  Time for abstraction:                193.495s (Max:    12.132s, Count: 2392913)
    Boolean abstraction:               117.540s
    Solving time:                        2.836s (Max:     0.016s)
    Model enumeration time:            100.496s
    Time for BDD construction:          14.712s (Max:     1.149s)
Time for merge operator:                13.975s
Time for coverage check:                 0.659s
  Time for BDD entailment checks:        0.398s
Total time for SMT solver (w/o itp):   103.332s

Number of path formula cache hits:   17699651 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   116.916s

Total number of created targets for pointer analysis: 179951
   Number of created targets for uf: *unsigned_short_int is 6385
   Number of created targets for uf: *(char)* is 6661
   Number of created targets for uf: *signed_int is 217
   Number of created targets for uf: *unsigned_char is 73
   Number of created targets for uf: *_Bool is 101
   Number of created targets for uf: *char is 19
   Number of created targets for uf: *unsigned_int is 209
   Number of created targets for uf: *unsigned_long_int is 2101


Number of BDD nodes:                               124824
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6648 (count: 2302716, min: 0, max: 249, avg: 0.00)
Time for BDD node cleanup:                             0.349s
Time for BDD garbage collection:                       0.073s (in 3 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 22.927s
  Time for transition matches:                        13.465s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                     16423244 (count: 16423244, min: 1, max: 1, avg: 1.00) [1 x 16423244]

CPA algorithm statistics
------------------------
Number of iterations:            9422653
Max size of waitlist:            1615
Average size of waitlist:        729
Number of computed successors:   10913925
Max successors for one state:    2
Number of times merged:          1005352
Number of times stopped:         1257987
Number of times breaked:         189

Total time for CPA algorithm:       852.772s (Max:    26.472s)
  Time for choose from waitlist:      5.847s
  Time for precision adjustment:    315.302s
  Time for transfer relation:       443.430s
  Time for merge operator:           28.947s
  Time for stop operator:            12.253s
  Time for adding to reached set:    19.848s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   189
Avg. length of target path (in blocks):                9673 (count: 189, min: 38, max: 57, avg: 51.18)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  27.809s
  Counterexample analysis:                             4.460s (Max:     0.053s, Calls: 189)
    Refinement sat check:                              3.304s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.101s
  Precision update:                                    0.100s
  ARG update:                                         23.024s

Length of refined path (in blocks):                    6438 (count: 189, min: 26, max: 54, avg: 34.06)
Number of affected states:                             4705 (count: 189, min: 3, max: 53, avg: 24.89)
Length (states) of path with itp 'true':               1544 (count: 189, min: 0, max: 22, avg: 8.17)
Length (states) of path with itp non-trivial itp:      4705 (count: 189, min: 3, max: 53, avg: 24.89)
Length (states) of path with itp 'false':               189 (count: 189, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 189, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4516 (count: 189, min: 2, max: 52, avg: 23.89)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                189
Number of successful refinements:     189
Number of failed refinements:         0
Max. size of reached set before ref.: 77750
Max. size of reached set after ref.:  58
Avg. size of reached set before ref.: 51009.54
Avg. size of reached set after ref.:  23.42

Total time for CEGAR algorithm:     885.838s
Time for refinements:                33.052s
Average time for refinement:          0.174s
Max time for refinement:              3.881s

Code Coverage
-----------------------------
  Function coverage:      0.104
  Visited lines:          2982
  Total lines:            19185
  Line coverage:          0.155
  Visited conditions:     408
  Total conditions:       6768
  Condition coverage:     0.060

CPAchecker general statistics
-----------------------------
Number of program locations:     28245
Number of CFA edges:             33190
Number of relevant variables:    5145
Number of functions:             879
Number of loops:                 128
Size of reached set:             14396
  Number of reached locations:   1139 (4%)
    Avg states per location:     12
    Max states per location:     294 (at node N79)
  Number of reached functions:   91 (10%)
  Number of partitions:          14262
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N4368 (before line 14822), Function main called from node N4309, stack depth 1 [6fd33f5a], stack [main]])
  Number of target states:       0
  Size of final wait list        406

Time for analysis setup:         14.427s
  Time for loading CPAs:          1.362s
  Time for loading parser:        0.651s
  Time for CFA construction:     12.254s
    Time for parsing file(s):     1.997s
    Time for AST to CFA:          4.328s
    Time for CFA sanity check:    1.606s
    Time for post-processing:     4.289s
      Time for var class.:        2.077s
Time for Analysis:              885.838s
CPU time for analysis:          885.780s
Total time for CPAchecker:      900.274s
Total CPU time for CPAchecker:  900.180s
Time for statistics:              0.420s

Time for Garbage Collector:      65.430s (in 638 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1377MB (  1313 MiB) max;    719MB (   686 MiB) avg;   1394MB (  1329 MiB) peak
Used non-heap memory:             48MB (    46 MiB) max;     42MB (    40 MiB) avg;     49MB (    46 MiB) peak
Allocated heap memory:          1585MB (  1512 MiB) max;   1078MB (  1028 MiB) avg
Allocated non-heap memory:        50MB (    48 MiB) max;     49MB (    47 MiB) avg
Total process virtual memory:   8153MB (  7775 MiB) max;   8085MB (  7711 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
