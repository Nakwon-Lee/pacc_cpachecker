scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-08_1a-drivers--net--wireless--ath--ath9k--ath9k.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7cl5ssb1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 17157: Dead code detected: [((common->debug_mask) & 512) != 0] (CFACreationUtils.addEdgeToCFA, INFO)

line 17157: Dead code detected: [!(((common->debug_mask) & 512) != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 17158: Dead code detected: ath_printk("\017", (struct ath_common const *)common, "Change Interface\n"); (CFACreationUtils.addEdgeToCFA, INFO)

line 17162: Dead code detected: tmp___0 = ath9k_uses_beacons((int )vif->type); (CFACreationUtils.addEdgeToCFA, INFO)

line 17163: Dead code detected: [!(((int)tmp___0) == 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 17168: Dead code detected: vif->type = new_type; (CFACreationUtils.addEdgeToCFA, INFO)

line 17171: Dead code detected: [!(((int)tmp___1) == 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 17176: Dead code detected: ath9k_assign_hw_queues(hw, vif); (CFACreationUtils.addEdgeToCFA, INFO)

line 17242: Dead code detected: sc->ps_enabled = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 17243: Dead code detected: [!(((ah->caps.hw_caps) & 4U) == 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

lines 17244-17249: Dead code detected: ((unsigned int )ah->imask & 256U) == 0U (CFACreationUtils.addEdgeToCFA, INFO)

line 17244: Dead code detected: [!((__CPAchecker_TMP_0 & 256U) == 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 17245: Dead code detected: ah->imask = (enum ath9k_int )((unsigned int )ah->imask | 256U); (CFACreationUtils.addEdgeToCFA, INFO)

line 17250: Dead code detected: ath9k_hw_setrxabort(ah, 1); (CFACreationUtils.addEdgeToCFA, INFO)

line 17254: Dead code detected: [((common->debug_mask) & 2048) != 0] (CFACreationUtils.addEdgeToCFA, INFO)

line 17254: Dead code detected: [!(((common->debug_mask) & 2048) != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 17255: Dead code detected: ath_printk("\017", (struct ath_common const *)common, "PowerSave enabled\n"); (CFACreationUtils.addEdgeToCFA, INFO)

line 17272: Dead code detected: sc->ps_enabled = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 17274: Dead code detected: [!(((ah->caps.hw_caps) & 4U) == 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 17275: Dead code detected: ath9k_hw_setrxabort(ah, 0); (CFACreationUtils.addEdgeToCFA, INFO)

line 17277: Dead code detected: [!((__CPAchecker_TMP_1 & 256U) != 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 17278: Dead code detected: ah->imask = (enum ath9k_int )((unsigned int )ah->imask & 4294967039U); (CFACreationUtils.addEdgeToCFA, INFO)

line 17286: Dead code detected: [((common->debug_mask) & 2048) != 0] (CFACreationUtils.addEdgeToCFA, INFO)

line 17286: Dead code detected: [!(((common->debug_mask) & 2048) != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 17287: Dead code detected: ath_printk("\017", (struct ath_common const *)common, "PowerSave disabled\n"); (CFACreationUtils.addEdgeToCFA, INFO)

line 17991: Dead code detected: spin_lock_bh(& common->cc_lock); (CFACreationUtils.addEdgeToCFA, INFO)

line 17992: Dead code detected: [!(idx == 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 17993: Dead code detected: ath_update_survey_stats(sc); (CFACreationUtils.addEdgeToCFA, INFO)

line 17997: Dead code detected: sband = (hw->wiphy)->bands[0]; (CFACreationUtils.addEdgeToCFA, INFO)

line 17998: Dead code detected: [!(((unsigned long)sband) != ((unsigned long)((struct ieee80211_supported_band *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 17998: Dead code detected: [(sband->n_channels) <= idx] (CFACreationUtils.addEdgeToCFA, INFO)

line 17998: Dead code detected: [!((sband->n_channels) <= idx)] (CFACreationUtils.addEdgeToCFA, INFO)

line 17999: Dead code detected: idx = idx - sband->n_channels; (CFACreationUtils.addEdgeToCFA, INFO)

line 18004: Dead code detected: [((unsigned long)sband) == ((unsigned long)((struct ieee80211_supported_band *)0))] (CFACreationUtils.addEdgeToCFA, INFO)

line 18004: Dead code detected: [!(((unsigned long)sband) == ((unsigned long)((struct ieee80211_supported_band *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 18005: Dead code detected: sband = (hw->wiphy)->bands[1]; (CFACreationUtils.addEdgeToCFA, INFO)

line 18009: Dead code detected: [((unsigned long)sband) == ((unsigned long)((struct ieee80211_supported_band *)0))] (CFACreationUtils.addEdgeToCFA, INFO)

line 18009: Dead code detected: [!(((unsigned long)sband) == ((unsigned long)((struct ieee80211_supported_band *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 18009: Dead code detected: [!((sband->n_channels) <= idx)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18010: Dead code detected: spin_unlock_bh(& common->cc_lock); (CFACreationUtils.addEdgeToCFA, INFO)

line 18015: Dead code detected: chan = sband->channels + (unsigned long )idx; (CFACreationUtils.addEdgeToCFA, INFO)

line 18047: Dead code detected: mutex_lock_nested(& sc->mutex, 0U); (CFACreationUtils.addEdgeToCFA, INFO)

line 18048: Dead code detected: [!(((int)coverage_class) >= 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18049: Dead code detected: ah->coverage_class = (int )coverage_class; (CFACreationUtils.addEdgeToCFA, INFO)

line 18050: Dead code detected: [!(((int)(ah->dynack.enabled)) == 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18057: Dead code detected: ath9k_ps_wakeup(sc); (CFACreationUtils.addEdgeToCFA, INFO)

line 18061: Dead code detected: [(ah->dynack.enabled) == 0] (CFACreationUtils.addEdgeToCFA, INFO)

line 18061: Dead code detected: [!((ah->dynack.enabled) == 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18062: Dead code detected: ath9k_enable_dynack(sc); (CFACreationUtils.addEdgeToCFA, INFO)

line 18066: Dead code detected: mutex_unlock(& sc->mutex); (CFACreationUtils.addEdgeToCFA, INFO)

line 20876: Dead code detected: rfilt = 7U; (CFACreationUtils.addEdgeToCFA, INFO)

line 20877: Dead code detected: [!(((int)(sc->hw->conf.radar_enabled)) == 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20882: Dead code detected: spin_lock_bh(& sc->chan_lock); (CFACreationUtils.addEdgeToCFA, INFO)

line 20883: Dead code detected: [!(((sc->cur_chan->rxfilter) & 256U) != 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20884: Dead code detected: rfilt = rfilt | 128U; (CFACreationUtils.addEdgeToCFA, INFO)

lines 20888-20892: Dead code detected: (int )(sc->sc_ah)->is_monitoring (CFACreationUtils.addEdgeToCFA, INFO)

line 20888: Dead code detected: [!(__CPAchecker_TMP_0 == 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20893: Dead code detected: [((sc->cur_chan->rxfilter) & 32U) != 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 20893: Dead code detected: [!(((sc->cur_chan->rxfilter) & 32U) != 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20893: Dead code detected: [!(((int)(sc->sc_ah->dynack.enabled)) == 0)] (CFACreationUtils.addEdgeToCFA, INFO)

lines 20898-20902: Dead code detected: (unsigned int )(sc->sc_ah)->opmode == 2U (CFACreationUtils.addEdgeToCFA, INFO)

line 20898: Dead code detected: [!(__CPAchecker_TMP_1 == 2U)] (CFACreationUtils.addEdgeToCFA, INFO)

lines 20898-20902: Dead code detected: (int )(sc->cur_chan)->nvifs <= 1 (CFACreationUtils.addEdgeToCFA, INFO)

line 20898: Dead code detected: [!(__CPAchecker_TMP_2 <= 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20898: Dead code detected: [((sc->cur_chan->rxfilter) & 16U) == 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 20898: Dead code detected: [!(((sc->cur_chan->rxfilter) & 16U) == 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20899: Dead code detected: rfilt = rfilt | 512U; (CFACreationUtils.addEdgeToCFA, INFO)

line 20901: Dead code detected: rfilt = rfilt | 16U; (CFACreationUtils.addEdgeToCFA, INFO)

lines 20903-20907: Dead code detected: (unsigned int )(sc->sc_ah)->opmode == 3U (CFACreationUtils.addEdgeToCFA, INFO)

line 20903: Dead code detected: [!(__CPAchecker_TMP_3 == 3U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20903: Dead code detected: [!(((sc->cur_chan->rxfilter) & 128U) != 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20904: Dead code detected: rfilt = rfilt | 16384U; (CFACreationUtils.addEdgeToCFA, INFO)

line 20908: Dead code detected: [((unsigned int)(sc->cur_chandef.width)) != 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 20908: Dead code detected: [!(((unsigned int)(sc->cur_chandef.width)) != 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20909: Dead code detected: rfilt = rfilt | 1024U; (CFACreationUtils.addEdgeToCFA, INFO)

lines 20913-20922: Dead code detected: (int )(sc->cur_chan)->nvifs > 1 (CFACreationUtils.addEdgeToCFA, INFO)

line 20913: Dead code detected: [!(__CPAchecker_TMP_4 > 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20913: Dead code detected: [!(((sc->cur_chan->rxfilter) & 64U) != 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20914: Dead code detected: [(sc->sc_ah->hw_version.macVersion) <= 64U] (CFACreationUtils.addEdgeToCFA, INFO)

line 20914: Dead code detected: [!((sc->sc_ah->hw_version.macVersion) <= 64U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20915: Dead code detected: rfilt = rfilt | 32U; (CFACreationUtils.addEdgeToCFA, INFO)

line 20919: Dead code detected: rfilt = rfilt | 32768U; (CFACreationUtils.addEdgeToCFA, INFO)

line 20923: Dead code detected: [(sc->sc_ah->hw_version.macVersion) == 1024U] (CFACreationUtils.addEdgeToCFA, INFO)

line 20923: Dead code detected: [!((sc->sc_ah->hw_version.macVersion) == 1024U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20923: Dead code detected: [!((sc->sc_ah->hw_version.macVersion) == 1280U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20923: Dead code detected: [!((sc->sc_ah->hw_version.macVersion) == 1536U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20924: Dead code detected: rfilt = rfilt | 1048576U; (CFACreationUtils.addEdgeToCFA, INFO)

line 20928: Dead code detected: tmp___0 = ath9k_is_chanctx_enabled(); (CFACreationUtils.addEdgeToCFA, INFO)

line 20929: Dead code detected: [!(((int)tmp___0) == 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20931: Dead code detected: [!(tmp___1 != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 20932: Dead code detected: rfilt = rfilt | 16U; (CFACreationUtils.addEdgeToCFA, INFO)

line 20939: Dead code detected: spin_unlock_bh(& sc->chan_lock); (CFACreationUtils.addEdgeToCFA, INFO)

line 22171: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22171: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22172: Dead code detected: __asm__ ("incb %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22174: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22174: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22175: Dead code detected: __asm__ ("decb %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22177: Dead code detected: __asm__ ("addb %1, %%gs:%0": "+m" (__preempt_count): "qi" (val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22181: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22181: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22182: Dead code detected: __asm__ ("incw %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22184: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22184: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22185: Dead code detected: __asm__ ("decw %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22187: Dead code detected: __asm__ ("addw %1, %%gs:%0": "+m" (__preempt_count): "ri" (val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22201: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22201: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22202: Dead code detected: __asm__ ("incq %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22204: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22204: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22205: Dead code detected: __asm__ ("decq %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22207: Dead code detected: __asm__ ("addq %1, %%gs:%0": "+m" (__preempt_count): "re" (val)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addb %1, %%gs:%0": "+m" (__preempt_count): "qi" (val));
  }
  goto ldv_6059;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addw %1, %%gs:%0": "+m" (__preempt_count): "ri" (val));
  }
  goto ldv_6059;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addl %1, %%gs:%0": "+m" (__preempt_count): "ri" (val));
  }
  goto ldv_6059;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addq %1, %%gs:%0": "+m" (__preempt_count): "re" (val));
  }
  goto ldv_6059;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 22225: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22225: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22226: Dead code detected: __asm__ ("incb %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22228: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22228: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22229: Dead code detected: __asm__ ("decb %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22231: Dead code detected: __asm__ ("addb %1, %%gs:%0": "+m" (__preempt_count): "qi" (- val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22235: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22235: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22236: Dead code detected: __asm__ ("incw %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22238: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22238: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22239: Dead code detected: __asm__ ("decw %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22241: Dead code detected: __asm__ ("addw %1, %%gs:%0": "+m" (__preempt_count): "ri" (- val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22255: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22255: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22256: Dead code detected: __asm__ ("incq %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22258: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22258: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22259: Dead code detected: __asm__ ("decq %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22261: Dead code detected: __asm__ ("addq %1, %%gs:%0": "+m" (__preempt_count): "re" (- val)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addb %1, %%gs:%0": "+m" (__preempt_count): "qi" (- val));
  }
  goto ldv_6071;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addw %1, %%gs:%0": "+m" (__preempt_count): "ri" (- val));
  }
  goto ldv_6071;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addl %1, %%gs:%0": "+m" (__preempt_count): "ri" (- val));
  }
  goto ldv_6071;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addq %1, %%gs:%0": "+m" (__preempt_count): "re" (- val));
  }
  goto ldv_6071;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 36034: Function pointer *(pd->add_pulse) with type bool (*)(struct dfs_pattern_detector *, struct pulse_event *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27842: Function pointer *(tmp->antdiv_comb_conf_get) with type void (*)(struct ath_hw *, struct ath_hw_antcomb_conf *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27852: Function pointer *(tmp->antdiv_comb_conf_set) with type void (*)(struct ath_hw *, struct ath_hw_antcomb_conf *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 26917: Function pointer *(tmp->calibrate) with type int (*)(struct ath_hw *, struct ath9k_channel *, u8 , bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15507: Function pointer *(tmp->config_pci_powersave) with type void (*)(struct ath_hw *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 22528: Function pointer *(tmp->get_duration) with type int (*)(struct ath_hw *, const void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15519: Function pointer *(tmp->get_isr) with type bool (*)(struct ath_hw *, enum ath9k_int *, u32 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 37389: Function pointer *(tmp->set_bt_ant_diversity) with type void (*)(struct ath_hw *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 36233: Function pointer *(tmp->tx99_set_txpower) with type void (*)(struct ath_hw *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 22538: Function pointer *(tmp->tx99_start) with type void (*)(struct ath_hw *, u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15530: Function pointer *(tmp->proc_txdesc) with type int (*)(struct ath_hw *, void *, struct ath_tx_status *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12709: Function pointer *(sc->dfs_detector->set_dfs_domain) with type bool (*)(struct dfs_pattern_detector *, enum nl80211_dfs_regions ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 9434-9435: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9488: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20085: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20118: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9468: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 35551: Function pointer *(sc->dfs_detector->get_stats) with type struct ath_dfs_pool_stats (*)(struct dfs_pattern_detector *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_36 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_36 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_36 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_36 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_36 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_noirq_36 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_late_36 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_36 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_noirq_36 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_36 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_early_36 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_36 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_36 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_36 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 41079: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19180: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(64UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 41732: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 36757: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 41150: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40833: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_shutdown_35 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 35812: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40994: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40767: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40434: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40362: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40277: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 41666: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 36667: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40904: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40682: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40519: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 35733: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 41081: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 41734: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40835: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function pcim_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 35814: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40996: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40769: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40436: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40364: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 41668: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 36669: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40906: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40592: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40521: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 35735: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_probe_37 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_37 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_34 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_34 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 19184: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(320UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 36761: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 41154: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40438: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40281: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40686: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40594: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 33711: Ignoring function call through function pointer *(common->ops->read): (*(common->ops->read))((void *)ah, (off << 2) + 8192U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ath9k_hw_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 33724: Ignoring function call through function pointer *(common->ops->read): tmp___1 = (*(common->ops->read))((void *)ah, __CPAchecker_TMP_5); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ath_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 36763: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 41156: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 35818: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 41000: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40283: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 36673: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40910: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40688: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40596: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_release_19 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function default_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_15 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_20 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_25 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_16 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_32 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 19190: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_radar_detected to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_29 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_23 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_31 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_24 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_28 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_27 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_30 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_18 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_17 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_26 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 19196: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_init_zalloc(216UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function kstrtou8_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 19198: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19202: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19208: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___13 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19210: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___14 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19212: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___15 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19214: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___16 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19216: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___17 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19228: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___23 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19230: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___24 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19234: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___26 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19236: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___27 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19238: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___28 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19242: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___30 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19246: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___32 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19250: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___34 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19258: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___38 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19266: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___42 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcie_capability_read_word to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 35480: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __might_fault to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_get_tx_rates to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_sta_set_buffered to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_tx_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_free_txskb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_wake_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9468: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_hdrlen to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 9434-9435: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)0L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_mapping_error to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9488: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function device_set_wakeup_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8031 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7448 (93%)
  Because of loop head:            581 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2 (0%)
  Times precision was empty:       7884 (98%)
  Times precision was {false}:     11 (0%)
  Times result was cached:         104 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      32 (0%)
  Times result was 'false':        1 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         6069
  BDD entailment checks:           935
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       337
Number of predicates discovered:          2
Number of abstraction locations:          39
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         147
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.42
Number of irrelevant predicates:          78 (53%)
Number of preds handled by boolean abs:   32 (22%)
  Total number of models for allsat:      32
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  9.081s
  Time for path formula creation:        8.875s
Time for strengthen operator:            0.195s
Time for prec operator:                  0.930s
  Time for abstraction:                  0.426s (Max:     0.061s, Count: 8031)
    Boolean abstraction:                 0.054s
    Solving time:                        0.044s (Max:     0.012s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.011s (Max:     0.007s)
Time for merge operator:                 0.474s
Time for coverage check:                 0.054s
  Time for BDD entailment checks:        0.050s
Total time for SMT solver (w/o itp):     0.047s

Number of path formula cache hits:   34225 (54%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.048s

Total number of created targets for pointer analysis: 4607
   Number of created targets for uf: *unsigned_short_int is 35
   Number of created targets for uf: *(struct_sk_buff)* is 33
   Number of created targets for uf: *signed_int is 3
   Number of created targets for uf: *(char)* is 10
   Number of created targets for uf: *unsigned_char is 145
   Number of created targets for uf: *(struct_list_head)* is 13
   Number of created targets for uf: *(struct_sk_buff_head)* is 3
   Number of created targets for uf: *_Bool is 109
   Number of created targets for uf: *unsigned_long_long_int is 3
   Number of created targets for uf: *char is 4
   Number of created targets for uf: *unsigned_int is 37


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          67 (count: 9071, min: 0, max: 57, avg: 0.01)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.459s
Automaton transfers with branching:                0
Automaton transfer successors:                        57983 (count: 57983, min: 1, max: 1, avg: 1.00) [1 x 57983]

CPA algorithm statistics
------------------------
Number of iterations:            29407
Max size of waitlist:            426
Average size of waitlist:        241
Number of computed successors:   33880
Max successors for one state:    2
Number of times merged:          2567
Number of times stopped:         3440
Number of times breaked:         2

Total time for CPA algorithm:        15.822s (Max:     7.410s)
  Time for choose from waitlist:      0.130s
  Time for precision adjustment:      1.799s
  Time for transfer relation:        11.969s
  Time for merge operator:            0.734s
  Time for stop operator:             0.223s
  Time for adding to reached set:     0.328s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                  79 (count: 2, min: 38, max: 41, avg: 39.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.243s
  Counterexample analysis:                             0.078s (Max:     0.043s, Calls: 2)
    Refinement sat check:                              0.046s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.011s
  ARG update:                                          0.143s

Length of refined path (in blocks):                      77 (count: 2, min: 37, max: 40, avg: 38.50)
Number of affected states:                               75 (count: 2, min: 36, max: 39, avg: 37.50)
Length (states) of path with itp 'true':                  0 (count: 2, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        75 (count: 2, min: 36, max: 39, avg: 37.50)
Length (states) of path with itp 'false':                 2 (count: 2, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              73 (count: 2, min: 35, max: 38, avg: 36.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 15130
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 11383.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      16.172s
Time for refinements:                 0.350s
Average time for refinement:          0.175s
Max time for refinement:              0.186s

Code Coverage
-----------------------------
  Function coverage:      0.185
  Visited lines:          4802
  Total lines:            19185
  Line coverage:          0.250
  Visited conditions:     1140
  Total conditions:       6768
  Condition coverage:     0.168

CPAchecker general statistics
-----------------------------
Number of program locations:     28245
Number of CFA edges:             33190
Number of relevant variables:    5145
Number of functions:             879
Number of loops:                 128
Size of reached set:             7679
  Number of reached locations:   2448 (9%)
    Avg states per location:     3
    Max states per location:     210 (at node N78)
  Number of reached functions:   163 (19%)
  Number of partitions:          7677
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4368 (before line 14822), Function main called from node N4309, stack depth 1 [37500808], stack [main]])
  Number of target states:       0
  Size of final wait list        397

Time for analysis setup:         14.040s
  Time for loading CPAs:          1.418s
  Time for loading parser:        0.656s
  Time for CFA construction:     11.780s
    Time for parsing file(s):     1.962s
    Time for AST to CFA:          4.403s
    Time for CFA sanity check:    1.481s
    Time for post-processing:     3.878s
      Time for var class.:        1.709s
Time for Analysis:               16.172s
CPU time for analysis:           16.180s
Total time for CPAchecker:       30.217s
Total CPU time for CPAchecker:   30.180s
Time for statistics:              0.311s

Time for Garbage Collector:       1.550s (in 46 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                210MB (   200 MiB) max;    123MB (   117 MiB) avg;    218MB (   208 MiB) peak
Used non-heap memory:             48MB (    45 MiB) max;     36MB (    35 MiB) avg;     48MB (    45 MiB) peak
Allocated heap memory:           218MB (   208 MiB) max;    189MB (   181 MiB) avg
Allocated non-heap memory:        49MB (    47 MiB) max;     38MB (    37 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8067MB (  7693 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
