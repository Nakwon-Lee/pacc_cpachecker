scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--tty--n_r3964.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kd4jjl9f/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3291: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3294: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3297: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3233;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3233;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3233;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3233;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4169: Dead code detected: return (-22); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3443: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4959: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4967: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_register_ldisc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_ldisc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_write_room to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_put_char to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kill_pid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3690: Ignoring function call through function pointer *(tty->ops->flush_chars): (*(tty->ops->flush_chars))(tty); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function put_pid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3443: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function tty_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3416: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size(from, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __might_fault to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            31745 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  29720 (94%)
  Because of loop head:            1992 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         33 (0%)
  Times precision was empty:       23407 (74%)
  Times precision was {false}:     306 (1%)
  Times result was cached:         7928 (25%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      104 (0%)
  Times result was 'false':        315 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         35550
  BDD entailment checks:           4576
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          3
Number of abstraction locations:          74
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         8623
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 21.03
Number of irrelevant predicates:          7037 (82%)
Number of preds handled by boolean abs:   107 (1%)
  Total number of models for allsat:      106
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  8.239s
  Time for path formula creation:        7.902s
Time for strengthen operator:            0.406s
Time for prec operator:                  3.986s
  Time for abstraction:                  3.109s (Max:     0.046s, Count: 31745)
    Boolean abstraction:                 0.156s
    Solving time:                        0.466s (Max:     0.015s)
    Model enumeration time:              0.005s
    Time for BDD construction:           0.011s (Max:     0.007s)
Time for merge operator:                 0.674s
Time for coverage check:                 0.099s
  Time for BDD entailment checks:        0.067s
Total time for SMT solver (w/o itp):     0.471s

Number of path formula cache hits:   192885 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.021s

Total number of created targets for pointer analysis: 840
   Number of created targets for uf: *unsigned_char is 15


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         219 (count: 30170, min: 0, max: 73, avg: 0.01)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.763s
  Time for transition matches:                         0.349s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       204509 (count: 204509, min: 1, max: 1, avg: 1.00) [1 x 204509]

CPA algorithm statistics
------------------------
Number of iterations:            129880
Max size of waitlist:            277
Average size of waitlist:        171
Number of computed successors:   154448
Max successors for one state:    2
Number of times merged:          15487
Number of times stopped:         19098
Number of times breaked:         33

Total time for CPA algorithm:        23.346s (Max:     2.336s)
  Time for choose from waitlist:      0.258s
  Time for precision adjustment:      6.162s
  Time for transfer relation:        12.918s
  Time for merge operator:            1.363s
  Time for stop operator:             0.629s
  Time for adding to reached set:     0.591s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   33
Avg. length of target path (in blocks):                1772 (count: 33, min: 30, max: 73, avg: 53.70)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.592s
  Counterexample analysis:                             0.884s (Max:     0.039s, Calls: 33)
    Refinement sat check:                              0.569s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.047s
  Precision update:                                    0.042s
  ARG update:                                          0.556s

Length of refined path (in blocks):                    1699 (count: 33, min: 26, max: 72, avg: 51.48)
Number of affected states:                              898 (count: 33, min: 1, max: 57, avg: 27.21)
Length (states) of path with itp 'true':                768 (count: 33, min: 0, max: 56, avg: 23.27)
Length (states) of path with itp non-trivial itp:       898 (count: 33, min: 1, max: 57, avg: 27.21)
Length (states) of path with itp 'false':                33 (count: 33, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 33, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             865 (count: 33, min: 0, max: 56, avg: 26.21)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                33
Number of successful refinements:     33
Number of failed refinements:         0
Max. size of reached set before ref.: 7250
Max. size of reached set after ref.:  4941
Avg. size of reached set before ref.: 5675.39
Avg. size of reached set after ref.:  1808.64

Total time for CEGAR algorithm:      25.331s
Time for refinements:                 1.936s
Average time for refinement:          0.058s
Max time for refinement:              0.123s

Code Coverage
-----------------------------
  Function coverage:      0.744
  Visited lines:          1467
  Total lines:            1777
  Line coverage:          0.826
  Visited conditions:     356
  Total conditions:       440
  Condition coverage:     0.809

CPAchecker general statistics
-----------------------------
Number of program locations:     2385
Number of CFA edges:             2692
Number of relevant variables:    297
Number of functions:             82
Number of loops:                 15
Size of reached set:             7432
  Number of reached locations:   909 (38%)
    Avg states per location:     8
    Max states per location:     91 (at node N330)
  Number of reached functions:   61 (74%)
  Number of partitions:          7423
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1548 (before line 4985), Function main called from node N1487, stack depth 1 [1e886a5b], stack [main]])
  Number of target states:       0
  Size of final wait list        268

Time for analysis setup:          4.922s
  Time for loading CPAs:          0.902s
  Time for loading parser:        0.681s
  Time for CFA construction:      3.179s
    Time for parsing file(s):     0.912s
    Time for AST to CFA:          1.175s
    Time for CFA sanity check:    0.203s
    Time for post-processing:     0.725s
      Time for var class.:        0.335s
Time for Analysis:               25.331s
CPU time for analysis:           25.320s
Total time for CPAchecker:       30.257s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.299s

Time for Garbage Collector:       1.026s (in 57 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                105MB (   100 MiB) max;     56MB (    53 MiB) avg;    111MB (   105 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
