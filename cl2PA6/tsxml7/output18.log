scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--tty--n_r3964.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_e5fdg3ub/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3291: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3294: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3297: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3233;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3233;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3233;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3233;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4169: Dead code detected: return (-22); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3443: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4959: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4967: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_register_ldisc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_ldisc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_write_room to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_put_char to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kill_pid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3690: Ignoring function call through function pointer *(tty->ops->flush_chars): (*(tty->ops->flush_chars))(tty); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function put_pid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3443: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3416: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size(from, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __might_fault to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            45643 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  42387 (93%)
  Because of loop head:            3222 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         34 (0%)
  Times precision was empty:       32488 (71%)
  Times precision was {false}:     257 (1%)
  Times result was cached:         12697 (28%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      201 (0%)
  Times result was 'false':        913 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         55774
  BDD entailment checks:           5710
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          4
Number of abstraction locations:          54
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         17082
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 37.30
Number of irrelevant predicates:          10226 (60%)
Number of preds handled by boolean abs:   232 (1%)
  Total number of models for allsat:      207
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.03

Time for post operator:                  5.946s
  Time for path formula creation:        5.569s
Time for strengthen operator:            0.408s
Time for prec operator:                  4.893s
  Time for abstraction:                  3.926s (Max:     0.156s, Count: 45643)
    Boolean abstraction:                 0.277s
    Solving time:                        0.335s (Max:     0.013s)
    Model enumeration time:              0.012s
    Time for BDD construction:           0.021s (Max:     0.007s)
Time for merge operator:                 0.488s
Time for coverage check:                 0.109s
  Time for BDD entailment checks:        0.085s
Total time for SMT solver (w/o itp):     0.347s

Number of path formula cache hits:   335471 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.469s

Total number of created targets for pointer analysis: 560
   Number of created targets for uf: *unsigned_char is 31


Number of BDD nodes:                               220
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         436 (count: 40807, min: 0, max: 68, avg: 0.01)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.791s
  Time for transition matches:                         0.370s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       301257 (count: 301257, min: 1, max: 1, avg: 1.00) [1 x 301257]

CPA algorithm statistics
------------------------
Number of iterations:            190951
Max size of waitlist:            454
Average size of waitlist:        208
Number of computed successors:   229920
Max successors for one state:    2
Number of times merged:          25032
Number of times stopped:         28680
Number of times breaked:         34

Total time for CPA algorithm:        23.027s (Max:     1.636s)
  Time for choose from waitlist:      0.292s
  Time for precision adjustment:      7.860s
  Time for transfer relation:        11.087s
  Time for merge operator:            1.034s
  Time for stop operator:             0.624s
  Time for adding to reached set:     0.691s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   34
Avg. length of target path (in blocks):                1304 (count: 34, min: 30, max: 46, avg: 38.35)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.236s
  Counterexample analysis:                             0.522s (Max:     0.037s, Calls: 34)
    Refinement sat check:                              0.320s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.042s
  Precision update:                                    0.025s
  ARG update:                                          0.626s

Length of refined path (in blocks):                    1147 (count: 34, min: 26, max: 45, avg: 33.74)
Number of affected states:                              537 (count: 34, min: 1, max: 44, avg: 15.79)
Length (states) of path with itp 'true':                576 (count: 34, min: 0, max: 27, avg: 16.94)
Length (states) of path with itp non-trivial itp:       537 (count: 34, min: 1, max: 44, avg: 15.79)
Length (states) of path with itp 'false':                34 (count: 34, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 34, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             503 (count: 34, min: 0, max: 43, avg: 14.79)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                34
Number of successful refinements:     34
Number of failed refinements:         0
Max. size of reached set before ref.: 12049
Max. size of reached set after ref.:  6306
Avg. size of reached set before ref.: 7229.44
Avg. size of reached set after ref.:  1442.18

Total time for CEGAR algorithm:      24.645s
Time for refinements:                 1.588s
Average time for refinement:          0.046s
Max time for refinement:              0.107s

Code Coverage
-----------------------------
  Function coverage:      0.610
  Visited lines:          1183
  Total lines:            1777
  Line coverage:          0.666
  Visited conditions:     258
  Total conditions:       440
  Condition coverage:     0.586

CPAchecker general statistics
-----------------------------
Number of program locations:     2385
Number of CFA edges:             2692
Number of relevant variables:    297
Number of functions:             82
Number of loops:                 15
Size of reached set:             3560
  Number of reached locations:   599 (25%)
    Avg states per location:     5
    Max states per location:     54 (at node N330)
  Number of reached functions:   50 (61%)
  Number of partitions:          3547
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1548 (before line 4985), Function main called from node N1487, stack depth 1 [65f87a2c], stack [main]])
  Number of target states:       0
  Size of final wait list        177

Time for analysis setup:          5.126s
  Time for loading CPAs:          1.060s
  Time for loading parser:        0.652s
  Time for CFA construction:      3.244s
    Time for parsing file(s):     0.936s
    Time for AST to CFA:          1.122s
    Time for CFA sanity check:    0.235s
    Time for post-processing:     0.787s
      Time for var class.:        0.342s
Time for Analysis:               24.645s
CPU time for analysis:           24.640s
Total time for CPAchecker:       29.776s
Total CPU time for CPAchecker:   29.770s
Time for statistics:              0.154s

Time for Garbage Collector:       1.372s (in 77 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                125MB (   119 MiB) max;     56MB (    54 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    32 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
