scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--tty--n_r3964.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_iee5paks/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3291: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3294: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3297: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3233;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3233;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3233;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3233;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4169: Dead code detected: return (-22); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3443: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4959: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4967: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_ldisc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_register_ldisc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_write_room to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3690: Ignoring function call through function pointer *(tty->ops->flush_chars): (*(tty->ops->flush_chars))(tty); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function tty_put_char to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_pid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kill_pid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3443: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            22540 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20732 (92%)
  Because of loop head:            1761 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         47 (0%)
  Times precision was empty:       17486 (78%)
  Times precision was {false}:     377 (2%)
  Times result was cached:         4430 (20%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      247 (1%)
  Times result was 'false':        467 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         31105
  BDD entailment checks:           4117
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          4
Number of abstraction locations:          53
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         6173
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 9.89
Number of irrelevant predicates:          3993 (65%)
Number of preds handled by boolean abs:   336 (5%)
  Total number of models for allsat:      260
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.05

Time for post operator:                  9.324s
  Time for path formula creation:        9.084s
Time for strengthen operator:            0.332s
Time for prec operator:                  3.496s
  Time for abstraction:                  2.768s (Max:     0.018s, Count: 22540)
    Boolean abstraction:                 0.297s
    Solving time:                        0.410s (Max:     0.014s)
    Model enumeration time:              0.022s
    Time for BDD construction:           0.017s (Max:     0.007s)
Time for merge operator:                 0.723s
Time for coverage check:                 0.078s
  Time for BDD entailment checks:        0.049s
Total time for SMT solver (w/o itp):     0.432s

Number of path formula cache hits:   106813 (62%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.340s

Total number of created targets for pointer analysis: 892
   Number of created targets for uf: *unsigned_char is 41


Number of BDD nodes:                               228
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         463 (count: 25072, min: 0, max: 90, avg: 0.02)
Time for BDD node cleanup:                             0.027s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.647s
  Time for transition matches:                         0.236s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       153163 (count: 153163, min: 1, max: 1, avg: 1.00) [1 x 153163]

CPA algorithm statistics
------------------------
Number of iterations:            98634
Max size of waitlist:            129
Average size of waitlist:        68
Number of computed successors:   118426
Max successors for one state:    2
Number of times merged:          13494
Number of times stopped:         16538
Number of times breaked:         47

Total time for CPA algorithm:        22.338s (Max:     2.791s)
  Time for choose from waitlist:      0.226s
  Time for precision adjustment:      5.353s
  Time for transfer relation:        13.146s
  Time for merge operator:            1.281s
  Time for stop operator:             0.446s
  Time for adding to reached set:     0.596s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   47
Avg. length of target path (in blocks):                3325 (count: 47, min: 48, max: 90, avg: 70.74)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.045s
  Counterexample analysis:                             1.448s (Max:     0.054s, Calls: 47)
    Refinement sat check:                              0.896s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.058s
  Precision update:                                    0.061s
  ARG update:                                          0.405s

Length of refined path (in blocks):                    2296 (count: 47, min: 26, max: 89, avg: 48.85)
Number of affected states:                              559 (count: 47, min: 1, max: 53, avg: 11.89)
Length (states) of path with itp 'true':               1690 (count: 47, min: 0, max: 79, avg: 35.96)
Length (states) of path with itp non-trivial itp:       559 (count: 47, min: 1, max: 53, avg: 11.89)
Length (states) of path with itp 'false':                47 (count: 47, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 47, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             512 (count: 47, min: 0, max: 52, avg: 10.89)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                47
Number of successful refinements:     47
Number of failed refinements:         0
Max. size of reached set before ref.: 4264
Max. size of reached set after ref.:  4147
Avg. size of reached set before ref.: 3255.51
Avg. size of reached set after ref.:  1162.38

Total time for CEGAR algorithm:      24.783s
Time for refinements:                 2.398s
Average time for refinement:          0.051s
Max time for refinement:              0.154s

Code Coverage
-----------------------------
  Function coverage:      0.683
  Visited lines:          1374
  Total lines:            1777
  Line coverage:          0.773
  Visited conditions:     326
  Total conditions:       440
  Condition coverage:     0.741

CPAchecker general statistics
-----------------------------
Number of program locations:     2385
Number of CFA edges:             2692
Number of relevant variables:    297
Number of functions:             82
Number of loops:                 15
Size of reached set:             3043
  Number of reached locations:   789 (33%)
    Avg states per location:     3
    Max states per location:     49 (at node N330)
  Number of reached functions:   56 (68%)
  Number of partitions:          3030
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1548 (before line 4985), Function main called from node N1487, stack depth 1 [210386e0], stack [main]])
  Number of target states:       0
  Size of final wait list        121

Time for analysis setup:          5.460s
  Time for loading CPAs:          1.054s
  Time for loading parser:        0.782s
  Time for CFA construction:      3.444s
    Time for parsing file(s):     1.103s
    Time for AST to CFA:          1.105s
    Time for CFA sanity check:    0.266s
    Time for post-processing:     0.805s
      Time for var class.:        0.341s
Time for Analysis:               24.783s
CPU time for analysis:           24.780s
Total time for CPAchecker:       30.249s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.164s

Time for Garbage Collector:       0.784s (in 50 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 84MB (    80 MiB) max;     51MB (    48 MiB) avg;     89MB (    85 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    32 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
