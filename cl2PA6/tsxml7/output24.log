scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--tty--n_r3964.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6il53wn1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3291: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3294: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3297: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3233;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3233;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3233;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3233;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4169: Dead code detected: return (-22); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3443: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4959: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4967: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_register_ldisc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_ldisc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_write_room to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_put_char to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3690: Ignoring function call through function pointer *(tty->ops->flush_chars): (*(tty->ops->flush_chars))(tty); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function put_pid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kill_pid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            23509 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21777 (93%)
  Because of loop head:            1701 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         31 (0%)
  Times precision was empty:       17174 (73%)
  Times precision was {false}:     366 (2%)
  Times result was cached:         5863 (25%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      106 (0%)
  Times result was 'false':        273 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         34958
  BDD entailment checks:           4136
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          3
Number of abstraction locations:          82
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         6650
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 14.09
Number of irrelevant predicates:          5107 (77%)
Number of preds handled by boolean abs:   109 (2%)
  Total number of models for allsat:      109
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  9.652s
  Time for path formula creation:        9.430s
Time for strengthen operator:            0.392s
Time for prec operator:                  3.515s
  Time for abstraction:                  2.880s (Max:     0.032s, Count: 23509)
    Boolean abstraction:                 0.222s
    Solving time:                        0.485s (Max:     0.015s)
    Model enumeration time:              0.023s
    Time for BDD construction:           0.008s (Max:     0.007s)
Time for merge operator:                 0.941s
Time for coverage check:                 0.090s
  Time for BDD entailment checks:        0.066s
Total time for SMT solver (w/o itp):     0.508s

Number of path formula cache hits:   117582 (62%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.679s

Total number of created targets for pointer analysis: 990
   Number of created targets for uf: *unsigned_char is 17


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         223 (count: 23807, min: 0, max: 93, avg: 0.01)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.780s
  Time for transition matches:                         0.435s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       166664 (count: 166664, min: 1, max: 1, avg: 1.00) [1 x 166664]

CPA algorithm statistics
------------------------
Number of iterations:            105312
Max size of waitlist:            152
Average size of waitlist:        100
Number of computed successors:   126804
Max successors for one state:    2
Number of times merged:          15411
Number of times stopped:         18526
Number of times breaked:         31

Total time for CPA algorithm:        23.393s (Max:     2.902s)
  Time for choose from waitlist:      0.193s
  Time for precision adjustment:      5.306s
  Time for transfer relation:        14.071s
  Time for merge operator:            1.573s
  Time for stop operator:             0.494s
  Time for adding to reached set:     0.480s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   31
Avg. length of target path (in blocks):                1903 (count: 31, min: 41, max: 80, avg: 61.39)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.535s
  Counterexample analysis:                             0.898s (Max:     0.045s, Calls: 31)
    Refinement sat check:                              0.538s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.056s
  Precision update:                                    0.037s
  ARG update:                                          0.511s

Length of refined path (in blocks):                    1793 (count: 31, min: 26, max: 79, avg: 57.84)
Number of affected states:                             1074 (count: 31, min: 1, max: 64, avg: 34.65)
Length (states) of path with itp 'true':                688 (count: 31, min: 0, max: 56, avg: 22.19)
Length (states) of path with itp non-trivial itp:      1074 (count: 31, min: 1, max: 64, avg: 34.65)
Length (states) of path with itp 'false':                31 (count: 31, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 31, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1043 (count: 31, min: 0, max: 63, avg: 33.65)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 4829
Max. size of reached set after ref.:  1851
Avg. size of reached set before ref.: 4093.90
Avg. size of reached set after ref.:  669.55

Total time for CEGAR algorithm:      25.218s
Time for refinements:                 1.785s
Average time for refinement:          0.057s
Max time for refinement:              0.135s

Code Coverage
-----------------------------
  Function coverage:      0.610
  Visited lines:          1249
  Total lines:            1777
  Line coverage:          0.703
  Visited conditions:     282
  Total conditions:       440
  Condition coverage:     0.641

CPAchecker general statistics
-----------------------------
Number of program locations:     2385
Number of CFA edges:             2692
Number of relevant variables:    297
Number of functions:             82
Number of loops:                 15
Size of reached set:             1851
  Number of reached locations:   649 (27%)
    Avg states per location:     2
    Max states per location:     20 (at node N79)
  Number of reached functions:   50 (61%)
  Number of partitions:          1845
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1548 (before line 4985), Function main called from node N1487, stack depth 1 [1e886a5b], stack [main]])
  Number of target states:       0
  Size of final wait list        95

Time for analysis setup:          5.087s
  Time for loading CPAs:          0.980s
  Time for loading parser:        0.685s
  Time for CFA construction:      3.266s
    Time for parsing file(s):     0.946s
    Time for AST to CFA:          1.188s
    Time for CFA sanity check:    0.207s
    Time for post-processing:     0.749s
      Time for var class.:        0.335s
Time for Analysis:               25.218s
CPU time for analysis:           25.220s
Total time for CPAchecker:       30.309s
Total CPU time for CPAchecker:   30.300s
Time for statistics:              0.135s

Time for Garbage Collector:       0.878s (in 52 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 91MB (    87 MiB) max;     53MB (    50 MiB) avg;     96MB (    91 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    40 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
