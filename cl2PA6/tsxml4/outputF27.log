scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-08_1a-drivers--media--i2c--cx25840--cx25840.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hf3x9_wh/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4306: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4309: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4312: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4593: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13439: Function pointer *(sd->v4l2_dev->notify) with type void (*)(struct v4l2_subdev *, unsigned int, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 11167: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11171: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11179: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_init_zalloc(80UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11185: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_init_zalloc(68UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11187: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_init_zalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11191: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___11 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11193: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_init_zalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11197: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___14 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_g_ctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_s_ctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_querymenu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_try_ext_ctrls to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_s_ext_ctrls to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_g_ext_ctrls to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_queryctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14914: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4593: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_probe_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10999: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11001: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function __kfifo_out to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_out_r to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13439: Ignoring function call through function pointer *(sd->v4l2_dev->notify): (*(sd->v4l2_dev->notify))(sd, notification, arg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __kfifo_in to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_in_r to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_i2c_subdev_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function media_entity_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_device_unregister_subdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_handler_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_handler_log_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            449094 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  430585 (96%)
  Because of loop head:            18135 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         374 (0%)
  Times precision was empty:       194199 (43%)
  Times precision was {false}:     2513 (1%)
  Times result was cached:         249334 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3048 (1%)
  Times result was 'false':        7721 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         477744
  BDD entailment checks:           94046
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       262
Number of predicates discovered:          17
Number of abstraction locations:          361
Max number of predicates per location:    13
Avg number of predicates per location:    2
Total predicates per abstraction:         763382
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 137.27
Number of irrelevant predicates:          483863 (63%)
Number of preds handled by boolean abs:   6766 (1%)
  Total number of models for allsat:      71401
  Max number of models for allsat:        2304
  Avg number of models for allsat:        23.43

Time for post operator:                152.567s
  Time for path formula creation:      150.857s
Time for strengthen operator:            3.522s
Time for prec operator:                371.054s
  Time for abstraction:                364.617s (Max:     5.353s, Count: 449094)
    Boolean abstraction:                84.187s
    Solving time:                      259.621s (Max:     5.263s)
    Model enumeration time:             28.726s
    Time for BDD construction:           1.841s (Max:     0.064s)
Time for merge operator:                 4.341s
Time for coverage check:                 0.156s
  Time for BDD entailment checks:        0.110s
Total time for SMT solver (w/o itp):   288.347s

Number of path formula cache hits:   3387466 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   133.367s

Total number of created targets for pointer analysis: 4099958
   Number of created targets for uf: *unsigned_short_int is 185
   Number of created targets for uf: *signed_int is 6
   Number of created targets for uf: *unsigned_char is 15475
   Number of created targets for uf: *signed_long_int is 7
   Number of created targets for uf: *(unsigned_char)* is 1733
   Number of created targets for uf: *_Bool is 110
   Number of created targets for uf: *unsigned_long_long_int is 113
   Number of created targets for uf: *unsigned_int is 90
   Number of created targets for uf: *enum_v4l2_subdev_ir_mode is 16


Number of BDD nodes:                               37532
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7091 (count: 321770, min: 0, max: 222, avg: 0.02)
Time for BDD node cleanup:                             0.071s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.087s
  Time for transition matches:                         2.673s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                      3869543 (count: 3869543, min: 1, max: 1, avg: 1.00) [1 x 3869543]

CPA algorithm statistics
------------------------
Number of iterations:            1737222
Max size of waitlist:            486
Average size of waitlist:        246
Number of computed successors:   2045412
Max successors for one state:    2
Number of times merged:          191849
Number of times stopped:         223672
Number of times breaked:         374

Total time for CPA algorithm:       861.855s (Max:    13.702s)
  Time for choose from waitlist:      0.839s
  Time for precision adjustment:    383.984s
  Time for transfer relation:       458.899s
  Time for merge operator:            6.771s
  Time for stop operator:             2.479s
  Time for adding to reached set:     3.613s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   374
Avg. length of target path (in blocks):               52126 (count: 374, min: 74, max: 195, avg: 139.37)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  24.601s
  Counterexample analysis:                            21.047s (Max:     0.399s, Calls: 374)
    Refinement sat check:                             12.474s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.026s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.184s
  Precision update:                                    0.232s
  ARG update:                                          2.749s

Length of refined path (in blocks):                   48367 (count: 374, min: 70, max: 182, avg: 129.32)
Number of affected states:                            18351 (count: 374, min: 1, max: 174, avg: 49.07)
Length (states) of path with itp 'true':              29642 (count: 374, min: 0, max: 158, avg: 79.26)
Length (states) of path with itp non-trivial itp:     18351 (count: 374, min: 1, max: 174, avg: 49.07)
Length (states) of path with itp 'false':               374 (count: 374, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 374, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           17977 (count: 374, min: 0, max: 173, avg: 48.07)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                374
Number of successful refinements:     374
Number of failed refinements:         0
Max. size of reached set before ref.: 17646
Max. size of reached set after ref.:  15149
Avg. size of reached set before ref.: 10896.61
Avg. size of reached set after ref.:  6089.24

Total time for CEGAR algorithm:     891.200s
Time for refinements:                27.903s
Average time for refinement:          0.074s
Max time for refinement:              0.411s

Code Coverage
-----------------------------
  Function coverage:      0.523
  Visited lines:          3605
  Total lines:            8648
  Line coverage:          0.417
  Visited conditions:     854
  Total conditions:       2018
  Condition coverage:     0.423

CPAchecker general statistics
-----------------------------
Number of program locations:     10728
Number of CFA edges:             15069
Number of relevant variables:    1027
Number of functions:             216
Number of loops:                 20
Size of reached set:             16063
  Number of reached locations:   2267 (21%)
    Avg states per location:     7
    Max states per location:     199 (at node N237)
  Number of reached functions:   113 (52%)
  Number of partitions:          15977
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N6806 (before line 11236), Function main called from node N6677, stack depth 1 [24668b5b], stack [main]])
  Number of target states:       0
  Size of final wait list        279

Time for analysis setup:          9.086s
  Time for loading CPAs:          1.118s
  Time for loading parser:        0.735s
  Time for CFA construction:      7.068s
    Time for parsing file(s):     1.252s
    Time for AST to CFA:          2.184s
    Time for CFA sanity check:    1.594s
    Time for post-processing:     1.920s
      Time for var class.:        0.873s
Time for Analysis:              891.200s
CPU time for analysis:          891.120s
Total time for CPAchecker:      900.291s
Total CPU time for CPAchecker:  900.200s
Time for statistics:              0.428s

Time for Garbage Collector:      21.023s (in 520 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                846MB (   806 MiB) max;    420MB (   401 MiB) avg;    854MB (   814 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1161MB (  1107 MiB) max;    649MB (   619 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8385MB (  7996 MiB) max;   8264MB (  7881 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
