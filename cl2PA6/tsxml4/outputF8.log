scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-08_1a-drivers--media--i2c--cx25840--cx25840.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yghstj1o/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4306: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4309: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4312: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4593: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13439: Function pointer *(sd->v4l2_dev->notify) with type void (*)(struct v4l2_subdev *, unsigned int, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 11167: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11171: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11179: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_init_zalloc(80UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11185: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_init_zalloc(68UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11187: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_init_zalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11191: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___11 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11193: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_init_zalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11197: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___14 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_g_ctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_s_ctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_querymenu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_try_ext_ctrls to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_s_ext_ctrls to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_g_ext_ctrls to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_queryctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14914: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_probe_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10999: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11001: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4593: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_i2c_subdev_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function media_entity_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_handler_init_class to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_new_std to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_handler_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_cluster to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_handler_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14834: Ignoring function call through function pointer *(sd->ops->ir->rx_s_parameters): (*(sd->ops->ir->rx_s_parameters))(sd, &default_params); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14846: Ignoring function call through function pointer *(sd->ops->ir->tx_s_parameters): (*(sd->ops->ir->tx_s_parameters))(sd, &default_params); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function v4l2_ctrl_handler_log_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            612201 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  550883 (90%)
  Because of loop head:            61071 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         247 (0%)
  Times precision was empty:       219847 (36%)
  Times precision was {false}:     3250 (1%)
  Times result was cached:         383263 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5841 (1%)
  Times result was 'false':        9479 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         613629
  BDD entailment checks:           147171
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       262
Number of predicates discovered:          18
Number of abstraction locations:          521
Max number of predicates per location:    13
Avg number of predicates per location:    1
Total predicates per abstraction:         1029165
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 113.21
Number of irrelevant predicates:          582565 (57%)
Number of preds handled by boolean abs:   11648 (1%)
  Total number of models for allsat:      104862
  Max number of models for allsat:        2304
  Avg number of models for allsat:        17.95

Time for post operator:                 95.694s
  Time for path formula creation:       93.671s
Time for strengthen operator:            4.149s
Time for prec operator:                153.538s
  Time for abstraction:                142.497s (Max:     4.961s, Count: 612201)
    Boolean abstraction:                73.188s
    Solving time:                       33.212s (Max:     4.885s)
    Model enumeration time:             39.011s
    Time for BDD construction:           2.752s (Max:     0.068s)
Time for merge operator:                 5.313s
Time for coverage check:                 0.264s
  Time for BDD entailment checks:        0.184s
Total time for SMT solver (w/o itp):    72.223s

Number of path formula cache hits:   3630512 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    70.775s

Total number of created targets for pointer analysis: 807445
   Number of created targets for uf: *unsigned_short_int is 31701
   Number of created targets for uf: *signed_int is 839
   Number of created targets for uf: *unsigned_char is 311
   Number of created targets for uf: *(unsigned_char)* is 1290
   Number of created targets for uf: *_Bool is 225
   Number of created targets for uf: *unsigned_long_long_int is 10289
   Number of created targets for uf: *unsigned_int is 227


Number of BDD nodes:                               41829
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       12531 (count: 421794, min: 0, max: 1550, avg: 0.03)
Time for BDD node cleanup:                             0.087s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.413s
  Time for transition matches:                         3.703s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                      4128777 (count: 4128777, min: 1, max: 1, avg: 1.00) [1 x 4128777]

CPA algorithm statistics
------------------------
Number of iterations:            2238213
Max size of waitlist:            1232
Average size of waitlist:        349
Number of computed successors:   2633212
Max successors for one state:    2
Number of times merged:          233229
Number of times stopped:         302191
Number of times breaked:         247

Total time for CPA algorithm:       870.687s (Max:    83.559s)
  Time for choose from waitlist:      1.517s
  Time for precision adjustment:    171.955s
  Time for transfer relation:       673.134s
  Time for merge operator:            8.556s
  Time for stop operator:             3.410s
  Time for adding to reached set:     4.754s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   247
Avg. length of target path (in blocks):               34561 (count: 247, min: 74, max: 211, avg: 139.92)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  19.745s
  Counterexample analysis:                            14.006s (Max:     0.428s, Calls: 247)
    Refinement sat check:                              8.074s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.028s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.188s
  Precision update:                                    0.228s
  ARG update:                                          5.041s

Length of refined path (in blocks):                   33244 (count: 247, min: 70, max: 210, avg: 134.59)
Number of affected states:                            23041 (count: 247, min: 1, max: 209, avg: 93.28)
Length (states) of path with itp 'true':               9956 (count: 247, min: 0, max: 177, avg: 40.31)
Length (states) of path with itp non-trivial itp:     23041 (count: 247, min: 1, max: 209, avg: 93.28)
Length (states) of path with itp 'false':               247 (count: 247, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 247, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           22794 (count: 247, min: 0, max: 208, avg: 92.28)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                247
Number of successful refinements:     247
Number of failed refinements:         0
Max. size of reached set before ref.: 77587
Max. size of reached set after ref.:  11621
Avg. size of reached set before ref.: 9925.24
Avg. size of reached set after ref.:  712.68

Total time for CEGAR algorithm:     892.258s
Time for refinements:                21.409s
Average time for refinement:          0.086s
Max time for refinement:              1.051s

Code Coverage
-----------------------------
  Function coverage:      0.542
  Visited lines:          4277
  Total lines:            8648
  Line coverage:          0.495
  Visited conditions:     1154
  Total conditions:       2018
  Condition coverage:     0.572

CPAchecker general statistics
-----------------------------
Number of program locations:     10728
Number of CFA edges:             15069
Number of relevant variables:    1027
Number of functions:             216
Number of loops:                 20
Size of reached set:             46040
  Number of reached locations:   2919 (27%)
    Avg states per location:     15
    Max states per location:     686 (at node N238)
  Number of reached functions:   117 (54%)
  Number of partitions:          45735
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N6806 (before line 11236), Function main called from node N6677, stack depth 1 [320770d7], stack [main]])
  Number of target states:       0
  Size of final wait list        1015

Time for analysis setup:          8.044s
  Time for loading CPAs:          1.058s
  Time for loading parser:        0.655s
  Time for CFA construction:      6.172s
    Time for parsing file(s):     1.241s
    Time for AST to CFA:          2.186s
    Time for CFA sanity check:    0.778s
    Time for post-processing:     1.747s
      Time for var class.:        0.838s
Time for Analysis:              892.258s
CPU time for analysis:          892.200s
Total time for CPAchecker:      900.307s
Total CPU time for CPAchecker:  900.220s
Time for statistics:              0.817s

Time for Garbage Collector:      22.211s (in 425 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1007MB (   960 MiB) max;    547MB (   522 MiB) avg;   1021MB (   973 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1256MB (  1198 MiB) max;    836MB (   797 MiB) avg
Allocated non-heap memory:        44MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8219MB (  7838 MiB) max;   8172MB (  7793 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
