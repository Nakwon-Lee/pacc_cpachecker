scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-08_1a-drivers--media--i2c--cx25840--cx25840.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_z4qcfrg1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4306: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4309: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4312: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4593: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13439: Function pointer *(sd->v4l2_dev->notify) with type void (*)(struct v4l2_subdev *, unsigned int, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 11167: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11171: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11179: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_init_zalloc(80UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11185: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_init_zalloc(68UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11187: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_init_zalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11191: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___11 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11193: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_init_zalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11197: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___14 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_g_ctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_s_ctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_querymenu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_try_ext_ctrls to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_s_ext_ctrls to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_g_ext_ctrls to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_queryctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14914: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4593: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_probe_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            13350 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13081 (98%)
  Because of loop head:            257 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (0%)
  Times precision was empty:       12355 (93%)
  Times precision was {false}:     65 (0%)
  Times result was cached:         804 (6%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      126 (1%)
  Times result was 'false':        46 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         10757
  BDD entailment checks:           1307
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       262
Number of predicates discovered:          4
Number of abstraction locations:          52
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         1317
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 6.90
Number of irrelevant predicates:          705 (54%)
Number of preds handled by boolean abs:   168 (13%)
  Total number of models for allsat:      134
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.06

Time for post operator:                 12.433s
  Time for path formula creation:       12.278s
Time for strengthen operator:            0.204s
Time for prec operator:                  2.030s
  Time for abstraction:                  1.460s (Max:     0.041s, Count: 13350)
    Boolean abstraction:                 0.332s
    Solving time:                        0.307s (Max:     0.018s)
    Model enumeration time:              0.014s
    Time for BDD construction:           0.039s (Max:     0.015s)
Time for merge operator:                 0.318s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.022s
Total time for SMT solver (w/o itp):     0.321s

Number of path formula cache hits:   68356 (60%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.457s

Total number of created targets for pointer analysis: 89130
   Number of created targets for uf: *unsigned_char is 331
   Number of created targets for uf: *signed_long_int is 31
   Number of created targets for uf: *(unsigned_char)* is 61
   Number of created targets for uf: *_Bool is 16
   Number of created targets for uf: *unsigned_long_long_int is 16


Number of BDD nodes:                               216
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         282 (count: 14764, min: 0, max: 123, avg: 0.02)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.611s
  Time for transition matches:                         0.272s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       102986 (count: 102986, min: 1, max: 1, avg: 1.00) [1 x 102986]

CPA algorithm statistics
------------------------
Number of iterations:            48954
Max size of waitlist:            284
Average size of waitlist:        151
Number of computed successors:   57000
Max successors for one state:    2
Number of times merged:          4725
Number of times stopped:         5754
Number of times breaked:         12

Total time for CPA algorithm:        21.316s (Max:     3.371s)
  Time for choose from waitlist:      0.189s
  Time for precision adjustment:      3.231s
  Time for transfer relation:        15.732s
  Time for merge operator:            0.613s
  Time for stop operator:             0.269s
  Time for adding to reached set:     0.397s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                 955 (count: 12, min: 74, max: 82, avg: 79.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.856s
  Counterexample analysis:                             0.475s (Max:     0.050s, Calls: 12)
    Refinement sat check:                              0.287s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.053s
  Precision update:                                    0.015s
  ARG update:                                          0.276s

Length of refined path (in blocks):                     806 (count: 11, min: 70, max: 76, avg: 73.27)
Number of affected states:                              325 (count: 11, min: 1, max: 75, avg: 29.55)
Length (states) of path with itp 'true':                470 (count: 11, min: 0, max: 68, avg: 42.73)
Length (states) of path with itp non-trivial itp:       325 (count: 11, min: 1, max: 75, avg: 29.55)
Length (states) of path with itp 'false':                11 (count: 11, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 11, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             314 (count: 11, min: 0, max: 74, avg: 28.55)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 6333
Max. size of reached set after ref.:  197
Avg. size of reached set before ref.: 4381.42
Avg. size of reached set after ref.:  125.09

Total time for CEGAR algorithm:      22.312s
Time for refinements:                 0.996s
Average time for refinement:          0.083s
Max time for refinement:              0.139s

Code Coverage
-----------------------------
  Function coverage:      0.338
  Visited lines:          2240
  Total lines:            8648
  Line coverage:          0.259
  Visited conditions:     398
  Total conditions:       2018
  Condition coverage:     0.197

CPAchecker general statistics
-----------------------------
Number of program locations:     10728
Number of CFA edges:             15069
Number of relevant variables:    1027
Number of functions:             216
Number of loops:                 20
Size of reached set:             6333
  Number of reached locations:   920 (9%)
    Avg states per location:     6
    Max states per location:     201 (at node N157)
  Number of reached functions:   73 (34%)
  Number of partitions:          6322
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N6806 (before line 11236), Function main called from node N6677, stack depth 1 [320770d7], stack [main]])
  Number of target states:       1
  Size of final wait list        280

Time for analysis setup:          7.969s
  Time for loading CPAs:          1.124s
  Time for loading parser:        0.641s
  Time for CFA construction:      6.047s
    Time for parsing file(s):     1.280s
    Time for AST to CFA:          2.142s
    Time for CFA sanity check:    0.818s
    Time for post-processing:     1.592s
      Time for var class.:        0.875s
Time for Analysis:               22.312s
CPU time for analysis:           22.310s
Total time for CPAchecker:       30.288s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.251s

Time for Garbage Collector:       0.944s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                106MB (   101 MiB) max;     63MB (    60 MiB) avg;    110MB (   105 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     34MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
