scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-08_1a-drivers--media--i2c--cx25840--cx25840.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sky2y1bw/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4306: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4309: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4312: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4593: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13439: Function pointer *(sd->v4l2_dev->notify) with type void (*)(struct v4l2_subdev *, unsigned int, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 11167: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11171: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11179: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_init_zalloc(80UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11185: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_init_zalloc(68UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11187: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_init_zalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11191: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___11 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11193: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_init_zalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11197: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___14 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_g_ctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_s_ctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_querymenu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_try_ext_ctrls to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_s_ext_ctrls to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_g_ext_ctrls to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_queryctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10999: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11001: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14914: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_probe_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4593: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_i2c_subdev_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function media_entity_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_handler_init_class to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_new_std to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_handler_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_cluster to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_handler_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14834: Ignoring function call through function pointer *(sd->ops->ir->rx_s_parameters): (*(sd->ops->ir->rx_s_parameters))(sd, &default_params); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14846: Ignoring function call through function pointer *(sd->ops->ir->tx_s_parameters): (*(sd->ops->ir->tx_s_parameters))(sd, &default_params); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_device_unregister_subdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_out to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_out_r to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_handler_log_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            696472 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  643187 (92%)
  Because of loop head:            52793 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         492 (0%)
  Times precision was empty:       190861 (27%)
  Times precision was {false}:     2586 (0%)
  Times result was cached:         497881 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5144 (1%)
  Times result was 'false':        12549 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         650998
  BDD entailment checks:           146794
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       262
Number of predicates discovered:          19
Number of abstraction locations:          607
Max number of predicates per location:    13
Avg number of predicates per location:    1
Total predicates per abstraction:         1389525
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 179.76
Number of irrelevant predicates:          722967 (52%)
Number of preds handled by boolean abs:   10401 (1%)
  Total number of models for allsat:      85220
  Max number of models for allsat:        2304
  Avg number of models for allsat:        16.57

Time for post operator:                 85.469s
  Time for path formula creation:       83.386s
Time for strengthen operator:            4.222s
Time for prec operator:                238.779s
  Time for abstraction:                228.340s (Max:     3.606s, Count: 696472)
    Boolean abstraction:                55.361s
    Solving time:                      105.204s (Max:     3.528s)
    Model enumeration time:             31.501s
    Time for BDD construction:           1.882s (Max:     0.059s)
Time for merge operator:                 4.803s
Time for coverage check:                 0.244s
  Time for BDD entailment checks:        0.166s
Total time for SMT solver (w/o itp):   136.705s

Number of path formula cache hits:   5084098 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    58.250s

Total number of created targets for pointer analysis: 956101
   Number of created targets for uf: *unsigned_short_int is 386
   Number of created targets for uf: *signed_int is 11
   Number of created targets for uf: *unsigned_char is 3457
   Number of created targets for uf: *signed_long_int is 13
   Number of created targets for uf: *(unsigned_char)* is 445
   Number of created targets for uf: *_Bool is 78
   Number of created targets for uf: *unsigned_long_long_int is 113
   Number of created targets for uf: *unsigned_int is 125
   Number of created targets for uf: *enum_v4l2_subdev_ir_mode is 6


Number of BDD nodes:                               36589
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       11142 (count: 384595, min: 0, max: 383, avg: 0.03)
Time for BDD node cleanup:                             0.070s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.834s
  Time for transition matches:                         4.067s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                      5121098 (count: 5121098, min: 1, max: 1, avg: 1.00) [1 x 5121098]

CPA algorithm statistics
------------------------
Number of iterations:            2521409
Max size of waitlist:            612
Average size of waitlist:        210
Number of computed successors:   2946576
Max successors for one state:    2
Number of times merged:          252102
Number of times stopped:         325904
Number of times breaked:         492

Total time for CPA algorithm:       846.020s (Max:    20.239s)
  Time for choose from waitlist:      1.360s
  Time for precision adjustment:    258.881s
  Time for transfer relation:       561.943s
  Time for merge operator:            8.135s
  Time for stop operator:             3.274s
  Time for adding to reached set:     4.954s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   492
Avg. length of target path (in blocks):               81442 (count: 492, min: 74, max: 256, avg: 165.53)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  40.354s
  Counterexample analysis:                            34.749s (Max:     0.868s, Calls: 492)
    Refinement sat check:                             19.251s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.035s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.349s
  Precision update:                                    0.397s
  ARG update:                                          4.349s

Length of refined path (in blocks):                   72729 (count: 492, min: 70, max: 254, avg: 147.82)
Number of affected states:                            35097 (count: 492, min: 1, max: 218, avg: 71.34)
Length (states) of path with itp 'true':              37140 (count: 492, min: 0, max: 217, avg: 75.49)
Length (states) of path with itp non-trivial itp:     35097 (count: 492, min: 1, max: 218, avg: 71.34)
Length (states) of path with itp 'false':               492 (count: 492, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 492, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           34605 (count: 492, min: 0, max: 217, avg: 70.34)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                492
Number of successful refinements:     492
Number of failed refinements:         0
Max. size of reached set before ref.: 28890
Max. size of reached set after ref.:  27363
Avg. size of reached set before ref.: 9855.83
Avg. size of reached set after ref.:  4607.96

Total time for CEGAR algorithm:     891.804s
Time for refinements:                44.145s
Average time for refinement:          0.089s
Max time for refinement:              0.898s

Code Coverage
-----------------------------
  Function coverage:      0.620
  Visited lines:          4747
  Total lines:            8648
  Line coverage:          0.549
  Visited conditions:     1282
  Total conditions:       2018
  Condition coverage:     0.635

CPAchecker general statistics
-----------------------------
Number of program locations:     10728
Number of CFA edges:             15069
Number of relevant variables:    1027
Number of functions:             216
Number of loops:                 20
Size of reached set:             26171
  Number of reached locations:   3446 (32%)
    Avg states per location:     7
    Max states per location:     490 (at node N214)
  Number of reached functions:   134 (62%)
  Number of partitions:          26026
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N6806 (before line 11236), Function main called from node N6677, stack depth 1 [320770d7], stack [main]])
  Number of target states:       0
  Size of final wait list        390

Time for analysis setup:          8.504s
  Time for loading CPAs:          1.174s
  Time for loading parser:        0.684s
  Time for CFA construction:      6.553s
    Time for parsing file(s):     1.469s
    Time for AST to CFA:          2.286s
    Time for CFA sanity check:    0.877s
    Time for post-processing:     1.742s
      Time for var class.:        0.929s
Time for Analysis:              891.804s
CPU time for analysis:          891.750s
Total time for CPAchecker:      900.312s
Total CPU time for CPAchecker:  900.240s
Time for statistics:              0.654s

Time for Garbage Collector:      19.737s (in 565 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                734MB (   700 MiB) max;    411MB (   392 MiB) avg;    743MB (   708 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           771MB (   736 MiB) max;    603MB (   575 MiB) avg
Allocated non-heap memory:        45MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8296MB (  7911 MiB) max;   8240MB (  7859 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
