scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-08_1a-drivers--media--i2c--cx25840--cx25840.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_aqqij0fw/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4306: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4309: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4312: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4593: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13439: Function pointer *(sd->v4l2_dev->notify) with type void (*)(struct v4l2_subdev *, unsigned int, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 11167: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11171: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11179: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_init_zalloc(80UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11185: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_init_zalloc(68UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11187: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_init_zalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11191: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___11 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11193: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_init_zalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11197: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___14 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_g_ctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_s_ctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_querymenu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_try_ext_ctrls to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_s_ext_ctrls to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_g_ext_ctrls to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_queryctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14914: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4593: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_i2c_subdev_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function media_entity_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            22597 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20223 (89%)
  Because of loop head:            2354 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         20 (0%)
  Times precision was empty:       20260 (90%)
  Times precision was {false}:     186 (1%)
  Times result was cached:         1973 (9%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      178 (1%)
  Times result was 'false':        193 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         17822
  BDD entailment checks:           3076
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       262
Number of predicates discovered:          9
Number of abstraction locations:          66
Max number of predicates per location:    8
Avg number of predicates per location:    1
Total predicates per abstraction:         4351
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 11.95
Number of irrelevant predicates:          2904 (67%)
Number of preds handled by boolean abs:   375 (9%)
  Total number of models for allsat:      726
  Max number of models for allsat:        128
  Avg number of models for allsat:        4.08

Time for post operator:                  7.914s
  Time for path formula creation:        7.689s
Time for strengthen operator:            0.338s
Time for prec operator:                  3.365s
  Time for abstraction:                  2.605s (Max:     0.082s, Count: 22597)
    Boolean abstraction:                 0.831s
    Solving time:                        0.484s (Max:     0.018s)
    Model enumeration time:              0.294s
    Time for BDD construction:           0.110s (Max:     0.016s)
Time for merge operator:                 0.344s
Time for coverage check:                 0.042s
  Time for BDD entailment checks:        0.039s
Total time for SMT solver (w/o itp):     0.778s

Number of path formula cache hits:   146330 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.429s

Total number of created targets for pointer analysis: 18750
   Number of created targets for uf: *unsigned_short_int is 31
   Number of created targets for uf: *signed_int is 3
   Number of created targets for uf: *unsigned_char is 45
   Number of created targets for uf: *(unsigned_char)* is 26
   Number of created targets for uf: *_Bool is 20
   Number of created targets for uf: *unsigned_long_long_int is 320
   Number of created targets for uf: *unsigned_int is 11


Number of BDD nodes:                               1428
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         570 (count: 25480, min: 0, max: 127, avg: 0.02)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.637s
  Time for transition matches:                         0.322s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       161313 (count: 161313, min: 1, max: 1, avg: 1.00) [1 x 161313]

CPA algorithm statistics
------------------------
Number of iterations:            76951
Max size of waitlist:            211
Average size of waitlist:        114
Number of computed successors:   89487
Max successors for one state:    2
Number of times merged:          7373
Number of times stopped:         9438
Number of times breaked:         20

Total time for CPA algorithm:        19.896s (Max:     2.026s)
  Time for choose from waitlist:      0.154s
  Time for precision adjustment:      4.885s
  Time for transfer relation:        12.276s
  Time for merge operator:            0.712s
  Time for stop operator:             0.338s
  Time for adding to reached set:     0.349s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   20
Avg. length of target path (in blocks):                1589 (count: 20, min: 74, max: 82, avg: 79.45)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.316s
  Counterexample analysis:                             0.797s (Max:     0.065s, Calls: 20)
    Refinement sat check:                              0.487s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.051s
  Precision update:                                    0.048s
  ARG update:                                          0.388s

Length of refined path (in blocks):                    1427 (count: 20, min: 70, max: 76, avg: 71.35)
Number of affected states:                              443 (count: 20, min: 1, max: 75, avg: 22.15)
Length (states) of path with itp 'true':                964 (count: 20, min: 0, max: 68, avg: 48.20)
Length (states) of path with itp non-trivial itp:       443 (count: 20, min: 1, max: 75, avg: 22.15)
Length (states) of path with itp 'false':                20 (count: 20, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 20, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             423 (count: 20, min: 0, max: 74, avg: 21.15)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                20
Number of successful refinements:     20
Number of failed refinements:         0
Max. size of reached set before ref.: 5538
Max. size of reached set after ref.:  197
Avg. size of reached set before ref.: 4101.55
Avg. size of reached set after ref.:  141.50

Total time for CEGAR algorithm:      21.448s
Time for refinements:                 1.550s
Average time for refinement:          0.077s
Max time for refinement:              0.144s

Code Coverage
-----------------------------
  Function coverage:      0.144
  Visited lines:          1370
  Total lines:            8648
  Line coverage:          0.158
  Visited conditions:     264
  Total conditions:       2018
  Condition coverage:     0.131

CPAchecker general statistics
-----------------------------
Number of program locations:     10728
Number of CFA edges:             15069
Number of relevant variables:    1027
Number of functions:             216
Number of loops:                 20
Size of reached set:             656
  Number of reached locations:   492 (5%)
    Avg states per location:     1
    Max states per location:     19 (at node N82)
  Number of reached functions:   31 (14%)
  Number of partitions:          656
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        45

Time for analysis setup:          8.812s
  Time for loading CPAs:          1.127s
  Time for loading parser:        0.633s
  Time for CFA construction:      6.884s
    Time for parsing file(s):     1.291s
    Time for AST to CFA:          2.257s
    Time for CFA sanity check:    1.355s
    Time for post-processing:     1.815s
      Time for var class.:        0.906s
Time for Analysis:               21.448s
CPU time for analysis:           21.450s
Total time for CPAchecker:       30.273s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.132s

Time for Garbage Collector:       0.944s (in 53 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 98MB (    93 MiB) max;     62MB (    59 MiB) avg;    101MB (    96 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    32 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8070MB (  7696 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
