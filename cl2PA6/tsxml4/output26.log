scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-08_1a-drivers--media--i2c--cx25840--cx25840.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_eq1dripb/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4306: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4309: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4312: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4593: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13439: Function pointer *(sd->v4l2_dev->notify) with type void (*)(struct v4l2_subdev *, unsigned int, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 11167: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11171: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11179: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_init_zalloc(80UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11185: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_init_zalloc(68UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11187: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_init_zalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11191: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___11 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11193: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_init_zalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11197: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___14 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_g_ctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_s_ctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_querymenu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_try_ext_ctrls to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_s_ext_ctrls to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_g_ext_ctrls to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_queryctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10999: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11001: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14914: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_probe_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            14534 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12685 (87%)
  Because of loop head:            1816 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         33 (0%)
  Times precision was empty:       9855 (68%)
  Times precision was {false}:     283 (2%)
  Times result was cached:         3761 (26%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      635 (4%)
  Times result was 'false':        125 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         14166
  BDD entailment checks:           2252
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       109
Number of predicates discovered:          6
Number of abstraction locations:          101
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         8456
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 9.21
Number of irrelevant predicates:          3915 (46%)
Number of preds handled by boolean abs:   931 (11%)
  Total number of models for allsat:      717
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.13

Time for post operator:                  7.202s
  Time for path formula creation:        7.009s
Time for strengthen operator:            0.222s
Time for prec operator:                  4.634s
  Time for abstraction:                  3.999s (Max:     0.032s, Count: 14534)
    Boolean abstraction:                 1.106s
    Solving time:                        1.009s (Max:     0.018s)
    Model enumeration time:              0.099s
    Time for BDD construction:           0.080s (Max:     0.012s)
Time for merge operator:                 0.506s
Time for coverage check:                 0.059s
  Time for BDD entailment checks:        0.044s
Total time for SMT solver (w/o itp):     1.108s

Number of path formula cache hits:   64486 (58%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.207s

Total number of created targets for pointer analysis: 6235
   Number of created targets for uf: *unsigned_short_int is 801
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *unsigned_char is 24
   Number of created targets for uf: *(unsigned_char)* is 2
   Number of created targets for uf: *_Bool is 8
   Number of created targets for uf: *unsigned_long_long_int is 33


Number of BDD nodes:                               260
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1335 (count: 17379, min: 0, max: 198, avg: 0.08)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.527s
  Time for transition matches:                         0.262s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                        99144 (count: 99144, min: 1, max: 1, avg: 1.00) [1 x 99144]

CPA algorithm statistics
------------------------
Number of iterations:            54127
Max size of waitlist:            265
Average size of waitlist:        110
Number of computed successors:   65161
Max successors for one state:    2
Number of times merged:          5957
Number of times stopped:         7210
Number of times breaked:         33

Total time for CPA algorithm:        18.347s (Max:     1.876s)
  Time for choose from waitlist:      0.137s
  Time for precision adjustment:      5.814s
  Time for transfer relation:        10.063s
  Time for merge operator:            0.761s
  Time for stop operator:             0.360s
  Time for adding to reached set:     0.346s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   33
Avg. length of target path (in blocks):                4245 (count: 33, min: 74, max: 169, avg: 128.64)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.812s
  Counterexample analysis:                             2.278s (Max:     0.113s, Calls: 33)
    Refinement sat check:                              1.295s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.068s
  Precision update:                                    0.032s
  ARG update:                                          0.360s

Length of refined path (in blocks):                    3484 (count: 33, min: 70, max: 162, avg: 105.58)
Number of affected states:                             1563 (count: 33, min: 1, max: 126, avg: 47.36)
Length (states) of path with itp 'true':               1888 (count: 33, min: 0, max: 125, avg: 57.21)
Length (states) of path with itp non-trivial itp:      1563 (count: 33, min: 1, max: 126, avg: 47.36)
Length (states) of path with itp 'false':                33 (count: 33, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 33, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1530 (count: 33, min: 0, max: 125, avg: 46.36)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                33
Number of successful refinements:     33
Number of failed refinements:         0
Max. size of reached set before ref.: 3909
Max. size of reached set after ref.:  2454
Avg. size of reached set before ref.: 2459.30
Avg. size of reached set after ref.:  778.94

Total time for CEGAR algorithm:      21.487s
Time for refinements:                 3.109s
Average time for refinement:          0.094s
Max time for refinement:              0.161s

Code Coverage
-----------------------------
  Function coverage:      0.329
  Visited lines:          1860
  Total lines:            8648
  Line coverage:          0.215
  Visited conditions:     362
  Total conditions:       2018
  Condition coverage:     0.179

CPAchecker general statistics
-----------------------------
Number of program locations:     10728
Number of CFA edges:             15069
Number of relevant variables:    1027
Number of functions:             216
Number of loops:                 20
Size of reached set:             2375
  Number of reached locations:   825 (8%)
    Avg states per location:     2
    Max states per location:     48 (at node N158)
  Number of reached functions:   71 (33%)
  Number of partitions:          2365
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N6806 (before line 11236), Function main called from node N6677, stack depth 1 [24668b5b], stack [main]])
  Number of target states:       0
  Size of final wait list        144

Time for analysis setup:          8.776s
  Time for loading CPAs:          1.187s
  Time for loading parser:        0.689s
  Time for CFA construction:      6.741s
    Time for parsing file(s):     1.217s
    Time for AST to CFA:          2.243s
    Time for CFA sanity check:    1.308s
    Time for post-processing:     1.812s
      Time for var class.:        0.878s
Time for Analysis:               21.487s
CPU time for analysis:           21.490s
Total time for CPAchecker:       30.267s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.156s

Time for Garbage Collector:       0.875s (in 46 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 99MB (    95 MiB) max;     63MB (    60 MiB) avg;    103MB (    98 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8070MB (  7696 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
