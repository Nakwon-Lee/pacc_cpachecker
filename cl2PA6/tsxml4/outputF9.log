scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-08_1a-drivers--media--i2c--cx25840--cx25840.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_131a_4iz/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4306: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4309: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4312: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4593: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13439: Function pointer *(sd->v4l2_dev->notify) with type void (*)(struct v4l2_subdev *, unsigned int, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 11167: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11171: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11179: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_init_zalloc(80UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11185: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_init_zalloc(68UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11187: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_init_zalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11191: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___11 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11193: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_init_zalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11197: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___14 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_g_ctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_s_ctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_querymenu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_try_ext_ctrls to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_s_ext_ctrls to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_g_ext_ctrls to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_queryctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14914: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_probe_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4593: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10999: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11001: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13439: Ignoring function call through function pointer *(sd->v4l2_dev->notify): (*(sd->v4l2_dev->notify))(sd, notification, arg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __kfifo_in to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_in_r to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            530278 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  516365 (97%)
  Because of loop head:            13620 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         293 (0%)
  Times precision was empty:       253017 (48%)
  Times precision was {false}:     3141 (1%)
  Times result was cached:         270726 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3394 (1%)
  Times result was 'false':        7217 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         503211
  BDD entailment checks:           90041
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       262
Number of predicates discovered:          15
Number of abstraction locations:          317
Max number of predicates per location:    12
Avg number of predicates per location:    2
Total predicates per abstraction:         728575
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 111.49
Number of irrelevant predicates:          455270 (62%)
Number of preds handled by boolean abs:   6812 (1%)
  Total number of models for allsat:      71353
  Max number of models for allsat:        1152
  Avg number of models for allsat:        21.02

Time for post operator:                138.302s
  Time for path formula creation:      136.171s
Time for strengthen operator:            4.284s
Time for prec operator:                492.598s
  Time for abstraction:                484.763s (Max:     6.797s, Count: 530278)
    Boolean abstraction:               188.298s
    Solving time:                      383.958s (Max:     6.687s)
    Model enumeration time:             29.387s
    Time for BDD construction:           1.819s (Max:     0.064s)
Time for merge operator:                 4.013s
Time for coverage check:                 0.178s
  Time for BDD entailment checks:        0.128s
Total time for SMT solver (w/o itp):   413.345s

Number of path formula cache hits:   3790363 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   117.102s

Total number of created targets for pointer analysis: 3013601
   Number of created targets for uf: *unsigned_short_int is 185
   Number of created targets for uf: *signed_int is 6
   Number of created targets for uf: *unsigned_char is 11402
   Number of created targets for uf: *signed_long_int is 1381
   Number of created targets for uf: *(unsigned_char)* is 1509
   Number of created targets for uf: *_Bool is 2374
   Number of created targets for uf: *unsigned_long_long_int is 65
   Number of created targets for uf: *unsigned_int is 90
   Number of created targets for uf: *enum_v4l2_subdev_ir_mode is 312


Number of BDD nodes:                               20998
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7674 (count: 382786, min: 0, max: 295, avg: 0.02)
Time for BDD node cleanup:                             0.065s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.424s
  Time for transition matches:                         3.538s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.011s
Automaton transfers with branching:                0
Automaton transfer successors:                      4288884 (count: 4288884, min: 1, max: 1, avg: 1.00) [1 x 4288884]

CPA algorithm statistics
------------------------
Number of iterations:            2011306
Max size of waitlist:            525
Average size of waitlist:        265
Number of computed successors:   2347105
Max successors for one state:    2
Number of times merged:          206585
Number of times stopped:         247211
Number of times breaked:         293

Total time for CPA algorithm:       868.474s (Max:    16.063s)
  Time for choose from waitlist:      1.280s
  Time for precision adjustment:    508.310s
  Time for transfer relation:       338.788s
  Time for merge operator:            6.794s
  Time for stop operator:             2.956s
  Time for adding to reached set:     4.119s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   293
Avg. length of target path (in blocks):               42031 (count: 293, min: 74, max: 213, avg: 143.45)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  21.564s
  Counterexample analysis:                            17.303s (Max:     0.460s, Calls: 293)
    Refinement sat check:                             10.247s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.034s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.168s
  Precision update:                                    0.245s
  ARG update:                                          3.576s

Length of refined path (in blocks):                   40152 (count: 293, min: 70, max: 207, avg: 137.04)
Number of affected states:                            18493 (count: 293, min: 1, max: 203, avg: 63.12)
Length (states) of path with itp 'true':              21366 (count: 293, min: 0, max: 171, avg: 72.92)
Length (states) of path with itp non-trivial itp:     18493 (count: 293, min: 1, max: 203, avg: 63.12)
Length (states) of path with itp 'false':               293 (count: 293, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 293, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           18200 (count: 293, min: 0, max: 202, avg: 62.12)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                293
Number of successful refinements:     293
Number of failed refinements:         0
Max. size of reached set before ref.: 15772
Max. size of reached set after ref.:  11703
Avg. size of reached set before ref.: 9548.14
Avg. size of reached set after ref.:  2444.19

Total time for CEGAR algorithm:     892.487s
Time for refinements:                23.502s
Average time for refinement:          0.080s
Max time for refinement:              0.485s

Code Coverage
-----------------------------
  Function coverage:      0.491
  Visited lines:          3258
  Total lines:            8648
  Line coverage:          0.377
  Visited conditions:     718
  Total conditions:       2018
  Condition coverage:     0.356

CPAchecker general statistics
-----------------------------
Number of program locations:     10728
Number of CFA edges:             15069
Number of relevant variables:    1027
Number of functions:             216
Number of loops:                 20
Size of reached set:             11219
  Number of reached locations:   1849 (17%)
    Avg states per location:     6
    Max states per location:     172 (at node N158)
  Number of reached functions:   106 (49%)
  Number of partitions:          11179
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N6806 (before line 11236), Function main called from node N6677, stack depth 1 [24668b5b], stack [main]])
  Number of target states:       0
  Size of final wait list        377

Time for analysis setup:          7.797s
  Time for loading CPAs:          1.052s
  Time for loading parser:        0.625s
  Time for CFA construction:      5.960s
    Time for parsing file(s):     1.241s
    Time for AST to CFA:          2.062s
    Time for CFA sanity check:    0.871s
    Time for post-processing:     1.565s
      Time for var class.:        0.815s
Time for Analysis:              892.487s
CPU time for analysis:          892.430s
Total time for CPAchecker:      900.288s
Total CPU time for CPAchecker:  900.210s
Time for statistics:              0.369s

Time for Garbage Collector:      20.168s (in 412 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                843MB (   804 MiB) max;    484MB (   462 MiB) avg;    867MB (   827 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1011MB (   964 MiB) max;    735MB (   701 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8388MB (  7999 MiB) max;   8242MB (  7861 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
