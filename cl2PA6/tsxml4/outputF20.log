scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-08_1a-drivers--media--i2c--cx25840--cx25840.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_k2s5ea0w/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4306: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4309: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4312: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3129;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4593: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13439: Function pointer *(sd->v4l2_dev->notify) with type void (*)(struct v4l2_subdev *, unsigned int, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 11167: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11171: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11179: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_init_zalloc(80UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11185: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_init_zalloc(68UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11187: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_init_zalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11191: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___11 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11193: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_init_zalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11197: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___14 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_g_ctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_s_ctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_querymenu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_try_ext_ctrls to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_s_ext_ctrls to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_g_ext_ctrls to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_subdev_queryctrl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14914: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4593: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_i2c_subdev_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function media_entity_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_device_unregister_subdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_handler_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10999: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11001: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_send to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_handler_log_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_handler_init_class to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_new_std to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_cluster to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_handler_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_out to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_out_r to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1769507 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1645301 (93%)
  Because of loop head:            123736 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         470 (0%)
  Times precision was empty:       545522 (31%)
  Times precision was {false}:     3652 (0%)
  Times result was cached:         1213499 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6834 (0%)
  Times result was 'false':        29093 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1473754
  BDD entailment checks:           369232
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       262
Number of predicates discovered:          16
Number of abstraction locations:          394
Max number of predicates per location:    13
Avg number of predicates per location:    3
Total predicates per abstraction:         8857454
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 844.69
Number of irrelevant predicates:          4981714 (56%)
Number of preds handled by boolean abs:   23233 (0%)
  Total number of models for allsat:      99301
  Max number of models for allsat:        2304
  Avg number of models for allsat:        14.53

Time for post operator:                118.536s
  Time for path formula creation:      113.693s
Time for strengthen operator:            9.105s
Time for prec operator:                382.475s
  Time for abstraction:                358.518s (Max:     3.041s, Count: 1769507)
    Boolean abstraction:                64.100s
    Solving time:                       28.635s (Max:     2.965s)
    Model enumeration time:             34.420s
    Time for BDD construction:           2.328s (Max:     0.106s)
Time for merge operator:                 6.291s
Time for coverage check:                 0.502s
  Time for BDD entailment checks:        0.332s
Total time for SMT solver (w/o itp):    63.055s

Number of path formula cache hits:   13128065 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    54.185s

Total number of created targets for pointer analysis: 738949
   Number of created targets for uf: *unsigned_short_int is 1809
   Number of created targets for uf: *signed_int is 10
   Number of created targets for uf: *unsigned_char is 2101
   Number of created targets for uf: *signed_long_int is 7
   Number of created targets for uf: *(unsigned_char)* is 548
   Number of created targets for uf: *_Bool is 80
   Number of created targets for uf: *unsigned_long_long_int is 6107
   Number of created targets for uf: *unsigned_int is 255
   Number of created targets for uf: *enum_v4l2_subdev_ir_mode is 9


Number of BDD nodes:                               52677
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       14890 (count: 978971, min: 0, max: 675, avg: 0.02)
Time for BDD node cleanup:                             0.171s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 14.544s
  Time for transition matches:                         8.887s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                     11885543 (count: 11885543, min: 1, max: 1, avg: 1.00) [1 x 11885543]

CPA algorithm statistics
------------------------
Number of iterations:            5918753
Max size of waitlist:            1402
Average size of waitlist:        302
Number of computed successors:   6820244
Max successors for one state:    2
Number of times merged:          552261
Number of times stopped:         717987
Number of times breaked:         470

Total time for CPA algorithm:       858.237s (Max:    20.759s)
  Time for choose from waitlist:      3.357s
  Time for precision adjustment:    422.502s
  Time for transfer relation:       385.595s
  Time for merge operator:           13.017s
  Time for stop operator:             7.541s
  Time for adding to reached set:    10.812s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   470
Avg. length of target path (in blocks):               53441 (count: 470, min: 74, max: 153, avg: 113.70)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  29.295s
  Counterexample analysis:                            18.921s (Max:     0.776s, Calls: 470)
    Refinement sat check:                             12.028s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.033s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.210s
  Precision update:                                    0.420s
  ARG update:                                          9.403s

Length of refined path (in blocks):                   49552 (count: 470, min: 70, max: 137, avg: 105.43)
Number of affected states:                            24834 (count: 470, min: 1, max: 136, avg: 52.84)
Length (states) of path with itp 'true':              24248 (count: 470, min: 0, max: 113, avg: 51.59)
Length (states) of path with itp non-trivial itp:     24834 (count: 470, min: 1, max: 136, avg: 52.84)
Length (states) of path with itp 'false':               470 (count: 470, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 470, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           24364 (count: 470, min: 0, max: 135, avg: 51.84)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                470
Number of successful refinements:     470
Number of failed refinements:         0
Max. size of reached set before ref.: 75154
Max. size of reached set after ref.:  22981
Avg. size of reached set before ref.: 14815.53
Avg. size of reached set after ref.:  1988.41

Total time for CEGAR algorithm:     892.430s
Time for refinements:                33.566s
Average time for refinement:          0.071s
Max time for refinement:              0.802s

Code Coverage
-----------------------------
  Function coverage:      0.528
  Visited lines:          3627
  Total lines:            8648
  Line coverage:          0.419
  Visited conditions:     816
  Total conditions:       2018
  Condition coverage:     0.404

CPAchecker general statistics
-----------------------------
Number of program locations:     10728
Number of CFA edges:             15069
Number of relevant variables:    1027
Number of functions:             216
Number of loops:                 20
Size of reached set:             44418
  Number of reached locations:   2208 (21%)
    Avg states per location:     20
    Max states per location:     771 (at node N158)
  Number of reached functions:   114 (53%)
  Number of partitions:          44306
    Avg size of partitions:      1
    Max size of partitions:      15 (with key [N6806 (before line 11236), Function main called from node N6677, stack depth 1 [2e7e84f8], stack [main]])
  Number of target states:       0
  Size of final wait list        1066

Time for analysis setup:          7.882s
  Time for loading CPAs:          0.982s
  Time for loading parser:        0.699s
  Time for CFA construction:      6.094s
    Time for parsing file(s):     1.235s
    Time for AST to CFA:          2.177s
    Time for CFA sanity check:    0.825s
    Time for post-processing:     1.623s
      Time for var class.:        0.826s
Time for Analysis:              892.430s
CPU time for analysis:          892.340s
Total time for CPAchecker:      900.316s
Total CPU time for CPAchecker:  900.200s
Time for statistics:              0.849s

Time for Garbage Collector:      38.583s (in 1150 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                908MB (   866 MiB) max;    405MB (   386 MiB) avg;    953MB (   908 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1029MB (   981 MiB) max;    617MB (   589 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8224MB (  7843 MiB) max;   8164MB (  7786 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
