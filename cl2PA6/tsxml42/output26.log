scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--net--ethernet--intel--fm10k--fm10k.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ipg9xg5t/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

lines 7421-7436: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 7423: Dead code detected: __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret__): "m" (numa_node)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7426: Dead code detected: __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (numa_node)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7428: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 7432: Dead code detected: __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (numa_node)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret__): "m" (numa_node));
  goto ldv_13663;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (numa_node));
  goto ldv_13663;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret__): "m" (numa_node));
  goto ldv_13663;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (numa_node));
  goto ldv_13663;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 7441-7456: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 7443: Dead code detected: __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____0): "m" (numa_node)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7446: Dead code detected: __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (numa_node)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7448: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 7452: Dead code detected: __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (numa_node)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____0): "m" (numa_node));
  goto ldv_13673;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (numa_node));
  goto ldv_13673;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (numa_node));
  goto ldv_13673;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (numa_node));
  goto ldv_13673;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7463: Dead code detected: __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____1): "m" (numa_node)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7466: Dead code detected: __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (numa_node)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7472: Dead code detected: __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (numa_node)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____1): "m" (numa_node));
  goto ldv_13682;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (numa_node));
  goto ldv_13682;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (numa_node));
  goto ldv_13682;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (numa_node));
  goto ldv_13682;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 7481-7496: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 7483: Dead code detected: __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____2): "m" (numa_node)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7486: Dead code detected: __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (numa_node)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7488: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 7492: Dead code detected: __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (numa_node)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____2): "m" (numa_node));
  goto ldv_13691;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (numa_node));
  goto ldv_13691;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (numa_node));
  goto ldv_13691;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (numa_node));
  goto ldv_13691;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret__): "m" (numa_node));
  goto ldv_13663;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (numa_node));
  goto ldv_13663;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret__): "m" (numa_node));
  goto ldv_13663;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (numa_node));
  goto ldv_13663;
  default:
  __bad_percpu_size();
  }
  ldv_13663:
  pscr_ret__ = pfo_ret__;
  goto ldv_13669;
  case 2UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____0): "m" (numa_node));
  goto ldv_13673;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (numa_node));
  goto ldv_13673;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (numa_node));
  goto ldv_13673;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (numa_node));
  goto ldv_13673;
  default:
  __bad_percpu_size();
  }
  ldv_13673:
  pscr_ret__ = pfo_ret_____0;
  goto ldv_13669;
  case 4UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____1): "m" (numa_node));
  goto ldv_13682;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (numa_node));
  goto ldv_13682;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (numa_node));
  goto ldv_13682;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (numa_node));
  goto ldv_13682;
  default:
  __bad_percpu_size();
  }
  ldv_13682:
  pscr_ret__ = pfo_ret_____1;
  goto ldv_13669;
  case 8UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____2): "m" (numa_node));
  goto ldv_13691;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (numa_node));
  goto ldv_13691;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (numa_node));
  goto ldv_13691;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (numa_node));
  goto ldv_13691;
  default:
  __bad_percpu_size();
  }
  ldv_13691:
  pscr_ret__ = pfo_ret_____2;
  goto ldv_13669;
  default:
  __bad_size_call_parameter();
  goto ldv_13669;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8785: Dead code detected: pao_ID__ = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8788: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8788: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8789: Dead code detected: __asm__ ("incb %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8791: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8791: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8792: Dead code detected: __asm__ ("decb %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8794: Dead code detected: __asm__ ("addb %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "qi" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8798: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8798: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8799: Dead code detected: __asm__ ("incw %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8801: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8801: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8802: Dead code detected: __asm__ ("decw %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8804: Dead code detected: __asm__ ("addw %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "ri" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8807: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 8808: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8809: Dead code detected: __asm__ ("incl %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8811: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8811: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8812: Dead code detected: __asm__ ("decl %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8814: Dead code detected: __asm__ ("addl %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "ri" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8818: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8818: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8819: Dead code detected: __asm__ ("incq %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8821: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8821: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8822: Dead code detected: __asm__ ("decq %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8824: Dead code detected: __asm__ ("addq %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "re" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL: ;
    if (pao_ID__ == 1) {
      __asm__ ("incb %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID__ == -1) {
      __asm__ ("decb %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addb %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "qi" (1U));
    }
    goto ldv_53498;
    case 2UL: ;
    if (pao_ID__ == 1) {
      __asm__ ("incw %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID__ == -1) {
      __asm__ ("decw %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addw %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "ri" (1U));
    }
    goto ldv_53498;
    case 4UL: ;
    if (pao_ID__ == 1) {
      __asm__ ("incl %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID__ == -1) {
      __asm__ ("decl %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addl %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "ri" (1U));
    }
    goto ldv_53498;
    case 8UL: ;
    if (pao_ID__ == 1) {
      __asm__ ("incq %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID__ == -1) {
      __asm__ ("decq %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addq %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "re" (1U));
    }
    goto ldv_53498;
    default:
    __bad_percpu_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 8833: Dead code detected: pao_ID_____0 = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8836: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8836: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8837: Dead code detected: __asm__ ("incb %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8839: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8839: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8840: Dead code detected: __asm__ ("decb %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8842: Dead code detected: __asm__ ("addb %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "qi" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8846: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8846: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8847: Dead code detected: __asm__ ("incw %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8849: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8849: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8850: Dead code detected: __asm__ ("decw %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8852: Dead code detected: __asm__ ("addw %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "ri" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8855: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 8856: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8857: Dead code detected: __asm__ ("incl %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8859: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8859: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8860: Dead code detected: __asm__ ("decl %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8862: Dead code detected: __asm__ ("addl %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "ri" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8866: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8866: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8867: Dead code detected: __asm__ ("incq %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8869: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8869: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8870: Dead code detected: __asm__ ("decq %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8872: Dead code detected: __asm__ ("addq %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "re" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL: ;
    if (pao_ID_____0 == 1) {
      __asm__ ("incb %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID_____0 == -1) {
      __asm__ ("decb %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addb %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "qi" (1U));
    }
    goto ldv_53509;
    case 2UL: ;
    if (pao_ID_____0 == 1) {
      __asm__ ("incw %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID_____0 == -1) {
      __asm__ ("decw %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addw %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "ri" (1U));
    }
    goto ldv_53509;
    case 4UL: ;
    if (pao_ID_____0 == 1) {
      __asm__ ("incl %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID_____0 == -1) {
      __asm__ ("decl %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addl %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "ri" (1U));
    }
    goto ldv_53509;
    case 8UL: ;
    if (pao_ID_____0 == 1) {
      __asm__ ("incq %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID_____0 == -1) {
      __asm__ ("decq %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addq %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "re" (1U));
    }
    goto ldv_53509;
    default:
    __bad_percpu_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 8884: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8884: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8885: Dead code detected: __asm__ ("incb %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8887: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8887: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8888: Dead code detected: __asm__ ("decb %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8890: Dead code detected: __asm__ ("addb %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "qi" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8894: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8894: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8895: Dead code detected: __asm__ ("incw %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8897: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8897: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8898: Dead code detected: __asm__ ("decw %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8900: Dead code detected: __asm__ ("addw %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "ri" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8914: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8914: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8915: Dead code detected: __asm__ ("incq %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8917: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8917: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8918: Dead code detected: __asm__ ("decq %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8920: Dead code detected: __asm__ ("addq %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "re" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL: ;
    if (pao_ID_____1 == 1) {
      __asm__ ("incb %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID_____1 == -1) {
      __asm__ ("decb %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addb %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "qi" (1U));
    }
    goto ldv_53519;
    case 2UL: ;
    if (pao_ID_____1 == 1) {
      __asm__ ("incw %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID_____1 == -1) {
      __asm__ ("decw %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addw %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "ri" (1U));
    }
    goto ldv_53519;
    case 4UL: ;
    if (pao_ID_____1 == 1) {
      __asm__ ("incl %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID_____1 == -1) {
      __asm__ ("decl %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addl %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "ri" (1U));
    }
    goto ldv_53519;
    case 8UL: ;
    if (pao_ID_____1 == 1) {
      __asm__ ("incq %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID_____1 == -1) {
      __asm__ ("decq %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addq %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "re" (1U));
    }
    goto ldv_53519;
    default:
    __bad_percpu_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 8929: Dead code detected: pao_ID_____2 = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8932: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8932: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8933: Dead code detected: __asm__ ("incb %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8935: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8935: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8936: Dead code detected: __asm__ ("decb %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8938: Dead code detected: __asm__ ("addb %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "qi" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8942: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8942: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8943: Dead code detected: __asm__ ("incw %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8945: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8945: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8946: Dead code detected: __asm__ ("decw %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8948: Dead code detected: __asm__ ("addw %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "ri" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8951: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 8952: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8953: Dead code detected: __asm__ ("incl %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8955: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8955: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8956: Dead code detected: __asm__ ("decl %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8958: Dead code detected: __asm__ ("addl %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "ri" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8962: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8962: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8963: Dead code detected: __asm__ ("incq %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8965: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8965: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8966: Dead code detected: __asm__ ("decq %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8968: Dead code detected: __asm__ ("addq %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "re" (1U)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL: ;
    if (pao_ID_____2 == 1) {
      __asm__ ("incb %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID_____2 == -1) {
      __asm__ ("decb %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addb %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "qi" (1U));
    }
    goto ldv_53529;
    case 2UL: ;
    if (pao_ID_____2 == 1) {
      __asm__ ("incw %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID_____2 == -1) {
      __asm__ ("decw %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addw %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "ri" (1U));
    }
    goto ldv_53529;
    case 4UL: ;
    if (pao_ID_____2 == 1) {
      __asm__ ("incl %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID_____2 == -1) {
      __asm__ ("decl %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addl %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "ri" (1U));
    }
    goto ldv_53529;
    case 8UL: ;
    if (pao_ID_____2 == 1) {
      __asm__ ("incq %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID_____2 == -1) {
      __asm__ ("decq %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addq %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "re" (1U));
    }
    goto ldv_53529;
    default:
    __bad_percpu_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL:
    pao_ID__ = 1;
    switch (4UL) {
    case 1UL: ;
    if (pao_ID__ == 1) {
      __asm__ ("incb %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID__ == -1) {
      __asm__ ("decb %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addb %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "qi" (1U));
    }
    goto ldv_53498;
    case 2UL: ;
    if (pao_ID__ == 1) {
      __asm__ ("incw %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID__ == -1) {
      __asm__ ("decw %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addw %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "ri" (1U));
    }
    goto ldv_53498;
    case 4UL: ;
    if (pao_ID__ == 1) {
      __asm__ ("incl %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID__ == -1) {
      __asm__ ("decl %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addl %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "ri" (1U));
    }
    goto ldv_53498;
    case 8UL: ;
    if (pao_ID__ == 1) {
      __asm__ ("incq %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID__ == -1) {
      __asm__ ("decq %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addq %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "re" (1U));
    }
    goto ldv_53498;
    default:
    __bad_percpu_size();
    }
    ldv_53498: ;
    goto ldv_53503;
    case 2UL:
    pao_ID_____0 = 1;
    switch (4UL) {
    case 1UL: ;
    if (pao_ID_____0 == 1) {
      __asm__ ("incb %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID_____0 == -1) {
      __asm__ ("decb %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addb %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "qi" (1U));
    }
    goto ldv_53509;
    case 2UL: ;
    if (pao_ID_____0 == 1) {
      __asm__ ("incw %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID_____0 == -1) {
      __asm__ ("decw %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addw %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "ri" (1U));
    }
    goto ldv_53509;
    case 4UL: ;
    if (pao_ID_____0 == 1) {
      __asm__ ("incl %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID_____0 == -1) {
      __asm__ ("decl %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addl %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "ri" (1U));
    }
    goto ldv_53509;
    case 8UL: ;
    if (pao_ID_____0 == 1) {
      __asm__ ("incq %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID_____0 == -1) {
      __asm__ ("decq %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addq %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "re" (1U));
    }
    goto ldv_53509;
    default:
    __bad_percpu_size();
    }
    ldv_53509: ;
    goto ldv_53503;
    case 4UL:
    pao_ID_____1 = 1;
    switch (4UL) {
    case 1UL: ;
    if (pao_ID_____1 == 1) {
      __asm__ ("incb %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID_____1 == -1) {
      __asm__ ("decb %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addb %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "qi" (1U));
    }
    goto ldv_53519;
    case 2UL: ;
    if (pao_ID_____1 == 1) {
      __asm__ ("incw %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID_____1 == -1) {
      __asm__ ("decw %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addw %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "ri" (1U));
    }
    goto ldv_53519;
    case 4UL: ;
    if (pao_ID_____1 == 1) {
      __asm__ ("incl %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID_____1 == -1) {
      __asm__ ("decl %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addl %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "ri" (1U));
    }
    goto ldv_53519;
    case 8UL: ;
    if (pao_ID_____1 == 1) {
      __asm__ ("incq %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID_____1 == -1) {
      __asm__ ("decq %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addq %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "re" (1U));
    }
    goto ldv_53519;
    default:
    __bad_percpu_size();
    }
    ldv_53519: ;
    goto ldv_53503;
    case 8UL:
    pao_ID_____2 = 1;
    switch (4UL) {
    case 1UL: ;
    if (pao_ID_____2 == 1) {
      __asm__ ("incb %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID_____2 == -1) {
      __asm__ ("decb %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addb %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "qi" (1U));
    }
    goto ldv_53529;
    case 2UL: ;
    if (pao_ID_____2 == 1) {
      __asm__ ("incw %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID_____2 == -1) {
      __asm__ ("decw %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addw %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "ri" (1U));
    }
    goto ldv_53529;
    case 4UL: ;
    if (pao_ID_____2 == 1) {
      __asm__ ("incl %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID_____2 == -1) {
      __asm__ ("decl %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addl %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "ri" (1U));
    }
    goto ldv_53529;
    case 8UL: ;
    if (pao_ID_____2 == 1) {
      __asm__ ("incq %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else
    if (pao_ID_____2 == -1) {
      __asm__ ("decq %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors));
    } else {
      __asm__ ("addq %1, %%gs:%0": "+m" ((vlan->pcpu_stats)->rx_errors): "re" (1U));
    }
    goto ldv_53529;
    default:
    __bad_percpu_size();
    }
    ldv_53529: ;
    goto ldv_53503;
    default:
    __bad_size_call_parameter();
    goto ldv_53503;
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 12351: Dead code detected: __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12354: Dead code detected: __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12360: Dead code detected: __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6106;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6106;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6106;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6106;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 12377: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12377: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12378: Dead code detected: __asm__ ("incb %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12380: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12380: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12381: Dead code detected: __asm__ ("decb %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12383: Dead code detected: __asm__ ("addb %1, %%gs:%0": "+m" (__preempt_count): "qi" (val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12387: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12387: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12388: Dead code detected: __asm__ ("incw %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12390: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12390: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12391: Dead code detected: __asm__ ("decw %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12393: Dead code detected: __asm__ ("addw %1, %%gs:%0": "+m" (__preempt_count): "ri" (val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12407: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12407: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12408: Dead code detected: __asm__ ("incq %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12410: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12410: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12411: Dead code detected: __asm__ ("decq %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12413: Dead code detected: __asm__ ("addq %1, %%gs:%0": "+m" (__preempt_count): "re" (val)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addb %1, %%gs:%0": "+m" (__preempt_count): "qi" (val));
  }
  goto ldv_6163;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addw %1, %%gs:%0": "+m" (__preempt_count): "ri" (val));
  }
  goto ldv_6163;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addl %1, %%gs:%0": "+m" (__preempt_count): "ri" (val));
  }
  goto ldv_6163;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addq %1, %%gs:%0": "+m" (__preempt_count): "re" (val));
  }
  goto ldv_6163;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 12431: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12431: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12432: Dead code detected: __asm__ ("incb %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12434: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12434: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12435: Dead code detected: __asm__ ("decb %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12437: Dead code detected: __asm__ ("addb %1, %%gs:%0": "+m" (__preempt_count): "qi" (- val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12441: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12441: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12442: Dead code detected: __asm__ ("incw %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12444: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12444: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12445: Dead code detected: __asm__ ("decw %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12447: Dead code detected: __asm__ ("addw %1, %%gs:%0": "+m" (__preempt_count): "ri" (- val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12461: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12461: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12462: Dead code detected: __asm__ ("incq %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12464: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12464: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12465: Dead code detected: __asm__ ("decq %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12467: Dead code detected: __asm__ ("addq %1, %%gs:%0": "+m" (__preempt_count): "re" (- val)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addb %1, %%gs:%0": "+m" (__preempt_count): "qi" (- val));
  }
  goto ldv_6175;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addw %1, %%gs:%0": "+m" (__preempt_count): "ri" (- val));
  }
  goto ldv_6175;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addl %1, %%gs:%0": "+m" (__preempt_count): "ri" (- val));
  }
  goto ldv_6175;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addq %1, %%gs:%0": "+m" (__preempt_count): "re" (- val));
  }
  goto ldv_6175;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 13009-13024: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 13011: Dead code detected: __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 13014: Dead code detected: __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 13016: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 13020: Dead code detected: __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret__): "m" (cpu_number));
  goto ldv_43574;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_43574;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_43574;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_43574;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 13029-13044: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 13031: Dead code detected: __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 13034: Dead code detected: __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 13036: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 13040: Dead code detected: __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_43584;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_43584;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_43584;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_43584;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 13051: Dead code detected: __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 13054: Dead code detected: __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 13060: Dead code detected: __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_43593;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_43593;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_43593;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_43593;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 13069-13084: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 13071: Dead code detected: __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 13074: Dead code detected: __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 13076: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 13080: Dead code detected: __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_43602;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_43602;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_43602;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_43602;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret__): "m" (cpu_number));
  goto ldv_43574;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_43574;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_43574;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_43574;
  default:
  __bad_percpu_size();
  }
  ldv_43574:
  pscr_ret__ = pfo_ret__;
  goto ldv_43580;
  case 2UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_43584;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_43584;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_43584;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_43584;
  default:
  __bad_percpu_size();
  }
  ldv_43584:
  pscr_ret__ = pfo_ret_____0;
  goto ldv_43580;
  case 4UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_43593;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_43593;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_43593;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_43593;
  default:
  __bad_percpu_size();
  }
  ldv_43593:
  pscr_ret__ = pfo_ret_____1;
  goto ldv_43580;
  case 8UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_43602;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_43602;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_43602;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_43602;
  default:
  __bad_percpu_size();
  }
  ldv_43602:
  pscr_ret__ = pfo_ret_____2;
  goto ldv_43580;
  default:
  __bad_size_call_parameter();
  goto ldv_43580;
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 19342: Function pointer *(hw->mac.ops.update_mc_addr) with type s32 (*)(struct fm10k_hw *, u16 , u8 *, u16 , bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 19234-19235: Function pointer *(hw->mac.ops.update_uc_addr) with type s32 (*)(struct fm10k_hw *, u16 , u8 *, u16 , bool , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7894: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7827-7828: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8013: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7958: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7992-7993: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7924: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17887: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7861: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17854: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19182: Function pointer *(hw->mac.ops.update_vlan) with type s32 (*)(struct fm10k_hw *, u32 , u8 , bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19809: Function pointer *(hw->mac.ops.update_xcast_mode) with type s32 (*)(struct fm10k_hw *, u16 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 19810-19811: Function pointer *(hw->mac.ops.update_uc_addr) with type s32 (*)(struct fm10k_hw *, u16 , u8 *, u16 , bool , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19876: Function pointer *(hw->mac.ops.update_xcast_mode) with type s32 (*)(struct fm10k_hw *, u16 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 19877-19878: Function pointer *(hw->mac.ops.update_uc_addr) with type s32 (*)(struct fm10k_hw *, u16 , u8 *, u16 , bool , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12136: Function pointer *(mbx->ops.tx_ready) with type bool (*)(struct fm10k_mbx_info *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 30045: Function pointer *(hw->mbx.ops.tx_ready) with type bool (*)(struct fm10k_mbx_info *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 25376: Function pointer *(hw->iov.ops.configure_tc) with type s32 (*)(struct fm10k_hw *, u16 , int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 25286-25287: Function pointer *(hw->mac.ops.update_mc_addr) with type s32 (*)(struct fm10k_hw *, u16 , u8 *, u16 , bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 25256-25257: Function pointer *(hw->mac.ops.update_uc_addr) with type s32 (*)(struct fm10k_hw *, u16 , u8 *, u16 , bool , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 25220: Function pointer *(hw->mac.ops.update_vlan) with type s32 (*)(struct fm10k_hw *, u32 , u8 , bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 30161: Function pointer *(hw->iov.ops.assign_resources) with type s32 (*)(struct fm10k_hw *, u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 30182: Function pointer *(hw->iov.ops.set_lport) with type s32 (*)(struct fm10k_hw *, struct fm10k_vf_info *, u16 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19055: Function pointer *(hw->mac.ops.update_mc_addr) with type s32 (*)(struct fm10k_hw *, u16 , u8 *, u16 , bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 30521: Function pointer *(hw->iov.ops.configure_tc) with type s32 (*)(struct fm10k_hw *, u16 , int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 30493: Function pointer *(hw->mac.ops.update_vlan) with type s32 (*)(struct fm10k_hw *, u32 , u8 , bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 19512-19513: Function pointer *(hw->mac.ops.update_lport_state) with type s32 (*)(struct fm10k_hw *, u16 , u16 , bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 30411: Function pointer *(hw->iov.ops.set_lport) with type s32 (*)(struct fm10k_hw *, struct fm10k_vf_info *, u16 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 19464-19465: Function pointer *(hw->mac.ops.update_lport_state) with type s32 (*)(struct fm10k_hw *, u16 , u16 , bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19466: Function pointer *(hw->mac.ops.update_vlan) with type s32 (*)(struct fm10k_hw *, u32 , u8 , bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19467: Function pointer *(hw->mac.ops.update_vlan) with type s32 (*)(struct fm10k_hw *, u32 , u8 , bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19486: Function pointer *(hw->mac.ops.update_xcast_mode) with type s32 (*)(struct fm10k_hw *, u16 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19476: Function pointer *(hw->mac.ops.update_vlan) with type s32 (*)(struct fm10k_hw *, u32 , u8 , bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 19477-19478: Function pointer *(hw->mac.ops.update_uc_addr) with type s32 (*)(struct fm10k_hw *, u16 , u8 *, u16 , bool , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19401: Function pointer *(hw->mac.ops.update_xcast_mode) with type s32 (*)(struct fm10k_hw *, u16 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19392: Function pointer *(hw->mac.ops.update_vlan) with type s32 (*)(struct fm10k_hw *, u32 , u8 , bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 19027-19028: Function pointer *(hw->mac.ops.update_uc_addr) with type s32 (*)(struct fm10k_hw *, u16 , u8 *, u16 , bool , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 19112-19113: Function pointer *(hw->mac.ops.update_uc_addr) with type s32 (*)(struct fm10k_hw *, u16 , u8 *, u16 , bool , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19103: Function pointer *(hw->mac.ops.update_vlan) with type s32 (*)(struct fm10k_hw *, u32 , u8 , bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 32339: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_18 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_18 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_18 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_puts to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 22590: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 32341: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 22592: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_17 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_17 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_17 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 22594: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(196UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20018: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(184UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16176: Ignoring function call through function pointer *(hw->mac.ops.init_hw): (*(hw->mac.ops.init_hw))(&(interface->hw)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16177: Ignoring function call through function pointer *(hw->mac.ops.rebind_hw_stats): (*(hw->mac.ops.rebind_hw_stats))(hw, &(interface->stats)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device_mem to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_wake_from_d3 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_cleanup_aer_uncorrect_error_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_num_vf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_sriov to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_vfs_assigned to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15115: Ignoring function call through function pointer *(hw->mbx.ops.register_handlers): err = (*(hw->mbx.ops.register_handlers))(&(hw->mbx), (const struct fm10k_msg_data *)(&vf_mbx_data)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15360: Ignoring function call through function pointer *(hw->mbx.ops.register_handlers): err = (*(hw->mbx.ops.register_handlers))(&(hw->mbx), (const struct fm10k_msg_data *)(&pf_mbx_data)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_select_bars to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_selected_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_pcie_error_reporting to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15466: Ignoring function call through function pointer *(hw->mbx.ops.connect): err = (*(hw->mbx.ops.connect))(hw, &(hw->mbx)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 22598: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16031: Ignoring function call through function pointer *(hw->mac.ops.init_hw): tmp___1 = (*(hw->mac.ops.init_hw))(&(interface->hw)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16038: Ignoring function call through function pointer *(hw->mac.ops.rebind_hw_stats): (*(hw->mac.ops.rebind_hw_stats))(hw, &(interface->stats)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_release_selected_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14984: Ignoring function call through function pointer *(hw->mbx.ops.disconnect): (*(hw->mbx.ops.disconnect))(hw, &(hw->mbx)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function seq_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 31255: Ignoring function call through function pointer *(data->func): tmp = (*(data->func))(hw, (u32 **)(&results), mbx); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 25376: Ignoring function call through function pointer *(hw->iov.ops.configure_tc): (*(hw->iov.ops.configure_tc))(hw, __CPAchecker_TMP_6, vf_info->rate); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5726 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5150 (90%)
  Because of loop head:            576 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         0 (0%)
  Times precision was empty:       5726 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         3911
  BDD entailment checks:           1019
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       181
Number of predicates discovered:          0

Time for post operator:                 12.784s
  Time for path formula creation:       12.667s
Time for strengthen operator:            0.129s
Time for prec operator:                  0.649s
  Time for abstraction:                  0.116s (Max:     0.010s, Count: 5726)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.604s
Time for coverage check:                 0.073s
  Time for BDD entailment checks:        0.070s
Total time for SMT solver (w/o itp):     0.000s

Number of path formula cache hits:   4488 (11%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.514s

Total number of created targets for pointer analysis: 15242
   Number of created targets for uf: *unsigned_short_int is 121
   Number of created targets for uf: *unsigned_char is 13
   Number of created targets for uf: *(unsigned_int)* is 41
   Number of created targets for uf: *unsigned_int is 49
   Number of created targets for uf: *enum_fm10k_mbx_state is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 6746, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.278s
Automaton transfers with branching:                0
Automaton transfer successors:                        38528 (count: 38528, min: 1, max: 1, avg: 1.00) [1 x 38528]

CPA algorithm statistics
------------------------
Number of iterations:            20708
Max size of waitlist:            431
Average size of waitlist:        300
Number of computed successors:   23600
Max successors for one state:    2
Number of times merged:          1446
Number of times stopped:         2465
Number of times breaked:         0

Total time for CPA algorithm:        18.126s (Max:    18.126s)
  Time for choose from waitlist:      0.113s
  Time for precision adjustment:      1.216s
  Time for transfer relation:        15.064s
  Time for merge operator:            0.791s
  Time for stop operator:             0.287s
  Time for adding to reached set:     0.166s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   0

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.233
  Visited lines:          4354
  Total lines:            15542
  Line coverage:          0.280
  Visited conditions:     1106
  Total conditions:       5126
  Condition coverage:     0.216

CPAchecker general statistics
-----------------------------
Number of program locations:     23075
Number of CFA edges:             27333
Number of relevant variables:    4350
Number of functions:             898
Number of loops:                 219
Size of reached set:             21134
  Number of reached locations:   2819 (12%)
    Avg states per location:     7
    Max states per location:     318 (at node N4991)
  Number of reached functions:   209 (23%)
  Number of partitions:          21134
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        427

Time for analysis setup:         12.152s
  Time for loading CPAs:          1.133s
  Time for loading parser:        0.733s
  Time for CFA construction:     10.131s
    Time for parsing file(s):     1.881s
    Time for AST to CFA:          3.931s
    Time for CFA sanity check:    1.128s
    Time for post-processing:     3.015s
      Time for var class.:        1.419s
Time for Analysis:               18.126s
CPU time for analysis:           18.120s
Total time for CPAchecker:       30.287s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.551s

Time for Garbage Collector:       1.502s (in 52 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                138MB (   131 MiB) max;     87MB (    83 MiB) avg;    158MB (   150 MiB) peak
Used non-heap memory:             48MB (    45 MiB) max;     38MB (    36 MiB) avg;     48MB (    45 MiB) peak
Allocated heap memory:           190MB (   181 MiB) max;    140MB (   133 MiB) avg
Allocated non-heap memory:        50MB (    47 MiB) max;     39MB (    38 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8068MB (  7694 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
