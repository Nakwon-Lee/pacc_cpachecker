scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--net--ethernet--realtek--atp.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_puzuyw86/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7017: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6798: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_tx_wake_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            82550 (29% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  78378 (95%)
  Because of loop head:            4140 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         32 (0%)
  Times precision was empty:       80244 (97%)
  Times precision was {false}:     128 (0%)
  Times result was cached:         1716 (2%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      462 (1%)
  Times result was 'false':        201 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         15216
  BDD entailment checks:           4082
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          12
Number of abstraction locations:          19
Max number of predicates per location:    9
Avg number of predicates per location:    5
Total predicates per abstraction:         10503
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 17.80
Number of irrelevant predicates:          4706 (45%)
Number of preds handled by boolean abs:   1504 (14%)
  Total number of models for allsat:      864
  Max number of models for allsat:        10
  Avg number of models for allsat:        1.87

Time for post operator:                  4.031s
  Time for path formula creation:        3.761s
Time for strengthen operator:            0.361s
Time for prec operator:                  4.563s
  Time for abstraction:                  3.341s (Max:     0.027s, Count: 82550)
    Boolean abstraction:                 0.866s
    Solving time:                        0.641s (Max:     0.013s)
    Model enumeration time:              0.131s
    Time for BDD construction:           0.122s (Max:     0.010s)
Time for merge operator:                 0.264s
Time for coverage check:                 0.070s
  Time for BDD entailment checks:        0.066s
Total time for SMT solver (w/o itp):     0.772s

Number of path formula cache hits:   343301 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.888s

Total number of created targets for pointer analysis: 912
   Number of created targets for uf: *signed_int is 127


Number of BDD nodes:                               1127
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1547 (count: 88020, min: 0, max: 165, avg: 0.02)
Time for BDD node cleanup:                             0.037s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.793s
  Time for transition matches:                         0.474s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       289571 (count: 289571, min: 1, max: 1, avg: 1.00) [1 x 289571]

CPA algorithm statistics
------------------------
Number of iterations:            212136
Max size of waitlist:            137
Average size of waitlist:        82
Number of computed successors:   223623
Max successors for one state:    2
Number of times merged:          5567
Number of times stopped:         8210
Number of times breaked:         32

Total time for CPA algorithm:        22.643s (Max:     2.474s)
  Time for choose from waitlist:      0.245s
  Time for precision adjustment:      6.924s
  Time for transfer relation:        12.215s
  Time for merge operator:            0.453s
  Time for stop operator:             0.545s
  Time for adding to reached set:     0.687s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   32
Avg. length of target path (in blocks):                4235 (count: 32, min: 121, max: 282, avg: 132.34)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.924s
  Counterexample analysis:                             1.055s (Max:     0.057s, Calls: 32)
    Refinement sat check:                              0.382s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.025s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.053s
  Precision update:                                    0.031s
  ARG update:                                          0.707s

Length of refined path (in blocks):                     419 (count: 32, min: 8, max: 15, avg: 13.09)
Number of affected states:                              339 (count: 32, min: 1, max: 14, avg: 10.59)
Length (states) of path with itp 'true':                 48 (count: 32, min: 0, max: 6, avg: 1.50)
Length (states) of path with itp non-trivial itp:       339 (count: 32, min: 1, max: 14, avg: 10.59)
Length (states) of path with itp 'false':                32 (count: 32, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          32 (count: 32, min: 0, max: 3, avg: 1.00)
Equal non-trivial interpolants along paths:             275 (count: 32, min: 0, max: 12, avg: 8.59)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                32
Number of successful refinements:     32
Number of failed refinements:         0
Max. size of reached set before ref.: 9827
Max. size of reached set after ref.:  22
Avg. size of reached set before ref.: 6666.91
Avg. size of reached set after ref.:  7.75

Total time for CEGAR algorithm:      24.895s
Time for refinements:                 2.250s
Average time for refinement:          0.070s
Max time for refinement:              0.180s

Code Coverage
-----------------------------
  Function coverage:      0.418
  Visited lines:          1368
  Total lines:            2039
  Line coverage:          0.671
  Visited conditions:     169
  Total conditions:       332
  Condition coverage:     0.509

CPAchecker general statistics
-----------------------------
Number of program locations:     2623
Number of CFA edges:             2948
Number of relevant variables:    248
Number of functions:             98
Number of loops:                 24
Size of reached set:             2119
  Number of reached locations:   479 (18%)
    Avg states per location:     4
    Max states per location:     158 (at node N101)
  Number of reached functions:   41 (42%)
  Number of partitions:          2113
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1364 (after line 7031), Function main called from node N1333, stack depth 1 [7daa61f3], stack [main]])
  Number of target states:       0
  Size of final wait list        86

Time for analysis setup:          5.370s
  Time for loading CPAs:          0.948s
  Time for loading parser:        0.742s
  Time for CFA construction:      3.544s
    Time for parsing file(s):     1.161s
    Time for AST to CFA:          1.182s
    Time for CFA sanity check:    0.234s
    Time for post-processing:     0.805s
      Time for var class.:        0.344s
Time for Analysis:               24.895s
CPU time for analysis:           24.900s
Total time for CPAchecker:       30.269s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.143s

Time for Garbage Collector:       1.069s (in 84 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                105MB (   100 MiB) max;     58MB (    55 MiB) avg;    110MB (   105 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
