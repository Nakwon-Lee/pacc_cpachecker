scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--net--ethernet--realtek--atp.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_827lgmxl/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7017: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6798: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_tx_wake_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            104628 (32% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  100151 (96%)
  Because of loop head:            4462 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15 (0%)
  Times precision was empty:       103739 (99%)
  Times precision was {false}:     53 (0%)
  Times result was cached:         590 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      246 (0%)
  Times result was 'false':        86 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         10353
  BDD entailment checks:           3661
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          12
Number of abstraction locations:          15
Max number of predicates per location:    9
Avg number of predicates per location:    5
Total predicates per abstraction:         3669
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 12.27
Number of irrelevant predicates:          1992 (54%)
Number of preds handled by boolean abs:   834 (23%)
  Total number of models for allsat:      331
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.35

Time for post operator:                  3.650s
  Time for path formula creation:        3.297s
Time for strengthen operator:            0.559s
Time for prec operator:                  3.206s
  Time for abstraction:                  1.984s (Max:     0.027s, Count: 104628)
    Boolean abstraction:                 0.443s
    Solving time:                        0.298s (Max:     0.017s)
    Model enumeration time:              0.049s
    Time for BDD construction:           0.040s (Max:     0.008s)
Time for merge operator:                 0.121s
Time for coverage check:                 0.066s
  Time for BDD entailment checks:        0.051s
Total time for SMT solver (w/o itp):     0.347s

Number of path formula cache hits:   415616 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.360s

Total number of created targets for pointer analysis: 600
   Number of created targets for uf: *signed_int is 101


Number of BDD nodes:                               422
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         884 (count: 109316, min: 0, max: 94, avg: 0.01)
Time for BDD node cleanup:                             0.027s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.893s
  Time for transition matches:                         0.442s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       331054 (count: 331054, min: 1, max: 1, avg: 1.00) [1 x 331054]

CPA algorithm statistics
------------------------
Number of iterations:            249965
Max size of waitlist:            146
Average size of waitlist:        83
Number of computed successors:   258340
Max successors for one state:    2
Number of times merged:          3346
Number of times stopped:         6531
Number of times breaked:         15

Total time for CPA algorithm:        23.312s (Max:     3.825s)
  Time for choose from waitlist:      0.223s
  Time for precision adjustment:      6.396s
  Time for transfer relation:        13.416s
  Time for merge operator:            0.278s
  Time for stop operator:             0.613s
  Time for adding to reached set:     0.864s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   15
Avg. length of target path (in blocks):                1877 (count: 15, min: 121, max: 135, avg: 125.13)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.347s
  Counterexample analysis:                             0.514s (Max:     0.072s, Calls: 15)
    Refinement sat check:                              0.191s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.024s
  Precision update:                                    0.007s
  ARG update:                                          0.757s

Length of refined path (in blocks):                     186 (count: 15, min: 8, max: 15, avg: 12.40)
Number of affected states:                              159 (count: 15, min: 1, max: 14, avg: 10.60)
Length (states) of path with itp 'true':                 12 (count: 15, min: 0, max: 6, avg: 0.80)
Length (states) of path with itp non-trivial itp:       159 (count: 15, min: 1, max: 14, avg: 10.60)
Length (states) of path with itp 'false':                15 (count: 15, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          15 (count: 15, min: 0, max: 3, avg: 1.00)
Equal non-trivial interpolants along paths:             129 (count: 15, min: 0, max: 12, avg: 8.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15
Number of successful refinements:     15
Number of failed refinements:         0
Max. size of reached set before ref.: 20370
Max. size of reached set after ref.:  22
Avg. size of reached set before ref.: 16170.40
Avg. size of reached set after ref.:  5.53

Total time for CEGAR algorithm:      24.946s
Time for refinements:                 1.634s
Average time for refinement:          0.108s
Max time for refinement:              0.247s

Code Coverage
-----------------------------
  Function coverage:      0.459
  Visited lines:          1474
  Total lines:            2039
  Line coverage:          0.723
  Visited conditions:     181
  Total conditions:       332
  Condition coverage:     0.545

CPAchecker general statistics
-----------------------------
Number of program locations:     2623
Number of CFA edges:             2948
Number of relevant variables:    248
Number of functions:             98
Number of loops:                 24
Size of reached set:             9250
  Number of reached locations:   592 (23%)
    Avg states per location:     15
    Max states per location:     1130 (at node N101)
  Number of reached functions:   45 (46%)
  Number of partitions:          9242
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1354 (before line 7027), Function main called from node N1333, stack depth 1 [7daa61f3], stack [main]])
  Number of target states:       0
  Size of final wait list        100

Time for analysis setup:          5.324s
  Time for loading CPAs:          0.969s
  Time for loading parser:        0.684s
  Time for CFA construction:      3.529s
    Time for parsing file(s):     1.024s
    Time for AST to CFA:          1.220s
    Time for CFA sanity check:    0.222s
    Time for post-processing:     0.871s
      Time for var class.:        0.366s
Time for Analysis:               24.946s
CPU time for analysis:           24.940s
Total time for CPAchecker:       30.273s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.237s

Time for Garbage Collector:       2.059s (in 100 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                122MB (   117 MiB) max;     62MB (    59 MiB) avg;    129MB (   123 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
