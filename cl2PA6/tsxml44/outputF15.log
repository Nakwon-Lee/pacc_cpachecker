scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--net--ethernet--realtek--atp.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ub9olj86/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7017: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_tx_wake_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6798: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            990438 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  931917 (94%)
  Because of loop head:            57857 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         664 (0%)
  Times precision was empty:       166125 (17%)
  Times precision was {false}:     2548 (0%)
  Times result was cached:         794203 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      27562 (3%)
  Times result was 'false':        23036 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         421775
  BDD entailment checks:           172459
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          81
Number of abstraction locations:          257
Max number of predicates per location:    36
Avg number of predicates per location:    10
Total predicates per abstraction:         10276780
Max number of predicates per abstraction: 36
Avg number of predicates per abstraction: 341.31
Number of irrelevant predicates:          7165499 (70%)
Number of preds handled by boolean abs:   191713 (2%)
  Total number of models for allsat:      81135
  Max number of models for allsat:        45
  Avg number of models for allsat:        2.94

Time for post operator:                 32.688s
  Time for path formula creation:       30.872s
Time for strengthen operator:            3.175s
Time for prec operator:                335.504s
  Time for abstraction:                324.736s (Max:     1.042s, Count: 990438)
    Boolean abstraction:                34.943s
    Solving time:                       22.990s (Max:     0.016s)
    Model enumeration time:              6.758s
    Time for BDD construction:           2.158s (Max:     0.416s)
Time for merge operator:                 2.467s
Time for coverage check:                 0.284s
  Time for BDD entailment checks:        0.223s
Total time for SMT solver (w/o itp):    29.748s

Number of path formula cache hits:   3708576 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    20.080s

Total number of created targets for pointer analysis: 18423
   Number of created targets for uf: *signed_int is 359
   Number of created targets for uf: *unsigned_char is 837
   Number of created targets for uf: *unsigned_long_int is 397


Number of BDD nodes:                               69901
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       89056 (count: 532817, min: 0, max: 2178, avg: 0.17)
Time for BDD node cleanup:                             0.139s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.405s
  Time for transition matches:                         3.154s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.007s
Automaton transfers with branching:                0
Automaton transfer successors:                      3620052 (count: 3620052, min: 1, max: 1, avg: 1.00) [1 x 3620052]

CPA algorithm statistics
------------------------
Number of iterations:            2716388
Max size of waitlist:            306
Average size of waitlist:        81
Number of computed successors:   2957202
Max successors for one state:    2
Number of times merged:          124658
Number of times stopped:         166370
Number of times breaked:         664

Total time for CPA algorithm:       469.771s (Max:     7.703s)
  Time for choose from waitlist:      1.192s
  Time for precision adjustment:    355.751s
  Time for transfer relation:        91.960s
  Time for merge operator:            4.358s
  Time for stop operator:             3.516s
  Time for adding to reached set:     5.008s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   664
Avg. length of target path (in blocks):              439177 (count: 664, min: 147, max: 3018, avg: 661.41)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 418.800s
  Counterexample analysis:                           411.306s (Max:    11.785s, Calls: 664)
    Refinement sat check:                             21.464s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.215s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.864s
  Precision update:                                    0.789s
  ARG update:                                          4.186s

Length of refined path (in blocks):                  216353 (count: 663, min: 10, max: 2057, avg: 326.32)
Number of affected states:                           102831 (count: 663, min: 1, max: 1579, avg: 155.10)
Length (states) of path with itp 'true':             112859 (count: 663, min: 0, max: 1502, avg: 170.22)
Length (states) of path with itp non-trivial itp:    102831 (count: 663, min: 1, max: 1579, avg: 155.10)
Length (states) of path with itp 'false':               663 (count: 663, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1473 (count: 663, min: 0, max: 16, avg: 2.22)
Equal non-trivial interpolants along paths:          100695 (count: 663, min: 0, max: 1577, avg: 151.88)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                664
Number of successful refinements:     663
Number of failed refinements:         0
Max. size of reached set before ref.: 28528
Max. size of reached set after ref.:  13749
Avg. size of reached set before ref.: 5291.71
Avg. size of reached set after ref.:  1125.04

Total time for CEGAR algorithm:     894.907s
Time for refinements:               424.667s
Average time for refinement:          0.639s
Max time for refinement:             11.848s

Code Coverage
-----------------------------
  Function coverage:      0.786
  Visited lines:          1886
  Total lines:            2039
  Line coverage:          0.925
  Visited conditions:     291
  Total conditions:       332
  Condition coverage:     0.877

CPAchecker general statistics
-----------------------------
Number of program locations:     2623
Number of CFA edges:             2948
Number of relevant variables:    248
Number of functions:             98
Number of loops:                 24
Size of reached set:             17298
  Number of reached locations:   1073 (41%)
    Avg states per location:     16
    Max states per location:     1899 (at node N101)
  Number of reached functions:   77 (79%)
  Number of partitions:          17026
    Avg size of partitions:      1
    Max size of partitions:      21 (with key [N1354 (before line 7027), Function main called from node N1333, stack depth 1 [7daa61f3], stack [main]])
  Number of target states:       1
  Size of final wait list        195

Time for analysis setup:          5.387s
  Time for loading CPAs:          0.859s
  Time for loading parser:        0.720s
  Time for CFA construction:      3.657s
    Time for parsing file(s):     1.069s
    Time for AST to CFA:          1.278s
    Time for CFA sanity check:    0.225s
    Time for post-processing:     0.905s
      Time for var class.:        0.359s
Time for Analysis:              894.907s
CPU time for analysis:          894.790s
Total time for CPAchecker:      900.298s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              0.419s

Time for Garbage Collector:      24.562s (in 1582 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                397MB (   378 MiB) max;    205MB (   195 MiB) avg;    440MB (   419 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           479MB (   457 MiB) max;    304MB (   290 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8895MB (  8482 MiB) max;   8346MB (  7960 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
