scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--net--ethernet--realtek--atp.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_a2xdoldq/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7017: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_tx_wake_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6798: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            994889 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  936032 (94%)
  Because of loop head:            58192 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         665 (0%)
  Times precision was empty:       166635 (17%)
  Times precision was {false}:     2560 (0%)
  Times result was cached:         797551 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      28143 (3%)
  Times result was 'false':        23288 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         425723
  BDD entailment checks:           174613
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          81
Number of abstraction locations:          257
Max number of predicates per location:    36
Avg number of predicates per location:    10
Total predicates per abstraction:         10359234
Max number of predicates per abstraction: 36
Avg number of predicates per abstraction: 337.40
Number of irrelevant predicates:          7219178 (70%)
Number of preds handled by boolean abs:   197706 (2%)
  Total number of models for allsat:      83524
  Max number of models for allsat:        45
  Avg number of models for allsat:        2.97

Time for post operator:                 32.343s
  Time for path formula creation:       30.816s
Time for strengthen operator:            2.913s
Time for prec operator:                331.752s
  Time for abstraction:                321.078s (Max:     1.007s, Count: 994889)
    Boolean abstraction:                35.179s
    Solving time:                       23.391s (Max:     0.016s)
    Model enumeration time:              6.994s
    Time for BDD construction:           1.776s (Max:     0.025s)
Time for merge operator:                 2.594s
Time for coverage check:                 0.236s
  Time for BDD entailment checks:        0.174s
Total time for SMT solver (w/o itp):    30.385s

Number of path formula cache hits:   3723643 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    19.915s

Total number of created targets for pointer analysis: 18517
   Number of created targets for uf: *signed_int is 359
   Number of created targets for uf: *unsigned_char is 844
   Number of created targets for uf: *unsigned_long_int is 406


Number of BDD nodes:                               71774
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       91345 (count: 539540, min: 0, max: 1995, avg: 0.17)
Time for BDD node cleanup:                             0.142s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.418s
  Time for transition matches:                         2.961s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.012s
Automaton transfers with branching:                0
Automaton transfer successors:                      3638133 (count: 3638133, min: 1, max: 1, avg: 1.00) [1 x 3638133]

CPA algorithm statistics
------------------------
Number of iterations:            2729862
Max size of waitlist:            306
Average size of waitlist:        82
Number of computed successors:   2972330
Max successors for one state:    2
Number of times merged:          125555
Number of times stopped:         167507
Number of times breaked:         665

Total time for CPA algorithm:       463.931s (Max:     7.496s)
  Time for choose from waitlist:      1.150s
  Time for precision adjustment:    351.725s
  Time for transfer relation:        91.166s
  Time for merge operator:            4.340s
  Time for stop operator:             3.217s
  Time for adding to reached set:     4.794s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   665
Avg. length of target path (in blocks):              441770 (count: 665, min: 147, max: 3018, avg: 664.32)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 424.848s
  Counterexample analysis:                           417.507s (Max:    11.909s, Calls: 665)
    Refinement sat check:                             21.448s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.202s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.852s
  Precision update:                                    0.779s
  ARG update:                                          4.084s

Length of refined path (in blocks):                  217922 (count: 664, min: 10, max: 2057, avg: 328.20)
Number of affected states:                           103208 (count: 664, min: 1, max: 1579, avg: 155.43)
Length (states) of path with itp 'true':             114050 (count: 664, min: 0, max: 1502, avg: 171.76)
Length (states) of path with itp non-trivial itp:    103208 (count: 664, min: 1, max: 1579, avg: 155.43)
Length (states) of path with itp 'false':               664 (count: 664, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1487 (count: 664, min: 0, max: 16, avg: 2.24)
Equal non-trivial interpolants along paths:          101057 (count: 664, min: 0, max: 1577, avg: 152.19)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                665
Number of successful refinements:     664
Number of failed refinements:         0
Max. size of reached set before ref.: 28528
Max. size of reached set after ref.:  13749
Avg. size of reached set before ref.: 5311.35
Avg. size of reached set after ref.:  1130.29

Total time for CEGAR algorithm:     895.127s
Time for refinements:               430.710s
Average time for refinement:          0.647s
Max time for refinement:             12.024s

Code Coverage
-----------------------------
  Function coverage:      0.786
  Visited lines:          1885
  Total lines:            2039
  Line coverage:          0.924
  Visited conditions:     291
  Total conditions:       332
  Condition coverage:     0.877

CPAchecker general statistics
-----------------------------
Number of program locations:     2623
Number of CFA edges:             2948
Number of relevant variables:    248
Number of functions:             98
Number of loops:                 24
Size of reached set:             18353
  Number of reached locations:   1071 (41%)
    Avg states per location:     17
    Max states per location:     1752 (at node N102)
  Number of reached functions:   77 (79%)
  Number of partitions:          18083
    Avg size of partitions:      1
    Max size of partitions:      29 (with key [N1354 (before line 7027), Function main called from node N1333, stack depth 1 [7daa61f3], stack [main]])
  Number of target states:       1
  Size of final wait list        272

Time for analysis setup:          5.159s
  Time for loading CPAs:          0.882s
  Time for loading parser:        0.685s
  Time for CFA construction:      3.434s
    Time for parsing file(s):     0.993s
    Time for AST to CFA:          1.194s
    Time for CFA sanity check:    0.234s
    Time for post-processing:     0.836s
      Time for var class.:        0.356s
Time for Analysis:              895.127s
CPU time for analysis:          895.000s
Total time for CPAchecker:      900.291s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              0.476s

Time for Garbage Collector:      24.329s (in 1590 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                390MB (   372 MiB) max;    206MB (   197 MiB) avg;    432MB (   412 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           477MB (   455 MiB) max;    308MB (   294 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8961MB (  8546 MiB) max;   8428MB (  8037 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
