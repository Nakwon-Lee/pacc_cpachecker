scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--net--ethernet--amd--pcnet32.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2_bvl8zw/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

lines 6638-6653: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 6640: Dead code detected: __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6643: Dead code detected: __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6645: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 6649: Dead code detected: __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret__): "m" (cpu_number));
  goto ldv_44970;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_44970;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_44970;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_44970;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 6658-6673: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 6660: Dead code detected: __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6663: Dead code detected: __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6665: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 6669: Dead code detected: __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_44980;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_44980;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_44980;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_44980;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6680: Dead code detected: __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6683: Dead code detected: __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6689: Dead code detected: __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_44989;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_44989;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_44989;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_44989;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 6698-6713: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 6700: Dead code detected: __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6703: Dead code detected: __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6705: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 6709: Dead code detected: __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_44998;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_44998;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_44998;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_44998;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret__): "m" (cpu_number));
  goto ldv_44970;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_44970;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_44970;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_44970;
  default:
  __bad_percpu_size();
  }
  ldv_44970:
  pscr_ret__ = pfo_ret__;
  goto ldv_44976;
  case 2UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_44980;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_44980;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_44980;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_44980;
  default:
  __bad_percpu_size();
  }
  ldv_44980:
  pscr_ret__ = pfo_ret_____0;
  goto ldv_44976;
  case 4UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_44989;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_44989;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_44989;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_44989;
  default:
  __bad_percpu_size();
  }
  ldv_44989:
  pscr_ret__ = pfo_ret_____1;
  goto ldv_44976;
  case 8UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_44998;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_44998;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_44998;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_44998;
  default:
  __bad_percpu_size();
  }
  ldv_44998:
  pscr_ret__ = pfo_ret_____2;
  goto ldv_44976;
  default:
  __bad_size_call_parameter();
  goto ldv_44976;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8038: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9119: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 6051-6052: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6171: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6118: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6151: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6085: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10233: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10253: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10254: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10419: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10079: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10080: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8545: Function pointer *(a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8516: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9991: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10023: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10159: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10131: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10132: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10133: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10134: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7696: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7703: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7704: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7706: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7802: Function pointer *(a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7805: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7807: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7845: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7919: Function pointer *(a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7922: Function pointer *(a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7929: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7064: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9400: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9415: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9447: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9511: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9513: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9580: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9581: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9582: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9583: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9609: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9621: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9528: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9482: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9486: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9465: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9478: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9436: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8386: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8387: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8374: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9102: Function pointer *(a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9103: Function pointer *(a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9104: Function pointer *(a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9115: Function pointer *(a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9227: Function pointer *(a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9193: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8864: Function pointer *(a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8865: Function pointer *(a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8867: Function pointer *(a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8856: Function pointer *(a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8858: Function pointer *(a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8832: Function pointer *(a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9821: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9840: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10201: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10209: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10207: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10198: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7988: Function pointer *(a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7973: Function pointer *(a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7521: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9951: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8027: Function pointer *(a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9865: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 10922: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10926: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(40UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10928: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10932: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_init_zalloc(196UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10934: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10936: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_init_zalloc(12UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_7 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_7 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10625: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8439: Ignoring function call through function pointer *(a->read_csr): tmp___0 = (*(a->read_csr))(ioaddr, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mii_ethtool_gset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9865: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 0, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7988: Ignoring function call through function pointer *(a->write_bcr): (*(a->write_bcr))(ioaddr, i, (int)((lp->save_regs)[i + -4])); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7973: Ignoring function call through function pointer *(a->write_bcr): (*(a->write_bcr))(ioaddr, i, (int)(((unsigned int)tmp___0) ^ 16384U)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8474: Ignoring function call through function pointer *(a->read_csr): *tmp___3 = (*(a->read_csr))(ioaddr, 112); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8477: Ignoring function call through function pointer *(a->read_csr): *tmp___4 = (*(a->read_csr))(ioaddr, 114); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8464: Ignoring function call through function pointer *(a->read_csr): *tmp___2 = (*(a->read_csr))(ioaddr, i); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8027: Ignoring function call through function pointer *(a->write_csr): (*(a->write_csr))(ioaddr, 5, (int)((u16 )(((int)((short)csr5)) | 1))); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8483: Ignoring function call through function pointer *(a->read_bcr): *tmp___5 = (*(a->read_bcr))(ioaddr, i); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7521: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 0, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8065: Ignoring function call through function pointer *(a->read_csr): tmp___2 = (*(a->read_csr))(ioaddr, 5); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8545: Ignoring function call through function pointer *(a->write_csr): (*(a->write_csr))(ioaddr, 5, ((int)((u16 )csr5)) & 65534); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8499: Ignoring function call through function pointer *(a->read_bcr): *tmp___7 = (*(a->read_bcr))(ioaddr, i); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9790: Ignoring function call through function pointer *(lp->a->read_csr): tmp___0 = (*(lp->a->read_csr))(ioaddr, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10201: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 15, ((int)((u16 )csr15)) & 32767); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10198: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 15, (int)((u16 )(((int)((short)csr15)) | -32768))); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10209: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 0, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10207: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 5, ((int)((u16 )csr5)) & 65534); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function napi_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_free_attrs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9983: Ignoring function call through function pointer *(lp->a->read_csr): csr0 = (*(lp->a->read_csr))(ioaddr, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8516: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 33, (int)((u16 )(((int)((short)(j << 5))) | ((int)((short)i))))); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8519: Ignoring function call through function pointer *(lp->a->read_bcr): *tmp___8 = (*(lp->a->read_bcr))(ioaddr, 34); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9991: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 0, ((int)csr0) & 65456); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __local_bh_disable_ip to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7696: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 0, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7702: Ignoring function call through function pointer *(lp->a->reset): (*(lp->a->reset))(ioaddr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7703: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 4, 2325); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7704: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 20, 2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10131: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 8, 65535); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10132: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 9, 65535); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10133: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 10, 65535); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10134: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 11, 65535); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc32_le to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10159: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, i + 8, (int)(*(mcast_table + ((unsigned long)i)))); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __local_bh_enable_ip to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9399: Ignoring function call through function pointer *(lp->a->reset): (*(lp->a->reset))(ioaddr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9400: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 20, 2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9415: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 2, (int)val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9436: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 9, (int)val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9447: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 124, (int)val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9511: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 2, ((int)val) & 65533); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9513: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 32, ((int)val) & 65407); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9482: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 32, (int)(((unsigned int)tmp___8) | 128U)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9486: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 32, (int)val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9465: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 32, (int)(((unsigned int)tmp___6) | 128U)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9478: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 32, (int)val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10825: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 6051-6052: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)0L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9528: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 9, (int)((u16 )bcr9)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10023: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 3, (int)val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __napi_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10029: Ignoring function call through function pointer *(lp->a->read_csr): csr0 = (*(lp->a->read_csr))(ioaddr, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10079: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 0, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10080: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 20, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function enable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_mapping_error to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6171: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10233: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 33, (int)((u16 )(((int)((short)((phy_id & 31) << 5))) | (((int)((short)reg_num)) & 31)))); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10234: Ignoring function call through function pointer *(lp->a->read_bcr): val_out = (*(lp->a->read_bcr))(ioaddr, 34); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            37604 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  34697 (92%)
  Because of loop head:            2903 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4 (0%)
  Times precision was empty:       37322 (99%)
  Times precision was {false}:     34 (0%)
  Times result was cached:         238 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10 (0%)
  Times result was 'false':        13 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         12390
  BDD entailment checks:           3564
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       111
Number of predicates discovered:          2
Number of abstraction locations:          6
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         282
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 6.41
Number of irrelevant predicates:          207 (73%)
Number of preds handled by boolean abs:   10 (4%)
  Total number of models for allsat:      12
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.20

Time for post operator:                  9.333s
  Time for path formula creation:        8.785s
Time for strengthen operator:            0.338s
Time for prec operator:                  2.048s
  Time for abstraction:                  0.891s (Max:     0.033s, Count: 37604)
    Boolean abstraction:                 0.097s
    Solving time:                        0.079s (Max:     0.020s)
    Model enumeration time:              0.017s
    Time for BDD construction:           0.013s (Max:     0.006s)
Time for merge operator:                 0.366s
Time for coverage check:                 0.088s
  Time for BDD entailment checks:        0.071s
Total time for SMT solver (w/o itp):     0.096s

Number of path formula cache hits:   153269 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.248s

Total number of created targets for pointer analysis: 1008
   Number of created targets for uf: *unsigned_short_int is 5
   Number of created targets for uf: *signed_int is 145
   Number of created targets for uf: *unsigned_char is 97
   Number of created targets for uf: *unsigned_long_long_int is 2
   Number of created targets for uf: *unsigned_int is 8


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          26 (count: 41125, min: 0, max: 14, avg: 0.00)
Time for BDD node cleanup:                             0.034s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.626s
  Time for transition matches:                         0.285s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       159888 (count: 159888, min: 1, max: 1, avg: 1.00) [1 x 159888]

CPA algorithm statistics
------------------------
Number of iterations:            110784
Max size of waitlist:            1549
Average size of waitlist:        686
Number of computed successors:   123525
Max successors for one state:    2
Number of times merged:          4413
Number of times stopped:         7638
Number of times breaked:         4

Total time for CPA algorithm:        22.187s (Max:     8.707s)
  Time for choose from waitlist:      0.257s
  Time for precision adjustment:      4.124s
  Time for transfer relation:        14.335s
  Time for merge operator:            0.634s
  Time for stop operator:             0.553s
  Time for adding to reached set:     0.667s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                 441 (count: 4, min: 108, max: 111, avg: 110.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.848s
  Counterexample analysis:                             0.230s (Max:     0.080s, Calls: 4)
    Refinement sat check:                              0.116s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.002s
  ARG update:                                          0.575s

Length of refined path (in blocks):                     371 (count: 4, min: 92, max: 95, avg: 92.75)
Number of affected states:                                7 (count: 4, min: 1, max: 4, avg: 1.75)
Length (states) of path with itp 'true':                360 (count: 4, min: 90, max: 90, avg: 90.00)
Length (states) of path with itp non-trivial itp:         7 (count: 4, min: 1, max: 4, avg: 1.75)
Length (states) of path with itp 'false':                 4 (count: 4, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               3 (count: 4, min: 0, max: 3, avg: 0.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 35619
Max. size of reached set after ref.:  214
Avg. size of reached set before ref.: 27614.00
Avg. size of reached set after ref.:  214.00

Total time for CEGAR algorithm:      23.280s
Time for refinements:                 1.093s
Average time for refinement:          0.273s
Max time for refinement:              0.388s

Code Coverage
-----------------------------
  Function coverage:      0.493
  Visited lines:          2486
  Total lines:            4491
  Line coverage:          0.554
  Visited conditions:     679
  Total conditions:       1708
  Condition coverage:     0.398

CPAchecker general statistics
-----------------------------
Number of program locations:     6994
Number of CFA edges:             8398
Number of relevant variables:    835
Number of functions:             203
Number of loops:                 57
Size of reached set:             6275
  Number of reached locations:   1654 (24%)
    Avg states per location:     3
    Max states per location:     105 (at node N506)
  Number of reached functions:   100 (49%)
  Number of partitions:          6273
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4536 (before line 10988), Function main called from node N4407, stack depth 1 [684e8c9d], stack [main]])
  Number of target states:       0
  Size of final wait list        314

Time for analysis setup:          6.976s
  Time for loading CPAs:          0.995s
  Time for loading parser:        0.737s
  Time for CFA construction:      5.094s
    Time for parsing file(s):     1.098s
    Time for AST to CFA:          1.796s
    Time for CFA sanity check:    0.426s
    Time for post-processing:     1.560s
      Time for var class.:        0.693s
Time for Analysis:               23.280s
CPU time for analysis:           23.280s
Total time for CPAchecker:       30.261s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.230s

Time for Garbage Collector:       1.483s (in 53 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                121MB (   115 MiB) max;     68MB (    65 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           130MB (   124 MiB) max;    128MB (   122 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8070MB (  7696 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
