scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--net--ethernet--amd--pcnet32.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lt5ar5fx/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

lines 6638-6653: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 6640: Dead code detected: __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6643: Dead code detected: __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6645: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 6649: Dead code detected: __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret__): "m" (cpu_number));
  goto ldv_44970;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_44970;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_44970;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_44970;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 6658-6673: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 6660: Dead code detected: __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6663: Dead code detected: __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6665: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 6669: Dead code detected: __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_44980;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_44980;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_44980;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_44980;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6680: Dead code detected: __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6683: Dead code detected: __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6689: Dead code detected: __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_44989;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_44989;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_44989;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_44989;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 6698-6713: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 6700: Dead code detected: __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6703: Dead code detected: __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6705: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 6709: Dead code detected: __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_44998;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_44998;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_44998;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_44998;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret__): "m" (cpu_number));
  goto ldv_44970;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_44970;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_44970;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_44970;
  default:
  __bad_percpu_size();
  }
  ldv_44970:
  pscr_ret__ = pfo_ret__;
  goto ldv_44976;
  case 2UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_44980;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_44980;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_44980;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_44980;
  default:
  __bad_percpu_size();
  }
  ldv_44980:
  pscr_ret__ = pfo_ret_____0;
  goto ldv_44976;
  case 4UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_44989;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_44989;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_44989;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_44989;
  default:
  __bad_percpu_size();
  }
  ldv_44989:
  pscr_ret__ = pfo_ret_____1;
  goto ldv_44976;
  case 8UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_44998;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_44998;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_44998;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_44998;
  default:
  __bad_percpu_size();
  }
  ldv_44998:
  pscr_ret__ = pfo_ret_____2;
  goto ldv_44976;
  default:
  __bad_size_call_parameter();
  goto ldv_44976;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8038: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9119: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 6051-6052: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6171: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6118: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6151: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6085: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10233: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10253: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10254: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10419: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10079: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10080: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8545: Function pointer *(a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8516: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9991: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10023: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10159: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10131: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10132: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10133: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10134: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7696: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7703: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7704: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7706: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7802: Function pointer *(a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7805: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7807: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7845: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7919: Function pointer *(a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7922: Function pointer *(a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7929: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7064: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9400: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9415: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9447: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9511: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9513: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9580: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9581: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9582: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9583: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9609: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9621: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9528: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9482: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9486: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9465: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9478: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9436: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8386: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8387: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8374: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9102: Function pointer *(a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9103: Function pointer *(a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9104: Function pointer *(a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9115: Function pointer *(a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9227: Function pointer *(a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9193: Function pointer *(lp->a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8864: Function pointer *(a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8865: Function pointer *(a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8867: Function pointer *(a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8856: Function pointer *(a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8858: Function pointer *(a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8832: Function pointer *(a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9821: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9840: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10201: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10209: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10207: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10198: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7988: Function pointer *(a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7973: Function pointer *(a->write_bcr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7521: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9951: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8027: Function pointer *(a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9865: Function pointer *(lp->a->write_csr) with type void (*)(unsigned long, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 10922: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10926: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(40UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10928: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10932: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_init_zalloc(196UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10934: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10936: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_init_zalloc(12UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_7 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_7 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10625: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7988: Ignoring function call through function pointer *(a->write_bcr): (*(a->write_bcr))(ioaddr, i, (int)((lp->save_regs)[i + -4])); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7973: Ignoring function call through function pointer *(a->write_bcr): (*(a->write_bcr))(ioaddr, i, (int)(((unsigned int)tmp___0) ^ 16384U)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8439: Ignoring function call through function pointer *(a->read_csr): tmp___0 = (*(a->read_csr))(ioaddr, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8474: Ignoring function call through function pointer *(a->read_csr): *tmp___3 = (*(a->read_csr))(ioaddr, 112); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8477: Ignoring function call through function pointer *(a->read_csr): *tmp___4 = (*(a->read_csr))(ioaddr, 114); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8464: Ignoring function call through function pointer *(a->read_csr): *tmp___2 = (*(a->read_csr))(ioaddr, i); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8483: Ignoring function call through function pointer *(a->read_bcr): *tmp___5 = (*(a->read_bcr))(ioaddr, i); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8545: Ignoring function call through function pointer *(a->write_csr): (*(a->write_csr))(ioaddr, 5, ((int)((u16 )csr5)) & 65534); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8499: Ignoring function call through function pointer *(a->read_bcr): *tmp___7 = (*(a->read_bcr))(ioaddr, i); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8516: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 33, (int)((u16 )(((int)((short)(j << 5))) | ((int)((short)i))))); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8519: Ignoring function call through function pointer *(lp->a->read_bcr): *tmp___8 = (*(lp->a->read_bcr))(ioaddr, 34); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mii_ethtool_gset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9865: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 0, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7521: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 0, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8027: Ignoring function call through function pointer *(a->write_csr): (*(a->write_csr))(ioaddr, 5, (int)((u16 )(((int)((short)csr5)) | 1))); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8065: Ignoring function call through function pointer *(a->read_csr): tmp___2 = (*(a->read_csr))(ioaddr, 5); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9790: Ignoring function call through function pointer *(lp->a->read_csr): tmp___0 = (*(lp->a->read_csr))(ioaddr, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10201: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 15, ((int)((u16 )csr15)) & 32767); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10198: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 15, (int)((u16 )(((int)((short)csr15)) | -32768))); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10209: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 0, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10207: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 5, ((int)((u16 )csr5)) & 65534); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_free_attrs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function napi_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10131: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 8, 65535); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10132: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 9, 65535); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10133: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 10, 65535); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10134: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 11, 65535); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function crc32_le to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10159: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, i + 8, (int)(*(mcast_table + ((unsigned long)i)))); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9399: Ignoring function call through function pointer *(lp->a->reset): (*(lp->a->reset))(ioaddr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9400: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 20, 2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9415: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 2, (int)val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9436: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 9, (int)val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9447: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 124, (int)val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9511: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 2, ((int)val) & 65533); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9513: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 32, ((int)val) & 65407); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9482: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 32, (int)(((unsigned int)tmp___8) | 128U)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9486: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 32, (int)val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9465: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 32, (int)(((unsigned int)tmp___6) | 128U)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9478: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 32, (int)val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9528: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 9, (int)((u16 )bcr9)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10233: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 33, (int)((u16 )(((int)((short)((phy_id & 31) << 5))) | (((int)((short)reg_num)) & 31)))); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10234: Ignoring function call through function pointer *(lp->a->read_bcr): val_out = (*(lp->a->read_bcr))(ioaddr, 34); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10253: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 33, (int)((u16 )(((int)((short)((phy_id & 31) << 5))) | (((int)((short)reg_num)) & 31)))); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10254: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 34, (int)((u16 )val)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mii_ethtool_sset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9621: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 20, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9580: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 1, (int)__CPAchecker_TMP_13); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9581: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 2, (int)((u16 )((lp->init_dma_addr) >> 16))); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9582: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 4, 2325); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9583: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 0, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10825: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7696: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 0, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7702: Ignoring function call through function pointer *(lp->a->reset): (*(lp->a->reset))(ioaddr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7703: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 4, 2325); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7704: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 20, 2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __local_bh_disable_ip to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10079: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 0, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10080: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 20, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_tx_wake_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7064: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 3, (int)val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9594: Ignoring function call through function pointer *(lp->a->read_csr): tmp___13 = (*(lp->a->read_csr))(ioaddr, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9609: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 0, 66); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9983: Ignoring function call through function pointer *(lp->a->read_csr): csr0 = (*(lp->a->read_csr))(ioaddr, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9991: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 0, ((int)csr0) & 65456); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9821: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 0, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9825: Ignoring function call through function pointer *(lp->a->read_csr): tmp___2 = (*(lp->a->read_csr))(ioaddr, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9840: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 0, (int)((u16 )csr0_bits)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __local_bh_enable_ip to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10361: Ignoring function call through function pointer *(lp->a->read_bcr): tmp___1 = (*(lp->a->read_bcr))(ioaddr, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mii_link_ok to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10411: Ignoring function call through function pointer *(lp->a->read_bcr): tmp___3 = (*(lp->a->read_bcr))(dev->base_addr, 9); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10419: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(dev->base_addr, 9, (int)((u16 )bcr9)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function enable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8759: Ignoring function call through function pointer *(a->read_csr): tmp___3 = (*(a->read_csr))(ioaddr, 88); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8760: Ignoring function call through function pointer *(a->read_csr): tmp___4 = (*(a->read_csr))(ioaddr, 89); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8819: Ignoring function call through function pointer *(a->read_bcr): tmp___5 = (*(a->read_bcr))(ioaddr, 49); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8832: Ignoring function call through function pointer *(a->write_bcr): (*(a->write_bcr))(ioaddr, 49, (int)((u16 )media)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8856: Ignoring function call through function pointer *(a->write_bcr): (*(a->write_bcr))(ioaddr, 18, (int)(((unsigned int)tmp___6) | 2144U)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8857: Ignoring function call through function pointer *(a->read_csr): (*(a->read_csr))(ioaddr, 80); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8858: Ignoring function call through function pointer *(a->write_csr): (*(a->write_csr))(ioaddr, 80, 3072); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8864: Ignoring function call through function pointer *(a->write_bcr): (*(a->write_bcr))(ioaddr, 25, 23); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8865: Ignoring function call through function pointer *(a->write_bcr): (*(a->write_bcr))(ioaddr, 26, 12); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8867: Ignoring function call through function pointer *(a->write_bcr): (*(a->write_bcr))(ioaddr, 18, (int)(((unsigned int)tmp___7) | 2048U)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8891: Ignoring function call through function pointer *(a->read_csr): tmp___8 = (*(a->read_csr))(ioaddr, i + 12); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8960: Ignoring function call through function pointer *(a->read_csr): tmp___16 = (*(a->read_csr))(ioaddr, 80); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8978: Ignoring function call through function pointer *(a->read_bcr): tmp___17 = (*(a->read_bcr))(ioaddr, 18); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9001: Ignoring function call through function pointer *(a->read_bcr): tmp___18 = (*(a->read_bcr))(ioaddr, 25); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9004: Ignoring function call through function pointer *(a->read_bcr): tmp___19 = (*(a->read_bcr))(ioaddr, 26); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9007: Ignoring function call through function pointer *(a->read_bcr): tmp___20 = (*(a->read_bcr))(ioaddr, 27); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_alloc_attrs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_napi_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9102: Ignoring function call through function pointer *(a->write_bcr): (*(a->write_bcr))(ioaddr, 20, 2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9103: Ignoring function call through function pointer *(a->write_csr): (*(a->write_csr))(ioaddr, 1, (int)__CPAchecker_TMP_11); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9104: Ignoring function call through function pointer *(a->write_csr): (*(a->write_csr))(ioaddr, 2, (int)((u16 )((lp->init_dma_addr) >> 16))); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function probe_irq_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9115: Ignoring function call through function pointer *(a->write_csr): (*(a->write_csr))(ioaddr, 0, 65); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function probe_irq_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9152: Ignoring function call through function pointer *(lp->a->read_bcr): tmp___27 = (*(lp->a->read_bcr))(ioaddr, 33); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9193: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 33, ((int)((u16 )(lp->mii_if.phy_id))) << 5U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 6051-6052: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)0L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10023: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 3, (int)val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __napi_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10029: Ignoring function call through function pointer *(lp->a->read_csr): csr0 = (*(lp->a->read_csr))(ioaddr, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9227: Ignoring function call through function pointer *(a->write_bcr): (*(a->write_bcr))(ioaddr, 2, (int)(((unsigned int)tmp___31) | 4096U)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_mapping_error to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6171: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9951: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 0, 72); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7706: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 0, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7800: Ignoring function call through function pointer *(a->read_bcr): tmp___8 = (*(a->read_bcr))(ioaddr, 32); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7802: Ignoring function call through function pointer *(a->write_bcr): (*(a->write_bcr))(ioaddr, 32, (int)((u16 )(((int)((short)x)) | 2))); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7803: Ignoring function call through function pointer *(a->read_csr): tmp___9 = (*(a->read_csr))(ioaddr, 15); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7805: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 15, (int)((u16 )(((int)((short)x)) | 68))); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7807: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 0, 2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7845: Ignoring function call through function pointer *(lp->a->write_csr): (*(lp->a->write_csr))(ioaddr, 0, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7917: Ignoring function call through function pointer *(a->read_csr): tmp___10 = (*(a->read_csr))(ioaddr, 15); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7919: Ignoring function call through function pointer *(a->write_csr): (*(a->write_csr))(ioaddr, 15, ((int)((u16 )x)) & 65467); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7920: Ignoring function call through function pointer *(a->read_bcr): tmp___11 = (*(a->read_bcr))(ioaddr, 32); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7922: Ignoring function call through function pointer *(a->write_bcr): (*(a->write_bcr))(ioaddr, 32, ((int)((u16 )x)) & 65533); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7929: Ignoring function call through function pointer *(lp->a->write_bcr): (*(lp->a->write_bcr))(ioaddr, 20, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4174611 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3843979 (92%)
  Because of loop head:            330596 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36 (0%)
  Times precision was empty:       4167237 (100%)
  Times precision was {false}:     913 (0%)
  Times result was cached:         6244 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      217 (0%)
  Times result was 'false':        1079 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1540976
  BDD entailment checks:           757878
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       111
Number of predicates discovered:          6
Number of abstraction locations:          31
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         14846
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 13.14
Number of irrelevant predicates:          11211 (76%)
Number of preds handled by boolean abs:   513 (3%)
  Total number of models for allsat:      757
  Max number of models for allsat:        32
  Avg number of models for allsat:        3.49

Time for post operator:                311.185s
  Time for path formula creation:      300.143s
Time for strengthen operator:           16.175s
Time for prec operator:                 74.123s
  Time for abstraction:                 19.509s (Max:     4.561s, Count: 4174611)
    Boolean abstraction:                 0.989s
    Solving time:                        0.724s (Max:     0.020s)
    Model enumeration time:              0.446s
    Time for BDD construction:           0.026s (Max:     0.002s)
Time for merge operator:                12.017s
Time for coverage check:                 0.675s
  Time for BDD entailment checks:        0.437s
Total time for SMT solver (w/o itp):     1.170s

Number of path formula cache hits:   17896781 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   189.251s

Total number of created targets for pointer analysis: 188835
   Number of created targets for uf: *unsigned_short_int is 62
   Number of created targets for uf: *signed_int is 1393
   Number of created targets for uf: *unsigned_char is 1905
   Number of created targets for uf: *(unsigned_char)* is 59
   Number of created targets for uf: *unsigned_long_long_int is 291
   Number of created targets for uf: *unsigned_int is 407


Number of BDD nodes:                               415
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         505 (count: 4931231, min: 0, max: 55, avg: 0.00)
Time for BDD node cleanup:                             0.705s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 30.806s
  Time for transition matches:                        16.794s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     17082109 (count: 17082109, min: 1, max: 1, avg: 1.00) [1 x 17082109]

CPA algorithm statistics
------------------------
Number of iterations:            11823920
Max size of waitlist:            12800
Average size of waitlist:        3789
Number of computed successors:   13034215
Max successors for one state:    2
Number of times merged:          391549
Number of times stopped:         1142203
Number of times breaked:         36

Total time for CPA algorithm:       848.946s (Max:    40.666s)
  Time for choose from waitlist:      7.297s
  Time for precision adjustment:    188.063s
  Time for transfer relation:       545.576s
  Time for merge operator:           18.912s
  Time for stop operator:            16.842s
  Time for adding to reached set:    35.396s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                4339 (count: 36, min: 115, max: 125, avg: 120.53)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  35.083s
  Counterexample analysis:                             1.174s (Max:     0.067s, Calls: 36)
    Refinement sat check:                              0.676s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.011s
  ARG update:                                         33.840s

Length of refined path (in blocks):                    3377 (count: 36, min: 92, max: 97, avg: 93.81)
Number of affected states:                              101 (count: 36, min: 1, max: 6, avg: 2.81)
Length (states) of path with itp 'true':               3240 (count: 36, min: 90, max: 90, avg: 90.00)
Length (states) of path with itp non-trivial itp:       101 (count: 36, min: 1, max: 6, avg: 2.81)
Length (states) of path with itp 'false':                36 (count: 36, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 36, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              65 (count: 36, min: 0, max: 5, avg: 1.81)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     36
Number of failed refinements:         0
Max. size of reached set before ref.: 512251
Max. size of reached set after ref.:  214
Avg. size of reached set before ref.: 329563.56
Avg. size of reached set after ref.:  214.00

Total time for CEGAR algorithm:     893.019s
Time for refinements:                44.066s
Average time for refinement:          1.224s
Max time for refinement:              3.249s

Code Coverage
-----------------------------
  Function coverage:      0.547
  Visited lines:          2752
  Total lines:            4491
  Line coverage:          0.613
  Visited conditions:     849
  Total conditions:       1708
  Condition coverage:     0.497

CPAchecker general statistics
-----------------------------
Number of program locations:     6994
Number of CFA edges:             8398
Number of relevant variables:    835
Number of functions:             203
Number of loops:                 57
Size of reached set:             34349
  Number of reached locations:   2049 (29%)
    Avg states per location:     16
    Max states per location:     710 (at node N139)
  Number of reached functions:   111 (55%)
  Number of partitions:          34337
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N4536 (before line 10988), Function main called from node N4407, stack depth 1 [684e8c9d], stack [main]])
  Number of target states:       0
  Size of final wait list        1602

Time for analysis setup:          7.220s
  Time for loading CPAs:          1.112s
  Time for loading parser:        0.653s
  Time for CFA construction:      5.305s
    Time for parsing file(s):     1.237s
    Time for AST to CFA:          1.741s
    Time for CFA sanity check:    0.415s
    Time for post-processing:     1.676s
      Time for var class.:        0.767s
Time for Analysis:              893.019s
CPU time for analysis:          892.980s
Total time for CPAchecker:      900.242s
Total CPU time for CPAchecker:  900.190s
Time for statistics:              0.599s

Time for Garbage Collector:     137.251s (in 447 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2839MB (  2708 MiB) max;   1109MB (  1057 MiB) avg;   2922MB (  2787 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          2957MB (  2820 MiB) max;   1614MB (  1539 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8083MB (  7708 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
