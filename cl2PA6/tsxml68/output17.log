scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--video--fbdev--udlfb.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qe4a5m0s/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

lines 4144-4145: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 4148-4149: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 4156-4157: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5596;
  case 2UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5596;
  case 4UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5596;
  case 8UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5596;
  default:
  __xadd_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8144: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7638: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7640: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7648: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_init_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7652: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_dealloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modedb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_alloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8821 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7204 (82%)
  Because of loop head:            1516 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         101 (1%)
  Times precision was empty:       4621 (52%)
  Times precision was {false}:     69 (1%)
  Times result was cached:         3881 (44%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      250 (3%)
  Times result was 'false':        700 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         12371
  BDD entailment checks:           3931
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       94
Number of predicates discovered:          6
Number of abstraction locations:          68
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         9336
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 29.27
Number of irrelevant predicates:          3143 (34%)
Number of preds handled by boolean abs:   366 (4%)
  Total number of models for allsat:      258
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  7.333s
  Time for path formula creation:        7.199s
Time for strengthen operator:            0.144s
Time for prec operator:                  4.819s
  Time for abstraction:                  4.374s (Max:     0.233s, Count: 8821)
    Boolean abstraction:                 1.131s
    Solving time:                        1.331s (Max:     0.202s)
    Model enumeration time:              0.093s
    Time for BDD construction:           0.083s (Max:     0.013s)
Time for merge operator:                 0.564s
Time for coverage check:                 0.036s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     1.424s

Number of path formula cache hits:   56815 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.358s

Total number of created targets for pointer analysis: 11374
   Number of created targets for uf: *signed_int is 7
   Number of created targets for uf: *(char)* is 3
   Number of created targets for uf: *(struct_usb_device)* is 2
   Number of created targets for uf: *unsigned_char is 33
   Number of created targets for uf: *(struct_urb)* is 3
   Number of created targets for uf: *(struct_list_head)* is 16
   Number of created targets for uf: *(unsigned_char)* is 3
   Number of created targets for uf: *unsigned_int is 53
   Number of created targets for uf: *char is 317
   Number of created targets for uf: *(struct_device)* is 2
   Number of created targets for uf: *unsigned_long_int is 225


Number of BDD nodes:                               233
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         537 (count: 10656, min: 0, max: 143, avg: 0.05)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.536s
  Time for transition matches:                         0.209s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                        73173 (count: 73173, min: 1, max: 1, avg: 1.00) [1 x 73173]

CPA algorithm statistics
------------------------
Number of iterations:            42584
Max size of waitlist:            70
Average size of waitlist:        61
Number of computed successors:   50139
Max successors for one state:    2
Number of times merged:          4220
Number of times stopped:         6919
Number of times breaked:         101

Total time for CPA algorithm:        17.806s (Max:     2.141s)
  Time for choose from waitlist:      0.093s
  Time for precision adjustment:      5.808s
  Time for transfer relation:         9.673s
  Time for merge operator:            0.868s
  Time for stop operator:             0.266s
  Time for adding to reached set:     0.356s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   101
Avg. length of target path (in blocks):                8410 (count: 101, min: 74, max: 89, avg: 83.27)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.074s
  Counterexample analysis:                             4.487s (Max:     0.086s, Calls: 101)
    Refinement sat check:                              2.735s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.075s
  Precision update:                                    0.093s
  ARG update:                                          0.236s

Length of refined path (in blocks):                    8145 (count: 101, min: 73, max: 88, avg: 80.64)
Number of affected states:                              972 (count: 101, min: 2, max: 72, avg: 9.62)
Length (states) of path with itp 'true':               7072 (count: 101, min: 0, max: 72, avg: 70.02)
Length (states) of path with itp non-trivial itp:       972 (count: 101, min: 2, max: 72, avg: 9.62)
Length (states) of path with itp 'false':               101 (count: 101, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 101, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             871 (count: 101, min: 1, max: 71, avg: 8.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                101
Number of successful refinements:     101
Number of failed refinements:         0
Max. size of reached set before ref.: 4219
Max. size of reached set after ref.:  3807
Avg. size of reached set before ref.: 2784.85
Avg. size of reached set after ref.:  2436.47

Total time for CEGAR algorithm:      23.709s
Time for refinements:                 5.703s
Average time for refinement:          0.056s
Max time for refinement:              0.131s

Code Coverage
-----------------------------
  Function coverage:      0.454
  Visited lines:          2025
  Total lines:            3323
  Line coverage:          0.609
  Visited conditions:     421
  Total conditions:       936
  Condition coverage:     0.450

CPAchecker general statistics
-----------------------------
Number of program locations:     4751
Number of CFA edges:             5408
Number of relevant variables:    765
Number of functions:             207
Number of loops:                 25
Size of reached set:             7334
  Number of reached locations:   1172 (25%)
    Avg states per location:     6
    Max states per location:     106 (at node N399)
  Number of reached functions:   94 (45%)
  Number of partitions:          7294
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1616 (before line 6058), Function dlfb_setup_modes called from node N2099, stack depth 4 [52bd9a27], stack [main, invoke_work_1, dlfb_init_framebuffer_work, dlfb_setup_modes]])
  Number of target states:       0
  Size of final wait list        57

Time for analysis setup:          6.536s
  Time for loading CPAs:          1.136s
  Time for loading parser:        0.714s
  Time for CFA construction:      4.534s
    Time for parsing file(s):     1.146s
    Time for AST to CFA:          1.615s
    Time for CFA sanity check:    0.372s
    Time for post-processing:     1.190s
      Time for var class.:        0.585s
Time for Analysis:               23.709s
CPU time for analysis:           23.710s
Total time for CPAchecker:       30.251s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.232s

Time for Garbage Collector:       0.558s (in 37 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 82MB (    78 MiB) max;     52MB (    50 MiB) avg;     85MB (    81 MiB) peak
Used non-heap memory:             48MB (    46 MiB) max;     41MB (    39 MiB) avg;     48MB (    46 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        49MB (    47 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8089MB (  7714 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
