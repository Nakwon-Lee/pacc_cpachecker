scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--mmc--host--rtsx_pci_sdmmc.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zjjp_74i/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5997: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_dma_unmap_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_dma_map_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_start_run to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_exist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_request_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_exclusive_check to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_switch_clock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_write_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_add_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_send_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_send_cmd_no_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_dma_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_copy_to_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_write_ppbuf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_read_ppbuf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_copy_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_power_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_pull_ctl_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_power_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_switch_output_voltage to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_read_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_alloc_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_free_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_add_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            29087 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  27059 (93%)
  Because of loop head:            2021 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7 (0%)
  Times precision was empty:       26738 (92%)
  Times precision was {false}:     254 (1%)
  Times result was cached:         2045 (7%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      50 (0%)
  Times result was 'false':        58 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         34400
  BDD entailment checks:           7268
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       33
Number of predicates discovered:          3
Number of abstraction locations:          33
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         2430
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 7.99
Number of irrelevant predicates:          1904 (78%)
Number of preds handled by boolean abs:   52 (2%)
  Total number of models for allsat:      50
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  8.904s
  Time for path formula creation:        8.580s
Time for strengthen operator:            0.327s
Time for prec operator:                  3.052s
  Time for abstraction:                  1.939s (Max:     0.014s, Count: 29087)
    Boolean abstraction:                 0.086s
    Solving time:                        0.242s (Max:     0.012s)
    Model enumeration time:              0.006s
    Time for BDD construction:           0.018s (Max:     0.008s)
Time for merge operator:                 0.388s
Time for coverage check:                 0.054s
  Time for BDD entailment checks:        0.044s
Total time for SMT solver (w/o itp):     0.248s

Number of path formula cache hits:   178284 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.974s

Total number of created targets for pointer analysis: 44
   Number of created targets for uf: *unsigned_int is 5


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         109 (count: 35592, min: 0, max: 51, avg: 0.00)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.805s
  Time for transition matches:                         0.417s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       193842 (count: 193842, min: 1, max: 1, avg: 1.00) [1 x 193842]

CPA algorithm statistics
------------------------
Number of iterations:            126265
Max size of waitlist:            37
Average size of waitlist:        22
Number of computed successors:   147085
Max successors for one state:    2
Number of times merged:          13566
Number of times stopped:         20637
Number of times breaked:         7

Total time for CPA algorithm:        23.905s (Max:     6.999s)
  Time for choose from waitlist:      0.270s
  Time for precision adjustment:      5.542s
  Time for transfer relation:        14.161s
  Time for merge operator:            0.949s
  Time for stop operator:             0.679s
  Time for adding to reached set:     0.648s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                 216 (count: 7, min: 24, max: 37, avg: 30.86)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.695s
  Counterexample analysis:                             0.131s (Max:     0.025s, Calls: 7)
    Refinement sat check:                              0.107s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.027s
  Precision update:                                    0.005s
  ARG update:                                          0.514s

Length of refined path (in blocks):                     185 (count: 7, min: 10, max: 36, avg: 26.43)
Number of affected states:                              170 (count: 7, min: 1, max: 35, avg: 24.29)
Length (states) of path with itp 'true':                  8 (count: 7, min: 0, max: 8, avg: 1.14)
Length (states) of path with itp non-trivial itp:       170 (count: 7, min: 1, max: 35, avg: 24.29)
Length (states) of path with itp 'false':                 7 (count: 7, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             163 (count: 7, min: 0, max: 34, avg: 23.29)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 19081
Max. size of reached set after ref.:  20
Avg. size of reached set before ref.: 16602.43
Avg. size of reached set after ref.:  5.43

Total time for CEGAR algorithm:      24.808s
Time for refinements:                 0.902s
Average time for refinement:          0.128s
Max time for refinement:              0.180s

Code Coverage
-----------------------------
  Function coverage:      0.518
  Visited lines:          1616
  Total lines:            2459
  Line coverage:          0.657
  Visited conditions:     322
  Total conditions:       596
  Condition coverage:     0.540

CPAchecker general statistics
-----------------------------
Number of program locations:     3315
Number of CFA edges:             3699
Number of relevant variables:    439
Number of functions:             110
Number of loops:                 12
Size of reached set:             10211
  Number of reached locations:   828 (25%)
    Avg states per location:     12
    Max states per location:     251 (at node N346)
  Number of reached functions:   57 (52%)
  Number of partitions:          10198
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1386 (before line 5633), Function sd_request called from node N2181, stack depth 3 [11ea4084], stack [main, invoke_work_1, sd_request]])
  Number of target states:       0
  Size of final wait list        27

Time for analysis setup:          5.471s
  Time for loading CPAs:          0.907s
  Time for loading parser:        0.625s
  Time for CFA construction:      3.796s
    Time for parsing file(s):     0.984s
    Time for AST to CFA:          1.468s
    Time for CFA sanity check:    0.277s
    Time for post-processing:     0.940s
      Time for var class.:        0.424s
Time for Analysis:               24.808s
CPU time for analysis:           24.810s
Total time for CPAchecker:       30.296s
Total CPU time for CPAchecker:   30.280s
Time for statistics:              0.268s

Time for Garbage Collector:       1.445s (in 53 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                120MB (   114 MiB) max;     64MB (    61 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
