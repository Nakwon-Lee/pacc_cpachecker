scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--mmc--host--rtsx_pci_sdmmc.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fife3ylr/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5997: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_request_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_exclusive_check to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_start_run to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_switch_clock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_write_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_add_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_send_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_send_cmd_no_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_dma_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_copy_to_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_write_ppbuf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_read_ppbuf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_copy_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_dma_unmap_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_alloc_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_dma_map_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_exist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_free_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_switch_output_voltage to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_read_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_pull_ctl_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_power_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_power_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_add_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_complete_unfinished_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2992675 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2811818 (94%)
  Because of loop head:            180712 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         145 (0%)
  Times precision was empty:       440313 (15%)
  Times precision was {false}:     1552 (0%)
  Times result was cached:         2548986 (85%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1824 (0%)
  Times result was 'false':        64829 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         3302396
  BDD entailment checks:           711412
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       33
Number of predicates discovered:          10
Number of abstraction locations:          172
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         5482765
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 1624.04
Number of irrelevant predicates:          2830724 (52%)
Number of preds handled by boolean abs:   2440 (0%)
  Total number of models for allsat:      1835
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.01

Time for post operator:                114.408s
  Time for path formula creation:      105.319s
Time for strengthen operator:           15.270s
Time for prec operator:                309.180s
  Time for abstraction:                268.666s (Max:     5.206s, Count: 2992675)
    Boolean abstraction:                 1.295s
    Solving time:                        1.708s (Max:     0.023s)
    Model enumeration time:              0.110s
    Time for BDD construction:           0.071s (Max:     0.008s)
Time for merge operator:                 6.860s
Time for coverage check:                 1.126s
  Time for BDD entailment checks:        0.781s
Total time for SMT solver (w/o itp):     1.818s

Number of path formula cache hits:   21418701 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    63.083s

Total number of created targets for pointer analysis: 1940
   Number of created targets for uf: *unsigned_char is 545
   Number of created targets for uf: *unsigned_int is 129


Number of BDD nodes:                               255
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3699 (count: 1193483, min: 0, max: 268, avg: 0.00)
Time for BDD node cleanup:                             0.199s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 26.902s
  Time for transition matches:                        14.489s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                     18988931 (count: 18988931, min: 1, max: 1, avg: 1.00) [1 x 18988931]

CPA algorithm statistics
------------------------
Number of iterations:            12514203
Max size of waitlist:            76
Average size of waitlist:        46
Number of computed successors:   14543571
Max successors for one state:    2
Number of times merged:          1295492
Number of times stopped:         1959098
Number of times breaked:         145

Total time for CPA algorithm:       846.757s (Max:    42.088s)
  Time for choose from waitlist:      5.770s
  Time for precision adjustment:    424.257s
  Time for transfer relation:       310.355s
  Time for merge operator:           26.762s
  Time for stop operator:            17.199s
  Time for adding to reached set:    22.846s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   145
Avg. length of target path (in blocks):                7519 (count: 145, min: 24, max: 73, avg: 51.86)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  33.129s
  Counterexample analysis:                             2.314s (Max:     0.038s, Calls: 145)
    Refinement sat check:                              1.602s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.082s
  Precision update:                                    0.088s
  ARG update:                                         30.553s

Length of refined path (in blocks):                    5533 (count: 145, min: 10, max: 61, avg: 38.16)
Number of affected states:                             4492 (count: 145, min: 0, max: 60, avg: 30.98)
Length (states) of path with itp 'true':                896 (count: 145, min: 0, max: 37, avg: 6.18)
Length (states) of path with itp non-trivial itp:      4492 (count: 145, min: 0, max: 60, avg: 30.98)
Length (states) of path with itp 'false':               145 (count: 145, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           6 (count: 145, min: 0, max: 1, avg: 0.04)
Equal non-trivial interpolants along paths:            4342 (count: 145, min: 0, max: 59, avg: 29.94)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                145
Number of successful refinements:     145
Number of failed refinements:         0
Max. size of reached set before ref.: 890521
Max. size of reached set after ref.:  592605
Avg. size of reached set before ref.: 111791.98
Avg. size of reached set after ref.:  26436.39

Total time for CEGAR algorithm:     894.631s
Time for refinements:                44.704s
Average time for refinement:          0.308s
Max time for refinement:              3.437s

Code Coverage
-----------------------------
  Function coverage:      0.736
  Visited lines:          2234
  Total lines:            2459
  Line coverage:          0.908
  Visited conditions:     542
  Total conditions:       596
  Condition coverage:     0.909

CPAchecker general statistics
-----------------------------
Number of program locations:     3315
Number of CFA edges:             3699
Number of relevant variables:    439
Number of functions:             110
Number of loops:                 12
Size of reached set:             143084
  Number of reached locations:   1355 (41%)
    Avg states per location:     105
    Max states per location:     3335 (at node N346)
  Number of reached functions:   81 (74%)
  Number of partitions:          142834
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2370 (before line 6752), Function main called from node N2351, stack depth 1 [36dfbdaf], stack [main]])
  Number of target states:       0
  Size of final wait list        53

Time for analysis setup:          5.619s
  Time for loading CPAs:          0.990s
  Time for loading parser:        0.729s
  Time for CFA construction:      3.740s
    Time for parsing file(s):     1.060s
    Time for AST to CFA:          1.215s
    Time for CFA sanity check:    0.291s
    Time for post-processing:     0.986s
      Time for var class.:        0.424s
Time for Analysis:              894.631s
CPU time for analysis:          894.590s
Total time for CPAchecker:      900.258s
Total CPU time for CPAchecker:  900.210s
Time for statistics:              1.638s

Time for Garbage Collector:     126.026s (in 794 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2697MB (  2572 MiB) max;    967MB (   922 MiB) avg;   2743MB (  2616 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     38MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          2746MB (  2619 MiB) max;   1461MB (  1393 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8084MB (  7709 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
