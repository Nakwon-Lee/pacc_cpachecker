scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--mmc--host--rtsx_pci_sdmmc.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_an2q84qu/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5997: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_dma_unmap_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_start_run to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_exist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_dma_map_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_exclusive_check to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_add_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_send_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_power_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_pull_ctl_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_power_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_write_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_switch_clock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_switch_output_voltage to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_read_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_free_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_complete_unfinished_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_request_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_alloc_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_add_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_read_ppbuf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_copy_to_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_send_cmd_no_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_dma_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_copy_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4058491 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4042695 (100%)
  Because of loop head:            15647 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         149 (0%)
  Times precision was empty:       1033345 (25%)
  Times precision was {false}:     1244 (0%)
  Times result was cached:         3023041 (74%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      861 (0%)
  Times result was 'false':        46560 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         4132274
  BDD entailment checks:           812540
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       33
Number of predicates discovered:          8
Number of abstraction locations:          157
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         3102896
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 1474.06
Number of irrelevant predicates:          430194 (14%)
Number of preds handled by boolean abs:   1212 (0%)
  Total number of models for allsat:      1196
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.39

Time for post operator:                 82.343s
  Time for path formula creation:       69.227s
Time for strengthen operator:           21.450s
Time for prec operator:                257.643s
  Time for abstraction:                217.836s (Max:     1.378s, Count: 4058491)
    Boolean abstraction:                 0.767s
    Solving time:                        1.196s (Max:     0.013s)
    Model enumeration time:              0.091s
    Time for BDD construction:           0.052s (Max:     0.008s)
Time for merge operator:                 7.116s
Time for coverage check:                 1.195s
  Time for BDD entailment checks:        0.734s
Total time for SMT solver (w/o itp):     1.287s

Number of path formula cache hits:   32663750 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    16.559s

Total number of created targets for pointer analysis: 2436
   Number of created targets for uf: *(void)* is 49
   Number of created targets for uf: *unsigned_int is 233


Number of BDD nodes:                               328
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1828 (count: 1864499, min: 0, max: 130, avg: 0.00)
Time for BDD node cleanup:                             0.302s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 36.716s
  Time for transition matches:                        18.667s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     27355381 (count: 27355381, min: 1, max: 1, avg: 1.00) [1 x 27355381]

CPA algorithm statistics
------------------------
Number of iterations:            16062450
Max size of waitlist:            5234
Average size of waitlist:        1788
Number of computed successors:   18674107
Max successors for one state:    2
Number of times merged:          1659867
Number of times stopped:         2405445
Number of times breaked:         149

Total time for CPA algorithm:       832.109s (Max:    34.451s)
  Time for choose from waitlist:      7.024s
  Time for precision adjustment:    391.444s
  Time for transfer relation:       321.863s
  Time for merge operator:           25.504s
  Time for stop operator:            17.931s
  Time for adding to reached set:    29.949s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   149
Avg. length of target path (in blocks):                7936 (count: 149, min: 24, max: 72, avg: 53.26)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  46.353s
  Counterexample analysis:                             2.369s (Max:     0.037s, Calls: 149)
    Refinement sat check:                              1.578s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.071s
  Precision update:                                    0.069s
  ARG update:                                         43.713s

Length of refined path (in blocks):                    5941 (count: 149, min: 10, max: 71, avg: 39.87)
Number of affected states:                             3375 (count: 149, min: 1, max: 70, avg: 22.65)
Length (states) of path with itp 'true':               2417 (count: 149, min: 0, max: 43, avg: 16.22)
Length (states) of path with itp non-trivial itp:      3375 (count: 149, min: 1, max: 70, avg: 22.65)
Length (states) of path with itp 'false':               149 (count: 149, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          52 (count: 149, min: 0, max: 1, avg: 0.35)
Equal non-trivial interpolants along paths:            3174 (count: 149, min: 0, max: 69, avg: 21.30)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                149
Number of successful refinements:     149
Number of failed refinements:         0
Max. size of reached set before ref.: 609000
Max. size of reached set after ref.:  122393
Avg. size of reached set before ref.: 129890.03
Avg. size of reached set after ref.:  24262.85

Total time for CEGAR algorithm:     894.062s
Time for refinements:                58.961s
Average time for refinement:          0.395s
Max time for refinement:              2.299s

Code Coverage
-----------------------------
  Function coverage:      0.745
  Visited lines:          2110
  Total lines:            2459
  Line coverage:          0.858
  Visited conditions:     498
  Total conditions:       596
  Condition coverage:     0.836

CPAchecker general statistics
-----------------------------
Number of program locations:     3315
Number of CFA edges:             3699
Number of relevant variables:    439
Number of functions:             110
Number of loops:                 12
Size of reached set:             483651
  Number of reached locations:   1256 (38%)
    Avg states per location:     385
    Max states per location:     9936 (at node N91)
  Number of reached functions:   82 (75%)
  Number of partitions:          483607
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N2370 (before line 6752), Function main called from node N2351, stack depth 1 [36dfbdaf], stack [main]])
  Number of target states:       0
  Size of final wait list        4080

Time for analysis setup:          6.045s
  Time for loading CPAs:          0.953s
  Time for loading parser:        1.027s
  Time for CFA construction:      3.872s
    Time for parsing file(s):     1.058s
    Time for AST to CFA:          1.227s
    Time for CFA sanity check:    0.260s
    Time for post-processing:     0.991s
      Time for var class.:        0.424s
Time for Analysis:              894.062s
CPU time for analysis:          894.010s
Total time for CPAchecker:      900.113s
Total CPU time for CPAchecker:  900.050s
Time for statistics:              3.726s

Time for Garbage Collector:     152.291s (in 1526 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                907MB (   865 MiB) max;    417MB (   398 MiB) avg;    935MB (   892 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           922MB (   880 MiB) max;    653MB (   623 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8083MB (  7708 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
