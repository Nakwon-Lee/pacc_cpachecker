scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--mmc--host--rtsx_pci_sdmmc.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ugrqj8tz/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5997: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_dma_unmap_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_start_run to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_exist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_dma_map_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_exclusive_check to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_add_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_send_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_power_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_pull_ctl_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_power_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_write_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_switch_clock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_switch_output_voltage to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_read_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_free_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_complete_unfinished_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_request_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_alloc_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_add_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_read_ppbuf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_copy_to_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_send_cmd_no_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_dma_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_copy_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            28368 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  26697 (94%)
  Because of loop head:            1659 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (0%)
  Times precision was empty:       19934 (70%)
  Times precision was {false}:     350 (1%)
  Times result was cached:         7979 (28%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      105 (0%)
  Times result was 'false':        113 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         39431
  BDD entailment checks:           6523
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       33
Number of predicates discovered:          4
Number of abstraction locations:          66
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         11719
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 25.76
Number of irrelevant predicates:          10313 (88%)
Number of preds handled by boolean abs:   126 (1%)
  Total number of models for allsat:      107
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.02

Time for post operator:                  8.361s
  Time for path formula creation:        8.125s
Time for strengthen operator:            0.376s
Time for prec operator:                  4.133s
  Time for abstraction:                  3.337s (Max:     0.186s, Count: 28368)
    Boolean abstraction:                 0.202s
    Solving time:                        0.363s (Max:     0.013s)
    Model enumeration time:              0.033s
    Time for BDD construction:           0.006s (Max:     0.001s)
Time for merge operator:                 0.492s
Time for coverage check:                 0.082s
  Time for BDD entailment checks:        0.070s
Total time for SMT solver (w/o itp):     0.396s

Number of path formula cache hits:   168047 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.492s

Total number of created targets for pointer analysis: 520
   Number of created targets for uf: *(void)* is 5
   Number of created targets for uf: *unsigned_int is 49


Number of BDD nodes:                               216
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         230 (count: 28863, min: 0, max: 34, avg: 0.01)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.805s
  Time for transition matches:                         0.368s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       194571 (count: 194571, min: 1, max: 1, avg: 1.00) [1 x 194571]

CPA algorithm statistics
------------------------
Number of iterations:            120151
Max size of waitlist:            368
Average size of waitlist:        124
Number of computed successors:   146580
Max successors for one state:    2
Number of times merged:          16454
Number of times stopped:         22313
Number of times breaked:         12

Total time for CPA algorithm:        23.455s (Max:     4.003s)
  Time for choose from waitlist:      0.285s
  Time for precision adjustment:      6.225s
  Time for transfer relation:        13.176s
  Time for merge operator:            1.032s
  Time for stop operator:             0.545s
  Time for adding to reached set:     0.647s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                 587 (count: 12, min: 24, max: 62, avg: 48.92)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.866s
  Counterexample analysis:                             0.334s (Max:     0.038s, Calls: 12)
    Refinement sat check:                              0.208s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.015s
  ARG update:                                          0.465s

Length of refined path (in blocks):                     270 (count: 12, min: 10, max: 57, avg: 22.50)
Number of affected states:                              178 (count: 12, min: 1, max: 56, avg: 14.83)
Length (states) of path with itp 'true':                 80 (count: 12, min: 0, max: 8, avg: 6.67)
Length (states) of path with itp non-trivial itp:       178 (count: 12, min: 1, max: 56, avg: 14.83)
Length (states) of path with itp 'false':                12 (count: 12, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 12, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             166 (count: 12, min: 0, max: 55, avg: 13.83)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 12283
Max. size of reached set after ref.:  20
Avg. size of reached set before ref.: 9869.42
Avg. size of reached set after ref.:  17.17

Total time for CEGAR algorithm:      24.586s
Time for refinements:                 1.131s
Average time for refinement:          0.094s
Max time for refinement:              0.170s

Code Coverage
-----------------------------
  Function coverage:      0.673
  Visited lines:          1896
  Total lines:            2459
  Line coverage:          0.771
  Visited conditions:     440
  Total conditions:       596
  Condition coverage:     0.738

CPAchecker general statistics
-----------------------------
Number of program locations:     3315
Number of CFA edges:             3699
Number of relevant variables:    439
Number of functions:             110
Number of loops:                 12
Size of reached set:             5928
  Number of reached locations:   1072 (32%)
    Avg states per location:     5
    Max states per location:     89 (at node N91)
  Number of reached functions:   74 (67%)
  Number of partitions:          5900
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N2370 (before line 6752), Function main called from node N2351, stack depth 1 [36dfbdaf], stack [main]])
  Number of target states:       0
  Size of final wait list        71

Time for analysis setup:          5.665s
  Time for loading CPAs:          1.047s
  Time for loading parser:        0.670s
  Time for CFA construction:      3.791s
    Time for parsing file(s):     1.017s
    Time for AST to CFA:          1.237s
    Time for CFA sanity check:    0.285s
    Time for post-processing:     1.052s
      Time for var class.:        0.449s
Time for Analysis:               24.586s
CPU time for analysis:           24.590s
Total time for CPAchecker:       30.263s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.197s

Time for Garbage Collector:       1.292s (in 58 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                124MB (   118 MiB) max;     63MB (    60 MiB) avg;    131MB (   125 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
