scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--mmc--host--rtsx_pci_sdmmc.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_j39_8o3z/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5997: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_request_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_exclusive_check to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_start_run to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_switch_clock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_write_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_add_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_send_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_dma_unmap_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_send_cmd_no_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_dma_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_copy_to_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_read_ppbuf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_copy_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_write_ppbuf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_exist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_power_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_pull_ctl_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_power_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_dma_map_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_switch_output_voltage to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_read_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_alloc_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_free_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_add_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_complete_unfinished_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2345192 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2207050 (94%)
  Because of loop head:            137893 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         249 (0%)
  Times precision was empty:       26600 (1%)
  Times precision was {false}:     2713 (0%)
  Times result was cached:         2311148 (99%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4731 (0%)
  Times result was 'false':        45938 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         2762828
  BDD entailment checks:           541768
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       33
Number of predicates discovered:          8
Number of abstraction locations:          289
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         6060160
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 814.10
Number of irrelevant predicates:          3481629 (57%)
Number of preds handled by boolean abs:   5952 (0%)
  Total number of models for allsat:      4660
  Max number of models for allsat:        4
  Avg number of models for allsat:        0.98

Time for post operator:                200.440s
  Time for path formula creation:      192.615s
Time for strengthen operator:           13.876s
Time for prec operator:                310.217s
  Time for abstraction:                279.589s (Max:     5.715s, Count: 2345192)
    Boolean abstraction:                 3.475s
    Solving time:                        4.190s (Max:     0.014s)
    Model enumeration time:              0.280s
    Time for BDD construction:           0.154s (Max:     0.010s)
Time for merge operator:                 9.690s
Time for coverage check:                 1.075s
  Time for BDD entailment checks:        0.781s
Total time for SMT solver (w/o itp):     4.470s

Number of path formula cache hits:   14803818 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   149.511s

Total number of created targets for pointer analysis: 19847
   Number of created targets for uf: *(void)* is 225
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *unsigned_char is 17003
   Number of created targets for uf: *unsigned_int is 233


Number of BDD nodes:                               250
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        9499 (count: 632060, min: 0, max: 513, avg: 0.02)
Time for BDD node cleanup:                             0.152s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 19.575s
  Time for transition matches:                         9.704s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                     15396161 (count: 15396161, min: 1, max: 1, avg: 1.00) [1 x 15396161]

CPA algorithm statistics
------------------------
Number of iterations:            10171631
Max size of waitlist:            108
Average size of waitlist:        40
Number of computed successors:   11875248
Max successors for one state:    2
Number of times merged:          1110530
Number of times stopped:         1644004
Number of times breaked:         249

Total time for CPA algorithm:       869.394s (Max:   250.655s)
  Time for choose from waitlist:      4.725s
  Time for precision adjustment:    411.652s
  Time for transfer relation:       362.908s
  Time for merge operator:           21.998s
  Time for stop operator:            14.149s
  Time for adding to reached set:    21.283s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   249
Avg. length of target path (in blocks):               15895 (count: 249, min: 24, max: 105, avg: 63.84)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  19.308s
  Counterexample analysis:                             4.848s (Max:     0.042s, Calls: 249)
    Refinement sat check:                              3.239s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.023s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.122s
  Precision update:                                    0.152s
  ARG update:                                         13.997s

Length of refined path (in blocks):                   11579 (count: 249, min: 10, max: 78, avg: 46.50)
Number of affected states:                             9584 (count: 249, min: 0, max: 77, avg: 38.49)
Length (states) of path with itp 'true':               1746 (count: 249, min: 0, max: 41, avg: 7.01)
Length (states) of path with itp non-trivial itp:      9584 (count: 249, min: 0, max: 77, avg: 38.49)
Length (states) of path with itp 'false':               249 (count: 249, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 249, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            9340 (count: 249, min: 0, max: 76, avg: 37.51)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                249
Number of successful refinements:     249
Number of failed refinements:         0
Max. size of reached set before ref.: 580201
Max. size of reached set after ref.:  28342
Avg. size of reached set before ref.: 31809.62
Avg. size of reached set after ref.:  4435.83

Total time for CEGAR algorithm:     894.519s
Time for refinements:                24.424s
Average time for refinement:          0.098s
Max time for refinement:              2.274s

Code Coverage
-----------------------------
  Function coverage:      0.809
  Visited lines:          2362
  Total lines:            2459
  Line coverage:          0.961
  Visited conditions:     570
  Total conditions:       596
  Condition coverage:     0.956

CPAchecker general statistics
-----------------------------
Number of program locations:     3315
Number of CFA edges:             3699
Number of relevant variables:    439
Number of functions:             110
Number of loops:                 12
Size of reached set:             3369232
  Size of final wait list        14

Time for analysis setup:          5.730s
  Time for loading CPAs:          1.058s
  Time for loading parser:        0.690s
  Time for CFA construction:      3.807s
    Time for parsing file(s):     1.078s
    Time for AST to CFA:          1.250s
    Time for CFA sanity check:    0.278s
    Time for post-processing:     1.016s
      Time for var class.:        0.450s
Time for Analysis:              894.519s
CPU time for analysis:          894.490s
Total time for CPAchecker:      900.261s
Total CPU time for CPAchecker:  900.220s
Time for statistics:             16.651s

Time for Garbage Collector:     112.099s (in 573 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               4976MB (  4745 MiB) max;   1390MB (  1326 MiB) avg;   5163MB (  4923 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          5414MB (  5163 MiB) max;   2018MB (  1925 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8084MB (  7710 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
