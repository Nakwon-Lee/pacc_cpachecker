scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--mmc--host--rtsx_pci_sdmmc.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_01w026ir/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5997: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_dma_unmap_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_dma_map_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_start_run to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_exist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_request_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_exclusive_check to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_switch_clock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_write_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_add_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_send_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_send_cmd_no_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_dma_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_copy_to_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_write_ppbuf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_read_ppbuf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_copy_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_power_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_pull_ctl_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_power_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_switch_output_voltage to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_read_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_alloc_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_free_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_add_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            30606 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  28450 (93%)
  Because of loop head:            2150 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6 (0%)
  Times precision was empty:       29475 (96%)
  Times precision was {false}:     136 (0%)
  Times result was cached:         929 (3%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      66 (0%)
  Times result was 'false':        48 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         35938
  BDD entailment checks:           7626
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       33
Number of predicates discovered:          3
Number of abstraction locations:          26
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         1236
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 6.12
Number of irrelevant predicates:          765 (62%)
Number of preds handled by boolean abs:   72 (6%)
  Total number of models for allsat:      67
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  9.867s
  Time for path formula creation:        9.542s
Time for strengthen operator:            0.449s
Time for prec operator:                  2.132s
  Time for abstraction:                  1.285s (Max:     0.036s, Count: 30606)
    Boolean abstraction:                 0.110s
    Solving time:                        0.160s (Max:     0.012s)
    Model enumeration time:              0.006s
    Time for BDD construction:           0.004s (Max:     0.001s)
Time for merge operator:                 0.452s
Time for coverage check:                 0.084s
  Time for BDD entailment checks:        0.073s
Total time for SMT solver (w/o itp):     0.166s

Number of path formula cache hits:   172094 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.756s

Total number of created targets for pointer analysis: 88
   Number of created targets for uf: *unsigned_int is 9


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         135 (count: 38189, min: 0, max: 51, avg: 0.00)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.796s
  Time for transition matches:                         0.330s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       203735 (count: 203735, min: 1, max: 1, avg: 1.00) [1 x 203735]

CPA algorithm statistics
------------------------
Number of iterations:            132642
Max size of waitlist:            37
Average size of waitlist:        21
Number of computed successors:   154439
Max successors for one state:    2
Number of times merged:          14156
Number of times stopped:         21645
Number of times breaked:         6

Total time for CPA algorithm:        23.275s (Max:     6.320s)
  Time for choose from waitlist:      0.252s
  Time for precision adjustment:      4.556s
  Time for transfer relation:        14.772s
  Time for merge operator:            1.027s
  Time for stop operator:             0.622s
  Time for adding to reached set:     0.564s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                 184 (count: 6, min: 24, max: 38, avg: 30.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.803s
  Counterexample analysis:                             0.119s (Max:     0.027s, Calls: 6)
    Refinement sat check:                              0.075s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.023s
  Precision update:                                    0.016s
  ARG update:                                          0.635s

Length of refined path (in blocks):                     130 (count: 6, min: 10, max: 30, avg: 21.67)
Number of affected states:                              108 (count: 6, min: 1, max: 29, avg: 18.00)
Length (states) of path with itp 'true':                 16 (count: 6, min: 0, max: 8, avg: 2.67)
Length (states) of path with itp non-trivial itp:       108 (count: 6, min: 1, max: 29, avg: 18.00)
Length (states) of path with itp 'false':                 6 (count: 6, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             102 (count: 6, min: 0, max: 28, avg: 17.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 34540
Max. size of reached set after ref.:  20
Avg. size of reached set before ref.: 18769.83
Avg. size of reached set after ref.:  8.67

Total time for CEGAR algorithm:      24.364s
Time for refinements:                 1.089s
Average time for refinement:          0.181s
Max time for refinement:              0.374s

Code Coverage
-----------------------------
  Function coverage:      0.718
  Visited lines:          2245
  Total lines:            2459
  Line coverage:          0.913
  Visited conditions:     498
  Total conditions:       596
  Condition coverage:     0.836

CPAchecker general statistics
-----------------------------
Number of program locations:     3315
Number of CFA edges:             3699
Number of relevant variables:    439
Number of functions:             110
Number of loops:                 12
Size of reached set:             20180
  Number of reached locations:   1315 (40%)
    Avg states per location:     15
    Max states per location:     420 (at node N346)
  Number of reached functions:   79 (72%)
  Number of partitions:          20170
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2370 (before line 6752), Function main called from node N2351, stack depth 1 [36dfbdaf], stack [main]])
  Number of target states:       0
  Size of final wait list        13

Time for analysis setup:          5.383s
  Time for loading CPAs:          0.971s
  Time for loading parser:        0.636s
  Time for CFA construction:      3.633s
    Time for parsing file(s):     1.086s
    Time for AST to CFA:          1.198s
    Time for CFA sanity check:    0.235s
    Time for post-processing:     0.918s
      Time for var class.:        0.383s
Time for Analysis:               24.364s
CPU time for analysis:           24.360s
Total time for CPAchecker:       29.757s
Total CPU time for CPAchecker:   29.740s
Time for statistics:              0.500s

Time for Garbage Collector:       1.537s (in 53 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                135MB (   129 MiB) max;     69MB (    66 MiB) avg;    145MB (   138 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           150MB (   143 MiB) max;    132MB (   126 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
