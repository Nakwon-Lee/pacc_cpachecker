scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--mmc--host--rtsx_pci_sdmmc.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8fdug1bj/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5997: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_request_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_alloc_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_dma_unmap_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_start_run to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_exclusive_check to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_exist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_dma_map_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_switch_clock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_write_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_free_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_switch_output_voltage to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_read_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_add_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_send_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_pull_ctl_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_power_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_power_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_complete_unfinished_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_add_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_copy_to_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_send_cmd_no_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_dma_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_write_ppbuf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_read_ppbuf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_copy_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2854599 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2779905 (97%)
  Because of loop head:            74550 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         144 (0%)
  Times precision was empty:       730547 (26%)
  Times precision was {false}:     1760 (0%)
  Times result was cached:         2120661 (74%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1631 (0%)
  Times result was 'false':        89401 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         3654920
  BDD entailment checks:           535002
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       33
Number of predicates discovered:          10
Number of abstraction locations:          157
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         4747124
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 1399.92
Number of irrelevant predicates:          3381811 (71%)
Number of preds handled by boolean abs:   2139 (0%)
  Total number of models for allsat:      1748
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.07

Time for post operator:                114.266s
  Time for path formula creation:      102.800s
Time for strengthen operator:           18.255s
Time for prec operator:                240.575s
  Time for abstraction:                208.335s (Max:     1.625s, Count: 2854599)
    Boolean abstraction:                 1.341s
    Solving time:                        1.954s (Max:     0.013s)
    Model enumeration time:              0.140s
    Time for BDD construction:           0.071s (Max:     0.009s)
Time for merge operator:                 8.258s
Time for coverage check:                 0.974s
  Time for BDD entailment checks:        0.521s
Total time for SMT solver (w/o itp):     2.094s

Number of path formula cache hits:   27408972 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    45.817s

Total number of created targets for pointer analysis: 5316
   Number of created targets for uf: *(void)* is 77
   Number of created targets for uf: *unsigned_char is 937
   Number of created targets for uf: *unsigned_int is 77


Number of BDD nodes:                               323
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3361 (count: 1294988, min: 0, max: 205, avg: 0.00)
Time for BDD node cleanup:                             0.213s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 32.451s
  Time for transition matches:                        17.702s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                     24212545 (count: 24212545, min: 1, max: 1, avg: 1.00) [1 x 24212545]

CPA algorithm statistics
------------------------
Number of iterations:            12475583
Max size of waitlist:            22436
Average size of waitlist:        5039
Number of computed successors:   14935853
Max successors for one state:    2
Number of times merged:          1559959
Number of times stopped:         1999026
Number of times breaked:         144

Total time for CPA algorithm:       790.147s (Max:    26.624s)
  Time for choose from waitlist:      4.549s
  Time for precision adjustment:    359.850s
  Time for transfer relation:       332.188s
  Time for merge operator:           25.091s
  Time for stop operator:            15.735s
  Time for adding to reached set:    19.799s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   144
Avg. length of target path (in blocks):                6654 (count: 144, min: 24, max: 62, avg: 46.21)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  76.097s
  Counterexample analysis:                             2.018s (Max:     0.032s, Calls: 144)
    Refinement sat check:                              1.396s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.067s
  Precision update:                                    0.065s
  ARG update:                                         73.838s

Length of refined path (in blocks):                    4990 (count: 144, min: 10, max: 57, avg: 34.65)
Number of affected states:                             3100 (count: 144, min: 0, max: 56, avg: 21.53)
Length (states) of path with itp 'true':               1746 (count: 144, min: 0, max: 40, avg: 12.13)
Length (states) of path with itp non-trivial itp:      3100 (count: 144, min: 0, max: 56, avg: 21.53)
Length (states) of path with itp 'false':               144 (count: 144, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          18 (count: 144, min: 0, max: 1, avg: 0.13)
Equal non-trivial interpolants along paths:            2946 (count: 144, min: 0, max: 55, avg: 20.46)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                144
Number of successful refinements:     144
Number of failed refinements:         0
Max. size of reached set before ref.: 928515
Max. size of reached set after ref.:  749585
Avg. size of reached set before ref.: 162154.06
Avg. size of reached set after ref.:  74862.71

Total time for CEGAR algorithm:     895.121s
Time for refinements:                95.955s
Average time for refinement:          0.666s
Max time for refinement:             10.304s

Code Coverage
-----------------------------
  Function coverage:      0.809
  Visited lines:          2361
  Total lines:            2459
  Line coverage:          0.960
  Visited conditions:     570
  Total conditions:       596
  Condition coverage:     0.956

CPAchecker general statistics
-----------------------------
Number of program locations:     3315
Number of CFA edges:             3699
Number of relevant variables:    439
Number of functions:             110
Number of loops:                 12
Size of reached set:             277473
  Number of reached locations:   1465 (44%)
    Avg states per location:     189
    Max states per location:     6970 (at node N92)
  Number of reached functions:   89 (81%)
  Number of partitions:          277085
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N2370 (before line 6752), Function main called from node N2351, stack depth 1 [1a28aef1], stack [main]])
  Number of target states:       0
  Size of final wait list        8642

Time for analysis setup:          5.305s
  Time for loading CPAs:          0.912s
  Time for loading parser:        0.726s
  Time for CFA construction:      3.494s
    Time for parsing file(s):     1.028s
    Time for AST to CFA:          1.177s
    Time for CFA sanity check:    0.235s
    Time for post-processing:     0.863s
      Time for var class.:        0.434s
Time for Analysis:              895.121s
CPU time for analysis:          895.080s
Total time for CPAchecker:      900.429s
Total CPU time for CPAchecker:  900.380s
Time for statistics:              2.424s

Time for Garbage Collector:     128.203s (in 913 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1559MB (  1486 MiB) max;    712MB (   679 MiB) avg;   1608MB (  1534 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1596MB (  1522 MiB) max;   1077MB (  1027 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8018MB (  7646 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
