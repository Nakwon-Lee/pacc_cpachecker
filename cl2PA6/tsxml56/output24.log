scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--mmc--host--rtsx_pci_sdmmc.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_li4iet2y/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5997: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_alloc_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_dma_unmap_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_start_run to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_exclusive_check to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_exist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_request_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_free_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_switch_output_voltage to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_write_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_dma_map_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_read_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_add_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_send_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_read_ppbuf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_switch_clock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_pull_ctl_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_power_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_card_power_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtsx_pci_complete_unfinished_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_add_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_copy_to_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            28883 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  28013 (97%)
  Because of loop head:            867 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3 (0%)
  Times precision was empty:       23998 (83%)
  Times precision was {false}:     57 (0%)
  Times result was cached:         4788 (17%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      40 (0%)
  Times result was 'false':        12 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         28386
  BDD entailment checks:           6734
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       33
Number of predicates discovered:          3
Number of abstraction locations:          23
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         4918
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 50.70
Number of irrelevant predicates:          4747 (97%)
Number of preds handled by boolean abs:   43 (1%)
  Total number of models for allsat:      46
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.15

Time for post operator:                  8.008s
  Time for path formula creation:        7.686s
Time for strengthen operator:            0.465s
Time for prec operator:                  2.780s
  Time for abstraction:                  1.887s (Max:     0.036s, Count: 28883)
    Boolean abstraction:                 0.067s
    Solving time:                        0.106s (Max:     0.014s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.402s
Time for coverage check:                 0.117s
  Time for BDD entailment checks:        0.090s
Total time for SMT solver (w/o itp):     0.109s

Number of path formula cache hits:   246245 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.795s

Total number of created targets for pointer analysis: 154
   Number of created targets for uf: *unsigned_int is 15


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          91 (count: 31268, min: 0, max: 31, avg: 0.00)
Time for BDD node cleanup:                             0.035s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.019s
  Time for transition matches:                         0.495s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       260576 (count: 260576, min: 1, max: 1, avg: 1.00) [1 x 260576]

CPA algorithm statistics
------------------------
Number of iterations:            120897
Max size of waitlist:            2341
Average size of waitlist:        1060
Number of computed successors:   144581
Max successors for one state:    2
Number of times merged:          10826
Number of times stopped:         17493
Number of times breaked:         3

Total time for CPA algorithm:        23.463s (Max:     9.670s)
  Time for choose from waitlist:      0.212s
  Time for precision adjustment:      5.502s
  Time for transfer relation:        14.063s
  Time for merge operator:            0.914s
  Time for stop operator:             0.616s
  Time for adding to reached set:     0.496s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                  78 (count: 3, min: 24, max: 27, avg: 26.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.701s
  Counterexample analysis:                             0.035s (Max:     0.016s, Calls: 3)
    Refinement sat check:                              0.023s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.005s
  ARG update:                                          0.637s

Length of refined path (in blocks):                      59 (count: 3, min: 10, max: 26, avg: 19.67)
Number of affected states:                               48 (count: 3, min: 1, max: 25, avg: 16.00)
Length (states) of path with itp 'true':                  8 (count: 3, min: 0, max: 8, avg: 2.67)
Length (states) of path with itp non-trivial itp:        48 (count: 3, min: 1, max: 25, avg: 16.00)
Length (states) of path with itp 'false':                 3 (count: 3, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              45 (count: 3, min: 0, max: 24, avg: 15.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 48152
Max. size of reached set after ref.:  20
Avg. size of reached set before ref.: 41168.00
Avg. size of reached set after ref.:  8.67

Total time for CEGAR algorithm:      24.358s
Time for refinements:                 0.895s
Average time for refinement:          0.298s
Max time for refinement:              0.359s

Code Coverage
-----------------------------
  Function coverage:      0.509
  Visited lines:          1545
  Total lines:            2459
  Line coverage:          0.628
  Visited conditions:     284
  Total conditions:       596
  Condition coverage:     0.477

CPAchecker general statistics
-----------------------------
Number of program locations:     3315
Number of CFA edges:             3699
Number of relevant variables:    439
Number of functions:             110
Number of loops:                 12
Size of reached set:             3598
  Number of reached locations:   723 (22%)
    Avg states per location:     4
    Max states per location:     79 (at node N92)
  Number of reached functions:   56 (51%)
  Number of partitions:          3595
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2370 (before line 6752), Function main called from node N2351, stack depth 1 [36dfbdaf], stack [main]])
  Number of target states:       0
  Size of final wait list        107

Time for analysis setup:          5.438s
  Time for loading CPAs:          0.968s
  Time for loading parser:        0.701s
  Time for CFA construction:      3.574s
    Time for parsing file(s):     0.982s
    Time for AST to CFA:          1.224s
    Time for CFA sanity check:    0.245s
    Time for post-processing:     0.918s
      Time for var class.:        0.438s
Time for Analysis:               24.358s
CPU time for analysis:           24.350s
Total time for CPAchecker:       29.801s
Total CPU time for CPAchecker:   29.770s
Time for statistics:              0.155s

Time for Garbage Collector:       1.496s (in 58 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                124MB (   119 MiB) max;     64MB (    61 MiB) avg;    130MB (   124 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
